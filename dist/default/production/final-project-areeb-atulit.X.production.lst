

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 14 21:11:45 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73   000000                     
    74                           ; Generated 06/04/2022 GMT
    75                           ; 
    76                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    77                           ; All rights reserved.
    78                           ; 
    79                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    80                           ; 
    81                           ; Redistribution and use in source and binary forms, with or without modification, are
    82                           ; permitted provided that the following conditions are met:
    83                           ; 
    84                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    85                           ;        conditions and the following disclaimer.
    86                           ; 
    87                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    88                           ;        of conditions and the following disclaimer in the documentation and/or other
    89                           ;        materials provided with the distribution. Publication is not required when
    90                           ;        this file is used in an embedded application.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F67K40 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108   000000                     
   109                           	psect	idataBANK0
   110   003734                     __pidataBANK0:
   111                           	callstack 0
   112                           
   113                           ;initializer for _upperThreshold
   114   003734  07D0               	dw	2000
   115   000000                     _TRISCbits	set	3971
   116   000000                     _TRISBbits	set	3970
   117   000000                     _TX4REG	set	3812
   118   000000                     _RC4STAbits	set	3815
   119   000000                     _SP4BRGH	set	3814
   120   000000                     _TRISFbits	set	3974
   121   000000                     _TRISDbits	set	3972
   122   000000                     _LATFbits	set	3966
   123   000000                     _LATHbits	set	3968
   124   000000                     _TRISAbits	set	3969
   125   000000                     _TRISEbits	set	3973
   126   000000                     _SSP2CON2bits	set	3802
   127   000000                     _RX4PPS	set	3605
   128   000000                     _SSP2CLKPPS	set	3612
   129   000000                     _SSP2DATPPS	set	3613
   130   000000                     _ANSELDbits	set	3751
   131   000000                     _SSP2ADD	set	3798
   132   000000                     _SSP2CON1bits	set	3801
   133   000000                     _LATAbits	set	3961
   134   000000                     _LATEbits	set	3965
   135   000000                     _LATGbits	set	3967
   136   000000                     _TRISGbits	set	3975
   137   000000                     _PORTFbits	set	3982
   138   000000                     _TRISHbits	set	3976
   139   000000                     _LATDbits	set	3964
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _ANSELFbits	set	3764
   147   000000                     _SSP2BUF	set	3797
   148   000000                     _IPR0bits	set	3615
   149   000000                     _PIE0bits	set	3625
   150   000000                     _PIE4bits	set	3629
   151   000000                     _RC0PPS	set	3682
   152   000000                     _RD5PPS	set	3695
   153   000000                     _RE2PPS	set	3700
   154   000000                     _ANSELBbits	set	3738
   155   000000                     _RD6PPS	set	3696
   156   000000                     _T2PR	set	4028
   157   000000                     _T2CONbits	set	4029
   158   000000                     _TMR0L	set	4051
   159   000000                     _TMR0H	set	4052
   160   000000                     _T0CON0bits	set	4053
   161   000000                     _T0CON1bits	set	4054
   162   000000                     _INTCONbits	set	4082
   163   000000                     _CCPR2H	set	4006
   164   000000                     _CCPR1H	set	4010
   165   000000                     _RC7PPS	set	3689
   166   000000                     _CCPR4H	set	3873
   167   000000                     _CCPR3H	set	3877
   168   000000                     _PIR0bits	set	3635
   169   000000                     _PIR4bits	set	3639
   170   000000                     _RE4PPS	set	3702
   171   000000                     _RG6PPS	set	3720
   172   000000                     _T2CLKCONbits	set	4031
   173   000000                     _T2HLTbits	set	4030
   174   000000                     _CCP1CONbits	set	4011
   175   000000                     _CCPTMRS0bits	set	4013
   176   000000                     _CCP2CONbits	set	4007
   177   000000                     _CCP3CONbits	set	3878
   178   000000                     _CCP4CONbits	set	3874
   179                           
   180                           	psect	smallconst
   181   000E00                     __psmallconst:
   182                           	callstack 0
   183   000E00  00                 	db	0
   184   000E01                     
   185                           ; BSR set to: 14
   186   000E01  52                 	db	82	;'R'
   187   000E02  47                 	db	71	;'G'
   188   000E03  42                 	db	66	;'B'
   189   000E04  43                 	db	67	;'C'
   190   000E05  3A                 	db	58	;':'
   191   000E06  25                 	db	37
   192   000E07  66                 	db	102	;'f'
   193   000E08  20                 	db	32
   194   000E09  25                 	db	37
   195   000E0A  66                 	db	102	;'f'
   196   000E0B  20                 	db	32
   197   000E0C  25                 	db	37
   198   000E0D  66                 	db	102	;'f'
   199   000E0E  20                 	db	32
   200   000E0F  25                 	db	37
   201   000E10  66                 	db	102	;'f'
   202   000E11  20                 	db	32
   203   000E12  25                 	db	37
   204   000E13  66                 	db	102	;'f'
   205   000E14  0A                 	db	10
   206   000E15  00                 	db	0
   207   000E16  00                 	db	0	; dummy byte at the end
   208   000000                     
   209                           ; #config settings
   210                           
   211                           	psect	cinit
   212   003402                     __pcinit:
   213                           	callstack 0
   214   003402                     start_initialization:
   215                           	callstack 0
   216   003402                     __initialization:
   217                           	callstack 0
   218                           
   219                           ; Initialize objects allocated to BANK0 (2 bytes)
   220                           ; load TBLPTR registers with __pidataBANK0
   221   003402  0E34               	movlw	low __pidataBANK0
   222   003404  6EF6               	movwf	tblptrl,c
   223   003406  0E37               	movlw	high __pidataBANK0
   224   003408  6EF7               	movwf	tblptrh,c
   225   00340A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   226   00340C  6EF8               	movwf	tblptru,c
   227   00340E  0009               	tblrd		*+	;fetch initializer
   228   003410  CFF5 F0EC          	movff	tablat,__pdataBANK0
   229   003414  0009               	tblrd		*+	;fetch initializer
   230   003416  CFF5 F0ED          	movff	tablat,__pdataBANK0+1
   231                           
   232                           ; Clear objects allocated to BANK1 (60 bytes)
   233   00341A  EE01  F000         	lfsr	0,__pbssBANK1
   234   00341E  0E3C               	movlw	60
   235   003420                     clear_0:
   236   003420  6AEE               	clrf	postinc0,c
   237   003422  06E8               	decf	wreg,f,c
   238   003424  E1FD               	bnz	clear_0
   239                           
   240                           ; Clear objects allocated to BANK0 (56 bytes)
   241   003426  EE00  F0B4         	lfsr	0,__pbssBANK0
   242   00342A  0E38               	movlw	56
   243   00342C                     clear_1:
   244   00342C  6AEE               	clrf	postinc0,c
   245   00342E  06E8               	decf	wreg,f,c
   246   003430  E1FD               	bnz	clear_1
   247                           
   248                           ; Clear objects allocated to COMRAM (22 bytes)
   249   003432  EE00  F041         	lfsr	0,__pbssCOMRAM
   250   003436  0E16               	movlw	22
   251   003438                     clear_2:
   252   003438  6AEE               	clrf	postinc0,c
   253   00343A  06E8               	decf	wreg,f,c
   254   00343C  E1FD               	bnz	clear_2
   255   00343E                     end_of_initialization:
   256                           	callstack 0
   257   00343E                     __end_of__initialization:
   258                           	callstack 0
   259   00343E  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260   003440  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261   003442  0E00               	movlw	low (__Lsmallconst shr (0+16))
   262   003444  6EF8               	movwf	tblptru,c
   263   003446  0E0E               	movlw	high __Lsmallconst
   264   003448  6EF7               	movwf	tblptrh,c
   265   00344A  0100               	movlb	0
   266   00344C  EF56  F00D         	goto	_main	;jump to C main() function
   267                           
   268                           	psect	bssCOMRAM
   269   000041                     __pbssCOMRAM:
   270                           	callstack 0
   271   000041                     _CR3L:
   272                           	callstack 0
   273   000041                     	ds	4
   274   000045                     _CR2U:
   275                           	callstack 0
   276   000045                     	ds	4
   277   000049                     _CR1L:
   278                           	callstack 0
   279   000049                     	ds	4
   280   00004D                     _amb_clear:
   281                           	callstack 0
   282   00004D                     	ds	2
   283   00004F                     _lost_ctr:
   284                           	callstack 0
   285   00004F                     	ds	2
   286   000051                     _buggy_step:
   287                           	callstack 0
   288   000051                     	ds	2
   289   000053                     _TxBufReadCnt:
   290                           	callstack 0
   291   000053                     	ds	1
   292   000054                     _TxBufWriteCnt:
   293                           	callstack 0
   294   000054                     	ds	1
   295   000055                     _RxBufReadCnt:
   296                           	callstack 0
   297   000055                     	ds	1
   298   000056                     _RxBufWriteCnt:
   299                           	callstack 0
   300   000056                     	ds	1
   301                           
   302                           	psect	bssBANK0
   303   0000B4                     __pbssBANK0:
   304                           	callstack 0
   305   0000B4                     _EUSART4RXbuf:
   306                           	callstack 0
   307   0000B4                     	ds	20
   308   0000C8                     _CR3U:
   309                           	callstack 0
   310   0000C8                     	ds	4
   311   0000CC                     _CR2L:
   312                           	callstack 0
   313   0000CC                     	ds	4
   314   0000D0                     _lowerThreshold:
   315                           	callstack 0
   316   0000D0                     	ds	2
   317   0000D2                     _amb_blue:
   318                           	callstack 0
   319   0000D2                     	ds	2
   320   0000D4                     _amb_green:
   321                           	callstack 0
   322   0000D4                     	ds	2
   323   0000D6                     _amb_red:
   324                           	callstack 0
   325   0000D6                     	ds	2
   326   0000D8                     _interrupt_ctr:
   327                           	callstack 0
   328   0000D8                     	ds	2
   329   0000DA                     _interrupt_flag:
   330                           	callstack 0
   331   0000DA                     	ds	2
   332   0000DC                     _motor_return:
   333                           	callstack 0
   334   0000DC                     	ds	1
   335   0000DD                     _buggy_path:
   336                           	callstack 0
   337   0000DD                     	ds	15
   338                           
   339                           	psect	dataBANK0
   340   0000EC                     __pdataBANK0:
   341                           	callstack 0
   342   0000EC                     _upperThreshold:
   343                           	callstack 0
   344   0000EC                     	ds	2
   345                           
   346                           	psect	bssBANK1
   347   000100                     __pbssBANK1:
   348                           	callstack 0
   349   000100                     _EUSART4TXbuf:
   350                           	callstack 0
   351   000100                     	ds	60
   352                           
   353                           	psect	cstackBANK0
   354   000060                     __pcstackBANK0:
   355                           	callstack 0
   356   000060                     ??_rangeCalibrate:
   357                           
   358                           ; 1 bytes @ 0x0
   359   000060                     	ds	2
   360   000062                     rangeCalibrate@temp:
   361                           	callstack 0
   362                           
   363                           ; 4 bytes @ 0x2
   364   000062                     	ds	4
   365   000066                     ??_main:
   366                           
   367                           ; 1 bytes @ 0x6
   368   000066                     	ds	2
   369   000068                     main@clearArr:
   370                           	callstack 0
   371                           
   372                           ; 24 bytes @ 0x8
   373   000068                     	ds	24
   374   000080                     main@a:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x20
   378   000080                     	ds	2
   379   000082                     main@RGBC:
   380                           	callstack 0
   381                           
   382                           ; 32 bytes @ 0x22
   383   000082                     	ds	32
   384   0000A2                     main@mL:
   385                           	callstack 0
   386                           
   387                           ; 9 bytes @ 0x42
   388   0000A2                     	ds	9
   389   0000AB                     main@mR:
   390                           	callstack 0
   391                           
   392                           ; 9 bytes @ 0x4B
   393   0000AB                     	ds	9
   394                           
   395                           	psect	cstackCOMRAM
   396   000001                     __pcstackCOMRAM:
   397                           	callstack 0
   398   000001                     ??i2_I2C_2_Master_Idle:
   399   000001                     
   400                           ; 1 bytes @ 0x0
   401   000001                     	ds	1
   402   000002                     i2I2C_2_Master_Write@data_byte:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x1
   406   000002                     	ds	1
   407   000003                     i2color_writetoaddr@value:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0x2
   411   000003                     	ds	1
   412   000004                     i2color_writetoaddr@address:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x3
   416   000004                     	ds	1
   417   000005                     ??i2_Color_Interrupts_init:
   418   000005                     i2Color_Interrupts_threshold@upperThreshold:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x4
   422   000005                     	ds	2
   423   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x6
   427   000007                     	ds	2
   428   000009                     ??_I2C_2_Master_Idle:
   429   000009                     ?___wmul:
   430                           	callstack 0
   431   000009                     initDCmotorsPWM@PWMperiod:
   432                           	callstack 0
   433   000009                     motorLinit@mL:
   434                           	callstack 0
   435   000009                     motorRinit@mR:
   436                           	callstack 0
   437   000009                     motorTRIS@mL:
   438                           	callstack 0
   439   000009                     ___wmul@multiplier:
   440                           	callstack 0
   441   000009                     ___flge@ff1:
   442                           	callstack 0
   443                           
   444                           ; 4 bytes @ 0x8
   445   000009                     	ds	1
   446   00000A                     ??_I2C_2_Master_Read:
   447   00000A                     I2C_2_Master_Write@data_byte:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x9
   451   00000A                     	ds	1
   452   00000B                     color_writetoaddr@value:
   453                           	callstack 0
   454   00000B                     I2C_2_Master_Read@ack:
   455                           	callstack 0
   456   00000B                     motorTRIS@mR:
   457                           	callstack 0
   458   00000B                     ___wmul@multiplicand:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xA
   462   00000B                     	ds	1
   463   00000C                     color_writetoaddr@address:
   464                           	callstack 0
   465   00000C                     I2C_2_Master_Read@tmp:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0xB
   469   00000C                     	ds	1
   470   00000D                     ??_Color_Interrupts_init:
   471   00000D                     ??_color_click_init:
   472   00000D                     ?_color_read_Red:
   473                           	callstack 0
   474   00000D                     ?_color_read_Green:
   475                           	callstack 0
   476   00000D                     ?_color_read_Blue:
   477                           	callstack 0
   478   00000D                     ?_color_read_Clear:
   479                           	callstack 0
   480   00000D                     Color_Interrupts_threshold@upperThreshold:
   481                           	callstack 0
   482   00000D                     ___wmul@product:
   483                           	callstack 0
   484   00000D                     ___flge@ff2:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0xC
   488   00000D                     	ds	2
   489   00000F                     ??_color_read_Red:
   490   00000F                     ??_color_read_Green:
   491   00000F                     ??_color_read_Blue:
   492   00000F                     ??_color_read_Clear:
   493   00000F                     ?___lwdiv:
   494                           	callstack 0
   495   00000F                     Color_Interrupts_threshold@lowerThreshold:
   496                           	callstack 0
   497   00000F                     ___lwdiv@dividend:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0xE
   501   00000F                     	ds	2
   502   000011                     ??___flge:
   503   000011                     ___lwdiv@divisor:
   504                           	callstack 0
   505                           
   506                           ; 2 bytes @ 0x10
   507   000011                     	ds	1
   508   000012                     color_read_Red@tmp:
   509                           	callstack 0
   510   000012                     color_read_Green@tmp:
   511                           	callstack 0
   512   000012                     color_read_Blue@tmp:
   513                           	callstack 0
   514   000012                     color_read_Clear@tmp:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x11
   518   000012                     	ds	1
   519   000013                     ___lwdiv@quotient:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x12
   523   000013                     	ds	1
   524   000014                     ?___xxtofl:
   525                           	callstack 0
   526   000014                     ___xxtofl@val:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x13
   530   000014                     	ds	1
   531   000015                     ___lwdiv@counter:
   532                           	callstack 0
   533                           
   534                           ; 1 bytes @ 0x14
   535   000015                     	ds	1
   536   000016                     setMotorPWM@m:
   537                           	callstack 0
   538                           
   539                           ; 2 bytes @ 0x15
   540   000016                     	ds	2
   541   000018                     ??_setMotorPWM:
   542   000018                     ??___xxtofl:
   543                           
   544                           ; 1 bytes @ 0x17
   545   000018                     	ds	2
   546   00001A                     setMotorPWM@posDuty:
   547                           	callstack 0
   548                           
   549                           ; 1 bytes @ 0x19
   550   00001A                     	ds	1
   551   00001B                     setMotorPWM@negDuty:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x1A
   555   00001B                     	ds	1
   556   00001C                     ___xxtofl@sign:
   557                           	callstack 0
   558   00001C                     norm_stop@mL:
   559                           	callstack 0
   560   00001C                     turnLeft@mL:
   561                           	callstack 0
   562   00001C                     turnRight@mL:
   563                           	callstack 0
   564   00001C                     fullSpeedAhead@mL:
   565                           	callstack 0
   566   00001C                     wallSmash@mL:
   567                           	callstack 0
   568   00001C                     reverse@mL:
   569                           	callstack 0
   570                           
   571                           ; 2 bytes @ 0x1B
   572   00001C                     	ds	1
   573   00001D                     ___xxtofl@exp:
   574                           	callstack 0
   575                           
   576                           ; 1 bytes @ 0x1C
   577   00001D                     	ds	1
   578   00001E                     norm_stop@mR:
   579                           	callstack 0
   580   00001E                     turnLeft@mR:
   581                           	callstack 0
   582   00001E                     turnRight@mR:
   583                           	callstack 0
   584   00001E                     fullSpeedAhead@mR:
   585                           	callstack 0
   586   00001E                     wallSmash@mR:
   587                           	callstack 0
   588   00001E                     reverse@mR:
   589                           	callstack 0
   590   00001E                     ___xxtofl@arg:
   591                           	callstack 0
   592                           
   593                           ; 4 bytes @ 0x1D
   594   00001E                     	ds	2
   595   000020                     ??_reverse:
   596   000020                     
   597                           ; 1 bytes @ 0x1F
   598   000020                     	ds	1
   599   000021                     turnPrep@mL:
   600                           	callstack 0
   601                           
   602                           ; 2 bytes @ 0x20
   603   000021                     	ds	1
   604   000022                     ?___fldiv:
   605                           	callstack 0
   606   000022                     color_read_RGBC@temp:
   607                           	callstack 0
   608   000022                     ___fldiv@b:
   609                           	callstack 0
   610                           
   611                           ; 4 bytes @ 0x21
   612   000022                     	ds	1
   613   000023                     turnPrep@mR:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0x22
   617   000023                     	ds	1
   618   000024                     
   619                           ; 1 bytes @ 0x23
   620   000024                     	ds	1
   621   000025                     ??_turnPrep:
   622                           
   623                           ; 1 bytes @ 0x24
   624   000025                     	ds	1
   625   000026                     ___fldiv@a:
   626                           	callstack 0
   627                           
   628                           ; 4 bytes @ 0x25
   629   000026                     	ds	1
   630   000027                     motor_response@temp:
   631                           	callstack 0
   632   000027                     motor_retrace@buggy_path:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x26
   636   000027                     	ds	2
   637   000029                     motor_response@mL:
   638                           	callstack 0
   639   000029                     motor_retrace@mL:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x28
   643   000029                     	ds	1
   644   00002A                     ??___fldiv:
   645                           
   646                           ; 1 bytes @ 0x29
   647   00002A                     	ds	1
   648   00002B                     motor_response@mR:
   649                           	callstack 0
   650   00002B                     motor_retrace@mR:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2A
   654   00002B                     	ds	2
   655   00002D                     ??_motor_response:
   656   00002D                     ??_motor_retrace:
   657                           
   658                           ; 1 bytes @ 0x2C
   659   00002D                     	ds	1
   660   00002E                     ___fldiv@rem:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x2D
   664   00002E                     	ds	1
   665   00002F                     motor_response@j:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x2E
   669   00002F                     	ds	3
   670   000032                     ___fldiv@sign:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x31
   674   000032                     	ds	1
   675   000033                     ___fldiv@new_exp:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x32
   679   000033                     	ds	2
   680   000035                     ___fldiv@grs:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x34
   684   000035                     	ds	4
   685   000039                     ___fldiv@bexp:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x38
   689   000039                     	ds	1
   690   00003A                     ___fldiv@aexp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x39
   694   00003A                     	ds	1
   695   00003B                     color_normalise@RGBC:
   696                           	callstack 0
   697                           
   698                           ; 2 bytes @ 0x3A
   699   00003B                     	ds	2
   700   00003D                     ?_rangeCalibrate:
   701                           	callstack 0
   702   00003D                     rangeCalibrate@RGBC:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x3C
   706   00003D                     	ds	4
   707                           
   708 ;;
   709 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   710 ;;
   711 ;; *************** function _main *****************
   712 ;; Defined at:
   713 ;;		line 21 in file "main.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;		None
   716 ;; Auto vars:     Size  Location     Type
   717 ;;  buf           100    0        unsigned char [100]
   718 ;;  RGBC           32   34[BANK0 ] struct RGBC_val
   719 ;;  clearArr       24    8[BANK0 ] float [6]
   720 ;;  mR              9   75[BANK0 ] struct DC_motor
   721 ;;  mL              9   66[BANK0 ] struct DC_motor
   722 ;;  a               2   32[BANK0 ] int 
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   733 ;;      Locals:         0      76       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   734 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   735 ;;      Totals:         0      78       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   736 ;;Total ram usage:       78 bytes
   737 ;; Hardware stack levels required when called: 11
   738 ;; This function calls:
   739 ;;		_Color_Interrupts_init
   740 ;;		_Color_Interrupts_threshold
   741 ;;		_Interrupts_init
   742 ;;		_color_click_init
   743 ;;		_color_normalise
   744 ;;		_color_read_RGBC
   745 ;;		_fullSpeedAhead
   746 ;;		_initDCmotorsPWM
   747 ;;		_motorLinit
   748 ;;		_motorRinit
   749 ;;		_motorTRIS
   750 ;;		_motor_response
   751 ;;		_motor_retrace
   752 ;;		_norm_stop
   753 ;;		_persistence_register
   754 ;;		_rangeCalibrate
   755 ;;		_tricolorLED
   756 ;;		_turnLeft
   757 ;;		_wallSmash
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text0
   764   001AAC                     __ptext0:
   765                           	callstack 0
   766   001AAC                     _main:
   767                           	callstack 20
   768   001AAC                     
   769                           ;main.c: 22:     tricolorLED();
   770   001AAC  EC54  F01B         	call	_tricolorLED	;wreg free
   771   001AB0                     
   772                           ;main.c: 23:     color_click_init();
   773   001AB0  EC49  F01A         	call	_color_click_init	;wreg free
   774   001AB4                     
   775                           ;main.c: 24:     float clearArr[6];;main.c: 26:     initDCmotorsPWM(200);
   776   001AB4  0E00               	movlw	0
   777   001AB6  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   778   001AB8  0EC8               	movlw	200
   779   001ABA  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   780   001ABC  ECAF  F017         	call	_initDCmotorsPWM	;wreg free
   781   001AC0                     
   782                           ;main.c: 27:     DC_motor mL, mR;;main.c: 28:     motorLinit(&mL);
   783   001AC0  0EA2               	movlw	low main@mL
   784   001AC2  6E09               	movwf	motorLinit@mL^0,c
   785   001AC4  0E00               	movlw	high main@mL
   786   001AC6  6E0A               	movwf	(motorLinit@mL+1)^0,c
   787   001AC8  ECD0  F018         	call	_motorLinit	;wreg free
   788   001ACC                     
   789                           ;main.c: 29:     motorRinit(&mR);
   790   001ACC  0EAB               	movlw	low main@mR
   791   001ACE  6E09               	movwf	motorRinit@mR^0,c
   792   001AD0  0E00               	movlw	high main@mR
   793   001AD2  6E0A               	movwf	(motorRinit@mR+1)^0,c
   794   001AD4  EC9B  F018         	call	_motorRinit	;wreg free
   795   001AD8                     
   796                           ;main.c: 32:     motorTRIS(&mL, &mR);
   797   001AD8  0EA2               	movlw	low main@mL
   798   001ADA  6E09               	movwf	motorTRIS@mL^0,c
   799   001ADC  0E00               	movlw	high main@mL
   800   001ADE  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   801   001AE0  0EAB               	movlw	low main@mR
   802   001AE2  6E0B               	movwf	motorTRIS@mR^0,c
   803   001AE4  0E00               	movlw	high main@mR
   804   001AE6  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   805   001AE8  EC78  F01B         	call	_motorTRIS	;wreg free
   806   001AEC                     
   807                           ;main.c: 36:     TRISDbits.TRISD7 = 0;
   808   001AEC  9E84               	bcf	132,7,c	;volatile
   809   001AEE                     
   810                           ;main.c: 37:     LATDbits.LATD7 = 0;
   811   001AEE  9E7C               	bcf	124,7,c	;volatile
   812   001AF0                     
   813                           ;main.c: 38:     TRISHbits.TRISH3 = 0;
   814   001AF0  9688               	bcf	136,3,c	;volatile
   815   001AF2                     
   816                           ;main.c: 39:     LATHbits.LATH3 = 0;
   817   001AF2  9680               	bcf	128,3,c	;volatile
   818                           
   819                           ;main.c: 42:     RGBC_val RGBC;;main.c: 43:     int a = 0;
   820   001AF4  0E00               	movlw	0
   821   001AF6  0100               	movlb	0	; () banked
   822   001AF8  6F81               	movwf	(main@a+1)& (0+255),b
   823   001AFA  0E00               	movlw	0
   824   001AFC  6F80               	movwf	main@a& (0+255),b
   825   001AFE                     
   826                           ; BSR set to: 0
   827                           ;main.c: 44:     TRISFbits.TRISF2 = 1;
   828   001AFE  8486               	bsf	134,2,c	;volatile
   829   001B00                     
   830                           ; BSR set to: 0
   831                           ;main.c: 45:     ANSELFbits.ANSELF2 = 0;
   832   001B00  010E               	movlb	14	; () banked
   833   001B02  95B4               	bcf	180,2,b	;volatile
   834                           
   835                           ;main.c: 48:     while (a < 6) {
   836   001B04  EFEE  F00D         	goto	l3854
   837   001B08                     l341:
   838                           
   839                           ; BSR set to: 0
   840                           ;main.c: 50:         if (!PORTFbits.RF2) {
   841   001B08  B48E               	btfsc	142,2,c	;volatile
   842   001B0A  EF89  F00D         	goto	u2781
   843   001B0E  EF8B  F00D         	goto	u2780
   844   001B12                     u2781:
   845   001B12  EFEE  F00D         	goto	l3854
   846   001B16                     u2780:
   847   001B16                     
   848                           ; BSR set to: 0
   849                           ;main.c: 51:             if(a!=5){
   850   001B16  0E05               	movlw	5
   851   001B18  1980               	xorwf	main@a& (0+255),w,b
   852   001B1A  1181               	iorwf	(main@a+1)& (0+255),w,b
   853   001B1C  B4D8               	btfsc	status,2,c
   854   001B1E  EF93  F00D         	goto	u2791
   855   001B22  EF95  F00D         	goto	u2790
   856   001B26                     u2791:
   857   001B26  EF9F  F00D         	goto	l3842
   858   001B2A                     u2790:
   859   001B2A                     
   860                           ; BSR set to: 0
   861                           ;main.c: 52:             wallSmash(&mL, &mR);}
   862   001B2A  0EA2               	movlw	low main@mL
   863   001B2C  6E1C               	movwf	wallSmash@mL^0,c
   864   001B2E  0E00               	movlw	high main@mL
   865   001B30  6E1D               	movwf	(wallSmash@mL+1)^0,c
   866   001B32  0EAB               	movlw	low main@mR
   867   001B34  6E1E               	movwf	wallSmash@mR^0,c
   868   001B36  0E00               	movlw	high main@mR
   869   001B38  6E1F               	movwf	(wallSmash@mR+1)^0,c
   870   001B3A  EC62  F016         	call	_wallSmash	;wreg free
   871   001B3E                     l3842:
   872                           
   873                           ;main.c: 53:             _delay((unsigned long)((500)*(64000000/4000.0)));
   874   001B3E  0E29               	movlw	41
   875   001B40  0100               	movlb	0	; () banked
   876   001B42  6F67               	movwf	(??_main+1)& (0+255),b
   877   001B44  0E96               	movlw	150
   878   001B46  6F66               	movwf	??_main& (0+255),b
   879   001B48  0E7F               	movlw	127
   880   001B4A                     u2877:
   881   001B4A  2EE8               	decfsz	wreg,f,c
   882   001B4C  D7FE               	bra	u2877
   883   001B4E  2F66               	decfsz	??_main& (0+255),f,b
   884   001B50  D7FC               	bra	u2877
   885   001B52  2F67               	decfsz	(??_main+1)& (0+255),f,b
   886   001B54  D7FA               	bra	u2877
   887   001B56                     
   888                           ;main.c: 54:             clearArr[a] = rangeCalibrate(&RGBC);
   889   001B56  0E82               	movlw	low main@RGBC
   890   001B58  6E3D               	movwf	rangeCalibrate@RGBC^0,c
   891   001B5A  0E00               	movlw	high main@RGBC
   892   001B5C  6E3E               	movwf	(rangeCalibrate@RGBC+1)^0,c
   893   001B5E  EC05  F019         	call	_rangeCalibrate	;wreg free
   894   001B62  0E68               	movlw	low main@clearArr
   895   001B64  0100               	movlb	0	; () banked
   896   001B66  6F66               	movwf	??_main& (0+255),b
   897   001B68  0E00               	movlw	high main@clearArr
   898   001B6A  6F67               	movwf	(??_main+1)& (0+255),b
   899   001B6C  90D8               	bcf	status,0,c
   900   001B6E  3580               	rlcf	main@a& (0+255),w,b
   901   001B70  6ED9               	movwf	fsr2l,c
   902   001B72  3581               	rlcf	(main@a+1)& (0+255),w,b
   903   001B74  6EDA               	movwf	fsr2h,c
   904   001B76  90D8               	bcf	status,0,c
   905   001B78  36D9               	rlcf	fsr2l,f,c
   906   001B7A  36DA               	rlcf	fsr2h,f,c
   907   001B7C  5166               	movf	??_main& (0+255),w,b
   908   001B7E  26D9               	addwf	fsr2l,f,c
   909   001B80  5167               	movf	(??_main+1)& (0+255),w,b
   910   001B82  22DA               	addwfc	fsr2h,f,c
   911   001B84  C03D  FFDE         	movff	?_rangeCalibrate,postinc2
   912   001B88  C03E  FFDE         	movff	?_rangeCalibrate+1,postinc2
   913   001B8C  C03F  FFDE         	movff	?_rangeCalibrate+2,postinc2
   914   001B90  C040  FFDE         	movff	?_rangeCalibrate+3,postinc2
   915   001B94                     
   916                           ; BSR set to: 0
   917                           ;main.c: 55:             a++;
   918   001B94  4B80               	infsnz	main@a& (0+255),f,b
   919   001B96  2B81               	incf	(main@a+1)& (0+255),f,b
   920   001B98                     
   921                           ; BSR set to: 0
   922                           ;main.c: 56:             _delay((unsigned long)((500)*(64000000/4000.0)));
   923   001B98  0E29               	movlw	41
   924   001B9A  0100               	movlb	0	; () banked
   925   001B9C  6F67               	movwf	(??_main+1)& (0+255),b
   926   001B9E  0E96               	movlw	150
   927   001BA0  6F66               	movwf	??_main& (0+255),b
   928   001BA2  0E7F               	movlw	127
   929   001BA4                     u2887:
   930   001BA4  2EE8               	decfsz	wreg,f,c
   931   001BA6  D7FE               	bra	u2887
   932   001BA8  2F66               	decfsz	??_main& (0+255),f,b
   933   001BAA  D7FC               	bra	u2887
   934   001BAC  2F67               	decfsz	(??_main+1)& (0+255),f,b
   935   001BAE  D7FA               	bra	u2887
   936   001BB0                     
   937                           ;main.c: 57:             norm_stop(&mL, &mR);
   938   001BB0  0EA2               	movlw	low main@mL
   939   001BB2  6E1C               	movwf	norm_stop@mL^0,c
   940   001BB4  0E00               	movlw	high main@mL
   941   001BB6  6E1D               	movwf	(norm_stop@mL+1)^0,c
   942   001BB8  0EAB               	movlw	low main@mR
   943   001BBA  6E1E               	movwf	norm_stop@mR^0,c
   944   001BBC  0E00               	movlw	high main@mR
   945   001BBE  6E1F               	movwf	(norm_stop@mR+1)^0,c
   946   001BC0  EC63  F01A         	call	_norm_stop	;wreg free
   947   001BC4                     
   948                           ;main.c: 58:             _delay((unsigned long)((500)*(64000000/4000.0)));
   949   001BC4  0E29               	movlw	41
   950   001BC6  0100               	movlb	0	; () banked
   951   001BC8  6F67               	movwf	(??_main+1)& (0+255),b
   952   001BCA  0E96               	movlw	150
   953   001BCC  6F66               	movwf	??_main& (0+255),b
   954   001BCE  0E7F               	movlw	127
   955   001BD0                     u2897:
   956   001BD0  2EE8               	decfsz	wreg,f,c
   957   001BD2  D7FE               	bra	u2897
   958   001BD4  2F66               	decfsz	??_main& (0+255),f,b
   959   001BD6  D7FC               	bra	u2897
   960   001BD8  2F67               	decfsz	(??_main+1)& (0+255),f,b
   961   001BDA  D7FA               	bra	u2897
   962   001BDC                     l3854:
   963                           
   964                           ;main.c: 48:     while (a < 6) {
   965   001BDC  0100               	movlb	0	; () banked
   966   001BDE  BF81               	btfsc	(main@a+1)& (0+255),7,b
   967   001BE0  EFFB  F00D         	goto	u2801
   968   001BE4  5181               	movf	(main@a+1)& (0+255),w,b
   969   001BE6  E109               	bnz	u2800
   970   001BE8  0E06               	movlw	6
   971   001BEA  5D80               	subwf	main@a& (0+255),w,b
   972   001BEC  A0D8               	btfss	status,0,c
   973   001BEE  EFFB  F00D         	goto	u2801
   974   001BF2  EFFD  F00D         	goto	u2800
   975   001BF6                     u2801:
   976   001BF6  EF84  F00D         	goto	l341
   977   001BFA                     u2800:
   978   001BFA                     
   979                           ; BSR set to: 0
   980                           ;main.c: 63:     Interrupts_init();
   981   001BFA  EC49  F01B         	call	_Interrupts_init	;wreg free
   982   001BFE                     
   983                           ;main.c: 64:     Color_Interrupts_init();
   984   001BFE  EC2F  F01B         	call	_Color_Interrupts_init	;wreg free
   985   001C02                     
   986                           ;main.c: 65:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   987   001C02  C0EC  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   988   001C06  C0ED  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   989   001C0A  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   990   001C0E  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   991   001C12  ECAA  F01A         	call	_Color_Interrupts_threshold	;wreg free
   992   001C16                     
   993                           ;main.c: 66:     persistence_register();
   994   001C16  EC5B  F01B         	call	_persistence_register	;wreg free
   995   001C1A                     
   996                           ;main.c: 71:     char buf[100];;main.c: 72:     motor_return = 0;
   997   001C1A  0E00               	movlw	0
   998   001C1C  0100               	movlb	0	; () banked
   999   001C1E  6FDC               	movwf	_motor_return& (0+255),b
  1000   001C20                     
  1001                           ; BSR set to: 0
  1002                           ;main.c: 73:     buggy_step = 0;
  1003   001C20  0E00               	movlw	0
  1004   001C22  6E52               	movwf	(_buggy_step+1)^0,c
  1005   001C24  0E00               	movlw	0
  1006   001C26  6E51               	movwf	_buggy_step^0,c
  1007   001C28                     
  1008                           ; BSR set to: 0
  1009                           ;main.c: 74:     lost_ctr = 0;
  1010   001C28  0E00               	movlw	0
  1011   001C2A  6E50               	movwf	(_lost_ctr+1)^0,c
  1012   001C2C  0E00               	movlw	0
  1013   001C2E  6E4F               	movwf	_lost_ctr^0,c
  1014   001C30                     
  1015                           ; BSR set to: 0
  1016                           ;main.c: 75:     interrupt_ctr = 0;
  1017   001C30  0E00               	movlw	0
  1018   001C32  6FD9               	movwf	(_interrupt_ctr+1)& (0+255),b
  1019   001C34  0E00               	movlw	0
  1020   001C36  6FD8               	movwf	_interrupt_ctr& (0+255),b
  1021   001C38                     
  1022                           ; BSR set to: 0
  1023                           ;main.c: 79:     TRISHbits.TRISH0 = 0;
  1024   001C38  9088               	bcf	136,0,c	;volatile
  1025   001C3A                     
  1026                           ; BSR set to: 0
  1027                           ;main.c: 80:     LATHbits.LATH0 = 0;
  1028   001C3A  9080               	bcf	128,0,c	;volatile
  1029   001C3C                     
  1030                           ; BSR set to: 0
  1031                           ;main.c: 83:     TRISFbits.TRISF0 = 0;
  1032   001C3C  9086               	bcf	134,0,c	;volatile
  1033   001C3E                     
  1034                           ; BSR set to: 0
  1035                           ;main.c: 84:     LATFbits.LATF0 = 0;
  1036   001C3E  907E               	bcf	126,0,c	;volatile
  1037   001C40                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 87:     TRISDbits.TRISD4 = 0;
  1040   001C40  9884               	bcf	132,4,c	;volatile
  1041   001C42                     
  1042                           ; BSR set to: 0
  1043                           ;main.c: 88:     LATDbits.LATD4 = 0;
  1044   001C42  987C               	bcf	124,4,c	;volatile
  1045   001C44                     
  1046                           ; BSR set to: 0
  1047                           ;main.c: 91:     TRISDbits.TRISD3 = 0;
  1048   001C44  9684               	bcf	132,3,c	;volatile
  1049   001C46                     
  1050                           ; BSR set to: 0
  1051                           ;main.c: 92:     LATDbits.LATD3 = 0;
  1052   001C46  967C               	bcf	124,3,c	;volatile
  1053   001C48                     l3888:
  1054                           
  1055                           ; BSR set to: 0
  1056                           ;main.c: 100:         fullSpeedAhead(&mL, &mR);
  1057   001C48  0EA2               	movlw	low main@mL
  1058   001C4A  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1059   001C4C  0E00               	movlw	high main@mL
  1060   001C4E  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1061   001C50  0EAB               	movlw	low main@mR
  1062   001C52  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1063   001C54  0E00               	movlw	high main@mR
  1064   001C56  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1065   001C58  ECD7  F016         	call	_fullSpeedAhead	;wreg free
  1066   001C5C                     
  1067                           ;main.c: 101:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
  1068   001C5C  0100               	movlb	0	; () banked
  1069   001C5E  05DA               	decf	_interrupt_flag& (0+255),w,b
  1070   001C60  11DB               	iorwf	(_interrupt_flag+1)& (0+255),w,b
  1071   001C62  A4D8               	btfss	status,2,c
  1072   001C64  EF36  F00E         	goto	u2811
  1073   001C68  EF38  F00E         	goto	u2810
  1074   001C6C                     u2811:
  1075   001C6C  EF24  F00E         	goto	l3888
  1076   001C70                     u2810:
  1077   001C70                     
  1078                           ; BSR set to: 0
  1079   001C70  BFD9               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
  1080   001C72  EF44  F00E         	goto	u2821
  1081   001C76  51D9               	movf	(_interrupt_ctr+1)& (0+255),w,b
  1082   001C78  E109               	bnz	u2820
  1083   001C7A  0E02               	movlw	2
  1084   001C7C  5DD8               	subwf	_interrupt_ctr& (0+255),w,b
  1085   001C7E  A0D8               	btfss	status,0,c
  1086   001C80  EF44  F00E         	goto	u2821
  1087   001C84  EF46  F00E         	goto	u2820
  1088   001C88                     u2821:
  1089   001C88  EF24  F00E         	goto	l3888
  1090   001C8C                     u2820:
  1091   001C8C                     
  1092                           ; BSR set to: 0
  1093                           ;main.c: 107:             CR1L = 5.7;
  1094   001C8C  0E66               	movlw	102
  1095   001C8E  6E49               	movwf	_CR1L^0,c
  1096   001C90  0E66               	movlw	102
  1097   001C92  6E4A               	movwf	(_CR1L+1)^0,c
  1098   001C94  0EB6               	movlw	182
  1099   001C96  6E4B               	movwf	(_CR1L+2)^0,c
  1100   001C98  0E40               	movlw	64
  1101   001C9A  6E4C               	movwf	(_CR1L+3)^0,c
  1102                           
  1103                           ;main.c: 108:             CR2U = 5.5;
  1104   001C9C  0E00               	movlw	0
  1105   001C9E  6E45               	movwf	_CR2U^0,c
  1106   001CA0  0E00               	movlw	0
  1107   001CA2  6E46               	movwf	(_CR2U+1)^0,c
  1108   001CA4  0EB0               	movlw	176
  1109   001CA6  6E47               	movwf	(_CR2U+2)^0,c
  1110   001CA8  0E40               	movlw	64
  1111   001CAA  6E48               	movwf	(_CR2U+3)^0,c
  1112                           
  1113                           ;main.c: 109:             CR2L = 4.5;
  1114   001CAC  0E00               	movlw	0
  1115   001CAE  6FCC               	movwf	_CR2L& (0+255),b
  1116   001CB0  0E00               	movlw	0
  1117   001CB2  6FCD               	movwf	(_CR2L+1)& (0+255),b
  1118   001CB4  0E90               	movlw	144
  1119   001CB6  6FCE               	movwf	(_CR2L+2)& (0+255),b
  1120   001CB8  0E40               	movlw	64
  1121   001CBA  6FCF               	movwf	(_CR2L+3)& (0+255),b
  1122                           
  1123                           ;main.c: 110:             CR3U = 4.2;
  1124   001CBC  0E66               	movlw	102
  1125   001CBE  6FC8               	movwf	_CR3U& (0+255),b
  1126   001CC0  0E66               	movlw	102
  1127   001CC2  6FC9               	movwf	(_CR3U+1)& (0+255),b
  1128   001CC4  0E86               	movlw	134
  1129   001CC6  6FCA               	movwf	(_CR3U+2)& (0+255),b
  1130   001CC8  0E40               	movlw	64
  1131   001CCA  6FCB               	movwf	(_CR3U+3)& (0+255),b
  1132                           
  1133                           ;main.c: 111:             CR3L = 1.2;
  1134   001CCC  0E9A               	movlw	154
  1135   001CCE  6E41               	movwf	_CR3L^0,c
  1136   001CD0  0E99               	movlw	153
  1137   001CD2  6E42               	movwf	(_CR3L+1)^0,c
  1138   001CD4  0E99               	movlw	153
  1139   001CD6  6E43               	movwf	(_CR3L+2)^0,c
  1140   001CD8  0E3F               	movlw	63
  1141   001CDA  6E44               	movwf	(_CR3L+3)^0,c
  1142   001CDC                     
  1143                           ; BSR set to: 0
  1144                           ;main.c: 112:             norm_stop(&mL, &mR);
  1145   001CDC  0EA2               	movlw	low main@mL
  1146   001CDE  6E1C               	movwf	norm_stop@mL^0,c
  1147   001CE0  0E00               	movlw	high main@mL
  1148   001CE2  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1149   001CE4  0EAB               	movlw	low main@mR
  1150   001CE6  6E1E               	movwf	norm_stop@mR^0,c
  1151   001CE8  0E00               	movlw	high main@mR
  1152   001CEA  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1153   001CEC  EC63  F01A         	call	_norm_stop	;wreg free
  1154   001CF0                     
  1155                           ;main.c: 113:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1156   001CF0  0E52               	movlw	82
  1157   001CF2  0100               	movlb	0	; () banked
  1158   001CF4  6F67               	movwf	(??_main+1)& (0+255),b
  1159   001CF6  0E2B               	movlw	43
  1160   001CF8  6F66               	movwf	??_main& (0+255),b
  1161   001CFA  0E00               	movlw	0
  1162   001CFC                     u2907:
  1163   001CFC  2EE8               	decfsz	wreg,f,c
  1164   001CFE  D7FE               	bra	u2907
  1165   001D00  2F66               	decfsz	??_main& (0+255),f,b
  1166   001D02  D7FC               	bra	u2907
  1167   001D04  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1168   001D06  D7FA               	bra	u2907
  1169   001D08  F000               	nop	
  1170   001D0A                     
  1171                           ;main.c: 114:             LATDbits.LATD7 = 0;
  1172   001D0A  9E7C               	bcf	124,7,c	;volatile
  1173   001D0C                     
  1174                           ;main.c: 115:             if (motor_return == 0) {
  1175   001D0C  0100               	movlb	0	; () banked
  1176   001D0E  51DC               	movf	_motor_return& (0+255),w,b
  1177   001D10  A4D8               	btfss	status,2,c
  1178   001D12  EF8D  F00E         	goto	u2831
  1179   001D16  EF8F  F00E         	goto	u2830
  1180   001D1A                     u2831:
  1181   001D1A  EFCF  F00E         	goto	l347
  1182   001D1E                     u2830:
  1183   001D1E                     
  1184                           ; BSR set to: 0
  1185                           ;main.c: 116:                 LATHbits.LATH3 = 1;
  1186   001D1E  8680               	bsf	128,3,c	;volatile
  1187   001D20                     
  1188                           ; BSR set to: 0
  1189                           ;main.c: 117:                 wallSmash(&mL, &mR);
  1190   001D20  0EA2               	movlw	low main@mL
  1191   001D22  6E1C               	movwf	wallSmash@mL^0,c
  1192   001D24  0E00               	movlw	high main@mL
  1193   001D26  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1194   001D28  0EAB               	movlw	low main@mR
  1195   001D2A  6E1E               	movwf	wallSmash@mR^0,c
  1196   001D2C  0E00               	movlw	high main@mR
  1197   001D2E  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1198   001D30  EC62  F016         	call	_wallSmash	;wreg free
  1199   001D34                     
  1200                           ;main.c: 118:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1201   001D34  0E31               	movlw	49
  1202   001D36  0100               	movlb	0	; () banked
  1203   001D38  6F67               	movwf	(??_main+1)& (0+255),b
  1204   001D3A  0EB4               	movlw	180
  1205   001D3C  6F66               	movwf	??_main& (0+255),b
  1206   001D3E  0E65               	movlw	101
  1207   001D40                     u2917:
  1208   001D40  2EE8               	decfsz	wreg,f,c
  1209   001D42  D7FE               	bra	u2917
  1210   001D44  2F66               	decfsz	??_main& (0+255),f,b
  1211   001D46  D7FC               	bra	u2917
  1212   001D48  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1213   001D4A  D7FA               	bra	u2917
  1214   001D4C  D000               	nop2	
  1215   001D4E                     
  1216                           ;main.c: 119:                 color_read_RGBC(&RGBC);
  1217   001D4E  0E82               	movlw	low main@RGBC
  1218   001D50  6E22               	movwf	color_read_RGBC@temp^0,c
  1219   001D52  0E00               	movlw	high main@RGBC
  1220   001D54  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1221   001D56  EC4C  F017         	call	_color_read_RGBC	;wreg free
  1222   001D5A                     
  1223                           ;main.c: 120:                 color_normalise(&RGBC);
  1224   001D5A  0E82               	movlw	low main@RGBC
  1225   001D5C  6E3B               	movwf	color_normalise@RGBC^0,c
  1226   001D5E  0E00               	movlw	high main@RGBC
  1227   001D60  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1228   001D62  ECF6  F013         	call	_color_normalise	;wreg free
  1229   001D66                     
  1230                           ;main.c: 121:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1231   001D66  0E82               	movlw	low main@RGBC
  1232   001D68  6E27               	movwf	motor_response@temp^0,c
  1233   001D6A  0E00               	movlw	high main@RGBC
  1234   001D6C  6E28               	movwf	(motor_response@temp+1)^0,c
  1235   001D6E  0EA2               	movlw	low main@mL
  1236   001D70  6E29               	movwf	motor_response@mL^0,c
  1237   001D72  0E00               	movlw	high main@mL
  1238   001D74  6E2A               	movwf	(motor_response@mL+1)^0,c
  1239   001D76  0EAB               	movlw	low main@mR
  1240   001D78  6E2B               	movwf	motor_response@mR^0,c
  1241   001D7A  0E00               	movlw	high main@mR
  1242   001D7C  6E2C               	movwf	(motor_response@mR+1)^0,c
  1243   001D7E  EC0C  F007         	call	_motor_response	;wreg free
  1244   001D82  0100               	movlb	0	; () banked
  1245   001D84  6F66               	movwf	??_main& (0+255),b
  1246   001D86  0EDD               	movlw	low _buggy_path
  1247   001D88  2451               	addwf	_buggy_step^0,w,c
  1248   001D8A  6ED9               	movwf	fsr2l,c
  1249   001D8C  0E00               	movlw	high _buggy_path
  1250   001D8E  2052               	addwfc	(_buggy_step+1)^0,w,c
  1251   001D90  6EDA               	movwf	fsr2h,c
  1252   001D92  C066  FFDF         	movff	??_main,indf2
  1253   001D96                     
  1254                           ; BSR set to: 0
  1255                           ;main.c: 122:                 buggy_step++;
  1256   001D96  4A51               	infsnz	_buggy_step^0,f,c
  1257   001D98  2A52               	incf	(_buggy_step+1)^0,f,c
  1258                           
  1259                           ;main.c: 123:             } else {
  1260   001D9A  EF70  F00F         	goto	l3948
  1261   001D9E                     l347:
  1262                           
  1263                           ; BSR set to: 0
  1264                           ;main.c: 124:                 LATDbits.LATD7 = 1;
  1265   001D9E  8E7C               	bsf	124,7,c	;volatile
  1266   001DA0                     
  1267                           ; BSR set to: 0
  1268                           ;main.c: 125:                 wallSmash(&mL, &mR);
  1269   001DA0  0EA2               	movlw	low main@mL
  1270   001DA2  6E1C               	movwf	wallSmash@mL^0,c
  1271   001DA4  0E00               	movlw	high main@mL
  1272   001DA6  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1273   001DA8  0EAB               	movlw	low main@mR
  1274   001DAA  6E1E               	movwf	wallSmash@mR^0,c
  1275   001DAC  0E00               	movlw	high main@mR
  1276   001DAE  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1277   001DB0  EC62  F016         	call	_wallSmash	;wreg free
  1278   001DB4                     
  1279                           ;main.c: 126:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1280   001DB4  0E31               	movlw	49
  1281   001DB6  0100               	movlb	0	; () banked
  1282   001DB8  6F67               	movwf	(??_main+1)& (0+255),b
  1283   001DBA  0EB4               	movlw	180
  1284   001DBC  6F66               	movwf	??_main& (0+255),b
  1285   001DBE  0E65               	movlw	101
  1286   001DC0                     u2927:
  1287   001DC0  2EE8               	decfsz	wreg,f,c
  1288   001DC2  D7FE               	bra	u2927
  1289   001DC4  2F66               	decfsz	??_main& (0+255),f,b
  1290   001DC6  D7FC               	bra	u2927
  1291   001DC8  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1292   001DCA  D7FA               	bra	u2927
  1293   001DCC  D000               	nop2	
  1294   001DCE                     
  1295                           ;main.c: 127:                 motor_retrace(&buggy_path, &mL, &mR);
  1296   001DCE  0EDD               	movlw	low _buggy_path
  1297   001DD0  6E27               	movwf	motor_retrace@buggy_path^0,c
  1298   001DD2  0E00               	movlw	high _buggy_path
  1299   001DD4  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1300   001DD6  0EA2               	movlw	low main@mL
  1301   001DD8  6E29               	movwf	motor_retrace@mL^0,c
  1302   001DDA  0E00               	movlw	high main@mL
  1303   001DDC  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1304   001DDE  0EAB               	movlw	low main@mR
  1305   001DE0  6E2B               	movwf	motor_retrace@mR^0,c
  1306   001DE2  0E00               	movlw	high main@mR
  1307   001DE4  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1308   001DE6  EC7A  F00F         	call	_motor_retrace	;wreg free
  1309   001DEA                     
  1310                           ;main.c: 128:                 buggy_step--;
  1311   001DEA  0651               	decf	_buggy_step^0,f,c
  1312   001DEC  A0D8               	btfss	status,0,c
  1313   001DEE  0652               	decf	(_buggy_step+1)^0,f,c
  1314                           
  1315                           ;main.c: 130:                 if (buggy_step == 1) {
  1316   001DF0  0451               	decf	_buggy_step^0,w,c
  1317   001DF2  1052               	iorwf	(_buggy_step+1)^0,w,c
  1318   001DF4  A4D8               	btfss	status,2,c
  1319   001DF6  EFFF  F00E         	goto	u2841
  1320   001DFA  EF01  F00F         	goto	u2840
  1321   001DFE                     u2841:
  1322   001DFE  EF70  F00F         	goto	l3948
  1323   001E02                     u2840:
  1324   001E02                     
  1325                           ;main.c: 133:                     motor_return = 0;
  1326   001E02  0E00               	movlw	0
  1327   001E04  0100               	movlb	0	; () banked
  1328   001E06  6FDC               	movwf	_motor_return& (0+255),b
  1329   001E08                     
  1330                           ; BSR set to: 0
  1331                           ;main.c: 134:                     LATDbits.LATD4 = 0;
  1332   001E08  987C               	bcf	124,4,c	;volatile
  1333   001E0A                     
  1334                           ; BSR set to: 0
  1335                           ;main.c: 135:                     fullSpeedAhead(&mL, &mR);
  1336   001E0A  0EA2               	movlw	low main@mL
  1337   001E0C  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1338   001E0E  0E00               	movlw	high main@mL
  1339   001E10  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1340   001E12  0EAB               	movlw	low main@mR
  1341   001E14  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1342   001E16  0E00               	movlw	high main@mR
  1343   001E18  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1344   001E1A  ECD7  F016         	call	_fullSpeedAhead	;wreg free
  1345   001E1E                     
  1346                           ;main.c: 136:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1347   001E1E  0E29               	movlw	41
  1348   001E20  0100               	movlb	0	; () banked
  1349   001E22  6F67               	movwf	(??_main+1)& (0+255),b
  1350   001E24  0E96               	movlw	150
  1351   001E26  6F66               	movwf	??_main& (0+255),b
  1352   001E28  0E7F               	movlw	127
  1353   001E2A                     u2937:
  1354   001E2A  2EE8               	decfsz	wreg,f,c
  1355   001E2C  D7FE               	bra	u2937
  1356   001E2E  2F66               	decfsz	??_main& (0+255),f,b
  1357   001E30  D7FC               	bra	u2937
  1358   001E32  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1359   001E34  D7FA               	bra	u2937
  1360   001E36                     
  1361                           ;main.c: 137:                     norm_stop(&mL, &mR);
  1362   001E36  0EA2               	movlw	low main@mL
  1363   001E38  6E1C               	movwf	norm_stop@mL^0,c
  1364   001E3A  0E00               	movlw	high main@mL
  1365   001E3C  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1366   001E3E  0EAB               	movlw	low main@mR
  1367   001E40  6E1E               	movwf	norm_stop@mR^0,c
  1368   001E42  0E00               	movlw	high main@mR
  1369   001E44  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1370   001E46  EC63  F01A         	call	_norm_stop	;wreg free
  1371   001E4A                     
  1372                           ;main.c: 138:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1373   001E4A  0E29               	movlw	41
  1374   001E4C  0100               	movlb	0	; () banked
  1375   001E4E  6F67               	movwf	(??_main+1)& (0+255),b
  1376   001E50  0E96               	movlw	150
  1377   001E52  6F66               	movwf	??_main& (0+255),b
  1378   001E54  0E7F               	movlw	127
  1379   001E56                     u2947:
  1380   001E56  2EE8               	decfsz	wreg,f,c
  1381   001E58  D7FE               	bra	u2947
  1382   001E5A  2F66               	decfsz	??_main& (0+255),f,b
  1383   001E5C  D7FC               	bra	u2947
  1384   001E5E  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1385   001E60  D7FA               	bra	u2947
  1386   001E62                     
  1387                           ;main.c: 139:                     turnLeft(&mL, &mR);
  1388   001E62  0EA2               	movlw	low main@mL
  1389   001E64  6E1C               	movwf	turnLeft@mL^0,c
  1390   001E66  0E00               	movlw	high main@mL
  1391   001E68  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1392   001E6A  0EAB               	movlw	low main@mR
  1393   001E6C  6E1E               	movwf	turnLeft@mR^0,c
  1394   001E6E  0E00               	movlw	high main@mR
  1395   001E70  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1396   001E72  EC62  F018         	call	_turnLeft	;wreg free
  1397   001E76                     
  1398                           ;main.c: 140:                     _delay((unsigned long)((430)*(64000000/4000.0)));
  1399   001E76  0E23               	movlw	35
  1400   001E78  0100               	movlb	0	; () banked
  1401   001E7A  6F67               	movwf	(??_main+1)& (0+255),b
  1402   001E7C  0EE7               	movlw	231
  1403   001E7E  6F66               	movwf	??_main& (0+255),b
  1404   001E80  0EF7               	movlw	247
  1405   001E82                     u2957:
  1406   001E82  2EE8               	decfsz	wreg,f,c
  1407   001E84  D7FE               	bra	u2957
  1408   001E86  2F66               	decfsz	??_main& (0+255),f,b
  1409   001E88  D7FC               	bra	u2957
  1410   001E8A  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1411   001E8C  D7FA               	bra	u2957
  1412   001E8E  D000               	nop2	
  1413   001E90                     
  1414                           ;main.c: 141:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1415   001E90  A080               	btfss	128,0,c	;volatile
  1416   001E92  EF4D  F00F         	goto	u2851
  1417   001E96  EF52  F00F         	goto	u2850
  1418   001E9A                     u2851:
  1419   001E9A  0100               	movlb	0	; () banked
  1420   001E9C  6B66               	clrf	??_main& (0+255),b
  1421   001E9E  2B66               	incf	??_main& (0+255),f,b
  1422   001EA0  EF54  F00F         	goto	u2868
  1423   001EA4                     u2850:
  1424   001EA4  0100               	movlb	0	; () banked
  1425   001EA6  6B66               	clrf	??_main& (0+255),b
  1426   001EA8                     u2868:
  1427   001EA8  5080               	movf	128,w,c	;volatile
  1428   001EAA  1966               	xorwf	??_main& (0+255),w,b
  1429   001EAC  0BFE               	andlw	-2
  1430   001EAE  1966               	xorwf	??_main& (0+255),w,b
  1431   001EB0  6E80               	movwf	128,c	;volatile
  1432   001EB2                     
  1433                           ; BSR set to: 0
  1434                           ;main.c: 142:                     norm_stop(&mL, &mR);
  1435   001EB2  0EA2               	movlw	low main@mL
  1436   001EB4  6E1C               	movwf	norm_stop@mL^0,c
  1437   001EB6  0E00               	movlw	high main@mL
  1438   001EB8  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1439   001EBA  0EAB               	movlw	low main@mR
  1440   001EBC  6E1E               	movwf	norm_stop@mR^0,c
  1441   001EBE  0E00               	movlw	high main@mR
  1442   001EC0  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1443   001EC2  EC63  F01A         	call	_norm_stop	;wreg free
  1444   001EC6                     
  1445                           ;main.c: 143:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1446   001EC6  0EA3               	movlw	163
  1447   001EC8  0100               	movlb	0	; () banked
  1448   001ECA  6F67               	movwf	(??_main+1)& (0+255),b
  1449   001ECC  0E57               	movlw	87
  1450   001ECE  6F66               	movwf	??_main& (0+255),b
  1451   001ED0  0E02               	movlw	2
  1452   001ED2                     u2967:
  1453   001ED2  2EE8               	decfsz	wreg,f,c
  1454   001ED4  D7FE               	bra	u2967
  1455   001ED6  2F66               	decfsz	??_main& (0+255),f,b
  1456   001ED8  D7FC               	bra	u2967
  1457   001EDA  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1458   001EDC  D7FA               	bra	u2967
  1459   001EDE  F000               	nop	
  1460   001EE0                     l3948:
  1461                           
  1462                           ;main.c: 146:             LATHbits.LATH3 = 0;
  1463   001EE0  9680               	bcf	128,3,c	;volatile
  1464   001EE2                     
  1465                           ;main.c: 147:             interrupt_flag = 0;
  1466   001EE2  0E00               	movlw	0
  1467   001EE4  0100               	movlb	0	; () banked
  1468   001EE6  6FDB               	movwf	(_interrupt_flag+1)& (0+255),b
  1469   001EE8  0E00               	movlw	0
  1470   001EEA  6FDA               	movwf	_interrupt_flag& (0+255),b
  1471   001EEC  EF24  F00E         	goto	l3888
  1472   001EF0  EF1A  F000         	goto	start
  1473   001EF4                     __end_of_main:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _wallSmash *****************
  1477 ;; Defined at:
  1478 ;;		line 200 in file "dc_motor.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1481 ;;		 -> main@mL(9), 
  1482 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1483 ;;		 -> main@mR(9), 
  1484 ;; Auto vars:     Size  Location     Type
  1485 ;;		None
  1486 ;; Return value:  Size  Location     Type
  1487 ;;                  1    wreg      void 
  1488 ;; Registers used:
  1489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1490 ;; Tracked objects:
  1491 ;;		On entry : 0/0
  1492 ;;		On exit  : 0/0
  1493 ;;		Unchanged: 0/0
  1494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1497 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1498 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1499 ;;Total ram usage:        5 bytes
  1500 ;; Hardware stack levels used: 1
  1501 ;; Hardware stack levels required when called: 8
  1502 ;; This function calls:
  1503 ;;		_setMotorPWM
  1504 ;; This function is called by:
  1505 ;;		_main
  1506 ;; This function uses a non-reentrant model
  1507 ;;
  1508                           
  1509                           	psect	text1
  1510   002CC4                     __ptext1:
  1511                           	callstack 0
  1512   002CC4                     _wallSmash:
  1513                           	callstack 22
  1514   002CC4                     
  1515                           ;dc_motor.c: 200: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 201: {;dc_motor
      +                          .c: 202:     mL->power =50;
  1516   002CC4  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1517   002CC8  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1518   002CCC  0E32               	movlw	50
  1519   002CCE  6EDF               	movwf	indf2,c
  1520                           
  1521                           ;dc_motor.c: 203:     mR->power = 50;
  1522   002CD0  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1523   002CD4  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1524   002CD8  0E32               	movlw	50
  1525   002CDA  6EDF               	movwf	indf2,c
  1526   002CDC                     
  1527                           ;dc_motor.c: 204:     mR->direction = 1;
  1528   002CDC  EE20 F001          	lfsr	2,1
  1529   002CE0  501E               	movf	wallSmash@mR^0,w,c
  1530   002CE2  26D9               	addwf	fsr2l,f,c
  1531   002CE4  501F               	movf	(wallSmash@mR+1)^0,w,c
  1532   002CE6  22DA               	addwfc	fsr2h,f,c
  1533   002CE8  0E01               	movlw	1
  1534   002CEA  6EDF               	movwf	indf2,c
  1535   002CEC                     
  1536                           ;dc_motor.c: 205:     mL->direction = 1;
  1537   002CEC  EE20 F001          	lfsr	2,1
  1538   002CF0  501C               	movf	wallSmash@mL^0,w,c
  1539   002CF2  26D9               	addwf	fsr2l,f,c
  1540   002CF4  501D               	movf	(wallSmash@mL+1)^0,w,c
  1541   002CF6  22DA               	addwfc	fsr2h,f,c
  1542   002CF8  0E01               	movlw	1
  1543   002CFA  6EDF               	movwf	indf2,c
  1544   002CFC                     
  1545                           ;dc_motor.c: 206:     mL->brakemode = 1;
  1546   002CFC  EE20 F002          	lfsr	2,2
  1547   002D00  501C               	movf	wallSmash@mL^0,w,c
  1548   002D02  26D9               	addwf	fsr2l,f,c
  1549   002D04  501D               	movf	(wallSmash@mL+1)^0,w,c
  1550   002D06  22DA               	addwfc	fsr2h,f,c
  1551   002D08  0E01               	movlw	1
  1552   002D0A  6EDF               	movwf	indf2,c
  1553   002D0C                     
  1554                           ;dc_motor.c: 207:     mR->brakemode = 1;
  1555   002D0C  EE20 F002          	lfsr	2,2
  1556   002D10  501E               	movf	wallSmash@mR^0,w,c
  1557   002D12  26D9               	addwf	fsr2l,f,c
  1558   002D14  501F               	movf	(wallSmash@mR+1)^0,w,c
  1559   002D16  22DA               	addwfc	fsr2h,f,c
  1560   002D18  0E01               	movlw	1
  1561   002D1A  6EDF               	movwf	indf2,c
  1562                           
  1563                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1564   002D1C  EFA6  F016         	goto	l3278
  1565   002D20                     l3272:
  1566                           
  1567                           ;dc_motor.c: 209:     {;dc_motor.c: 210:         mL->power++;
  1568   002D20  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1569   002D24  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1570   002D28  2ADF               	incf	indf2,f,c
  1571                           
  1572                           ;dc_motor.c: 211:         mR->power++;
  1573   002D2A  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1574   002D2E  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1575   002D32  2ADF               	incf	indf2,f,c
  1576   002D34                     
  1577                           ;dc_motor.c: 213:         setMotorPWM(mL);
  1578   002D34  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1579   002D38  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1580   002D3C  ECAE  F014         	call	_setMotorPWM	;wreg free
  1581   002D40                     
  1582                           ;dc_motor.c: 214:         setMotorPWM(mR);
  1583   002D40  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1584   002D44  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1585   002D48  ECAE  F014         	call	_setMotorPWM	;wreg free
  1586   002D4C                     l3278:
  1587                           
  1588                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1589   002D4C  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1590   002D50  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1591   002D54  0E56               	movlw	86
  1592   002D56  60DF               	cpfslt	indf2,c
  1593   002D58  EFB0  F016         	goto	u2221
  1594   002D5C  EFB2  F016         	goto	u2220
  1595   002D60                     u2221:
  1596   002D60  EFBE  F016         	goto	l3282
  1597   002D64                     u2220:
  1598   002D64  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1599   002D68  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1600   002D6C  0E55               	movlw	85
  1601   002D6E  64DF               	cpfsgt	indf2,c
  1602   002D70  EFBC  F016         	goto	u2231
  1603   002D74  EFBE  F016         	goto	u2230
  1604   002D78                     u2231:
  1605   002D78  EF90  F016         	goto	l3272
  1606   002D7C                     u2230:
  1607   002D7C                     l3282:
  1608                           
  1609                           ;dc_motor.c: 216:     mL->power = 85;
  1610   002D7C  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1611   002D80  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1612   002D84  0E55               	movlw	85
  1613   002D86  6EDF               	movwf	indf2,c
  1614                           
  1615                           ;dc_motor.c: 217:     mR->power = 85;
  1616   002D88  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1617   002D8C  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1618   002D90  0E55               	movlw	85
  1619   002D92  6EDF               	movwf	indf2,c
  1620   002D94                     
  1621                           ;dc_motor.c: 218:     setMotorPWM(mL);
  1622   002D94  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1623   002D98  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1624   002D9C  ECAE  F014         	call	_setMotorPWM	;wreg free
  1625   002DA0                     
  1626                           ;dc_motor.c: 219:     setMotorPWM(mR);
  1627   002DA0  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1628   002DA4  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1629   002DA8  ECAE  F014         	call	_setMotorPWM	;wreg free
  1630   002DAC  0012               	return		;funcret
  1631   002DAE                     __end_of_wallSmash:
  1632                           	callstack 0
  1633                           
  1634 ;; *************** function _tricolorLED *****************
  1635 ;; Defined at:
  1636 ;;		line 121 in file "color.c"
  1637 ;; Parameters:    Size  Location     Type
  1638 ;;		None
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:        0 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 7
  1657 ;; This function calls:
  1658 ;;		_bLED
  1659 ;;		_gLED
  1660 ;;		_rLED
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text2
  1667   0036A8                     __ptext2:
  1668                           	callstack 0
  1669   0036A8                     _tricolorLED:
  1670                           	callstack 23
  1671   0036A8                     
  1672                           ;color.c: 123:     rLED();
  1673   0036A8  EC91  F01B         	call	_rLED	;wreg free
  1674                           
  1675                           ;color.c: 124:     gLED();
  1676   0036AC  EC94  F01B         	call	_gLED	;wreg free
  1677                           
  1678                           ;color.c: 125:     bLED();
  1679   0036B0  EC97  F01B         	call	_bLED	;wreg free
  1680   0036B4  0012               	return		;funcret
  1681   0036B6                     __end_of_tricolorLED:
  1682                           	callstack 0
  1683                           
  1684 ;; *************** function _rLED *****************
  1685 ;; Defined at:
  1686 ;;		line 130 in file "color.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		None
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used: 1
  1706 ;; Hardware stack levels required when called: 6
  1707 ;; This function calls:
  1708 ;;		Nothing
  1709 ;; This function is called by:
  1710 ;;		_tricolorLED
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text3
  1715   003722                     __ptext3:
  1716                           	callstack 0
  1717   003722                     _rLED:
  1718                           	callstack 23
  1719   003722                     
  1720                           ;color.c: 131:     TRISGbits.TRISG0 = 0;
  1721   003722  9087               	bcf	135,0,c	;volatile
  1722                           
  1723                           ;color.c: 132:     LATGbits.LATG0 = 1;
  1724   003724  807F               	bsf	127,0,c	;volatile
  1725   003726  0012               	return		;funcret
  1726   003728                     __end_of_rLED:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _gLED *****************
  1730 ;; Defined at:
  1731 ;;		line 137 in file "color.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		None
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 6
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_tricolorLED
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text4
  1760   003728                     __ptext4:
  1761                           	callstack 0
  1762   003728                     _gLED:
  1763                           	callstack 23
  1764   003728                     
  1765                           ;color.c: 138:     TRISEbits.TRISE7 = 0;
  1766   003728  9E85               	bcf	133,7,c	;volatile
  1767                           
  1768                           ;color.c: 139:     LATEbits.LATE7 = 1;
  1769   00372A  8E7D               	bsf	125,7,c	;volatile
  1770   00372C  0012               	return		;funcret
  1771   00372E                     __end_of_gLED:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _bLED *****************
  1775 ;; Defined at:
  1776 ;;		line 144 in file "color.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		None
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/0
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 6
  1797 ;; This function calls:
  1798 ;;		Nothing
  1799 ;; This function is called by:
  1800 ;;		_tricolorLED
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text5
  1805   00372E                     __ptext5:
  1806                           	callstack 0
  1807   00372E                     _bLED:
  1808                           	callstack 23
  1809   00372E                     
  1810                           ;color.c: 145:     TRISAbits.TRISA3 = 0;
  1811   00372E  9681               	bcf	129,3,c	;volatile
  1812                           
  1813                           ;color.c: 146:     LATAbits.LATA3 = 1;
  1814   003730  8679               	bsf	121,3,c	;volatile
  1815   003732  0012               	return		;funcret
  1816   003734                     __end_of_bLED:
  1817                           	callstack 0
  1818                           
  1819 ;; *************** function _rangeCalibrate *****************
  1820 ;; Defined at:
  1821 ;;		line 160 in file "color.c"
  1822 ;; Parameters:    Size  Location     Type
  1823 ;;  RGBC            2   60[COMRAM] PTR struct RGBC_val
  1824 ;;		 -> main@RGBC(32), 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  temp            4    2[BANK0 ] float 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  4   60[COMRAM] float 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1839 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;Total ram usage:       10 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 10
  1843 ;; This function calls:
  1844 ;;		_color_normalise
  1845 ;;		_color_read_RGBC
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text6
  1852   00320A                     __ptext6:
  1853                           	callstack 0
  1854   00320A                     _rangeCalibrate:
  1855                           	callstack 20
  1856   00320A                     
  1857                           ;color.c: 164:     LATHbits.LATH3 = 1;
  1858   00320A  8680               	bsf	128,3,c	;volatile
  1859   00320C                     
  1860                           ;color.c: 165:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1861   00320C  0E29               	movlw	41
  1862   00320E  0100               	movlb	0	; () banked
  1863   003210  6F61               	movwf	(??_rangeCalibrate+1)& (0+255),b
  1864   003212  0E96               	movlw	150
  1865   003214  6F60               	movwf	??_rangeCalibrate& (0+255),b
  1866   003216  0E7F               	movlw	127
  1867   003218                     u2977:
  1868   003218  2EE8               	decfsz	wreg,f,c
  1869   00321A  D7FE               	bra	u2977
  1870   00321C  2F60               	decfsz	??_rangeCalibrate& (0+255),f,b
  1871   00321E  D7FC               	bra	u2977
  1872   003220  2F61               	decfsz	(??_rangeCalibrate+1)& (0+255),f,b
  1873   003222  D7FA               	bra	u2977
  1874   003224                     
  1875                           ;color.c: 166:     color_read_RGBC(RGBC);
  1876   003224  C03D  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1877   003228  C03E  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1878   00322C  EC4C  F017         	call	_color_read_RGBC	;wreg free
  1879   003230                     
  1880                           ;color.c: 167:     color_normalise(RGBC);
  1881   003230  C03D  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1882   003234  C03E  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1883   003238  ECF6  F013         	call	_color_normalise	;wreg free
  1884   00323C                     
  1885                           ;color.c: 168:     float temp = RGBC->norm_C;
  1886   00323C  EE20 F01C          	lfsr	2,28
  1887   003240  503D               	movf	rangeCalibrate@RGBC^0,w,c
  1888   003242  26D9               	addwf	fsr2l,f,c
  1889   003244  503E               	movf	(rangeCalibrate@RGBC+1)^0,w,c
  1890   003246  22DA               	addwfc	fsr2h,f,c
  1891   003248  CFDE F062          	movff	postinc2,rangeCalibrate@temp
  1892   00324C  CFDE F063          	movff	postinc2,rangeCalibrate@temp+1
  1893   003250  CFDE F064          	movff	postinc2,rangeCalibrate@temp+2
  1894   003254  CFDE F065          	movff	postinc2,rangeCalibrate@temp+3
  1895   003258                     
  1896                           ;color.c: 169:     LATHbits.LATH3 = 0;
  1897   003258  9680               	bcf	128,3,c	;volatile
  1898   00325A                     
  1899                           ;color.c: 170:     return temp;
  1900   00325A  C062  F03D         	movff	rangeCalibrate@temp,?_rangeCalibrate
  1901   00325E  C063  F03E         	movff	rangeCalibrate@temp+1,?_rangeCalibrate+1
  1902   003262  C064  F03F         	movff	rangeCalibrate@temp+2,?_rangeCalibrate+2
  1903   003266  C065  F040         	movff	rangeCalibrate@temp+3,?_rangeCalibrate+3
  1904   00326A  0012               	return		;funcret
  1905   00326C                     __end_of_rangeCalibrate:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _color_read_RGBC *****************
  1909 ;; Defined at:
  1910 ;;		line 93 in file "color.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1913 ;;		 -> main@RGBC(32), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 9
  1932 ;; This function calls:
  1933 ;;		___xxtofl
  1934 ;;		_color_read_Blue
  1935 ;;		_color_read_Clear
  1936 ;;		_color_read_Green
  1937 ;;		_color_read_Red
  1938 ;; This function is called by:
  1939 ;;		_rangeCalibrate
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text7
  1945   002E98                     __ptext7:
  1946                           	callstack 0
  1947   002E98                     _color_read_RGBC:
  1948                           	callstack 20
  1949   002E98                     
  1950                           ;color.c: 94:     temp->R = color_read_Red();
  1951   002E98  EC61  F019         	call	_color_read_Red	;wreg free
  1952   002E9C  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  1953   002EA0  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  1954   002EA4  6A16               	clrf	(___xxtofl@val+2)^0,c
  1955   002EA6  6A17               	clrf	(___xxtofl@val+3)^0,c
  1956   002EA8  0E00               	movlw	0
  1957   002EAA  EC1C  F013         	call	___xxtofl
  1958   002EAE  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  1959   002EB2  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  1960   002EB6  C014  FFDE         	movff	?___xxtofl,postinc2
  1961   002EBA  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1962   002EBE  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1963   002EC2  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1964                           
  1965                           ;color.c: 95:     temp->B = color_read_Blue();
  1966   002EC6  ECD9  F019         	call	_color_read_Blue	;wreg free
  1967   002ECA  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  1968   002ECE  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1969   002ED2  6A16               	clrf	(___xxtofl@val+2)^0,c
  1970   002ED4  6A17               	clrf	(___xxtofl@val+3)^0,c
  1971   002ED6  0E00               	movlw	0
  1972   002ED8  EC1C  F013         	call	___xxtofl
  1973   002EDC  EE20 F008          	lfsr	2,8
  1974   002EE0  5022               	movf	color_read_RGBC@temp^0,w,c
  1975   002EE2  26D9               	addwf	fsr2l,f,c
  1976   002EE4  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  1977   002EE6  22DA               	addwfc	fsr2h,f,c
  1978   002EE8  C014  FFDE         	movff	?___xxtofl,postinc2
  1979   002EEC  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1980   002EF0  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1981   002EF4  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1982                           
  1983                           ;color.c: 96:     temp->G = color_read_Green();
  1984   002EF8  EC89  F019         	call	_color_read_Green	;wreg free
  1985   002EFC  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  1986   002F00  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  1987   002F04  6A16               	clrf	(___xxtofl@val+2)^0,c
  1988   002F06  6A17               	clrf	(___xxtofl@val+3)^0,c
  1989   002F08  0E00               	movlw	0
  1990   002F0A  EC1C  F013         	call	___xxtofl
  1991   002F0E  EE20 F004          	lfsr	2,4
  1992   002F12  5022               	movf	color_read_RGBC@temp^0,w,c
  1993   002F14  26D9               	addwf	fsr2l,f,c
  1994   002F16  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  1995   002F18  22DA               	addwfc	fsr2h,f,c
  1996   002F1A  C014  FFDE         	movff	?___xxtofl,postinc2
  1997   002F1E  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1998   002F22  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1999   002F26  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2000                           
  2001                           ;color.c: 97:     temp->C = color_read_Clear();
  2002   002F2A  ECB1  F019         	call	_color_read_Clear	;wreg free
  2003   002F2E  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2004   002F32  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2005   002F36  6A16               	clrf	(___xxtofl@val+2)^0,c
  2006   002F38  6A17               	clrf	(___xxtofl@val+3)^0,c
  2007   002F3A  0E00               	movlw	0
  2008   002F3C  EC1C  F013         	call	___xxtofl
  2009   002F40  EE20 F00C          	lfsr	2,12
  2010   002F44  5022               	movf	color_read_RGBC@temp^0,w,c
  2011   002F46  26D9               	addwf	fsr2l,f,c
  2012   002F48  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2013   002F4A  22DA               	addwfc	fsr2h,f,c
  2014   002F4C  C014  FFDE         	movff	?___xxtofl,postinc2
  2015   002F50  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2016   002F54  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2017   002F58  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2018   002F5C  0012               	return		;funcret
  2019   002F5E                     __end_of_color_read_RGBC:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _color_read_Red *****************
  2023 ;; Defined at:
  2024 ;;		line 32 in file "color.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  tmp             2   17[COMRAM] unsigned int 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2   12[COMRAM] unsigned int 
  2031 ;; Registers used:
  2032 ;;		wreg, status,2, status,0, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2040 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2041 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2042 ;;Total ram usage:        7 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 8
  2045 ;; This function calls:
  2046 ;;		_I2C_2_Master_Read
  2047 ;;		_I2C_2_Master_RepStart
  2048 ;;		_I2C_2_Master_Start
  2049 ;;		_I2C_2_Master_Stop
  2050 ;;		_I2C_2_Master_Write
  2051 ;; This function is called by:
  2052 ;;		_color_read_RGBC
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text8
  2057   0032C2                     __ptext8:
  2058                           	callstack 0
  2059   0032C2                     _color_read_Red:
  2060                           	callstack 20
  2061   0032C2                     
  2062                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  2063   0032C2  EC82  F01B         	call	_I2C_2_Master_Start	;wreg free
  2064                           
  2065                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2066   0032C6  0E52               	movlw	82
  2067   0032C8  EC61  F01B         	call	_I2C_2_Master_Write
  2068                           
  2069                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  2070   0032CC  0EB6               	movlw	182
  2071   0032CE  EC61  F01B         	call	_I2C_2_Master_Write
  2072                           
  2073                           ;color.c: 37:     I2C_2_Master_RepStart();
  2074   0032D2  EC73  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2075                           
  2076                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  2077   0032D6  0E53               	movlw	83
  2078   0032D8  EC61  F01B         	call	_I2C_2_Master_Write
  2079                           
  2080                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  2081   0032DC  0E01               	movlw	1
  2082   0032DE  EC28  F01A         	call	_I2C_2_Master_Read
  2083   0032E2  6E0F               	movwf	??_color_read_Red^0,c
  2084   0032E4  500F               	movf	??_color_read_Red^0,w,c
  2085   0032E6  6E12               	movwf	color_read_Red@tmp^0,c
  2086   0032E8  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2087                           
  2088                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2089   0032EA  0E00               	movlw	0
  2090   0032EC  EC28  F01A         	call	_I2C_2_Master_Read
  2091   0032F0  6E0F               	movwf	??_color_read_Red^0,c
  2092   0032F2  500F               	movf	??_color_read_Red^0,w,c
  2093   0032F4  6E11               	movwf	(??_color_read_Red+2)^0,c
  2094   0032F6  6A10               	clrf	(??_color_read_Red+1)^0,c
  2095   0032F8  5012               	movf	color_read_Red@tmp^0,w,c
  2096   0032FA  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2097   0032FC  6E12               	movwf	color_read_Red@tmp^0,c
  2098   0032FE  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2099   003300  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2100   003302  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2101                           
  2102                           ;color.c: 41:     I2C_2_Master_Stop();
  2103   003304  EC7D  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2104   003308                     
  2105                           ;color.c: 42:     return tmp;
  2106   003308  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2107   00330C  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2108   003310  0012               	return		;funcret
  2109   003312                     __end_of_color_read_Red:
  2110                           	callstack 0
  2111                           
  2112 ;; *************** function _color_read_Green *****************
  2113 ;; Defined at:
  2114 ;;		line 45 in file "color.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;  tmp             2   17[COMRAM] unsigned int 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  2   12[COMRAM] unsigned int 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2129 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2130 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2131 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2132 ;;Total ram usage:        7 bytes
  2133 ;; Hardware stack levels used: 1
  2134 ;; Hardware stack levels required when called: 8
  2135 ;; This function calls:
  2136 ;;		_I2C_2_Master_Read
  2137 ;;		_I2C_2_Master_RepStart
  2138 ;;		_I2C_2_Master_Start
  2139 ;;		_I2C_2_Master_Stop
  2140 ;;		_I2C_2_Master_Write
  2141 ;; This function is called by:
  2142 ;;		_color_read_RGBC
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text9
  2147   003312                     __ptext9:
  2148                           	callstack 0
  2149   003312                     _color_read_Green:
  2150                           	callstack 20
  2151   003312                     
  2152                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  2153   003312  EC82  F01B         	call	_I2C_2_Master_Start	;wreg free
  2154                           
  2155                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  2156   003316  0E52               	movlw	82
  2157   003318  EC61  F01B         	call	_I2C_2_Master_Write
  2158                           
  2159                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  2160   00331C  0EB8               	movlw	184
  2161   00331E  EC61  F01B         	call	_I2C_2_Master_Write
  2162                           
  2163                           ;color.c: 50:     I2C_2_Master_RepStart();
  2164   003322  EC73  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2165                           
  2166                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  2167   003326  0E53               	movlw	83
  2168   003328  EC61  F01B         	call	_I2C_2_Master_Write
  2169                           
  2170                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  2171   00332C  0E01               	movlw	1
  2172   00332E  EC28  F01A         	call	_I2C_2_Master_Read
  2173   003332  6E0F               	movwf	??_color_read_Green^0,c
  2174   003334  500F               	movf	??_color_read_Green^0,w,c
  2175   003336  6E12               	movwf	color_read_Green@tmp^0,c
  2176   003338  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2177                           
  2178                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2179   00333A  0E00               	movlw	0
  2180   00333C  EC28  F01A         	call	_I2C_2_Master_Read
  2181   003340  6E0F               	movwf	??_color_read_Green^0,c
  2182   003342  500F               	movf	??_color_read_Green^0,w,c
  2183   003344  6E11               	movwf	(??_color_read_Green+2)^0,c
  2184   003346  6A10               	clrf	(??_color_read_Green+1)^0,c
  2185   003348  5012               	movf	color_read_Green@tmp^0,w,c
  2186   00334A  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2187   00334C  6E12               	movwf	color_read_Green@tmp^0,c
  2188   00334E  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2189   003350  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2190   003352  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2191                           
  2192                           ;color.c: 54:     I2C_2_Master_Stop();
  2193   003354  EC7D  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2194   003358                     
  2195                           ;color.c: 55:     return tmp;
  2196   003358  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2197   00335C  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2198   003360  0012               	return		;funcret
  2199   003362                     __end_of_color_read_Green:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _color_read_Clear *****************
  2203 ;; Defined at:
  2204 ;;		line 71 in file "color.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  tmp             2   17[COMRAM] unsigned int 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  2   12[COMRAM] unsigned int 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2218 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2220 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2221 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2222 ;;Total ram usage:        7 bytes
  2223 ;; Hardware stack levels used: 1
  2224 ;; Hardware stack levels required when called: 8
  2225 ;; This function calls:
  2226 ;;		_I2C_2_Master_Read
  2227 ;;		_I2C_2_Master_RepStart
  2228 ;;		_I2C_2_Master_Start
  2229 ;;		_I2C_2_Master_Stop
  2230 ;;		_I2C_2_Master_Write
  2231 ;; This function is called by:
  2232 ;;		_color_read_RGBC
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           	psect	text10
  2237   003362                     __ptext10:
  2238                           	callstack 0
  2239   003362                     _color_read_Clear:
  2240                           	callstack 20
  2241   003362                     
  2242                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  2243   003362  EC82  F01B         	call	_I2C_2_Master_Start	;wreg free
  2244                           
  2245                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  2246   003366  0E52               	movlw	82
  2247   003368  EC61  F01B         	call	_I2C_2_Master_Write
  2248                           
  2249                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  2250   00336C  0EB4               	movlw	180
  2251   00336E  EC61  F01B         	call	_I2C_2_Master_Write
  2252                           
  2253                           ;color.c: 76:     I2C_2_Master_RepStart();
  2254   003372  EC73  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2255                           
  2256                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  2257   003376  0E53               	movlw	83
  2258   003378  EC61  F01B         	call	_I2C_2_Master_Write
  2259                           
  2260                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  2261   00337C  0E01               	movlw	1
  2262   00337E  EC28  F01A         	call	_I2C_2_Master_Read
  2263   003382  6E0F               	movwf	??_color_read_Clear^0,c
  2264   003384  500F               	movf	??_color_read_Clear^0,w,c
  2265   003386  6E12               	movwf	color_read_Clear@tmp^0,c
  2266   003388  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2267                           
  2268                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2269   00338A  0E00               	movlw	0
  2270   00338C  EC28  F01A         	call	_I2C_2_Master_Read
  2271   003390  6E0F               	movwf	??_color_read_Clear^0,c
  2272   003392  500F               	movf	??_color_read_Clear^0,w,c
  2273   003394  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2274   003396  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2275   003398  5012               	movf	color_read_Clear@tmp^0,w,c
  2276   00339A  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2277   00339C  6E12               	movwf	color_read_Clear@tmp^0,c
  2278   00339E  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2279   0033A0  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2280   0033A2  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2281                           
  2282                           ;color.c: 80:     I2C_2_Master_Stop();
  2283   0033A4  EC7D  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2284   0033A8                     
  2285                           ;color.c: 81:     return tmp;
  2286   0033A8  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2287   0033AC  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2288   0033B0  0012               	return		;funcret
  2289   0033B2                     __end_of_color_read_Clear:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _color_read_Blue *****************
  2293 ;; Defined at:
  2294 ;;		line 58 in file "color.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  tmp             2   17[COMRAM] unsigned int 
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  2   12[COMRAM] unsigned int 
  2301 ;; Registers used:
  2302 ;;		wreg, status,2, status,0, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2308 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2310 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2312 ;;Total ram usage:        7 bytes
  2313 ;; Hardware stack levels used: 1
  2314 ;; Hardware stack levels required when called: 8
  2315 ;; This function calls:
  2316 ;;		_I2C_2_Master_Read
  2317 ;;		_I2C_2_Master_RepStart
  2318 ;;		_I2C_2_Master_Start
  2319 ;;		_I2C_2_Master_Stop
  2320 ;;		_I2C_2_Master_Write
  2321 ;; This function is called by:
  2322 ;;		_color_read_RGBC
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text11
  2327   0033B2                     __ptext11:
  2328                           	callstack 0
  2329   0033B2                     _color_read_Blue:
  2330                           	callstack 20
  2331   0033B2                     
  2332                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  2333   0033B2  EC82  F01B         	call	_I2C_2_Master_Start	;wreg free
  2334                           
  2335                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  2336   0033B6  0E52               	movlw	82
  2337   0033B8  EC61  F01B         	call	_I2C_2_Master_Write
  2338                           
  2339                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  2340   0033BC  0EBA               	movlw	186
  2341   0033BE  EC61  F01B         	call	_I2C_2_Master_Write
  2342                           
  2343                           ;color.c: 63:     I2C_2_Master_RepStart();
  2344   0033C2  EC73  F01B         	call	_I2C_2_Master_RepStart	;wreg free
  2345                           
  2346                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  2347   0033C6  0E53               	movlw	83
  2348   0033C8  EC61  F01B         	call	_I2C_2_Master_Write
  2349                           
  2350                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  2351   0033CC  0E01               	movlw	1
  2352   0033CE  EC28  F01A         	call	_I2C_2_Master_Read
  2353   0033D2  6E0F               	movwf	??_color_read_Blue^0,c
  2354   0033D4  500F               	movf	??_color_read_Blue^0,w,c
  2355   0033D6  6E12               	movwf	color_read_Blue@tmp^0,c
  2356   0033D8  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2357                           
  2358                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2359   0033DA  0E00               	movlw	0
  2360   0033DC  EC28  F01A         	call	_I2C_2_Master_Read
  2361   0033E0  6E0F               	movwf	??_color_read_Blue^0,c
  2362   0033E2  500F               	movf	??_color_read_Blue^0,w,c
  2363   0033E4  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2364   0033E6  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2365   0033E8  5012               	movf	color_read_Blue@tmp^0,w,c
  2366   0033EA  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2367   0033EC  6E12               	movwf	color_read_Blue@tmp^0,c
  2368   0033EE  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2369   0033F0  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2370   0033F2  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2371                           
  2372                           ;color.c: 67:     I2C_2_Master_Stop();
  2373   0033F4  EC7D  F01B         	call	_I2C_2_Master_Stop	;wreg free
  2374   0033F8                     
  2375                           ;color.c: 68:     return tmp;
  2376   0033F8  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2377   0033FC  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2378   003400  0012               	return		;funcret
  2379   003402                     __end_of_color_read_Blue:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _I2C_2_Master_RepStart *****************
  2383 ;; Defined at:
  2384 ;;		line 33 in file "i2c.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0, cstack
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; Hardware stack levels required when called: 7
  2405 ;; This function calls:
  2406 ;;		_I2C_2_Master_Idle
  2407 ;; This function is called by:
  2408 ;;		_color_read_Red
  2409 ;;		_color_read_Green
  2410 ;;		_color_read_Blue
  2411 ;;		_color_read_Clear
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text12
  2416   0036E6                     __ptext12:
  2417                           	callstack 0
  2418   0036E6                     _I2C_2_Master_RepStart:
  2419                           	callstack 20
  2420   0036E6                     
  2421                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2422   0036E6  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2423   0036EA                     
  2424                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2425   0036EA  010E               	movlb	14	; () banked
  2426   0036EC  83DA               	bsf	218,1,b	;volatile
  2427   0036EE                     
  2428                           ; BSR set to: 14
  2429   0036EE  0012               	return		;funcret
  2430   0036F0                     __end_of_I2C_2_Master_RepStart:
  2431                           	callstack 0
  2432                           
  2433 ;; *************** function _I2C_2_Master_Read *****************
  2434 ;; Defined at:
  2435 ;;		line 51 in file "i2c.c"
  2436 ;; Parameters:    Size  Location     Type
  2437 ;;  ack             1    wreg     unsigned char 
  2438 ;; Auto vars:     Size  Location     Type
  2439 ;;  ack             1   10[COMRAM] unsigned char 
  2440 ;;  tmp             1   11[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      unsigned char 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;Total ram usage:        3 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 7
  2457 ;; This function calls:
  2458 ;;		_I2C_2_Master_Idle
  2459 ;; This function is called by:
  2460 ;;		_color_read_Red
  2461 ;;		_color_read_Green
  2462 ;;		_color_read_Blue
  2463 ;;		_color_read_Clear
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text13
  2468   003450                     __ptext13:
  2469                           	callstack 0
  2470   003450                     _I2C_2_Master_Read:
  2471                           	callstack 20
  2472                           
  2473                           ; BSR set to: 14
  2474                           ;incstack = 0
  2475                           ;I2C_2_Master_Read@ack stored from wreg
  2476   003450  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2477   003452                     
  2478                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2479   003452  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2480   003456                     
  2481                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2482   003456  010E               	movlb	14	; () banked
  2483   003458  87DA               	bsf	218,3,b	;volatile
  2484                           
  2485                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2486   00345A  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2487   00345E                     
  2488                           ;i2c.c: 57:   tmp = SSP2BUF;
  2489   00345E  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2490                           
  2491                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2492   003462  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  2493   003466                     
  2494                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2495   003466  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2496   003468  B4D8               	btfsc	status,2,c
  2497   00346A  EF39  F01A         	goto	u2431
  2498   00346E  EF3D  F01A         	goto	u2430
  2499   003472                     u2431:
  2500   003472  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2501   003474  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2502   003476  EF3E  F01A         	goto	u2448
  2503   00347A                     u2430:
  2504   00347A  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2505   00347C                     u2448:
  2506   00347C  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2507   00347E  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2508   003480  010E               	movlb	14	; () banked
  2509   003482  51DA               	movf	218,w,b	;volatile
  2510   003484  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2511   003486  0BDF               	andlw	-33
  2512   003488  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2513   00348A  6FDA               	movwf	218,b	;volatile
  2514   00348C                     
  2515                           ; BSR set to: 14
  2516                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2517   00348C  89DA               	bsf	218,4,b	;volatile
  2518   00348E                     
  2519                           ; BSR set to: 14
  2520                           ;i2c.c: 61:   return tmp;
  2521   00348E  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2522   003490                     
  2523                           ; BSR set to: 14
  2524   003490  0012               	return		;funcret
  2525   003492                     __end_of_I2C_2_Master_Read:
  2526                           	callstack 0
  2527                           
  2528 ;; *************** function _color_normalise *****************
  2529 ;; Defined at:
  2530 ;;		line 102 in file "color.c"
  2531 ;; Parameters:    Size  Location     Type
  2532 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2533 ;;		 -> main@RGBC(32), 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2545 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2548 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2549 ;;Total ram usage:        2 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 7
  2552 ;; This function calls:
  2553 ;;		___fldiv
  2554 ;;		___xxtofl
  2555 ;; This function is called by:
  2556 ;;		_rangeCalibrate
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561                           	psect	text14
  2562   0027EC                     __ptext14:
  2563                           	callstack 0
  2564   0027EC                     _color_normalise:
  2565                           	callstack 22
  2566   0027EC                     
  2567                           ;color.c: 103:     amb_clear = 2385;
  2568   0027EC  0E09               	movlw	9
  2569   0027EE  6E4E               	movwf	(_amb_clear+1)^0,c
  2570   0027F0  0E51               	movlw	81
  2571   0027F2  6E4D               	movwf	_amb_clear^0,c
  2572   0027F4                     
  2573                           ;color.c: 104:     RGBC->norm_R = RGBC->C / RGBC->R;
  2574   0027F4  EE20 F00C          	lfsr	2,12
  2575   0027F8  503B               	movf	color_normalise@RGBC^0,w,c
  2576   0027FA  26D9               	addwf	fsr2l,f,c
  2577   0027FC  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2578   0027FE  22DA               	addwfc	fsr2h,f,c
  2579   002800  CFDE F022          	movff	postinc2,___fldiv@b
  2580   002804  CFDE F023          	movff	postinc2,___fldiv@b+1
  2581   002808  CFDE F024          	movff	postinc2,___fldiv@b+2
  2582   00280C  CFDE F025          	movff	postinc2,___fldiv@b+3
  2583   002810  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2584   002814  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2585   002818  CFDE F026          	movff	postinc2,___fldiv@a
  2586   00281C  CFDE F027          	movff	postinc2,___fldiv@a+1
  2587   002820  CFDE F028          	movff	postinc2,___fldiv@a+2
  2588   002824  CFDE F029          	movff	postinc2,___fldiv@a+3
  2589   002828  EC4F  F011         	call	___fldiv	;wreg free
  2590   00282C  EE20 F010          	lfsr	2,16
  2591   002830  503B               	movf	color_normalise@RGBC^0,w,c
  2592   002832  26D9               	addwf	fsr2l,f,c
  2593   002834  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2594   002836  22DA               	addwfc	fsr2h,f,c
  2595   002838  C022  FFDE         	movff	?___fldiv,postinc2
  2596   00283C  C023  FFDE         	movff	?___fldiv+1,postinc2
  2597   002840  C024  FFDE         	movff	?___fldiv+2,postinc2
  2598   002844  C025  FFDE         	movff	?___fldiv+3,postinc2
  2599   002848                     
  2600                           ;color.c: 105:     RGBC->norm_G = RGBC->C / RGBC->G;
  2601   002848  EE20 F00C          	lfsr	2,12
  2602   00284C  503B               	movf	color_normalise@RGBC^0,w,c
  2603   00284E  26D9               	addwf	fsr2l,f,c
  2604   002850  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2605   002852  22DA               	addwfc	fsr2h,f,c
  2606   002854  CFDE F022          	movff	postinc2,___fldiv@b
  2607   002858  CFDE F023          	movff	postinc2,___fldiv@b+1
  2608   00285C  CFDE F024          	movff	postinc2,___fldiv@b+2
  2609   002860  CFDE F025          	movff	postinc2,___fldiv@b+3
  2610   002864  EE20 F004          	lfsr	2,4
  2611   002868  503B               	movf	color_normalise@RGBC^0,w,c
  2612   00286A  26D9               	addwf	fsr2l,f,c
  2613   00286C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2614   00286E  22DA               	addwfc	fsr2h,f,c
  2615   002870  CFDE F026          	movff	postinc2,___fldiv@a
  2616   002874  CFDE F027          	movff	postinc2,___fldiv@a+1
  2617   002878  CFDE F028          	movff	postinc2,___fldiv@a+2
  2618   00287C  CFDE F029          	movff	postinc2,___fldiv@a+3
  2619   002880  EC4F  F011         	call	___fldiv	;wreg free
  2620   002884  EE20 F014          	lfsr	2,20
  2621   002888  503B               	movf	color_normalise@RGBC^0,w,c
  2622   00288A  26D9               	addwf	fsr2l,f,c
  2623   00288C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2624   00288E  22DA               	addwfc	fsr2h,f,c
  2625   002890  C022  FFDE         	movff	?___fldiv,postinc2
  2626   002894  C023  FFDE         	movff	?___fldiv+1,postinc2
  2627   002898  C024  FFDE         	movff	?___fldiv+2,postinc2
  2628   00289C  C025  FFDE         	movff	?___fldiv+3,postinc2
  2629   0028A0                     
  2630                           ;color.c: 106:     RGBC->norm_B = RGBC->C / RGBC->B;
  2631   0028A0  EE20 F00C          	lfsr	2,12
  2632   0028A4  503B               	movf	color_normalise@RGBC^0,w,c
  2633   0028A6  26D9               	addwf	fsr2l,f,c
  2634   0028A8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2635   0028AA  22DA               	addwfc	fsr2h,f,c
  2636   0028AC  CFDE F022          	movff	postinc2,___fldiv@b
  2637   0028B0  CFDE F023          	movff	postinc2,___fldiv@b+1
  2638   0028B4  CFDE F024          	movff	postinc2,___fldiv@b+2
  2639   0028B8  CFDE F025          	movff	postinc2,___fldiv@b+3
  2640   0028BC  EE20 F008          	lfsr	2,8
  2641   0028C0  503B               	movf	color_normalise@RGBC^0,w,c
  2642   0028C2  26D9               	addwf	fsr2l,f,c
  2643   0028C4  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2644   0028C6  22DA               	addwfc	fsr2h,f,c
  2645   0028C8  CFDE F026          	movff	postinc2,___fldiv@a
  2646   0028CC  CFDE F027          	movff	postinc2,___fldiv@a+1
  2647   0028D0  CFDE F028          	movff	postinc2,___fldiv@a+2
  2648   0028D4  CFDE F029          	movff	postinc2,___fldiv@a+3
  2649   0028D8  EC4F  F011         	call	___fldiv	;wreg free
  2650   0028DC  EE20 F018          	lfsr	2,24
  2651   0028E0  503B               	movf	color_normalise@RGBC^0,w,c
  2652   0028E2  26D9               	addwf	fsr2l,f,c
  2653   0028E4  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2654   0028E6  22DA               	addwfc	fsr2h,f,c
  2655   0028E8  C022  FFDE         	movff	?___fldiv,postinc2
  2656   0028EC  C023  FFDE         	movff	?___fldiv+1,postinc2
  2657   0028F0  C024  FFDE         	movff	?___fldiv+2,postinc2
  2658   0028F4  C025  FFDE         	movff	?___fldiv+3,postinc2
  2659   0028F8                     
  2660                           ;color.c: 107:     RGBC->norm_C = RGBC->C / amb_clear;
  2661   0028F8  EE20 F00C          	lfsr	2,12
  2662   0028FC  503B               	movf	color_normalise@RGBC^0,w,c
  2663   0028FE  26D9               	addwf	fsr2l,f,c
  2664   002900  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2665   002902  22DA               	addwfc	fsr2h,f,c
  2666   002904  CFDE F022          	movff	postinc2,___fldiv@b
  2667   002908  CFDE F023          	movff	postinc2,___fldiv@b+1
  2668   00290C  CFDE F024          	movff	postinc2,___fldiv@b+2
  2669   002910  CFDE F025          	movff	postinc2,___fldiv@b+3
  2670   002914  0E51               	movlw	81
  2671   002916  6E14               	movwf	___xxtofl@val^0,c
  2672   002918  0E09               	movlw	9
  2673   00291A  6E15               	movwf	(___xxtofl@val+1)^0,c
  2674   00291C  0E00               	movlw	0
  2675   00291E  6E16               	movwf	(___xxtofl@val+2)^0,c
  2676   002920  0E00               	movlw	0
  2677   002922  6E17               	movwf	(___xxtofl@val+3)^0,c
  2678   002924  0E01               	movlw	1
  2679   002926  EC1C  F013         	call	___xxtofl
  2680   00292A  C014  F026         	movff	?___xxtofl,___fldiv@a
  2681   00292E  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2682   002932  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2683   002936  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2684   00293A  EC4F  F011         	call	___fldiv	;wreg free
  2685   00293E  EE20 F01C          	lfsr	2,28
  2686   002942  503B               	movf	color_normalise@RGBC^0,w,c
  2687   002944  26D9               	addwf	fsr2l,f,c
  2688   002946  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2689   002948  22DA               	addwfc	fsr2h,f,c
  2690   00294A  C022  FFDE         	movff	?___fldiv,postinc2
  2691   00294E  C023  FFDE         	movff	?___fldiv+1,postinc2
  2692   002952  C024  FFDE         	movff	?___fldiv+2,postinc2
  2693   002956  C025  FFDE         	movff	?___fldiv+3,postinc2
  2694   00295A  0012               	return		;funcret
  2695   00295C                     __end_of_color_normalise:
  2696                           	callstack 0
  2697                           
  2698 ;; *************** function ___xxtofl *****************
  2699 ;; Defined at:
  2700 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  sign            1    wreg     unsigned char 
  2703 ;;  val             4   19[COMRAM] long 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  sign            1   27[COMRAM] unsigned char 
  2706 ;;  arg             4   29[COMRAM] unsigned long 
  2707 ;;  exp             1   28[COMRAM] unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  4   19[COMRAM] unsigned char 
  2710 ;; Registers used:
  2711 ;;		wreg, status,2, status,0
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2717 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2718 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2719 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2720 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;Total ram usage:       14 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 6
  2724 ;; This function calls:
  2725 ;;		Nothing
  2726 ;; This function is called by:
  2727 ;;		_color_read_RGBC
  2728 ;;		_color_normalise
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text15
  2733   002638                     __ptext15:
  2734                           	callstack 0
  2735   002638                     ___xxtofl:
  2736                           	callstack 22
  2737                           
  2738                           ;incstack = 0
  2739                           ;___xxtofl@sign stored from wreg
  2740   002638  6E1C               	movwf	___xxtofl@sign^0,c
  2741   00263A  501C               	movf	___xxtofl@sign^0,w,c
  2742   00263C  B4D8               	btfsc	status,2,c
  2743   00263E  EF23  F013         	goto	u2681
  2744   002642  EF25  F013         	goto	u2680
  2745   002646                     u2681:
  2746   002646  EF47  F013         	goto	l1357
  2747   00264A                     u2680:
  2748   00264A  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2749   00264C  EF2C  F013         	goto	u2690
  2750   002650  EF2A  F013         	goto	u2691
  2751   002654                     u2691:
  2752   002654  EF47  F013         	goto	l1357
  2753   002658                     u2690:
  2754   002658  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2755   00265C  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2756   002660  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2757   002664  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2758   002668  1E18               	comf	??___xxtofl^0,f,c
  2759   00266A  1E19               	comf	(??___xxtofl+1)^0,f,c
  2760   00266C  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2761   00266E  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2762   002670  2A18               	incf	??___xxtofl^0,f,c
  2763   002672  0E00               	movlw	0
  2764   002674  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2765   002676  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2766   002678  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2767   00267A  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2768   00267E  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2769   002682  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2770   002686  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2771   00268A  EF4F  F013         	goto	l3726
  2772   00268E                     l1357:
  2773   00268E  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2774   002692  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2775   002696  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2776   00269A  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2777   00269E                     l3726:
  2778   00269E  5014               	movf	___xxtofl@val^0,w,c
  2779   0026A0  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2780   0026A2  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2781   0026A4  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2782   0026A6  A4D8               	btfss	status,2,c
  2783   0026A8  EF58  F013         	goto	u2701
  2784   0026AC  EF5A  F013         	goto	u2700
  2785   0026B0                     u2701:
  2786   0026B0  EF64  F013         	goto	l3732
  2787   0026B4                     u2700:
  2788   0026B4  0E00               	movlw	0
  2789   0026B6  6E14               	movwf	?___xxtofl^0,c
  2790   0026B8  0E00               	movlw	0
  2791   0026BA  6E15               	movwf	(?___xxtofl+1)^0,c
  2792   0026BC  0E00               	movlw	0
  2793   0026BE  6E16               	movwf	(?___xxtofl+2)^0,c
  2794   0026C0  0E00               	movlw	0
  2795   0026C2  6E17               	movwf	(?___xxtofl+3)^0,c
  2796   0026C4  EFF5  F013         	goto	l1360
  2797   0026C8                     l3732:
  2798   0026C8  0E96               	movlw	150
  2799   0026CA  6E1D               	movwf	___xxtofl@exp^0,c
  2800   0026CC  EF6E  F013         	goto	l3736
  2801   0026D0                     l3734:
  2802   0026D0  2A1D               	incf	___xxtofl@exp^0,f,c
  2803   0026D2  90D8               	bcf	status,0,c
  2804   0026D4  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2805   0026D6  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2806   0026D8  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2807   0026DA  321E               	rrcf	___xxtofl@arg^0,f,c
  2808   0026DC                     l3736:
  2809   0026DC  0E00               	movlw	0
  2810   0026DE  141E               	andwf	___xxtofl@arg^0,w,c
  2811   0026E0  6E18               	movwf	??___xxtofl^0,c
  2812   0026E2  0E00               	movlw	0
  2813   0026E4  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2814   0026E6  6E19               	movwf	(??___xxtofl+1)^0,c
  2815   0026E8  0E00               	movlw	0
  2816   0026EA  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2817   0026EC  6E1A               	movwf	(??___xxtofl+2)^0,c
  2818   0026EE  0EFE               	movlw	254
  2819   0026F0  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2820   0026F2  6E1B               	movwf	(??___xxtofl+3)^0,c
  2821   0026F4  5018               	movf	??___xxtofl^0,w,c
  2822   0026F6  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2823   0026F8  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2824   0026FA  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2825   0026FC  A4D8               	btfss	status,2,c
  2826   0026FE  EF83  F013         	goto	u2711
  2827   002702  EF85  F013         	goto	u2710
  2828   002706                     u2711:
  2829   002706  EF68  F013         	goto	l3734
  2830   00270A                     u2710:
  2831   00270A  EF93  F013         	goto	l1364
  2832   00270E                     l3738:
  2833   00270E  2A1D               	incf	___xxtofl@exp^0,f,c
  2834   002710  0E01               	movlw	1
  2835   002712  261E               	addwf	___xxtofl@arg^0,f,c
  2836   002714  0E00               	movlw	0
  2837   002716  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2838   002718  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2839   00271A  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2840   00271C  90D8               	bcf	status,0,c
  2841   00271E  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2842   002720  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2843   002722  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2844   002724  321E               	rrcf	___xxtofl@arg^0,f,c
  2845   002726                     l1364:
  2846   002726  0E00               	movlw	0
  2847   002728  141E               	andwf	___xxtofl@arg^0,w,c
  2848   00272A  6E18               	movwf	??___xxtofl^0,c
  2849   00272C  0E00               	movlw	0
  2850   00272E  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2851   002730  6E19               	movwf	(??___xxtofl+1)^0,c
  2852   002732  0E00               	movlw	0
  2853   002734  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2854   002736  6E1A               	movwf	(??___xxtofl+2)^0,c
  2855   002738  0EFF               	movlw	255
  2856   00273A  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2857   00273C  6E1B               	movwf	(??___xxtofl+3)^0,c
  2858   00273E  5018               	movf	??___xxtofl^0,w,c
  2859   002740  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2860   002742  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2861   002744  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2862   002746  A4D8               	btfss	status,2,c
  2863   002748  EFA8  F013         	goto	u2721
  2864   00274C  EFAA  F013         	goto	u2720
  2865   002750                     u2721:
  2866   002750  EF87  F013         	goto	l3738
  2867   002754                     u2720:
  2868   002754  EFB2  F013         	goto	l3746
  2869   002758                     l3744:
  2870   002758  061D               	decf	___xxtofl@exp^0,f,c
  2871   00275A  90D8               	bcf	status,0,c
  2872   00275C  361E               	rlcf	___xxtofl@arg^0,f,c
  2873   00275E  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2874   002760  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2875   002762  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2876   002764                     l3746:
  2877   002764  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2878   002766  EFB7  F013         	goto	u2731
  2879   00276A  EFB9  F013         	goto	u2730
  2880   00276E                     u2731:
  2881   00276E  EFC1  F013         	goto	l1371
  2882   002772                     u2730:
  2883   002772  0E02               	movlw	2
  2884   002774  601D               	cpfslt	___xxtofl@exp^0,c
  2885   002776  EFBF  F013         	goto	u2741
  2886   00277A  EFC1  F013         	goto	u2740
  2887   00277E                     u2741:
  2888   00277E  EFAC  F013         	goto	l3744
  2889   002782                     u2740:
  2890   002782                     l1371:
  2891   002782  B01D               	btfsc	___xxtofl@exp^0,0,c
  2892   002784  EFC6  F013         	goto	u2751
  2893   002788  EFC8  F013         	goto	u2750
  2894   00278C                     u2751:
  2895   00278C  EFC9  F013         	goto	l3752
  2896   002790                     u2750:
  2897   002790  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2898   002792                     l3752:
  2899   002792  90D8               	bcf	status,0,c
  2900   002794  321D               	rrcf	___xxtofl@exp^0,f,c
  2901   002796  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2902   00279A  6A19               	clrf	(??___xxtofl+1)^0,c
  2903   00279C  6A1A               	clrf	(??___xxtofl+2)^0,c
  2904   00279E  6A1B               	clrf	(??___xxtofl+3)^0,c
  2905   0027A0  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2906   0027A4  6A1A               	clrf	(??___xxtofl+2)^0,c
  2907   0027A6  6A19               	clrf	(??___xxtofl+1)^0,c
  2908   0027A8  6A18               	clrf	??___xxtofl^0,c
  2909   0027AA  5018               	movf	??___xxtofl^0,w,c
  2910   0027AC  121E               	iorwf	___xxtofl@arg^0,f,c
  2911   0027AE  5019               	movf	(??___xxtofl+1)^0,w,c
  2912   0027B0  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2913   0027B2  501A               	movf	(??___xxtofl+2)^0,w,c
  2914   0027B4  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2915   0027B6  501B               	movf	(??___xxtofl+3)^0,w,c
  2916   0027B8  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2917   0027BA  501C               	movf	___xxtofl@sign^0,w,c
  2918   0027BC  B4D8               	btfsc	status,2,c
  2919   0027BE  EFE3  F013         	goto	u2761
  2920   0027C2  EFE5  F013         	goto	u2760
  2921   0027C6                     u2761:
  2922   0027C6  EFED  F013         	goto	l3762
  2923   0027CA                     u2760:
  2924   0027CA  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2925   0027CC  EFEC  F013         	goto	u2770
  2926   0027D0  EFEA  F013         	goto	u2771
  2927   0027D4                     u2771:
  2928   0027D4  EFED  F013         	goto	l3762
  2929   0027D8                     u2770:
  2930   0027D8  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  2931   0027DA                     l3762:
  2932   0027DA  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  2933   0027DE  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  2934   0027E2  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  2935   0027E6  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  2936   0027EA                     l1360:
  2937   0027EA  0012               	return		;funcret
  2938   0027EC                     __end_of___xxtofl:
  2939                           	callstack 0
  2940                           
  2941 ;; *************** function ___fldiv *****************
  2942 ;; Defined at:
  2943 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  2944 ;; Parameters:    Size  Location     Type
  2945 ;;  b               4   33[COMRAM] unsigned char 
  2946 ;;  a               4   37[COMRAM] unsigned char 
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;  grs             4   52[COMRAM] unsigned long 
  2949 ;;  rem             4   45[COMRAM] unsigned long 
  2950 ;;  new_exp         2   50[COMRAM] short 
  2951 ;;  aexp            1   57[COMRAM] unsigned char 
  2952 ;;  bexp            1   56[COMRAM] unsigned char 
  2953 ;;  sign            1   49[COMRAM] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  4   33[COMRAM] unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2, status,0
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2966 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;Total ram usage:       25 bytes
  2968 ;; Hardware stack levels used: 1
  2969 ;; Hardware stack levels required when called: 6
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_color_normalise
  2974 ;; This function uses a non-reentrant model
  2975 ;;
  2976                           
  2977                           	psect	text16
  2978   00229E                     __ptext16:
  2979                           	callstack 0
  2980   00229E                     ___fldiv:
  2981                           	callstack 22
  2982   00229E  5025               	movf	(___fldiv@b+3)^0,w,c
  2983   0022A0  0B80               	andlw	128
  2984   0022A2  6E32               	movwf	___fldiv@sign^0,c
  2985   0022A4  5025               	movf	(___fldiv@b+3)^0,w,c
  2986   0022A6  2425               	addwf	(___fldiv@b+3)^0,w,c
  2987   0022A8  6E39               	movwf	___fldiv@bexp^0,c
  2988   0022AA  AE24               	btfss	(___fldiv@b+2)^0,7,c
  2989   0022AC  EF5A  F011         	goto	u2451
  2990   0022B0  EF5C  F011         	goto	u2450
  2991   0022B4                     u2451:
  2992   0022B4  EF5D  F011         	goto	l3588
  2993   0022B8                     u2450:
  2994   0022B8  8039               	bsf	___fldiv@bexp^0,0,c
  2995   0022BA                     l3588:
  2996   0022BA  5039               	movf	___fldiv@bexp^0,w,c
  2997   0022BC  B4D8               	btfsc	status,2,c
  2998   0022BE  EF63  F011         	goto	u2461
  2999   0022C2  EF65  F011         	goto	u2460
  3000   0022C6                     u2461:
  3001   0022C6  EF7A  F011         	goto	l3598
  3002   0022CA                     u2460:
  3003   0022CA  2839               	incf	___fldiv@bexp^0,w,c
  3004   0022CC  A4D8               	btfss	status,2,c
  3005   0022CE  EF6B  F011         	goto	u2471
  3006   0022D2  EF6D  F011         	goto	u2470
  3007   0022D6                     u2471:
  3008   0022D6  EF75  F011         	goto	l3594
  3009   0022DA                     u2470:
  3010   0022DA  0E00               	movlw	0
  3011   0022DC  6E22               	movwf	___fldiv@b^0,c
  3012   0022DE  0E00               	movlw	0
  3013   0022E0  6E23               	movwf	(___fldiv@b+1)^0,c
  3014   0022E2  0E00               	movlw	0
  3015   0022E4  6E24               	movwf	(___fldiv@b+2)^0,c
  3016   0022E6  0E00               	movlw	0
  3017   0022E8  6E25               	movwf	(___fldiv@b+3)^0,c
  3018   0022EA                     l3594:
  3019   0022EA  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3020   0022EC  0E00               	movlw	0
  3021   0022EE  6E25               	movwf	(___fldiv@b+3)^0,c
  3022   0022F0  EF82  F011         	goto	l3600
  3023   0022F4                     l3598:
  3024   0022F4  0E00               	movlw	0
  3025   0022F6  6E22               	movwf	___fldiv@b^0,c
  3026   0022F8  0E00               	movlw	0
  3027   0022FA  6E23               	movwf	(___fldiv@b+1)^0,c
  3028   0022FC  0E00               	movlw	0
  3029   0022FE  6E24               	movwf	(___fldiv@b+2)^0,c
  3030   002300  0E00               	movlw	0
  3031   002302  6E25               	movwf	(___fldiv@b+3)^0,c
  3032   002304                     l3600:
  3033   002304  5029               	movf	(___fldiv@a+3)^0,w,c
  3034   002306  0B80               	andlw	128
  3035   002308  1A32               	xorwf	___fldiv@sign^0,f,c
  3036   00230A  5029               	movf	(___fldiv@a+3)^0,w,c
  3037   00230C  2429               	addwf	(___fldiv@a+3)^0,w,c
  3038   00230E  6E3A               	movwf	___fldiv@aexp^0,c
  3039   002310  AE28               	btfss	(___fldiv@a+2)^0,7,c
  3040   002312  EF8D  F011         	goto	u2481
  3041   002316  EF8F  F011         	goto	u2480
  3042   00231A                     u2481:
  3043   00231A  EF90  F011         	goto	l3608
  3044   00231E                     u2480:
  3045   00231E  803A               	bsf	___fldiv@aexp^0,0,c
  3046   002320                     l3608:
  3047   002320  503A               	movf	___fldiv@aexp^0,w,c
  3048   002322  B4D8               	btfsc	status,2,c
  3049   002324  EF96  F011         	goto	u2491
  3050   002328  EF98  F011         	goto	u2490
  3051   00232C                     u2491:
  3052   00232C  EFAD  F011         	goto	l3618
  3053   002330                     u2490:
  3054   002330  283A               	incf	___fldiv@aexp^0,w,c
  3055   002332  A4D8               	btfss	status,2,c
  3056   002334  EF9E  F011         	goto	u2501
  3057   002338  EFA0  F011         	goto	u2500
  3058   00233C                     u2501:
  3059   00233C  EFA8  F011         	goto	l3614
  3060   002340                     u2500:
  3061   002340  0E00               	movlw	0
  3062   002342  6E26               	movwf	___fldiv@a^0,c
  3063   002344  0E00               	movlw	0
  3064   002346  6E27               	movwf	(___fldiv@a+1)^0,c
  3065   002348  0E00               	movlw	0
  3066   00234A  6E28               	movwf	(___fldiv@a+2)^0,c
  3067   00234C  0E00               	movlw	0
  3068   00234E  6E29               	movwf	(___fldiv@a+3)^0,c
  3069   002350                     l3614:
  3070   002350  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3071   002352  0E00               	movlw	0
  3072   002354  6E29               	movwf	(___fldiv@a+3)^0,c
  3073   002356  EFB5  F011         	goto	l3620
  3074   00235A                     l3618:
  3075   00235A  0E00               	movlw	0
  3076   00235C  6E26               	movwf	___fldiv@a^0,c
  3077   00235E  0E00               	movlw	0
  3078   002360  6E27               	movwf	(___fldiv@a+1)^0,c
  3079   002362  0E00               	movlw	0
  3080   002364  6E28               	movwf	(___fldiv@a+2)^0,c
  3081   002366  0E00               	movlw	0
  3082   002368  6E29               	movwf	(___fldiv@a+3)^0,c
  3083   00236A                     l3620:
  3084   00236A  5026               	movf	___fldiv@a^0,w,c
  3085   00236C  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3086   00236E  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3087   002370  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3088   002372  A4D8               	btfss	status,2,c
  3089   002374  EFBE  F011         	goto	u2511
  3090   002378  EFC0  F011         	goto	u2510
  3091   00237C                     u2511:
  3092   00237C  EFD8  F011         	goto	l3632
  3093   002380                     u2510:
  3094   002380  0E00               	movlw	0
  3095   002382  6E22               	movwf	___fldiv@b^0,c
  3096   002384  0E00               	movlw	0
  3097   002386  6E23               	movwf	(___fldiv@b+1)^0,c
  3098   002388  0E00               	movlw	0
  3099   00238A  6E24               	movwf	(___fldiv@b+2)^0,c
  3100   00238C  0E00               	movlw	0
  3101   00238E  6E25               	movwf	(___fldiv@b+3)^0,c
  3102   002390  0E80               	movlw	128
  3103   002392  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3104   002394  0E7F               	movlw	127
  3105   002396  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3106   002398                     l3626:
  3107   002398  5032               	movf	___fldiv@sign^0,w,c
  3108   00239A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3109   00239C  C022  F022         	movff	___fldiv@b,?___fldiv
  3110   0023A0  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3111   0023A4  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3112   0023A8  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3113   0023AC  EF1B  F013         	goto	l1284
  3114   0023B0                     l3632:
  3115   0023B0  5039               	movf	___fldiv@bexp^0,w,c
  3116   0023B2  A4D8               	btfss	status,2,c
  3117   0023B4  EFDE  F011         	goto	u2521
  3118   0023B8  EFE0  F011         	goto	u2520
  3119   0023BC                     u2521:
  3120   0023BC  EFEA  F011         	goto	l3640
  3121   0023C0                     u2520:
  3122   0023C0  0E00               	movlw	0
  3123   0023C2  6E22               	movwf	?___fldiv^0,c
  3124   0023C4  0E00               	movlw	0
  3125   0023C6  6E23               	movwf	(?___fldiv+1)^0,c
  3126   0023C8  0E00               	movlw	0
  3127   0023CA  6E24               	movwf	(?___fldiv+2)^0,c
  3128   0023CC  0E00               	movlw	0
  3129   0023CE  6E25               	movwf	(?___fldiv+3)^0,c
  3130   0023D0  EF1B  F013         	goto	l1284
  3131   0023D4                     l3640:
  3132   0023D4  503A               	movf	___fldiv@aexp^0,w,c
  3133   0023D6  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3134   0023DA  6A2B               	clrf	(??___fldiv+1)^0,c
  3135   0023DC  5E2A               	subwf	??___fldiv^0,f,c
  3136   0023DE  0E00               	movlw	0
  3137   0023E0  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3138   0023E2  0E7F               	movlw	127
  3139   0023E4  242A               	addwf	??___fldiv^0,w,c
  3140   0023E6  6E33               	movwf	___fldiv@new_exp^0,c
  3141   0023E8  0E00               	movlw	0
  3142   0023EA  202B               	addwfc	(??___fldiv+1)^0,w,c
  3143   0023EC  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3144   0023EE  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3145   0023F2  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3146   0023F6  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3147   0023FA  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3148   0023FE  0E00               	movlw	0
  3149   002400  6E22               	movwf	___fldiv@b^0,c
  3150   002402  0E00               	movlw	0
  3151   002404  6E23               	movwf	(___fldiv@b+1)^0,c
  3152   002406  0E00               	movlw	0
  3153   002408  6E24               	movwf	(___fldiv@b+2)^0,c
  3154   00240A  0E00               	movlw	0
  3155   00240C  6E25               	movwf	(___fldiv@b+3)^0,c
  3156   00240E  0E00               	movlw	0
  3157   002410  6E35               	movwf	___fldiv@grs^0,c
  3158   002412  0E00               	movlw	0
  3159   002414  6E36               	movwf	(___fldiv@grs+1)^0,c
  3160   002416  0E00               	movlw	0
  3161   002418  6E37               	movwf	(___fldiv@grs+2)^0,c
  3162   00241A  0E00               	movlw	0
  3163   00241C  6E38               	movwf	(___fldiv@grs+3)^0,c
  3164   00241E  0E00               	movlw	0
  3165   002420  6E3A               	movwf	___fldiv@aexp^0,c
  3166   002422  EF4B  F012         	goto	l1286
  3167   002426                     l3650:
  3168   002426  503A               	movf	___fldiv@aexp^0,w,c
  3169   002428  B4D8               	btfsc	status,2,c
  3170   00242A  EF19  F012         	goto	u2531
  3171   00242E  EF1B  F012         	goto	u2530
  3172   002432                     u2531:
  3173   002432  EF32  F012         	goto	l3658
  3174   002436                     u2530:
  3175   002436  90D8               	bcf	status,0,c
  3176   002438  362E               	rlcf	___fldiv@rem^0,f,c
  3177   00243A  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3178   00243C  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3179   00243E  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3180   002440  90D8               	bcf	status,0,c
  3181   002442  3622               	rlcf	___fldiv@b^0,f,c
  3182   002444  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3183   002446  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3184   002448  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3185   00244A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3186   00244C  EF2A  F012         	goto	u2541
  3187   002450  EF2C  F012         	goto	u2540
  3188   002454                     u2541:
  3189   002454  EF2D  F012         	goto	l1289
  3190   002458                     u2540:
  3191   002458  8022               	bsf	___fldiv@b^0,0,c
  3192   00245A                     l1289:
  3193   00245A  90D8               	bcf	status,0,c
  3194   00245C  3635               	rlcf	___fldiv@grs^0,f,c
  3195   00245E  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3196   002460  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3197   002462  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3198   002464                     l3658:
  3199   002464  5026               	movf	___fldiv@a^0,w,c
  3200   002466  5C2E               	subwf	___fldiv@rem^0,w,c
  3201   002468  5027               	movf	(___fldiv@a+1)^0,w,c
  3202   00246A  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3203   00246C  5028               	movf	(___fldiv@a+2)^0,w,c
  3204   00246E  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3205   002470  5029               	movf	(___fldiv@a+3)^0,w,c
  3206   002472  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3207   002474  A0D8               	btfss	status,0,c
  3208   002476  EF3F  F012         	goto	u2551
  3209   00247A  EF41  F012         	goto	u2550
  3210   00247E                     u2551:
  3211   00247E  EF4A  F012         	goto	l3664
  3212   002482                     u2550:
  3213   002482  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3214   002484  5026               	movf	___fldiv@a^0,w,c
  3215   002486  5E2E               	subwf	___fldiv@rem^0,f,c
  3216   002488  5027               	movf	(___fldiv@a+1)^0,w,c
  3217   00248A  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3218   00248C  5028               	movf	(___fldiv@a+2)^0,w,c
  3219   00248E  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3220   002490  5029               	movf	(___fldiv@a+3)^0,w,c
  3221   002492  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3222   002494                     l3664:
  3223   002494  2A3A               	incf	___fldiv@aexp^0,f,c
  3224   002496                     l1286:
  3225   002496  0E19               	movlw	25
  3226   002498  643A               	cpfsgt	___fldiv@aexp^0,c
  3227   00249A  EF51  F012         	goto	u2561
  3228   00249E  EF53  F012         	goto	u2560
  3229   0024A2                     u2561:
  3230   0024A2  EF13  F012         	goto	l3650
  3231   0024A6                     u2560:
  3232   0024A6  502E               	movf	___fldiv@rem^0,w,c
  3233   0024A8  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3234   0024AA  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3235   0024AC  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3236   0024AE  B4D8               	btfsc	status,2,c
  3237   0024B0  EF5C  F012         	goto	u2571
  3238   0024B4  EF5E  F012         	goto	u2570
  3239   0024B8                     u2571:
  3240   0024B8  EF76  F012         	goto	l3676
  3241   0024BC                     u2570:
  3242   0024BC  8035               	bsf	___fldiv@grs^0,0,c
  3243   0024BE  EF76  F012         	goto	l3676
  3244   0024C2                     l3670:
  3245   0024C2  90D8               	bcf	status,0,c
  3246   0024C4  3622               	rlcf	___fldiv@b^0,f,c
  3247   0024C6  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3248   0024C8  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3249   0024CA  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3250   0024CC  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3251   0024CE  EF6B  F012         	goto	u2581
  3252   0024D2  EF6D  F012         	goto	u2580
  3253   0024D6                     u2581:
  3254   0024D6  EF6E  F012         	goto	l1295
  3255   0024DA                     u2580:
  3256   0024DA  8022               	bsf	___fldiv@b^0,0,c
  3257   0024DC                     l1295:
  3258   0024DC  90D8               	bcf	status,0,c
  3259   0024DE  3635               	rlcf	___fldiv@grs^0,f,c
  3260   0024E0  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3261   0024E2  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3262   0024E4  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3263   0024E6  0633               	decf	___fldiv@new_exp^0,f,c
  3264   0024E8  A0D8               	btfss	status,0,c
  3265   0024EA  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3266   0024EC                     l3676:
  3267   0024EC  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3268   0024EE  EF7B  F012         	goto	u2591
  3269   0024F2  EF7D  F012         	goto	u2590
  3270   0024F6                     u2591:
  3271   0024F6  EF61  F012         	goto	l3670
  3272   0024FA                     u2590:
  3273   0024FA  0E00               	movlw	0
  3274   0024FC  6E3A               	movwf	___fldiv@aexp^0,c
  3275   0024FE  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3276   002500  EF84  F012         	goto	u2601
  3277   002504  EF86  F012         	goto	u2600
  3278   002508                     u2601:
  3279   002508  EFAA  F012         	goto	l1297
  3280   00250C                     u2600:
  3281   00250C  0EFF               	movlw	255
  3282   00250E  1435               	andwf	___fldiv@grs^0,w,c
  3283   002510  6E2A               	movwf	??___fldiv^0,c
  3284   002512  0EFF               	movlw	255
  3285   002514  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3286   002516  6E2B               	movwf	(??___fldiv+1)^0,c
  3287   002518  0EFF               	movlw	255
  3288   00251A  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3289   00251C  6E2C               	movwf	(??___fldiv+2)^0,c
  3290   00251E  0E7F               	movlw	127
  3291   002520  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3292   002522  6E2D               	movwf	(??___fldiv+3)^0,c
  3293   002524  502A               	movf	??___fldiv^0,w,c
  3294   002526  102B               	iorwf	(??___fldiv+1)^0,w,c
  3295   002528  102C               	iorwf	(??___fldiv+2)^0,w,c
  3296   00252A  102D               	iorwf	(??___fldiv+3)^0,w,c
  3297   00252C  B4D8               	btfsc	status,2,c
  3298   00252E  EF9B  F012         	goto	u2611
  3299   002532  EF9D  F012         	goto	u2610
  3300   002536                     u2611:
  3301   002536  EFA1  F012         	goto	l1298
  3302   00253A                     u2610:
  3303   00253A                     l3684:
  3304   00253A  0E01               	movlw	1
  3305   00253C  6E3A               	movwf	___fldiv@aexp^0,c
  3306   00253E  EFAA  F012         	goto	l1297
  3307   002542                     l1298:
  3308   002542  A022               	btfss	___fldiv@b^0,0,c
  3309   002544  EFA6  F012         	goto	u2621
  3310   002548  EFA8  F012         	goto	u2620
  3311   00254C                     u2621:
  3312   00254C  EFAA  F012         	goto	l1297
  3313   002550                     u2620:
  3314   002550  EF9D  F012         	goto	l3684
  3315   002554                     l1297:
  3316   002554  503A               	movf	___fldiv@aexp^0,w,c
  3317   002556  B4D8               	btfsc	status,2,c
  3318   002558  EFB0  F012         	goto	u2631
  3319   00255C  EFB2  F012         	goto	u2630
  3320   002560                     u2631:
  3321   002560  EFD6  F012         	goto	l3696
  3322   002564                     u2630:
  3323   002564  0E01               	movlw	1
  3324   002566  2622               	addwf	___fldiv@b^0,f,c
  3325   002568  0E00               	movlw	0
  3326   00256A  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3327   00256C  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3328   00256E  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3329   002570  A025               	btfss	(___fldiv@b+3)^0,0,c
  3330   002572  EFBD  F012         	goto	u2641
  3331   002576  EFBF  F012         	goto	u2640
  3332   00257A                     u2641:
  3333   00257A  EFD6  F012         	goto	l3696
  3334   00257E                     u2640:
  3335   00257E  C022  F02A         	movff	___fldiv@b,??___fldiv
  3336   002582  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3337   002586  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3338   00258A  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3339   00258E  342D               	rlcf	(??___fldiv+3)^0,w,c
  3340   002590  322D               	rrcf	(??___fldiv+3)^0,f,c
  3341   002592  322C               	rrcf	(??___fldiv+2)^0,f,c
  3342   002594  322B               	rrcf	(??___fldiv+1)^0,f,c
  3343   002596  322A               	rrcf	??___fldiv^0,f,c
  3344   002598  C02A  F022         	movff	??___fldiv,___fldiv@b
  3345   00259C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3346   0025A0  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3347   0025A4  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3348   0025A8  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3349   0025AA  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3350   0025AC                     l3696:
  3351   0025AC  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3352   0025AE  EFE1  F012         	goto	u2651
  3353   0025B2  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3354   0025B4  E108               	bnz	u2650
  3355   0025B6  2833               	incf	___fldiv@new_exp^0,w,c
  3356   0025B8  A0D8               	btfss	status,0,c
  3357   0025BA  EFE1  F012         	goto	u2651
  3358   0025BE  EFE3  F012         	goto	u2650
  3359   0025C2                     u2651:
  3360   0025C2  EFEE  F012         	goto	l3700
  3361   0025C6                     u2650:
  3362   0025C6  0E00               	movlw	0
  3363   0025C8  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3364   0025CA  6833               	setf	___fldiv@new_exp^0,c
  3365   0025CC  0E00               	movlw	0
  3366   0025CE  6E22               	movwf	___fldiv@b^0,c
  3367   0025D0  0E00               	movlw	0
  3368   0025D2  6E23               	movwf	(___fldiv@b+1)^0,c
  3369   0025D4  0E00               	movlw	0
  3370   0025D6  6E24               	movwf	(___fldiv@b+2)^0,c
  3371   0025D8  0E00               	movlw	0
  3372   0025DA  6E25               	movwf	(___fldiv@b+3)^0,c
  3373   0025DC                     l3700:
  3374   0025DC  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3375   0025DE  EFFB  F012         	goto	u2660
  3376   0025E2  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3377   0025E4  E106               	bnz	u2661
  3378   0025E6  0433               	decf	___fldiv@new_exp^0,w,c
  3379   0025E8  B0D8               	btfsc	status,0,c
  3380   0025EA  EFF9  F012         	goto	u2661
  3381   0025EE  EFFB  F012         	goto	u2660
  3382   0025F2                     u2661:
  3383   0025F2  EF09  F013         	goto	l3704
  3384   0025F6                     u2660:
  3385   0025F6  0E00               	movlw	0
  3386   0025F8  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3387   0025FA  0E00               	movlw	0
  3388   0025FC  6E33               	movwf	___fldiv@new_exp^0,c
  3389   0025FE  0E00               	movlw	0
  3390   002600  6E22               	movwf	___fldiv@b^0,c
  3391   002602  0E00               	movlw	0
  3392   002604  6E23               	movwf	(___fldiv@b+1)^0,c
  3393   002606  0E00               	movlw	0
  3394   002608  6E24               	movwf	(___fldiv@b+2)^0,c
  3395   00260A  0E00               	movlw	0
  3396   00260C  6E25               	movwf	(___fldiv@b+3)^0,c
  3397   00260E  0E00               	movlw	0
  3398   002610  6E32               	movwf	___fldiv@sign^0,c
  3399   002612                     l3704:
  3400   002612  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3401   002616  A039               	btfss	___fldiv@bexp^0,0,c
  3402   002618  EF10  F013         	goto	u2671
  3403   00261C  EF12  F013         	goto	u2670
  3404   002620                     u2671:
  3405   002620  EF15  F013         	goto	l3710
  3406   002624                     u2670:
  3407   002624  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3408   002626  EF16  F013         	goto	l3712
  3409   00262A                     l3710:
  3410   00262A  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3411   00262C                     l3712:
  3412   00262C  90D8               	bcf	status,0,c
  3413   00262E  3039               	rrcf	___fldiv@bexp^0,w,c
  3414   002630  6E25               	movwf	(___fldiv@b+3)^0,c
  3415   002632  EFCC  F011         	goto	l3626
  3416   002636                     l1284:
  3417   002636  0012               	return		;funcret
  3418   002638                     __end_of___fldiv:
  3419                           	callstack 0
  3420                           
  3421 ;; *************** function _persistence_register *****************
  3422 ;; Defined at:
  3423 ;;		line 46 in file "interrupts.c"
  3424 ;; Parameters:    Size  Location     Type
  3425 ;;		None
  3426 ;; Auto vars:     Size  Location     Type
  3427 ;;		None
  3428 ;; Return value:  Size  Location     Type
  3429 ;;                  1    wreg      void 
  3430 ;; Registers used:
  3431 ;;		wreg, status,2, status,0, cstack
  3432 ;; Tracked objects:
  3433 ;;		On entry : 0/0
  3434 ;;		On exit  : 0/0
  3435 ;;		Unchanged: 0/0
  3436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3441 ;;Total ram usage:        0 bytes
  3442 ;; Hardware stack levels used: 1
  3443 ;; Hardware stack levels required when called: 9
  3444 ;; This function calls:
  3445 ;;		_color_writetoaddr
  3446 ;; This function is called by:
  3447 ;;		_main
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           
  3451                           	psect	text17
  3452   0036B6                     __ptext17:
  3453                           	callstack 0
  3454   0036B6                     _persistence_register:
  3455                           	callstack 21
  3456   0036B6                     
  3457                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3458   0036B6  0E02               	movlw	2
  3459   0036B8  6E0B               	movwf	color_writetoaddr@value^0,c
  3460   0036BA  0E0C               	movlw	12
  3461   0036BC  EC0F  F01B         	call	_color_writetoaddr
  3462   0036C0  0012               	return		;funcret
  3463   0036C2                     __end_of_persistence_register:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _motor_retrace *****************
  3467 ;; Defined at:
  3468 ;;		line 282 in file "color.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  3471 ;;		 -> buggy_path(15), 
  3472 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  3473 ;;		 -> main@mL(9), 
  3474 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  3475 ;;		 -> main@mR(9), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3487 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3490 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3491 ;;Total ram usage:        9 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 10
  3494 ;; This function calls:
  3495 ;;		_fullSpeedAhead
  3496 ;;		_norm_stop
  3497 ;;		_turnLeft
  3498 ;;		_turnPrep
  3499 ;;		_turnRight
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text18
  3506   001EF4                     __ptext18:
  3507                           	callstack 0
  3508   001EF4                     _motor_retrace:
  3509                           	callstack 20
  3510   001EF4                     
  3511                           ;color.c: 283:     if (buggy_path[buggy_step - 2] == 1) {
  3512   001EF4  5051               	movf	_buggy_step^0,w,c
  3513   001EF6  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3514   001EF8  6E2D               	movwf	??_motor_retrace^0,c
  3515   001EFA  5052               	movf	(_buggy_step+1)^0,w,c
  3516   001EFC  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3517   001EFE  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3518   001F00  0EFE               	movlw	254
  3519   001F02  242D               	addwf	??_motor_retrace^0,w,c
  3520   001F04  6ED9               	movwf	fsr2l,c
  3521   001F06  0EFF               	movlw	255
  3522   001F08  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3523   001F0A  6EDA               	movwf	fsr2h,c
  3524   001F0C  04DE               	decf	postinc2,w,c
  3525   001F0E  A4D8               	btfss	status,2,c
  3526   001F10  EF8C  F00F         	goto	u2151
  3527   001F14  EF8E  F00F         	goto	u2150
  3528   001F18                     u2151:
  3529   001F18  EFB0  F00F         	goto	l3166
  3530   001F1C                     u2150:
  3531   001F1C                     
  3532                           ;color.c: 284:         turnPrep(mL, mR);
  3533   001F1C  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3534   001F20  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3535   001F24  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3536   001F28  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3537   001F2C  EC36  F019         	call	_turnPrep	;wreg free
  3538                           
  3539                           ;color.c: 285:         turnLeft(mL, mR);
  3540   001F30  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3541   001F34  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3542   001F38  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3543   001F3C  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3544   001F40  EC62  F018         	call	_turnLeft	;wreg free
  3545   001F44                     
  3546                           ;color.c: 286:         _delay((unsigned long)((215)*(64000000/4000.0)));
  3547   001F44  0E12               	movlw	18
  3548   001F46  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3549   001F48  0E74               	movlw	116
  3550   001F4A  6E2D               	movwf	??_motor_retrace^0,c
  3551   001F4C  0E7A               	movlw	122
  3552   001F4E                     u2987:
  3553   001F4E  2EE8               	decfsz	wreg,f,c
  3554   001F50  D7FE               	bra	u2987
  3555   001F52  2E2D               	decfsz	??_motor_retrace^0,f,c
  3556   001F54  D7FC               	bra	u2987
  3557   001F56  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3558   001F58  D7FA               	bra	u2987
  3559   001F5A  D000               	nop2	
  3560                           
  3561                           ;color.c: 288:     } else if (buggy_path[buggy_step - 2] == 2) {
  3562   001F5C  EF4E  F011         	goto	l185
  3563   001F60                     l3166:
  3564   001F60  5051               	movf	_buggy_step^0,w,c
  3565   001F62  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3566   001F64  6E2D               	movwf	??_motor_retrace^0,c
  3567   001F66  5052               	movf	(_buggy_step+1)^0,w,c
  3568   001F68  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3569   001F6A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3570   001F6C  0EFE               	movlw	254
  3571   001F6E  242D               	addwf	??_motor_retrace^0,w,c
  3572   001F70  6ED9               	movwf	fsr2l,c
  3573   001F72  0EFF               	movlw	255
  3574   001F74  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3575   001F76  6EDA               	movwf	fsr2h,c
  3576   001F78  0E02               	movlw	2
  3577   001F7A  18DE               	xorwf	postinc2,w,c
  3578   001F7C  A4D8               	btfss	status,2,c
  3579   001F7E  EFC3  F00F         	goto	u2161
  3580   001F82  EFC5  F00F         	goto	u2160
  3581   001F86                     u2161:
  3582   001F86  EFE6  F00F         	goto	l3172
  3583   001F8A                     u2160:
  3584   001F8A                     
  3585                           ;color.c: 289:         turnPrep(mL, mR);
  3586   001F8A  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3587   001F8E  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3588   001F92  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3589   001F96  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3590   001F9A  EC36  F019         	call	_turnPrep	;wreg free
  3591                           
  3592                           ;color.c: 290:         turnRight(mL, mR);
  3593   001F9E  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3594   001FA2  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3595   001FA6  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3596   001FAA  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3597   001FAE  EC29  F018         	call	_turnRight	;wreg free
  3598   001FB2                     
  3599                           ;color.c: 291:         _delay((unsigned long)((230)*(64000000/4000.0)));
  3600   001FB2  0E13               	movlw	19
  3601   001FB4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3602   001FB6  0EAC               	movlw	172
  3603   001FB8  6E2D               	movwf	??_motor_retrace^0,c
  3604   001FBA  0E2A               	movlw	42
  3605   001FBC                     u2997:
  3606   001FBC  2EE8               	decfsz	wreg,f,c
  3607   001FBE  D7FE               	bra	u2997
  3608   001FC0  2E2D               	decfsz	??_motor_retrace^0,f,c
  3609   001FC2  D7FC               	bra	u2997
  3610   001FC4  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3611   001FC6  D7FA               	bra	u2997
  3612                           
  3613                           ;color.c: 293:     } else if (buggy_path[buggy_step - 2] == 3) {
  3614   001FC8  EF4E  F011         	goto	l185
  3615   001FCC                     l3172:
  3616   001FCC  5051               	movf	_buggy_step^0,w,c
  3617   001FCE  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3618   001FD0  6E2D               	movwf	??_motor_retrace^0,c
  3619   001FD2  5052               	movf	(_buggy_step+1)^0,w,c
  3620   001FD4  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3621   001FD6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3622   001FD8  0EFE               	movlw	254
  3623   001FDA  242D               	addwf	??_motor_retrace^0,w,c
  3624   001FDC  6ED9               	movwf	fsr2l,c
  3625   001FDE  0EFF               	movlw	255
  3626   001FE0  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3627   001FE2  6EDA               	movwf	fsr2h,c
  3628   001FE4  0E03               	movlw	3
  3629   001FE6  18DE               	xorwf	postinc2,w,c
  3630   001FE8  A4D8               	btfss	status,2,c
  3631   001FEA  EFF9  F00F         	goto	u2171
  3632   001FEE  EFFB  F00F         	goto	u2170
  3633   001FF2                     u2171:
  3634   001FF2  EF1C  F010         	goto	l3178
  3635   001FF6                     u2170:
  3636   001FF6                     
  3637                           ;color.c: 294:         turnPrep(mL, mR);
  3638   001FF6  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3639   001FFA  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3640   001FFE  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3641   002002  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3642   002006  EC36  F019         	call	_turnPrep	;wreg free
  3643                           
  3644                           ;color.c: 295:         turnRight(mL, mR);
  3645   00200A  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3646   00200E  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3647   002012  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3648   002016  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3649   00201A  EC29  F018         	call	_turnRight	;wreg free
  3650   00201E                     
  3651                           ;color.c: 296:         _delay((unsigned long)((415)*(64000000/4000.0)));
  3652   00201E  0E22               	movlw	34
  3653   002020  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3654   002022  0EB0               	movlw	176
  3655   002024  6E2D               	movwf	??_motor_retrace^0,c
  3656   002026  0E48               	movlw	72
  3657   002028                     u3007:
  3658   002028  2EE8               	decfsz	wreg,f,c
  3659   00202A  D7FE               	bra	u3007
  3660   00202C  2E2D               	decfsz	??_motor_retrace^0,f,c
  3661   00202E  D7FC               	bra	u3007
  3662   002030  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3663   002032  D7FA               	bra	u3007
  3664                           
  3665                           ;color.c: 298:     } else if (buggy_path[buggy_step - 2] == 4) {
  3666   002034  EF4E  F011         	goto	l185
  3667   002038                     l3178:
  3668   002038  5051               	movf	_buggy_step^0,w,c
  3669   00203A  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3670   00203C  6E2D               	movwf	??_motor_retrace^0,c
  3671   00203E  5052               	movf	(_buggy_step+1)^0,w,c
  3672   002040  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3673   002042  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3674   002044  0EFE               	movlw	254
  3675   002046  242D               	addwf	??_motor_retrace^0,w,c
  3676   002048  6ED9               	movwf	fsr2l,c
  3677   00204A  0EFF               	movlw	255
  3678   00204C  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3679   00204E  6EDA               	movwf	fsr2h,c
  3680   002050  0E04               	movlw	4
  3681   002052  18DE               	xorwf	postinc2,w,c
  3682   002054  A4D8               	btfss	status,2,c
  3683   002056  EF2F  F010         	goto	u2181
  3684   00205A  EF31  F010         	goto	u2180
  3685   00205E                     u2181:
  3686   00205E  EF7E  F010         	goto	l3190
  3687   002062                     u2180:
  3688   002062                     
  3689                           ;color.c: 299:         turnPrep(mL, mR);
  3690   002062  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3691   002066  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3692   00206A  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3693   00206E  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3694   002072  EC36  F019         	call	_turnPrep	;wreg free
  3695                           
  3696                           ;color.c: 300:         turnLeft(mL, mR);
  3697   002076  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3698   00207A  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3699   00207E  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3700   002082  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3701   002086  EC62  F018         	call	_turnLeft	;wreg free
  3702   00208A                     
  3703                           ;color.c: 301:         _delay((unsigned long)((215)*(64000000/4000.0)));
  3704   00208A  0E12               	movlw	18
  3705   00208C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3706   00208E  0E74               	movlw	116
  3707   002090  6E2D               	movwf	??_motor_retrace^0,c
  3708   002092  0E7A               	movlw	122
  3709   002094                     u3017:
  3710   002094  2EE8               	decfsz	wreg,f,c
  3711   002096  D7FE               	bra	u3017
  3712   002098  2E2D               	decfsz	??_motor_retrace^0,f,c
  3713   00209A  D7FC               	bra	u3017
  3714   00209C  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3715   00209E  D7FA               	bra	u3017
  3716   0020A0  D000               	nop2	
  3717   0020A2                     
  3718                           ;color.c: 302:         norm_stop(mL, mR);
  3719   0020A2  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3720   0020A6  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3721   0020AA  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3722   0020AE  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3723   0020B2  EC63  F01A         	call	_norm_stop	;wreg free
  3724                           
  3725                           ;color.c: 303:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3726   0020B6  0E09               	movlw	9
  3727   0020B8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3728   0020BA  0E1E               	movlw	30
  3729   0020BC  6E2D               	movwf	??_motor_retrace^0,c
  3730   0020BE  0EE4               	movlw	228
  3731   0020C0                     u3027:
  3732   0020C0  2EE8               	decfsz	wreg,f,c
  3733   0020C2  D7FE               	bra	u3027
  3734   0020C4  2E2D               	decfsz	??_motor_retrace^0,f,c
  3735   0020C6  D7FC               	bra	u3027
  3736   0020C8  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3737   0020CA  D7FA               	bra	u3027
  3738   0020CC  D000               	nop2	
  3739   0020CE                     
  3740                           ;color.c: 304:         fullSpeedAhead(mL, mR);
  3741   0020CE  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  3742   0020D2  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  3743   0020D6  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  3744   0020DA  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  3745   0020DE  ECD7  F016         	call	_fullSpeedAhead	;wreg free
  3746   0020E2                     
  3747                           ;color.c: 305:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  3748   0020E2  0E62               	movlw	98
  3749   0020E4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3750   0020E6  0E67               	movlw	103
  3751   0020E8  6E2D               	movwf	??_motor_retrace^0,c
  3752   0020EA  0ECE               	movlw	206
  3753   0020EC                     u3037:
  3754   0020EC  2EE8               	decfsz	wreg,f,c
  3755   0020EE  D7FE               	bra	u3037
  3756   0020F0  2E2D               	decfsz	??_motor_retrace^0,f,c
  3757   0020F2  D7FC               	bra	u3037
  3758   0020F4  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3759   0020F6  D7FA               	bra	u3037
  3760                           
  3761                           ;color.c: 307:     } else if (buggy_path[buggy_step - 2] == 5) {
  3762   0020F8  EF4E  F011         	goto	l185
  3763   0020FC                     l3190:
  3764   0020FC  5051               	movf	_buggy_step^0,w,c
  3765   0020FE  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3766   002100  6E2D               	movwf	??_motor_retrace^0,c
  3767   002102  5052               	movf	(_buggy_step+1)^0,w,c
  3768   002104  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3769   002106  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3770   002108  0EFE               	movlw	254
  3771   00210A  242D               	addwf	??_motor_retrace^0,w,c
  3772   00210C  6ED9               	movwf	fsr2l,c
  3773   00210E  0EFF               	movlw	255
  3774   002110  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3775   002112  6EDA               	movwf	fsr2h,c
  3776   002114  0E05               	movlw	5
  3777   002116  18DE               	xorwf	postinc2,w,c
  3778   002118  A4D8               	btfss	status,2,c
  3779   00211A  EF91  F010         	goto	u2191
  3780   00211E  EF93  F010         	goto	u2190
  3781   002122                     u2191:
  3782   002122  EFEC  F010         	goto	l3204
  3783   002126                     u2190:
  3784   002126                     
  3785                           ;color.c: 308:         norm_stop(mL, mR);
  3786   002126  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3787   00212A  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3788   00212E  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3789   002132  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3790   002136  EC63  F01A         	call	_norm_stop	;wreg free
  3791   00213A                     
  3792                           ;color.c: 309:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3793   00213A  0E09               	movlw	9
  3794   00213C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3795   00213E  0E1E               	movlw	30
  3796   002140  6E2D               	movwf	??_motor_retrace^0,c
  3797   002142  0EE4               	movlw	228
  3798   002144                     u3047:
  3799   002144  2EE8               	decfsz	wreg,f,c
  3800   002146  D7FE               	bra	u3047
  3801   002148  2E2D               	decfsz	??_motor_retrace^0,f,c
  3802   00214A  D7FC               	bra	u3047
  3803   00214C  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3804   00214E  D7FA               	bra	u3047
  3805   002150  D000               	nop2	
  3806   002152                     
  3807                           ;color.c: 310:         turnRight(mL, mR);
  3808   002152  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3809   002156  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3810   00215A  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3811   00215E  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3812   002162  EC29  F018         	call	_turnRight	;wreg free
  3813                           
  3814                           ;color.c: 311:         _delay((unsigned long)((230)*(64000000/4000.0)));
  3815   002166  0E13               	movlw	19
  3816   002168  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3817   00216A  0EAC               	movlw	172
  3818   00216C  6E2D               	movwf	??_motor_retrace^0,c
  3819   00216E  0E2A               	movlw	42
  3820   002170                     u3057:
  3821   002170  2EE8               	decfsz	wreg,f,c
  3822   002172  D7FE               	bra	u3057
  3823   002174  2E2D               	decfsz	??_motor_retrace^0,f,c
  3824   002176  D7FC               	bra	u3057
  3825   002178  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3826   00217A  D7FA               	bra	u3057
  3827   00217C                     
  3828                           ;color.c: 312:         norm_stop(mL, mR);
  3829   00217C  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3830   002180  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3831   002184  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3832   002188  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3833   00218C  EC63  F01A         	call	_norm_stop	;wreg free
  3834   002190                     
  3835                           ;color.c: 313:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3836   002190  0E09               	movlw	9
  3837   002192  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3838   002194  0E1E               	movlw	30
  3839   002196  6E2D               	movwf	??_motor_retrace^0,c
  3840   002198  0EE4               	movlw	228
  3841   00219A                     u3067:
  3842   00219A  2EE8               	decfsz	wreg,f,c
  3843   00219C  D7FE               	bra	u3067
  3844   00219E  2E2D               	decfsz	??_motor_retrace^0,f,c
  3845   0021A0  D7FC               	bra	u3067
  3846   0021A2  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3847   0021A4  D7FA               	bra	u3067
  3848   0021A6  D000               	nop2	
  3849                           
  3850                           ;color.c: 314:         fullSpeedAhead(mL, mR);
  3851   0021A8  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  3852   0021AC  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  3853   0021B0  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  3854   0021B4  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  3855   0021B8  ECD7  F016         	call	_fullSpeedAhead	;wreg free
  3856   0021BC                     
  3857                           ;color.c: 315:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  3858   0021BC  0EA3               	movlw	163
  3859   0021BE  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3860   0021C0  0E57               	movlw	87
  3861   0021C2  6E2D               	movwf	??_motor_retrace^0,c
  3862   0021C4  0E02               	movlw	2
  3863   0021C6                     u3077:
  3864   0021C6  2EE8               	decfsz	wreg,f,c
  3865   0021C8  D7FE               	bra	u3077
  3866   0021CA  2E2D               	decfsz	??_motor_retrace^0,f,c
  3867   0021CC  D7FC               	bra	u3077
  3868   0021CE  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3869   0021D0  D7FA               	bra	u3077
  3870   0021D2  D000               	nop2	
  3871                           
  3872                           ;color.c: 317:     } else if (buggy_path[buggy_step - 2] == 6) {
  3873   0021D4  EF4E  F011         	goto	l185
  3874   0021D8                     l3204:
  3875   0021D8  5051               	movf	_buggy_step^0,w,c
  3876   0021DA  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3877   0021DC  6E2D               	movwf	??_motor_retrace^0,c
  3878   0021DE  5052               	movf	(_buggy_step+1)^0,w,c
  3879   0021E0  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3880   0021E2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3881   0021E4  0EFE               	movlw	254
  3882   0021E6  242D               	addwf	??_motor_retrace^0,w,c
  3883   0021E8  6ED9               	movwf	fsr2l,c
  3884   0021EA  0EFF               	movlw	255
  3885   0021EC  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3886   0021EE  6EDA               	movwf	fsr2h,c
  3887   0021F0  0E06               	movlw	6
  3888   0021F2  18DE               	xorwf	postinc2,w,c
  3889   0021F4  A4D8               	btfss	status,2,c
  3890   0021F6  EFFF  F010         	goto	u2201
  3891   0021FA  EF01  F011         	goto	u2200
  3892   0021FE                     u2201:
  3893   0021FE  EF23  F011         	goto	l3210
  3894   002202                     u2200:
  3895   002202                     
  3896                           ;color.c: 318:         turnPrep(mL, mR);
  3897   002202  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3898   002206  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3899   00220A  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3900   00220E  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3901   002212  EC36  F019         	call	_turnPrep	;wreg free
  3902                           
  3903                           ;color.c: 319:         turnLeft(mL, mR);
  3904   002216  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3905   00221A  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3906   00221E  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3907   002222  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3908   002226  EC62  F018         	call	_turnLeft	;wreg free
  3909   00222A                     l3208:
  3910                           
  3911                           ;color.c: 320:         _delay((unsigned long)((350)*(64000000/4000.0)));
  3912   00222A  0E1D               	movlw	29
  3913   00222C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3914   00222E  0E69               	movlw	105
  3915   002230  6E2D               	movwf	??_motor_retrace^0,c
  3916   002232  0EA5               	movlw	165
  3917   002234                     u3087:
  3918   002234  2EE8               	decfsz	wreg,f,c
  3919   002236  D7FE               	bra	u3087
  3920   002238  2E2D               	decfsz	??_motor_retrace^0,f,c
  3921   00223A  D7FC               	bra	u3087
  3922   00223C  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3923   00223E  D7FA               	bra	u3087
  3924   002240  F000               	nop	
  3925                           
  3926                           ;color.c: 321:     } else if (buggy_path[buggy_step - 2] == 7) {
  3927   002242  EF4E  F011         	goto	l185
  3928   002246                     l3210:
  3929   002246  5051               	movf	_buggy_step^0,w,c
  3930   002248  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3931   00224A  6E2D               	movwf	??_motor_retrace^0,c
  3932   00224C  5052               	movf	(_buggy_step+1)^0,w,c
  3933   00224E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3934   002250  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3935   002252  0EFE               	movlw	254
  3936   002254  242D               	addwf	??_motor_retrace^0,w,c
  3937   002256  6ED9               	movwf	fsr2l,c
  3938   002258  0EFF               	movlw	255
  3939   00225A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3940   00225C  6EDA               	movwf	fsr2h,c
  3941   00225E  0E07               	movlw	7
  3942   002260  18DE               	xorwf	postinc2,w,c
  3943   002262  A4D8               	btfss	status,2,c
  3944   002264  EF36  F011         	goto	u2211
  3945   002268  EF38  F011         	goto	u2210
  3946   00226C                     u2211:
  3947   00226C  EF4E  F011         	goto	l179
  3948   002270                     u2210:
  3949   002270                     
  3950                           ;color.c: 322:         turnPrep(mL, mR);
  3951   002270  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3952   002274  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3953   002278  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3954   00227C  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3955   002280  EC36  F019         	call	_turnPrep	;wreg free
  3956                           
  3957                           ;color.c: 323:         turnRight(mL, mR);
  3958   002284  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3959   002288  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3960   00228C  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3961   002290  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3962   002294  EC29  F018         	call	_turnRight	;wreg free
  3963   002298  EF15  F011         	goto	l3208
  3964   00229C                     l179:
  3965   00229C                     l185:
  3966   00229C  0012               	return		;funcret
  3967   00229E                     __end_of_motor_retrace:
  3968                           	callstack 0
  3969                           
  3970 ;; *************** function _fullSpeedAhead *****************
  3971 ;; Defined at:
  3972 ;;		line 178 in file "dc_motor.c"
  3973 ;; Parameters:    Size  Location     Type
  3974 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3975 ;;		 -> main@mL(9), 
  3976 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3977 ;;		 -> main@mR(9), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;		None
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      void 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3992 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3993 ;;Total ram usage:        5 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 8
  3996 ;; This function calls:
  3997 ;;		_setMotorPWM
  3998 ;; This function is called by:
  3999 ;;		_motor_retrace
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text19
  4005   002DAE                     __ptext19:
  4006                           	callstack 0
  4007   002DAE                     _fullSpeedAhead:
  4008                           	callstack 21
  4009   002DAE                     
  4010                           ;dc_motor.c: 178: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 179: {;dc_
      +                          motor.c: 180:     mL->power =5;
  4011   002DAE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4012   002DB2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4013   002DB6  0E05               	movlw	5
  4014   002DB8  6EDF               	movwf	indf2,c
  4015                           
  4016                           ;dc_motor.c: 181:     mR->power = 5;
  4017   002DBA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4018   002DBE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4019   002DC2  0E05               	movlw	5
  4020   002DC4  6EDF               	movwf	indf2,c
  4021   002DC6                     
  4022                           ;dc_motor.c: 182:     mR->direction = 1;
  4023   002DC6  EE20 F001          	lfsr	2,1
  4024   002DCA  501E               	movf	fullSpeedAhead@mR^0,w,c
  4025   002DCC  26D9               	addwf	fsr2l,f,c
  4026   002DCE  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4027   002DD0  22DA               	addwfc	fsr2h,f,c
  4028   002DD2  0E01               	movlw	1
  4029   002DD4  6EDF               	movwf	indf2,c
  4030   002DD6                     
  4031                           ;dc_motor.c: 183:     mL->direction = 1;
  4032   002DD6  EE20 F001          	lfsr	2,1
  4033   002DDA  501C               	movf	fullSpeedAhead@mL^0,w,c
  4034   002DDC  26D9               	addwf	fsr2l,f,c
  4035   002DDE  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4036   002DE0  22DA               	addwfc	fsr2h,f,c
  4037   002DE2  0E01               	movlw	1
  4038   002DE4  6EDF               	movwf	indf2,c
  4039   002DE6                     
  4040                           ;dc_motor.c: 184:     mL->brakemode = 1;
  4041   002DE6  EE20 F002          	lfsr	2,2
  4042   002DEA  501C               	movf	fullSpeedAhead@mL^0,w,c
  4043   002DEC  26D9               	addwf	fsr2l,f,c
  4044   002DEE  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4045   002DF0  22DA               	addwfc	fsr2h,f,c
  4046   002DF2  0E01               	movlw	1
  4047   002DF4  6EDF               	movwf	indf2,c
  4048   002DF6                     
  4049                           ;dc_motor.c: 185:     mR->brakemode = 1;
  4050   002DF6  EE20 F002          	lfsr	2,2
  4051   002DFA  501E               	movf	fullSpeedAhead@mR^0,w,c
  4052   002DFC  26D9               	addwf	fsr2l,f,c
  4053   002DFE  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4054   002E00  22DA               	addwfc	fsr2h,f,c
  4055   002E02  0E01               	movlw	1
  4056   002E04  6EDF               	movwf	indf2,c
  4057                           
  4058                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4059   002E06  EF1B  F017         	goto	l2896
  4060   002E0A                     l2890:
  4061                           
  4062                           ;dc_motor.c: 187:     {;dc_motor.c: 188:         mL->power++;
  4063   002E0A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4064   002E0E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4065   002E12  2ADF               	incf	indf2,f,c
  4066                           
  4067                           ;dc_motor.c: 189:         mR->power++;
  4068   002E14  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4069   002E18  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4070   002E1C  2ADF               	incf	indf2,f,c
  4071   002E1E                     
  4072                           ;dc_motor.c: 191:         setMotorPWM(mL);
  4073   002E1E  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4074   002E22  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4075   002E26  ECAE  F014         	call	_setMotorPWM	;wreg free
  4076   002E2A                     
  4077                           ;dc_motor.c: 192:         setMotorPWM(mR);
  4078   002E2A  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4079   002E2E  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4080   002E32  ECAE  F014         	call	_setMotorPWM	;wreg free
  4081   002E36                     l2896:
  4082                           
  4083                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4084   002E36  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4085   002E3A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4086   002E3E  0E33               	movlw	51
  4087   002E40  60DF               	cpfslt	indf2,c
  4088   002E42  EF25  F017         	goto	u1701
  4089   002E46  EF27  F017         	goto	u1700
  4090   002E4A                     u1701:
  4091   002E4A  EF33  F017         	goto	l2900
  4092   002E4E                     u1700:
  4093   002E4E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4094   002E52  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4095   002E56  0E32               	movlw	50
  4096   002E58  64DF               	cpfsgt	indf2,c
  4097   002E5A  EF31  F017         	goto	u1711
  4098   002E5E  EF33  F017         	goto	u1710
  4099   002E62                     u1711:
  4100   002E62  EF05  F017         	goto	l2890
  4101   002E66                     u1710:
  4102   002E66                     l2900:
  4103                           
  4104                           ;dc_motor.c: 194:     mL->power = 50;
  4105   002E66  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4106   002E6A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4107   002E6E  0E32               	movlw	50
  4108   002E70  6EDF               	movwf	indf2,c
  4109                           
  4110                           ;dc_motor.c: 195:     mR->power = 50;
  4111   002E72  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4112   002E76  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4113   002E7A  0E32               	movlw	50
  4114   002E7C  6EDF               	movwf	indf2,c
  4115   002E7E                     
  4116                           ;dc_motor.c: 196:     setMotorPWM(mL);
  4117   002E7E  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4118   002E82  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4119   002E86  ECAE  F014         	call	_setMotorPWM	;wreg free
  4120   002E8A                     
  4121                           ;dc_motor.c: 197:     setMotorPWM(mR);
  4122   002E8A  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4123   002E8E  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4124   002E92  ECAE  F014         	call	_setMotorPWM	;wreg free
  4125   002E96  0012               	return		;funcret
  4126   002E98                     __end_of_fullSpeedAhead:
  4127                           	callstack 0
  4128                           
  4129 ;; *************** function _motor_response *****************
  4130 ;; Defined at:
  4131 ;;		line 181 in file "color.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4134 ;;		 -> main@RGBC(32), 
  4135 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4136 ;;		 -> main@mL(9), 
  4137 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4138 ;;		 -> main@mR(9), 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  j               2   46[COMRAM] int 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      unsigned char 
  4143 ;; Registers used:
  4144 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4150 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4151 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4152 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4153 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4154 ;;Total ram usage:       10 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 10
  4157 ;; This function calls:
  4158 ;;		___flge
  4159 ;;		_norm_stop
  4160 ;;		_reverse
  4161 ;;		_turnLeft
  4162 ;;		_turnPrep
  4163 ;;		_turnRight
  4164 ;; This function is called by:
  4165 ;;		_main
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text20
  4170   000E18                     __ptext20:
  4171                           	callstack 0
  4172   000E18                     _motor_response:
  4173                           	callstack 20
  4174   000E18                     
  4175                           ;color.c: 182:     if (temp->norm_C < CR3L) {
  4176   000E18  EE20 F01C          	lfsr	2,28
  4177   000E1C  5027               	movf	motor_response@temp^0,w,c
  4178   000E1E  26D9               	addwf	fsr2l,f,c
  4179   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4180   000E22  22DA               	addwfc	fsr2h,f,c
  4181   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4182   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4183   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4184   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4185   000E34  C041  F00D         	movff	_CR3L,___flge@ff2
  4186   000E38  C042  F00E         	movff	_CR3L+1,___flge@ff2+1
  4187   000E3C  C043  F00F         	movff	_CR3L+2,___flge@ff2+2
  4188   000E40  C044  F010         	movff	_CR3L+3,___flge@ff2+3
  4189   000E44  EC64  F015         	call	___flge	;wreg free
  4190   000E48  B0D8               	btfsc	status,0,c
  4191   000E4A  EF29  F007         	goto	u1771
  4192   000E4E  EF2B  F007         	goto	u1770
  4193   000E52                     u1771:
  4194   000E52  EFBF  F007         	goto	l3002
  4195   000E56                     u1770:
  4196   000E56                     
  4197                           ;color.c: 183:         if (lost_ctr < 2) {
  4198   000E56  BE50               	btfsc	(_lost_ctr+1)^0,7,c
  4199   000E58  EF39  F007         	goto	u1780
  4200   000E5C  5050               	movf	(_lost_ctr+1)^0,w,c
  4201   000E5E  E107               	bnz	u1781
  4202   000E60  0E02               	movlw	2
  4203   000E62  5C4F               	subwf	_lost_ctr^0,w,c
  4204   000E64  B0D8               	btfsc	status,0,c
  4205   000E66  EF37  F007         	goto	u1781
  4206   000E6A  EF39  F007         	goto	u1780
  4207   000E6E                     u1781:
  4208   000E6E  EF3D  F007         	goto	l2970
  4209   000E72                     u1780:
  4210   000E72                     
  4211                           ;color.c: 184:             lost_ctr++;
  4212   000E72  4A4F               	infsnz	_lost_ctr^0,f,c
  4213   000E74  2A50               	incf	(_lost_ctr+1)^0,f,c
  4214                           
  4215                           ;color.c: 185:         } else {
  4216   000E76  EFBF  F007         	goto	l3002
  4217   000E7A                     l2970:
  4218                           
  4219                           ;color.c: 186:             turnPrep(mL, mR);
  4220   000E7A  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4221   000E7E  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4222   000E82  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4223   000E86  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4224   000E8A  EC36  F019         	call	_turnPrep	;wreg free
  4225   000E8E                     
  4226                           ;color.c: 187:             for (int j = 0; j <= 80; j++) {
  4227   000E8E  0E00               	movlw	0
  4228   000E90  6E30               	movwf	(motor_response@j+1)^0,c
  4229   000E92  0E00               	movlw	0
  4230   000E94  6E2F               	movwf	motor_response@j^0,c
  4231   000E96                     l2978:
  4232                           
  4233                           ;color.c: 188:                 turnLeft(mL, mR);
  4234   000E96  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4235   000E9A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4236   000E9E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4237   000EA2  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4238   000EA6  EC62  F018         	call	_turnLeft	;wreg free
  4239   000EAA                     
  4240                           ;color.c: 189:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  4241   000EAA  0E03               	movlw	3
  4242   000EAC  6E2E               	movwf	(??_motor_response+1)^0,c
  4243   000EAE  0E70               	movlw	112
  4244   000EB0  6E2D               	movwf	??_motor_response^0,c
  4245   000EB2  0E5C               	movlw	92
  4246   000EB4                     u3097:
  4247   000EB4  2EE8               	decfsz	wreg,f,c
  4248   000EB6  D7FE               	bra	u3097
  4249   000EB8  2E2D               	decfsz	??_motor_response^0,f,c
  4250   000EBA  D7FC               	bra	u3097
  4251   000EBC  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4252   000EBE  D7FA               	bra	u3097
  4253   000EC0  D000               	nop2	
  4254   000EC2                     
  4255                           ;color.c: 190:                 norm_stop(mL, mR);
  4256   000EC2  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4257   000EC6  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4258   000ECA  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4259   000ECE  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4260   000ED2  EC63  F01A         	call	_norm_stop	;wreg free
  4261                           
  4262                           ;color.c: 191:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  4263   000ED6  0E05               	movlw	5
  4264   000ED8  6E2E               	movwf	(??_motor_response+1)^0,c
  4265   000EDA  0EDF               	movlw	223
  4266   000EDC  6E2D               	movwf	??_motor_response^0,c
  4267   000EDE  0EBC               	movlw	188
  4268   000EE0                     u3107:
  4269   000EE0  2EE8               	decfsz	wreg,f,c
  4270   000EE2  D7FE               	bra	u3107
  4271   000EE4  2E2D               	decfsz	??_motor_response^0,f,c
  4272   000EE6  D7FC               	bra	u3107
  4273   000EE8  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4274   000EEA  D7FA               	bra	u3107
  4275   000EEC                     
  4276                           ;color.c: 192:             }
  4277   000EEC  4A2F               	infsnz	motor_response@j^0,f,c
  4278   000EEE  2A30               	incf	(motor_response@j+1)^0,f,c
  4279   000EF0  BE30               	btfsc	(motor_response@j+1)^0,7,c
  4280   000EF2  EF84  F007         	goto	u1791
  4281   000EF6  5030               	movf	(motor_response@j+1)^0,w,c
  4282   000EF8  E109               	bnz	u1790
  4283   000EFA  0E51               	movlw	81
  4284   000EFC  5C2F               	subwf	motor_response@j^0,w,c
  4285   000EFE  A0D8               	btfss	status,0,c
  4286   000F00  EF84  F007         	goto	u1791
  4287   000F04  EF86  F007         	goto	u1790
  4288   000F08                     u1791:
  4289   000F08  EF4B  F007         	goto	l2978
  4290   000F0C                     u1790:
  4291   000F0C                     
  4292                           ;color.c: 193:             turnLeft(mL, mR);
  4293   000F0C  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4294   000F10  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4295   000F14  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4296   000F18  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4297   000F1C  EC62  F018         	call	_turnLeft	;wreg free
  4298   000F20                     
  4299                           ;color.c: 194:             _delay((unsigned long)((330)*(64000000/4000.0)));
  4300   000F20  0E1B               	movlw	27
  4301   000F22  6E2E               	movwf	(??_motor_response+1)^0,c
  4302   000F24  0ECA               	movlw	202
  4303   000F26  6E2D               	movwf	??_motor_response^0,c
  4304   000F28  0E10               	movlw	16
  4305   000F2A                     u3117:
  4306   000F2A  2EE8               	decfsz	wreg,f,c
  4307   000F2C  D7FE               	bra	u3117
  4308   000F2E  2E2D               	decfsz	??_motor_response^0,f,c
  4309   000F30  D7FC               	bra	u3117
  4310   000F32  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4311   000F34  D7FA               	bra	u3117
  4312   000F36  D000               	nop2	
  4313   000F38                     
  4314                           ;color.c: 195:             norm_stop(mL, mR);
  4315   000F38  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4316   000F3C  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4317   000F40  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4318   000F44  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4319   000F48  EC63  F01A         	call	_norm_stop	;wreg free
  4320                           
  4321                           ;color.c: 196:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  4322   000F4C  0E52               	movlw	82
  4323   000F4E  6E2E               	movwf	(??_motor_response+1)^0,c
  4324   000F50  0E2B               	movlw	43
  4325   000F52  6E2D               	movwf	??_motor_response^0,c
  4326   000F54  0E00               	movlw	0
  4327   000F56                     u3127:
  4328   000F56  2EE8               	decfsz	wreg,f,c
  4329   000F58  D7FE               	bra	u3127
  4330   000F5A  2E2D               	decfsz	??_motor_response^0,f,c
  4331   000F5C  D7FC               	bra	u3127
  4332   000F5E  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4333   000F60  D7FA               	bra	u3127
  4334   000F62  D000               	nop2	
  4335   000F64                     
  4336                           ;color.c: 197:             motor_return = 1;
  4337   000F64  0E01               	movlw	1
  4338   000F66  0100               	movlb	0	; () banked
  4339   000F68  6FDC               	movwf	_motor_return& (0+255),b
  4340   000F6A                     
  4341                           ; BSR set to: 0
  4342                           ;color.c: 198:             buggy_step--;
  4343   000F6A  0651               	decf	_buggy_step^0,f,c
  4344   000F6C  A0D8               	btfss	status,0,c
  4345   000F6E  0652               	decf	(_buggy_step+1)^0,f,c
  4346   000F70                     
  4347                           ; BSR set to: 0
  4348                           ;color.c: 199:             lost_ctr = 0;
  4349   000F70  0E00               	movlw	0
  4350   000F72  6E50               	movwf	(_lost_ctr+1)^0,c
  4351   000F74  0E00               	movlw	0
  4352   000F76  6E4F               	movwf	_lost_ctr^0,c
  4353   000F78                     
  4354                           ; BSR set to: 0
  4355                           ;color.c: 200:             return 9;
  4356   000F78  0E09               	movlw	9
  4357   000F7A  EF55  F00D         	goto	l158
  4358   000F7E                     l3002:
  4359                           
  4360                           ;color.c: 204:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4361   000F7E  EE20 F01C          	lfsr	2,28
  4362   000F82  5027               	movf	motor_response@temp^0,w,c
  4363   000F84  26D9               	addwf	fsr2l,f,c
  4364   000F86  5028               	movf	(motor_response@temp+1)^0,w,c
  4365   000F88  22DA               	addwfc	fsr2h,f,c
  4366   000F8A  CFDE F009          	movff	postinc2,___flge@ff1
  4367   000F8E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4368   000F92  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4369   000F96  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4370   000F9A  C045  F00D         	movff	_CR2U,___flge@ff2
  4371   000F9E  C046  F00E         	movff	_CR2U+1,___flge@ff2+1
  4372   000FA2  C047  F00F         	movff	_CR2U+2,___flge@ff2+2
  4373   000FA6  C048  F010         	movff	_CR2U+3,___flge@ff2+3
  4374   000FAA  EC64  F015         	call	___flge	;wreg free
  4375   000FAE  B0D8               	btfsc	status,0,c
  4376   000FB0  EFDC  F007         	goto	u1801
  4377   000FB4  EFDE  F007         	goto	u1800
  4378   000FB8                     u1801:
  4379   000FB8  EFD1  F00A         	goto	l3078
  4380   000FBC                     u1800:
  4381   000FBC  C0CC  F009         	movff	_CR2L,___flge@ff1
  4382   000FC0  C0CD  F00A         	movff	_CR2L+1,___flge@ff1+1
  4383   000FC4  C0CE  F00B         	movff	_CR2L+2,___flge@ff1+2
  4384   000FC8  C0CF  F00C         	movff	_CR2L+3,___flge@ff1+3
  4385   000FCC  EE20 F01C          	lfsr	2,28
  4386   000FD0  5027               	movf	motor_response@temp^0,w,c
  4387   000FD2  26D9               	addwf	fsr2l,f,c
  4388   000FD4  5028               	movf	(motor_response@temp+1)^0,w,c
  4389   000FD6  22DA               	addwfc	fsr2h,f,c
  4390   000FD8  CFDE F00D          	movff	postinc2,___flge@ff2
  4391   000FDC  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4392   000FE0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4393   000FE4  CFDE F010          	movff	postinc2,___flge@ff2+3
  4394   000FE8  EC64  F015         	call	___flge	;wreg free
  4395   000FEC  B0D8               	btfsc	status,0,c
  4396   000FEE  EFFB  F007         	goto	u1811
  4397   000FF2  EFFD  F007         	goto	u1810
  4398   000FF6                     u1811:
  4399   000FF6  EFD1  F00A         	goto	l3078
  4400   000FFA                     u1810:
  4401   000FFA                     
  4402                           ;color.c: 206:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4403   000FFA  EE20 F018          	lfsr	2,24
  4404   000FFE  5027               	movf	motor_response@temp^0,w,c
  4405   001000  26D9               	addwf	fsr2l,f,c
  4406   001002  5028               	movf	(motor_response@temp+1)^0,w,c
  4407   001004  22DA               	addwfc	fsr2h,f,c
  4408   001006  CFDE F009          	movff	postinc2,___flge@ff1
  4409   00100A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4410   00100E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4411   001012  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4412   001016  0E00               	movlw	0
  4413   001018  6E0D               	movwf	___flge@ff2^0,c
  4414   00101A  0E00               	movlw	0
  4415   00101C  6E0E               	movwf	(___flge@ff2+1)^0,c
  4416   00101E  0EA0               	movlw	160
  4417   001020  6E0F               	movwf	(___flge@ff2+2)^0,c
  4418   001022  0E40               	movlw	64
  4419   001024  6E10               	movwf	(___flge@ff2+3)^0,c
  4420   001026  EC64  F015         	call	___flge	;wreg free
  4421   00102A  B0D8               	btfsc	status,0,c
  4422   00102C  EF1A  F008         	goto	u1821
  4423   001030  EF1C  F008         	goto	u1820
  4424   001034                     u1821:
  4425   001034  EFDC  F008         	goto	l3030
  4426   001038                     u1820:
  4427   001038  0E9A               	movlw	154
  4428   00103A  6E09               	movwf	___flge@ff1^0,c
  4429   00103C  0E99               	movlw	153
  4430   00103E  6E0A               	movwf	(___flge@ff1+1)^0,c
  4431   001040  0ED9               	movlw	217
  4432   001042  6E0B               	movwf	(___flge@ff1+2)^0,c
  4433   001044  0E3F               	movlw	63
  4434   001046  6E0C               	movwf	(___flge@ff1+3)^0,c
  4435   001048  EE20 F010          	lfsr	2,16
  4436   00104C  5027               	movf	motor_response@temp^0,w,c
  4437   00104E  26D9               	addwf	fsr2l,f,c
  4438   001050  5028               	movf	(motor_response@temp+1)^0,w,c
  4439   001052  22DA               	addwfc	fsr2h,f,c
  4440   001054  CFDE F00D          	movff	postinc2,___flge@ff2
  4441   001058  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4442   00105C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4443   001060  CFDE F010          	movff	postinc2,___flge@ff2+3
  4444   001064  EC64  F015         	call	___flge	;wreg free
  4445   001068  B0D8               	btfsc	status,0,c
  4446   00106A  EF39  F008         	goto	u1831
  4447   00106E  EF3B  F008         	goto	u1830
  4448   001072                     u1831:
  4449   001072  EFDC  F008         	goto	l3030
  4450   001076                     u1830:
  4451   001076  EE20 F010          	lfsr	2,16
  4452   00107A  5027               	movf	motor_response@temp^0,w,c
  4453   00107C  26D9               	addwf	fsr2l,f,c
  4454   00107E  5028               	movf	(motor_response@temp+1)^0,w,c
  4455   001080  22DA               	addwfc	fsr2h,f,c
  4456   001082  CFDE F009          	movff	postinc2,___flge@ff1
  4457   001086  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4458   00108A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4459   00108E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4460   001092  0ECD               	movlw	205
  4461   001094  6E0D               	movwf	___flge@ff2^0,c
  4462   001096  0ECC               	movlw	204
  4463   001098  6E0E               	movwf	(___flge@ff2+1)^0,c
  4464   00109A  0E0C               	movlw	12
  4465   00109C  6E0F               	movwf	(___flge@ff2+2)^0,c
  4466   00109E  0E40               	movlw	64
  4467   0010A0  6E10               	movwf	(___flge@ff2+3)^0,c
  4468   0010A2  EC64  F015         	call	___flge	;wreg free
  4469   0010A6  B0D8               	btfsc	status,0,c
  4470   0010A8  EF58  F008         	goto	u1841
  4471   0010AC  EF5A  F008         	goto	u1840
  4472   0010B0                     u1841:
  4473   0010B0  EFDC  F008         	goto	l3030
  4474   0010B4                     u1840:
  4475   0010B4  0E00               	movlw	0
  4476   0010B6  6E09               	movwf	___flge@ff1^0,c
  4477   0010B8  0E00               	movlw	0
  4478   0010BA  6E0A               	movwf	(___flge@ff1+1)^0,c
  4479   0010BC  0E40               	movlw	64
  4480   0010BE  6E0B               	movwf	(___flge@ff1+2)^0,c
  4481   0010C0  0E40               	movlw	64
  4482   0010C2  6E0C               	movwf	(___flge@ff1+3)^0,c
  4483   0010C4  EE20 F014          	lfsr	2,20
  4484   0010C8  5027               	movf	motor_response@temp^0,w,c
  4485   0010CA  26D9               	addwf	fsr2l,f,c
  4486   0010CC  5028               	movf	(motor_response@temp+1)^0,w,c
  4487   0010CE  22DA               	addwfc	fsr2h,f,c
  4488   0010D0  CFDE F00D          	movff	postinc2,___flge@ff2
  4489   0010D4  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4490   0010D8  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4491   0010DC  CFDE F010          	movff	postinc2,___flge@ff2+3
  4492   0010E0  EC64  F015         	call	___flge	;wreg free
  4493   0010E4  B0D8               	btfsc	status,0,c
  4494   0010E6  EF77  F008         	goto	u1851
  4495   0010EA  EF79  F008         	goto	u1850
  4496   0010EE                     u1851:
  4497   0010EE  EFDC  F008         	goto	l3030
  4498   0010F2                     u1850:
  4499   0010F2  EE20 F014          	lfsr	2,20
  4500   0010F6  5027               	movf	motor_response@temp^0,w,c
  4501   0010F8  26D9               	addwf	fsr2l,f,c
  4502   0010FA  5028               	movf	(motor_response@temp+1)^0,w,c
  4503   0010FC  22DA               	addwfc	fsr2h,f,c
  4504   0010FE  CFDE F009          	movff	postinc2,___flge@ff1
  4505   001102  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4506   001106  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4507   00110A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4508   00110E  0E00               	movlw	0
  4509   001110  6E0D               	movwf	___flge@ff2^0,c
  4510   001112  0E00               	movlw	0
  4511   001114  6E0E               	movwf	(___flge@ff2+1)^0,c
  4512   001116  0E60               	movlw	96
  4513   001118  6E0F               	movwf	(___flge@ff2+2)^0,c
  4514   00111A  0E40               	movlw	64
  4515   00111C  6E10               	movwf	(___flge@ff2+3)^0,c
  4516   00111E  EC64  F015         	call	___flge	;wreg free
  4517   001122  B0D8               	btfsc	status,0,c
  4518   001124  EF96  F008         	goto	u1861
  4519   001128  EF98  F008         	goto	u1860
  4520   00112C                     u1861:
  4521   00112C  EFDC  F008         	goto	l3030
  4522   001130                     u1860:
  4523   001130                     
  4524                           ;color.c: 207:             reverse(mL, mR);
  4525   001130  C029  F01C         	movff	motor_response@mL,reverse@mL
  4526   001134  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  4527   001138  C02B  F01E         	movff	motor_response@mR,reverse@mR
  4528   00113C  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  4529   001140  ECE6  F015         	call	_reverse	;wreg free
  4530   001144                     
  4531                           ;color.c: 208:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  4532   001144  0EF4               	movlw	244
  4533   001146  6E2E               	movwf	(??_motor_response+1)^0,c
  4534   001148  0E82               	movlw	130
  4535   00114A  6E2D               	movwf	??_motor_response^0,c
  4536   00114C  0E05               	movlw	5
  4537   00114E                     u3137:
  4538   00114E  2EE8               	decfsz	wreg,f,c
  4539   001150  D7FE               	bra	u3137
  4540   001152  2E2D               	decfsz	??_motor_response^0,f,c
  4541   001154  D7FC               	bra	u3137
  4542   001156  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4543   001158  D7FA               	bra	u3137
  4544   00115A  F000               	nop	
  4545   00115C                     
  4546                           ;color.c: 209:             norm_stop(mL, mR);
  4547   00115C  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4548   001160  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4549   001164  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4550   001168  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4551   00116C  EC63  F01A         	call	_norm_stop	;wreg free
  4552                           
  4553                           ;color.c: 210:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4554   001170  0E09               	movlw	9
  4555   001172  6E2E               	movwf	(??_motor_response+1)^0,c
  4556   001174  0E1E               	movlw	30
  4557   001176  6E2D               	movwf	??_motor_response^0,c
  4558   001178  0EE4               	movlw	228
  4559   00117A                     u3147:
  4560   00117A  2EE8               	decfsz	wreg,f,c
  4561   00117C  D7FE               	bra	u3147
  4562   00117E  2E2D               	decfsz	??_motor_response^0,f,c
  4563   001180  D7FC               	bra	u3147
  4564   001182  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4565   001184  D7FA               	bra	u3147
  4566   001186  D000               	nop2	
  4567   001188                     
  4568                           ;color.c: 211:             turnLeft(mL, mR);
  4569   001188  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4570   00118C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4571   001190  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4572   001194  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4573   001198  EC62  F018         	call	_turnLeft	;wreg free
  4574   00119C                     
  4575                           ;color.c: 212:             _delay((unsigned long)((220)*(64000000/4000.0)));
  4576   00119C  0E12               	movlw	18
  4577   00119E  6E2E               	movwf	(??_motor_response+1)^0,c
  4578   0011A0  0EDC               	movlw	220
  4579   0011A2  6E2D               	movwf	??_motor_response^0,c
  4580   0011A4  0E60               	movlw	96
  4581   0011A6                     u3157:
  4582   0011A6  2EE8               	decfsz	wreg,f,c
  4583   0011A8  D7FE               	bra	u3157
  4584   0011AA  2E2D               	decfsz	??_motor_response^0,f,c
  4585   0011AC  D7FC               	bra	u3157
  4586   0011AE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4587   0011B0  D7FA               	bra	u3157
  4588   0011B2                     
  4589                           ;color.c: 213:             return 5;
  4590   0011B2  0E05               	movlw	5
  4591   0011B4  EF55  F00D         	goto	l158
  4592   0011B8                     l3030:
  4593                           
  4594                           ;color.c: 216:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  4595   0011B8  0E00               	movlw	0
  4596   0011BA  6E09               	movwf	___flge@ff1^0,c
  4597   0011BC  0E00               	movlw	0
  4598   0011BE  6E0A               	movwf	(___flge@ff1+1)^0,c
  4599   0011C0  0EB0               	movlw	176
  4600   0011C2  6E0B               	movwf	(___flge@ff1+2)^0,c
  4601   0011C4  0E40               	movlw	64
  4602   0011C6  6E0C               	movwf	(___flge@ff1+3)^0,c
  4603   0011C8  EE20 F018          	lfsr	2,24
  4604   0011CC  5027               	movf	motor_response@temp^0,w,c
  4605   0011CE  26D9               	addwf	fsr2l,f,c
  4606   0011D0  5028               	movf	(motor_response@temp+1)^0,w,c
  4607   0011D2  22DA               	addwfc	fsr2h,f,c
  4608   0011D4  CFDE F00D          	movff	postinc2,___flge@ff2
  4609   0011D8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4610   0011DC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4611   0011E0  CFDE F010          	movff	postinc2,___flge@ff2+3
  4612   0011E4  EC64  F015         	call	___flge	;wreg free
  4613   0011E8  B0D8               	btfsc	status,0,c
  4614   0011EA  EFF9  F008         	goto	u1871
  4615   0011EE  EFFB  F008         	goto	u1870
  4616   0011F2                     u1871:
  4617   0011F2  EFCF  F009         	goto	l3050
  4618   0011F6                     u1870:
  4619   0011F6  EE20 F018          	lfsr	2,24
  4620   0011FA  5027               	movf	motor_response@temp^0,w,c
  4621   0011FC  26D9               	addwf	fsr2l,f,c
  4622   0011FE  5028               	movf	(motor_response@temp+1)^0,w,c
  4623   001200  22DA               	addwfc	fsr2h,f,c
  4624   001202  CFDE F009          	movff	postinc2,___flge@ff1
  4625   001206  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4626   00120A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4627   00120E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4628   001212  0E00               	movlw	0
  4629   001214  6E0D               	movwf	___flge@ff2^0,c
  4630   001216  0E00               	movlw	0
  4631   001218  6E0E               	movwf	(___flge@ff2+1)^0,c
  4632   00121A  0EC0               	movlw	192
  4633   00121C  6E0F               	movwf	(___flge@ff2+2)^0,c
  4634   00121E  0E40               	movlw	64
  4635   001220  6E10               	movwf	(___flge@ff2+3)^0,c
  4636   001222  EC64  F015         	call	___flge	;wreg free
  4637   001226  B0D8               	btfsc	status,0,c
  4638   001228  EF18  F009         	goto	u1881
  4639   00122C  EF1A  F009         	goto	u1880
  4640   001230                     u1881:
  4641   001230  EFCF  F009         	goto	l3050
  4642   001234                     u1880:
  4643   001234  0E33               	movlw	51
  4644   001236  6E09               	movwf	___flge@ff1^0,c
  4645   001238  0E33               	movlw	51
  4646   00123A  6E0A               	movwf	(___flge@ff1+1)^0,c
  4647   00123C  0EB3               	movlw	179
  4648   00123E  6E0B               	movwf	(___flge@ff1+2)^0,c
  4649   001240  0E3F               	movlw	63
  4650   001242  6E0C               	movwf	(___flge@ff1+3)^0,c
  4651   001244  EE20 F010          	lfsr	2,16
  4652   001248  5027               	movf	motor_response@temp^0,w,c
  4653   00124A  26D9               	addwf	fsr2l,f,c
  4654   00124C  5028               	movf	(motor_response@temp+1)^0,w,c
  4655   00124E  22DA               	addwfc	fsr2h,f,c
  4656   001250  CFDE F00D          	movff	postinc2,___flge@ff2
  4657   001254  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4658   001258  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4659   00125C  CFDE F010          	movff	postinc2,___flge@ff2+3
  4660   001260  EC64  F015         	call	___flge	;wreg free
  4661   001264  B0D8               	btfsc	status,0,c
  4662   001266  EF37  F009         	goto	u1891
  4663   00126A  EF39  F009         	goto	u1890
  4664   00126E                     u1891:
  4665   00126E  EFCF  F009         	goto	l3050
  4666   001272                     u1890:
  4667   001272  EE20 F010          	lfsr	2,16
  4668   001276  5027               	movf	motor_response@temp^0,w,c
  4669   001278  26D9               	addwf	fsr2l,f,c
  4670   00127A  5028               	movf	(motor_response@temp+1)^0,w,c
  4671   00127C  22DA               	addwfc	fsr2h,f,c
  4672   00127E  CFDE F009          	movff	postinc2,___flge@ff1
  4673   001282  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4674   001286  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4675   00128A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4676   00128E  0E9A               	movlw	154
  4677   001290  6E0D               	movwf	___flge@ff2^0,c
  4678   001292  0E99               	movlw	153
  4679   001294  6E0E               	movwf	(___flge@ff2+1)^0,c
  4680   001296  0ED9               	movlw	217
  4681   001298  6E0F               	movwf	(___flge@ff2+2)^0,c
  4682   00129A  0E3F               	movlw	63
  4683   00129C  6E10               	movwf	(___flge@ff2+3)^0,c
  4684   00129E  EC64  F015         	call	___flge	;wreg free
  4685   0012A2  B0D8               	btfsc	status,0,c
  4686   0012A4  EF56  F009         	goto	u1901
  4687   0012A8  EF58  F009         	goto	u1900
  4688   0012AC                     u1901:
  4689   0012AC  EFCF  F009         	goto	l3050
  4690   0012B0                     u1900:
  4691   0012B0  0E33               	movlw	51
  4692   0012B2  6E09               	movwf	___flge@ff1^0,c
  4693   0012B4  0E33               	movlw	51
  4694   0012B6  6E0A               	movwf	(___flge@ff1+1)^0,c
  4695   0012B8  0E83               	movlw	131
  4696   0012BA  6E0B               	movwf	(___flge@ff1+2)^0,c
  4697   0012BC  0E40               	movlw	64
  4698   0012BE  6E0C               	movwf	(___flge@ff1+3)^0,c
  4699   0012C0  EE20 F014          	lfsr	2,20
  4700   0012C4  5027               	movf	motor_response@temp^0,w,c
  4701   0012C6  26D9               	addwf	fsr2l,f,c
  4702   0012C8  5028               	movf	(motor_response@temp+1)^0,w,c
  4703   0012CA  22DA               	addwfc	fsr2h,f,c
  4704   0012CC  CFDE F00D          	movff	postinc2,___flge@ff2
  4705   0012D0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4706   0012D4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4707   0012D8  CFDE F010          	movff	postinc2,___flge@ff2+3
  4708   0012DC  EC64  F015         	call	___flge	;wreg free
  4709   0012E0  B0D8               	btfsc	status,0,c
  4710   0012E2  EF75  F009         	goto	u1911
  4711   0012E6  EF77  F009         	goto	u1910
  4712   0012EA                     u1911:
  4713   0012EA  EFCF  F009         	goto	l3050
  4714   0012EE                     u1910:
  4715   0012EE  EE20 F014          	lfsr	2,20
  4716   0012F2  5027               	movf	motor_response@temp^0,w,c
  4717   0012F4  26D9               	addwf	fsr2l,f,c
  4718   0012F6  5028               	movf	(motor_response@temp+1)^0,w,c
  4719   0012F8  22DA               	addwfc	fsr2h,f,c
  4720   0012FA  CFDE F009          	movff	postinc2,___flge@ff1
  4721   0012FE  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4722   001302  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4723   001306  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4724   00130A  0E00               	movlw	0
  4725   00130C  6E0D               	movwf	___flge@ff2^0,c
  4726   00130E  0E00               	movlw	0
  4727   001310  6E0E               	movwf	(___flge@ff2+1)^0,c
  4728   001312  0E90               	movlw	144
  4729   001314  6E0F               	movwf	(___flge@ff2+2)^0,c
  4730   001316  0E40               	movlw	64
  4731   001318  6E10               	movwf	(___flge@ff2+3)^0,c
  4732   00131A  EC64  F015         	call	___flge	;wreg free
  4733   00131E  B0D8               	btfsc	status,0,c
  4734   001320  EF94  F009         	goto	u1921
  4735   001324  EF96  F009         	goto	u1920
  4736   001328                     u1921:
  4737   001328  EFCF  F009         	goto	l3050
  4738   00132C                     u1920:
  4739   00132C                     
  4740                           ;color.c: 218:             turnPrep(mL, mR);
  4741   00132C  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4742   001330  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4743   001334  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4744   001338  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4745   00133C  EC36  F019         	call	_turnPrep	;wreg free
  4746                           
  4747                           ;color.c: 219:             turnRight(mL, mR);
  4748   001340  C029  F01C         	movff	motor_response@mL,turnRight@mL
  4749   001344  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  4750   001348  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  4751   00134C  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  4752   001350  EC29  F018         	call	_turnRight	;wreg free
  4753   001354                     
  4754                           ;color.c: 220:             _delay((unsigned long)((330)*(64000000/4000.0)));
  4755   001354  0E1B               	movlw	27
  4756   001356  6E2E               	movwf	(??_motor_response+1)^0,c
  4757   001358  0ECA               	movlw	202
  4758   00135A  6E2D               	movwf	??_motor_response^0,c
  4759   00135C  0E10               	movlw	16
  4760   00135E                     u3167:
  4761   00135E  2EE8               	decfsz	wreg,f,c
  4762   001360  D7FE               	bra	u3167
  4763   001362  2E2D               	decfsz	??_motor_response^0,f,c
  4764   001364  D7FC               	bra	u3167
  4765   001366  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4766   001368  D7FA               	bra	u3167
  4767   00136A  D000               	nop2	
  4768   00136C                     
  4769                           ;color.c: 221:             norm_stop(mL, mR);
  4770   00136C  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4771   001370  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4772   001374  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4773   001378  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4774   00137C  EC63  F01A         	call	_norm_stop	;wreg free
  4775                           
  4776                           ;color.c: 222:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  4777   001380  0E52               	movlw	82
  4778   001382  6E2E               	movwf	(??_motor_response+1)^0,c
  4779   001384  0E2B               	movlw	43
  4780   001386  6E2D               	movwf	??_motor_response^0,c
  4781   001388  0E00               	movlw	0
  4782   00138A                     u3177:
  4783   00138A  2EE8               	decfsz	wreg,f,c
  4784   00138C  D7FE               	bra	u3177
  4785   00138E  2E2D               	decfsz	??_motor_response^0,f,c
  4786   001390  D7FC               	bra	u3177
  4787   001392  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4788   001394  D7FA               	bra	u3177
  4789   001396  D000               	nop2	
  4790                           
  4791                           ;color.c: 223:             return 6;
  4792   001398  0E06               	movlw	6
  4793   00139A  EF55  F00D         	goto	l158
  4794   00139E                     l3050:
  4795                           
  4796                           ;color.c: 225:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  4797   00139E  0E33               	movlw	51
  4798   0013A0  6E09               	movwf	___flge@ff1^0,c
  4799   0013A2  0E33               	movlw	51
  4800   0013A4  6E0A               	movwf	(___flge@ff1+1)^0,c
  4801   0013A6  0E53               	movlw	83
  4802   0013A8  6E0B               	movwf	(___flge@ff1+2)^0,c
  4803   0013AA  0E40               	movlw	64
  4804   0013AC  6E0C               	movwf	(___flge@ff1+3)^0,c
  4805   0013AE  EE20 F018          	lfsr	2,24
  4806   0013B2  5027               	movf	motor_response@temp^0,w,c
  4807   0013B4  26D9               	addwf	fsr2l,f,c
  4808   0013B6  5028               	movf	(motor_response@temp+1)^0,w,c
  4809   0013B8  22DA               	addwfc	fsr2h,f,c
  4810   0013BA  CFDE F00D          	movff	postinc2,___flge@ff2
  4811   0013BE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4812   0013C2  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4813   0013C6  CFDE F010          	movff	postinc2,___flge@ff2+3
  4814   0013CA  EC64  F015         	call	___flge	;wreg free
  4815   0013CE  B0D8               	btfsc	status,0,c
  4816   0013D0  EFEC  F009         	goto	u1931
  4817   0013D4  EFEE  F009         	goto	u1930
  4818   0013D8                     u1931:
  4819   0013D8  EFD1  F00A         	goto	l3078
  4820   0013DC                     u1930:
  4821   0013DC  EE20 F018          	lfsr	2,24
  4822   0013E0  5027               	movf	motor_response@temp^0,w,c
  4823   0013E2  26D9               	addwf	fsr2l,f,c
  4824   0013E4  5028               	movf	(motor_response@temp+1)^0,w,c
  4825   0013E6  22DA               	addwfc	fsr2h,f,c
  4826   0013E8  CFDE F009          	movff	postinc2,___flge@ff1
  4827   0013EC  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4828   0013F0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4829   0013F4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4830   0013F8  0E9A               	movlw	154
  4831   0013FA  6E0D               	movwf	___flge@ff2^0,c
  4832   0013FC  0E99               	movlw	153
  4833   0013FE  6E0E               	movwf	(___flge@ff2+1)^0,c
  4834   001400  0E79               	movlw	121
  4835   001402  6E0F               	movwf	(___flge@ff2+2)^0,c
  4836   001404  0E40               	movlw	64
  4837   001406  6E10               	movwf	(___flge@ff2+3)^0,c
  4838   001408  EC64  F015         	call	___flge	;wreg free
  4839   00140C  B0D8               	btfsc	status,0,c
  4840   00140E  EF0B  F00A         	goto	u1941
  4841   001412  EF0D  F00A         	goto	u1940
  4842   001416                     u1941:
  4843   001416  EFD1  F00A         	goto	l3078
  4844   00141A                     u1940:
  4845   00141A  0ECD               	movlw	205
  4846   00141C  6E09               	movwf	___flge@ff1^0,c
  4847   00141E  0ECC               	movlw	204
  4848   001420  6E0A               	movwf	(___flge@ff1+1)^0,c
  4849   001422  0E2C               	movlw	44
  4850   001424  6E0B               	movwf	(___flge@ff1+2)^0,c
  4851   001426  0E40               	movlw	64
  4852   001428  6E0C               	movwf	(___flge@ff1+3)^0,c
  4853   00142A  EE20 F010          	lfsr	2,16
  4854   00142E  5027               	movf	motor_response@temp^0,w,c
  4855   001430  26D9               	addwf	fsr2l,f,c
  4856   001432  5028               	movf	(motor_response@temp+1)^0,w,c
  4857   001434  22DA               	addwfc	fsr2h,f,c
  4858   001436  CFDE F00D          	movff	postinc2,___flge@ff2
  4859   00143A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4860   00143E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4861   001442  CFDE F010          	movff	postinc2,___flge@ff2+3
  4862   001446  EC64  F015         	call	___flge	;wreg free
  4863   00144A  B0D8               	btfsc	status,0,c
  4864   00144C  EF2A  F00A         	goto	u1951
  4865   001450  EF2C  F00A         	goto	u1950
  4866   001454                     u1951:
  4867   001454  EFD1  F00A         	goto	l3078
  4868   001458                     u1950:
  4869   001458  EE20 F010          	lfsr	2,16
  4870   00145C  5027               	movf	motor_response@temp^0,w,c
  4871   00145E  26D9               	addwf	fsr2l,f,c
  4872   001460  5028               	movf	(motor_response@temp+1)^0,w,c
  4873   001462  22DA               	addwfc	fsr2h,f,c
  4874   001464  CFDE F009          	movff	postinc2,___flge@ff1
  4875   001468  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4876   00146C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4877   001470  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4878   001474  0ECD               	movlw	205
  4879   001476  6E0D               	movwf	___flge@ff2^0,c
  4880   001478  0ECC               	movlw	204
  4881   00147A  6E0E               	movwf	(___flge@ff2+1)^0,c
  4882   00147C  0E4C               	movlw	76
  4883   00147E  6E0F               	movwf	(___flge@ff2+2)^0,c
  4884   001480  0E40               	movlw	64
  4885   001482  6E10               	movwf	(___flge@ff2+3)^0,c
  4886   001484  EC64  F015         	call	___flge	;wreg free
  4887   001488  B0D8               	btfsc	status,0,c
  4888   00148A  EF49  F00A         	goto	u1961
  4889   00148E  EF4B  F00A         	goto	u1960
  4890   001492                     u1961:
  4891   001492  EFD1  F00A         	goto	l3078
  4892   001496                     u1960:
  4893   001496  0E00               	movlw	0
  4894   001498  6E09               	movwf	___flge@ff1^0,c
  4895   00149A  0E00               	movlw	0
  4896   00149C  6E0A               	movwf	(___flge@ff1+1)^0,c
  4897   00149E  0E20               	movlw	32
  4898   0014A0  6E0B               	movwf	(___flge@ff1+2)^0,c
  4899   0014A2  0E40               	movlw	64
  4900   0014A4  6E0C               	movwf	(___flge@ff1+3)^0,c
  4901   0014A6  EE20 F014          	lfsr	2,20
  4902   0014AA  5027               	movf	motor_response@temp^0,w,c
  4903   0014AC  26D9               	addwf	fsr2l,f,c
  4904   0014AE  5028               	movf	(motor_response@temp+1)^0,w,c
  4905   0014B0  22DA               	addwfc	fsr2h,f,c
  4906   0014B2  CFDE F00D          	movff	postinc2,___flge@ff2
  4907   0014B6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4908   0014BA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4909   0014BE  CFDE F010          	movff	postinc2,___flge@ff2+3
  4910   0014C2  EC64  F015         	call	___flge	;wreg free
  4911   0014C6  B0D8               	btfsc	status,0,c
  4912   0014C8  EF68  F00A         	goto	u1971
  4913   0014CC  EF6A  F00A         	goto	u1970
  4914   0014D0                     u1971:
  4915   0014D0  EFD1  F00A         	goto	l3078
  4916   0014D4                     u1970:
  4917   0014D4  EE20 F014          	lfsr	2,20
  4918   0014D8  5027               	movf	motor_response@temp^0,w,c
  4919   0014DA  26D9               	addwf	fsr2l,f,c
  4920   0014DC  5028               	movf	(motor_response@temp+1)^0,w,c
  4921   0014DE  22DA               	addwfc	fsr2h,f,c
  4922   0014E0  CFDE F009          	movff	postinc2,___flge@ff1
  4923   0014E4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4924   0014E8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4925   0014EC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4926   0014F0  0E9A               	movlw	154
  4927   0014F2  6E0D               	movwf	___flge@ff2^0,c
  4928   0014F4  0E99               	movlw	153
  4929   0014F6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4930   0014F8  0E39               	movlw	57
  4931   0014FA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4932   0014FC  0E40               	movlw	64
  4933   0014FE  6E10               	movwf	(___flge@ff2+3)^0,c
  4934   001500  EC64  F015         	call	___flge	;wreg free
  4935   001504  B0D8               	btfsc	status,0,c
  4936   001506  EF87  F00A         	goto	u1981
  4937   00150A  EF89  F00A         	goto	u1980
  4938   00150E                     u1981:
  4939   00150E  EFD1  F00A         	goto	l3078
  4940   001512                     u1980:
  4941   001512                     
  4942                           ;color.c: 226:             LATFbits.LATF0 = !LATFbits.LATF0;
  4943   001512  A07E               	btfss	126,0,c	;volatile
  4944   001514  EF8E  F00A         	goto	u1991
  4945   001518  EF92  F00A         	goto	u1990
  4946   00151C                     u1991:
  4947   00151C  6A2D               	clrf	??_motor_response^0,c
  4948   00151E  2A2D               	incf	??_motor_response^0,f,c
  4949   001520  EF93  F00A         	goto	u2008
  4950   001524                     u1990:
  4951   001524  6A2D               	clrf	??_motor_response^0,c
  4952   001526                     u2008:
  4953   001526  507E               	movf	126,w,c	;volatile
  4954   001528  182D               	xorwf	??_motor_response^0,w,c
  4955   00152A  0BFE               	andlw	-2
  4956   00152C  182D               	xorwf	??_motor_response^0,w,c
  4957   00152E  6E7E               	movwf	126,c	;volatile
  4958   001530                     
  4959                           ;color.c: 227:             turnPrep(mL, mR);
  4960   001530  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4961   001534  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4962   001538  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4963   00153C  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4964   001540  EC36  F019         	call	_turnPrep	;wreg free
  4965   001544                     
  4966                           ;color.c: 228:             turnLeft(mL, mR);
  4967   001544  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4968   001548  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4969   00154C  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4970   001550  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4971   001554  EC62  F018         	call	_turnLeft	;wreg free
  4972   001558                     
  4973                           ;color.c: 229:             _delay((unsigned long)((330)*(64000000/4000.0)));
  4974   001558  0E1B               	movlw	27
  4975   00155A  6E2E               	movwf	(??_motor_response+1)^0,c
  4976   00155C  0ECA               	movlw	202
  4977   00155E  6E2D               	movwf	??_motor_response^0,c
  4978   001560  0E10               	movlw	16
  4979   001562                     u3187:
  4980   001562  2EE8               	decfsz	wreg,f,c
  4981   001564  D7FE               	bra	u3187
  4982   001566  2E2D               	decfsz	??_motor_response^0,f,c
  4983   001568  D7FC               	bra	u3187
  4984   00156A  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4985   00156C  D7FA               	bra	u3187
  4986   00156E  D000               	nop2	
  4987   001570                     
  4988                           ;color.c: 230:             norm_stop(mL, mR);
  4989   001570  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4990   001574  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4991   001578  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4992   00157C  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4993   001580  EC63  F01A         	call	_norm_stop	;wreg free
  4994   001584                     
  4995                           ;color.c: 231:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  4996   001584  0E52               	movlw	82
  4997   001586  6E2E               	movwf	(??_motor_response+1)^0,c
  4998   001588  0E2B               	movlw	43
  4999   00158A  6E2D               	movwf	??_motor_response^0,c
  5000   00158C  0E00               	movlw	0
  5001   00158E                     u3197:
  5002   00158E  2EE8               	decfsz	wreg,f,c
  5003   001590  D7FE               	bra	u3197
  5004   001592  2E2D               	decfsz	??_motor_response^0,f,c
  5005   001594  D7FC               	bra	u3197
  5006   001596  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5007   001598  D7FA               	bra	u3197
  5008   00159A  D000               	nop2	
  5009   00159C                     
  5010                           ;color.c: 232:             return 7;
  5011   00159C  0E07               	movlw	7
  5012   00159E  EF55  F00D         	goto	l158
  5013   0015A2                     l3078:
  5014                           
  5015                           ;color.c: 238:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  5016   0015A2  EE20 F01C          	lfsr	2,28
  5017   0015A6  5027               	movf	motor_response@temp^0,w,c
  5018   0015A8  26D9               	addwf	fsr2l,f,c
  5019   0015AA  5028               	movf	(motor_response@temp+1)^0,w,c
  5020   0015AC  22DA               	addwfc	fsr2h,f,c
  5021   0015AE  CFDE F009          	movff	postinc2,___flge@ff1
  5022   0015B2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5023   0015B6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5024   0015BA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5025   0015BE  C0C8  F00D         	movff	_CR3U,___flge@ff2
  5026   0015C2  C0C9  F00E         	movff	_CR3U+1,___flge@ff2+1
  5027   0015C6  C0CA  F00F         	movff	_CR3U+2,___flge@ff2+2
  5028   0015CA  C0CB  F010         	movff	_CR3U+3,___flge@ff2+3
  5029   0015CE  EC64  F015         	call	___flge	;wreg free
  5030   0015D2  B0D8               	btfsc	status,0,c
  5031   0015D4  EFEE  F00A         	goto	u2011
  5032   0015D8  EFF0  F00A         	goto	u2010
  5033   0015DC                     u2011:
  5034   0015DC  EF8E  F00C         	goto	l3124
  5035   0015E0                     u2010:
  5036   0015E0  C041  F009         	movff	_CR3L,___flge@ff1
  5037   0015E4  C042  F00A         	movff	_CR3L+1,___flge@ff1+1
  5038   0015E8  C043  F00B         	movff	_CR3L+2,___flge@ff1+2
  5039   0015EC  C044  F00C         	movff	_CR3L+3,___flge@ff1+3
  5040   0015F0  EE20 F01C          	lfsr	2,28
  5041   0015F4  5027               	movf	motor_response@temp^0,w,c
  5042   0015F6  26D9               	addwf	fsr2l,f,c
  5043   0015F8  5028               	movf	(motor_response@temp+1)^0,w,c
  5044   0015FA  22DA               	addwfc	fsr2h,f,c
  5045   0015FC  CFDE F00D          	movff	postinc2,___flge@ff2
  5046   001600  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5047   001604  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5048   001608  CFDE F010          	movff	postinc2,___flge@ff2+3
  5049   00160C  EC64  F015         	call	___flge	;wreg free
  5050   001610  B0D8               	btfsc	status,0,c
  5051   001612  EF0D  F00B         	goto	u2021
  5052   001616  EF0F  F00B         	goto	u2020
  5053   00161A                     u2021:
  5054   00161A  EF8E  F00C         	goto	l3124
  5055   00161E                     u2020:
  5056   00161E                     
  5057                           ;color.c: 239:         if (temp->norm_G > 8) {
  5058   00161E  0E00               	movlw	0
  5059   001620  6E09               	movwf	___flge@ff1^0,c
  5060   001622  0E00               	movlw	0
  5061   001624  6E0A               	movwf	(___flge@ff1+1)^0,c
  5062   001626  0E00               	movlw	0
  5063   001628  6E0B               	movwf	(___flge@ff1+2)^0,c
  5064   00162A  0E41               	movlw	65
  5065   00162C  6E0C               	movwf	(___flge@ff1+3)^0,c
  5066   00162E  EE20 F014          	lfsr	2,20
  5067   001632  5027               	movf	motor_response@temp^0,w,c
  5068   001634  26D9               	addwf	fsr2l,f,c
  5069   001636  5028               	movf	(motor_response@temp+1)^0,w,c
  5070   001638  22DA               	addwfc	fsr2h,f,c
  5071   00163A  CFDE F00D          	movff	postinc2,___flge@ff2
  5072   00163E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5073   001642  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5074   001646  CFDE F010          	movff	postinc2,___flge@ff2+3
  5075   00164A  EC64  F015         	call	___flge	;wreg free
  5076   00164E  B0D8               	btfsc	status,0,c
  5077   001650  EF2C  F00B         	goto	u2031
  5078   001654  EF2E  F00B         	goto	u2030
  5079   001658                     u2031:
  5080   001658  EF50  F00B         	goto	l3092
  5081   00165C                     u2030:
  5082   00165C                     
  5083                           ;color.c: 240:             turnPrep(mL, mR);
  5084   00165C  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5085   001660  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5086   001664  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5087   001668  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5088   00166C  EC36  F019         	call	_turnPrep	;wreg free
  5089                           
  5090                           ;color.c: 241:             turnRight(mL, mR);
  5091   001670  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5092   001674  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5093   001678  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5094   00167C  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5095   001680  EC29  F018         	call	_turnRight	;wreg free
  5096   001684                     
  5097                           ;color.c: 242:             _delay((unsigned long)((230)*(64000000/4000.0)));
  5098   001684  0E13               	movlw	19
  5099   001686  6E2E               	movwf	(??_motor_response+1)^0,c
  5100   001688  0EAC               	movlw	172
  5101   00168A  6E2D               	movwf	??_motor_response^0,c
  5102   00168C  0E2A               	movlw	42
  5103   00168E                     u3207:
  5104   00168E  2EE8               	decfsz	wreg,f,c
  5105   001690  D7FE               	bra	u3207
  5106   001692  2E2D               	decfsz	??_motor_response^0,f,c
  5107   001694  D7FC               	bra	u3207
  5108   001696  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5109   001698  D7FA               	bra	u3207
  5110   00169A                     
  5111                           ;color.c: 243:             return 1;
  5112   00169A  0E01               	movlw	1
  5113   00169C  EF55  F00D         	goto	l158
  5114   0016A0                     l3092:
  5115                           
  5116                           ;color.c: 245:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  5117   0016A0  0E00               	movlw	0
  5118   0016A2  6E09               	movwf	___flge@ff1^0,c
  5119   0016A4  0E00               	movlw	0
  5120   0016A6  6E0A               	movwf	(___flge@ff1+1)^0,c
  5121   0016A8  0E90               	movlw	144
  5122   0016AA  6E0B               	movwf	(___flge@ff1+2)^0,c
  5123   0016AC  0E40               	movlw	64
  5124   0016AE  6E0C               	movwf	(___flge@ff1+3)^0,c
  5125   0016B0  EE20 F018          	lfsr	2,24
  5126   0016B4  5027               	movf	motor_response@temp^0,w,c
  5127   0016B6  26D9               	addwf	fsr2l,f,c
  5128   0016B8  5028               	movf	(motor_response@temp+1)^0,w,c
  5129   0016BA  22DA               	addwfc	fsr2h,f,c
  5130   0016BC  CFDE F00D          	movff	postinc2,___flge@ff2
  5131   0016C0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5132   0016C4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5133   0016C8  CFDE F010          	movff	postinc2,___flge@ff2+3
  5134   0016CC  EC64  F015         	call	___flge	;wreg free
  5135   0016D0  B0D8               	btfsc	status,0,c
  5136   0016D2  EF6D  F00B         	goto	u2041
  5137   0016D6  EF6F  F00B         	goto	u2040
  5138   0016DA                     u2041:
  5139   0016DA  EFB1  F00B         	goto	l3104
  5140   0016DE                     u2040:
  5141   0016DE  EE20 F018          	lfsr	2,24
  5142   0016E2  5027               	movf	motor_response@temp^0,w,c
  5143   0016E4  26D9               	addwf	fsr2l,f,c
  5144   0016E6  5028               	movf	(motor_response@temp+1)^0,w,c
  5145   0016E8  22DA               	addwfc	fsr2h,f,c
  5146   0016EA  CFDE F009          	movff	postinc2,___flge@ff1
  5147   0016EE  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5148   0016F2  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5149   0016F6  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5150   0016FA  0E00               	movlw	0
  5151   0016FC  6E0D               	movwf	___flge@ff2^0,c
  5152   0016FE  0E00               	movlw	0
  5153   001700  6E0E               	movwf	(___flge@ff2+1)^0,c
  5154   001702  0EB0               	movlw	176
  5155   001704  6E0F               	movwf	(___flge@ff2+2)^0,c
  5156   001706  0E40               	movlw	64
  5157   001708  6E10               	movwf	(___flge@ff2+3)^0,c
  5158   00170A  EC64  F015         	call	___flge	;wreg free
  5159   00170E  B0D8               	btfsc	status,0,c
  5160   001710  EF8C  F00B         	goto	u2051
  5161   001714  EF8E  F00B         	goto	u2050
  5162   001718                     u2051:
  5163   001718  EFB1  F00B         	goto	l3104
  5164   00171C                     u2050:
  5165   00171C                     
  5166                           ;color.c: 246:             turnPrep(mL, mR);
  5167   00171C  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5168   001720  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5169   001724  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5170   001728  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5171   00172C  EC36  F019         	call	_turnPrep	;wreg free
  5172                           
  5173                           ;color.c: 247:             turnLeft(mL, mR);
  5174   001730  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5175   001734  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5176   001738  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5177   00173C  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5178   001740  EC62  F018         	call	_turnLeft	;wreg free
  5179   001744                     
  5180                           ;color.c: 248:             _delay((unsigned long)((215)*(64000000/4000.0)));
  5181   001744  0E12               	movlw	18
  5182   001746  6E2E               	movwf	(??_motor_response+1)^0,c
  5183   001748  0E74               	movlw	116
  5184   00174A  6E2D               	movwf	??_motor_response^0,c
  5185   00174C  0E7A               	movlw	122
  5186   00174E                     u3217:
  5187   00174E  2EE8               	decfsz	wreg,f,c
  5188   001750  D7FE               	bra	u3217
  5189   001752  2E2D               	decfsz	??_motor_response^0,f,c
  5190   001754  D7FC               	bra	u3217
  5191   001756  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5192   001758  D7FA               	bra	u3217
  5193   00175A  D000               	nop2	
  5194   00175C                     
  5195                           ;color.c: 249:             return 2;
  5196   00175C  0E02               	movlw	2
  5197   00175E  EF55  F00D         	goto	l158
  5198   001762                     l3104:
  5199                           
  5200                           ;color.c: 251:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  5201   001762  0ECD               	movlw	205
  5202   001764  6E09               	movwf	___flge@ff1^0,c
  5203   001766  0ECC               	movlw	204
  5204   001768  6E0A               	movwf	(___flge@ff1+1)^0,c
  5205   00176A  0E2C               	movlw	44
  5206   00176C  6E0B               	movwf	(___flge@ff1+2)^0,c
  5207   00176E  0E40               	movlw	64
  5208   001770  6E0C               	movwf	(___flge@ff1+3)^0,c
  5209   001772  EE20 F018          	lfsr	2,24
  5210   001776  5027               	movf	motor_response@temp^0,w,c
  5211   001778  26D9               	addwf	fsr2l,f,c
  5212   00177A  5028               	movf	(motor_response@temp+1)^0,w,c
  5213   00177C  22DA               	addwfc	fsr2h,f,c
  5214   00177E  CFDE F00D          	movff	postinc2,___flge@ff2
  5215   001782  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5216   001786  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5217   00178A  CFDE F010          	movff	postinc2,___flge@ff2+3
  5218   00178E  EC64  F015         	call	___flge	;wreg free
  5219   001792  B0D8               	btfsc	status,0,c
  5220   001794  EFCE  F00B         	goto	u2061
  5221   001798  EFD0  F00B         	goto	u2060
  5222   00179C                     u2061:
  5223   00179C  EF8E  F00C         	goto	l3124
  5224   0017A0                     u2060:
  5225   0017A0  EE20 F018          	lfsr	2,24
  5226   0017A4  5027               	movf	motor_response@temp^0,w,c
  5227   0017A6  26D9               	addwf	fsr2l,f,c
  5228   0017A8  5028               	movf	(motor_response@temp+1)^0,w,c
  5229   0017AA  22DA               	addwfc	fsr2h,f,c
  5230   0017AC  CFDE F009          	movff	postinc2,___flge@ff1
  5231   0017B0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5232   0017B4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5233   0017B8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5234   0017BC  0E33               	movlw	51
  5235   0017BE  6E0D               	movwf	___flge@ff2^0,c
  5236   0017C0  0E33               	movlw	51
  5237   0017C2  6E0E               	movwf	(___flge@ff2+1)^0,c
  5238   0017C4  0E53               	movlw	83
  5239   0017C6  6E0F               	movwf	(___flge@ff2+2)^0,c
  5240   0017C8  0E40               	movlw	64
  5241   0017CA  6E10               	movwf	(___flge@ff2+3)^0,c
  5242   0017CC  EC64  F015         	call	___flge	;wreg free
  5243   0017D0  B0D8               	btfsc	status,0,c
  5244   0017D2  EFED  F00B         	goto	u2071
  5245   0017D6  EFEF  F00B         	goto	u2070
  5246   0017DA                     u2071:
  5247   0017DA  EF8E  F00C         	goto	l3124
  5248   0017DE                     u2070:
  5249   0017DE  0ECD               	movlw	205
  5250   0017E0  6E09               	movwf	___flge@ff1^0,c
  5251   0017E2  0ECC               	movlw	204
  5252   0017E4  6E0A               	movwf	(___flge@ff1+1)^0,c
  5253   0017E6  0E2C               	movlw	44
  5254   0017E8  6E0B               	movwf	(___flge@ff1+2)^0,c
  5255   0017EA  0E40               	movlw	64
  5256   0017EC  6E0C               	movwf	(___flge@ff1+3)^0,c
  5257   0017EE  EE20 F010          	lfsr	2,16
  5258   0017F2  5027               	movf	motor_response@temp^0,w,c
  5259   0017F4  26D9               	addwf	fsr2l,f,c
  5260   0017F6  5028               	movf	(motor_response@temp+1)^0,w,c
  5261   0017F8  22DA               	addwfc	fsr2h,f,c
  5262   0017FA  CFDE F00D          	movff	postinc2,___flge@ff2
  5263   0017FE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5264   001802  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5265   001806  CFDE F010          	movff	postinc2,___flge@ff2+3
  5266   00180A  EC64  F015         	call	___flge	;wreg free
  5267   00180E  B0D8               	btfsc	status,0,c
  5268   001810  EF0C  F00C         	goto	u2081
  5269   001814  EF0E  F00C         	goto	u2080
  5270   001818                     u2081:
  5271   001818  EF8E  F00C         	goto	l3124
  5272   00181C                     u2080:
  5273   00181C  EE20 F010          	lfsr	2,16
  5274   001820  5027               	movf	motor_response@temp^0,w,c
  5275   001822  26D9               	addwf	fsr2l,f,c
  5276   001824  5028               	movf	(motor_response@temp+1)^0,w,c
  5277   001826  22DA               	addwfc	fsr2h,f,c
  5278   001828  CFDE F009          	movff	postinc2,___flge@ff1
  5279   00182C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5280   001830  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5281   001834  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5282   001838  0E33               	movlw	51
  5283   00183A  6E0D               	movwf	___flge@ff2^0,c
  5284   00183C  0E33               	movlw	51
  5285   00183E  6E0E               	movwf	(___flge@ff2+1)^0,c
  5286   001840  0E53               	movlw	83
  5287   001842  6E0F               	movwf	(___flge@ff2+2)^0,c
  5288   001844  0E40               	movlw	64
  5289   001846  6E10               	movwf	(___flge@ff2+3)^0,c
  5290   001848  EC64  F015         	call	___flge	;wreg free
  5291   00184C  B0D8               	btfsc	status,0,c
  5292   00184E  EF2B  F00C         	goto	u2091
  5293   001852  EF2D  F00C         	goto	u2090
  5294   001856                     u2091:
  5295   001856  EF8E  F00C         	goto	l3124
  5296   00185A                     u2090:
  5297   00185A  0ECD               	movlw	205
  5298   00185C  6E09               	movwf	___flge@ff1^0,c
  5299   00185E  0ECC               	movlw	204
  5300   001860  6E0A               	movwf	(___flge@ff1+1)^0,c
  5301   001862  0E2C               	movlw	44
  5302   001864  6E0B               	movwf	(___flge@ff1+2)^0,c
  5303   001866  0E40               	movlw	64
  5304   001868  6E0C               	movwf	(___flge@ff1+3)^0,c
  5305   00186A  EE20 F014          	lfsr	2,20
  5306   00186E  5027               	movf	motor_response@temp^0,w,c
  5307   001870  26D9               	addwf	fsr2l,f,c
  5308   001872  5028               	movf	(motor_response@temp+1)^0,w,c
  5309   001874  22DA               	addwfc	fsr2h,f,c
  5310   001876  CFDE F00D          	movff	postinc2,___flge@ff2
  5311   00187A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5312   00187E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5313   001882  CFDE F010          	movff	postinc2,___flge@ff2+3
  5314   001886  EC64  F015         	call	___flge	;wreg free
  5315   00188A  B0D8               	btfsc	status,0,c
  5316   00188C  EF4A  F00C         	goto	u2101
  5317   001890  EF4C  F00C         	goto	u2100
  5318   001894                     u2101:
  5319   001894  EF8E  F00C         	goto	l3124
  5320   001898                     u2100:
  5321   001898  EE20 F014          	lfsr	2,20
  5322   00189C  5027               	movf	motor_response@temp^0,w,c
  5323   00189E  26D9               	addwf	fsr2l,f,c
  5324   0018A0  5028               	movf	(motor_response@temp+1)^0,w,c
  5325   0018A2  22DA               	addwfc	fsr2h,f,c
  5326   0018A4  CFDE F009          	movff	postinc2,___flge@ff1
  5327   0018A8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5328   0018AC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5329   0018B0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5330   0018B4  0E33               	movlw	51
  5331   0018B6  6E0D               	movwf	___flge@ff2^0,c
  5332   0018B8  0E33               	movlw	51
  5333   0018BA  6E0E               	movwf	(___flge@ff2+1)^0,c
  5334   0018BC  0E53               	movlw	83
  5335   0018BE  6E0F               	movwf	(___flge@ff2+2)^0,c
  5336   0018C0  0E40               	movlw	64
  5337   0018C2  6E10               	movwf	(___flge@ff2+3)^0,c
  5338   0018C4  EC64  F015         	call	___flge	;wreg free
  5339   0018C8  B0D8               	btfsc	status,0,c
  5340   0018CA  EF69  F00C         	goto	u2111
  5341   0018CE  EF6B  F00C         	goto	u2110
  5342   0018D2                     u2111:
  5343   0018D2  EF8E  F00C         	goto	l3124
  5344   0018D6                     u2110:
  5345   0018D6                     
  5346                           ;color.c: 252:             turnPrep(mL, mR);
  5347   0018D6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5348   0018DA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5349   0018DE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5350   0018E2  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5351   0018E6  EC36  F019         	call	_turnPrep	;wreg free
  5352                           
  5353                           ;color.c: 253:             turnLeft(mL, mR);
  5354   0018EA  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5355   0018EE  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5356   0018F2  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5357   0018F6  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5358   0018FA  EC62  F018         	call	_turnLeft	;wreg free
  5359   0018FE                     
  5360                           ;color.c: 254:             _delay((unsigned long)((400)*(64000000/4000.0)));
  5361   0018FE  0E21               	movlw	33
  5362   001900  6E2E               	movwf	(??_motor_response+1)^0,c
  5363   001902  0E78               	movlw	120
  5364   001904  6E2D               	movwf	??_motor_response^0,c
  5365   001906  0E98               	movlw	152
  5366   001908                     u3227:
  5367   001908  2EE8               	decfsz	wreg,f,c
  5368   00190A  D7FE               	bra	u3227
  5369   00190C  2E2D               	decfsz	??_motor_response^0,f,c
  5370   00190E  D7FC               	bra	u3227
  5371   001910  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5372   001912  D7FA               	bra	u3227
  5373   001914  D000               	nop2	
  5374   001916                     
  5375                           ;color.c: 255:             return 3;
  5376   001916  0E03               	movlw	3
  5377   001918  EF55  F00D         	goto	l158
  5378   00191C                     l3124:
  5379                           
  5380                           ;color.c: 258:     if (temp->norm_C > CR1L) {
  5381   00191C  C049  F009         	movff	_CR1L,___flge@ff1
  5382   001920  C04A  F00A         	movff	_CR1L+1,___flge@ff1+1
  5383   001924  C04B  F00B         	movff	_CR1L+2,___flge@ff1+2
  5384   001928  C04C  F00C         	movff	_CR1L+3,___flge@ff1+3
  5385   00192C  EE20 F01C          	lfsr	2,28
  5386   001930  5027               	movf	motor_response@temp^0,w,c
  5387   001932  26D9               	addwf	fsr2l,f,c
  5388   001934  5028               	movf	(motor_response@temp+1)^0,w,c
  5389   001936  22DA               	addwfc	fsr2h,f,c
  5390   001938  CFDE F00D          	movff	postinc2,___flge@ff2
  5391   00193C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5392   001940  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5393   001944  CFDE F010          	movff	postinc2,___flge@ff2+3
  5394   001948  EC64  F015         	call	___flge	;wreg free
  5395   00194C  B0D8               	btfsc	status,0,c
  5396   00194E  EFAB  F00C         	goto	u2121
  5397   001952  EFAD  F00C         	goto	u2120
  5398   001956                     u2121:
  5399   001956  EF55  F00D         	goto	l158
  5400   00195A                     u2120:
  5401   00195A                     
  5402                           ;color.c: 259:         if (temp->norm_B > 5) {
  5403   00195A  0E00               	movlw	0
  5404   00195C  6E09               	movwf	___flge@ff1^0,c
  5405   00195E  0E00               	movlw	0
  5406   001960  6E0A               	movwf	(___flge@ff1+1)^0,c
  5407   001962  0EA0               	movlw	160
  5408   001964  6E0B               	movwf	(___flge@ff1+2)^0,c
  5409   001966  0E40               	movlw	64
  5410   001968  6E0C               	movwf	(___flge@ff1+3)^0,c
  5411   00196A  EE20 F018          	lfsr	2,24
  5412   00196E  5027               	movf	motor_response@temp^0,w,c
  5413   001970  26D9               	addwf	fsr2l,f,c
  5414   001972  5028               	movf	(motor_response@temp+1)^0,w,c
  5415   001974  22DA               	addwfc	fsr2h,f,c
  5416   001976  CFDE F00D          	movff	postinc2,___flge@ff2
  5417   00197A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5418   00197E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5419   001982  CFDE F010          	movff	postinc2,___flge@ff2+3
  5420   001986  EC64  F015         	call	___flge	;wreg free
  5421   00198A  B0D8               	btfsc	status,0,c
  5422   00198C  EFCA  F00C         	goto	u2131
  5423   001990  EFCC  F00C         	goto	u2130
  5424   001994                     u2131:
  5425   001994  EF11  F00D         	goto	l3142
  5426   001998                     u2130:
  5427   001998                     
  5428                           ;color.c: 260:             reverse(mL, mR);
  5429   001998  C029  F01C         	movff	motor_response@mL,reverse@mL
  5430   00199C  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5431   0019A0  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5432   0019A4  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5433   0019A8  ECE6  F015         	call	_reverse	;wreg free
  5434   0019AC                     
  5435                           ;color.c: 261:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5436   0019AC  0EF4               	movlw	244
  5437   0019AE  6E2E               	movwf	(??_motor_response+1)^0,c
  5438   0019B0  0E82               	movlw	130
  5439   0019B2  6E2D               	movwf	??_motor_response^0,c
  5440   0019B4  0E05               	movlw	5
  5441   0019B6                     u3237:
  5442   0019B6  2EE8               	decfsz	wreg,f,c
  5443   0019B8  D7FE               	bra	u3237
  5444   0019BA  2E2D               	decfsz	??_motor_response^0,f,c
  5445   0019BC  D7FC               	bra	u3237
  5446   0019BE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5447   0019C0  D7FA               	bra	u3237
  5448   0019C2  F000               	nop	
  5449   0019C4                     
  5450                           ;color.c: 262:             norm_stop(mL, mR);
  5451   0019C4  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5452   0019C8  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5453   0019CC  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5454   0019D0  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5455   0019D4  EC63  F01A         	call	_norm_stop	;wreg free
  5456                           
  5457                           ;color.c: 263:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5458   0019D8  0E09               	movlw	9
  5459   0019DA  6E2E               	movwf	(??_motor_response+1)^0,c
  5460   0019DC  0E1E               	movlw	30
  5461   0019DE  6E2D               	movwf	??_motor_response^0,c
  5462   0019E0  0EE4               	movlw	228
  5463   0019E2                     u3247:
  5464   0019E2  2EE8               	decfsz	wreg,f,c
  5465   0019E4  D7FE               	bra	u3247
  5466   0019E6  2E2D               	decfsz	??_motor_response^0,f,c
  5467   0019E8  D7FC               	bra	u3247
  5468   0019EA  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5469   0019EC  D7FA               	bra	u3247
  5470   0019EE  D000               	nop2	
  5471   0019F0                     
  5472                           ;color.c: 264:             turnRight(mL, mR);
  5473   0019F0  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5474   0019F4  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5475   0019F8  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5476   0019FC  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5477   001A00  EC29  F018         	call	_turnRight	;wreg free
  5478   001A04                     
  5479                           ;color.c: 265:             _delay((unsigned long)((215)*(64000000/4000.0)));
  5480   001A04  0E12               	movlw	18
  5481   001A06  6E2E               	movwf	(??_motor_response+1)^0,c
  5482   001A08  0E74               	movlw	116
  5483   001A0A  6E2D               	movwf	??_motor_response^0,c
  5484   001A0C  0E7A               	movlw	122
  5485   001A0E                     u3257:
  5486   001A0E  2EE8               	decfsz	wreg,f,c
  5487   001A10  D7FE               	bra	u3257
  5488   001A12  2E2D               	decfsz	??_motor_response^0,f,c
  5489   001A14  D7FC               	bra	u3257
  5490   001A16  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5491   001A18  D7FA               	bra	u3257
  5492   001A1A  D000               	nop2	
  5493   001A1C                     
  5494                           ;color.c: 266:             return 4;
  5495   001A1C  0E04               	movlw	4
  5496   001A1E  EF55  F00D         	goto	l158
  5497   001A22                     l3142:
  5498                           
  5499                           ;color.c: 269:         if (temp->norm_B < 5) {
  5500   001A22  EE20 F018          	lfsr	2,24
  5501   001A26  5027               	movf	motor_response@temp^0,w,c
  5502   001A28  26D9               	addwf	fsr2l,f,c
  5503   001A2A  5028               	movf	(motor_response@temp+1)^0,w,c
  5504   001A2C  22DA               	addwfc	fsr2h,f,c
  5505   001A2E  CFDE F009          	movff	postinc2,___flge@ff1
  5506   001A32  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5507   001A36  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5508   001A3A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5509   001A3E  0E00               	movlw	0
  5510   001A40  6E0D               	movwf	___flge@ff2^0,c
  5511   001A42  0E00               	movlw	0
  5512   001A44  6E0E               	movwf	(___flge@ff2+1)^0,c
  5513   001A46  0EA0               	movlw	160
  5514   001A48  6E0F               	movwf	(___flge@ff2+2)^0,c
  5515   001A4A  0E40               	movlw	64
  5516   001A4C  6E10               	movwf	(___flge@ff2+3)^0,c
  5517   001A4E  EC64  F015         	call	___flge	;wreg free
  5518   001A52  B0D8               	btfsc	status,0,c
  5519   001A54  EF2E  F00D         	goto	u2141
  5520   001A58  EF30  F00D         	goto	u2140
  5521   001A5C                     u2141:
  5522   001A5C  EF55  F00D         	goto	l158
  5523   001A60                     u2140:
  5524   001A60                     
  5525                           ;color.c: 271:             motor_return = 1;
  5526   001A60  0E01               	movlw	1
  5527   001A62  0100               	movlb	0	; () banked
  5528   001A64  6FDC               	movwf	_motor_return& (0+255),b
  5529   001A66                     
  5530                           ; BSR set to: 0
  5531                           ;color.c: 272:             LATDbits.LATD4 = 1;
  5532   001A66  887C               	bsf	124,4,c	;volatile
  5533   001A68                     
  5534                           ; BSR set to: 0
  5535                           ;color.c: 273:             turnPrep(mL, mR);
  5536   001A68  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5537   001A6C  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5538   001A70  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5539   001A74  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5540   001A78  EC36  F019         	call	_turnPrep	;wreg free
  5541   001A7C                     
  5542                           ;color.c: 274:             turnLeft(mL, mR);
  5543   001A7C  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5544   001A80  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5545   001A84  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5546   001A88  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5547   001A8C  EC62  F018         	call	_turnLeft	;wreg free
  5548   001A90                     
  5549                           ;color.c: 275:             _delay((unsigned long)((430)*(64000000/4000.0)));
  5550   001A90  0E23               	movlw	35
  5551   001A92  6E2E               	movwf	(??_motor_response+1)^0,c
  5552   001A94  0EE7               	movlw	231
  5553   001A96  6E2D               	movwf	??_motor_response^0,c
  5554   001A98  0EF8               	movlw	248
  5555   001A9A                     u3267:
  5556   001A9A  2EE8               	decfsz	wreg,f,c
  5557   001A9C  D7FE               	bra	u3267
  5558   001A9E  2E2D               	decfsz	??_motor_response^0,f,c
  5559   001AA0  D7FC               	bra	u3267
  5560   001AA2  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5561   001AA4  D7FA               	bra	u3267
  5562   001AA6                     
  5563                           ;color.c: 276:             LATHbits.LATH3 = 0;
  5564   001AA6  9680               	bcf	128,3,c	;volatile
  5565   001AA8                     
  5566                           ;color.c: 277:             return 8;
  5567   001AA8  0E08               	movlw	8
  5568   001AAA                     l158:
  5569   001AAA  0012               	return		;funcret
  5570   001AAC                     __end_of_motor_response:
  5571                           	callstack 0
  5572                           
  5573 ;; *************** function _turnRight *****************
  5574 ;; Defined at:
  5575 ;;		line 144 in file "dc_motor.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5578 ;;		 -> main@mL(9), 
  5579 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5580 ;;		 -> main@mR(9), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;		None
  5583 ;; Return value:  Size  Location     Type
  5584 ;;                  1    wreg      void 
  5585 ;; Registers used:
  5586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5592 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;Total ram usage:        4 bytes
  5597 ;; Hardware stack levels used: 1
  5598 ;; Hardware stack levels required when called: 8
  5599 ;; This function calls:
  5600 ;;		_setMotorPWM
  5601 ;; This function is called by:
  5602 ;;		_motor_response
  5603 ;;		_motor_retrace
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           
  5607                           	psect	text21
  5608   003052                     __ptext21:
  5609                           	callstack 0
  5610   003052                     _turnRight:
  5611                           	callstack 21
  5612   003052                     
  5613                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  5614   003052  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5615   003056  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5616   00305A  0E3C               	movlw	60
  5617   00305C  6EDF               	movwf	indf2,c
  5618                           
  5619                           ;dc_motor.c: 147:     mR->power = 60;
  5620   00305E  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5621   003062  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5622   003066  0E3C               	movlw	60
  5623   003068  6EDF               	movwf	indf2,c
  5624   00306A                     
  5625                           ;dc_motor.c: 148:     mL->brakemode = 1;
  5626   00306A  EE20 F002          	lfsr	2,2
  5627   00306E  501C               	movf	turnRight@mL^0,w,c
  5628   003070  26D9               	addwf	fsr2l,f,c
  5629   003072  501D               	movf	(turnRight@mL+1)^0,w,c
  5630   003074  22DA               	addwfc	fsr2h,f,c
  5631   003076  0E01               	movlw	1
  5632   003078  6EDF               	movwf	indf2,c
  5633   00307A                     
  5634                           ;dc_motor.c: 149:     mR->brakemode = 1;
  5635   00307A  EE20 F002          	lfsr	2,2
  5636   00307E  501E               	movf	turnRight@mR^0,w,c
  5637   003080  26D9               	addwf	fsr2l,f,c
  5638   003082  501F               	movf	(turnRight@mR+1)^0,w,c
  5639   003084  22DA               	addwfc	fsr2h,f,c
  5640   003086  0E01               	movlw	1
  5641   003088  6EDF               	movwf	indf2,c
  5642   00308A                     
  5643                           ;dc_motor.c: 150:     mR->direction = 0;
  5644   00308A  EE20 F001          	lfsr	2,1
  5645   00308E  501E               	movf	turnRight@mR^0,w,c
  5646   003090  26D9               	addwf	fsr2l,f,c
  5647   003092  501F               	movf	(turnRight@mR+1)^0,w,c
  5648   003094  22DA               	addwfc	fsr2h,f,c
  5649   003096  0E00               	movlw	0
  5650   003098  6EDF               	movwf	indf2,c
  5651   00309A                     
  5652                           ;dc_motor.c: 151:     mL->direction = 1;
  5653   00309A  EE20 F001          	lfsr	2,1
  5654   00309E  501C               	movf	turnRight@mL^0,w,c
  5655   0030A0  26D9               	addwf	fsr2l,f,c
  5656   0030A2  501D               	movf	(turnRight@mL+1)^0,w,c
  5657   0030A4  22DA               	addwfc	fsr2h,f,c
  5658   0030A6  0E01               	movlw	1
  5659   0030A8  6EDF               	movwf	indf2,c
  5660   0030AA                     
  5661                           ;dc_motor.c: 152:     setMotorPWM(mL);
  5662   0030AA  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5663   0030AE  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5664   0030B2  ECAE  F014         	call	_setMotorPWM	;wreg free
  5665   0030B6                     
  5666                           ;dc_motor.c: 153:     setMotorPWM(mR);
  5667   0030B6  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5668   0030BA  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5669   0030BE  ECAE  F014         	call	_setMotorPWM	;wreg free
  5670   0030C2  0012               	return		;funcret
  5671   0030C4                     __end_of_turnRight:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _turnPrep *****************
  5675 ;; Defined at:
  5676 ;;		line 245 in file "dc_motor.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  5679 ;;		 -> main@mL(9), 
  5680 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  5681 ;;		 -> main@mR(9), 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;		None
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5693 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5695 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5696 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5697 ;;Total ram usage:        6 bytes
  5698 ;; Hardware stack levels used: 1
  5699 ;; Hardware stack levels required when called: 9
  5700 ;; This function calls:
  5701 ;;		_norm_stop
  5702 ;;		_reverse
  5703 ;; This function is called by:
  5704 ;;		_motor_response
  5705 ;;		_motor_retrace
  5706 ;; This function uses a non-reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text22
  5710   00326C                     __ptext22:
  5711                           	callstack 0
  5712   00326C                     _turnPrep:
  5713                           	callstack 20
  5714   00326C                     
  5715                           ;dc_motor.c: 246:         reverse(mL, mR);
  5716   00326C  C021  F01C         	movff	turnPrep@mL,reverse@mL
  5717   003270  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  5718   003274  C023  F01E         	movff	turnPrep@mR,reverse@mR
  5719   003278  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  5720   00327C  ECE6  F015         	call	_reverse	;wreg free
  5721   003280                     
  5722                           ;dc_motor.c: 247:         _delay((unsigned long)((600)*(64000000/4000.0)));
  5723   003280  0E31               	movlw	49
  5724   003282  6E26               	movwf	(??_turnPrep+1)^0,c
  5725   003284  0EB4               	movlw	180
  5726   003286  6E25               	movwf	??_turnPrep^0,c
  5727   003288  0E66               	movlw	102
  5728   00328A                     u3277:
  5729   00328A  2EE8               	decfsz	wreg,f,c
  5730   00328C  D7FE               	bra	u3277
  5731   00328E  2E25               	decfsz	??_turnPrep^0,f,c
  5732   003290  D7FC               	bra	u3277
  5733   003292  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  5734   003294  D7FA               	bra	u3277
  5735   003296                     
  5736                           ;dc_motor.c: 248:         norm_stop(mL, mR);
  5737   003296  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  5738   00329A  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  5739   00329E  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  5740   0032A2  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  5741   0032A6  EC63  F01A         	call	_norm_stop	;wreg free
  5742                           
  5743                           ;dc_motor.c: 249:         _delay((unsigned long)((300)*(64000000/4000.0)));
  5744   0032AA  0E19               	movlw	25
  5745   0032AC  6E26               	movwf	(??_turnPrep+1)^0,c
  5746   0032AE  0E5A               	movlw	90
  5747   0032B0  6E25               	movwf	??_turnPrep^0,c
  5748   0032B2  0EB2               	movlw	178
  5749   0032B4                     u3287:
  5750   0032B4  2EE8               	decfsz	wreg,f,c
  5751   0032B6  D7FE               	bra	u3287
  5752   0032B8  2E25               	decfsz	??_turnPrep^0,f,c
  5753   0032BA  D7FC               	bra	u3287
  5754   0032BC  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  5755   0032BE  D7FA               	bra	u3287
  5756   0032C0  0012               	return		;funcret
  5757   0032C2                     __end_of_turnPrep:
  5758                           	callstack 0
  5759                           
  5760 ;; *************** function _reverse *****************
  5761 ;; Defined at:
  5762 ;;		line 222 in file "dc_motor.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5765 ;;		 -> main@mL(9), 
  5766 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5767 ;;		 -> main@mR(9), 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;		None
  5770 ;; Return value:  Size  Location     Type
  5771 ;;                  1    wreg      void 
  5772 ;; Registers used:
  5773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5774 ;; Tracked objects:
  5775 ;;		On entry : 0/0
  5776 ;;		On exit  : 0/0
  5777 ;;		Unchanged: 0/0
  5778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5779 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5782 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;Total ram usage:        5 bytes
  5784 ;; Hardware stack levels used: 1
  5785 ;; Hardware stack levels required when called: 8
  5786 ;; This function calls:
  5787 ;;		_setMotorPWM
  5788 ;; This function is called by:
  5789 ;;		_motor_response
  5790 ;;		_turnPrep
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text23
  5795   002BCC                     __ptext23:
  5796                           	callstack 0
  5797   002BCC                     _reverse:
  5798                           	callstack 20
  5799   002BCC                     
  5800                           ;dc_motor.c: 222: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 223: {;dc_motor.c
      +                          : 224:     mL->power = 5;
  5801   002BCC  C01C  FFD9         	movff	reverse@mL,fsr2l
  5802   002BD0  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5803   002BD4  0E05               	movlw	5
  5804   002BD6  6EDF               	movwf	indf2,c
  5805                           
  5806                           ;dc_motor.c: 225:     mR->power = 5;
  5807   002BD8  C01E  FFD9         	movff	reverse@mR,fsr2l
  5808   002BDC  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5809   002BE0  0E05               	movlw	5
  5810   002BE2  6EDF               	movwf	indf2,c
  5811   002BE4                     
  5812                           ;dc_motor.c: 226:     mR->direction = 0;
  5813   002BE4  EE20 F001          	lfsr	2,1
  5814   002BE8  501E               	movf	reverse@mR^0,w,c
  5815   002BEA  26D9               	addwf	fsr2l,f,c
  5816   002BEC  501F               	movf	(reverse@mR+1)^0,w,c
  5817   002BEE  22DA               	addwfc	fsr2h,f,c
  5818   002BF0  0E00               	movlw	0
  5819   002BF2  6EDF               	movwf	indf2,c
  5820   002BF4                     
  5821                           ;dc_motor.c: 227:     mL->direction = 0;
  5822   002BF4  EE20 F001          	lfsr	2,1
  5823   002BF8  501C               	movf	reverse@mL^0,w,c
  5824   002BFA  26D9               	addwf	fsr2l,f,c
  5825   002BFC  501D               	movf	(reverse@mL+1)^0,w,c
  5826   002BFE  22DA               	addwfc	fsr2h,f,c
  5827   002C00  0E00               	movlw	0
  5828   002C02  6EDF               	movwf	indf2,c
  5829   002C04                     
  5830                           ;dc_motor.c: 228:     mL->brakemode = 1;
  5831   002C04  EE20 F002          	lfsr	2,2
  5832   002C08  501C               	movf	reverse@mL^0,w,c
  5833   002C0A  26D9               	addwf	fsr2l,f,c
  5834   002C0C  501D               	movf	(reverse@mL+1)^0,w,c
  5835   002C0E  22DA               	addwfc	fsr2h,f,c
  5836   002C10  0E01               	movlw	1
  5837   002C12  6EDF               	movwf	indf2,c
  5838   002C14                     
  5839                           ;dc_motor.c: 229:     mR->brakemode = 1;
  5840   002C14  EE20 F002          	lfsr	2,2
  5841   002C18  501E               	movf	reverse@mR^0,w,c
  5842   002C1A  26D9               	addwf	fsr2l,f,c
  5843   002C1C  501F               	movf	(reverse@mR+1)^0,w,c
  5844   002C1E  22DA               	addwfc	fsr2h,f,c
  5845   002C20  0E01               	movlw	1
  5846   002C22  6EDF               	movwf	indf2,c
  5847                           
  5848                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  5849   002C24  EF31  F016         	goto	l688
  5850   002C28                     l2612:
  5851                           
  5852                           ;dc_motor.c: 231:     {;dc_motor.c: 232:         mL->power++;
  5853   002C28  C01C  FFD9         	movff	reverse@mL,fsr2l
  5854   002C2C  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5855   002C30  2ADF               	incf	indf2,f,c
  5856                           
  5857                           ;dc_motor.c: 233:         mR->power++;
  5858   002C32  C01E  FFD9         	movff	reverse@mR,fsr2l
  5859   002C36  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5860   002C3A  2ADF               	incf	indf2,f,c
  5861   002C3C                     
  5862                           ;dc_motor.c: 234:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5863   002C3C  0ED0               	movlw	208
  5864   002C3E  6E20               	movwf	??_reverse^0,c
  5865   002C40  0ECA               	movlw	202
  5866   002C42                     u3297:
  5867   002C42  2EE8               	decfsz	wreg,f,c
  5868   002C44  D7FE               	bra	u3297
  5869   002C46  2E20               	decfsz	??_reverse^0,f,c
  5870   002C48  D7FC               	bra	u3297
  5871   002C4A                     
  5872                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5873   002C4A  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  5874   002C4E  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  5875   002C52  ECAE  F014         	call	_setMotorPWM	;wreg free
  5876   002C56                     
  5877                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5878   002C56  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  5879   002C5A  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  5880   002C5E  ECAE  F014         	call	_setMotorPWM	;wreg free
  5881   002C62                     l688:
  5882                           
  5883                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  5884   002C62  C01C  FFD9         	movff	reverse@mL,fsr2l
  5885   002C66  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5886   002C6A  0E15               	movlw	21
  5887   002C6C  60DF               	cpfslt	indf2,c
  5888   002C6E  EF3B  F016         	goto	u1351
  5889   002C72  EF3D  F016         	goto	u1350
  5890   002C76                     u1351:
  5891   002C76  EF49  F016         	goto	l2622
  5892   002C7A                     u1350:
  5893   002C7A  C01E  FFD9         	movff	reverse@mR,fsr2l
  5894   002C7E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5895   002C82  0E14               	movlw	20
  5896   002C84  64DF               	cpfsgt	indf2,c
  5897   002C86  EF47  F016         	goto	u1361
  5898   002C8A  EF49  F016         	goto	u1360
  5899   002C8E                     u1361:
  5900   002C8E  EF14  F016         	goto	l2612
  5901   002C92                     u1360:
  5902   002C92                     l2622:
  5903                           
  5904                           ;dc_motor.c: 238:     mL->power = 20;
  5905   002C92  C01C  FFD9         	movff	reverse@mL,fsr2l
  5906   002C96  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5907   002C9A  0E14               	movlw	20
  5908   002C9C  6EDF               	movwf	indf2,c
  5909                           
  5910                           ;dc_motor.c: 239:     mR->power = 20;
  5911   002C9E  C01E  FFD9         	movff	reverse@mR,fsr2l
  5912   002CA2  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5913   002CA6  0E14               	movlw	20
  5914   002CA8  6EDF               	movwf	indf2,c
  5915   002CAA                     
  5916                           ;dc_motor.c: 240:     setMotorPWM(mL);
  5917   002CAA  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  5918   002CAE  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  5919   002CB2  ECAE  F014         	call	_setMotorPWM	;wreg free
  5920   002CB6                     
  5921                           ;dc_motor.c: 241:     setMotorPWM(mR);
  5922   002CB6  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  5923   002CBA  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  5924   002CBE  ECAE  F014         	call	_setMotorPWM	;wreg free
  5925   002CC2  0012               	return		;funcret
  5926   002CC4                     __end_of_reverse:
  5927                           	callstack 0
  5928                           
  5929 ;; *************** function _norm_stop *****************
  5930 ;; Defined at:
  5931 ;;		line 118 in file "dc_motor.c"
  5932 ;; Parameters:    Size  Location     Type
  5933 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5934 ;;		 -> main@mL(9), 
  5935 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5936 ;;		 -> main@mR(9), 
  5937 ;; Auto vars:     Size  Location     Type
  5938 ;;		None
  5939 ;; Return value:  Size  Location     Type
  5940 ;;                  1    wreg      void 
  5941 ;; Registers used:
  5942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5943 ;; Tracked objects:
  5944 ;;		On entry : 0/0
  5945 ;;		On exit  : 0/0
  5946 ;;		Unchanged: 0/0
  5947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5952 ;;Total ram usage:        4 bytes
  5953 ;; Hardware stack levels used: 1
  5954 ;; Hardware stack levels required when called: 8
  5955 ;; This function calls:
  5956 ;;		_setMotorPWM
  5957 ;; This function is called by:
  5958 ;;		_motor_response
  5959 ;;		_motor_retrace
  5960 ;;		_main
  5961 ;;		_turnPrep
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text24
  5966   0034C6                     __ptext24:
  5967                           	callstack 0
  5968   0034C6                     _norm_stop:
  5969                           	callstack 22
  5970   0034C6                     
  5971                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  5972   0034C6  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  5973   0034CA  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  5974   0034CE  0E00               	movlw	0
  5975   0034D0  6EDF               	movwf	indf2,c
  5976                           
  5977                           ;dc_motor.c: 125:     mR->power = 0;
  5978   0034D2  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  5979   0034D6  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  5980   0034DA  0E00               	movlw	0
  5981   0034DC  6EDF               	movwf	indf2,c
  5982   0034DE                     
  5983                           ;dc_motor.c: 126:     setMotorPWM(mL);
  5984   0034DE  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  5985   0034E2  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  5986   0034E6  ECAE  F014         	call	_setMotorPWM	;wreg free
  5987   0034EA                     
  5988                           ;dc_motor.c: 127:     setMotorPWM(mR);
  5989   0034EA  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  5990   0034EE  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  5991   0034F2  ECAE  F014         	call	_setMotorPWM	;wreg free
  5992   0034F6  0012               	return		;funcret
  5993   0034F8                     __end_of_norm_stop:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function _turnLeft *****************
  5997 ;; Defined at:
  5998 ;;		line 131 in file "dc_motor.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6001 ;;		 -> main@mL(9), 
  6002 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6003 ;;		 -> main@mR(9), 
  6004 ;; Auto vars:     Size  Location     Type
  6005 ;;		None
  6006 ;; Return value:  Size  Location     Type
  6007 ;;                  1    wreg      void 
  6008 ;; Registers used:
  6009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6010 ;; Tracked objects:
  6011 ;;		On entry : 0/0
  6012 ;;		On exit  : 0/0
  6013 ;;		Unchanged: 0/0
  6014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;Total ram usage:        4 bytes
  6020 ;; Hardware stack levels used: 1
  6021 ;; Hardware stack levels required when called: 8
  6022 ;; This function calls:
  6023 ;;		_setMotorPWM
  6024 ;; This function is called by:
  6025 ;;		_motor_response
  6026 ;;		_motor_retrace
  6027 ;;		_main
  6028 ;; This function uses a non-reentrant model
  6029 ;;
  6030                           
  6031                           	psect	text25
  6032   0030C4                     __ptext25:
  6033                           	callstack 0
  6034   0030C4                     _turnLeft:
  6035                           	callstack 22
  6036   0030C4                     
  6037                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  6038   0030C4  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6039   0030C8  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6040   0030CC  0E3C               	movlw	60
  6041   0030CE  6EDF               	movwf	indf2,c
  6042                           
  6043                           ;dc_motor.c: 134:     mR->power = 60;
  6044   0030D0  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6045   0030D4  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6046   0030D8  0E3C               	movlw	60
  6047   0030DA  6EDF               	movwf	indf2,c
  6048   0030DC                     
  6049                           ;dc_motor.c: 135:     mL->brakemode = 1;
  6050   0030DC  EE20 F002          	lfsr	2,2
  6051   0030E0  501C               	movf	turnLeft@mL^0,w,c
  6052   0030E2  26D9               	addwf	fsr2l,f,c
  6053   0030E4  501D               	movf	(turnLeft@mL+1)^0,w,c
  6054   0030E6  22DA               	addwfc	fsr2h,f,c
  6055   0030E8  0E01               	movlw	1
  6056   0030EA  6EDF               	movwf	indf2,c
  6057   0030EC                     
  6058                           ;dc_motor.c: 136:     mR->brakemode = 1;
  6059   0030EC  EE20 F002          	lfsr	2,2
  6060   0030F0  501E               	movf	turnLeft@mR^0,w,c
  6061   0030F2  26D9               	addwf	fsr2l,f,c
  6062   0030F4  501F               	movf	(turnLeft@mR+1)^0,w,c
  6063   0030F6  22DA               	addwfc	fsr2h,f,c
  6064   0030F8  0E01               	movlw	1
  6065   0030FA  6EDF               	movwf	indf2,c
  6066   0030FC                     
  6067                           ;dc_motor.c: 137:     mL->direction = 0;
  6068   0030FC  EE20 F001          	lfsr	2,1
  6069   003100  501C               	movf	turnLeft@mL^0,w,c
  6070   003102  26D9               	addwf	fsr2l,f,c
  6071   003104  501D               	movf	(turnLeft@mL+1)^0,w,c
  6072   003106  22DA               	addwfc	fsr2h,f,c
  6073   003108  0E00               	movlw	0
  6074   00310A  6EDF               	movwf	indf2,c
  6075   00310C                     
  6076                           ;dc_motor.c: 138:     mR->direction = 1;
  6077   00310C  EE20 F001          	lfsr	2,1
  6078   003110  501E               	movf	turnLeft@mR^0,w,c
  6079   003112  26D9               	addwf	fsr2l,f,c
  6080   003114  501F               	movf	(turnLeft@mR+1)^0,w,c
  6081   003116  22DA               	addwfc	fsr2h,f,c
  6082   003118  0E01               	movlw	1
  6083   00311A  6EDF               	movwf	indf2,c
  6084   00311C                     
  6085                           ;dc_motor.c: 139:     setMotorPWM(mL);
  6086   00311C  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6087   003120  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6088   003124  ECAE  F014         	call	_setMotorPWM	;wreg free
  6089   003128                     
  6090                           ;dc_motor.c: 140:     setMotorPWM(mR);
  6091   003128  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6092   00312C  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6093   003130  ECAE  F014         	call	_setMotorPWM	;wreg free
  6094   003134  0012               	return		;funcret
  6095   003136                     __end_of_turnLeft:
  6096                           	callstack 0
  6097                           
  6098 ;; *************** function _setMotorPWM *****************
  6099 ;; Defined at:
  6100 ;;		line 56 in file "dc_motor.c"
  6101 ;; Parameters:    Size  Location     Type
  6102 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6103 ;;		 -> main@mR(9), main@mL(9), 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  negDuty         1   26[COMRAM] unsigned char 
  6106 ;;  posDuty         1   25[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6119 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6120 ;;Total ram usage:        6 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 7
  6123 ;; This function calls:
  6124 ;;		___lwdiv
  6125 ;;		___wmul
  6126 ;; This function is called by:
  6127 ;;		_norm_stop
  6128 ;;		_turnLeft
  6129 ;;		_turnRight
  6130 ;;		_fullSpeedAhead
  6131 ;;		_wallSmash
  6132 ;;		_reverse
  6133 ;;		_stop
  6134 ;;		_slowSearch
  6135 ;;		_uturn
  6136 ;; This function uses a non-reentrant model
  6137 ;;
  6138                           
  6139                           	psect	text26
  6140   00295C                     __ptext26:
  6141                           	callstack 0
  6142   00295C                     _setMotorPWM:
  6143                           	callstack 22
  6144   00295C                     
  6145                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  6146   00295C  EE20 F002          	lfsr	2,2
  6147   002960  5016               	movf	setMotorPWM@m^0,w,c
  6148   002962  26D9               	addwf	fsr2l,f,c
  6149   002964  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6150   002966  22DA               	addwfc	fsr2h,f,c
  6151   002968  50DF               	movf	indf2,w,c
  6152   00296A  B4D8               	btfsc	status,2,c
  6153   00296C  EFBA  F014         	goto	u1331
  6154   002970  EFBC  F014         	goto	u1330
  6155   002974                     u1331:
  6156   002974  EFF0  F014         	goto	l2550
  6157   002978                     u1330:
  6158   002978                     
  6159                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6160   002978  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6161   00297C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6162   002980  50DF               	movf	indf2,w,c
  6163   002982  6E18               	movwf	??_setMotorPWM^0,c
  6164   002984  5018               	movf	??_setMotorPWM^0,w,c
  6165   002986  6E09               	movwf	___wmul@multiplier^0,c
  6166   002988  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6167   00298A  EE20 F003          	lfsr	2,3
  6168   00298E  5016               	movf	setMotorPWM@m^0,w,c
  6169   002990  26D9               	addwf	fsr2l,f,c
  6170   002992  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6171   002994  22DA               	addwfc	fsr2h,f,c
  6172   002996  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6173   00299A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6174   00299E  ECFC  F01A         	call	___wmul	;wreg free
  6175   0029A2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6176   0029A6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6177   0029AA  0E00               	movlw	0
  6178   0029AC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6179   0029AE  0E64               	movlw	100
  6180   0029B0  6E11               	movwf	___lwdiv@divisor^0,c
  6181   0029B2  ECEF  F017         	call	___lwdiv	;wreg free
  6182   0029B6  EE20 F003          	lfsr	2,3
  6183   0029BA  5016               	movf	setMotorPWM@m^0,w,c
  6184   0029BC  26D9               	addwf	fsr2l,f,c
  6185   0029BE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6186   0029C0  22DA               	addwfc	fsr2h,f,c
  6187   0029C2  50DF               	movf	indf2,w,c
  6188   0029C4  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6189   0029C6  500F               	movf	?___lwdiv^0,w,c
  6190   0029C8  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6191   0029CA  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6192   0029CC                     
  6193                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  6194   0029CC  EE20 F003          	lfsr	2,3
  6195   0029D0  5016               	movf	setMotorPWM@m^0,w,c
  6196   0029D2  26D9               	addwf	fsr2l,f,c
  6197   0029D4  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6198   0029D6  22DA               	addwfc	fsr2h,f,c
  6199   0029D8  50DF               	movf	indf2,w,c
  6200   0029DA  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6201                           
  6202                           ;dc_motor.c: 63:     }
  6203   0029DC  EF13  F015         	goto	l2554
  6204   0029E0                     l2550:
  6205                           
  6206                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6207   0029E0  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6208   0029E4  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6209   0029E8  50DF               	movf	indf2,w,c
  6210   0029EA  6E18               	movwf	??_setMotorPWM^0,c
  6211   0029EC  5018               	movf	??_setMotorPWM^0,w,c
  6212   0029EE  6E09               	movwf	___wmul@multiplier^0,c
  6213   0029F0  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6214   0029F2  EE20 F003          	lfsr	2,3
  6215   0029F6  5016               	movf	setMotorPWM@m^0,w,c
  6216   0029F8  26D9               	addwf	fsr2l,f,c
  6217   0029FA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6218   0029FC  22DA               	addwfc	fsr2h,f,c
  6219   0029FE  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6220   002A02  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6221   002A06  ECFC  F01A         	call	___wmul	;wreg free
  6222   002A0A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6223   002A0E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6224   002A12  0E00               	movlw	0
  6225   002A14  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6226   002A16  0E64               	movlw	100
  6227   002A18  6E11               	movwf	___lwdiv@divisor^0,c
  6228   002A1A  ECEF  F017         	call	___lwdiv	;wreg free
  6229   002A1E  500F               	movf	?___lwdiv^0,w,c
  6230   002A20  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6231   002A22                     
  6232                           ;dc_motor.c: 66:         negDuty=0;
  6233   002A22  0E00               	movlw	0
  6234   002A24  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6235   002A26                     l2554:
  6236                           
  6237                           ;dc_motor.c: 69:     if (m->direction) {
  6238   002A26  EE20 F001          	lfsr	2,1
  6239   002A2A  5016               	movf	setMotorPWM@m^0,w,c
  6240   002A2C  26D9               	addwf	fsr2l,f,c
  6241   002A2E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6242   002A30  22DA               	addwfc	fsr2h,f,c
  6243   002A32  50DF               	movf	indf2,w,c
  6244   002A34  B4D8               	btfsc	status,2,c
  6245   002A36  EF1F  F015         	goto	u1341
  6246   002A3A  EF21  F015         	goto	u1340
  6247   002A3E                     u1341:
  6248   002A3E  EF43  F015         	goto	l2558
  6249   002A42                     u1340:
  6250   002A42                     
  6251                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  6252   002A42  EE20 F005          	lfsr	2,5
  6253   002A46  5016               	movf	setMotorPWM@m^0,w,c
  6254   002A48  26D9               	addwf	fsr2l,f,c
  6255   002A4A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6256   002A4C  22DA               	addwfc	fsr2h,f,c
  6257   002A4E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6258   002A52  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6259   002A56  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6260   002A5A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6261   002A5E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6262                           
  6263                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  6264   002A62  EE20 F007          	lfsr	2,7
  6265   002A66  5016               	movf	setMotorPWM@m^0,w,c
  6266   002A68  26D9               	addwf	fsr2l,f,c
  6267   002A6A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6268   002A6C  22DA               	addwfc	fsr2h,f,c
  6269   002A6E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6270   002A72  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6271   002A76  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6272   002A7A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6273   002A7E  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6274                           
  6275                           ;dc_motor.c: 72:     } else {
  6276   002A82  EF63  F015         	goto	l640
  6277   002A86                     l2558:
  6278                           
  6279                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  6280   002A86  EE20 F005          	lfsr	2,5
  6281   002A8A  5016               	movf	setMotorPWM@m^0,w,c
  6282   002A8C  26D9               	addwf	fsr2l,f,c
  6283   002A8E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6284   002A90  22DA               	addwfc	fsr2h,f,c
  6285   002A92  CFDE F018          	movff	postinc2,??_setMotorPWM
  6286   002A96  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6287   002A9A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6288   002A9E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6289   002AA2  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6290                           
  6291                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  6292   002AA6  EE20 F007          	lfsr	2,7
  6293   002AAA  5016               	movf	setMotorPWM@m^0,w,c
  6294   002AAC  26D9               	addwf	fsr2l,f,c
  6295   002AAE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6296   002AB0  22DA               	addwfc	fsr2h,f,c
  6297   002AB2  CFDE F018          	movff	postinc2,??_setMotorPWM
  6298   002AB6  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6299   002ABA  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6300   002ABE  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6301   002AC2  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6302   002AC6                     l640:
  6303   002AC6  0012               	return		;funcret
  6304   002AC8                     __end_of_setMotorPWM:
  6305                           	callstack 0
  6306                           
  6307 ;; *************** function ___wmul *****************
  6308 ;; Defined at:
  6309 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  multiplier      2    8[COMRAM] unsigned int 
  6312 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  product         2   12[COMRAM] unsigned int 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  2    8[COMRAM] unsigned int 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0, prodl, prodh
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6328 ;;Total ram usage:        6 bytes
  6329 ;; Hardware stack levels used: 1
  6330 ;; Hardware stack levels required when called: 6
  6331 ;; This function calls:
  6332 ;;		Nothing
  6333 ;; This function is called by:
  6334 ;;		_setMotorPWM
  6335 ;; This function uses a non-reentrant model
  6336 ;;
  6337                           
  6338                           	psect	text27
  6339   0035F8                     __ptext27:
  6340                           	callstack 0
  6341   0035F8                     ___wmul:
  6342                           	callstack 22
  6343   0035F8  5009               	movf	___wmul@multiplier^0,w,c
  6344   0035FA  020B               	mulwf	___wmul@multiplicand^0,c
  6345   0035FC  CFF3 F00D          	movff	prodl,___wmul@product
  6346   003600  CFF4 F00E          	movff	prodh,___wmul@product+1
  6347   003604  5009               	movf	___wmul@multiplier^0,w,c
  6348   003606  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6349   003608  50F3               	movf	243,w,c
  6350   00360A  260E               	addwf	(___wmul@product+1)^0,f,c
  6351   00360C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6352   00360E  020B               	mulwf	___wmul@multiplicand^0,c
  6353   003610  50F3               	movf	243,w,c
  6354   003612  260E               	addwf	(___wmul@product+1)^0,f,c
  6355   003614  C00D  F009         	movff	___wmul@product,?___wmul
  6356   003618  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6357   00361C  0012               	return		;funcret
  6358   00361E                     __end_of___wmul:
  6359                           	callstack 0
  6360                           
  6361 ;; *************** function ___lwdiv *****************
  6362 ;; Defined at:
  6363 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;  dividend        2   14[COMRAM] unsigned int 
  6366 ;;  divisor         2   16[COMRAM] unsigned int 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  quotient        2   18[COMRAM] unsigned int 
  6369 ;;  counter         1   20[COMRAM] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  2   14[COMRAM] unsigned int 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6379 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6380 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6382 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6383 ;;Total ram usage:        7 bytes
  6384 ;; Hardware stack levels used: 1
  6385 ;; Hardware stack levels required when called: 6
  6386 ;; This function calls:
  6387 ;;		Nothing
  6388 ;; This function is called by:
  6389 ;;		_setMotorPWM
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text28
  6394   002FDE                     __ptext28:
  6395                           	callstack 0
  6396   002FDE                     ___lwdiv:
  6397                           	callstack 22
  6398   002FDE  0E00               	movlw	0
  6399   002FE0  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6400   002FE2  0E00               	movlw	0
  6401   002FE4  6E13               	movwf	___lwdiv@quotient^0,c
  6402   002FE6  5011               	movf	___lwdiv@divisor^0,w,c
  6403   002FE8  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6404   002FEA  B4D8               	btfsc	status,2,c
  6405   002FEC  EFFA  F017         	goto	u1261
  6406   002FF0  EFFC  F017         	goto	u1260
  6407   002FF4                     u1261:
  6408   002FF4  EF24  F018         	goto	l1193
  6409   002FF8                     u1260:
  6410   002FF8  0E01               	movlw	1
  6411   002FFA  6E15               	movwf	___lwdiv@counter^0,c
  6412   002FFC  EF04  F018         	goto	l2496
  6413   003000                     l2494:
  6414   003000  90D8               	bcf	status,0,c
  6415   003002  3611               	rlcf	___lwdiv@divisor^0,f,c
  6416   003004  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6417   003006  2A15               	incf	___lwdiv@counter^0,f,c
  6418   003008                     l2496:
  6419   003008  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6420   00300A  EF09  F018         	goto	u1271
  6421   00300E  EF0B  F018         	goto	u1270
  6422   003012                     u1271:
  6423   003012  EF00  F018         	goto	l2494
  6424   003016                     u1270:
  6425   003016                     l2498:
  6426   003016  90D8               	bcf	status,0,c
  6427   003018  3613               	rlcf	___lwdiv@quotient^0,f,c
  6428   00301A  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6429   00301C  5011               	movf	___lwdiv@divisor^0,w,c
  6430   00301E  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6431   003020  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6432   003022  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6433   003024  A0D8               	btfss	status,0,c
  6434   003026  EF17  F018         	goto	u1281
  6435   00302A  EF19  F018         	goto	u1280
  6436   00302E                     u1281:
  6437   00302E  EF1E  F018         	goto	l2506
  6438   003032                     u1280:
  6439   003032  5011               	movf	___lwdiv@divisor^0,w,c
  6440   003034  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6441   003036  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6442   003038  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6443   00303A  8013               	bsf	___lwdiv@quotient^0,0,c
  6444   00303C                     l2506:
  6445   00303C  90D8               	bcf	status,0,c
  6446   00303E  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6447   003040  3211               	rrcf	___lwdiv@divisor^0,f,c
  6448   003042  2E15               	decfsz	___lwdiv@counter^0,f,c
  6449   003044  EF0B  F018         	goto	l2498
  6450   003048                     l1193:
  6451   003048  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6452   00304C  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6453   003050  0012               	return		;funcret
  6454   003052                     __end_of___lwdiv:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function ___flge *****************
  6458 ;; Defined at:
  6459 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  ff1             4    8[COMRAM] unsigned int 
  6462 ;;  ff2             4   12[COMRAM] unsigned int 
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;		None               void
  6467 ;; Registers used:
  6468 ;;		wreg, status,2, status,0
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6474 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;Total ram usage:       12 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 6
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_motor_response
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text29
  6489   002AC8                     __ptext29:
  6490                           	callstack 0
  6491   002AC8                     ___flge:
  6492                           	callstack 23
  6493   002AC8  0E00               	movlw	0
  6494   002ACA  1409               	andwf	___flge@ff1^0,w,c
  6495   002ACC  6E11               	movwf	??___flge^0,c
  6496   002ACE  0E00               	movlw	0
  6497   002AD0  140A               	andwf	(___flge@ff1+1)^0,w,c
  6498   002AD2  6E12               	movwf	(??___flge+1)^0,c
  6499   002AD4  0E80               	movlw	128
  6500   002AD6  140B               	andwf	(___flge@ff1+2)^0,w,c
  6501   002AD8  6E13               	movwf	(??___flge+2)^0,c
  6502   002ADA  0E7F               	movlw	127
  6503   002ADC  140C               	andwf	(___flge@ff1+3)^0,w,c
  6504   002ADE  6E14               	movwf	(??___flge+3)^0,c
  6505   002AE0  5011               	movf	??___flge^0,w,c
  6506   002AE2  1012               	iorwf	(??___flge+1)^0,w,c
  6507   002AE4  1013               	iorwf	(??___flge+2)^0,w,c
  6508   002AE6  1014               	iorwf	(??___flge+3)^0,w,c
  6509   002AE8  A4D8               	btfss	status,2,c
  6510   002AEA  EF79  F015         	goto	u1721
  6511   002AEE  EF7B  F015         	goto	u1720
  6512   002AF2                     u1721:
  6513   002AF2  EF83  F015         	goto	l2910
  6514   002AF6                     u1720:
  6515   002AF6  0E00               	movlw	0
  6516   002AF8  6E09               	movwf	___flge@ff1^0,c
  6517   002AFA  0E00               	movlw	0
  6518   002AFC  6E0A               	movwf	(___flge@ff1+1)^0,c
  6519   002AFE  0E00               	movlw	0
  6520   002B00  6E0B               	movwf	(___flge@ff1+2)^0,c
  6521   002B02  0E00               	movlw	0
  6522   002B04  6E0C               	movwf	(___flge@ff1+3)^0,c
  6523   002B06                     l2910:
  6524   002B06  0E00               	movlw	0
  6525   002B08  140D               	andwf	___flge@ff2^0,w,c
  6526   002B0A  6E11               	movwf	??___flge^0,c
  6527   002B0C  0E00               	movlw	0
  6528   002B0E  140E               	andwf	(___flge@ff2+1)^0,w,c
  6529   002B10  6E12               	movwf	(??___flge+1)^0,c
  6530   002B12  0E80               	movlw	128
  6531   002B14  140F               	andwf	(___flge@ff2+2)^0,w,c
  6532   002B16  6E13               	movwf	(??___flge+2)^0,c
  6533   002B18  0E7F               	movlw	127
  6534   002B1A  1410               	andwf	(___flge@ff2+3)^0,w,c
  6535   002B1C  6E14               	movwf	(??___flge+3)^0,c
  6536   002B1E  5011               	movf	??___flge^0,w,c
  6537   002B20  1012               	iorwf	(??___flge+1)^0,w,c
  6538   002B22  1013               	iorwf	(??___flge+2)^0,w,c
  6539   002B24  1014               	iorwf	(??___flge+3)^0,w,c
  6540   002B26  A4D8               	btfss	status,2,c
  6541   002B28  EF98  F015         	goto	u1731
  6542   002B2C  EF9A  F015         	goto	u1730
  6543   002B30                     u1731:
  6544   002B30  EFA2  F015         	goto	l2914
  6545   002B34                     u1730:
  6546   002B34  0E00               	movlw	0
  6547   002B36  6E0D               	movwf	___flge@ff2^0,c
  6548   002B38  0E00               	movlw	0
  6549   002B3A  6E0E               	movwf	(___flge@ff2+1)^0,c
  6550   002B3C  0E00               	movlw	0
  6551   002B3E  6E0F               	movwf	(___flge@ff2+2)^0,c
  6552   002B40  0E00               	movlw	0
  6553   002B42  6E10               	movwf	(___flge@ff2+3)^0,c
  6554   002B44                     l2914:
  6555   002B44  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  6556   002B46  EFA7  F015         	goto	u1741
  6557   002B4A  EFA9  F015         	goto	u1740
  6558   002B4E                     u1741:
  6559   002B4E  EFB2  F015         	goto	l2918
  6560   002B52                     u1740:
  6561   002B52  6C09               	negf	___flge@ff1^0,c
  6562   002B54  1E0A               	comf	(___flge@ff1+1)^0,f,c
  6563   002B56  B0D8               	btfsc	status,0,c
  6564   002B58  2A0A               	incf	(___flge@ff1+1)^0,f,c
  6565   002B5A  1E0B               	comf	(___flge@ff1+2)^0,f,c
  6566   002B5C  B0D8               	btfsc	status,0,c
  6567   002B5E  2A0B               	incf	(___flge@ff1+2)^0,f,c
  6568   002B60  0E80               	movlw	128
  6569   002B62  560C               	subfwb	(___flge@ff1+3)^0,f,c
  6570   002B64                     l2918:
  6571   002B64  AE10               	btfss	(___flge@ff2+3)^0,7,c
  6572   002B66  EFB7  F015         	goto	u1751
  6573   002B6A  EFB9  F015         	goto	u1750
  6574   002B6E                     u1751:
  6575   002B6E  EFC2  F015         	goto	l967
  6576   002B72                     u1750:
  6577   002B72  6C0D               	negf	___flge@ff2^0,c
  6578   002B74  1E0E               	comf	(___flge@ff2+1)^0,f,c
  6579   002B76  B0D8               	btfsc	status,0,c
  6580   002B78  2A0E               	incf	(___flge@ff2+1)^0,f,c
  6581   002B7A  1E0F               	comf	(___flge@ff2+2)^0,f,c
  6582   002B7C  B0D8               	btfsc	status,0,c
  6583   002B7E  2A0F               	incf	(___flge@ff2+2)^0,f,c
  6584   002B80  0E80               	movlw	128
  6585   002B82  5610               	subfwb	(___flge@ff2+3)^0,f,c
  6586   002B84                     l967:
  6587   002B84  0E00               	movlw	0
  6588   002B86  1A09               	xorwf	___flge@ff1^0,f,c
  6589   002B88  0E00               	movlw	0
  6590   002B8A  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  6591   002B8C  0E00               	movlw	0
  6592   002B8E  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  6593   002B90  0E80               	movlw	128
  6594   002B92  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  6595   002B94  0E00               	movlw	0
  6596   002B96  1A0D               	xorwf	___flge@ff2^0,f,c
  6597   002B98  0E00               	movlw	0
  6598   002B9A  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  6599   002B9C  0E00               	movlw	0
  6600   002B9E  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  6601   002BA0  0E80               	movlw	128
  6602   002BA2  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  6603   002BA4  500D               	movf	___flge@ff2^0,w,c
  6604   002BA6  5C09               	subwf	___flge@ff1^0,w,c
  6605   002BA8  500E               	movf	(___flge@ff2+1)^0,w,c
  6606   002BAA  580A               	subwfb	(___flge@ff1+1)^0,w,c
  6607   002BAC  500F               	movf	(___flge@ff2+2)^0,w,c
  6608   002BAE  580B               	subwfb	(___flge@ff1+2)^0,w,c
  6609   002BB0  5010               	movf	(___flge@ff2+3)^0,w,c
  6610   002BB2  580C               	subwfb	(___flge@ff1+3)^0,w,c
  6611   002BB4  B0D8               	btfsc	status,0,c
  6612   002BB6  EFDF  F015         	goto	u1761
  6613   002BBA  EFE1  F015         	goto	u1760
  6614   002BBE                     u1761:
  6615   002BBE  EFE4  F015         	goto	l2924
  6616   002BC2                     u1760:
  6617   002BC2  90D8               	bcf	status,0,c
  6618   002BC4  EFE5  F015         	goto	l972
  6619   002BC8                     l2924:
  6620   002BC8  80D8               	bsf	status,0,c
  6621   002BCA                     l972:
  6622   002BCA  0012               	return		;funcret
  6623   002BCC                     __end_of___flge:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _motorTRIS *****************
  6627 ;; Defined at:
  6628 ;;		line 252 in file "dc_motor.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  6631 ;;		 -> main@mL(9), 
  6632 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  6633 ;;		 -> main@mR(9), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		None
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        4 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 6
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_main
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text30
  6660   0036F0                     __ptext30:
  6661                           	callstack 0
  6662   0036F0                     _motorTRIS:
  6663                           	callstack 24
  6664   0036F0                     
  6665                           ;dc_motor.c: 253:     TRISEbits.TRISE2 = 0;
  6666   0036F0  9485               	bcf	133,2,c	;volatile
  6667                           
  6668                           ;dc_motor.c: 254:     TRISEbits.TRISE4 = 0;
  6669   0036F2  9885               	bcf	133,4,c	;volatile
  6670                           
  6671                           ;dc_motor.c: 255:     TRISCbits.TRISC7 = 0;
  6672   0036F4  9E83               	bcf	131,7,c	;volatile
  6673                           
  6674                           ;dc_motor.c: 256:     TRISGbits.TRISG6 = 0;
  6675   0036F6  9C87               	bcf	135,6,c	;volatile
  6676   0036F8  0012               	return		;funcret
  6677   0036FA                     __end_of_motorTRIS:
  6678                           	callstack 0
  6679                           
  6680 ;; *************** function _motorRinit *****************
  6681 ;; Defined at:
  6682 ;;		line 88 in file "dc_motor.c"
  6683 ;; Parameters:    Size  Location     Type
  6684 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  6685 ;;		 -> main@mR(9), 
  6686 ;; Auto vars:     Size  Location     Type
  6687 ;;		None
  6688 ;; Return value:  Size  Location     Type
  6689 ;;                  1    wreg      void 
  6690 ;; Registers used:
  6691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6692 ;; Tracked objects:
  6693 ;;		On entry : 0/0
  6694 ;;		On exit  : 0/0
  6695 ;;		Unchanged: 0/0
  6696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6697 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6701 ;;Total ram usage:        2 bytes
  6702 ;; Hardware stack levels used: 1
  6703 ;; Hardware stack levels required when called: 6
  6704 ;; This function calls:
  6705 ;;		Nothing
  6706 ;; This function is called by:
  6707 ;;		_main
  6708 ;; This function uses a non-reentrant model
  6709 ;;
  6710                           
  6711                           	psect	text31
  6712   003136                     __ptext31:
  6713                           	callstack 0
  6714   003136                     _motorRinit:
  6715                           	callstack 24
  6716   003136                     
  6717                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  6718   003136  C009  FFD9         	movff	motorRinit@mR,fsr2l
  6719   00313A  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  6720   00313E  0E32               	movlw	50
  6721   003140  6EDF               	movwf	indf2,c
  6722   003142                     
  6723                           ;dc_motor.c: 91:     mR->direction = 1;
  6724   003142  EE20 F001          	lfsr	2,1
  6725   003146  5009               	movf	motorRinit@mR^0,w,c
  6726   003148  26D9               	addwf	fsr2l,f,c
  6727   00314A  500A               	movf	(motorRinit@mR+1)^0,w,c
  6728   00314C  22DA               	addwfc	fsr2h,f,c
  6729   00314E  0E01               	movlw	1
  6730   003150  6EDF               	movwf	indf2,c
  6731   003152                     
  6732                           ;dc_motor.c: 92:     mR->brakemode = 1;
  6733   003152  EE20 F002          	lfsr	2,2
  6734   003156  5009               	movf	motorRinit@mR^0,w,c
  6735   003158  26D9               	addwf	fsr2l,f,c
  6736   00315A  500A               	movf	(motorRinit@mR+1)^0,w,c
  6737   00315C  22DA               	addwfc	fsr2h,f,c
  6738   00315E  0E01               	movlw	1
  6739   003160  6EDF               	movwf	indf2,c
  6740   003162                     
  6741                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  6742   003162  EE20 F005          	lfsr	2,5
  6743   003166  5009               	movf	motorRinit@mR^0,w,c
  6744   003168  26D9               	addwf	fsr2l,f,c
  6745   00316A  500A               	movf	(motorRinit@mR+1)^0,w,c
  6746   00316C  22DA               	addwfc	fsr2h,f,c
  6747   00316E  0E25               	movlw	37
  6748   003170  6EDE               	movwf	postinc2,c
  6749   003172  0E0F               	movlw	15
  6750   003174  6EDD               	movwf	postdec2,c
  6751   003176                     
  6752                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  6753   003176  EE20 F007          	lfsr	2,7
  6754   00317A  5009               	movf	motorRinit@mR^0,w,c
  6755   00317C  26D9               	addwf	fsr2l,f,c
  6756   00317E  500A               	movf	(motorRinit@mR+1)^0,w,c
  6757   003180  22DA               	addwfc	fsr2h,f,c
  6758   003182  0E21               	movlw	33
  6759   003184  6EDE               	movwf	postinc2,c
  6760   003186  0E0F               	movlw	15
  6761   003188  6EDD               	movwf	postdec2,c
  6762   00318A                     
  6763                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  6764   00318A  EE20 F003          	lfsr	2,3
  6765   00318E  5009               	movf	motorRinit@mR^0,w,c
  6766   003190  26D9               	addwf	fsr2l,f,c
  6767   003192  500A               	movf	(motorRinit@mR+1)^0,w,c
  6768   003194  22DA               	addwfc	fsr2h,f,c
  6769   003196  0EC8               	movlw	200
  6770   003198  6EDE               	movwf	postinc2,c
  6771   00319A  0E00               	movlw	0
  6772   00319C  6EDD               	movwf	postdec2,c
  6773   00319E  0012               	return		;funcret
  6774   0031A0                     __end_of_motorRinit:
  6775                           	callstack 0
  6776                           
  6777 ;; *************** function _motorLinit *****************
  6778 ;; Defined at:
  6779 ;;		line 78 in file "dc_motor.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  6782 ;;		 -> main@mL(9), 
  6783 ;; Auto vars:     Size  Location     Type
  6784 ;;		None
  6785 ;; Return value:  Size  Location     Type
  6786 ;;                  1    wreg      void 
  6787 ;; Registers used:
  6788 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6789 ;; Tracked objects:
  6790 ;;		On entry : 0/0
  6791 ;;		On exit  : 0/0
  6792 ;;		Unchanged: 0/0
  6793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;Total ram usage:        2 bytes
  6799 ;; Hardware stack levels used: 1
  6800 ;; Hardware stack levels required when called: 6
  6801 ;; This function calls:
  6802 ;;		Nothing
  6803 ;; This function is called by:
  6804 ;;		_main
  6805 ;; This function uses a non-reentrant model
  6806 ;;
  6807                           
  6808                           	psect	text32
  6809   0031A0                     __ptext32:
  6810                           	callstack 0
  6811   0031A0                     _motorLinit:
  6812                           	callstack 24
  6813   0031A0                     
  6814                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  6815   0031A0  C009  FFD9         	movff	motorLinit@mL,fsr2l
  6816   0031A4  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  6817   0031A8  0E32               	movlw	50
  6818   0031AA  6EDF               	movwf	indf2,c
  6819   0031AC                     
  6820                           ;dc_motor.c: 81:     mL->direction = 1;
  6821   0031AC  EE20 F001          	lfsr	2,1
  6822   0031B0  5009               	movf	motorLinit@mL^0,w,c
  6823   0031B2  26D9               	addwf	fsr2l,f,c
  6824   0031B4  500A               	movf	(motorLinit@mL+1)^0,w,c
  6825   0031B6  22DA               	addwfc	fsr2h,f,c
  6826   0031B8  0E01               	movlw	1
  6827   0031BA  6EDF               	movwf	indf2,c
  6828   0031BC                     
  6829                           ;dc_motor.c: 82:     mL->brakemode = 1;
  6830   0031BC  EE20 F002          	lfsr	2,2
  6831   0031C0  5009               	movf	motorLinit@mL^0,w,c
  6832   0031C2  26D9               	addwf	fsr2l,f,c
  6833   0031C4  500A               	movf	(motorLinit@mL+1)^0,w,c
  6834   0031C6  22DA               	addwfc	fsr2h,f,c
  6835   0031C8  0E01               	movlw	1
  6836   0031CA  6EDF               	movwf	indf2,c
  6837   0031CC                     
  6838                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  6839   0031CC  EE20 F005          	lfsr	2,5
  6840   0031D0  5009               	movf	motorLinit@mL^0,w,c
  6841   0031D2  26D9               	addwf	fsr2l,f,c
  6842   0031D4  500A               	movf	(motorLinit@mL+1)^0,w,c
  6843   0031D6  22DA               	addwfc	fsr2h,f,c
  6844   0031D8  0EAA               	movlw	170
  6845   0031DA  6EDE               	movwf	postinc2,c
  6846   0031DC  0E0F               	movlw	15
  6847   0031DE  6EDD               	movwf	postdec2,c
  6848   0031E0                     
  6849                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  6850   0031E0  EE20 F007          	lfsr	2,7
  6851   0031E4  5009               	movf	motorLinit@mL^0,w,c
  6852   0031E6  26D9               	addwf	fsr2l,f,c
  6853   0031E8  500A               	movf	(motorLinit@mL+1)^0,w,c
  6854   0031EA  22DA               	addwfc	fsr2h,f,c
  6855   0031EC  0EA6               	movlw	166
  6856   0031EE  6EDE               	movwf	postinc2,c
  6857   0031F0  0E0F               	movlw	15
  6858   0031F2  6EDD               	movwf	postdec2,c
  6859   0031F4                     
  6860                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  6861   0031F4  EE20 F003          	lfsr	2,3
  6862   0031F8  5009               	movf	motorLinit@mL^0,w,c
  6863   0031FA  26D9               	addwf	fsr2l,f,c
  6864   0031FC  500A               	movf	(motorLinit@mL+1)^0,w,c
  6865   0031FE  22DA               	addwfc	fsr2h,f,c
  6866   003200  0EC8               	movlw	200
  6867   003202  6EDE               	movwf	postinc2,c
  6868   003204  0E00               	movlw	0
  6869   003206  6EDD               	movwf	postdec2,c
  6870   003208  0012               	return		;funcret
  6871   00320A                     __end_of_motorLinit:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function _initDCmotorsPWM *****************
  6875 ;; Defined at:
  6876 ;;		line 5 in file "dc_motor.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  6879 ;; Auto vars:     Size  Location     Type
  6880 ;;		None
  6881 ;; Return value:  Size  Location     Type
  6882 ;;                  1    wreg      void 
  6883 ;; Registers used:
  6884 ;;		wreg, status,2
  6885 ;; Tracked objects:
  6886 ;;		On entry : 0/0
  6887 ;;		On exit  : 0/0
  6888 ;;		Unchanged: 0/0
  6889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6893 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6894 ;;Total ram usage:        2 bytes
  6895 ;; Hardware stack levels used: 1
  6896 ;; Hardware stack levels required when called: 6
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_main
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text33
  6905   002F5E                     __ptext33:
  6906                           	callstack 0
  6907   002F5E                     _initDCmotorsPWM:
  6908                           	callstack 24
  6909   002F5E                     
  6910                           ;dc_motor.c: 9:     RE2PPS=0x05;
  6911   002F5E  0E05               	movlw	5
  6912   002F60  010E               	movlb	14	; () banked
  6913   002F62  6F74               	movwf	116,b	;volatile
  6914                           
  6915                           ;dc_motor.c: 10:     RE4PPS=0x06;
  6916   002F64  0E06               	movlw	6
  6917   002F66  6F76               	movwf	118,b	;volatile
  6918                           
  6919                           ;dc_motor.c: 11:     RC7PPS=0x07;
  6920   002F68  0E07               	movlw	7
  6921   002F6A  6F69               	movwf	105,b	;volatile
  6922                           
  6923                           ;dc_motor.c: 12:     RG6PPS=0x08;
  6924   002F6C  0E08               	movlw	8
  6925   002F6E  6F88               	movwf	136,b	;volatile
  6926                           
  6927                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  6928   002F70  50BD               	movf	189,w,c	;volatile
  6929   002F72  0B8F               	andlw	-113
  6930   002F74  0930               	iorlw	48
  6931   002F76  6EBD               	movwf	189,c	;volatile
  6932                           
  6933                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  6934   002F78  0EE0               	movlw	-32
  6935   002F7A  16BE               	andwf	190,f,c	;volatile
  6936                           
  6937                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  6938   002F7C  50BF               	movf	191,w,c	;volatile
  6939   002F7E  0BF0               	andlw	-16
  6940   002F80  0901               	iorlw	1
  6941   002F82  6EBF               	movwf	191,c	;volatile
  6942                           
  6943                           ;dc_motor.c: 21:     T2PR=200;
  6944   002F84  0EC8               	movlw	200
  6945   002F86  6EBC               	movwf	188,c	;volatile
  6946   002F88                     
  6947                           ; BSR set to: 14
  6948                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  6949   002F88  8EBD               	bsf	189,7,c	;volatile
  6950                           
  6951                           ;dc_motor.c: 26:     CCPR1H=0;
  6952   002F8A  0E00               	movlw	0
  6953   002F8C  6EAA               	movwf	170,c	;volatile
  6954                           
  6955                           ;dc_motor.c: 27:     CCPR2H=0;
  6956   002F8E  0E00               	movlw	0
  6957   002F90  6EA6               	movwf	166,c	;volatile
  6958                           
  6959                           ;dc_motor.c: 28:     CCPR3H=0;
  6960   002F92  0E00               	movlw	0
  6961   002F94  010F               	movlb	15	; () banked
  6962   002F96  6F25               	movwf	37,b	;volatile
  6963                           
  6964                           ;dc_motor.c: 29:     CCPR4H=0;
  6965   002F98  0E00               	movlw	0
  6966   002F9A  6F21               	movwf	33,b	;volatile
  6967                           
  6968                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  6969   002F9C  0EFC               	movlw	-4
  6970   002F9E  16AD               	andwf	173,f,c	;volatile
  6971                           
  6972                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  6973   002FA0  0EF3               	movlw	-13
  6974   002FA2  16AD               	andwf	173,f,c	;volatile
  6975                           
  6976                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  6977   002FA4  0ECF               	movlw	-49
  6978   002FA6  16AD               	andwf	173,f,c	;volatile
  6979                           
  6980                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  6981   002FA8  0E3F               	movlw	-193
  6982   002FAA  16AD               	andwf	173,f,c	;volatile
  6983   002FAC                     
  6984                           ; BSR set to: 15
  6985                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  6986   002FAC  88AB               	bsf	171,4,c	;volatile
  6987                           
  6988                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  6989   002FAE  50AB               	movf	171,w,c	;volatile
  6990   002FB0  0BF0               	andlw	-16
  6991   002FB2  090C               	iorlw	12
  6992   002FB4  6EAB               	movwf	171,c	;volatile
  6993   002FB6                     
  6994                           ; BSR set to: 15
  6995                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  6996   002FB6  8EAB               	bsf	171,7,c	;volatile
  6997   002FB8                     
  6998                           ; BSR set to: 15
  6999                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  7000   002FB8  88A7               	bsf	167,4,c	;volatile
  7001                           
  7002                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  7003   002FBA  50A7               	movf	167,w,c	;volatile
  7004   002FBC  0BF0               	andlw	-16
  7005   002FBE  090C               	iorlw	12
  7006   002FC0  6EA7               	movwf	167,c	;volatile
  7007   002FC2                     
  7008                           ; BSR set to: 15
  7009                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  7010   002FC2  8EA7               	bsf	167,7,c	;volatile
  7011   002FC4                     
  7012                           ; BSR set to: 15
  7013                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  7014   002FC4  8926               	bsf	38,4,b	;volatile
  7015                           
  7016                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  7017   002FC6  5126               	movf	38,w,b	;volatile
  7018   002FC8  0BF0               	andlw	-16
  7019   002FCA  090C               	iorlw	12
  7020   002FCC  6F26               	movwf	38,b	;volatile
  7021   002FCE                     
  7022                           ; BSR set to: 15
  7023                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  7024   002FCE  8F26               	bsf	38,7,b	;volatile
  7025   002FD0                     
  7026                           ; BSR set to: 15
  7027                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  7028   002FD0  8922               	bsf	34,4,b	;volatile
  7029                           
  7030                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  7031   002FD2  5122               	movf	34,w,b	;volatile
  7032   002FD4  0BF0               	andlw	-16
  7033   002FD6  090C               	iorlw	12
  7034   002FD8  6F22               	movwf	34,b	;volatile
  7035   002FDA                     
  7036                           ; BSR set to: 15
  7037                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  7038   002FDA  8F22               	bsf	34,7,b	;volatile
  7039   002FDC                     
  7040                           ; BSR set to: 15
  7041   002FDC  0012               	return		;funcret
  7042   002FDE                     __end_of_initDCmotorsPWM:
  7043                           	callstack 0
  7044                           
  7045 ;; *************** function _color_click_init *****************
  7046 ;; Defined at:
  7047 ;;		line 9 in file "color.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;		None
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;		None
  7052 ;; Return value:  Size  Location     Type
  7053 ;;                  1    wreg      void 
  7054 ;; Registers used:
  7055 ;;		wreg, status,2, status,0, cstack
  7056 ;; Tracked objects:
  7057 ;;		On entry : 0/0
  7058 ;;		On exit  : 0/0
  7059 ;;		Unchanged: 0/0
  7060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7065 ;;Total ram usage:        1 bytes
  7066 ;; Hardware stack levels used: 1
  7067 ;; Hardware stack levels required when called: 9
  7068 ;; This function calls:
  7069 ;;		_I2C_2_Master_Init
  7070 ;;		_color_writetoaddr
  7071 ;; This function is called by:
  7072 ;;		_main
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text34
  7077   003492                     __ptext34:
  7078                           	callstack 0
  7079   003492                     _color_click_init:
  7080                           	callstack 21
  7081   003492                     
  7082                           ;color.c: 11:     I2C_2_Master_Init();
  7083   003492  EC95  F01A         	call	_I2C_2_Master_Init	;wreg free
  7084   003496                     
  7085                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  7086   003496  0E01               	movlw	1
  7087   003498  6E0B               	movwf	color_writetoaddr@value^0,c
  7088   00349A  0E00               	movlw	0
  7089   00349C  EC0F  F01B         	call	_color_writetoaddr
  7090   0034A0                     
  7091                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7092   0034A0  0E3F               	movlw	63
  7093   0034A2  6E0D               	movwf	??_color_click_init^0,c
  7094   0034A4  0E55               	movlw	85
  7095   0034A6                     u3307:
  7096   0034A6  2EE8               	decfsz	wreg,f,c
  7097   0034A8  D7FE               	bra	u3307
  7098   0034AA  2E0D               	decfsz	??_color_click_init^0,f,c
  7099   0034AC  D7FC               	bra	u3307
  7100   0034AE  F000               	nop	
  7101   0034B0                     
  7102                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  7103   0034B0  0E03               	movlw	3
  7104   0034B2  6E0B               	movwf	color_writetoaddr@value^0,c
  7105   0034B4  0E00               	movlw	0
  7106   0034B6  EC0F  F01B         	call	_color_writetoaddr
  7107   0034BA                     
  7108                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  7109   0034BA  0ED5               	movlw	213
  7110   0034BC  6E0B               	movwf	color_writetoaddr@value^0,c
  7111   0034BE  0E01               	movlw	1
  7112   0034C0  EC0F  F01B         	call	_color_writetoaddr
  7113   0034C4  0012               	return		;funcret
  7114   0034C6                     __end_of_color_click_init:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _I2C_2_Master_Init *****************
  7118 ;; Defined at:
  7119 ;;		line 4 in file "i2c.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;Total ram usage:        0 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; Hardware stack levels required when called: 6
  7140 ;; This function calls:
  7141 ;;		Nothing
  7142 ;; This function is called by:
  7143 ;;		_color_click_init
  7144 ;; This function uses a non-reentrant model
  7145 ;;
  7146                           
  7147                           	psect	text35
  7148   00352A                     __ptext35:
  7149                           	callstack 0
  7150   00352A                     _I2C_2_Master_Init:
  7151                           	callstack 23
  7152   00352A                     
  7153                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7154   00352A  010E               	movlb	14	; () banked
  7155   00352C  51D9               	movf	217,w,b	;volatile
  7156   00352E  0BF0               	andlw	-16
  7157   003530  0908               	iorlw	8
  7158   003532  6FD9               	movwf	217,b	;volatile
  7159   003534                     
  7160                           ; BSR set to: 14
  7161                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7162   003534  8BD9               	bsf	217,5,b	;volatile
  7163                           
  7164                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7165   003536  0E9F               	movlw	159
  7166   003538  6FD6               	movwf	214,b	;volatile
  7167   00353A                     
  7168                           ; BSR set to: 14
  7169                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7170   00353A  8A84               	bsf	132,5,c	;volatile
  7171   00353C                     
  7172                           ; BSR set to: 14
  7173                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7174   00353C  8C84               	bsf	132,6,c	;volatile
  7175   00353E                     
  7176                           ; BSR set to: 14
  7177                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7178   00353E  9BA7               	bcf	167,5,b	;volatile
  7179   003540                     
  7180                           ; BSR set to: 14
  7181                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7182   003540  9DA7               	bcf	167,6,b	;volatile
  7183                           
  7184                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7185   003542  0E1D               	movlw	29
  7186   003544  6F1D               	movwf	29,b	;volatile
  7187                           
  7188                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7189   003546  0E1E               	movlw	30
  7190   003548  6F1C               	movwf	28,b	;volatile
  7191                           
  7192                           ;i2c.c: 18:   RD5PPS=0x1C;
  7193   00354A  0E1C               	movlw	28
  7194   00354C  6F6F               	movwf	111,b	;volatile
  7195                           
  7196                           ;i2c.c: 19:   RD6PPS=0x1B;
  7197   00354E  0E1B               	movlw	27
  7198   003550  6F70               	movwf	112,b	;volatile
  7199   003552                     
  7200                           ; BSR set to: 14
  7201   003552  0012               	return		;funcret
  7202   003554                     __end_of_I2C_2_Master_Init:
  7203                           	callstack 0
  7204                           
  7205 ;; *************** function _Interrupts_init *****************
  7206 ;; Defined at:
  7207 ;;		line 10 in file "interrupts.c"
  7208 ;; Parameters:    Size  Location     Type
  7209 ;;		None
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;		None
  7212 ;; Return value:  Size  Location     Type
  7213 ;;                  1    wreg      void 
  7214 ;; Registers used:
  7215 ;;		None
  7216 ;; Tracked objects:
  7217 ;;		On entry : 0/0
  7218 ;;		On exit  : 0/0
  7219 ;;		Unchanged: 0/0
  7220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7225 ;;Total ram usage:        0 bytes
  7226 ;; Hardware stack levels used: 1
  7227 ;; Hardware stack levels required when called: 6
  7228 ;; This function calls:
  7229 ;;		Nothing
  7230 ;; This function is called by:
  7231 ;;		_main
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text36
  7236   003692                     __ptext36:
  7237                           	callstack 0
  7238   003692                     _Interrupts_init:
  7239                           	callstack 24
  7240   003692                     
  7241                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7242   003692  8082               	bsf	130,0,c	;volatile
  7243                           
  7244                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  7245   003694  010E               	movlb	14	; () banked
  7246   003696  919A               	bcf	154,0,b	;volatile
  7247                           
  7248                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  7249   003698  9133               	bcf	51,0,b	;volatile
  7250                           
  7251                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  7252   00369A  8129               	bsf	41,0,b	;volatile
  7253                           
  7254                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  7255   00369C  811F               	bsf	31,0,b	;volatile
  7256                           
  7257                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  7258   00369E  90F2               	bcf	242,0,c	;volatile
  7259                           
  7260                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  7261   0036A0  8AF2               	bsf	242,5,c	;volatile
  7262                           
  7263                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  7264   0036A2  8CF2               	bsf	242,6,c	;volatile
  7265                           
  7266                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  7267   0036A4  8EF2               	bsf	242,7,c	;volatile
  7268   0036A6                     
  7269                           ; BSR set to: 14
  7270   0036A6  0012               	return		;funcret
  7271   0036A8                     __end_of_Interrupts_init:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _Color_Interrupts_threshold *****************
  7275 ;; Defined at:
  7276 ;;		line 38 in file "interrupts.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  upperThresho    2   12[COMRAM] unsigned int 
  7279 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1    wreg      void 
  7284 ;; Registers used:
  7285 ;;		wreg, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7294 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7295 ;;Total ram usage:        4 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 9
  7298 ;; This function calls:
  7299 ;;		_color_writetoaddr
  7300 ;; This function is called by:
  7301 ;;		_main
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text37
  7306   003554                     __ptext37:
  7307                           	callstack 0
  7308   003554                     _Color_Interrupts_threshold:
  7309                           	callstack 21
  7310   003554                     
  7311                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7312   003554  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  7313   003558  0E04               	movlw	4
  7314   00355A  EC0F  F01B         	call	_color_writetoaddr
  7315                           
  7316                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7317   00355E  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7318   003560  6E0B               	movwf	color_writetoaddr@value^0,c
  7319   003562  0E05               	movlw	5
  7320   003564  EC0F  F01B         	call	_color_writetoaddr
  7321                           
  7322                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7323   003568  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  7324   00356C  0E06               	movlw	6
  7325   00356E  EC0F  F01B         	call	_color_writetoaddr
  7326                           
  7327                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7328   003572  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7329   003574  6E0B               	movwf	color_writetoaddr@value^0,c
  7330   003576  0E07               	movlw	7
  7331   003578  EC0F  F01B         	call	_color_writetoaddr
  7332   00357C  0012               	return		;funcret
  7333   00357E                     __end_of_Color_Interrupts_threshold:
  7334                           	callstack 0
  7335                           
  7336 ;; *************** function _Color_Interrupts_init *****************
  7337 ;; Defined at:
  7338 ;;		line 29 in file "interrupts.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;		None
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;		None
  7343 ;; Return value:  Size  Location     Type
  7344 ;;                  1    wreg      void 
  7345 ;; Registers used:
  7346 ;;		wreg, status,2, status,0, cstack
  7347 ;; Tracked objects:
  7348 ;;		On entry : 0/0
  7349 ;;		On exit  : 0/0
  7350 ;;		Unchanged: 0/0
  7351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;Total ram usage:        1 bytes
  7357 ;; Hardware stack levels used: 1
  7358 ;; Hardware stack levels required when called: 9
  7359 ;; This function calls:
  7360 ;;		_color_writetoaddr
  7361 ;; This function is called by:
  7362 ;;		_main
  7363 ;; This function uses a non-reentrant model
  7364 ;;
  7365                           
  7366                           	psect	text38
  7367   00365E                     __ptext38:
  7368                           	callstack 0
  7369   00365E                     _Color_Interrupts_init:
  7370                           	callstack 21
  7371   00365E                     
  7372                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7373   00365E  0E13               	movlw	19
  7374   003660  6E0B               	movwf	color_writetoaddr@value^0,c
  7375   003662  0E00               	movlw	0
  7376   003664  EC0F  F01B         	call	_color_writetoaddr
  7377   003668                     
  7378                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7379   003668  0ED0               	movlw	208
  7380   00366A  6E0D               	movwf	??_Color_Interrupts_init^0,c
  7381   00366C  0ECA               	movlw	202
  7382   00366E                     u3317:
  7383   00366E  2EE8               	decfsz	wreg,f,c
  7384   003670  D7FE               	bra	u3317
  7385   003672  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  7386   003674  D7FC               	bra	u3317
  7387   003676  0012               	return		;funcret
  7388   003678                     __end_of_Color_Interrupts_init:
  7389                           	callstack 0
  7390                           
  7391 ;; *************** function _color_writetoaddr *****************
  7392 ;; Defined at:
  7393 ;;		line 24 in file "color.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  address         1    wreg     unsigned char 
  7396 ;;  value           1   10[COMRAM] unsigned char 
  7397 ;; Auto vars:     Size  Location     Type
  7398 ;;  address         1   11[COMRAM] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  1    wreg      void 
  7401 ;; Registers used:
  7402 ;;		wreg, status,2, status,0, cstack
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/0
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7408 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7409 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7411 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7412 ;;Total ram usage:        2 bytes
  7413 ;; Hardware stack levels used: 1
  7414 ;; Hardware stack levels required when called: 8
  7415 ;; This function calls:
  7416 ;;		_I2C_2_Master_Start
  7417 ;;		_I2C_2_Master_Stop
  7418 ;;		_I2C_2_Master_Write
  7419 ;; This function is called by:
  7420 ;;		_color_click_init
  7421 ;;		_Color_Interrupts_init
  7422 ;;		_Color_Interrupts_threshold
  7423 ;;		_persistence_register
  7424 ;; This function uses a non-reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text39
  7428   00361E                     __ptext39:
  7429                           	callstack 0
  7430   00361E                     _color_writetoaddr:
  7431                           	callstack 21
  7432                           
  7433                           ;incstack = 0
  7434                           ;color_writetoaddr@address stored from wreg
  7435   00361E  6E0C               	movwf	color_writetoaddr@address^0,c
  7436   003620                     
  7437                           ;color.c: 25:     I2C_2_Master_Start();
  7438   003620  EC82  F01B         	call	_I2C_2_Master_Start	;wreg free
  7439                           
  7440                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7441   003624  0E52               	movlw	82
  7442   003626  EC61  F01B         	call	_I2C_2_Master_Write
  7443                           
  7444                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7445   00362A  500C               	movf	color_writetoaddr@address^0,w,c
  7446   00362C  0980               	iorlw	128
  7447   00362E  EC61  F01B         	call	_I2C_2_Master_Write
  7448                           
  7449                           ;color.c: 28:     I2C_2_Master_Write(value);
  7450   003632  500B               	movf	color_writetoaddr@value^0,w,c
  7451   003634  EC61  F01B         	call	_I2C_2_Master_Write
  7452                           
  7453                           ;color.c: 29:     I2C_2_Master_Stop();
  7454   003638  EC7D  F01B         	call	_I2C_2_Master_Stop	;wreg free
  7455   00363C  0012               	return		;funcret
  7456   00363E                     __end_of_color_writetoaddr:
  7457                           	callstack 0
  7458                           
  7459 ;; *************** function _I2C_2_Master_Write *****************
  7460 ;; Defined at:
  7461 ;;		line 45 in file "i2c.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  data_byte       1    wreg     unsigned char 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  data_byte       1    9[COMRAM] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      void 
  7468 ;; Registers used:
  7469 ;;		wreg, status,2, status,0, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7479 ;;Total ram usage:        1 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 7
  7482 ;; This function calls:
  7483 ;;		_I2C_2_Master_Idle
  7484 ;; This function is called by:
  7485 ;;		_color_writetoaddr
  7486 ;;		_color_read_Red
  7487 ;;		_color_read_Green
  7488 ;;		_color_read_Blue
  7489 ;;		_color_read_Clear
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text40
  7494   0036C2                     __ptext40:
  7495                           	callstack 0
  7496   0036C2                     _I2C_2_Master_Write:
  7497                           	callstack 20
  7498                           
  7499                           ;incstack = 0
  7500                           ;I2C_2_Master_Write@data_byte stored from wreg
  7501   0036C2  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7502   0036C4                     
  7503                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7504   0036C4  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7505   0036C8                     
  7506                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7507   0036C8  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7508   0036CC  0012               	return		;funcret
  7509   0036CE                     __end_of_I2C_2_Master_Write:
  7510                           	callstack 0
  7511                           
  7512 ;; *************** function _I2C_2_Master_Stop *****************
  7513 ;; Defined at:
  7514 ;;		line 39 in file "i2c.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		wreg, status,2, status,0, cstack
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used: 1
  7534 ;; Hardware stack levels required when called: 7
  7535 ;; This function calls:
  7536 ;;		_I2C_2_Master_Idle
  7537 ;; This function is called by:
  7538 ;;		_color_writetoaddr
  7539 ;;		_color_read_Red
  7540 ;;		_color_read_Green
  7541 ;;		_color_read_Blue
  7542 ;;		_color_read_Clear
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text41
  7547   0036FA                     __ptext41:
  7548                           	callstack 0
  7549   0036FA                     _I2C_2_Master_Stop:
  7550                           	callstack 20
  7551   0036FA                     
  7552                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7553   0036FA  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7554   0036FE                     
  7555                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7556   0036FE  010E               	movlb	14	; () banked
  7557   003700  85DA               	bsf	218,2,b	;volatile
  7558   003702                     
  7559                           ; BSR set to: 14
  7560   003702  0012               	return		;funcret
  7561   003704                     __end_of_I2C_2_Master_Stop:
  7562                           	callstack 0
  7563                           
  7564 ;; *************** function _I2C_2_Master_Start *****************
  7565 ;; Defined at:
  7566 ;;		line 27 in file "i2c.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;		None
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;		None
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, status,2, status,0, cstack
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;Total ram usage:        0 bytes
  7585 ;; Hardware stack levels used: 1
  7586 ;; Hardware stack levels required when called: 7
  7587 ;; This function calls:
  7588 ;;		_I2C_2_Master_Idle
  7589 ;; This function is called by:
  7590 ;;		_color_writetoaddr
  7591 ;;		_color_read_Red
  7592 ;;		_color_read_Green
  7593 ;;		_color_read_Blue
  7594 ;;		_color_read_Clear
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           	psect	text42
  7599   003704                     __ptext42:
  7600                           	callstack 0
  7601   003704                     _I2C_2_Master_Start:
  7602                           	callstack 20
  7603   003704                     
  7604                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7605   003704  ECD4  F01A         	call	_I2C_2_Master_Idle	;wreg free
  7606   003708                     
  7607                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7608   003708  010E               	movlb	14	; () banked
  7609   00370A  81DA               	bsf	218,0,b	;volatile
  7610   00370C                     
  7611                           ; BSR set to: 14
  7612   00370C  0012               	return		;funcret
  7613   00370E                     __end_of_I2C_2_Master_Start:
  7614                           	callstack 0
  7615                           
  7616 ;; *************** function _I2C_2_Master_Idle *****************
  7617 ;; Defined at:
  7618 ;;		line 22 in file "i2c.c"
  7619 ;; Parameters:    Size  Location     Type
  7620 ;;		None
  7621 ;; Auto vars:     Size  Location     Type
  7622 ;;		None
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  1    wreg      void 
  7625 ;; Registers used:
  7626 ;;		wreg, status,2, status,0
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7634 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7635 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7636 ;;Total ram usage:        1 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 6
  7639 ;; This function calls:
  7640 ;;		Nothing
  7641 ;; This function is called by:
  7642 ;;		_I2C_2_Master_Start
  7643 ;;		_I2C_2_Master_RepStart
  7644 ;;		_I2C_2_Master_Stop
  7645 ;;		_I2C_2_Master_Write
  7646 ;;		_I2C_2_Master_Read
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text43
  7651   0035A8                     __ptext43:
  7652                           	callstack 0
  7653   0035A8                     _I2C_2_Master_Idle:
  7654                           	callstack 20
  7655   0035A8                     l215:
  7656   0035A8  010E               	movlb	14	; () banked
  7657   0035AA  B5D8               	btfsc	216,2,b	;volatile
  7658   0035AC  EFDA  F01A         	goto	u2411
  7659   0035B0  EFDC  F01A         	goto	u2410
  7660   0035B4                     u2411:
  7661   0035B4  EFD4  F01A         	goto	l215
  7662   0035B8                     u2410:
  7663   0035B8                     
  7664                           ; BSR set to: 14
  7665   0035B8  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7666   0035BC  0E1F               	movlw	31
  7667   0035BE  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7668   0035C0  A4D8               	btfss	status,2,c
  7669   0035C2  EFE5  F01A         	goto	u2421
  7670   0035C6  EFE7  F01A         	goto	u2420
  7671   0035CA                     u2421:
  7672   0035CA  EFD4  F01A         	goto	l215
  7673   0035CE                     u2420:
  7674   0035CE                     
  7675                           ; BSR set to: 14
  7676   0035CE  0012               	return		;funcret
  7677   0035D0                     __end_of_I2C_2_Master_Idle:
  7678                           	callstack 0
  7679                           
  7680 ;; *************** function _HighISR *****************
  7681 ;; Defined at:
  7682 ;;		line 71 in file "interrupts.c"
  7683 ;; Parameters:    Size  Location     Type
  7684 ;;		None
  7685 ;; Auto vars:     Size  Location     Type
  7686 ;;		None
  7687 ;; Return value:  Size  Location     Type
  7688 ;;                  1    wreg      void 
  7689 ;; Registers used:
  7690 ;;		wreg, status,2, status,0, cstack
  7691 ;; Tracked objects:
  7692 ;;		On entry : 0/0
  7693 ;;		On exit  : 0/0
  7694 ;;		Unchanged: 0/0
  7695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7700 ;;Total ram usage:        0 bytes
  7701 ;; Hardware stack levels used: 1
  7702 ;; Hardware stack levels required when called: 5
  7703 ;; This function calls:
  7704 ;;		_Color_Interrupts_clear
  7705 ;; This function is called by:
  7706 ;;		Interrupt level 2
  7707 ;; This function uses a non-reentrant model
  7708 ;;
  7709                           
  7710                           	psect	intcode
  7711   000008                     __pintcode:
  7712                           	callstack 0
  7713   000008                     _HighISR:
  7714                           	callstack 20
  7715                           
  7716                           ; BSR set to: 14
  7717                           ;incstack = 0
  7718   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7719   00000A                     
  7720                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  7721   00000A  010E               	movlb	14	; () banked
  7722   00000C  A133               	btfss	51,0,b	;volatile
  7723   00000E  EF0B  F000         	goto	i2u238_41
  7724   000012  EF0D  F000         	goto	i2u238_40
  7725   000016                     i2u238_41:
  7726   000016  EF18  F000         	goto	i2l528
  7727   00001A                     i2u238_40:
  7728   00001A                     
  7729                           ; BSR set to: 14
  7730                           ;interrupts.c: 77:         interrupt_flag = 1;
  7731   00001A  0E00               	movlw	0
  7732   00001C  0100               	movlb	0	; () banked
  7733   00001E  6FDB               	movwf	(_interrupt_flag+1)& (0+255),b
  7734   000020  0E01               	movlw	1
  7735   000022  6FDA               	movwf	_interrupt_flag& (0+255),b
  7736   000024                     
  7737                           ; BSR set to: 0
  7738                           ;interrupts.c: 78:         interrupt_ctr++;
  7739   000024  4BD8               	infsnz	_interrupt_ctr& (0+255),f,b
  7740   000026  2BD9               	incf	(_interrupt_ctr+1)& (0+255),f,b
  7741   000028                     
  7742                           ; BSR set to: 0
  7743                           ;interrupts.c: 79:         Color_Interrupts_clear();
  7744   000028  EC7C  F01A         	call	_Color_Interrupts_clear	;wreg free
  7745   00002C                     
  7746                           ;interrupts.c: 80:         PIR0bits.INT0IF = 0;
  7747   00002C  010E               	movlb	14	; () banked
  7748   00002E  9133               	bcf	51,0,b	;volatile
  7749   000030                     i2l528:
  7750                           
  7751                           ; BSR set to: 14
  7752   000030  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7753   000032  0011               	retfie		f
  7754   000034                     __end_of_HighISR:
  7755                           	callstack 0
  7756                           
  7757 ;; *************** function _Color_Interrupts_clear *****************
  7758 ;; Defined at:
  7759 ;;		line 51 in file "interrupts.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;		None
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;		None
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, status,2, status,0, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;Total ram usage:        0 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; Hardware stack levels required when called: 4
  7780 ;; This function calls:
  7781 ;;		i2_Color_Interrupts_init
  7782 ;;		i2_Color_Interrupts_threshold
  7783 ;;		i2_I2C_2_Master_Start
  7784 ;;		i2_I2C_2_Master_Stop
  7785 ;;		i2_I2C_2_Master_Write
  7786 ;;		i2_persistence_register
  7787 ;; This function is called by:
  7788 ;;		_HighISR
  7789 ;; This function uses a non-reentrant model
  7790 ;;
  7791                           
  7792                           	psect	text45
  7793   0034F8                     __ptext45:
  7794                           	callstack 0
  7795   0034F8                     _Color_Interrupts_clear:
  7796                           	callstack 20
  7797   0034F8                     
  7798                           ;interrupts.c: 55:     I2C_2_Master_Start();
  7799   0034F8  EC8C  F01B         	call	i2_I2C_2_Master_Start	;wreg free
  7800                           
  7801                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  7802   0034FC  0E52               	movlw	82
  7803   0034FE  EC6D  F01B         	call	i2_I2C_2_Master_Write
  7804                           
  7805                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  7806   003502  0EE6               	movlw	230
  7807   003504  EC6D  F01B         	call	i2_I2C_2_Master_Write
  7808                           
  7809                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  7810   003508  EC87  F01B         	call	i2_I2C_2_Master_Stop	;wreg free
  7811                           
  7812                           ;interrupts.c: 61:     Color_Interrupts_init();
  7813   00350C  EC3C  F01B         	call	i2_Color_Interrupts_init	;wreg free
  7814                           
  7815                           ;interrupts.c: 62:     persistence_register();
  7816   003510  EC67  F01B         	call	i2_persistence_register	;wreg free
  7817                           
  7818                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  7819   003514  C0EC  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  7820   003518  C0ED  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  7821   00351C  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  7822   003520  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  7823   003524  ECBF  F01A         	call	i2_Color_Interrupts_threshold	;wreg free
  7824   003528  0012               	return		;funcret
  7825   00352A                     __end_of_Color_Interrupts_clear:
  7826                           	callstack 0
  7827                           
  7828 ;; *************** function i2_persistence_register *****************
  7829 ;; Defined at:
  7830 ;;		line 46 in file "interrupts.c"
  7831 ;; Parameters:    Size  Location     Type
  7832 ;;		None
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, status,2, status,0, cstack
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7848 ;;Total ram usage:        0 bytes
  7849 ;; Hardware stack levels used: 1
  7850 ;; Hardware stack levels required when called: 3
  7851 ;; This function calls:
  7852 ;;		i2_color_writetoaddr
  7853 ;; This function is called by:
  7854 ;;		_Color_Interrupts_clear
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text46
  7859   0036CE                     __ptext46:
  7860                           	callstack 0
  7861   0036CE                     i2_persistence_register:
  7862                           	callstack 20
  7863   0036CE                     
  7864                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  7865   0036CE  0E02               	movlw	2
  7866   0036D0  6E03               	movwf	i2color_writetoaddr@value^0,c
  7867   0036D2  0E0C               	movlw	12
  7868   0036D4  EC1F  F01B         	call	i2_color_writetoaddr
  7869   0036D8  0012               	return		;funcret
  7870   0036DA                     __end_ofi2_persistence_register:
  7871                           	callstack 0
  7872                           
  7873 ;; *************** function i2_Color_Interrupts_threshold *****************
  7874 ;; Defined at:
  7875 ;;		line 38 in file "interrupts.c"
  7876 ;; Parameters:    Size  Location     Type
  7877 ;;  upperThresho    2    4[COMRAM] unsigned int 
  7878 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1    wreg      void 
  7883 ;; Registers used:
  7884 ;;		wreg, status,2, status,0, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : 0/0
  7887 ;;		On exit  : 0/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7890 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7894 ;;Total ram usage:        4 bytes
  7895 ;; Hardware stack levels used: 1
  7896 ;; Hardware stack levels required when called: 3
  7897 ;; This function calls:
  7898 ;;		i2_color_writetoaddr
  7899 ;; This function is called by:
  7900 ;;		_Color_Interrupts_clear
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text47
  7905   00357E                     __ptext47:
  7906                           	callstack 0
  7907   00357E                     i2_Color_Interrupts_threshold:
  7908                           	callstack 20
  7909   00357E                     
  7910                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7911   00357E  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  7912   003582  0E04               	movlw	4
  7913   003584  EC1F  F01B         	call	i2_color_writetoaddr
  7914                           
  7915                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7916   003588  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7917   00358A  6E03               	movwf	i2color_writetoaddr@value^0,c
  7918   00358C  0E05               	movlw	5
  7919   00358E  EC1F  F01B         	call	i2_color_writetoaddr
  7920                           
  7921                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7922   003592  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  7923   003596  0E06               	movlw	6
  7924   003598  EC1F  F01B         	call	i2_color_writetoaddr
  7925                           
  7926                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7927   00359C  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7928   00359E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7929   0035A0  0E07               	movlw	7
  7930   0035A2  EC1F  F01B         	call	i2_color_writetoaddr
  7931   0035A6  0012               	return		;funcret
  7932   0035A8                     __end_ofi2_Color_Interrupts_threshold:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function i2_Color_Interrupts_init *****************
  7936 ;; Defined at:
  7937 ;;		line 29 in file "interrupts.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		wreg, status,2, status,0, cstack
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7955 ;;Total ram usage:        1 bytes
  7956 ;; Hardware stack levels used: 1
  7957 ;; Hardware stack levels required when called: 3
  7958 ;; This function calls:
  7959 ;;		i2_color_writetoaddr
  7960 ;; This function is called by:
  7961 ;;		_Color_Interrupts_clear
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text48
  7966   003678                     __ptext48:
  7967                           	callstack 0
  7968   003678                     i2_Color_Interrupts_init:
  7969                           	callstack 20
  7970   003678                     
  7971                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7972   003678  0E13               	movlw	19
  7973   00367A  6E03               	movwf	i2color_writetoaddr@value^0,c
  7974   00367C  0E00               	movlw	0
  7975   00367E  EC1F  F01B         	call	i2_color_writetoaddr
  7976   003682                     
  7977                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7978   003682  0ED0               	movlw	208
  7979   003684  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  7980   003686  0ECA               	movlw	202
  7981   003688                     i2u332_47:
  7982   003688  2EE8               	decfsz	wreg,f,c
  7983   00368A  D7FE               	bra	i2u332_47
  7984   00368C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  7985   00368E  D7FC               	bra	i2u332_47
  7986   003690  0012               	return		;funcret
  7987   003692                     __end_ofi2_Color_Interrupts_init:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function i2_color_writetoaddr *****************
  7991 ;; Defined at:
  7992 ;;		line 24 in file "color.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  address         1    wreg     unsigned char 
  7995 ;;  value           1    2[COMRAM] unsigned char 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  address         1    3[COMRAM] unsigned char 
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8007 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8008 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8010 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8011 ;;Total ram usage:        2 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 2
  8014 ;; This function calls:
  8015 ;;		i2_I2C_2_Master_Start
  8016 ;;		i2_I2C_2_Master_Stop
  8017 ;;		i2_I2C_2_Master_Write
  8018 ;; This function is called by:
  8019 ;;		i2_Color_Interrupts_init
  8020 ;;		i2_Color_Interrupts_threshold
  8021 ;;		i2_persistence_register
  8022 ;; This function uses a non-reentrant model
  8023 ;;
  8024                           
  8025                           	psect	text49
  8026   00363E                     __ptext49:
  8027                           	callstack 0
  8028   00363E                     i2_color_writetoaddr:
  8029                           	callstack 20
  8030                           
  8031                           ;incstack = 0
  8032                           ;i2color_writetoaddr@address stored from wreg
  8033   00363E  6E04               	movwf	i2color_writetoaddr@address^0,c
  8034   003640                     
  8035                           ;color.c: 25:     I2C_2_Master_Start();
  8036   003640  EC8C  F01B         	call	i2_I2C_2_Master_Start	;wreg free
  8037                           
  8038                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8039   003644  0E52               	movlw	82
  8040   003646  EC6D  F01B         	call	i2_I2C_2_Master_Write
  8041                           
  8042                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8043   00364A  5004               	movf	i2color_writetoaddr@address^0,w,c
  8044   00364C  0980               	iorlw	128
  8045   00364E  EC6D  F01B         	call	i2_I2C_2_Master_Write
  8046                           
  8047                           ;color.c: 28:     I2C_2_Master_Write(value);
  8048   003652  5003               	movf	i2color_writetoaddr@value^0,w,c
  8049   003654  EC6D  F01B         	call	i2_I2C_2_Master_Write
  8050                           
  8051                           ;color.c: 29:     I2C_2_Master_Stop();
  8052   003658  EC87  F01B         	call	i2_I2C_2_Master_Stop	;wreg free
  8053   00365C  0012               	return		;funcret
  8054   00365E                     __end_ofi2_color_writetoaddr:
  8055                           	callstack 0
  8056                           
  8057 ;; *************** function i2_I2C_2_Master_Write *****************
  8058 ;; Defined at:
  8059 ;;		line 45 in file "i2c.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  data_byte       1    wreg     unsigned char 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  data_byte       1    1[COMRAM] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      void 
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;Total ram usage:        1 bytes
  8078 ;; Hardware stack levels used: 1
  8079 ;; Hardware stack levels required when called: 1
  8080 ;; This function calls:
  8081 ;;		i2_I2C_2_Master_Idle
  8082 ;; This function is called by:
  8083 ;;		_Color_Interrupts_clear
  8084 ;;		i2_color_writetoaddr
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text50
  8089   0036DA                     __ptext50:
  8090                           	callstack 0
  8091   0036DA                     i2_I2C_2_Master_Write:
  8092                           	callstack 20
  8093                           
  8094                           ;incstack = 0
  8095                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8096   0036DA  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8097   0036DC                     
  8098                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8099   0036DC  ECE8  F01A         	call	i2_I2C_2_Master_Idle	;wreg free
  8100   0036E0                     
  8101                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8102   0036E0  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8103   0036E4  0012               	return		;funcret
  8104   0036E6                     __end_ofi2_I2C_2_Master_Write:
  8105                           	callstack 0
  8106                           
  8107 ;; *************** function i2_I2C_2_Master_Stop *****************
  8108 ;; Defined at:
  8109 ;;		line 39 in file "i2c.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      void 
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8127 ;;Total ram usage:        0 bytes
  8128 ;; Hardware stack levels used: 1
  8129 ;; Hardware stack levels required when called: 1
  8130 ;; This function calls:
  8131 ;;		i2_I2C_2_Master_Idle
  8132 ;; This function is called by:
  8133 ;;		_Color_Interrupts_clear
  8134 ;;		i2_color_writetoaddr
  8135 ;; This function uses a non-reentrant model
  8136 ;;
  8137                           
  8138                           	psect	text51
  8139   00370E                     __ptext51:
  8140                           	callstack 0
  8141   00370E                     i2_I2C_2_Master_Stop:
  8142                           	callstack 20
  8143   00370E                     
  8144                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8145   00370E  ECE8  F01A         	call	i2_I2C_2_Master_Idle	;wreg free
  8146   003712                     
  8147                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8148   003712  010E               	movlb	14	; () banked
  8149   003714  85DA               	bsf	218,2,b	;volatile
  8150   003716                     
  8151                           ; BSR set to: 14
  8152   003716  0012               	return		;funcret
  8153   003718                     __end_ofi2_I2C_2_Master_Stop:
  8154                           	callstack 0
  8155                           
  8156 ;; *************** function i2_I2C_2_Master_Start *****************
  8157 ;; Defined at:
  8158 ;;		line 27 in file "i2c.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1    wreg      void 
  8165 ;; Registers used:
  8166 ;;		wreg, status,2, status,0, cstack
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used: 1
  8178 ;; Hardware stack levels required when called: 1
  8179 ;; This function calls:
  8180 ;;		i2_I2C_2_Master_Idle
  8181 ;; This function is called by:
  8182 ;;		_Color_Interrupts_clear
  8183 ;;		i2_color_writetoaddr
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text52
  8188   003718                     __ptext52:
  8189                           	callstack 0
  8190   003718                     i2_I2C_2_Master_Start:
  8191                           	callstack 20
  8192   003718                     
  8193                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8194   003718  ECE8  F01A         	call	i2_I2C_2_Master_Idle	;wreg free
  8195   00371C                     
  8196                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8197   00371C  010E               	movlb	14	; () banked
  8198   00371E  81DA               	bsf	218,0,b	;volatile
  8199   003720                     
  8200                           ; BSR set to: 14
  8201   003720  0012               	return		;funcret
  8202   003722                     __end_ofi2_I2C_2_Master_Start:
  8203                           	callstack 0
  8204                           
  8205 ;; *************** function i2_I2C_2_Master_Idle *****************
  8206 ;; Defined at:
  8207 ;;		line 22 in file "i2c.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;		None
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2, status,0
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;Total ram usage:        1 bytes
  8226 ;; Hardware stack levels used: 1
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		i2_I2C_2_Master_Start
  8231 ;;		i2_I2C_2_Master_Stop
  8232 ;;		i2_I2C_2_Master_Write
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text53
  8237   0035D0                     __ptext53:
  8238                           	callstack 0
  8239   0035D0                     i2_I2C_2_Master_Idle:
  8240                           	callstack 20
  8241   0035D0                     i2l215:
  8242   0035D0  010E               	movlb	14	; () banked
  8243   0035D2  B5D8               	btfsc	216,2,b	;volatile
  8244   0035D4  EFEE  F01A         	goto	i2u129_41
  8245   0035D8  EFF0  F01A         	goto	i2u129_40
  8246   0035DC                     i2u129_41:
  8247   0035DC  EFE8  F01A         	goto	i2l215
  8248   0035E0                     i2u129_40:
  8249   0035E0                     
  8250                           ; BSR set to: 14
  8251   0035E0  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8252   0035E4  0E1F               	movlw	31
  8253   0035E6  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8254   0035E8  A4D8               	btfss	status,2,c
  8255   0035EA  EFF9  F01A         	goto	i2u130_41
  8256   0035EE  EFFB  F01A         	goto	i2u130_40
  8257   0035F2                     i2u130_41:
  8258   0035F2  EFE8  F01A         	goto	i2l215
  8259   0035F6                     i2u130_40:
  8260   0035F6                     
  8261                           ; BSR set to: 14
  8262   0035F6  0012               	return		;funcret
  8263   0035F8                     __end_ofi2_I2C_2_Master_Idle:
  8264                           	callstack 0
  8265                           
  8266                           	psect	rparam
  8267   000000                     
  8268                           	psect	temp
  8269   000057                     btemp:
  8270                           	callstack 0
  8271   000057                     	ds	1
  8272   000000                     int$flags	set	btemp
  8273   000000                     wtemp8	set	btemp+1
  8274   000000                     ttemp5	set	btemp+1
  8275   000000                     ttemp6	set	btemp+4
  8276   000000                     ttemp7	set	btemp+8
  8277                           
  8278                           	psect	idloc
  8279                           
  8280                           ;Config register IDLOC0 @ 0x200000
  8281                           ;	unspecified, using default values
  8282   200000                     	org	2097152
  8283   200000  0FFF               	dw	4095
  8284                           
  8285                           ;Config register IDLOC1 @ 0x200002
  8286                           ;	unspecified, using default values
  8287   200002                     	org	2097154
  8288   200002  0FFF               	dw	4095
  8289                           
  8290                           ;Config register IDLOC2 @ 0x200004
  8291                           ;	unspecified, using default values
  8292   200004                     	org	2097156
  8293   200004  0FFF               	dw	4095
  8294                           
  8295                           ;Config register IDLOC3 @ 0x200006
  8296                           ;	unspecified, using default values
  8297   200006                     	org	2097158
  8298   200006  0FFF               	dw	4095
  8299                           
  8300                           ;Config register IDLOC4 @ 0x200008
  8301                           ;	unspecified, using default values
  8302   200008                     	org	2097160
  8303   200008  0FFF               	dw	4095
  8304                           
  8305                           ;Config register IDLOC5 @ 0x20000A
  8306                           ;	unspecified, using default values
  8307   20000A                     	org	2097162
  8308   20000A  0FFF               	dw	4095
  8309                           
  8310                           ;Config register IDLOC6 @ 0x20000C
  8311                           ;	unspecified, using default values
  8312   20000C                     	org	2097164
  8313   20000C  0FFF               	dw	4095
  8314                           
  8315                           ;Config register IDLOC7 @ 0x20000E
  8316                           ;	unspecified, using default values
  8317   20000E                     	org	2097166
  8318   20000E  0FFF               	dw	4095
  8319                           
  8320                           	psect	config
  8321                           
  8322                           ;Config register CONFIG1L @ 0x300000
  8323                           ;	External Oscillator mode Selection bits
  8324                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8325                           ;	Power-up default value for COSC bits
  8326                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8327   300000                     	org	3145728
  8328   300000  AA                 	db	170
  8329                           
  8330                           ;Config register CONFIG1H @ 0x300001
  8331                           ;	unspecified, using default values
  8332                           ;	Clock Out Enable bit
  8333                           ;	CLKOUTEN = 0x1, unprogrammed default
  8334                           ;	Clock Switch Enable bit
  8335                           ;	CSWEN = 0x1, unprogrammed default
  8336                           ;	Fail-Safe Clock Monitor Enable bit
  8337                           ;	FCMEN = 0x1, unprogrammed default
  8338   300001                     	org	3145729
  8339   300001  FF                 	db	255
  8340                           
  8341                           ;Config register CONFIG2L @ 0x300002
  8342                           ;	unspecified, using default values
  8343                           ;	Master Clear Enable bit
  8344                           ;	MCLRE = 0x1, unprogrammed default
  8345                           ;	Power-up Timer Enable bit
  8346                           ;	PWRTE = 0x1, unprogrammed default
  8347                           ;	Low-power BOR enable bit
  8348                           ;	LPBOREN = 0x1, unprogrammed default
  8349                           ;	Brown-out Reset Enable bits
  8350                           ;	BOREN = 0x3, unprogrammed default
  8351   300002                     	org	3145730
  8352   300002  FF                 	db	255
  8353                           
  8354                           ;Config register CONFIG2H @ 0x300003
  8355                           ;	unspecified, using default values
  8356                           ;	Brown Out Reset Voltage selection bits
  8357                           ;	BORV = 0x3, unprogrammed default
  8358                           ;	ZCD Disable bit
  8359                           ;	ZCD = 0x1, unprogrammed default
  8360                           ;	PPSLOCK bit One-Way Set Enable bit
  8361                           ;	PPS1WAY = 0x1, unprogrammed default
  8362                           ;	Stack Full/Underflow Reset Enable bit
  8363                           ;	STVREN = 0x1, unprogrammed default
  8364                           ;	Debugger Enable bit
  8365                           ;	DEBUG = 0x1, unprogrammed default
  8366                           ;	Extended Instruction Set Enable bit
  8367                           ;	XINST = 0x1, unprogrammed default
  8368   300003                     	org	3145731
  8369   300003  FF                 	db	255
  8370                           
  8371                           ;Config register CONFIG3L @ 0x300004
  8372                           ;	WDT Period Select bits
  8373                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8374                           ;	WDT operating mode
  8375                           ;	WDTE = OFF, WDT Disabled
  8376   300004                     	org	3145732
  8377   300004  9F                 	db	159
  8378                           
  8379                           ;Config register CONFIG3H @ 0x300005
  8380                           ;	unspecified, using default values
  8381                           ;	WDT Window Select bits
  8382                           ;	WDTCWS = 0x7, unprogrammed default
  8383                           ;	WDT input clock selector
  8384                           ;	WDTCCS = 0x7, unprogrammed default
  8385   300005                     	org	3145733
  8386   300005  FF                 	db	255
  8387                           
  8388                           ;Config register CONFIG4L @ 0x300006
  8389                           ;	unspecified, using default values
  8390                           ;	Write Protection Block 0
  8391                           ;	WRT0 = 0x1, unprogrammed default
  8392                           ;	Write Protection Block 1
  8393                           ;	WRT1 = 0x1, unprogrammed default
  8394                           ;	Write Protection Block 2
  8395                           ;	WRT2 = 0x1, unprogrammed default
  8396                           ;	Write Protection Block 3
  8397                           ;	WRT3 = 0x1, unprogrammed default
  8398                           ;	Write Protection Block 3
  8399                           ;	WRT4 = 0x1, unprogrammed default
  8400                           ;	Write Protection Block 3
  8401                           ;	WRT5 = 0x1, unprogrammed default
  8402                           ;	Write Protection Block 3
  8403                           ;	WRT6 = 0x1, unprogrammed default
  8404                           ;	Write Protection Block 3
  8405                           ;	WRT7 = 0x1, unprogrammed default
  8406   300006                     	org	3145734
  8407   300006  FF                 	db	255
  8408                           
  8409                           ;Config register CONFIG4H @ 0x300007
  8410                           ;	unspecified, using default values
  8411                           ;	Configuration Register Write Protection bit
  8412                           ;	WRTC = 0x1, unprogrammed default
  8413                           ;	Boot Block Write Protection bit
  8414                           ;	WRTB = 0x1, unprogrammed default
  8415                           ;	Data EEPROM Write Protection bit
  8416                           ;	WRTD = 0x1, unprogrammed default
  8417                           ;	Scanner Enable bit
  8418                           ;	SCANE = 0x1, unprogrammed default
  8419                           ;	Low Voltage Programming Enable bit
  8420                           ;	LVP = 0x1, unprogrammed default
  8421   300007                     	org	3145735
  8422   300007  FF                 	db	255
  8423                           
  8424                           ;Config register CONFIG5L @ 0x300008
  8425                           ;	unspecified, using default values
  8426                           ;	UserNVM Program Memory Code Protection bit
  8427                           ;	CP = 0x1, unprogrammed default
  8428                           ;	DataNVM Memory Code Protection bit
  8429                           ;	CPD = 0x1, unprogrammed default
  8430   300008                     	org	3145736
  8431   300008  FF                 	db	255
  8432                           
  8433                           ;Config register CONFIG5H @ 0x300009
  8434                           ;	unspecified, using default values
  8435   300009                     	org	3145737
  8436   300009  FF                 	db	255
  8437                           
  8438                           ;Config register CONFIG6L @ 0x30000A
  8439                           ;	unspecified, using default values
  8440                           ;	Table Read Protection Block 0
  8441                           ;	EBTR0 = 0x1, unprogrammed default
  8442                           ;	Table Read Protection Block 1
  8443                           ;	EBTR1 = 0x1, unprogrammed default
  8444                           ;	Table Read Protection Block 2
  8445                           ;	EBTR2 = 0x1, unprogrammed default
  8446                           ;	Table Read Protection Block 3
  8447                           ;	EBTR3 = 0x1, unprogrammed default
  8448                           ;	Table Read Protection Block 4
  8449                           ;	EBTR4 = 0x1, unprogrammed default
  8450                           ;	Table Read Protection Block 5
  8451                           ;	EBTR5 = 0x1, unprogrammed default
  8452                           ;	Table Read Protection Block 6
  8453                           ;	EBTR6 = 0x1, unprogrammed default
  8454                           ;	Table Read Protection Block 7
  8455                           ;	EBTR7 = 0x1, unprogrammed default
  8456   30000A                     	org	3145738
  8457   30000A  FF                 	db	255
  8458                           
  8459                           ;Config register CONFIG6H @ 0x30000B
  8460                           ;	unspecified, using default values
  8461                           ;	Boot Block Table Read Protection bit
  8462                           ;	EBTRB = 0x1, unprogrammed default
  8463   30000B                     	org	3145739
  8464   30000B  FF                 	db	255
  8465                           tosu	equ	0xFFF
  8466                           tosh	equ	0xFFE
  8467                           tosl	equ	0xFFD
  8468                           stkptr	equ	0xFFC
  8469                           pclatu	equ	0xFFB
  8470                           pclath	equ	0xFFA
  8471                           pcl	equ	0xFF9
  8472                           tblptru	equ	0xFF8
  8473                           tblptrh	equ	0xFF7
  8474                           tblptrl	equ	0xFF6
  8475                           tablat	equ	0xFF5
  8476                           prodh	equ	0xFF4
  8477                           prodl	equ	0xFF3
  8478                           indf0	equ	0xFEF
  8479                           postinc0	equ	0xFEE
  8480                           postdec0	equ	0xFED
  8481                           preinc0	equ	0xFEC
  8482                           plusw0	equ	0xFEB
  8483                           fsr0h	equ	0xFEA
  8484                           fsr0l	equ	0xFE9
  8485                           wreg	equ	0xFE8
  8486                           indf1	equ	0xFE7
  8487                           postinc1	equ	0xFE6
  8488                           postdec1	equ	0xFE5
  8489                           preinc1	equ	0xFE4
  8490                           plusw1	equ	0xFE3
  8491                           fsr1h	equ	0xFE2
  8492                           fsr1l	equ	0xFE1
  8493                           bsr	equ	0xFE0
  8494                           indf2	equ	0xFDF
  8495                           postinc2	equ	0xFDE
  8496                           postdec2	equ	0xFDD
  8497                           preinc2	equ	0xFDC
  8498                           plusw2	equ	0xFDB
  8499                           fsr2h	equ	0xFDA
  8500                           fsr2l	equ	0xFD9
  8501                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      86
    BANK0           160     84     142
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2763$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2763$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S323DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S323DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _wallSmash->_setMotorPWM
    _rangeCalibrate->_color_normalise
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               178   178      0  101801
                                              6 BANK0     78    78      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      10     6      4    5853
                                             60 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                    _color_normalise
                    _color_read_RGBC
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1886
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    3750
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     926
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2303
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     903
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   30796
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   35106
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4285
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11178
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5261
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    4893
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3514
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     903
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1317
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     903
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     _color_normalise
     _color_read_RGBC
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash
     _setMotorPWM

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      8E       5       88.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllll     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     120      63        0.0%
DATA                 0      0     120       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 14 21:11:45 2022

                            _color_read_Red 32C2                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 2E98  
                              ___fldiv@sign 0032                             _color_read_Blue 33B2  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 3362                            _color_read_Green 3312  
                         ??_Interrupts_init 0009                                         l111 3310  
                                       l120 33B0                                         l105 34C4  
                                       l114 3360                                         l108 363C  
                                       l212 3552                                         l221 370C  
                                       l117 3400                                         l141 372C  
                                       l230 36CC                                         l126 2F5C  
                                       l150 326A                                         l215 35A8  
                                       l135 36B4                                         l224 36EE  
                                       l144 3732                                         l129 295A  
                                       l233 3490                                         l218 35CE  
                                       l138 3726                                         l227 3702  
                                       l341 1B08                                         l510 36A6  
                                       l158 1AAA                                         l513 3676  
                                       l185 229C                                         l179 229C  
                                       l347 1D9E                                         l516 357C  
                                       l702 361C                                         l519 36C0  
                                       l640 2AC6                                         l633 2FDC  
                                       l643 3208                                         l660 3134  
                                       l646 319E                                         l663 30C2  
                                       l657 34F6                                         l693 2CC2  
                                       l677 2E96                                         l685 2DAC  
                                       l688 2C62                                         l696 32C0  
                                       l699 36F8                                         l972 2BCA  
                                       l967 2B84                            ??_motor_response 002D  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 36A8  
                       i2_color_writetoaddr 363E                                         wreg 000FE8  
                           _color_normalise 27EC                                        l1200 3050  
                                      l3010 1076                                        l3002 0F7E  
                                      l3100 175C                                        l3020 115C  
                                      l3012 10B4                                        l3004 0FBC  
                                      l3110 181C                                        l3022 1188  
                                      l3014 10F2                                        l3030 11B8  
                                      l3006 0FFA                                        l3120 1916  
                                      l3112 185A                                        l3104 1762  
                                      l3040 12EE                                        l3032 11F6  
                                      l3024 119C                                        l3016 1130  
                                      l3008 1038                                        l3200 2190  
                                      l1360 27EA                                        l1193 3048  
                                      l3130 19AC                                        l3114 1898  
                                      l3106 17A0                                        l3042 132C  
                                      l3034 1234                                        l3050 139E  
                                      l3026 11B2                                        l3018 1144  
                                      l3210 2246                                        l3202 21BC  
                                      l1371 2782                                        l3220 2FAC  
                                      l2500 301C                                        l3132 19C4  
                                      l3116 18D6                                        l3108 17DE  
                                      l3124 191C                                        l3060 14D4  
                                      l3052 13DC                                        l3044 1354  
                                      l3036 1272                                        l3212 2270  
                                      l3204 21D8                                        l1284 2636  
                                      l1364 2726                                        l1357 268E  
                                      l3230 2FCE                                        l3222 2FB6  
                                      l2502 3032                                        l3150 1A7C  
                                      l3134 19F0                                        l3142 1A22  
                                      l3126 195A                                        l3118 18FE  
                                      l3070 1570                                        l3062 1512  
                                      l3054 141A                                        l3046 136C  
                                      l3038 12B0                                        l3206 2202  
                                      l1286 2496                                        l1295 24DC  
                                      l3232 2FD0                                        l3224 2FB8  
                                      l3216 2F5E                                        l3240 31BC  
                                      l2504 303A                                        l2600 34EA  
                                      l3152 1A90                                        l3144 1A60  
                                      l3136 1A04                                        l3128 1998  
                                      l3080 15E0                                        l3072 1584  
                                      l3064 1530                                        l3056 1458  
                                      l3208 222A                                        l3160 1EF4  
                                      l1297 2554                                        l1289 245A  
                                      l3234 2FDA                                        l3226 2FC2  
                                      l3218 2F88                                        l3242 31CC  
                                      l3250 3142                                        l2506 303C  
                                      l2610 2C14                                        l2602 2BCC  
                                      l3154 1AA6                                        l3146 1A66  
                                      l3138 1A1C                                        l3082 161E  
                                      l3074 159C                                        l3066 1544  
                                      l3058 1496                                        l3170 1FB2  
                                      l3162 1F1C                                        l1298 2542  
                                      l3228 2FC4                                        l3244 31E0  
                                      l3236 31A0                                        l3252 3152  
                                      l3260 36F0                                        l2508 3042  
                                      l2620 2C7A                                        l2612 2C28  
                                      l2604 2BE4                                        l3156 1AA8  
                                      l3148 1A68                                        l3084 165C  
                                      l3092 16A0                                        l3068 1558  
                                      l3180 2062                                        l3172 1FCC  
                                      l3164 1F44                                        l3246 31F4  
                                      l3238 31AC                                        l3254 3162  
                                      l2550 29E0                                        l2622 2C92  
                                      l2614 2C3C                                        l2606 2BF4  
                                      l3094 16DE                                        l3086 1684  
                                      l3078 15A2                                        l3182 208A  
                                      l3190 20FC                                        l3174 1FF6  
                                      l3166 1F60                                        l3270 2D0C  
                                      l3262 2CC4                                        l3256 3176  
                                      l3248 3136                                        l2552 2A22  
                                      l2544 295C                                        l2624 2CAA  
                                      l2616 2C4A                                        l2608 2C04  
                                      l3096 171C                                        l3088 169A  
                                      l3192 2126                                        l3184 20A2  
                                      l3176 201E                                        l3168 1F8A  
                                      l3600 2304                                        l3280 2D64  
                                      l3272 2D20                                        l3264 2CDC  
                                      l3530 3708                                        l3258 318A  
                                      l2490 2FE6                                        l2482 35F8  
                                      l2554 2A26                                        l2546 2978  
                                      l2626 2CB6                                        l2618 2C56  
                                      l3098 1744                                        l3194 213A  
                                      l3186 20CE                                        l3178 2038  
                                      l3610 2330                                        l3602 230A  
                                      l3282 2D7C                                        l3274 2D34  
                                      l3266 2CEC                                        l3524 35A8  
                                      l3532 36C4                                        l2820 353C  
                                      l2492 2FF8                                        l2484 3614  
                                      l2556 2A42                                        l2548 29CC  
                                      l2900 2E66                                        l3196 2152  
                                      l3188 20E2                                        l3700 25DC  
                                      l3620 236A                                        l3612 2340  
                                      l3604 2310                                        l3540 36E6  
                                      l3284 2D94                                        l3276 2D40  
                                      l3268 2CFC                                        l3526 35B8  
                                      l3534 36C8                                        l2822 353E  
                                      l2814 352A                                        l2910 2B06  
                                      l2494 3000                                        l2558 2A86  
                                      l2902 2E7E                                        l3198 217C  
                                      l3710 262A                                        l3702 25F6  
                                      l3622 2380                                        l3614 2350  
                                      l3606 231E                                        l3550 3466  
                                      l3542 36EA                                        l3286 2DA0  
                                      l3278 2D4C                                        l3528 3704  
                                      l3536 36FA                                        l3288 3692  
                                      l2824 3540                                        l2816 3534  
                                      l2920 2B72                                        l2912 2B34  
                                      l2496 3008                                        l2488 2FDE  
                                      l2904 2E8A                                        l3712 262C  
                                      l3704 2612                                        l3640 23D4  
                                      l3624 2390                                        l3632 23B0  
                                      l3616 2352                                        l3608 2320  
                                      l3720 263A                                        l3552 348C  
                                      l3544 3452                                        l3560 3308  
                                      l3800 3258                                        l2840 3722  
                                      l3538 36FE                                        l3810 3554  
                                      l2818 353A                                        l2922 2BC2  
                                      l2914 2B44                                        l2906 2AC8  
                                      l2498 3016                                        l2850 3296  
                                      l3706 2616                                        l3650 2426  
                                      l3642 23EE                                        l3634 23C0  
                                      l3626 2398                                        l3618 235A  
                                      l3722 264A                                        l3554 348E  
                                      l3546 3456                                        l3570 33B2  
                                      l3802 325A                                        l2842 3728  
                                      l2924 2BC8                                        l2916 2B52  
                                      l2908 2AF6                                        l2860 310C  
                                      l2852 30C4                                        l2596 34C6  
                                      l3812 36B6                                        l3708 2624  
                                      l3660 2482                                        l3652 2436  
                                      l3644 23FE                                        l3636 23C0  
                                      l3628 239C                                        l3740 2710  
                                      l3732 26C8                                        l3724 2658  
                                      l3548 345E                                        l3572 33F8  
                                      l3564 3312                                        l2844 372E  
                                      l3900 1D0A                                        l3820 1AC0  
                                      l3806 365E                                        l2918 2B64  
                                      l2862 311C                                        l2854 30DC  
                                      l2598 34DE                                        l2846 326C  
                                      l2870 307A                                        l3670 24C2  
                                      l3662 2484                                        l3654 244A  
                                      l3646 240E                                        l3590 22CA  
                                      l3582 229E                                        l3750 2790  
                                      l3742 271C                                        l3734 26D0  
                                      l3726 269E                                        l3566 3358  
                                      l3558 32C2                                        l3910 1D4E  
                                      l3902 1D0C                                        l3830 1AF0  
                                      l3822 1ACC                                        l3814 1AAC  
                                      l3808 3668                                        l2864 3128  
                                      l2856 30EC                                        l2848 3280  
                                      l2872 308A                                        l2880 2DAE  
                                      l3680 24FE                                        l3672 24CC  
                                      l3664 2494                                        l3656 2458  
                                      l3648 241E                                        l3592 22DA  
                                      l3584 22AA                                        l3760 27D8  
                                      l3752 2792                                        l3744 2758  
                                      l3736 26DC                                        l3728 26B4  
                                      l3576 3362                                        l3920 1DB4  
                                      l3912 1D5A                                        l3904 1D1E  
                                      l3840 1B2A                                        l3832 1AF2  
                                      l3824 1AD8                                        l3816 1AB0  
                                      l2858 30FC                                        l2874 309A  
                                      l2866 3052                                        l2970 0E7A  
                                      l2890 2E0A                                        l2882 2DC6  
                                      l3690 2570                                        l3682 250C  
                                      l3674 24DA                                        l3666 24A6  
                                      l3658 2464                                        l3594 22EA  
                                      l3586 22B8                                        l3762 27DA  
                                      l3754 2796                                        l3746 2764  
                                      l3738 270E                                        l3770 27EC  
                                      l3578 33A8                                        l2946 36A8  
                                      l3930 1E0A                                        l3922 1DCE  
                                      l3914 1D66                                        l3906 1D20  
                                      l3850 1BB0                                        l3842 1B3E  
                                      l3834 1AFE                                        l3826 1AEC  
                                      l3818 1AB4                                        l3780 3492  
                                      l2876 30AA                                        l2868 306A  
                                      l2980 0EAA                                        l2972 0E8E  
                                      l2964 0E18                                        l2892 2E1E  
                                      l2884 2DD6                                        l3692 257E  
                                      l3684 253A                                        l3668 24BC  
                                      l3676 24EC                                        l3596 22EC  
                                      l3588 22BA                                        l3756 27BA  
                                      l3748 2772                                        l3772 27F4  
                                      l3940 1E76                                        l3932 1E1E  
                                      l3924 1DEA                                        l3916 1D96  
                                      l3908 1D34                                        l3860 1C02  
                                      l3852 1BC4                                        l3844 1B56  
                                      l3836 1B00                                        l3828 1AEE  
                                      l3766 3620                                        l3782 3496  
                                      l2878 30B6                                        l2990 0F38  
                                      l2982 0EC2                                        l2966 0E56  
                                      l2894 2E2A                                        l2886 2DE6  
                                      l3694 25A8                                        l3678 24FA  
                                      l3598 22F4                                        l3758 27CA  
                                      l3774 2848                                        l3790 320A  
                                      l3950 1EE2                                        l3942 1E90  
                                      l3934 1E36                                        l3926 1E02  
                                      l3918 1DA0                                        l3870 1C30  
                                      l3862 1C16                                        l3846 1B94  
                                      l3838 1B16                                        l3854 1BDC  
                                      l3784 34A0                                        l2992 0F64  
                                      l2984 0EEC                                        l2968 0E72  
                                      l2896 2E36                                        l2888 2DF6  
                                      l3688 2564                                        l3696 25AC  
                                      l3776 28A0                                        l3768 2E98  
                                      l3792 320C                                        l3944 1EB2  
                                      l3936 1E4A                                        l3928 1E08  
                                      l3880 1C40                                        l3872 1C38  
                                      l3864 1C1A                                        l3856 1BFA  
                                      l3848 1B98                                        l3786 34B0  
                                      l2994 0F6A                                        l2986 0F0C  
                                      l2978 0E96                                        l2898 2E4E  
                                      l3698 25C6                                        l3778 28F8  
                                      l3794 3224                                        l3946 1EC6  
                                      l3938 1E62                                        l3890 1C5C  
                                      l3882 1C42                                        l3874 1C3A  
                                      l3866 1C20                                        l3858 1BFE  
                                      l3788 34BA                                        l2996 0F70  
                                      l2988 0F20                                        l3796 3230  
                                      l3948 1EE0                                        l3892 1C70  
                                      l3884 1C44                                        l3876 1C3C  
                                      l3868 1C28                                        l2998 0F78  
                                      l3798 323C                                        l3894 1C8C  
                                      l3886 1C46                                        l3878 1C3E  
                                      l3896 1CDC                                        l3888 1C48  
                                      l3898 1CF0                                        _CR1L 0049  
                                      _CR2L 00CC                                        _CR3L 0041  
                                      STR_1 0E01                                        _CR2U 0045  
                                      _CR3U 00C8                                        u2010 15E0  
                                      u2011 15DC                                        u2100 1898  
                                      u2020 161E                                        u2101 1894  
                                      u2021 161A                                        u2110 18D6  
                                      u2030 165C                                        u2111 18D2  
                                      u2031 1658                                        u2120 195A  
                                      u2040 16DE                                        u2008 1526  
                                      u2200 2202                                        u2121 1956  
                                      u2041 16DA                                        u2201 21FE  
                                      u1330 2978                                        u2130 1998  
                                      u2050 171C                                        u2210 2270  
                                      u1331 2974                                        u2131 1994  
                                      u2051 1718                                        u2211 226C  
                                      u1260 2FF8                                        u1340 2A42  
                                      u2140 1A60                                        u2060 17A0  
                                      u2220 2D64                                        u1261 2FF4  
                                      u1341 2A3E                                        u2141 1A5C  
                                      u2061 179C                                        u2221 2D60  
                                      u1270 3016                                        u1350 2C7A  
                                      u2070 17DE                                        u2150 1F1C  
                                      u2230 2D7C                                        u1271 3012  
                                      u1351 2C76                                        u2071 17DA  
                                      u3007 2028                                        u2151 1F18  
                                      u2231 2D78                                        u1280 3032  
                                      u1360 2C92                                        u2080 181C  
                                      u2160 1F8A                                _BAUD4CONbits 000EE9  
                                      u1281 302E                                        u1361 2C8E  
                                      u2081 1818                                        u3017 2094  
                                      u2161 1F86                                        u2410 35B8  
                                      u2090 185A                                        u2170 1FF6  
                                      u2411 35B4                                        u2091 1856  
                                      u3107 0EE0                                        u3027 20C0  
                                      u2171 1FF2                                        u2420 35CE  
                                      u1700 2E4E                                        u2180 2062  
                                      u2500 2340                                        u2421 35CA  
                                      u3117 0F2A                                        u1701 2E4A  
                                      u3037 20EC                                        u2181 205E  
                                      u2501 233C                                        u1710 2E66  
                                      u2190 2126                                        u2510 2380  
                                      u2430 347A                                        u3207 168E  
                                      u3127 0F56                                        u1711 2E62  
                                      u3047 2144                                        u2191 2122  
                                      u2511 237C                                        u2431 3472  
                                      u1720 2AF6                                        u1800 0FBC  
                                      u2600 250C                                        u2520 23C0  
                                      u1721 2AF2                                        u3217 174E  
                                      u3137 114E                                        u1801 0FB8  
                                      u3057 2170                                        u2601 2508  
                                      u2521 23BC                                        u1730 2B34  
                                      u1810 0FFA                                        u2610 253A  
                                      u2530 2436                                        u2450 22B8  
                                      _T2PR 000FBC                                        u3307 34A6  
                                      u1731 2B30                                        u3227 1908  
                                      u3147 117A                                        u1811 0FF6  
                                      u3067 219A                                        u2611 2536  
                                      u2531 2432                                        u2451 22B4  
                                      u1740 2B52                                        u1900 12B0  
                                      u1820 1038                                        u2620 2550  
                                      u2540 2458                                        u2460 22CA  
                                      u2700 26B4                                        u3317 366E  
                                      u1741 2B4E                                        u3237 19B6  
                                      u1901 12AC                                        u3157 11A6  
                                      u1821 1034                                        u3077 21C6  
                                      u2621 254C                                        u2541 2454  
                                      u2461 22C6                                        u2701 26B0  
                                      u1750 2B72                                        u1910 12EE  
                                      u1830 1076                                        u2630 2564  
                                      u2550 2482                                        u2470 22DA  
                                      u2710 270A                                        u1751 2B6E  
                                      u3247 19E2                                        u3167 135E  
                                      u1911 12EA                                        u1831 1072  
                                      u3087 2234                                        u2631 2560  
                                      u2551 247E                                        u2471 22D6  
                                      u2711 2706                                        u1760 2BC2  
                                      u1920 132C                                        u1840 10B4  
                                      u2640 257E                                        u2560 24A6  
                                      u2480 231E                                        u2720 2754  
                                      u2448 347C                                        u2800 1BFA  
                                      u1761 2BBE                                        u3257 1A0E  
                                      u3177 138A                                        u1921 1328  
                                      u1841 10B0                                        u3097 0EB4  
                                      u2641 257A                                        u2561 24A2  
                                      u2481 231A                                        u2721 2750  
                                      u2801 1BF6                                        u1930 13DC  
                                      u1850 10F2                                        u1770 0E56  
                                      u2650 25C6                                        u2570 24BC  
                                      u2490 2330                                        u2730 2772  
                                      u2810 1C70                                        u3267 1A9A  
                                      u3187 1562                                        u1931 13D8  
                                      u1851 10EE                                        u1771 0E52  
                                      u2651 25C2                                        u2571 24B8  
                                      u2491 232C                                        u2731 276E  
                                      u2811 1C6C                                        u1940 141A  
                                      u1860 1130                                        u1780 0E72  
                                      u2660 25F6                                        u2580 24DA  
                                      u2740 2782                                        u2820 1C8C  
                                      u3277 328A                                        u3197 158E  
                                      u1941 1416                                        u1861 112C  
                                      u1781 0E6E                                        u2661 25F2  
                                      u2581 24D6                                        u2741 277E  
                                      u2821 1C88                                        u1950 1458  
                                      u1870 11F6                                        u1790 0F0C  
                                      u2670 2624                                        u2590 24FA  
                                      u2750 2790                                        u2830 1D1E  
                                      u3287 32B4                                        u1951 1454  
                                      u1871 11F2                                        u1791 0F08  
                                      u2671 2620                                        u2591 24F6  
                                      u2751 278C                                        u2831 1D1A  
                                      u1960 1496                                        u1880 1234  
                                      u2760 27CA                                        u2680 264A  
                                      u2840 1E02                                        u3297 2C42  
                                      u1961 1492                                        u1881 1230  
                                      u2761 27C6                                        u2681 2646  
                                      u2841 1DFE                                        u1970 14D4  
                                      u1890 1272                                        u2770 27D8  
                                      u2690 2658                                        u2850 1EA4  
                                      u1971 14D0                                        u1891 126E  
                                      u2771 27D4                                        u2691 2654  
                                      u2851 1E9A                                        u2907 1CFC  
                                      u1980 1512                                        u2780 1B16  
                                      u1981 150E                                        u2917 1D40  
                                      u2781 1B12                                        u1990 1524  
                                      u2790 1B2A                                        u1991 151C  
                                      u2927 1DC0                                        u2791 1B26  
                                      u2937 1E2A                                        u2947 1E56  
                                      u2868 1EA8                                        u2957 1E82  
                                      u2877 1B4A                                        u2967 1ED2  
                                      u2887 1BA4                                        u2977 3218  
                                      u2897 1BD0                                        u2987 1F4E  
                                      u2997 1FBC                                        _bLED 372E  
                                      _gLED 3728                                        _rLED 3722  
                                      _main 1AAC                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 0057                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0034  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 0033  
                    __end_of_color_read_Red 3312                             __end_of_HighISR 0034  
                              ___param_bank 000000                                main@clearArr 0068  
                                     ?_bLED 0001                                       ?_gLED 0001  
                                     ?_rLED 0001                                       ?_main 0001  
                           __end_of___fldiv 2638                             __end_of___lwdiv 3052  
                                     i2l108 365C                                       i2l221 3720  
                                     i2l230 36E4                                       i2l215 35D0  
                                     i2l218 35F6                                       i2l227 3716  
                                     i2l513 3690                                       i2l522 3528  
                                     i2l516 35A6                                       i2l519 36D8  
                                     i2l528 0030                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 370E  
                __end_of_I2C_2_Master_Write 36CE                                       main@a 0080  
                                     tablat 000FF5                       _Color_Interrupts_init 365E  
                           __end_of_reverse 2CC4                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 2F5E                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 3402                       _I2C_2_Master_RepStart 36E6  
                           ?_color_read_Red 000D                                __end_of_bLED 3734  
                              __end_of_gLED 372E                             __initialization 3402  
                              __end_of_rLED 3728                                __end_of_main 1EF4  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                            ??_rangeCalibrate 0060  
                                    ??_rLED 0009                                      ??_main 0066  
                             __activetblptr 000001                     __end_of_color_normalise 295C  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2510 35D0                                      i2l2512 35E0  
                                    i2l3306 34F8                                      i2l3500 0024  
                                    i2l3502 0028                                      i2l2560 3718  
                                    i2l3504 002C                                      i2l2562 371C  
                                    i2l2570 36E0                                      i2l2564 370E  
                                    i2l2812 3640                                      i2l2566 3712  
                                    i2l2568 36DC                                      i2l2930 3682  
                                    i2l2932 357E                                      i2l2934 36CE  
                                    i2l2928 3678                                      i2l3496 000A  
                                    i2l3498 001A                                      _RG6PPS 000E88  
                                 ??_HighISR 0009                    __end_of_color_click_init 34C6  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 27EC    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 36C2  
                              _CCPTMRS0bits 000FAD                                      ___flge 2AC8  
                                    ___wmul 35F8                                   ??___fldiv 002A  
                                 ??___lwdiv 0013                                      clear_0 3420  
                                    clear_1 342C                                      clear_2 3438  
                                    isa$std 000001                                      main@mL 00A2  
                                    main@mR 00AB                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 34F8                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 3136  
                          __end_of_turnPrep 32C2                                  ___flge@ff1 0009  
                                ___flge@ff2 000D                                ___xxtofl@arg 001E  
                              ___xxtofl@exp 001D                                ___xxtofl@val 0014  
                                __accesstop 0060                     __end_of__initialization 343E  
                  __end_of_color_read_Clear 33B2                    __end_of_color_read_Green 3362  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0022                            ?_color_read_Blue 000D  
                           _Interrupts_init 3692                              __pcstackCOMRAM 0001  
                              __pidataBANK0 3734              __end_ofi2_persistence_register 36DA  
                              ?_tricolorLED 0001                            ?_color_normalise 003B  
                   i2_Color_Interrupts_init 3678                          rangeCalibrate@RGBC 003D  
                                __pbssBANK0 00B4                                  __pbssBANK1 0100  
                        rangeCalibrate@temp 0062                           _color_writetoaddr 361E  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0027                       __end_of_motor_retrace 229E  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 36B6                                  _buggy_path 00DD  
                                _buggy_step 0051                     __end_of_Interrupts_init 36A8  
                            _lowerThreshold 00D0                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 363E                          _I2C_2_Master_Start 3704  
                       i2_I2C_2_Master_Idle 35D0                          _I2C_2_Master_Write 36C2  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 370E  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fldiv 229E                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 2FDE                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 00D6  
                                   __pcinit 3402                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                   ?_turnPrep 0021  
                                   __ptext0 1AAC                                     __ptext1 2CC4  
                                   __ptext2 36A8                                     __ptext3 3722  
                                   __ptext4 3728                                     __ptext5 372E  
                                   __ptext6 320A                                     __ptext7 2E98  
                                   __ptext8 32C2                                     __ptext9 3312  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00EC                                     _reverse 2BCC  
                             _RxBufWriteCnt 0056                                 motorTRIS@mL 0009  
                     ?_persistence_register 0001                                 motorTRIS@mR 000B  
                               wallSmash@mL 001C                                 wallSmash@mR 001E  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 343E                 __end_ofi2_color_writetoaddr 365E  
                         ?_color_click_init 0001                           __end_of_motorTRIS 36FA  
                         __end_of_wallSmash 2DAE                           __end_of_norm_stop 34F8  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 31A0                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 3136  
                             _interrupt_ctr 00D8                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 2F5E                                  ??_turnLeft 0020  
                                ??_turnPrep 0025                                   _PORTFbits 000F8E  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 30C4  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 0035                                 ___fldiv@rem 002E  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 00B4  
                              _EUSART4TXbuf 0100                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 352A  
                            __end_of___flge 2BCC                              _fullSpeedAhead 2DAE  
                            __end_of___wmul 361E                         color_read_Clear@tmp 0012  
                       start_initialization 3402                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 2FDE                      __end_of_fullSpeedAhead 2E98  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 003B                                 __pdataBANK0 00EC  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 3722  
              __end_ofi2_I2C_2_Master_Write 36E6                                   ___fldiv@a 0026  
                                 ___fldiv@b 0022                                 __pbssCOMRAM 0041  
                             __pcstackBANK0 0060                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 004D  
                                 _amb_green 00D4                             motor_retrace@mL 0029  
                           motor_retrace@mR 002B                            ___lwdiv@dividend 000F  
                           motor_response@j 002F                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fldiv 0022  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 35A8  
                         _I2C_2_Master_Init 352A                           _I2C_2_Master_Read 3450  
                         _I2C_2_Master_Stop 36FA                                _RxBufReadCnt 0055  
                                  ?_reverse 001C                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0013                      __end_of_motor_response 1AAC  
                  initDCmotorsPWM@PWMperiod 0009                         ??_I2C_2_Master_Idle 0009  
                       ??_I2C_2_Master_Init 0009                         ??_I2C_2_Master_Read 000A  
                            ___wmul@product 000D                                    _LATAbits 000F79  
                       ??_I2C_2_Master_Stop 000A                                    _LATDbits 000F7C  
                                  _LATEbits 000F7D                                    _LATFbits 000F7E  
                                  _LATGbits 000F7F                                    _LATHbits 000F80  
                                  _IPR0bits 000E1F                                    _PIE0bits 000E29  
                                  _PIE4bits 000E2D                                    i2u130_40 35F6  
                                  i2u130_41 35F2                                 turnRight@mL 001C  
                               turnRight@mR 001E                                    i2u129_40 35E0  
                                  i2u129_41 35DC                                    i2u332_47 3688  
                                  i2u238_40 001A                                    i2u238_41 0016  
                                  _PIR0bits 000E33                                    _PIR4bits 000E37  
                                 _motorTRIS 36F0                                   _wallSmash 2CC4  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 34C6                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 35D0  
                 __end_of_I2C_2_Master_Init 3554                   __end_of_I2C_2_Master_Read 3492  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 3704  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0024                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 0053                    i2color_writetoaddr@value 0003  
                                 _turnRight 3052                              _rangeCalibrate 320A  
             __end_of_Color_Interrupts_init 3678                             ?_motor_response 0027  
             __end_of_I2C_2_Master_RepStart 36F0                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 2AC8                        i2_I2C_2_Master_Start 3718  
                      i2_I2C_2_Master_Write 36DA                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0027                           ??_color_normalise 003D  
                                ?_motorTRIS 0009                                    __Lrparam 0000  
                                ?_wallSmash 001C                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 35A8  
              i2_Color_Interrupts_threshold 357E                 __end_ofi2_I2C_2_Master_Idle 35F8  
               __end_ofi2_I2C_2_Master_Stop 3718                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 1EF4                                  _ANSELFbits 000EB4  
                             ??_tricolorLED 0009                                    _amb_blue 00D2  
                                  ___xxtofl 2638                                  _T0CON0bits 000FD5  
                                _T0CON1bits 000FD6                      __end_of_rangeCalibrate 326C  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 3362  
                                  __ptext11 33B2                                    __ptext20 0E18  
                                  __ptext12 36E6                                    __ptext21 3052  
                                  __ptext13 3450                                    __ptext30 36F0  
                                  __ptext22 326C                                    __ptext14 27EC  
                                  __ptext31 3136                                    __ptext23 2BCC  
                                  __ptext15 2638                                    __ptext40 36C2  
                                  __ptext32 31A0                                    __ptext24 34C6  
                                  __ptext16 229E                                    __ptext41 36FA  
                                  __ptext33 2F5E                                    __ptext25 30C4  
                                  __ptext17 36B6                                    __ptext50 36DA  
                                  __ptext42 3704                                    __ptext34 3492  
                                  __ptext26 295C                                    __ptext18 1EF4  
                                  __ptext51 370E                                    __ptext43 35A8  
                                  __ptext35 352A                                    __ptext27 35F8  
                                  __ptext19 2DAE                                    __ptext52 3718  
                                  __ptext36 3692                                    __ptext28 2FDE  
                                  __ptext53 35D0                                    __ptext45 34F8  
                                  __ptext37 3554                                    __ptext29 2AC8  
                                  __ptext46 36CE                                    __ptext38 365E  
                                  __ptext47 357E                                    __ptext39 361E  
                                  __ptext48 3678                                    __ptext49 363E  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  _lost_ctr 004F                                  turnPrep@mL 0021  
                                turnPrep@mR 0023                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 0082  
                                  int$flags 0057          __end_of_Color_Interrupts_threshold 357E  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 3554  
                                  _turnLeft 30C4                                    _turnPrep 326C  
                            ?_motor_retrace 0027                                  _INTCONbits 000FF2  
                           ?_rangeCalibrate 003D                                 _setMotorPWM 295C  
                              motorLinit@mL 0009                         __end_of_tricolorLED 36B6  
                                  intlevel2 0000                                _motor_return 00DC  
                        __end_of_motorLinit 320A                          __end_of_motorRinit 31A0  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3692  
                          _color_click_init 3492                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00DA  
                    i2_persistence_register 36CE                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
