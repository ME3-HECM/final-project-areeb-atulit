

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Dec 13 17:49:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   0032C2                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _upperThreshold
   106   0032C2  09C4               	dw	2500
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _TRISCbits	set	3971
   112   000000                     _TRISDbits	set	3972
   113   000000                     _LATHbits	set	3968
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISAbits	set	3969
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _SSP2ADD	set	3798
   123   000000                     _SSP2CON1bits	set	3801
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _TMR0L	set	4051
   130   000000                     _TMR0H	set	4052
   131   000000                     _T0CON0bits	set	4053
   132   000000                     _T0CON1bits	set	4054
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISHbits	set	3976
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATFbits	set	3966
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _PIE4bits	set	3629
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _ANSELBbits	set	3738
   154   000000                     _RD6PPS	set	3696
   155   000000                     _RC7PPS	set	3689
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _PIR0bits	set	3635
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RE4PPS	set	3702
   161   000000                     _RG6PPS	set	3720
   162   000000                     _T2CLKCONbits	set	4031
   163   000000                     _T2HLTbits	set	4030
   164   000000                     _CCP1CONbits	set	4011
   165   000000                     _CCPTMRS0bits	set	4013
   166   000000                     _CCP2CONbits	set	4007
   167   000000                     _CCP3CONbits	set	3878
   168   000000                     _CCP4CONbits	set	3874
   169                           
   170                           	psect	smallconst
   171   000E00                     __psmallconst:
   172                           	callstack 0
   173   000E00  00                 	db	0
   174   000E01                     
   175                           ; BSR set to: 14
   176   000E01  52                 	db	82	;'R'
   177   000E02  47                 	db	71	;'G'
   178   000E03  42                 	db	66	;'B'
   179   000E04  43                 	db	67	;'C'
   180   000E05  3A                 	db	58	;':'
   181   000E06  25                 	db	37
   182   000E07  69                 	db	105	;'i'
   183   000E08  20                 	db	32
   184   000E09  25                 	db	37
   185   000E0A  69                 	db	105	;'i'
   186   000E0B  20                 	db	32
   187   000E0C  25                 	db	37
   188   000E0D  69                 	db	105	;'i'
   189   000E0E  20                 	db	32
   190   000E0F  25                 	db	37
   191   000E10  69                 	db	105	;'i'
   192   000E11  20                 	db	32
   193   000E12  25                 	db	37
   194   000E13  69                 	db	105	;'i'
   195   000E14  0A                 	db	10
   196   000E15  00                 	db	0
   197   000E16  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   002FB0                     __pcinit:
   203                           	callstack 0
   204   002FB0                     start_initialization:
   205                           	callstack 0
   206   002FB0                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (2 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   002FB0  0EC2               	movlw	low __pidataBANK0
   212   002FB2  6EF6               	movwf	tblptrl,c
   213   002FB4  0E32               	movlw	high __pidataBANK0
   214   002FB6  6EF7               	movwf	tblptrh,c
   215   002FB8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   002FBA  6EF8               	movwf	tblptru,c
   217   002FBC  0009               	tblrd		*+	;fetch initializer
   218   002FBE  CFF5 F0E6          	movff	tablat,__pdataBANK0
   219   002FC2  0009               	tblrd		*+	;fetch initializer
   220   002FC4  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   221                           
   222                           ; Clear objects allocated to BANK0 (82 bytes)
   223   002FC8  EE00  F060         	lfsr	0,__pbssBANK0
   224   002FCC  0E52               	movlw	82
   225   002FCE                     clear_0:
   226   002FCE  6AEE               	clrf	postinc0,c
   227   002FD0  06E8               	decf	wreg,f,c
   228   002FD2  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (34 bytes)
   231   002FD4  EE00  F02C         	lfsr	0,__pbssCOMRAM
   232   002FD8  0E22               	movlw	34
   233   002FDA                     clear_1:
   234   002FDA  6AEE               	clrf	postinc0,c
   235   002FDC  06E8               	decf	wreg,f,c
   236   002FDE  E1FD               	bnz	clear_1
   237   002FE0                     end_of_initialization:
   238                           	callstack 0
   239   002FE0                     __end_of__initialization:
   240                           	callstack 0
   241   002FE0  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   002FE2  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   002FE4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   244   002FE6  6EF8               	movwf	tblptru,c
   245   002FE8  0E0E               	movlw	high __Lsmallconst
   246   002FEA  6EF7               	movwf	tblptrh,c
   247   002FEC  0100               	movlb	0
   248   002FEE  EF7A  F010         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   00002C                     __pbssCOMRAM:
   252                           	callstack 0
   253   00002C                     _EUSART4RXbuf:
   254                           	callstack 0
   255   00002C                     	ds	20
   256   000040                     _amb_clear:
   257                           	callstack 0
   258   000040                     	ds	2
   259   000042                     _amb_blue:
   260                           	callstack 0
   261   000042                     	ds	2
   262   000044                     _amb_green:
   263                           	callstack 0
   264   000044                     	ds	2
   265   000046                     _amb_red:
   266                           	callstack 0
   267   000046                     	ds	2
   268   000048                     _ctr:
   269                           	callstack 0
   270   000048                     	ds	2
   271   00004A                     _TxBufReadCnt:
   272                           	callstack 0
   273   00004A                     	ds	1
   274   00004B                     _TxBufWriteCnt:
   275                           	callstack 0
   276   00004B                     	ds	1
   277   00004C                     _RxBufReadCnt:
   278                           	callstack 0
   279   00004C                     	ds	1
   280   00004D                     _RxBufWriteCnt:
   281                           	callstack 0
   282   00004D                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   000060                     __pbssBANK0:
   286                           	callstack 0
   287   000060                     _EUSART4TXbuf:
   288                           	callstack 0
   289   000060                     	ds	60
   290   00009C                     _lowerThreshold:
   291                           	callstack 0
   292   00009C                     	ds	2
   293   00009E                     _interrupt_ctr:
   294                           	callstack 0
   295   00009E                     	ds	2
   296   0000A0                     _interrupt_flag:
   297                           	callstack 0
   298   0000A0                     	ds	2
   299   0000A2                     _motor_return:
   300                           	callstack 0
   301   0000A2                     	ds	1
   302   0000A3                     _buggy_path:
   303                           	callstack 0
   304   0000A3                     	ds	15
   305                           
   306                           	psect	dataBANK0
   307   0000E6                     __pdataBANK0:
   308                           	callstack 0
   309   0000E6                     _upperThreshold:
   310                           	callstack 0
   311   0000E6                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314   0000B2                     __pcstackBANK0:
   315                           	callstack 0
   316   0000B2                     main@pathSet:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320   0000B2                     	ds	2
   321   0000B4                     main@RGBC:
   322                           	callstack 0
   323                           
   324                           ; 32 bytes @ 0x2
   325   0000B4                     	ds	32
   326   0000D4                     main@mL:
   327                           	callstack 0
   328                           
   329                           ; 9 bytes @ 0x22
   330   0000D4                     	ds	9
   331   0000DD                     main@mR:
   332                           	callstack 0
   333                           
   334                           ; 9 bytes @ 0x2B
   335   0000DD                     	ds	9
   336                           
   337                           	psect	cstackCOMRAM
   338   000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340   000001                     ??i2_I2C_2_Master_Idle:
   341   000001                     
   342                           ; 1 bytes @ 0x0
   343   000001                     	ds	1
   344   000002                     i2I2C_2_Master_Write@data_byte:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x1
   348   000002                     	ds	1
   349   000003                     i2color_writetoaddr@value:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x2
   353   000003                     	ds	1
   354   000004                     i2color_writetoaddr@address:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x3
   358   000004                     	ds	1
   359   000005                     ??i2_Color_Interrupts_init:
   360   000005                     i2Color_Interrupts_threshold@upperThreshold:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364   000005                     	ds	2
   365   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369   000007                     	ds	2
   370   000009                     ??_I2C_2_Master_Idle:
   371   000009                     ?___wmul:
   372                           	callstack 0
   373   000009                     ?___fldiv:
   374                           	callstack 0
   375   000009                     initDCmotorsPWM@PWMperiod:
   376                           	callstack 0
   377   000009                     motorLinit@mL:
   378                           	callstack 0
   379   000009                     motorRinit@mR:
   380                           	callstack 0
   381   000009                     ___wmul@multiplier:
   382                           	callstack 0
   383   000009                     ___flge@ff1:
   384                           	callstack 0
   385   000009                     ___fldiv@b:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x8
   389   000009                     	ds	1
   390   00000A                     ??_I2C_2_Master_Read:
   391   00000A                     I2C_2_Master_Write@data_byte:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x9
   395   00000A                     	ds	1
   396   00000B                     color_writetoaddr@value:
   397                           	callstack 0
   398   00000B                     I2C_2_Master_Read@ack:
   399                           	callstack 0
   400   00000B                     ___wmul@multiplicand:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xA
   404   00000B                     	ds	1
   405   00000C                     color_writetoaddr@address:
   406                           	callstack 0
   407   00000C                     I2C_2_Master_Read@tmp:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xB
   411   00000C                     	ds	1
   412   00000D                     ??_Color_Interrupts_init:
   413   00000D                     ??_color_click_init:
   414   00000D                     ?_color_read_Red:
   415                           	callstack 0
   416   00000D                     ?_color_read_Green:
   417                           	callstack 0
   418   00000D                     ?_color_read_Blue:
   419                           	callstack 0
   420   00000D                     ?_color_read_Clear:
   421                           	callstack 0
   422   00000D                     Color_Interrupts_threshold@upperThreshold:
   423                           	callstack 0
   424   00000D                     ___wmul@product:
   425                           	callstack 0
   426   00000D                     ___flge@ff2:
   427                           	callstack 0
   428   00000D                     ___fldiv@a:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0xC
   432   00000D                     	ds	2
   433   00000F                     ??_color_read_Red:
   434   00000F                     ??_color_read_Green:
   435   00000F                     ??_color_read_Blue:
   436   00000F                     ??_color_read_Clear:
   437   00000F                     ?___lwdiv:
   438                           	callstack 0
   439   00000F                     Color_Interrupts_threshold@lowerThreshold:
   440                           	callstack 0
   441   00000F                     ___lwdiv@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xE
   445   00000F                     	ds	2
   446   000011                     ??___fldiv:
   447   000011                     ??___flge:
   448   000011                     ___lwdiv@divisor:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x10
   452   000011                     	ds	1
   453   000012                     color_read_Red@tmp:
   454                           	callstack 0
   455   000012                     color_read_Green@tmp:
   456                           	callstack 0
   457   000012                     color_read_Blue@tmp:
   458                           	callstack 0
   459   000012                     color_read_Clear@tmp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x11
   463   000012                     	ds	1
   464   000013                     ___lwdiv@quotient:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x12
   468   000013                     	ds	1
   469   000014                     ?___xxtofl:
   470                           	callstack 0
   471   000014                     ___xxtofl@val:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x13
   475   000014                     	ds	1
   476   000015                     ___lwdiv@counter:
   477                           	callstack 0
   478   000015                     ___fldiv@rem:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x14
   482   000015                     	ds	1
   483   000016                     setMotorPWM@m:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x15
   487   000016                     	ds	2
   488   000018                     ??_setMotorPWM:
   489   000018                     ??___xxtofl:
   490                           
   491                           ; 1 bytes @ 0x17
   492   000018                     	ds	1
   493   000019                     ___fldiv@sign:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x18
   497   000019                     	ds	1
   498   00001A                     setMotorPWM@posDuty:
   499                           	callstack 0
   500   00001A                     ___fldiv@new_exp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x19
   504   00001A                     	ds	1
   505   00001B                     setMotorPWM@negDuty:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x1A
   509   00001B                     	ds	1
   510   00001C                     ___xxtofl@sign:
   511                           	callstack 0
   512   00001C                     norm_stop@mL:
   513                           	callstack 0
   514   00001C                     turnLeft@mL:
   515                           	callstack 0
   516   00001C                     turnRight@mL:
   517                           	callstack 0
   518   00001C                     fullSpeedAhead@mL:
   519                           	callstack 0
   520   00001C                     reverse@mL:
   521                           	callstack 0
   522   00001C                     ___fldiv@grs:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x1B
   526   00001C                     	ds	1
   527   00001D                     ___xxtofl@exp:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x1C
   531   00001D                     	ds	1
   532   00001E                     norm_stop@mR:
   533                           	callstack 0
   534   00001E                     turnLeft@mR:
   535                           	callstack 0
   536   00001E                     turnRight@mR:
   537                           	callstack 0
   538   00001E                     fullSpeedAhead@mR:
   539                           	callstack 0
   540   00001E                     reverse@mR:
   541                           	callstack 0
   542   00001E                     ___xxtofl@arg:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x1D
   546   00001E                     	ds	2
   547   000020                     ??_reverse:
   548   000020                     ___fldiv@bexp:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x1F
   552   000020                     	ds	1
   553   000021                     ___fldiv@aexp:
   554                           	callstack 0
   555   000021                     motor_response@temp:
   556                           	callstack 0
   557   000021                     motor_retrace@buggy_path:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x20
   561   000021                     	ds	1
   562   000022                     color_read_RGBC@temp:
   563                           	callstack 0
   564   000022                     color_normalise@RGBC:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x21
   568   000022                     	ds	1
   569   000023                     motor_response@mL:
   570                           	callstack 0
   571   000023                     motor_retrace@mL:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x22
   575   000023                     	ds	1
   576   000024                     
   577                           ; 1 bytes @ 0x23
   578   000024                     	ds	1
   579   000025                     motor_response@mR:
   580                           	callstack 0
   581   000025                     motor_retrace@mR:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x24
   585   000025                     	ds	2
   586   000027                     ??_motor_response:
   587   000027                     ??_motor_retrace:
   588                           
   589                           ; 1 bytes @ 0x26
   590   000027                     	ds	3
   591   00002A                     ??_main:
   592                           
   593                           ; 1 bytes @ 0x29
   594   00002A                     	ds	2
   595                           
   596 ;;
   597 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   598 ;;
   599 ;; *************** function _main *****************
   600 ;; Defined at:
   601 ;;		line 22 in file "main.c"
   602 ;; Parameters:    Size  Location     Type
   603 ;;		None
   604 ;; Auto vars:     Size  Location     Type
   605 ;;  buf           100    0        unsigned char [100]
   606 ;;  RGBC           32    2[BANK0 ] struct RGBC_val
   607 ;;  mR              9   43[BANK0 ] struct DC_motor
   608 ;;  mL              9   34[BANK0 ] struct DC_motor
   609 ;;  pathSet         2    0[BANK0 ] int 
   610 ;; Return value:  Size  Location     Type
   611 ;;                  1    wreg      void 
   612 ;; Registers used:
   613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   614 ;; Tracked objects:
   615 ;;		On entry : 0/0
   616 ;;		On exit  : 0/0
   617 ;;		Unchanged: 0/0
   618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   620 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   622 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   623 ;;Total ram usage:       54 bytes
   624 ;; Hardware stack levels required when called: 10
   625 ;; This function calls:
   626 ;;		_Color_Interrupts_init
   627 ;;		_Color_Interrupts_threshold
   628 ;;		_Interrupts_init
   629 ;;		_color_click_init
   630 ;;		_color_normalise
   631 ;;		_color_read_RGBC
   632 ;;		_fullSpeedAhead
   633 ;;		_initDCmotorsPWM
   634 ;;		_motorLinit
   635 ;;		_motorRinit
   636 ;;		_motor_response
   637 ;;		_motor_retrace
   638 ;;		_norm_stop
   639 ;;		_persistence_register
   640 ;;		_tricolorLED
   641 ;;		_turnLeft
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648   0020F4                     __ptext0:
   649                           	callstack 0
   650   0020F4                     _main:
   651                           	callstack 21
   652   0020F4                     
   653                           ;main.c: 24:     tricolorLED();
   654   0020F4  EC1A  F019         	call	_tricolorLED	;wreg free
   655   0020F8                     
   656                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   657   0020F8  EC1A  F018         	call	_color_click_init	;wreg free
   658   0020FC                     
   659                           ;main.c: 29:     ctr=0;
   660   0020FC  0E00               	movlw	0
   661   0020FE  6E49               	movwf	(_ctr+1)^0,c
   662   002100  0E00               	movlw	0
   663   002102  6E48               	movwf	_ctr^0,c
   664   002104                     
   665                           ;main.c: 30:     interrupt_ctr=0;
   666   002104  0E00               	movlw	0
   667   002106  0100               	movlb	0	; () banked
   668   002108  6F9F               	movwf	(_interrupt_ctr+1)& (0+255),b
   669   00210A  0E00               	movlw	0
   670   00210C  6F9E               	movwf	_interrupt_ctr& (0+255),b
   671   00210E                     
   672                           ; BSR set to: 0
   673                           ;main.c: 32:     for(pathSet=0;pathSet<15;pathSet++)
   674   00210E  0E00               	movlw	0
   675   002110  6FB3               	movwf	(main@pathSet+1)& (0+255),b
   676   002112  0E00               	movlw	0
   677   002114  6FB2               	movwf	main@pathSet& (0+255),b
   678   002116                     l3060:
   679                           
   680                           ; BSR set to: 0
   681                           ;main.c: 33:     {;main.c: 34:         buggy_path[pathSet]=0;
   682   002116  0EA3               	movlw	low _buggy_path
   683   002118  25B2               	addwf	main@pathSet& (0+255),w,b
   684   00211A  6ED9               	movwf	fsr2l,c
   685   00211C  0E00               	movlw	high _buggy_path
   686   00211E  21B3               	addwfc	(main@pathSet+1)& (0+255),w,b
   687   002120  6EDA               	movwf	fsr2h,c
   688   002122  0E00               	movlw	0
   689   002124  6EDF               	movwf	indf2,c
   690   002126                     
   691                           ; BSR set to: 0
   692                           ;main.c: 35:     }
   693   002126  4BB2               	infsnz	main@pathSet& (0+255),f,b
   694   002128  2BB3               	incf	(main@pathSet+1)& (0+255),f,b
   695   00212A                     
   696                           ; BSR set to: 0
   697   00212A  BFB3               	btfsc	(main@pathSet+1)& (0+255),7,b
   698   00212C  EFA1  F010         	goto	u2151
   699   002130  51B3               	movf	(main@pathSet+1)& (0+255),w,b
   700   002132  E109               	bnz	u2150
   701   002134  0E0F               	movlw	15
   702   002136  5DB2               	subwf	main@pathSet& (0+255),w,b
   703   002138  A0D8               	btfss	status,0,c
   704   00213A  EFA1  F010         	goto	u2151
   705   00213E  EFA3  F010         	goto	u2150
   706   002142                     u2151:
   707   002142  EF8B  F010         	goto	l3060
   708   002146                     u2150:
   709   002146                     
   710                           ; BSR set to: 0
   711                           ;main.c: 37:     Interrupts_init();
   712   002146  EC25  F019         	call	_Interrupts_init	;wreg free
   713   00214A                     
   714                           ;main.c: 38:     Color_Interrupts_init();
   715   00214A  EC00  F019         	call	_Color_Interrupts_init	;wreg free
   716   00214E                     
   717                           ;main.c: 39:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   718   00214E  C0E6  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   719   002152  C0E7  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   720   002156  C09C  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   721   00215A  C09D  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   722   00215E  EC7B  F018         	call	_Color_Interrupts_threshold	;wreg free
   723   002162                     
   724                           ;main.c: 40:     persistence_register();
   725   002162  EC30  F019         	call	_persistence_register	;wreg free
   726   002166                     
   727                           ;main.c: 42:     initDCmotorsPWM(200);
   728   002166  0E00               	movlw	0
   729   002168  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   730   00216A  0EC8               	movlw	200
   731   00216C  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   732   00216E  ECE2  F015         	call	_initDCmotorsPWM	;wreg free
   733   002172                     
   734                           ;main.c: 43:     DC_motor mL, mR;;main.c: 44:     motorLinit(&mL);
   735   002172  0ED4               	movlw	low main@mL
   736   002174  6E09               	movwf	motorLinit@mL^0,c
   737   002176  0E00               	movlw	high main@mL
   738   002178  6E0A               	movwf	(motorLinit@mL+1)^0,c
   739   00217A  EC03  F017         	call	_motorLinit	;wreg free
   740   00217E                     
   741                           ;main.c: 45:     motorRinit(&mR);
   742   00217E  0EDD               	movlw	low main@mR
   743   002180  6E09               	movwf	motorRinit@mR^0,c
   744   002182  0E00               	movlw	high main@mR
   745   002184  6E0A               	movwf	(motorRinit@mR+1)^0,c
   746   002186  ECCE  F016         	call	_motorRinit	;wreg free
   747   00218A                     
   748                           ;main.c: 47:     TRISEbits.TRISE2 = 0;
   749   00218A  9485               	bcf	133,2,c	;volatile
   750   00218C                     
   751                           ;main.c: 48:     TRISEbits.TRISE4 = 0;
   752   00218C  9885               	bcf	133,4,c	;volatile
   753   00218E                     
   754                           ;main.c: 49:     TRISCbits.TRISC7 = 0;
   755   00218E  9E83               	bcf	131,7,c	;volatile
   756   002190                     
   757                           ;main.c: 50:     TRISGbits.TRISG6 = 0;
   758   002190  9C87               	bcf	135,6,c	;volatile
   759   002192                     
   760                           ;main.c: 51:     TRISDbits.TRISD7 = 0;
   761   002192  9E84               	bcf	132,7,c	;volatile
   762   002194                     
   763                           ;main.c: 52:     LATDbits.LATD7 = 0;
   764   002194  9E7C               	bcf	124,7,c	;volatile
   765   002196                     
   766                           ;main.c: 53:     TRISHbits.TRISH3 = 0;
   767   002196  9688               	bcf	136,3,c	;volatile
   768   002198                     
   769                           ;main.c: 54:     LATHbits.LATH3 = 0;
   770   002198  9680               	bcf	128,3,c	;volatile
   771   00219A                     
   772                           ;main.c: 55:     TRISHbits.TRISH0 = 0;
   773   00219A  9088               	bcf	136,0,c	;volatile
   774   00219C                     
   775                           ;main.c: 56:     LATHbits.LATH0 = 0;
   776   00219C  9080               	bcf	128,0,c	;volatile
   777   00219E                     
   778                           ;main.c: 58:     TRISFbits.TRISF0 = 0;
   779   00219E  9086               	bcf	134,0,c	;volatile
   780   0021A0                     
   781                           ;main.c: 59:     LATFbits.LATF0 = 0;
   782   0021A0  907E               	bcf	126,0,c	;volatile
   783   0021A2                     
   784                           ;main.c: 61:     motor_return = 0;
   785   0021A2  0E00               	movlw	0
   786   0021A4  0100               	movlb	0	; () banked
   787   0021A6  6FA2               	movwf	_motor_return& (0+255),b
   788   0021A8                     l3106:
   789                           
   790                           ; BSR set to: 0
   791                           ;main.c: 64:         fullSpeedAhead(&mL, &mR);
   792   0021A8  0ED4               	movlw	low main@mL
   793   0021AA  6E1C               	movwf	fullSpeedAhead@mL^0,c
   794   0021AC  0E00               	movlw	high main@mL
   795   0021AE  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   796   0021B0  0EDD               	movlw	low main@mR
   797   0021B2  6E1E               	movwf	fullSpeedAhead@mR^0,c
   798   0021B4  0E00               	movlw	high main@mR
   799   0021B6  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   800   0021B8  EC0A  F015         	call	_fullSpeedAhead	;wreg free
   801   0021BC                     
   802                           ;main.c: 65:         if (interrupt_flag == 1 && interrupt_ctr>1) {
   803   0021BC  0100               	movlb	0	; () banked
   804   0021BE  05A0               	decf	_interrupt_flag& (0+255),w,b
   805   0021C0  11A1               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   806   0021C2  A4D8               	btfss	status,2,c
   807   0021C4  EFE6  F010         	goto	u2161
   808   0021C8  EFE8  F010         	goto	u2160
   809   0021CC                     u2161:
   810   0021CC  EFD4  F010         	goto	l3106
   811   0021D0                     u2160:
   812   0021D0                     
   813                           ; BSR set to: 0
   814   0021D0  BF9F               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   815   0021D2  EFF4  F010         	goto	u2171
   816   0021D6  519F               	movf	(_interrupt_ctr+1)& (0+255),w,b
   817   0021D8  E109               	bnz	u2170
   818   0021DA  0E02               	movlw	2
   819   0021DC  5D9E               	subwf	_interrupt_ctr& (0+255),w,b
   820   0021DE  A0D8               	btfss	status,0,c
   821   0021E0  EFF4  F010         	goto	u2171
   822   0021E4  EFF6  F010         	goto	u2170
   823   0021E8                     u2171:
   824   0021E8  EFD4  F010         	goto	l3106
   825   0021EC                     u2170:
   826   0021EC                     
   827                           ; BSR set to: 0
   828                           ;main.c: 66:             norm_stop(&mL, &mR);
   829   0021EC  0ED4               	movlw	low main@mL
   830   0021EE  6E1C               	movwf	norm_stop@mL^0,c
   831   0021F0  0E00               	movlw	high main@mL
   832   0021F2  6E1D               	movwf	(norm_stop@mL+1)^0,c
   833   0021F4  0EDD               	movlw	low main@mR
   834   0021F6  6E1E               	movwf	norm_stop@mR^0,c
   835   0021F8  0E00               	movlw	high main@mR
   836   0021FA  6E1F               	movwf	(norm_stop@mR+1)^0,c
   837   0021FC  EC34  F018         	call	_norm_stop	;wreg free
   838   002200                     
   839                           ;main.c: 67:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   840   002200  0E52               	movlw	82
   841   002202  6E2B               	movwf	(??_main+1)^0,c
   842   002204  0E2B               	movlw	43
   843   002206  6E2A               	movwf	??_main^0,c
   844   002208  0E00               	movlw	0
   845   00220A                     u2277:
   846   00220A  2EE8               	decfsz	wreg,f,c
   847   00220C  D7FE               	bra	u2277
   848   00220E  2E2A               	decfsz	??_main^0,f,c
   849   002210  D7FC               	bra	u2277
   850   002212  2E2B               	decfsz	(??_main+1)^0,f,c
   851   002214  D7FA               	bra	u2277
   852   002216  D000               	nop2	
   853   002218                     
   854                           ;main.c: 68:             LATDbits.LATD7 = 0;
   855   002218  9E7C               	bcf	124,7,c	;volatile
   856   00221A                     
   857                           ;main.c: 69:             if(motor_return == 0){
   858   00221A  0100               	movlb	0	; () banked
   859   00221C  51A2               	movf	_motor_return& (0+255),w,b
   860   00221E  A4D8               	btfss	status,2,c
   861   002220  EF14  F011         	goto	u2181
   862   002224  EF16  F011         	goto	u2180
   863   002228                     u2181:
   864   002228  EF4F  F011         	goto	l3128
   865   00222C                     u2180:
   866   00222C                     
   867                           ; BSR set to: 0
   868                           ;main.c: 70:                 color_read_RGBC(&RGBC);
   869   00222C  0EB4               	movlw	low main@RGBC
   870   00222E  6E22               	movwf	color_read_RGBC@temp^0,c
   871   002230  0E00               	movlw	high main@RGBC
   872   002232  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   873   002234  EC7F  F015         	call	_color_read_RGBC	;wreg free
   874                           
   875                           ;main.c: 71:                 color_normalise(&RGBC);
   876   002238  0EB4               	movlw	low main@RGBC
   877   00223A  6E22               	movwf	color_normalise@RGBC^0,c
   878   00223C  0E00               	movlw	high main@RGBC
   879   00223E  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   880   002240  EC63  F013         	call	_color_normalise	;wreg free
   881   002244                     
   882                           ;main.c: 72:                 LATHbits.LATH3 = !LATHbits.LATH3;
   883   002244  A680               	btfss	128,3,c	;volatile
   884   002246  EF27  F011         	goto	u2191
   885   00224A  EF2B  F011         	goto	u2190
   886   00224E                     u2191:
   887   00224E  6A2A               	clrf	??_main^0,c
   888   002250  2A2A               	incf	??_main^0,f,c
   889   002252  EF2C  F011         	goto	u2208
   890   002256                     u2190:
   891   002256  6A2A               	clrf	??_main^0,c
   892   002258                     u2208:
   893   002258  462A               	rlncf	??_main^0,f,c
   894   00225A  462A               	rlncf	??_main^0,f,c
   895   00225C  462A               	rlncf	??_main^0,f,c
   896   00225E  5080               	movf	128,w,c	;volatile
   897   002260  182A               	xorwf	??_main^0,w,c
   898   002262  0BF7               	andlw	-9
   899   002264  182A               	xorwf	??_main^0,w,c
   900   002266  6E80               	movwf	128,c	;volatile
   901   002268                     
   902                           ;main.c: 73:                 buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   903   002268  0EB4               	movlw	low main@RGBC
   904   00226A  6E21               	movwf	motor_response@temp^0,c
   905   00226C  0E00               	movlw	high main@RGBC
   906   00226E  6E22               	movwf	(motor_response@temp+1)^0,c
   907   002270  0ED4               	movlw	low main@mL
   908   002272  6E23               	movwf	motor_response@mL^0,c
   909   002274  0E00               	movlw	high main@mL
   910   002276  6E24               	movwf	(motor_response@mL+1)^0,c
   911   002278  0EDD               	movlw	low main@mR
   912   00227A  6E25               	movwf	motor_response@mR^0,c
   913   00227C  0E00               	movlw	high main@mR
   914   00227E  6E26               	movwf	(motor_response@mR+1)^0,c
   915   002280  EC0C  F007         	call	_motor_response	;wreg free
   916   002284  6E2A               	movwf	??_main^0,c
   917   002286  0EA3               	movlw	low _buggy_path
   918   002288  2448               	addwf	_ctr^0,w,c
   919   00228A  6ED9               	movwf	fsr2l,c
   920   00228C  0E00               	movlw	high _buggy_path
   921   00228E  2049               	addwfc	(_ctr+1)^0,w,c
   922   002290  6EDA               	movwf	fsr2h,c
   923   002292  C02A  FFDF         	movff	??_main,indf2
   924   002296                     
   925                           ;main.c: 74:                 ctr++;
   926   002296  4A48               	infsnz	_ctr^0,f,c
   927   002298  2A49               	incf	(_ctr+1)^0,f,c
   928                           
   929                           ;main.c: 75:             } else {
   930   00229A  EFC9  F011         	goto	l3150
   931   00229E                     l3128:
   932                           
   933                           ; BSR set to: 0
   934                           ;main.c: 76:                 motor_retrace(&buggy_path, &mL, &mR);
   935   00229E  0EA3               	movlw	low _buggy_path
   936   0022A0  6E21               	movwf	motor_retrace@buggy_path^0,c
   937   0022A2  0E00               	movlw	high _buggy_path
   938   0022A4  6E22               	movwf	(motor_retrace@buggy_path+1)^0,c
   939   0022A6  0ED4               	movlw	low main@mL
   940   0022A8  6E23               	movwf	motor_retrace@mL^0,c
   941   0022AA  0E00               	movlw	high main@mL
   942   0022AC  6E24               	movwf	(motor_retrace@mL+1)^0,c
   943   0022AE  0EDD               	movlw	low main@mR
   944   0022B0  6E25               	movwf	motor_retrace@mR^0,c
   945   0022B2  0E00               	movlw	high main@mR
   946   0022B4  6E26               	movwf	(motor_retrace@mR+1)^0,c
   947   0022B6  ECA7  F00C         	call	_motor_retrace	;wreg free
   948   0022BA                     
   949                           ;main.c: 77:                 ctr--;
   950   0022BA  0648               	decf	_ctr^0,f,c
   951   0022BC  A0D8               	btfss	status,0,c
   952   0022BE  0649               	decf	(_ctr+1)^0,f,c
   953   0022C0                     
   954                           ;main.c: 78:                 if (ctr-1 == 0) {
   955   0022C0  0EFF               	movlw	255
   956   0022C2  2448               	addwf	_ctr^0,w,c
   957   0022C4  6E2A               	movwf	??_main^0,c
   958   0022C6  0EFF               	movlw	255
   959   0022C8  2049               	addwfc	(_ctr+1)^0,w,c
   960   0022CA  6E2B               	movwf	(??_main+1)^0,c
   961   0022CC  502A               	movf	??_main^0,w,c
   962   0022CE  102B               	iorwf	(??_main+1)^0,w,c
   963   0022D0  A4D8               	btfss	status,2,c
   964   0022D2  EF6D  F011         	goto	u2211
   965   0022D6  EF6F  F011         	goto	u2210
   966   0022DA                     u2211:
   967   0022DA  EFC9  F011         	goto	l3150
   968   0022DE                     u2210:
   969   0022DE                     
   970                           ;main.c: 79:                     fullSpeedAhead(&mL, &mR);
   971   0022DE  0ED4               	movlw	low main@mL
   972   0022E0  6E1C               	movwf	fullSpeedAhead@mL^0,c
   973   0022E2  0E00               	movlw	high main@mL
   974   0022E4  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   975   0022E6  0EDD               	movlw	low main@mR
   976   0022E8  6E1E               	movwf	fullSpeedAhead@mR^0,c
   977   0022EA  0E00               	movlw	high main@mR
   978   0022EC  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   979   0022EE  EC0A  F015         	call	_fullSpeedAhead	;wreg free
   980   0022F2                     
   981                           ;main.c: 80:                     _delay((unsigned long)((1000)*(64000000/4000.0)));
   982   0022F2  0E52               	movlw	82
   983   0022F4  6E2B               	movwf	(??_main+1)^0,c
   984   0022F6  0E2B               	movlw	43
   985   0022F8  6E2A               	movwf	??_main^0,c
   986   0022FA  0E00               	movlw	0
   987   0022FC                     u2287:
   988   0022FC  2EE8               	decfsz	wreg,f,c
   989   0022FE  D7FE               	bra	u2287
   990   002300  2E2A               	decfsz	??_main^0,f,c
   991   002302  D7FC               	bra	u2287
   992   002304  2E2B               	decfsz	(??_main+1)^0,f,c
   993   002306  D7FA               	bra	u2287
   994   002308  D000               	nop2	
   995   00230A                     
   996                           ;main.c: 81:                     norm_stop(&mL, &mR);
   997   00230A  0ED4               	movlw	low main@mL
   998   00230C  6E1C               	movwf	norm_stop@mL^0,c
   999   00230E  0E00               	movlw	high main@mL
  1000   002310  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1001   002312  0EDD               	movlw	low main@mR
  1002   002314  6E1E               	movwf	norm_stop@mR^0,c
  1003   002316  0E00               	movlw	high main@mR
  1004   002318  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1005   00231A  EC34  F018         	call	_norm_stop	;wreg free
  1006                           
  1007                           ;main.c: 82:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1008   00231E  0E29               	movlw	41
  1009   002320  6E2B               	movwf	(??_main+1)^0,c
  1010   002322  0E96               	movlw	150
  1011   002324  6E2A               	movwf	??_main^0,c
  1012   002326  0E7F               	movlw	127
  1013   002328                     u2297:
  1014   002328  2EE8               	decfsz	wreg,f,c
  1015   00232A  D7FE               	bra	u2297
  1016   00232C  2E2A               	decfsz	??_main^0,f,c
  1017   00232E  D7FC               	bra	u2297
  1018   002330  2E2B               	decfsz	(??_main+1)^0,f,c
  1019   002332  D7FA               	bra	u2297
  1020   002334  F000               	nop	
  1021   002336                     
  1022                           ;main.c: 83:                     turnLeft(&mL, &mR);
  1023   002336  0ED4               	movlw	low main@mL
  1024   002338  6E1C               	movwf	turnLeft@mL^0,c
  1025   00233A  0E00               	movlw	high main@mL
  1026   00233C  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1027   00233E  0EDD               	movlw	low main@mR
  1028   002340  6E1E               	movwf	turnLeft@mR^0,c
  1029   002342  0E00               	movlw	high main@mR
  1030   002344  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1031   002346  EC95  F016         	call	_turnLeft	;wreg free
  1032   00234A                     
  1033                           ;main.c: 84:                     _delay((unsigned long)((425)*(64000000/4000.0)));
  1034   00234A  0E23               	movlw	35
  1035   00234C  6E2B               	movwf	(??_main+1)^0,c
  1036   00234E  0E80               	movlw	128
  1037   002350  6E2A               	movwf	??_main^0,c
  1038   002352  0E12               	movlw	18
  1039   002354                     u2307:
  1040   002354  2EE8               	decfsz	wreg,f,c
  1041   002356  D7FE               	bra	u2307
  1042   002358  2E2A               	decfsz	??_main^0,f,c
  1043   00235A  D7FC               	bra	u2307
  1044   00235C  2E2B               	decfsz	(??_main+1)^0,f,c
  1045   00235E  D7FA               	bra	u2307
  1046   002360                     
  1047                           ;main.c: 86:                     motor_return = 0;
  1048   002360  0E00               	movlw	0
  1049   002362  0100               	movlb	0	; () banked
  1050   002364  6FA2               	movwf	_motor_return& (0+255),b
  1051   002366                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 87:                     norm_stop(&mL, &mR);
  1054   002366  0ED4               	movlw	low main@mL
  1055   002368  6E1C               	movwf	norm_stop@mL^0,c
  1056   00236A  0E00               	movlw	high main@mL
  1057   00236C  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1058   00236E  0EDD               	movlw	low main@mR
  1059   002370  6E1E               	movwf	norm_stop@mR^0,c
  1060   002372  0E00               	movlw	high main@mR
  1061   002374  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1062   002376  EC34  F018         	call	_norm_stop	;wreg free
  1063   00237A                     
  1064                           ;main.c: 88:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1065   00237A  0EA3               	movlw	163
  1066   00237C  6E2B               	movwf	(??_main+1)^0,c
  1067   00237E  0E57               	movlw	87
  1068   002380  6E2A               	movwf	??_main^0,c
  1069   002382  0E02               	movlw	2
  1070   002384                     u2317:
  1071   002384  2EE8               	decfsz	wreg,f,c
  1072   002386  D7FE               	bra	u2317
  1073   002388  2E2A               	decfsz	??_main^0,f,c
  1074   00238A  D7FC               	bra	u2317
  1075   00238C  2E2B               	decfsz	(??_main+1)^0,f,c
  1076   00238E  D7FA               	bra	u2317
  1077   002390  D000               	nop2	
  1078   002392                     l3150:
  1079                           
  1080                           ;main.c: 91:             LATHbits.LATH3 = 0;
  1081   002392  9680               	bcf	128,3,c	;volatile
  1082   002394                     
  1083                           ;main.c: 92:             interrupt_flag = 0;
  1084   002394  0E00               	movlw	0
  1085   002396  0100               	movlb	0	; () banked
  1086   002398  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  1087   00239A  0E00               	movlw	0
  1088   00239C  6FA0               	movwf	_interrupt_flag& (0+255),b
  1089   00239E  EFD4  F010         	goto	l3106
  1090   0023A2  EF1B  F000         	goto	start
  1091   0023A6                     __end_of_main:
  1092                           	callstack 0
  1093                           
  1094 ;; *************** function _tricolorLED *****************
  1095 ;; Defined at:
  1096 ;;		line 109 in file "color.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		None
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used: 1
  1116 ;; Hardware stack levels required when called: 6
  1117 ;; This function calls:
  1118 ;;		Nothing
  1119 ;; This function is called by:
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text1
  1125   003234                     __ptext1:
  1126                           	callstack 0
  1127   003234                     _tricolorLED:
  1128                           	callstack 24
  1129   003234                     
  1130                           ;color.c: 111:     TRISGbits.TRISG0 = 0;
  1131   003234  9087               	bcf	135,0,c	;volatile
  1132                           
  1133                           ;color.c: 112:     LATGbits.LATG0 = 1;
  1134   003236  807F               	bsf	127,0,c	;volatile
  1135                           
  1136                           ;color.c: 113:     TRISAbits.TRISA4 = 0;
  1137   003238  9881               	bcf	129,4,c	;volatile
  1138                           
  1139                           ;color.c: 114:     LATAbits.LATA4 = 1;
  1140   00323A  8879               	bsf	121,4,c	;volatile
  1141                           
  1142                           ;color.c: 115:     TRISFbits.TRISF7 = 0;
  1143   00323C  9E86               	bcf	134,7,c	;volatile
  1144                           
  1145                           ;color.c: 116:     LATFbits.LATF7 = 1;
  1146   00323E  8E7E               	bsf	126,7,c	;volatile
  1147                           
  1148                           ;color.c: 117:     TRISAbits.TRISA3 = 0;
  1149   003240  9681               	bcf	129,3,c	;volatile
  1150                           
  1151                           ;color.c: 118:     LATAbits.LATA3 = 1;
  1152   003242  8679               	bsf	121,3,c	;volatile
  1153                           
  1154                           ;color.c: 119:     TRISEbits.TRISE7 = 0;
  1155   003244  9E85               	bcf	133,7,c	;volatile
  1156                           
  1157                           ;color.c: 120:     LATEbits.LATE7 = 1;
  1158   003246  8E7D               	bsf	125,7,c	;volatile
  1159   003248  0012               	return		;funcret
  1160   00324A                     __end_of_tricolorLED:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _persistence_register *****************
  1164 ;; Defined at:
  1165 ;;		line 46 in file "interrupts.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 9
  1186 ;; This function calls:
  1187 ;;		_color_writetoaddr
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text2
  1194   003260                     __ptext2:
  1195                           	callstack 0
  1196   003260                     _persistence_register:
  1197                           	callstack 21
  1198   003260                     
  1199                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  1200   003260  0E02               	movlw	2
  1201   003262  6E0B               	movwf	color_writetoaddr@value^0,c
  1202   003264  0E0C               	movlw	12
  1203   003266  ECE0  F018         	call	_color_writetoaddr
  1204   00326A  0012               	return		;funcret
  1205   00326C                     __end_of_persistence_register:
  1206                           	callstack 0
  1207                           
  1208 ;; *************** function _motor_retrace *****************
  1209 ;; Defined at:
  1210 ;;		line 238 in file "color.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  buggy_path      2   32[COMRAM] PTR unsigned char 
  1213 ;;		 -> buggy_path(15), 
  1214 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1215 ;;		 -> main@mL(9), 
  1216 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1217 ;;		 -> main@mR(9), 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;Total ram usage:        9 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 9
  1236 ;; This function calls:
  1237 ;;		_fullSpeedAhead
  1238 ;;		_norm_stop
  1239 ;;		_reverse
  1240 ;;		_turnLeft
  1241 ;;		_turnRight
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text3
  1248   00194E                     __ptext3:
  1249                           	callstack 0
  1250   00194E                     _motor_retrace:
  1251                           	callstack 21
  1252   00194E                     
  1253                           ;color.c: 239:         if (buggy_path[ctr - 2] == 1) {
  1254   00194E  5048               	movf	_ctr^0,w,c
  1255   001950  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1256   001952  6E27               	movwf	??_motor_retrace^0,c
  1257   001954  5049               	movf	(_ctr+1)^0,w,c
  1258   001956  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1259   001958  6E28               	movwf	(??_motor_retrace+1)^0,c
  1260   00195A  0EFE               	movlw	254
  1261   00195C  2427               	addwf	??_motor_retrace^0,w,c
  1262   00195E  6ED9               	movwf	fsr2l,c
  1263   001960  0EFF               	movlw	255
  1264   001962  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1265   001964  6EDA               	movwf	fsr2h,c
  1266   001966  04DE               	decf	postinc2,w,c
  1267   001968  A4D8               	btfss	status,2,c
  1268   00196A  EFB9  F00C         	goto	u2071
  1269   00196E  EFBB  F00C         	goto	u2070
  1270   001972                     u2071:
  1271   001972  EFFE  F00C         	goto	l2918
  1272   001976                     u2070:
  1273   001976                     
  1274                           ;color.c: 240:             reverse(mL, mR);
  1275   001976  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1276   00197A  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1277   00197E  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1278   001982  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1279   001986  EC8E  F014         	call	_reverse	;wreg free
  1280   00198A                     
  1281                           ;color.c: 241:             _delay((unsigned long)((400)*(64000000/4000.0)));
  1282   00198A  0E21               	movlw	33
  1283   00198C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1284   00198E  0E78               	movlw	120
  1285   001990  6E27               	movwf	??_motor_retrace^0,c
  1286   001992  0E98               	movlw	152
  1287   001994                     u2327:
  1288   001994  2EE8               	decfsz	wreg,f,c
  1289   001996  D7FE               	bra	u2327
  1290   001998  2E27               	decfsz	??_motor_retrace^0,f,c
  1291   00199A  D7FC               	bra	u2327
  1292   00199C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1293   00199E  D7FA               	bra	u2327
  1294   0019A0  D000               	nop2	
  1295   0019A2                     
  1296                           ;color.c: 242:             norm_stop(mL, mR);
  1297   0019A2  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1298   0019A6  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1299   0019AA  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1300   0019AE  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1301   0019B2  EC34  F018         	call	_norm_stop	;wreg free
  1302                           
  1303                           ;color.c: 243:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1304   0019B6  0E07               	movlw	7
  1305   0019B8  6E28               	movwf	(??_motor_retrace+1)^0,c
  1306   0019BA  0E7F               	movlw	127
  1307   0019BC  6E27               	movwf	??_motor_retrace^0,c
  1308   0019BE  0E50               	movlw	80
  1309   0019C0                     u2337:
  1310   0019C0  2EE8               	decfsz	wreg,f,c
  1311   0019C2  D7FE               	bra	u2337
  1312   0019C4  2E27               	decfsz	??_motor_retrace^0,f,c
  1313   0019C6  D7FC               	bra	u2337
  1314   0019C8  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1315   0019CA  D7FA               	bra	u2337
  1316   0019CC                     
  1317                           ;color.c: 244:             turnLeft(mL, mR);
  1318   0019CC  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1319   0019D0  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1320   0019D4  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1321   0019D8  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1322   0019DC  EC95  F016         	call	_turnLeft	;wreg free
  1323   0019E0                     
  1324                           ;color.c: 245:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1325   0019E0  0E15               	movlw	21
  1326   0019E2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1327   0019E4  0E4B               	movlw	75
  1328   0019E6  6E27               	movwf	??_motor_retrace^0,c
  1329   0019E8  0EBE               	movlw	190
  1330   0019EA                     u2347:
  1331   0019EA  2EE8               	decfsz	wreg,f,c
  1332   0019EC  D7FE               	bra	u2347
  1333   0019EE  2E27               	decfsz	??_motor_retrace^0,f,c
  1334   0019F0  D7FC               	bra	u2347
  1335   0019F2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1336   0019F4  D7FA               	bra	u2347
  1337   0019F6  D000               	nop2	
  1338                           
  1339                           ;color.c: 247:         } else if (buggy_path[ctr - 2] == 2) {
  1340   0019F8  EFAC  F00E         	goto	l153
  1341   0019FC                     l2918:
  1342   0019FC  5048               	movf	_ctr^0,w,c
  1343   0019FE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1344   001A00  6E27               	movwf	??_motor_retrace^0,c
  1345   001A02  5049               	movf	(_ctr+1)^0,w,c
  1346   001A04  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1347   001A06  6E28               	movwf	(??_motor_retrace+1)^0,c
  1348   001A08  0EFE               	movlw	254
  1349   001A0A  2427               	addwf	??_motor_retrace^0,w,c
  1350   001A0C  6ED9               	movwf	fsr2l,c
  1351   001A0E  0EFF               	movlw	255
  1352   001A10  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1353   001A12  6EDA               	movwf	fsr2h,c
  1354   001A14  0E02               	movlw	2
  1355   001A16  18DE               	xorwf	postinc2,w,c
  1356   001A18  A4D8               	btfss	status,2,c
  1357   001A1A  EF11  F00D         	goto	u2081
  1358   001A1E  EF13  F00D         	goto	u2080
  1359   001A22                     u2081:
  1360   001A22  EF55  F00D         	goto	l2930
  1361   001A26                     u2080:
  1362   001A26                     
  1363                           ;color.c: 248:             reverse(mL, mR);
  1364   001A26  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1365   001A2A  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1366   001A2E  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1367   001A32  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1368   001A36  EC8E  F014         	call	_reverse	;wreg free
  1369   001A3A                     
  1370                           ;color.c: 249:             _delay((unsigned long)((400)*(64000000/4000.0)));
  1371   001A3A  0E21               	movlw	33
  1372   001A3C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1373   001A3E  0E78               	movlw	120
  1374   001A40  6E27               	movwf	??_motor_retrace^0,c
  1375   001A42  0E98               	movlw	152
  1376   001A44                     u2357:
  1377   001A44  2EE8               	decfsz	wreg,f,c
  1378   001A46  D7FE               	bra	u2357
  1379   001A48  2E27               	decfsz	??_motor_retrace^0,f,c
  1380   001A4A  D7FC               	bra	u2357
  1381   001A4C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1382   001A4E  D7FA               	bra	u2357
  1383   001A50  D000               	nop2	
  1384   001A52                     
  1385                           ;color.c: 250:             norm_stop(mL, mR);
  1386   001A52  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1387   001A56  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1388   001A5A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1389   001A5E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1390   001A62  EC34  F018         	call	_norm_stop	;wreg free
  1391                           
  1392                           ;color.c: 251:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1393   001A66  0E07               	movlw	7
  1394   001A68  6E28               	movwf	(??_motor_retrace+1)^0,c
  1395   001A6A  0E7F               	movlw	127
  1396   001A6C  6E27               	movwf	??_motor_retrace^0,c
  1397   001A6E  0E50               	movlw	80
  1398   001A70                     u2367:
  1399   001A70  2EE8               	decfsz	wreg,f,c
  1400   001A72  D7FE               	bra	u2367
  1401   001A74  2E27               	decfsz	??_motor_retrace^0,f,c
  1402   001A76  D7FC               	bra	u2367
  1403   001A78  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1404   001A7A  D7FA               	bra	u2367
  1405   001A7C                     
  1406                           ;color.c: 252:             turnRight(mL, mR);
  1407   001A7C  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1408   001A80  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1409   001A84  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1410   001A88  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1411   001A8C  EC5C  F016         	call	_turnRight	;wreg free
  1412   001A90                     
  1413                           ;color.c: 253:             _delay((unsigned long)((220)*(64000000/4000.0)));
  1414   001A90  0E12               	movlw	18
  1415   001A92  6E28               	movwf	(??_motor_retrace+1)^0,c
  1416   001A94  0EDC               	movlw	220
  1417   001A96  6E27               	movwf	??_motor_retrace^0,c
  1418   001A98  0E60               	movlw	96
  1419   001A9A                     u2377:
  1420   001A9A  2EE8               	decfsz	wreg,f,c
  1421   001A9C  D7FE               	bra	u2377
  1422   001A9E  2E27               	decfsz	??_motor_retrace^0,f,c
  1423   001AA0  D7FC               	bra	u2377
  1424   001AA2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1425   001AA4  D7FA               	bra	u2377
  1426                           
  1427                           ;color.c: 255:         } else if (buggy_path[ctr - 2] == 3) {
  1428   001AA6  EFAC  F00E         	goto	l153
  1429   001AAA                     l2930:
  1430   001AAA  5048               	movf	_ctr^0,w,c
  1431   001AAC  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1432   001AAE  6E27               	movwf	??_motor_retrace^0,c
  1433   001AB0  5049               	movf	(_ctr+1)^0,w,c
  1434   001AB2  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1435   001AB4  6E28               	movwf	(??_motor_retrace+1)^0,c
  1436   001AB6  0EFE               	movlw	254
  1437   001AB8  2427               	addwf	??_motor_retrace^0,w,c
  1438   001ABA  6ED9               	movwf	fsr2l,c
  1439   001ABC  0EFF               	movlw	255
  1440   001ABE  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1441   001AC0  6EDA               	movwf	fsr2h,c
  1442   001AC2  0E03               	movlw	3
  1443   001AC4  18DE               	xorwf	postinc2,w,c
  1444   001AC6  A4D8               	btfss	status,2,c
  1445   001AC8  EF68  F00D         	goto	u2091
  1446   001ACC  EF6A  F00D         	goto	u2090
  1447   001AD0                     u2091:
  1448   001AD0  EFAC  F00D         	goto	l2942
  1449   001AD4                     u2090:
  1450   001AD4                     
  1451                           ;color.c: 256:             reverse(mL, mR);
  1452   001AD4  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1453   001AD8  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1454   001ADC  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1455   001AE0  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1456   001AE4  EC8E  F014         	call	_reverse	;wreg free
  1457   001AE8                     
  1458                           ;color.c: 257:             _delay((unsigned long)((400)*(64000000/4000.0)));
  1459   001AE8  0E21               	movlw	33
  1460   001AEA  6E28               	movwf	(??_motor_retrace+1)^0,c
  1461   001AEC  0E78               	movlw	120
  1462   001AEE  6E27               	movwf	??_motor_retrace^0,c
  1463   001AF0  0E98               	movlw	152
  1464   001AF2                     u2387:
  1465   001AF2  2EE8               	decfsz	wreg,f,c
  1466   001AF4  D7FE               	bra	u2387
  1467   001AF6  2E27               	decfsz	??_motor_retrace^0,f,c
  1468   001AF8  D7FC               	bra	u2387
  1469   001AFA  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1470   001AFC  D7FA               	bra	u2387
  1471   001AFE  D000               	nop2	
  1472   001B00                     
  1473                           ;color.c: 258:             norm_stop(mL, mR);
  1474   001B00  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1475   001B04  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1476   001B08  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1477   001B0C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1478   001B10  EC34  F018         	call	_norm_stop	;wreg free
  1479                           
  1480                           ;color.c: 259:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1481   001B14  0E07               	movlw	7
  1482   001B16  6E28               	movwf	(??_motor_retrace+1)^0,c
  1483   001B18  0E7F               	movlw	127
  1484   001B1A  6E27               	movwf	??_motor_retrace^0,c
  1485   001B1C  0E50               	movlw	80
  1486   001B1E                     u2397:
  1487   001B1E  2EE8               	decfsz	wreg,f,c
  1488   001B20  D7FE               	bra	u2397
  1489   001B22  2E27               	decfsz	??_motor_retrace^0,f,c
  1490   001B24  D7FC               	bra	u2397
  1491   001B26  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1492   001B28  D7FA               	bra	u2397
  1493   001B2A                     
  1494                           ;color.c: 260:             turnRight(mL, mR);
  1495   001B2A  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1496   001B2E  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1497   001B32  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1498   001B36  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1499   001B3A  EC5C  F016         	call	_turnRight	;wreg free
  1500   001B3E                     
  1501                           ;color.c: 261:             _delay((unsigned long)((430)*(64000000/4000.0)));
  1502   001B3E  0E23               	movlw	35
  1503   001B40  6E28               	movwf	(??_motor_retrace+1)^0,c
  1504   001B42  0EE7               	movlw	231
  1505   001B44  6E27               	movwf	??_motor_retrace^0,c
  1506   001B46  0EF8               	movlw	248
  1507   001B48                     u2407:
  1508   001B48  2EE8               	decfsz	wreg,f,c
  1509   001B4A  D7FE               	bra	u2407
  1510   001B4C  2E27               	decfsz	??_motor_retrace^0,f,c
  1511   001B4E  D7FC               	bra	u2407
  1512   001B50  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1513   001B52  D7FA               	bra	u2407
  1514                           
  1515                           ;color.c: 263:         } else if (buggy_path[ctr - 2] == 4) {
  1516   001B54  EFAC  F00E         	goto	l153
  1517   001B58                     l2942:
  1518   001B58  5048               	movf	_ctr^0,w,c
  1519   001B5A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1520   001B5C  6E27               	movwf	??_motor_retrace^0,c
  1521   001B5E  5049               	movf	(_ctr+1)^0,w,c
  1522   001B60  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1523   001B62  6E28               	movwf	(??_motor_retrace+1)^0,c
  1524   001B64  0EFE               	movlw	254
  1525   001B66  2427               	addwf	??_motor_retrace^0,w,c
  1526   001B68  6ED9               	movwf	fsr2l,c
  1527   001B6A  0EFF               	movlw	255
  1528   001B6C  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1529   001B6E  6EDA               	movwf	fsr2h,c
  1530   001B70  0E04               	movlw	4
  1531   001B72  18DE               	xorwf	postinc2,w,c
  1532   001B74  A4D8               	btfss	status,2,c
  1533   001B76  EFBF  F00D         	goto	u2101
  1534   001B7A  EFC1  F00D         	goto	u2100
  1535   001B7E                     u2101:
  1536   001B7E  EF1B  F00E         	goto	l2956
  1537   001B82                     u2100:
  1538   001B82                     
  1539                           ;color.c: 264:             norm_stop(mL, mR);
  1540   001B82  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1541   001B86  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1542   001B8A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1543   001B8E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1544   001B92  EC34  F018         	call	_norm_stop	;wreg free
  1545   001B96                     
  1546                           ;color.c: 265:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1547   001B96  0E09               	movlw	9
  1548   001B98  6E28               	movwf	(??_motor_retrace+1)^0,c
  1549   001B9A  0E1E               	movlw	30
  1550   001B9C  6E27               	movwf	??_motor_retrace^0,c
  1551   001B9E  0EE4               	movlw	228
  1552   001BA0                     u2417:
  1553   001BA0  2EE8               	decfsz	wreg,f,c
  1554   001BA2  D7FE               	bra	u2417
  1555   001BA4  2E27               	decfsz	??_motor_retrace^0,f,c
  1556   001BA6  D7FC               	bra	u2417
  1557   001BA8  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1558   001BAA  D7FA               	bra	u2417
  1559   001BAC  D000               	nop2	
  1560   001BAE                     
  1561                           ;color.c: 266:             turnRight(mL, mR);
  1562   001BAE  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1563   001BB2  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1564   001BB6  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1565   001BBA  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1566   001BBE  EC5C  F016         	call	_turnRight	;wreg free
  1567                           
  1568                           ;color.c: 267:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1569   001BC2  0E15               	movlw	21
  1570   001BC4  6E28               	movwf	(??_motor_retrace+1)^0,c
  1571   001BC6  0E4B               	movlw	75
  1572   001BC8  6E27               	movwf	??_motor_retrace^0,c
  1573   001BCA  0EBE               	movlw	190
  1574   001BCC                     u2427:
  1575   001BCC  2EE8               	decfsz	wreg,f,c
  1576   001BCE  D7FE               	bra	u2427
  1577   001BD0  2E27               	decfsz	??_motor_retrace^0,f,c
  1578   001BD2  D7FC               	bra	u2427
  1579   001BD4  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1580   001BD6  D7FA               	bra	u2427
  1581   001BD8  D000               	nop2	
  1582   001BDA                     l2950:
  1583                           
  1584                           ;color.c: 268:             norm_stop(mL, mR);
  1585   001BDA  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1586   001BDE  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1587   001BE2  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1588   001BE6  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1589   001BEA  EC34  F018         	call	_norm_stop	;wreg free
  1590   001BEE                     
  1591                           ;color.c: 269:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1592   001BEE  0E09               	movlw	9
  1593   001BF0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1594   001BF2  0E1E               	movlw	30
  1595   001BF4  6E27               	movwf	??_motor_retrace^0,c
  1596   001BF6  0EE4               	movlw	228
  1597   001BF8                     u2437:
  1598   001BF8  2EE8               	decfsz	wreg,f,c
  1599   001BFA  D7FE               	bra	u2437
  1600   001BFC  2E27               	decfsz	??_motor_retrace^0,f,c
  1601   001BFE  D7FC               	bra	u2437
  1602   001C00  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1603   001C02  D7FA               	bra	u2437
  1604   001C04  D000               	nop2	
  1605                           
  1606                           ;color.c: 270:             fullSpeedAhead(mL, mR);
  1607   001C06  C023  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  1608   001C0A  C024  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  1609   001C0E  C025  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  1610   001C12  C026  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  1611   001C16  EC0A  F015         	call	_fullSpeedAhead	;wreg free
  1612   001C1A                     
  1613                           ;color.c: 271:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1614   001C1A  0EA3               	movlw	163
  1615   001C1C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1616   001C1E  0E57               	movlw	87
  1617   001C20  6E27               	movwf	??_motor_retrace^0,c
  1618   001C22  0E02               	movlw	2
  1619   001C24                     u2447:
  1620   001C24  2EE8               	decfsz	wreg,f,c
  1621   001C26  D7FE               	bra	u2447
  1622   001C28  2E27               	decfsz	??_motor_retrace^0,f,c
  1623   001C2A  D7FC               	bra	u2447
  1624   001C2C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1625   001C2E  D7FA               	bra	u2447
  1626   001C30  D000               	nop2	
  1627                           
  1628                           ;color.c: 274:         } else if (buggy_path[ctr - 2] == 5) {
  1629   001C32  EFAC  F00E         	goto	l153
  1630   001C36                     l2956:
  1631   001C36  5048               	movf	_ctr^0,w,c
  1632   001C38  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1633   001C3A  6E27               	movwf	??_motor_retrace^0,c
  1634   001C3C  5049               	movf	(_ctr+1)^0,w,c
  1635   001C3E  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1636   001C40  6E28               	movwf	(??_motor_retrace+1)^0,c
  1637   001C42  0EFE               	movlw	254
  1638   001C44  2427               	addwf	??_motor_retrace^0,w,c
  1639   001C46  6ED9               	movwf	fsr2l,c
  1640   001C48  0EFF               	movlw	255
  1641   001C4A  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1642   001C4C  6EDA               	movwf	fsr2h,c
  1643   001C4E  0E05               	movlw	5
  1644   001C50  18DE               	xorwf	postinc2,w,c
  1645   001C52  A4D8               	btfss	status,2,c
  1646   001C54  EF2E  F00E         	goto	u2111
  1647   001C58  EF30  F00E         	goto	u2110
  1648   001C5C                     u2111:
  1649   001C5C  EF5E  F00E         	goto	l2970
  1650   001C60                     u2110:
  1651   001C60                     
  1652                           ;color.c: 275:             norm_stop(mL, mR);
  1653   001C60  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1654   001C64  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1655   001C68  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1656   001C6C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1657   001C70  EC34  F018         	call	_norm_stop	;wreg free
  1658   001C74                     
  1659                           ;color.c: 276:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1660   001C74  0E09               	movlw	9
  1661   001C76  6E28               	movwf	(??_motor_retrace+1)^0,c
  1662   001C78  0E1E               	movlw	30
  1663   001C7A  6E27               	movwf	??_motor_retrace^0,c
  1664   001C7C  0EE4               	movlw	228
  1665   001C7E                     u2457:
  1666   001C7E  2EE8               	decfsz	wreg,f,c
  1667   001C80  D7FE               	bra	u2457
  1668   001C82  2E27               	decfsz	??_motor_retrace^0,f,c
  1669   001C84  D7FC               	bra	u2457
  1670   001C86  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1671   001C88  D7FA               	bra	u2457
  1672   001C8A  D000               	nop2	
  1673   001C8C                     
  1674                           ;color.c: 277:             turnLeft(mL, mR);
  1675   001C8C  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1676   001C90  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1677   001C94  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1678   001C98  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1679   001C9C  EC95  F016         	call	_turnLeft	;wreg free
  1680                           
  1681                           ;color.c: 278:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1682   001CA0  0E15               	movlw	21
  1683   001CA2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1684   001CA4  0E4B               	movlw	75
  1685   001CA6  6E27               	movwf	??_motor_retrace^0,c
  1686   001CA8  0EBE               	movlw	190
  1687   001CAA                     u2467:
  1688   001CAA  2EE8               	decfsz	wreg,f,c
  1689   001CAC  D7FE               	bra	u2467
  1690   001CAE  2E27               	decfsz	??_motor_retrace^0,f,c
  1691   001CB0  D7FC               	bra	u2467
  1692   001CB2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1693   001CB4  D7FA               	bra	u2467
  1694   001CB6  D000               	nop2	
  1695   001CB8  EFED  F00D         	goto	l2950
  1696   001CBC                     l2970:
  1697   001CBC  5048               	movf	_ctr^0,w,c
  1698   001CBE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1699   001CC0  6E27               	movwf	??_motor_retrace^0,c
  1700   001CC2  5049               	movf	(_ctr+1)^0,w,c
  1701   001CC4  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1702   001CC6  6E28               	movwf	(??_motor_retrace+1)^0,c
  1703   001CC8  0EFE               	movlw	254
  1704   001CCA  2427               	addwf	??_motor_retrace^0,w,c
  1705   001CCC  6ED9               	movwf	fsr2l,c
  1706   001CCE  0EFF               	movlw	255
  1707   001CD0  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1708   001CD2  6EDA               	movwf	fsr2h,c
  1709   001CD4  0E06               	movlw	6
  1710   001CD6  18DE               	xorwf	postinc2,w,c
  1711   001CD8  A4D8               	btfss	status,2,c
  1712   001CDA  EF71  F00E         	goto	u2121
  1713   001CDE  EF73  F00E         	goto	u2120
  1714   001CE2                     u2121:
  1715   001CE2  EF8B  F00E         	goto	l2976
  1716   001CE6                     u2120:
  1717   001CE6                     
  1718                           ;color.c: 285:             turnLeft(mL, mR);
  1719   001CE6  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1720   001CEA  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1721   001CEE  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1722   001CF2  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1723   001CF6  EC95  F016         	call	_turnLeft	;wreg free
  1724   001CFA                     l2974:
  1725                           
  1726                           ;color.c: 286:             _delay((unsigned long)((350)*(64000000/4000.0)));
  1727   001CFA  0E1D               	movlw	29
  1728   001CFC  6E28               	movwf	(??_motor_retrace+1)^0,c
  1729   001CFE  0E69               	movlw	105
  1730   001D00  6E27               	movwf	??_motor_retrace^0,c
  1731   001D02  0EA5               	movlw	165
  1732   001D04                     u2477:
  1733   001D04  2EE8               	decfsz	wreg,f,c
  1734   001D06  D7FE               	bra	u2477
  1735   001D08  2E27               	decfsz	??_motor_retrace^0,f,c
  1736   001D0A  D7FC               	bra	u2477
  1737   001D0C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1738   001D0E  D7FA               	bra	u2477
  1739   001D10  F000               	nop	
  1740                           
  1741                           ;color.c: 287:         } else if (buggy_path[ctr - 2] == 7) {
  1742   001D12  EFAC  F00E         	goto	l153
  1743   001D16                     l2976:
  1744   001D16  5048               	movf	_ctr^0,w,c
  1745   001D18  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1746   001D1A  6E27               	movwf	??_motor_retrace^0,c
  1747   001D1C  5049               	movf	(_ctr+1)^0,w,c
  1748   001D1E  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1749   001D20  6E28               	movwf	(??_motor_retrace+1)^0,c
  1750   001D22  0EFE               	movlw	254
  1751   001D24  2427               	addwf	??_motor_retrace^0,w,c
  1752   001D26  6ED9               	movwf	fsr2l,c
  1753   001D28  0EFF               	movlw	255
  1754   001D2A  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1755   001D2C  6EDA               	movwf	fsr2h,c
  1756   001D2E  0E07               	movlw	7
  1757   001D30  18DE               	xorwf	postinc2,w,c
  1758   001D32  A4D8               	btfss	status,2,c
  1759   001D34  EF9E  F00E         	goto	u2131
  1760   001D38  EFA0  F00E         	goto	u2130
  1761   001D3C                     u2131:
  1762   001D3C  EFAC  F00E         	goto	l147
  1763   001D40                     u2130:
  1764   001D40                     
  1765                           ;color.c: 288:             turnRight(mL, mR);
  1766   001D40  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1767   001D44  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1768   001D48  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1769   001D4C  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1770   001D50  EC5C  F016         	call	_turnRight	;wreg free
  1771   001D54  EF7D  F00E         	goto	l2974
  1772   001D58                     l147:
  1773   001D58                     l153:
  1774   001D58  0012               	return		;funcret
  1775   001D5A                     __end_of_motor_retrace:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _fullSpeedAhead *****************
  1779 ;; Defined at:
  1780 ;;		line 167 in file "dc_motor.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1783 ;;		 -> main@mL(9), 
  1784 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1785 ;;		 -> main@mR(9), 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;Total ram usage:        5 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 8
  1804 ;; This function calls:
  1805 ;;		_setMotorPWM
  1806 ;; This function is called by:
  1807 ;;		_motor_retrace
  1808 ;;		_main
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           	psect	text4
  1813   002A14                     __ptext4:
  1814                           	callstack 0
  1815   002A14                     _fullSpeedAhead:
  1816                           	callstack 21
  1817   002A14                     
  1818                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power =5;
  1819   002A14  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1820   002A18  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1821   002A1C  0E05               	movlw	5
  1822   002A1E  6EDF               	movwf	indf2,c
  1823                           
  1824                           ;dc_motor.c: 170:     mR->power = 5;
  1825   002A20  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1826   002A24  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1827   002A28  0E05               	movlw	5
  1828   002A2A  6EDF               	movwf	indf2,c
  1829   002A2C                     
  1830                           ;dc_motor.c: 171:     mR->direction = 1;
  1831   002A2C  EE20 F001          	lfsr	2,1
  1832   002A30  501E               	movf	fullSpeedAhead@mR^0,w,c
  1833   002A32  26D9               	addwf	fsr2l,f,c
  1834   002A34  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1835   002A36  22DA               	addwfc	fsr2h,f,c
  1836   002A38  0E01               	movlw	1
  1837   002A3A  6EDF               	movwf	indf2,c
  1838   002A3C                     
  1839                           ;dc_motor.c: 172:     mL->direction = 1;
  1840   002A3C  EE20 F001          	lfsr	2,1
  1841   002A40  501C               	movf	fullSpeedAhead@mL^0,w,c
  1842   002A42  26D9               	addwf	fsr2l,f,c
  1843   002A44  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1844   002A46  22DA               	addwfc	fsr2h,f,c
  1845   002A48  0E01               	movlw	1
  1846   002A4A  6EDF               	movwf	indf2,c
  1847   002A4C                     
  1848                           ;dc_motor.c: 173:     mL->brakemode = 1;
  1849   002A4C  EE20 F002          	lfsr	2,2
  1850   002A50  501C               	movf	fullSpeedAhead@mL^0,w,c
  1851   002A52  26D9               	addwf	fsr2l,f,c
  1852   002A54  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1853   002A56  22DA               	addwfc	fsr2h,f,c
  1854   002A58  0E01               	movlw	1
  1855   002A5A  6EDF               	movwf	indf2,c
  1856   002A5C                     
  1857                           ;dc_motor.c: 174:     mR->brakemode = 1;
  1858   002A5C  EE20 F002          	lfsr	2,2
  1859   002A60  501E               	movf	fullSpeedAhead@mR^0,w,c
  1860   002A62  26D9               	addwf	fsr2l,f,c
  1861   002A64  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1862   002A66  22DA               	addwfc	fsr2h,f,c
  1863   002A68  0E01               	movlw	1
  1864   002A6A  6EDF               	movwf	indf2,c
  1865                           
  1866                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  1867   002A6C  EF4E  F015         	goto	l2494
  1868   002A70                     l2488:
  1869                           
  1870                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  1871   002A70  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1872   002A74  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1873   002A78  2ADF               	incf	indf2,f,c
  1874                           
  1875                           ;dc_motor.c: 178:         mR->power++;
  1876   002A7A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1877   002A7E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1878   002A82  2ADF               	incf	indf2,f,c
  1879   002A84                     
  1880                           ;dc_motor.c: 180:         setMotorPWM(mL);
  1881   002A84  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1882   002A88  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1883   002A8C  ECAD  F012         	call	_setMotorPWM	;wreg free
  1884   002A90                     
  1885                           ;dc_motor.c: 181:         setMotorPWM(mR);
  1886   002A90  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1887   002A94  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1888   002A98  ECAD  F012         	call	_setMotorPWM	;wreg free
  1889   002A9C                     l2494:
  1890                           
  1891                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  1892   002A9C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1893   002AA0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1894   002AA4  0E2E               	movlw	46
  1895   002AA6  60DF               	cpfslt	indf2,c
  1896   002AA8  EF58  F015         	goto	u1311
  1897   002AAC  EF5A  F015         	goto	u1310
  1898   002AB0                     u1311:
  1899   002AB0  EF66  F015         	goto	l2498
  1900   002AB4                     u1310:
  1901   002AB4  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1902   002AB8  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1903   002ABC  0E2D               	movlw	45
  1904   002ABE  64DF               	cpfsgt	indf2,c
  1905   002AC0  EF64  F015         	goto	u1321
  1906   002AC4  EF66  F015         	goto	u1320
  1907   002AC8                     u1321:
  1908   002AC8  EF38  F015         	goto	l2488
  1909   002ACC                     u1320:
  1910   002ACC                     l2498:
  1911                           
  1912                           ;dc_motor.c: 183:     mL->power = 45;
  1913   002ACC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1914   002AD0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1915   002AD4  0E2D               	movlw	45
  1916   002AD6  6EDF               	movwf	indf2,c
  1917                           
  1918                           ;dc_motor.c: 184:     mR->power = 45;
  1919   002AD8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1920   002ADC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1921   002AE0  0E2D               	movlw	45
  1922   002AE2  6EDF               	movwf	indf2,c
  1923   002AE4                     
  1924                           ;dc_motor.c: 185:     setMotorPWM(mL);
  1925   002AE4  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1926   002AE8  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1927   002AEC  ECAD  F012         	call	_setMotorPWM	;wreg free
  1928   002AF0                     
  1929                           ;dc_motor.c: 186:     setMotorPWM(mR);
  1930   002AF0  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1931   002AF4  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1932   002AF8  ECAD  F012         	call	_setMotorPWM	;wreg free
  1933   002AFC  0012               	return		;funcret
  1934   002AFE                     __end_of_fullSpeedAhead:
  1935                           	callstack 0
  1936                           
  1937 ;; *************** function _motor_response *****************
  1938 ;; Defined at:
  1939 ;;		line 137 in file "color.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;  temp            2   32[COMRAM] PTR struct RGBC_val
  1942 ;;		 -> main@RGBC(32), 
  1943 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1944 ;;		 -> main@mL(9), 
  1945 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1946 ;;		 -> main@mR(9), 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;		None
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      unsigned char 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1958 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1961 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1962 ;;Total ram usage:        8 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 9
  1965 ;; This function calls:
  1966 ;;		___flge
  1967 ;;		_norm_stop
  1968 ;;		_reverse
  1969 ;;		_turnLeft
  1970 ;;		_turnRight
  1971 ;; This function is called by:
  1972 ;;		_main
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	text5
  1977   000E18                     __ptext5:
  1978                           	callstack 0
  1979   000E18                     _motor_response:
  1980                           	callstack 21
  1981   000E18                     
  1982                           ;color.c: 139:     if (temp->norm_C < 6 && temp-> norm_C > 1.5) {
  1983   000E18  EE20 F01C          	lfsr	2,28
  1984   000E1C  5021               	movf	motor_response@temp^0,w,c
  1985   000E1E  26D9               	addwf	fsr2l,f,c
  1986   000E20  5022               	movf	(motor_response@temp+1)^0,w,c
  1987   000E22  22DA               	addwfc	fsr2h,f,c
  1988   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  1989   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1990   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1991   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1992   000E34  0E00               	movlw	0
  1993   000E36  6E0D               	movwf	___flge@ff2^0,c
  1994   000E38  0E00               	movlw	0
  1995   000E3A  6E0E               	movwf	(___flge@ff2+1)^0,c
  1996   000E3C  0EC0               	movlw	192
  1997   000E3E  6E0F               	movwf	(___flge@ff2+2)^0,c
  1998   000E40  0E40               	movlw	64
  1999   000E42  6E10               	movwf	(___flge@ff2+3)^0,c
  2000   000E44  EC0C  F014         	call	___flge	;wreg free
  2001   000E48  B0D8               	btfsc	status,0,c
  2002   000E4A  EF29  F007         	goto	u1711
  2003   000E4E  EF2B  F007         	goto	u1710
  2004   000E52                     u1711:
  2005   000E52  EF2E  F009         	goto	l2802
  2006   000E56                     u1710:
  2007   000E56  0E00               	movlw	0
  2008   000E58  6E09               	movwf	___flge@ff1^0,c
  2009   000E5A  0E00               	movlw	0
  2010   000E5C  6E0A               	movwf	(___flge@ff1+1)^0,c
  2011   000E5E  0EC0               	movlw	192
  2012   000E60  6E0B               	movwf	(___flge@ff1+2)^0,c
  2013   000E62  0E3F               	movlw	63
  2014   000E64  6E0C               	movwf	(___flge@ff1+3)^0,c
  2015   000E66  EE20 F01C          	lfsr	2,28
  2016   000E6A  5021               	movf	motor_response@temp^0,w,c
  2017   000E6C  26D9               	addwf	fsr2l,f,c
  2018   000E6E  5022               	movf	(motor_response@temp+1)^0,w,c
  2019   000E70  22DA               	addwfc	fsr2h,f,c
  2020   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  2021   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2022   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2023   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  2024   000E82  EC0C  F014         	call	___flge	;wreg free
  2025   000E86  B0D8               	btfsc	status,0,c
  2026   000E88  EF48  F007         	goto	u1721
  2027   000E8C  EF4A  F007         	goto	u1720
  2028   000E90                     u1721:
  2029   000E90  EF2E  F009         	goto	l2802
  2030   000E94                     u1720:
  2031   000E94                     
  2032                           ;color.c: 140:         if (temp->norm_G > 8) {
  2033   000E94  0E00               	movlw	0
  2034   000E96  6E09               	movwf	___flge@ff1^0,c
  2035   000E98  0E00               	movlw	0
  2036   000E9A  6E0A               	movwf	(___flge@ff1+1)^0,c
  2037   000E9C  0E00               	movlw	0
  2038   000E9E  6E0B               	movwf	(___flge@ff1+2)^0,c
  2039   000EA0  0E41               	movlw	65
  2040   000EA2  6E0C               	movwf	(___flge@ff1+3)^0,c
  2041   000EA4  EE20 F014          	lfsr	2,20
  2042   000EA8  5021               	movf	motor_response@temp^0,w,c
  2043   000EAA  26D9               	addwf	fsr2l,f,c
  2044   000EAC  5022               	movf	(motor_response@temp+1)^0,w,c
  2045   000EAE  22DA               	addwfc	fsr2h,f,c
  2046   000EB0  CFDE F00D          	movff	postinc2,___flge@ff2
  2047   000EB4  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2048   000EB8  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2049   000EBC  CFDE F010          	movff	postinc2,___flge@ff2+3
  2050   000EC0  EC0C  F014         	call	___flge	;wreg free
  2051   000EC4  B0D8               	btfsc	status,0,c
  2052   000EC6  EF67  F007         	goto	u1731
  2053   000ECA  EF69  F007         	goto	u1730
  2054   000ECE                     u1731:
  2055   000ECE  EFAE  F007         	goto	l2756
  2056   000ED2                     u1730:
  2057   000ED2                     
  2058                           ;color.c: 141:             reverse(mL, mR);
  2059   000ED2  C023  F01C         	movff	motor_response@mL,reverse@mL
  2060   000ED6  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2061   000EDA  C025  F01E         	movff	motor_response@mR,reverse@mR
  2062   000EDE  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2063   000EE2  EC8E  F014         	call	_reverse	;wreg free
  2064   000EE6                     
  2065                           ;color.c: 142:             _delay((unsigned long)((400)*(64000000/4000.0)));
  2066   000EE6  0E21               	movlw	33
  2067   000EE8  6E28               	movwf	(??_motor_response+1)^0,c
  2068   000EEA  0E78               	movlw	120
  2069   000EEC  6E27               	movwf	??_motor_response^0,c
  2070   000EEE  0E98               	movlw	152
  2071   000EF0                     u2487:
  2072   000EF0  2EE8               	decfsz	wreg,f,c
  2073   000EF2  D7FE               	bra	u2487
  2074   000EF4  2E27               	decfsz	??_motor_response^0,f,c
  2075   000EF6  D7FC               	bra	u2487
  2076   000EF8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2077   000EFA  D7FA               	bra	u2487
  2078   000EFC  D000               	nop2	
  2079   000EFE                     
  2080                           ;color.c: 143:             norm_stop(mL, mR);
  2081   000EFE  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2082   000F02  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2083   000F06  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2084   000F0A  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2085   000F0E  EC34  F018         	call	_norm_stop	;wreg free
  2086                           
  2087                           ;color.c: 144:             _delay((unsigned long)((80)*(64000000/4000.0)));
  2088   000F12  0E07               	movlw	7
  2089   000F14  6E28               	movwf	(??_motor_response+1)^0,c
  2090   000F16  0E7F               	movlw	127
  2091   000F18  6E27               	movwf	??_motor_response^0,c
  2092   000F1A  0E50               	movlw	80
  2093   000F1C                     u2497:
  2094   000F1C  2EE8               	decfsz	wreg,f,c
  2095   000F1E  D7FE               	bra	u2497
  2096   000F20  2E27               	decfsz	??_motor_response^0,f,c
  2097   000F22  D7FC               	bra	u2497
  2098   000F24  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2099   000F26  D7FA               	bra	u2497
  2100   000F28                     
  2101                           ;color.c: 145:             turnRight(mL, mR);
  2102   000F28  C023  F01C         	movff	motor_response@mL,turnRight@mL
  2103   000F2C  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2104   000F30  C025  F01E         	movff	motor_response@mR,turnRight@mR
  2105   000F34  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2106   000F38  EC5C  F016         	call	_turnRight	;wreg free
  2107   000F3C                     
  2108                           ;color.c: 146:             _delay((unsigned long)((220)*(64000000/4000.0)));
  2109   000F3C  0E12               	movlw	18
  2110   000F3E  6E28               	movwf	(??_motor_response+1)^0,c
  2111   000F40  0EDC               	movlw	220
  2112   000F42  6E27               	movwf	??_motor_response^0,c
  2113   000F44  0E60               	movlw	96
  2114   000F46                     u2507:
  2115   000F46  2EE8               	decfsz	wreg,f,c
  2116   000F48  D7FE               	bra	u2507
  2117   000F4A  2E27               	decfsz	??_motor_response^0,f,c
  2118   000F4C  D7FC               	bra	u2507
  2119   000F4E  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2120   000F50  D7FA               	bra	u2507
  2121   000F52                     
  2122                           ;color.c: 147:             return 1;
  2123   000F52  0E01               	movlw	1
  2124   000F54  EFA6  F00C         	goto	l123
  2125   000F58                     l2752:
  2126   000F58  EFA6  F00C         	goto	l123
  2127   000F5C                     l2756:
  2128   000F5C  0E00               	movlw	0
  2129   000F5E  6E09               	movwf	___flge@ff1^0,c
  2130   000F60  0E00               	movlw	0
  2131   000F62  6E0A               	movwf	(___flge@ff1+1)^0,c
  2132   000F64  0E90               	movlw	144
  2133   000F66  6E0B               	movwf	(___flge@ff1+2)^0,c
  2134   000F68  0E40               	movlw	64
  2135   000F6A  6E0C               	movwf	(___flge@ff1+3)^0,c
  2136   000F6C  EE20 F018          	lfsr	2,24
  2137   000F70  5021               	movf	motor_response@temp^0,w,c
  2138   000F72  26D9               	addwf	fsr2l,f,c
  2139   000F74  5022               	movf	(motor_response@temp+1)^0,w,c
  2140   000F76  22DA               	addwfc	fsr2h,f,c
  2141   000F78  CFDE F00D          	movff	postinc2,___flge@ff2
  2142   000F7C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2143   000F80  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2144   000F84  CFDE F010          	movff	postinc2,___flge@ff2+3
  2145   000F88  EC0C  F014         	call	___flge	;wreg free
  2146   000F8C  B0D8               	btfsc	status,0,c
  2147   000F8E  EFCB  F007         	goto	u1741
  2148   000F92  EFCD  F007         	goto	u1740
  2149   000F96                     u1741:
  2150   000F96  EF30  F008         	goto	l2776
  2151   000F9A                     u1740:
  2152   000F9A  EE20 F018          	lfsr	2,24
  2153   000F9E  5021               	movf	motor_response@temp^0,w,c
  2154   000FA0  26D9               	addwf	fsr2l,f,c
  2155   000FA2  5022               	movf	(motor_response@temp+1)^0,w,c
  2156   000FA4  22DA               	addwfc	fsr2h,f,c
  2157   000FA6  CFDE F009          	movff	postinc2,___flge@ff1
  2158   000FAA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2159   000FAE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2160   000FB2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2161   000FB6  0E00               	movlw	0
  2162   000FB8  6E0D               	movwf	___flge@ff2^0,c
  2163   000FBA  0E00               	movlw	0
  2164   000FBC  6E0E               	movwf	(___flge@ff2+1)^0,c
  2165   000FBE  0EB0               	movlw	176
  2166   000FC0  6E0F               	movwf	(___flge@ff2+2)^0,c
  2167   000FC2  0E40               	movlw	64
  2168   000FC4  6E10               	movwf	(___flge@ff2+3)^0,c
  2169   000FC6  EC0C  F014         	call	___flge	;wreg free
  2170   000FCA  B0D8               	btfsc	status,0,c
  2171   000FCC  EFEA  F007         	goto	u1751
  2172   000FD0  EFEC  F007         	goto	u1750
  2173   000FD4                     u1751:
  2174   000FD4  EF30  F008         	goto	l2776
  2175   000FD8                     u1750:
  2176   000FD8                     
  2177                           ;color.c: 150:             reverse(mL, mR);
  2178   000FD8  C023  F01C         	movff	motor_response@mL,reverse@mL
  2179   000FDC  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2180   000FE0  C025  F01E         	movff	motor_response@mR,reverse@mR
  2181   000FE4  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2182   000FE8  EC8E  F014         	call	_reverse	;wreg free
  2183   000FEC                     
  2184                           ;color.c: 151:             _delay((unsigned long)((400)*(64000000/4000.0)));
  2185   000FEC  0E21               	movlw	33
  2186   000FEE  6E28               	movwf	(??_motor_response+1)^0,c
  2187   000FF0  0E78               	movlw	120
  2188   000FF2  6E27               	movwf	??_motor_response^0,c
  2189   000FF4  0E98               	movlw	152
  2190   000FF6                     u2517:
  2191   000FF6  2EE8               	decfsz	wreg,f,c
  2192   000FF8  D7FE               	bra	u2517
  2193   000FFA  2E27               	decfsz	??_motor_response^0,f,c
  2194   000FFC  D7FC               	bra	u2517
  2195   000FFE  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2196   001000  D7FA               	bra	u2517
  2197   001002  D000               	nop2	
  2198   001004                     
  2199                           ;color.c: 152:             norm_stop(mL, mR);
  2200   001004  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2201   001008  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2202   00100C  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2203   001010  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2204   001014  EC34  F018         	call	_norm_stop	;wreg free
  2205                           
  2206                           ;color.c: 153:             _delay((unsigned long)((80)*(64000000/4000.0)));
  2207   001018  0E07               	movlw	7
  2208   00101A  6E28               	movwf	(??_motor_response+1)^0,c
  2209   00101C  0E7F               	movlw	127
  2210   00101E  6E27               	movwf	??_motor_response^0,c
  2211   001020  0E50               	movlw	80
  2212   001022                     u2527:
  2213   001022  2EE8               	decfsz	wreg,f,c
  2214   001024  D7FE               	bra	u2527
  2215   001026  2E27               	decfsz	??_motor_response^0,f,c
  2216   001028  D7FC               	bra	u2527
  2217   00102A  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2218   00102C  D7FA               	bra	u2527
  2219   00102E                     
  2220                           ;color.c: 154:             turnLeft(mL, mR);
  2221   00102E  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2222   001032  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2223   001036  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2224   00103A  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2225   00103E  EC95  F016         	call	_turnLeft	;wreg free
  2226   001042                     
  2227                           ;color.c: 155:             _delay((unsigned long)((250)*(64000000/4000.0)));
  2228   001042  0E15               	movlw	21
  2229   001044  6E28               	movwf	(??_motor_response+1)^0,c
  2230   001046  0E4B               	movlw	75
  2231   001048  6E27               	movwf	??_motor_response^0,c
  2232   00104A  0EBE               	movlw	190
  2233   00104C                     u2537:
  2234   00104C  2EE8               	decfsz	wreg,f,c
  2235   00104E  D7FE               	bra	u2537
  2236   001050  2E27               	decfsz	??_motor_response^0,f,c
  2237   001052  D7FC               	bra	u2537
  2238   001054  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2239   001056  D7FA               	bra	u2537
  2240   001058  D000               	nop2	
  2241   00105A                     
  2242                           ;color.c: 156:             return 2;
  2243   00105A  0E02               	movlw	2
  2244   00105C  EFA6  F00C         	goto	l123
  2245   001060                     l2776:
  2246   001060  0E33               	movlw	51
  2247   001062  6E09               	movwf	___flge@ff1^0,c
  2248   001064  0E33               	movlw	51
  2249   001066  6E0A               	movwf	(___flge@ff1+1)^0,c
  2250   001068  0E33               	movlw	51
  2251   00106A  6E0B               	movwf	(___flge@ff1+2)^0,c
  2252   00106C  0E40               	movlw	64
  2253   00106E  6E0C               	movwf	(___flge@ff1+3)^0,c
  2254   001070  EE20 F018          	lfsr	2,24
  2255   001074  5021               	movf	motor_response@temp^0,w,c
  2256   001076  26D9               	addwf	fsr2l,f,c
  2257   001078  5022               	movf	(motor_response@temp+1)^0,w,c
  2258   00107A  22DA               	addwfc	fsr2h,f,c
  2259   00107C  CFDE F00D          	movff	postinc2,___flge@ff2
  2260   001080  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2261   001084  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2262   001088  CFDE F010          	movff	postinc2,___flge@ff2+3
  2263   00108C  EC0C  F014         	call	___flge	;wreg free
  2264   001090  B0D8               	btfsc	status,0,c
  2265   001092  EF4D  F008         	goto	u1761
  2266   001096  EF4F  F008         	goto	u1760
  2267   00109A                     u1761:
  2268   00109A  EFAC  F007         	goto	l2752
  2269   00109E                     u1760:
  2270   00109E  EE20 F018          	lfsr	2,24
  2271   0010A2  5021               	movf	motor_response@temp^0,w,c
  2272   0010A4  26D9               	addwf	fsr2l,f,c
  2273   0010A6  5022               	movf	(motor_response@temp+1)^0,w,c
  2274   0010A8  22DA               	addwfc	fsr2h,f,c
  2275   0010AA  CFDE F009          	movff	postinc2,___flge@ff1
  2276   0010AE  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2277   0010B2  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2278   0010B6  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2279   0010BA  0ECD               	movlw	205
  2280   0010BC  6E0D               	movwf	___flge@ff2^0,c
  2281   0010BE  0ECC               	movlw	204
  2282   0010C0  6E0E               	movwf	(___flge@ff2+1)^0,c
  2283   0010C2  0E4C               	movlw	76
  2284   0010C4  6E0F               	movwf	(___flge@ff2+2)^0,c
  2285   0010C6  0E40               	movlw	64
  2286   0010C8  6E10               	movwf	(___flge@ff2+3)^0,c
  2287   0010CA  EC0C  F014         	call	___flge	;wreg free
  2288   0010CE  B0D8               	btfsc	status,0,c
  2289   0010D0  EF6C  F008         	goto	u1771
  2290   0010D4  EF6E  F008         	goto	u1770
  2291   0010D8                     u1771:
  2292   0010D8  EFAC  F007         	goto	l2752
  2293   0010DC                     u1770:
  2294   0010DC  0E33               	movlw	51
  2295   0010DE  6E09               	movwf	___flge@ff1^0,c
  2296   0010E0  0E33               	movlw	51
  2297   0010E2  6E0A               	movwf	(___flge@ff1+1)^0,c
  2298   0010E4  0E33               	movlw	51
  2299   0010E6  6E0B               	movwf	(___flge@ff1+2)^0,c
  2300   0010E8  0E40               	movlw	64
  2301   0010EA  6E0C               	movwf	(___flge@ff1+3)^0,c
  2302   0010EC  EE20 F010          	lfsr	2,16
  2303   0010F0  5021               	movf	motor_response@temp^0,w,c
  2304   0010F2  26D9               	addwf	fsr2l,f,c
  2305   0010F4  5022               	movf	(motor_response@temp+1)^0,w,c
  2306   0010F6  22DA               	addwfc	fsr2h,f,c
  2307   0010F8  CFDE F00D          	movff	postinc2,___flge@ff2
  2308   0010FC  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2309   001100  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2310   001104  CFDE F010          	movff	postinc2,___flge@ff2+3
  2311   001108  EC0C  F014         	call	___flge	;wreg free
  2312   00110C  B0D8               	btfsc	status,0,c
  2313   00110E  EF8B  F008         	goto	u1781
  2314   001112  EF8D  F008         	goto	u1780
  2315   001116                     u1781:
  2316   001116  EFAC  F007         	goto	l2752
  2317   00111A                     u1780:
  2318   00111A  EE20 F010          	lfsr	2,16
  2319   00111E  5021               	movf	motor_response@temp^0,w,c
  2320   001120  26D9               	addwf	fsr2l,f,c
  2321   001122  5022               	movf	(motor_response@temp+1)^0,w,c
  2322   001124  22DA               	addwfc	fsr2h,f,c
  2323   001126  CFDE F009          	movff	postinc2,___flge@ff1
  2324   00112A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2325   00112E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2326   001132  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2327   001136  0ECD               	movlw	205
  2328   001138  6E0D               	movwf	___flge@ff2^0,c
  2329   00113A  0ECC               	movlw	204
  2330   00113C  6E0E               	movwf	(___flge@ff2+1)^0,c
  2331   00113E  0E4C               	movlw	76
  2332   001140  6E0F               	movwf	(___flge@ff2+2)^0,c
  2333   001142  0E40               	movlw	64
  2334   001144  6E10               	movwf	(___flge@ff2+3)^0,c
  2335   001146  EC0C  F014         	call	___flge	;wreg free
  2336   00114A  B0D8               	btfsc	status,0,c
  2337   00114C  EFAA  F008         	goto	u1791
  2338   001150  EFAC  F008         	goto	u1790
  2339   001154                     u1791:
  2340   001154  EFAC  F007         	goto	l2752
  2341   001158                     u1790:
  2342   001158  0E33               	movlw	51
  2343   00115A  6E09               	movwf	___flge@ff1^0,c
  2344   00115C  0E33               	movlw	51
  2345   00115E  6E0A               	movwf	(___flge@ff1+1)^0,c
  2346   001160  0E33               	movlw	51
  2347   001162  6E0B               	movwf	(___flge@ff1+2)^0,c
  2348   001164  0E40               	movlw	64
  2349   001166  6E0C               	movwf	(___flge@ff1+3)^0,c
  2350   001168  EE20 F014          	lfsr	2,20
  2351   00116C  5021               	movf	motor_response@temp^0,w,c
  2352   00116E  26D9               	addwf	fsr2l,f,c
  2353   001170  5022               	movf	(motor_response@temp+1)^0,w,c
  2354   001172  22DA               	addwfc	fsr2h,f,c
  2355   001174  CFDE F00D          	movff	postinc2,___flge@ff2
  2356   001178  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2357   00117C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2358   001180  CFDE F010          	movff	postinc2,___flge@ff2+3
  2359   001184  EC0C  F014         	call	___flge	;wreg free
  2360   001188  B0D8               	btfsc	status,0,c
  2361   00118A  EFC9  F008         	goto	u1801
  2362   00118E  EFCB  F008         	goto	u1800
  2363   001192                     u1801:
  2364   001192  EFAC  F007         	goto	l2752
  2365   001196                     u1800:
  2366   001196  EE20 F014          	lfsr	2,20
  2367   00119A  5021               	movf	motor_response@temp^0,w,c
  2368   00119C  26D9               	addwf	fsr2l,f,c
  2369   00119E  5022               	movf	(motor_response@temp+1)^0,w,c
  2370   0011A0  22DA               	addwfc	fsr2h,f,c
  2371   0011A2  CFDE F009          	movff	postinc2,___flge@ff1
  2372   0011A6  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2373   0011AA  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2374   0011AE  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2375   0011B2  0ECD               	movlw	205
  2376   0011B4  6E0D               	movwf	___flge@ff2^0,c
  2377   0011B6  0ECC               	movlw	204
  2378   0011B8  6E0E               	movwf	(___flge@ff2+1)^0,c
  2379   0011BA  0E4C               	movlw	76
  2380   0011BC  6E0F               	movwf	(___flge@ff2+2)^0,c
  2381   0011BE  0E40               	movlw	64
  2382   0011C0  6E10               	movwf	(___flge@ff2+3)^0,c
  2383   0011C2  EC0C  F014         	call	___flge	;wreg free
  2384   0011C6  B0D8               	btfsc	status,0,c
  2385   0011C8  EFE8  F008         	goto	u1811
  2386   0011CC  EFEA  F008         	goto	u1810
  2387   0011D0                     u1811:
  2388   0011D0  EFAC  F007         	goto	l2752
  2389   0011D4                     u1810:
  2390   0011D4                     
  2391                           ;color.c: 159:             reverse(mL, mR);
  2392   0011D4  C023  F01C         	movff	motor_response@mL,reverse@mL
  2393   0011D8  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2394   0011DC  C025  F01E         	movff	motor_response@mR,reverse@mR
  2395   0011E0  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2396   0011E4  EC8E  F014         	call	_reverse	;wreg free
  2397   0011E8                     
  2398                           ;color.c: 160:             _delay((unsigned long)((400)*(64000000/4000.0)));
  2399   0011E8  0E21               	movlw	33
  2400   0011EA  6E28               	movwf	(??_motor_response+1)^0,c
  2401   0011EC  0E78               	movlw	120
  2402   0011EE  6E27               	movwf	??_motor_response^0,c
  2403   0011F0  0E98               	movlw	152
  2404   0011F2                     u2547:
  2405   0011F2  2EE8               	decfsz	wreg,f,c
  2406   0011F4  D7FE               	bra	u2547
  2407   0011F6  2E27               	decfsz	??_motor_response^0,f,c
  2408   0011F8  D7FC               	bra	u2547
  2409   0011FA  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2410   0011FC  D7FA               	bra	u2547
  2411   0011FE  D000               	nop2	
  2412   001200                     
  2413                           ;color.c: 161:             norm_stop(mL, mR);
  2414   001200  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2415   001204  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2416   001208  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2417   00120C  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2418   001210  EC34  F018         	call	_norm_stop	;wreg free
  2419                           
  2420                           ;color.c: 162:             _delay((unsigned long)((80)*(64000000/4000.0)));
  2421   001214  0E07               	movlw	7
  2422   001216  6E28               	movwf	(??_motor_response+1)^0,c
  2423   001218  0E7F               	movlw	127
  2424   00121A  6E27               	movwf	??_motor_response^0,c
  2425   00121C  0E50               	movlw	80
  2426   00121E                     u2557:
  2427   00121E  2EE8               	decfsz	wreg,f,c
  2428   001220  D7FE               	bra	u2557
  2429   001222  2E27               	decfsz	??_motor_response^0,f,c
  2430   001224  D7FC               	bra	u2557
  2431   001226  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2432   001228  D7FA               	bra	u2557
  2433   00122A                     
  2434                           ;color.c: 163:             turnLeft(mL, mR);
  2435   00122A  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2436   00122E  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2437   001232  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2438   001236  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2439   00123A  EC95  F016         	call	_turnLeft	;wreg free
  2440   00123E                     
  2441                           ;color.c: 164:             _delay((unsigned long)((410)*(64000000/4000.0)));
  2442   00123E  0E22               	movlw	34
  2443   001240  6E28               	movwf	(??_motor_response+1)^0,c
  2444   001242  0E48               	movlw	72
  2445   001244  6E27               	movwf	??_motor_response^0,c
  2446   001246  0E62               	movlw	98
  2447   001248                     u2567:
  2448   001248  2EE8               	decfsz	wreg,f,c
  2449   00124A  D7FE               	bra	u2567
  2450   00124C  2E27               	decfsz	??_motor_response^0,f,c
  2451   00124E  D7FC               	bra	u2567
  2452   001250  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2453   001252  D7FA               	bra	u2567
  2454   001254  D000               	nop2	
  2455   001256                     
  2456                           ;color.c: 165:             return 3;
  2457   001256  0E03               	movlw	3
  2458   001258  EFA6  F00C         	goto	l123
  2459   00125C                     l2802:
  2460   00125C  0EEC               	movlw	236
  2461   00125E  6E09               	movwf	___flge@ff1^0,c
  2462   001260  0E51               	movlw	81
  2463   001262  6E0A               	movwf	(___flge@ff1+1)^0,c
  2464   001264  0EC0               	movlw	192
  2465   001266  6E0B               	movwf	(___flge@ff1+2)^0,c
  2466   001268  0E40               	movlw	64
  2467   00126A  6E0C               	movwf	(___flge@ff1+3)^0,c
  2468   00126C  EE20 F01C          	lfsr	2,28
  2469   001270  5021               	movf	motor_response@temp^0,w,c
  2470   001272  26D9               	addwf	fsr2l,f,c
  2471   001274  5022               	movf	(motor_response@temp+1)^0,w,c
  2472   001276  22DA               	addwfc	fsr2h,f,c
  2473   001278  CFDE F00D          	movff	postinc2,___flge@ff2
  2474   00127C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2475   001280  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2476   001284  CFDE F010          	movff	postinc2,___flge@ff2+3
  2477   001288  EC0C  F014         	call	___flge	;wreg free
  2478   00128C  B0D8               	btfsc	status,0,c
  2479   00128E  EF4B  F009         	goto	u1821
  2480   001292  EF4D  F009         	goto	u1820
  2481   001296                     u1821:
  2482   001296  EF24  F00C         	goto	l2884
  2483   00129A                     u1820:
  2484   00129A  EE20 F01C          	lfsr	2,28
  2485   00129E  5021               	movf	motor_response@temp^0,w,c
  2486   0012A0  26D9               	addwf	fsr2l,f,c
  2487   0012A2  5022               	movf	(motor_response@temp+1)^0,w,c
  2488   0012A4  22DA               	addwfc	fsr2h,f,c
  2489   0012A6  CFDE F009          	movff	postinc2,___flge@ff1
  2490   0012AA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2491   0012AE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2492   0012B2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2493   0012B6  0E00               	movlw	0
  2494   0012B8  6E0D               	movwf	___flge@ff2^0,c
  2495   0012BA  0E00               	movlw	0
  2496   0012BC  6E0E               	movwf	(___flge@ff2+1)^0,c
  2497   0012BE  0E10               	movlw	16
  2498   0012C0  6E0F               	movwf	(___flge@ff2+2)^0,c
  2499   0012C2  0E41               	movlw	65
  2500   0012C4  6E10               	movwf	(___flge@ff2+3)^0,c
  2501   0012C6  EC0C  F014         	call	___flge	;wreg free
  2502   0012CA  B0D8               	btfsc	status,0,c
  2503   0012CC  EF6A  F009         	goto	u1831
  2504   0012D0  EF6C  F009         	goto	u1830
  2505   0012D4                     u1831:
  2506   0012D4  EF24  F00C         	goto	l2884
  2507   0012D8                     u1830:
  2508   0012D8                     
  2509                           ;color.c: 169:             if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 
      +                          2.2 && temp->norm_G > 3 && temp->norm_G < 3.5) {
  2510   0012D8  EE20 F018          	lfsr	2,24
  2511   0012DC  5021               	movf	motor_response@temp^0,w,c
  2512   0012DE  26D9               	addwf	fsr2l,f,c
  2513   0012E0  5022               	movf	(motor_response@temp+1)^0,w,c
  2514   0012E2  22DA               	addwfc	fsr2h,f,c
  2515   0012E4  CFDE F009          	movff	postinc2,___flge@ff1
  2516   0012E8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2517   0012EC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2518   0012F0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2519   0012F4  0E00               	movlw	0
  2520   0012F6  6E0D               	movwf	___flge@ff2^0,c
  2521   0012F8  0E00               	movlw	0
  2522   0012FA  6E0E               	movwf	(___flge@ff2+1)^0,c
  2523   0012FC  0EA0               	movlw	160
  2524   0012FE  6E0F               	movwf	(___flge@ff2+2)^0,c
  2525   001300  0E40               	movlw	64
  2526   001302  6E10               	movwf	(___flge@ff2+3)^0,c
  2527   001304  EC0C  F014         	call	___flge	;wreg free
  2528   001308  B0D8               	btfsc	status,0,c
  2529   00130A  EF89  F009         	goto	u1841
  2530   00130E  EF8B  F009         	goto	u1840
  2531   001312                     u1841:
  2532   001312  EF5A  F00A         	goto	l2836
  2533   001316                     u1840:
  2534   001316  0E9A               	movlw	154
  2535   001318  6E09               	movwf	___flge@ff1^0,c
  2536   00131A  0E99               	movlw	153
  2537   00131C  6E0A               	movwf	(___flge@ff1+1)^0,c
  2538   00131E  0ED9               	movlw	217
  2539   001320  6E0B               	movwf	(___flge@ff1+2)^0,c
  2540   001322  0E3F               	movlw	63
  2541   001324  6E0C               	movwf	(___flge@ff1+3)^0,c
  2542   001326  EE20 F010          	lfsr	2,16
  2543   00132A  5021               	movf	motor_response@temp^0,w,c
  2544   00132C  26D9               	addwf	fsr2l,f,c
  2545   00132E  5022               	movf	(motor_response@temp+1)^0,w,c
  2546   001330  22DA               	addwfc	fsr2h,f,c
  2547   001332  CFDE F00D          	movff	postinc2,___flge@ff2
  2548   001336  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2549   00133A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2550   00133E  CFDE F010          	movff	postinc2,___flge@ff2+3
  2551   001342  EC0C  F014         	call	___flge	;wreg free
  2552   001346  B0D8               	btfsc	status,0,c
  2553   001348  EFA8  F009         	goto	u1851
  2554   00134C  EFAA  F009         	goto	u1850
  2555   001350                     u1851:
  2556   001350  EF5A  F00A         	goto	l2836
  2557   001354                     u1850:
  2558   001354  EE20 F010          	lfsr	2,16
  2559   001358  5021               	movf	motor_response@temp^0,w,c
  2560   00135A  26D9               	addwf	fsr2l,f,c
  2561   00135C  5022               	movf	(motor_response@temp+1)^0,w,c
  2562   00135E  22DA               	addwfc	fsr2h,f,c
  2563   001360  CFDE F009          	movff	postinc2,___flge@ff1
  2564   001364  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2565   001368  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2566   00136C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2567   001370  0ECD               	movlw	205
  2568   001372  6E0D               	movwf	___flge@ff2^0,c
  2569   001374  0ECC               	movlw	204
  2570   001376  6E0E               	movwf	(___flge@ff2+1)^0,c
  2571   001378  0E0C               	movlw	12
  2572   00137A  6E0F               	movwf	(___flge@ff2+2)^0,c
  2573   00137C  0E40               	movlw	64
  2574   00137E  6E10               	movwf	(___flge@ff2+3)^0,c
  2575   001380  EC0C  F014         	call	___flge	;wreg free
  2576   001384  B0D8               	btfsc	status,0,c
  2577   001386  EFC7  F009         	goto	u1861
  2578   00138A  EFC9  F009         	goto	u1860
  2579   00138E                     u1861:
  2580   00138E  EF5A  F00A         	goto	l2836
  2581   001392                     u1860:
  2582   001392  0E00               	movlw	0
  2583   001394  6E09               	movwf	___flge@ff1^0,c
  2584   001396  0E00               	movlw	0
  2585   001398  6E0A               	movwf	(___flge@ff1+1)^0,c
  2586   00139A  0E40               	movlw	64
  2587   00139C  6E0B               	movwf	(___flge@ff1+2)^0,c
  2588   00139E  0E40               	movlw	64
  2589   0013A0  6E0C               	movwf	(___flge@ff1+3)^0,c
  2590   0013A2  EE20 F014          	lfsr	2,20
  2591   0013A6  5021               	movf	motor_response@temp^0,w,c
  2592   0013A8  26D9               	addwf	fsr2l,f,c
  2593   0013AA  5022               	movf	(motor_response@temp+1)^0,w,c
  2594   0013AC  22DA               	addwfc	fsr2h,f,c
  2595   0013AE  CFDE F00D          	movff	postinc2,___flge@ff2
  2596   0013B2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2597   0013B6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2598   0013BA  CFDE F010          	movff	postinc2,___flge@ff2+3
  2599   0013BE  EC0C  F014         	call	___flge	;wreg free
  2600   0013C2  B0D8               	btfsc	status,0,c
  2601   0013C4  EFE6  F009         	goto	u1871
  2602   0013C8  EFE8  F009         	goto	u1870
  2603   0013CC                     u1871:
  2604   0013CC  EF5A  F00A         	goto	l2836
  2605   0013D0                     u1870:
  2606   0013D0  EE20 F014          	lfsr	2,20
  2607   0013D4  5021               	movf	motor_response@temp^0,w,c
  2608   0013D6  26D9               	addwf	fsr2l,f,c
  2609   0013D8  5022               	movf	(motor_response@temp+1)^0,w,c
  2610   0013DA  22DA               	addwfc	fsr2h,f,c
  2611   0013DC  CFDE F009          	movff	postinc2,___flge@ff1
  2612   0013E0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2613   0013E4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2614   0013E8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2615   0013EC  0E00               	movlw	0
  2616   0013EE  6E0D               	movwf	___flge@ff2^0,c
  2617   0013F0  0E00               	movlw	0
  2618   0013F2  6E0E               	movwf	(___flge@ff2+1)^0,c
  2619   0013F4  0E60               	movlw	96
  2620   0013F6  6E0F               	movwf	(___flge@ff2+2)^0,c
  2621   0013F8  0E40               	movlw	64
  2622   0013FA  6E10               	movwf	(___flge@ff2+3)^0,c
  2623   0013FC  EC0C  F014         	call	___flge	;wreg free
  2624   001400  B0D8               	btfsc	status,0,c
  2625   001402  EF05  F00A         	goto	u1881
  2626   001406  EF07  F00A         	goto	u1880
  2627   00140A                     u1881:
  2628   00140A  EF5A  F00A         	goto	l2836
  2629   00140E                     u1880:
  2630   00140E                     
  2631                           ;color.c: 170:                LATHbits.LATH0 = !LATHbits.LATH0;
  2632   00140E  A080               	btfss	128,0,c	;volatile
  2633   001410  EF0C  F00A         	goto	u1891
  2634   001414  EF10  F00A         	goto	u1890
  2635   001418                     u1891:
  2636   001418  6A27               	clrf	??_motor_response^0,c
  2637   00141A  2A27               	incf	??_motor_response^0,f,c
  2638   00141C  EF11  F00A         	goto	u1908
  2639   001420                     u1890:
  2640   001420  6A27               	clrf	??_motor_response^0,c
  2641   001422                     u1908:
  2642   001422  5080               	movf	128,w,c	;volatile
  2643   001424  1827               	xorwf	??_motor_response^0,w,c
  2644   001426  0BFE               	andlw	-2
  2645   001428  1827               	xorwf	??_motor_response^0,w,c
  2646   00142A  6E80               	movwf	128,c	;volatile
  2647   00142C                     
  2648                           ;color.c: 171:                 reverse(mL, mR);
  2649   00142C  C023  F01C         	movff	motor_response@mL,reverse@mL
  2650   001430  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2651   001434  C025  F01E         	movff	motor_response@mR,reverse@mR
  2652   001438  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2653   00143C  EC8E  F014         	call	_reverse	;wreg free
  2654   001440                     
  2655                           ;color.c: 172:                 _delay((unsigned long)((2000)*(64000000/4000.0)));
  2656   001440  0EA3               	movlw	163
  2657   001442  6E28               	movwf	(??_motor_response+1)^0,c
  2658   001444  0E57               	movlw	87
  2659   001446  6E27               	movwf	??_motor_response^0,c
  2660   001448  0E02               	movlw	2
  2661   00144A                     u2577:
  2662   00144A  2EE8               	decfsz	wreg,f,c
  2663   00144C  D7FE               	bra	u2577
  2664   00144E  2E27               	decfsz	??_motor_response^0,f,c
  2665   001450  D7FC               	bra	u2577
  2666   001452  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2667   001454  D7FA               	bra	u2577
  2668   001456  D000               	nop2	
  2669   001458                     
  2670                           ;color.c: 173:                 norm_stop(mL, mR);
  2671   001458  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2672   00145C  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2673   001460  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2674   001464  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2675   001468  EC34  F018         	call	_norm_stop	;wreg free
  2676   00146C                     
  2677                           ;color.c: 174:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  2678   00146C  0E19               	movlw	25
  2679   00146E  6E28               	movwf	(??_motor_response+1)^0,c
  2680   001470  0E5A               	movlw	90
  2681   001472  6E27               	movwf	??_motor_response^0,c
  2682   001474  0EB2               	movlw	178
  2683   001476                     u2587:
  2684   001476  2EE8               	decfsz	wreg,f,c
  2685   001478  D7FE               	bra	u2587
  2686   00147A  2E27               	decfsz	??_motor_response^0,f,c
  2687   00147C  D7FC               	bra	u2587
  2688   00147E  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2689   001480  D7FA               	bra	u2587
  2690   001482                     
  2691                           ;color.c: 175:                 turnLeft(mL, mR);
  2692   001482  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2693   001486  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2694   00148A  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2695   00148E  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2696   001492  EC95  F016         	call	_turnLeft	;wreg free
  2697   001496                     
  2698                           ;color.c: 176:                 _delay((unsigned long)((250)*(64000000/4000.0)));
  2699   001496  0E15               	movlw	21
  2700   001498  6E28               	movwf	(??_motor_response+1)^0,c
  2701   00149A  0E4B               	movlw	75
  2702   00149C  6E27               	movwf	??_motor_response^0,c
  2703   00149E  0EBE               	movlw	190
  2704   0014A0                     u2597:
  2705   0014A0  2EE8               	decfsz	wreg,f,c
  2706   0014A2  D7FE               	bra	u2597
  2707   0014A4  2E27               	decfsz	??_motor_response^0,f,c
  2708   0014A6  D7FC               	bra	u2597
  2709   0014A8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2710   0014AA  D7FA               	bra	u2597
  2711   0014AC  D000               	nop2	
  2712   0014AE                     
  2713                           ;color.c: 177:                 return 5;
  2714   0014AE  0E05               	movlw	5
  2715   0014B0  EFA6  F00C         	goto	l123
  2716   0014B4                     l2836:
  2717   0014B4  0E00               	movlw	0
  2718   0014B6  6E09               	movwf	___flge@ff1^0,c
  2719   0014B8  0E00               	movlw	0
  2720   0014BA  6E0A               	movwf	(___flge@ff1+1)^0,c
  2721   0014BC  0EB0               	movlw	176
  2722   0014BE  6E0B               	movwf	(___flge@ff1+2)^0,c
  2723   0014C0  0E40               	movlw	64
  2724   0014C2  6E0C               	movwf	(___flge@ff1+3)^0,c
  2725   0014C4  EE20 F018          	lfsr	2,24
  2726   0014C8  5021               	movf	motor_response@temp^0,w,c
  2727   0014CA  26D9               	addwf	fsr2l,f,c
  2728   0014CC  5022               	movf	(motor_response@temp+1)^0,w,c
  2729   0014CE  22DA               	addwfc	fsr2h,f,c
  2730   0014D0  CFDE F00D          	movff	postinc2,___flge@ff2
  2731   0014D4  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2732   0014D8  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2733   0014DC  CFDE F010          	movff	postinc2,___flge@ff2+3
  2734   0014E0  EC0C  F014         	call	___flge	;wreg free
  2735   0014E4  B0D8               	btfsc	status,0,c
  2736   0014E6  EF77  F00A         	goto	u1911
  2737   0014EA  EF79  F00A         	goto	u1910
  2738   0014EE                     u1911:
  2739   0014EE  EF2D  F00B         	goto	l2858
  2740   0014F2                     u1910:
  2741   0014F2  EE20 F018          	lfsr	2,24
  2742   0014F6  5021               	movf	motor_response@temp^0,w,c
  2743   0014F8  26D9               	addwf	fsr2l,f,c
  2744   0014FA  5022               	movf	(motor_response@temp+1)^0,w,c
  2745   0014FC  22DA               	addwfc	fsr2h,f,c
  2746   0014FE  CFDE F009          	movff	postinc2,___flge@ff1
  2747   001502  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2748   001506  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2749   00150A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2750   00150E  0E00               	movlw	0
  2751   001510  6E0D               	movwf	___flge@ff2^0,c
  2752   001512  0E00               	movlw	0
  2753   001514  6E0E               	movwf	(___flge@ff2+1)^0,c
  2754   001516  0EC0               	movlw	192
  2755   001518  6E0F               	movwf	(___flge@ff2+2)^0,c
  2756   00151A  0E40               	movlw	64
  2757   00151C  6E10               	movwf	(___flge@ff2+3)^0,c
  2758   00151E  EC0C  F014         	call	___flge	;wreg free
  2759   001522  B0D8               	btfsc	status,0,c
  2760   001524  EF96  F00A         	goto	u1921
  2761   001528  EF98  F00A         	goto	u1920
  2762   00152C                     u1921:
  2763   00152C  EF2D  F00B         	goto	l2858
  2764   001530                     u1920:
  2765   001530  0E33               	movlw	51
  2766   001532  6E09               	movwf	___flge@ff1^0,c
  2767   001534  0E33               	movlw	51
  2768   001536  6E0A               	movwf	(___flge@ff1+1)^0,c
  2769   001538  0EB3               	movlw	179
  2770   00153A  6E0B               	movwf	(___flge@ff1+2)^0,c
  2771   00153C  0E3F               	movlw	63
  2772   00153E  6E0C               	movwf	(___flge@ff1+3)^0,c
  2773   001540  EE20 F010          	lfsr	2,16
  2774   001544  5021               	movf	motor_response@temp^0,w,c
  2775   001546  26D9               	addwf	fsr2l,f,c
  2776   001548  5022               	movf	(motor_response@temp+1)^0,w,c
  2777   00154A  22DA               	addwfc	fsr2h,f,c
  2778   00154C  CFDE F00D          	movff	postinc2,___flge@ff2
  2779   001550  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2780   001554  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2781   001558  CFDE F010          	movff	postinc2,___flge@ff2+3
  2782   00155C  EC0C  F014         	call	___flge	;wreg free
  2783   001560  B0D8               	btfsc	status,0,c
  2784   001562  EFB5  F00A         	goto	u1931
  2785   001566  EFB7  F00A         	goto	u1930
  2786   00156A                     u1931:
  2787   00156A  EF2D  F00B         	goto	l2858
  2788   00156E                     u1930:
  2789   00156E  EE20 F010          	lfsr	2,16
  2790   001572  5021               	movf	motor_response@temp^0,w,c
  2791   001574  26D9               	addwf	fsr2l,f,c
  2792   001576  5022               	movf	(motor_response@temp+1)^0,w,c
  2793   001578  22DA               	addwfc	fsr2h,f,c
  2794   00157A  CFDE F009          	movff	postinc2,___flge@ff1
  2795   00157E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2796   001582  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2797   001586  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2798   00158A  0E9A               	movlw	154
  2799   00158C  6E0D               	movwf	___flge@ff2^0,c
  2800   00158E  0E99               	movlw	153
  2801   001590  6E0E               	movwf	(___flge@ff2+1)^0,c
  2802   001592  0ED9               	movlw	217
  2803   001594  6E0F               	movwf	(___flge@ff2+2)^0,c
  2804   001596  0E3F               	movlw	63
  2805   001598  6E10               	movwf	(___flge@ff2+3)^0,c
  2806   00159A  EC0C  F014         	call	___flge	;wreg free
  2807   00159E  B0D8               	btfsc	status,0,c
  2808   0015A0  EFD4  F00A         	goto	u1941
  2809   0015A4  EFD6  F00A         	goto	u1940
  2810   0015A8                     u1941:
  2811   0015A8  EF2D  F00B         	goto	l2858
  2812   0015AC                     u1940:
  2813   0015AC  0E33               	movlw	51
  2814   0015AE  6E09               	movwf	___flge@ff1^0,c
  2815   0015B0  0E33               	movlw	51
  2816   0015B2  6E0A               	movwf	(___flge@ff1+1)^0,c
  2817   0015B4  0E83               	movlw	131
  2818   0015B6  6E0B               	movwf	(___flge@ff1+2)^0,c
  2819   0015B8  0E40               	movlw	64
  2820   0015BA  6E0C               	movwf	(___flge@ff1+3)^0,c
  2821   0015BC  EE20 F014          	lfsr	2,20
  2822   0015C0  5021               	movf	motor_response@temp^0,w,c
  2823   0015C2  26D9               	addwf	fsr2l,f,c
  2824   0015C4  5022               	movf	(motor_response@temp+1)^0,w,c
  2825   0015C6  22DA               	addwfc	fsr2h,f,c
  2826   0015C8  CFDE F00D          	movff	postinc2,___flge@ff2
  2827   0015CC  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2828   0015D0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2829   0015D4  CFDE F010          	movff	postinc2,___flge@ff2+3
  2830   0015D8  EC0C  F014         	call	___flge	;wreg free
  2831   0015DC  B0D8               	btfsc	status,0,c
  2832   0015DE  EFF3  F00A         	goto	u1951
  2833   0015E2  EFF5  F00A         	goto	u1950
  2834   0015E6                     u1951:
  2835   0015E6  EF2D  F00B         	goto	l2858
  2836   0015EA                     u1950:
  2837   0015EA  EE20 F014          	lfsr	2,20
  2838   0015EE  5021               	movf	motor_response@temp^0,w,c
  2839   0015F0  26D9               	addwf	fsr2l,f,c
  2840   0015F2  5022               	movf	(motor_response@temp+1)^0,w,c
  2841   0015F4  22DA               	addwfc	fsr2h,f,c
  2842   0015F6  CFDE F009          	movff	postinc2,___flge@ff1
  2843   0015FA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2844   0015FE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2845   001602  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2846   001606  0E00               	movlw	0
  2847   001608  6E0D               	movwf	___flge@ff2^0,c
  2848   00160A  0E00               	movlw	0
  2849   00160C  6E0E               	movwf	(___flge@ff2+1)^0,c
  2850   00160E  0E90               	movlw	144
  2851   001610  6E0F               	movwf	(___flge@ff2+2)^0,c
  2852   001612  0E40               	movlw	64
  2853   001614  6E10               	movwf	(___flge@ff2+3)^0,c
  2854   001616  EC0C  F014         	call	___flge	;wreg free
  2855   00161A  B0D8               	btfsc	status,0,c
  2856   00161C  EF12  F00B         	goto	u1961
  2857   001620  EF14  F00B         	goto	u1960
  2858   001624                     u1961:
  2859   001624  EF2D  F00B         	goto	l2858
  2860   001628                     u1960:
  2861   001628                     
  2862                           ;color.c: 180:                 turnRight(mL, mR);
  2863   001628  C023  F01C         	movff	motor_response@mL,turnRight@mL
  2864   00162C  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2865   001630  C025  F01E         	movff	motor_response@mR,turnRight@mR
  2866   001634  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2867   001638  EC5C  F016         	call	_turnRight	;wreg free
  2868   00163C                     
  2869                           ;color.c: 181:                 _delay((unsigned long)((350)*(64000000/4000.0)));
  2870   00163C  0E1D               	movlw	29
  2871   00163E  6E28               	movwf	(??_motor_response+1)^0,c
  2872   001640  0E69               	movlw	105
  2873   001642  6E27               	movwf	??_motor_response^0,c
  2874   001644  0EA5               	movlw	165
  2875   001646                     u2607:
  2876   001646  2EE8               	decfsz	wreg,f,c
  2877   001648  D7FE               	bra	u2607
  2878   00164A  2E27               	decfsz	??_motor_response^0,f,c
  2879   00164C  D7FC               	bra	u2607
  2880   00164E  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2881   001650  D7FA               	bra	u2607
  2882   001652  F000               	nop	
  2883   001654                     
  2884                           ;color.c: 182:                 return 6;
  2885   001654  0E06               	movlw	6
  2886   001656  EFA6  F00C         	goto	l123
  2887   00165A                     l2858:
  2888   00165A  0E33               	movlw	51
  2889   00165C  6E09               	movwf	___flge@ff1^0,c
  2890   00165E  0E33               	movlw	51
  2891   001660  6E0A               	movwf	(___flge@ff1+1)^0,c
  2892   001662  0E53               	movlw	83
  2893   001664  6E0B               	movwf	(___flge@ff1+2)^0,c
  2894   001666  0E40               	movlw	64
  2895   001668  6E0C               	movwf	(___flge@ff1+3)^0,c
  2896   00166A  EE20 F018          	lfsr	2,24
  2897   00166E  5021               	movf	motor_response@temp^0,w,c
  2898   001670  26D9               	addwf	fsr2l,f,c
  2899   001672  5022               	movf	(motor_response@temp+1)^0,w,c
  2900   001674  22DA               	addwfc	fsr2h,f,c
  2901   001676  CFDE F00D          	movff	postinc2,___flge@ff2
  2902   00167A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2903   00167E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2904   001682  CFDE F010          	movff	postinc2,___flge@ff2+3
  2905   001686  EC0C  F014         	call	___flge	;wreg free
  2906   00168A  B0D8               	btfsc	status,0,c
  2907   00168C  EF4A  F00B         	goto	u1971
  2908   001690  EF4C  F00B         	goto	u1970
  2909   001694                     u1971:
  2910   001694  EFAC  F007         	goto	l2752
  2911   001698                     u1970:
  2912   001698  EE20 F018          	lfsr	2,24
  2913   00169C  5021               	movf	motor_response@temp^0,w,c
  2914   00169E  26D9               	addwf	fsr2l,f,c
  2915   0016A0  5022               	movf	(motor_response@temp+1)^0,w,c
  2916   0016A2  22DA               	addwfc	fsr2h,f,c
  2917   0016A4  CFDE F009          	movff	postinc2,___flge@ff1
  2918   0016A8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2919   0016AC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2920   0016B0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2921   0016B4  0E9A               	movlw	154
  2922   0016B6  6E0D               	movwf	___flge@ff2^0,c
  2923   0016B8  0E99               	movlw	153
  2924   0016BA  6E0E               	movwf	(___flge@ff2+1)^0,c
  2925   0016BC  0E79               	movlw	121
  2926   0016BE  6E0F               	movwf	(___flge@ff2+2)^0,c
  2927   0016C0  0E40               	movlw	64
  2928   0016C2  6E10               	movwf	(___flge@ff2+3)^0,c
  2929   0016C4  EC0C  F014         	call	___flge	;wreg free
  2930   0016C8  B0D8               	btfsc	status,0,c
  2931   0016CA  EF69  F00B         	goto	u1981
  2932   0016CE  EF6B  F00B         	goto	u1980
  2933   0016D2                     u1981:
  2934   0016D2  EFAC  F007         	goto	l2752
  2935   0016D6                     u1980:
  2936   0016D6  0ECD               	movlw	205
  2937   0016D8  6E09               	movwf	___flge@ff1^0,c
  2938   0016DA  0ECC               	movlw	204
  2939   0016DC  6E0A               	movwf	(___flge@ff1+1)^0,c
  2940   0016DE  0E2C               	movlw	44
  2941   0016E0  6E0B               	movwf	(___flge@ff1+2)^0,c
  2942   0016E2  0E40               	movlw	64
  2943   0016E4  6E0C               	movwf	(___flge@ff1+3)^0,c
  2944   0016E6  EE20 F010          	lfsr	2,16
  2945   0016EA  5021               	movf	motor_response@temp^0,w,c
  2946   0016EC  26D9               	addwf	fsr2l,f,c
  2947   0016EE  5022               	movf	(motor_response@temp+1)^0,w,c
  2948   0016F0  22DA               	addwfc	fsr2h,f,c
  2949   0016F2  CFDE F00D          	movff	postinc2,___flge@ff2
  2950   0016F6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2951   0016FA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2952   0016FE  CFDE F010          	movff	postinc2,___flge@ff2+3
  2953   001702  EC0C  F014         	call	___flge	;wreg free
  2954   001706  B0D8               	btfsc	status,0,c
  2955   001708  EF88  F00B         	goto	u1991
  2956   00170C  EF8A  F00B         	goto	u1990
  2957   001710                     u1991:
  2958   001710  EFAC  F007         	goto	l2752
  2959   001714                     u1990:
  2960   001714  EE20 F010          	lfsr	2,16
  2961   001718  5021               	movf	motor_response@temp^0,w,c
  2962   00171A  26D9               	addwf	fsr2l,f,c
  2963   00171C  5022               	movf	(motor_response@temp+1)^0,w,c
  2964   00171E  22DA               	addwfc	fsr2h,f,c
  2965   001720  CFDE F009          	movff	postinc2,___flge@ff1
  2966   001724  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2967   001728  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2968   00172C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2969   001730  0ECD               	movlw	205
  2970   001732  6E0D               	movwf	___flge@ff2^0,c
  2971   001734  0ECC               	movlw	204
  2972   001736  6E0E               	movwf	(___flge@ff2+1)^0,c
  2973   001738  0E4C               	movlw	76
  2974   00173A  6E0F               	movwf	(___flge@ff2+2)^0,c
  2975   00173C  0E40               	movlw	64
  2976   00173E  6E10               	movwf	(___flge@ff2+3)^0,c
  2977   001740  EC0C  F014         	call	___flge	;wreg free
  2978   001744  B0D8               	btfsc	status,0,c
  2979   001746  EFA7  F00B         	goto	u2001
  2980   00174A  EFA9  F00B         	goto	u2000
  2981   00174E                     u2001:
  2982   00174E  EFAC  F007         	goto	l2752
  2983   001752                     u2000:
  2984   001752  0E00               	movlw	0
  2985   001754  6E09               	movwf	___flge@ff1^0,c
  2986   001756  0E00               	movlw	0
  2987   001758  6E0A               	movwf	(___flge@ff1+1)^0,c
  2988   00175A  0E20               	movlw	32
  2989   00175C  6E0B               	movwf	(___flge@ff1+2)^0,c
  2990   00175E  0E40               	movlw	64
  2991   001760  6E0C               	movwf	(___flge@ff1+3)^0,c
  2992   001762  EE20 F014          	lfsr	2,20
  2993   001766  5021               	movf	motor_response@temp^0,w,c
  2994   001768  26D9               	addwf	fsr2l,f,c
  2995   00176A  5022               	movf	(motor_response@temp+1)^0,w,c
  2996   00176C  22DA               	addwfc	fsr2h,f,c
  2997   00176E  CFDE F00D          	movff	postinc2,___flge@ff2
  2998   001772  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2999   001776  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3000   00177A  CFDE F010          	movff	postinc2,___flge@ff2+3
  3001   00177E  EC0C  F014         	call	___flge	;wreg free
  3002   001782  B0D8               	btfsc	status,0,c
  3003   001784  EFC6  F00B         	goto	u2011
  3004   001788  EFC8  F00B         	goto	u2010
  3005   00178C                     u2011:
  3006   00178C  EFAC  F007         	goto	l2752
  3007   001790                     u2010:
  3008   001790  EE20 F014          	lfsr	2,20
  3009   001794  5021               	movf	motor_response@temp^0,w,c
  3010   001796  26D9               	addwf	fsr2l,f,c
  3011   001798  5022               	movf	(motor_response@temp+1)^0,w,c
  3012   00179A  22DA               	addwfc	fsr2h,f,c
  3013   00179C  CFDE F009          	movff	postinc2,___flge@ff1
  3014   0017A0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3015   0017A4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3016   0017A8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3017   0017AC  0E9A               	movlw	154
  3018   0017AE  6E0D               	movwf	___flge@ff2^0,c
  3019   0017B0  0E99               	movlw	153
  3020   0017B2  6E0E               	movwf	(___flge@ff2+1)^0,c
  3021   0017B4  0E39               	movlw	57
  3022   0017B6  6E0F               	movwf	(___flge@ff2+2)^0,c
  3023   0017B8  0E40               	movlw	64
  3024   0017BA  6E10               	movwf	(___flge@ff2+3)^0,c
  3025   0017BC  EC0C  F014         	call	___flge	;wreg free
  3026   0017C0  B0D8               	btfsc	status,0,c
  3027   0017C2  EFE5  F00B         	goto	u2021
  3028   0017C6  EFE7  F00B         	goto	u2020
  3029   0017CA                     u2021:
  3030   0017CA  EFAC  F007         	goto	l2752
  3031   0017CE                     u2020:
  3032   0017CE                     
  3033                           ;color.c: 184:                 LATFbits.LATF0 = !LATFbits.LATF0;
  3034   0017CE  A07E               	btfss	126,0,c	;volatile
  3035   0017D0  EFEC  F00B         	goto	u2031
  3036   0017D4  EFF0  F00B         	goto	u2030
  3037   0017D8                     u2031:
  3038   0017D8  6A27               	clrf	??_motor_response^0,c
  3039   0017DA  2A27               	incf	??_motor_response^0,f,c
  3040   0017DC  EFF1  F00B         	goto	u2048
  3041   0017E0                     u2030:
  3042   0017E0  6A27               	clrf	??_motor_response^0,c
  3043   0017E2                     u2048:
  3044   0017E2  507E               	movf	126,w,c	;volatile
  3045   0017E4  1827               	xorwf	??_motor_response^0,w,c
  3046   0017E6  0BFE               	andlw	-2
  3047   0017E8  1827               	xorwf	??_motor_response^0,w,c
  3048   0017EA  6E7E               	movwf	126,c	;volatile
  3049   0017EC                     
  3050                           ;color.c: 185:                 turnLeft(mL, mR);
  3051   0017EC  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  3052   0017F0  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3053   0017F4  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  3054   0017F8  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3055   0017FC  EC95  F016         	call	_turnLeft	;wreg free
  3056   001800                     
  3057                           ;color.c: 186:                 _delay((unsigned long)((300)*(64000000/4000.0)));
  3058   001800  0E19               	movlw	25
  3059   001802  6E28               	movwf	(??_motor_response+1)^0,c
  3060   001804  0E5A               	movlw	90
  3061   001806  6E27               	movwf	??_motor_response^0,c
  3062   001808  0EB2               	movlw	178
  3063   00180A                     u2617:
  3064   00180A  2EE8               	decfsz	wreg,f,c
  3065   00180C  D7FE               	bra	u2617
  3066   00180E  2E27               	decfsz	??_motor_response^0,f,c
  3067   001810  D7FC               	bra	u2617
  3068   001812  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3069   001814  D7FA               	bra	u2617
  3070   001816                     
  3071                           ;color.c: 187:                 norm_stop(mL, mR);
  3072   001816  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3073   00181A  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3074   00181E  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3075   001822  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3076   001826  EC34  F018         	call	_norm_stop	;wreg free
  3077   00182A                     
  3078                           ;color.c: 188:                 _delay((unsigned long)((2000)*(64000000/4000.0)));
  3079   00182A  0EA3               	movlw	163
  3080   00182C  6E28               	movwf	(??_motor_response+1)^0,c
  3081   00182E  0E57               	movlw	87
  3082   001830  6E27               	movwf	??_motor_response^0,c
  3083   001832  0E02               	movlw	2
  3084   001834                     u2627:
  3085   001834  2EE8               	decfsz	wreg,f,c
  3086   001836  D7FE               	bra	u2627
  3087   001838  2E27               	decfsz	??_motor_response^0,f,c
  3088   00183A  D7FC               	bra	u2627
  3089   00183C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3090   00183E  D7FA               	bra	u2627
  3091   001840  D000               	nop2	
  3092   001842                     
  3093                           ;color.c: 189:                 return 7;
  3094   001842  0E07               	movlw	7
  3095   001844  EFA6  F00C         	goto	l123
  3096   001848                     l2884:
  3097   001848  0EF6               	movlw	246
  3098   00184A  6E09               	movwf	___flge@ff1^0,c
  3099   00184C  0E28               	movlw	40
  3100   00184E  6E0A               	movwf	(___flge@ff1+1)^0,c
  3101   001850  0E10               	movlw	16
  3102   001852  6E0B               	movwf	(___flge@ff1+2)^0,c
  3103   001854  0E41               	movlw	65
  3104   001856  6E0C               	movwf	(___flge@ff1+3)^0,c
  3105   001858  EE20 F01C          	lfsr	2,28
  3106   00185C  5021               	movf	motor_response@temp^0,w,c
  3107   00185E  26D9               	addwf	fsr2l,f,c
  3108   001860  5022               	movf	(motor_response@temp+1)^0,w,c
  3109   001862  22DA               	addwfc	fsr2h,f,c
  3110   001864  CFDE F00D          	movff	postinc2,___flge@ff2
  3111   001868  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3112   00186C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3113   001870  CFDE F010          	movff	postinc2,___flge@ff2+3
  3114   001874  EC0C  F014         	call	___flge	;wreg free
  3115   001878  B0D8               	btfsc	status,0,c
  3116   00187A  EF41  F00C         	goto	u2051
  3117   00187E  EF43  F00C         	goto	u2050
  3118   001882                     u2051:
  3119   001882  EFA6  F00C         	goto	l123
  3120   001886                     u2050:
  3121   001886                     
  3122                           ;color.c: 204:             if (temp->norm_B > 5) {
  3123   001886  0E00               	movlw	0
  3124   001888  6E09               	movwf	___flge@ff1^0,c
  3125   00188A  0E00               	movlw	0
  3126   00188C  6E0A               	movwf	(___flge@ff1+1)^0,c
  3127   00188E  0EA0               	movlw	160
  3128   001890  6E0B               	movwf	(___flge@ff1+2)^0,c
  3129   001892  0E40               	movlw	64
  3130   001894  6E0C               	movwf	(___flge@ff1+3)^0,c
  3131   001896  EE20 F018          	lfsr	2,24
  3132   00189A  5021               	movf	motor_response@temp^0,w,c
  3133   00189C  26D9               	addwf	fsr2l,f,c
  3134   00189E  5022               	movf	(motor_response@temp+1)^0,w,c
  3135   0018A0  22DA               	addwfc	fsr2h,f,c
  3136   0018A2  CFDE F00D          	movff	postinc2,___flge@ff2
  3137   0018A6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3138   0018AA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3139   0018AE  CFDE F010          	movff	postinc2,___flge@ff2+3
  3140   0018B2  EC0C  F014         	call	___flge	;wreg free
  3141   0018B6  B0D8               	btfsc	status,0,c
  3142   0018B8  EF60  F00C         	goto	u2061
  3143   0018BC  EF62  F00C         	goto	u2060
  3144   0018C0                     u2061:
  3145   0018C0  EFA6  F00C         	goto	l123
  3146   0018C4                     u2060:
  3147   0018C4                     
  3148                           ;color.c: 206:                 motor_return = 1;
  3149   0018C4  0E01               	movlw	1
  3150   0018C6  0100               	movlb	0	; () banked
  3151   0018C8  6FA2               	movwf	_motor_return& (0+255),b
  3152   0018CA                     
  3153                           ; BSR set to: 0
  3154                           ;color.c: 207:                 reverse(mL, mR);
  3155   0018CA  C023  F01C         	movff	motor_response@mL,reverse@mL
  3156   0018CE  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  3157   0018D2  C025  F01E         	movff	motor_response@mR,reverse@mR
  3158   0018D6  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  3159   0018DA  EC8E  F014         	call	_reverse	;wreg free
  3160   0018DE                     
  3161                           ;color.c: 208:                 _delay((unsigned long)((400)*(64000000/4000.0)));
  3162   0018DE  0E21               	movlw	33
  3163   0018E0  6E28               	movwf	(??_motor_response+1)^0,c
  3164   0018E2  0E78               	movlw	120
  3165   0018E4  6E27               	movwf	??_motor_response^0,c
  3166   0018E6  0E98               	movlw	152
  3167   0018E8                     u2637:
  3168   0018E8  2EE8               	decfsz	wreg,f,c
  3169   0018EA  D7FE               	bra	u2637
  3170   0018EC  2E27               	decfsz	??_motor_response^0,f,c
  3171   0018EE  D7FC               	bra	u2637
  3172   0018F0  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3173   0018F2  D7FA               	bra	u2637
  3174   0018F4  D000               	nop2	
  3175   0018F6                     
  3176                           ;color.c: 209:                 norm_stop(mL, mR);
  3177   0018F6  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3178   0018FA  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3179   0018FE  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3180   001902  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3181   001906  EC34  F018         	call	_norm_stop	;wreg free
  3182   00190A                     
  3183                           ;color.c: 210:                 _delay((unsigned long)((80)*(64000000/4000.0)));
  3184   00190A  0E07               	movlw	7
  3185   00190C  6E28               	movwf	(??_motor_response+1)^0,c
  3186   00190E  0E7F               	movlw	127
  3187   001910  6E27               	movwf	??_motor_response^0,c
  3188   001912  0E50               	movlw	80
  3189   001914                     u2647:
  3190   001914  2EE8               	decfsz	wreg,f,c
  3191   001916  D7FE               	bra	u2647
  3192   001918  2E27               	decfsz	??_motor_response^0,f,c
  3193   00191A  D7FC               	bra	u2647
  3194   00191C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3195   00191E  D7FA               	bra	u2647
  3196   001920                     
  3197                           ;color.c: 211:                 turnLeft(mL, mR);
  3198   001920  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  3199   001924  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3200   001928  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  3201   00192C  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3202   001930  EC95  F016         	call	_turnLeft	;wreg free
  3203   001934                     
  3204                           ;color.c: 212:                 _delay((unsigned long)((425)*(64000000/4000.0)));
  3205   001934  0E23               	movlw	35
  3206   001936  6E28               	movwf	(??_motor_response+1)^0,c
  3207   001938  0E80               	movlw	128
  3208   00193A  6E27               	movwf	??_motor_response^0,c
  3209   00193C  0E12               	movlw	18
  3210   00193E                     u2657:
  3211   00193E  2EE8               	decfsz	wreg,f,c
  3212   001940  D7FE               	bra	u2657
  3213   001942  2E27               	decfsz	??_motor_response^0,f,c
  3214   001944  D7FC               	bra	u2657
  3215   001946  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3216   001948  D7FA               	bra	u2657
  3217   00194A                     
  3218                           ;color.c: 213:                 return 8;
  3219   00194A  0E08               	movlw	8
  3220   00194C                     l123:
  3221   00194C  0012               	return		;funcret
  3222   00194E                     __end_of_motor_response:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _turnRight *****************
  3226 ;; Defined at:
  3227 ;;		line 144 in file "dc_motor.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3230 ;;		 -> main@mL(9), 
  3231 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3232 ;;		 -> main@mR(9), 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;		None
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/0
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3247 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3248 ;;Total ram usage:        4 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 8
  3251 ;; This function calls:
  3252 ;;		_setMotorPWM
  3253 ;; This function is called by:
  3254 ;;		_motor_response
  3255 ;;		_motor_retrace
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text6
  3260   002CB8                     __ptext6:
  3261                           	callstack 0
  3262   002CB8                     _turnRight:
  3263                           	callstack 21
  3264   002CB8                     
  3265                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  3266   002CB8  C01C  FFD9         	movff	turnRight@mL,fsr2l
  3267   002CBC  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  3268   002CC0  0E3C               	movlw	60
  3269   002CC2  6EDF               	movwf	indf2,c
  3270                           
  3271                           ;dc_motor.c: 147:     mR->power = 60;
  3272   002CC4  C01E  FFD9         	movff	turnRight@mR,fsr2l
  3273   002CC8  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  3274   002CCC  0E3C               	movlw	60
  3275   002CCE  6EDF               	movwf	indf2,c
  3276   002CD0                     
  3277                           ;dc_motor.c: 148:     mL->brakemode = 1;
  3278   002CD0  EE20 F002          	lfsr	2,2
  3279   002CD4  501C               	movf	turnRight@mL^0,w,c
  3280   002CD6  26D9               	addwf	fsr2l,f,c
  3281   002CD8  501D               	movf	(turnRight@mL+1)^0,w,c
  3282   002CDA  22DA               	addwfc	fsr2h,f,c
  3283   002CDC  0E01               	movlw	1
  3284   002CDE  6EDF               	movwf	indf2,c
  3285   002CE0                     
  3286                           ;dc_motor.c: 149:     mR->brakemode = 1;
  3287   002CE0  EE20 F002          	lfsr	2,2
  3288   002CE4  501E               	movf	turnRight@mR^0,w,c
  3289   002CE6  26D9               	addwf	fsr2l,f,c
  3290   002CE8  501F               	movf	(turnRight@mR+1)^0,w,c
  3291   002CEA  22DA               	addwfc	fsr2h,f,c
  3292   002CEC  0E01               	movlw	1
  3293   002CEE  6EDF               	movwf	indf2,c
  3294   002CF0                     
  3295                           ;dc_motor.c: 150:     mR->direction = 0;
  3296   002CF0  EE20 F001          	lfsr	2,1
  3297   002CF4  501E               	movf	turnRight@mR^0,w,c
  3298   002CF6  26D9               	addwf	fsr2l,f,c
  3299   002CF8  501F               	movf	(turnRight@mR+1)^0,w,c
  3300   002CFA  22DA               	addwfc	fsr2h,f,c
  3301   002CFC  0E00               	movlw	0
  3302   002CFE  6EDF               	movwf	indf2,c
  3303   002D00                     
  3304                           ;dc_motor.c: 151:     mL->direction = 1;
  3305   002D00  EE20 F001          	lfsr	2,1
  3306   002D04  501C               	movf	turnRight@mL^0,w,c
  3307   002D06  26D9               	addwf	fsr2l,f,c
  3308   002D08  501D               	movf	(turnRight@mL+1)^0,w,c
  3309   002D0A  22DA               	addwfc	fsr2h,f,c
  3310   002D0C  0E01               	movlw	1
  3311   002D0E  6EDF               	movwf	indf2,c
  3312   002D10                     
  3313                           ;dc_motor.c: 152:     setMotorPWM(mL);
  3314   002D10  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  3315   002D14  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  3316   002D18  ECAD  F012         	call	_setMotorPWM	;wreg free
  3317   002D1C                     
  3318                           ;dc_motor.c: 153:     setMotorPWM(mR);
  3319   002D1C  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  3320   002D20  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  3321   002D24  ECAD  F012         	call	_setMotorPWM	;wreg free
  3322   002D28  0012               	return		;funcret
  3323   002D2A                     __end_of_turnRight:
  3324                           	callstack 0
  3325                           
  3326 ;; *************** function _turnLeft *****************
  3327 ;; Defined at:
  3328 ;;		line 131 in file "dc_motor.c"
  3329 ;; Parameters:    Size  Location     Type
  3330 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3331 ;;		 -> main@mL(9), 
  3332 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3333 ;;		 -> main@mR(9), 
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3345 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;Total ram usage:        4 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 8
  3352 ;; This function calls:
  3353 ;;		_setMotorPWM
  3354 ;; This function is called by:
  3355 ;;		_motor_response
  3356 ;;		_motor_retrace
  3357 ;;		_main
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text7
  3362   002D2A                     __ptext7:
  3363                           	callstack 0
  3364   002D2A                     _turnLeft:
  3365                           	callstack 22
  3366   002D2A                     
  3367                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  3368   002D2A  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  3369   002D2E  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  3370   002D32  0E3C               	movlw	60
  3371   002D34  6EDF               	movwf	indf2,c
  3372                           
  3373                           ;dc_motor.c: 134:     mR->power = 60;
  3374   002D36  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  3375   002D3A  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  3376   002D3E  0E3C               	movlw	60
  3377   002D40  6EDF               	movwf	indf2,c
  3378   002D42                     
  3379                           ;dc_motor.c: 135:     mL->brakemode = 1;
  3380   002D42  EE20 F002          	lfsr	2,2
  3381   002D46  501C               	movf	turnLeft@mL^0,w,c
  3382   002D48  26D9               	addwf	fsr2l,f,c
  3383   002D4A  501D               	movf	(turnLeft@mL+1)^0,w,c
  3384   002D4C  22DA               	addwfc	fsr2h,f,c
  3385   002D4E  0E01               	movlw	1
  3386   002D50  6EDF               	movwf	indf2,c
  3387   002D52                     
  3388                           ;dc_motor.c: 136:     mR->brakemode = 1;
  3389   002D52  EE20 F002          	lfsr	2,2
  3390   002D56  501E               	movf	turnLeft@mR^0,w,c
  3391   002D58  26D9               	addwf	fsr2l,f,c
  3392   002D5A  501F               	movf	(turnLeft@mR+1)^0,w,c
  3393   002D5C  22DA               	addwfc	fsr2h,f,c
  3394   002D5E  0E01               	movlw	1
  3395   002D60  6EDF               	movwf	indf2,c
  3396   002D62                     
  3397                           ;dc_motor.c: 137:     mL->direction = 0;
  3398   002D62  EE20 F001          	lfsr	2,1
  3399   002D66  501C               	movf	turnLeft@mL^0,w,c
  3400   002D68  26D9               	addwf	fsr2l,f,c
  3401   002D6A  501D               	movf	(turnLeft@mL+1)^0,w,c
  3402   002D6C  22DA               	addwfc	fsr2h,f,c
  3403   002D6E  0E00               	movlw	0
  3404   002D70  6EDF               	movwf	indf2,c
  3405   002D72                     
  3406                           ;dc_motor.c: 138:     mR->direction = 1;
  3407   002D72  EE20 F001          	lfsr	2,1
  3408   002D76  501E               	movf	turnLeft@mR^0,w,c
  3409   002D78  26D9               	addwf	fsr2l,f,c
  3410   002D7A  501F               	movf	(turnLeft@mR+1)^0,w,c
  3411   002D7C  22DA               	addwfc	fsr2h,f,c
  3412   002D7E  0E01               	movlw	1
  3413   002D80  6EDF               	movwf	indf2,c
  3414   002D82                     
  3415                           ;dc_motor.c: 139:     setMotorPWM(mL);
  3416   002D82  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  3417   002D86  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  3418   002D8A  ECAD  F012         	call	_setMotorPWM	;wreg free
  3419   002D8E                     
  3420                           ;dc_motor.c: 140:     setMotorPWM(mR);
  3421   002D8E  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  3422   002D92  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  3423   002D96  ECAD  F012         	call	_setMotorPWM	;wreg free
  3424   002D9A  0012               	return		;funcret
  3425   002D9C                     __end_of_turnLeft:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _reverse *****************
  3429 ;; Defined at:
  3430 ;;		line 189 in file "dc_motor.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3433 ;;		 -> main@mL(9), 
  3434 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3435 ;;		 -> main@mR(9), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;		None
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3447 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3449 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3450 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3451 ;;Total ram usage:        5 bytes
  3452 ;; Hardware stack levels used: 1
  3453 ;; Hardware stack levels required when called: 8
  3454 ;; This function calls:
  3455 ;;		_setMotorPWM
  3456 ;; This function is called by:
  3457 ;;		_motor_response
  3458 ;;		_motor_retrace
  3459 ;; This function uses a non-reentrant model
  3460 ;;
  3461                           
  3462                           	psect	text8
  3463   00291C                     __ptext8:
  3464                           	callstack 0
  3465   00291C                     _reverse:
  3466                           	callstack 21
  3467   00291C                     
  3468                           ;dc_motor.c: 189: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 190: {;dc_motor.c
      +                          : 191:     mL->power = 5;
  3469   00291C  C01C  FFD9         	movff	reverse@mL,fsr2l
  3470   002920  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3471   002924  0E05               	movlw	5
  3472   002926  6EDF               	movwf	indf2,c
  3473                           
  3474                           ;dc_motor.c: 192:     mR->power = 5;
  3475   002928  C01E  FFD9         	movff	reverse@mR,fsr2l
  3476   00292C  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3477   002930  0E05               	movlw	5
  3478   002932  6EDF               	movwf	indf2,c
  3479   002934                     
  3480                           ;dc_motor.c: 193:     mR->direction = 0;
  3481   002934  EE20 F001          	lfsr	2,1
  3482   002938  501E               	movf	reverse@mR^0,w,c
  3483   00293A  26D9               	addwf	fsr2l,f,c
  3484   00293C  501F               	movf	(reverse@mR+1)^0,w,c
  3485   00293E  22DA               	addwfc	fsr2h,f,c
  3486   002940  0E00               	movlw	0
  3487   002942  6EDF               	movwf	indf2,c
  3488   002944                     
  3489                           ;dc_motor.c: 194:     mL->direction = 0;
  3490   002944  EE20 F001          	lfsr	2,1
  3491   002948  501C               	movf	reverse@mL^0,w,c
  3492   00294A  26D9               	addwf	fsr2l,f,c
  3493   00294C  501D               	movf	(reverse@mL+1)^0,w,c
  3494   00294E  22DA               	addwfc	fsr2h,f,c
  3495   002950  0E00               	movlw	0
  3496   002952  6EDF               	movwf	indf2,c
  3497   002954                     
  3498                           ;dc_motor.c: 195:     mL->brakemode = 1;
  3499   002954  EE20 F002          	lfsr	2,2
  3500   002958  501C               	movf	reverse@mL^0,w,c
  3501   00295A  26D9               	addwf	fsr2l,f,c
  3502   00295C  501D               	movf	(reverse@mL+1)^0,w,c
  3503   00295E  22DA               	addwfc	fsr2h,f,c
  3504   002960  0E01               	movlw	1
  3505   002962  6EDF               	movwf	indf2,c
  3506   002964                     
  3507                           ;dc_motor.c: 196:     mR->brakemode = 1;
  3508   002964  EE20 F002          	lfsr	2,2
  3509   002968  501E               	movf	reverse@mR^0,w,c
  3510   00296A  26D9               	addwf	fsr2l,f,c
  3511   00296C  501F               	movf	(reverse@mR+1)^0,w,c
  3512   00296E  22DA               	addwfc	fsr2h,f,c
  3513   002970  0E01               	movlw	1
  3514   002972  6EDF               	movwf	indf2,c
  3515                           
  3516                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  3517   002974  EFD9  F014         	goto	l598
  3518   002978                     l2428:
  3519                           
  3520                           ;dc_motor.c: 198:     {;dc_motor.c: 199:         mL->power++;
  3521   002978  C01C  FFD9         	movff	reverse@mL,fsr2l
  3522   00297C  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3523   002980  2ADF               	incf	indf2,f,c
  3524                           
  3525                           ;dc_motor.c: 200:         mR->power++;
  3526   002982  C01E  FFD9         	movff	reverse@mR,fsr2l
  3527   002986  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3528   00298A  2ADF               	incf	indf2,f,c
  3529   00298C                     
  3530                           ;dc_motor.c: 201:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3531   00298C  0ED0               	movlw	208
  3532   00298E  6E20               	movwf	??_reverse^0,c
  3533   002990  0ECA               	movlw	202
  3534   002992                     u2667:
  3535   002992  2EE8               	decfsz	wreg,f,c
  3536   002994  D7FE               	bra	u2667
  3537   002996  2E20               	decfsz	??_reverse^0,f,c
  3538   002998  D7FC               	bra	u2667
  3539   00299A                     
  3540                           ;dc_motor.c: 202:         setMotorPWM(mL);
  3541   00299A  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  3542   00299E  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  3543   0029A2  ECAD  F012         	call	_setMotorPWM	;wreg free
  3544   0029A6                     
  3545                           ;dc_motor.c: 203:         setMotorPWM(mR);
  3546   0029A6  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  3547   0029AA  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  3548   0029AE  ECAD  F012         	call	_setMotorPWM	;wreg free
  3549   0029B2                     l598:
  3550                           
  3551                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  3552   0029B2  C01C  FFD9         	movff	reverse@mL,fsr2l
  3553   0029B6  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3554   0029BA  0E15               	movlw	21
  3555   0029BC  60DF               	cpfslt	indf2,c
  3556   0029BE  EFE3  F014         	goto	u1291
  3557   0029C2  EFE5  F014         	goto	u1290
  3558   0029C6                     u1291:
  3559   0029C6  EFF1  F014         	goto	l2438
  3560   0029CA                     u1290:
  3561   0029CA  C01E  FFD9         	movff	reverse@mR,fsr2l
  3562   0029CE  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3563   0029D2  0E14               	movlw	20
  3564   0029D4  64DF               	cpfsgt	indf2,c
  3565   0029D6  EFEF  F014         	goto	u1301
  3566   0029DA  EFF1  F014         	goto	u1300
  3567   0029DE                     u1301:
  3568   0029DE  EFBC  F014         	goto	l2428
  3569   0029E2                     u1300:
  3570   0029E2                     l2438:
  3571                           
  3572                           ;dc_motor.c: 205:     mL->power = 20;
  3573   0029E2  C01C  FFD9         	movff	reverse@mL,fsr2l
  3574   0029E6  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3575   0029EA  0E14               	movlw	20
  3576   0029EC  6EDF               	movwf	indf2,c
  3577                           
  3578                           ;dc_motor.c: 206:     mR->power = 20;
  3579   0029EE  C01E  FFD9         	movff	reverse@mR,fsr2l
  3580   0029F2  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3581   0029F6  0E14               	movlw	20
  3582   0029F8  6EDF               	movwf	indf2,c
  3583   0029FA                     
  3584                           ;dc_motor.c: 207:     setMotorPWM(mL);
  3585   0029FA  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  3586   0029FE  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  3587   002A02  ECAD  F012         	call	_setMotorPWM	;wreg free
  3588   002A06                     
  3589                           ;dc_motor.c: 208:     setMotorPWM(mR);
  3590   002A06  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  3591   002A0A  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  3592   002A0E  ECAD  F012         	call	_setMotorPWM	;wreg free
  3593   002A12  0012               	return		;funcret
  3594   002A14                     __end_of_reverse:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _norm_stop *****************
  3598 ;; Defined at:
  3599 ;;		line 118 in file "dc_motor.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3602 ;;		 -> main@mL(9), 
  3603 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3604 ;;		 -> main@mR(9), 
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;Total ram usage:        4 bytes
  3621 ;; Hardware stack levels used: 1
  3622 ;; Hardware stack levels required when called: 8
  3623 ;; This function calls:
  3624 ;;		_setMotorPWM
  3625 ;; This function is called by:
  3626 ;;		_motor_response
  3627 ;;		_motor_retrace
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text9
  3633   003068                     __ptext9:
  3634                           	callstack 0
  3635   003068                     _norm_stop:
  3636                           	callstack 22
  3637   003068                     
  3638                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  3639   003068  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  3640   00306C  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  3641   003070  0E00               	movlw	0
  3642   003072  6EDF               	movwf	indf2,c
  3643                           
  3644                           ;dc_motor.c: 125:     mR->power = 0;
  3645   003074  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  3646   003078  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  3647   00307C  0E00               	movlw	0
  3648   00307E  6EDF               	movwf	indf2,c
  3649   003080                     
  3650                           ;dc_motor.c: 126:     setMotorPWM(mL);
  3651   003080  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  3652   003084  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  3653   003088  ECAD  F012         	call	_setMotorPWM	;wreg free
  3654   00308C                     
  3655                           ;dc_motor.c: 127:     setMotorPWM(mR);
  3656   00308C  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  3657   003090  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  3658   003094  ECAD  F012         	call	_setMotorPWM	;wreg free
  3659   003098  0012               	return		;funcret
  3660   00309A                     __end_of_norm_stop:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _setMotorPWM *****************
  3664 ;; Defined at:
  3665 ;;		line 56 in file "dc_motor.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  m               2   21[COMRAM] PTR struct DC_motor
  3668 ;;		 -> main@mR(9), main@mL(9), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  negDuty         1   26[COMRAM] unsigned char 
  3671 ;;  posDuty         1   25[COMRAM] unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      void 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3681 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3683 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3685 ;;Total ram usage:        6 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 7
  3688 ;; This function calls:
  3689 ;;		___lwdiv
  3690 ;;		___wmul
  3691 ;; This function is called by:
  3692 ;;		_norm_stop
  3693 ;;		_turnLeft
  3694 ;;		_turnRight
  3695 ;;		_fullSpeedAhead
  3696 ;;		_reverse
  3697 ;;		_stop
  3698 ;;		_uturn
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text10
  3703   00255A                     __ptext10:
  3704                           	callstack 0
  3705   00255A                     _setMotorPWM:
  3706                           	callstack 22
  3707   00255A                     
  3708                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  3709   00255A  EE20 F002          	lfsr	2,2
  3710   00255E  5016               	movf	setMotorPWM@m^0,w,c
  3711   002560  26D9               	addwf	fsr2l,f,c
  3712   002562  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3713   002564  22DA               	addwfc	fsr2h,f,c
  3714   002566  50DF               	movf	indf2,w,c
  3715   002568  B4D8               	btfsc	status,2,c
  3716   00256A  EFB9  F012         	goto	u1271
  3717   00256E  EFBB  F012         	goto	u1270
  3718   002572                     u1271:
  3719   002572  EFEF  F012         	goto	l2368
  3720   002576                     u1270:
  3721   002576                     
  3722                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3723   002576  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3724   00257A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3725   00257E  50DF               	movf	indf2,w,c
  3726   002580  6E18               	movwf	??_setMotorPWM^0,c
  3727   002582  5018               	movf	??_setMotorPWM^0,w,c
  3728   002584  6E09               	movwf	___wmul@multiplier^0,c
  3729   002586  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3730   002588  EE20 F003          	lfsr	2,3
  3731   00258C  5016               	movf	setMotorPWM@m^0,w,c
  3732   00258E  26D9               	addwf	fsr2l,f,c
  3733   002590  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3734   002592  22DA               	addwfc	fsr2h,f,c
  3735   002594  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3736   002598  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3737   00259C  ECCD  F018         	call	___wmul	;wreg free
  3738   0025A0  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3739   0025A4  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3740   0025A8  0E00               	movlw	0
  3741   0025AA  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3742   0025AC  0E64               	movlw	100
  3743   0025AE  6E11               	movwf	___lwdiv@divisor^0,c
  3744   0025B0  EC22  F016         	call	___lwdiv	;wreg free
  3745   0025B4  EE20 F003          	lfsr	2,3
  3746   0025B8  5016               	movf	setMotorPWM@m^0,w,c
  3747   0025BA  26D9               	addwf	fsr2l,f,c
  3748   0025BC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3749   0025BE  22DA               	addwfc	fsr2h,f,c
  3750   0025C0  50DF               	movf	indf2,w,c
  3751   0025C2  6E19               	movwf	(??_setMotorPWM+1)^0,c
  3752   0025C4  500F               	movf	?___lwdiv^0,w,c
  3753   0025C6  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  3754   0025C8  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3755   0025CA                     
  3756                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  3757   0025CA  EE20 F003          	lfsr	2,3
  3758   0025CE  5016               	movf	setMotorPWM@m^0,w,c
  3759   0025D0  26D9               	addwf	fsr2l,f,c
  3760   0025D2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3761   0025D4  22DA               	addwfc	fsr2h,f,c
  3762   0025D6  50DF               	movf	indf2,w,c
  3763   0025D8  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3764                           
  3765                           ;dc_motor.c: 63:     }
  3766   0025DA  EF12  F013         	goto	l2372
  3767   0025DE                     l2368:
  3768                           
  3769                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3770   0025DE  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3771   0025E2  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3772   0025E6  50DF               	movf	indf2,w,c
  3773   0025E8  6E18               	movwf	??_setMotorPWM^0,c
  3774   0025EA  5018               	movf	??_setMotorPWM^0,w,c
  3775   0025EC  6E09               	movwf	___wmul@multiplier^0,c
  3776   0025EE  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3777   0025F0  EE20 F003          	lfsr	2,3
  3778   0025F4  5016               	movf	setMotorPWM@m^0,w,c
  3779   0025F6  26D9               	addwf	fsr2l,f,c
  3780   0025F8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3781   0025FA  22DA               	addwfc	fsr2h,f,c
  3782   0025FC  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3783   002600  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3784   002604  ECCD  F018         	call	___wmul	;wreg free
  3785   002608  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3786   00260C  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3787   002610  0E00               	movlw	0
  3788   002612  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3789   002614  0E64               	movlw	100
  3790   002616  6E11               	movwf	___lwdiv@divisor^0,c
  3791   002618  EC22  F016         	call	___lwdiv	;wreg free
  3792   00261C  500F               	movf	?___lwdiv^0,w,c
  3793   00261E  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3794   002620                     
  3795                           ;dc_motor.c: 66:         negDuty=0;
  3796   002620  0E00               	movlw	0
  3797   002622  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3798   002624                     l2372:
  3799                           
  3800                           ;dc_motor.c: 69:     if (m->direction) {
  3801   002624  EE20 F001          	lfsr	2,1
  3802   002628  5016               	movf	setMotorPWM@m^0,w,c
  3803   00262A  26D9               	addwf	fsr2l,f,c
  3804   00262C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3805   00262E  22DA               	addwfc	fsr2h,f,c
  3806   002630  50DF               	movf	indf2,w,c
  3807   002632  B4D8               	btfsc	status,2,c
  3808   002634  EF1E  F013         	goto	u1281
  3809   002638  EF20  F013         	goto	u1280
  3810   00263C                     u1281:
  3811   00263C  EF42  F013         	goto	l2376
  3812   002640                     u1280:
  3813   002640                     
  3814                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  3815   002640  EE20 F005          	lfsr	2,5
  3816   002644  5016               	movf	setMotorPWM@m^0,w,c
  3817   002646  26D9               	addwf	fsr2l,f,c
  3818   002648  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3819   00264A  22DA               	addwfc	fsr2h,f,c
  3820   00264C  CFDE F018          	movff	postinc2,??_setMotorPWM
  3821   002650  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3822   002654  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3823   002658  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3824   00265C  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3825                           
  3826                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  3827   002660  EE20 F007          	lfsr	2,7
  3828   002664  5016               	movf	setMotorPWM@m^0,w,c
  3829   002666  26D9               	addwf	fsr2l,f,c
  3830   002668  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3831   00266A  22DA               	addwfc	fsr2h,f,c
  3832   00266C  CFDE F018          	movff	postinc2,??_setMotorPWM
  3833   002670  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3834   002674  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3835   002678  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3836   00267C  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3837                           
  3838                           ;dc_motor.c: 72:     } else {
  3839   002680  EF62  F013         	goto	l561
  3840   002684                     l2376:
  3841                           
  3842                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  3843   002684  EE20 F005          	lfsr	2,5
  3844   002688  5016               	movf	setMotorPWM@m^0,w,c
  3845   00268A  26D9               	addwf	fsr2l,f,c
  3846   00268C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3847   00268E  22DA               	addwfc	fsr2h,f,c
  3848   002690  CFDE F018          	movff	postinc2,??_setMotorPWM
  3849   002694  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3850   002698  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3851   00269C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3852   0026A0  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3853                           
  3854                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  3855   0026A4  EE20 F007          	lfsr	2,7
  3856   0026A8  5016               	movf	setMotorPWM@m^0,w,c
  3857   0026AA  26D9               	addwf	fsr2l,f,c
  3858   0026AC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3859   0026AE  22DA               	addwfc	fsr2h,f,c
  3860   0026B0  CFDE F018          	movff	postinc2,??_setMotorPWM
  3861   0026B4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3862   0026B8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3863   0026BC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3864   0026C0  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3865   0026C4                     l561:
  3866   0026C4  0012               	return		;funcret
  3867   0026C6                     __end_of_setMotorPWM:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function ___wmul *****************
  3871 ;; Defined at:
  3872 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  multiplier      2    8[COMRAM] unsigned int 
  3875 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3876 ;; Auto vars:     Size  Location     Type
  3877 ;;  product         2   12[COMRAM] unsigned int 
  3878 ;; Return value:  Size  Location     Type
  3879 ;;                  2    8[COMRAM] unsigned int 
  3880 ;; Registers used:
  3881 ;;		wreg, status,2, status,0, prodl, prodh
  3882 ;; Tracked objects:
  3883 ;;		On entry : 0/0
  3884 ;;		On exit  : 0/0
  3885 ;;		Unchanged: 0/0
  3886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3888 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3890 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;Total ram usage:        6 bytes
  3892 ;; Hardware stack levels used: 1
  3893 ;; Hardware stack levels required when called: 6
  3894 ;; This function calls:
  3895 ;;		Nothing
  3896 ;; This function is called by:
  3897 ;;		_setMotorPWM
  3898 ;; This function uses a non-reentrant model
  3899 ;;
  3900                           
  3901                           	psect	text11
  3902   00319A                     __ptext11:
  3903                           	callstack 0
  3904   00319A                     ___wmul:
  3905                           	callstack 22
  3906   00319A  5009               	movf	___wmul@multiplier^0,w,c
  3907   00319C  020B               	mulwf	___wmul@multiplicand^0,c
  3908   00319E  CFF3 F00D          	movff	prodl,___wmul@product
  3909   0031A2  CFF4 F00E          	movff	prodh,___wmul@product+1
  3910   0031A6  5009               	movf	___wmul@multiplier^0,w,c
  3911   0031A8  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  3912   0031AA  50F3               	movf	243,w,c
  3913   0031AC  260E               	addwf	(___wmul@product+1)^0,f,c
  3914   0031AE  500A               	movf	(___wmul@multiplier+1)^0,w,c
  3915   0031B0  020B               	mulwf	___wmul@multiplicand^0,c
  3916   0031B2  50F3               	movf	243,w,c
  3917   0031B4  260E               	addwf	(___wmul@product+1)^0,f,c
  3918   0031B6  C00D  F009         	movff	___wmul@product,?___wmul
  3919   0031BA  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  3920   0031BE  0012               	return		;funcret
  3921   0031C0                     __end_of___wmul:
  3922                           	callstack 0
  3923                           
  3924 ;; *************** function ___lwdiv *****************
  3925 ;; Defined at:
  3926 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  dividend        2   14[COMRAM] unsigned int 
  3929 ;;  divisor         2   16[COMRAM] unsigned int 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  quotient        2   18[COMRAM] unsigned int 
  3932 ;;  counter         1   20[COMRAM] unsigned char 
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  2   14[COMRAM] unsigned int 
  3935 ;; Registers used:
  3936 ;;		wreg, status,2, status,0
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3942 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3943 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;Total ram usage:        7 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 6
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_setMotorPWM
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956                           	psect	text12
  3957   002C44                     __ptext12:
  3958                           	callstack 0
  3959   002C44                     ___lwdiv:
  3960                           	callstack 22
  3961   002C44  0E00               	movlw	0
  3962   002C46  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  3963   002C48  0E00               	movlw	0
  3964   002C4A  6E13               	movwf	___lwdiv@quotient^0,c
  3965   002C4C  5011               	movf	___lwdiv@divisor^0,w,c
  3966   002C4E  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3967   002C50  B4D8               	btfsc	status,2,c
  3968   002C52  EF2D  F016         	goto	u1221
  3969   002C56  EF2F  F016         	goto	u1220
  3970   002C5A                     u1221:
  3971   002C5A  EF57  F016         	goto	l1097
  3972   002C5E                     u1220:
  3973   002C5E  0E01               	movlw	1
  3974   002C60  6E15               	movwf	___lwdiv@counter^0,c
  3975   002C62  EF37  F016         	goto	l2306
  3976   002C66                     l2304:
  3977   002C66  90D8               	bcf	status,0,c
  3978   002C68  3611               	rlcf	___lwdiv@divisor^0,f,c
  3979   002C6A  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3980   002C6C  2A15               	incf	___lwdiv@counter^0,f,c
  3981   002C6E                     l2306:
  3982   002C6E  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  3983   002C70  EF3C  F016         	goto	u1231
  3984   002C74  EF3E  F016         	goto	u1230
  3985   002C78                     u1231:
  3986   002C78  EF33  F016         	goto	l2304
  3987   002C7C                     u1230:
  3988   002C7C                     l2308:
  3989   002C7C  90D8               	bcf	status,0,c
  3990   002C7E  3613               	rlcf	___lwdiv@quotient^0,f,c
  3991   002C80  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3992   002C82  5011               	movf	___lwdiv@divisor^0,w,c
  3993   002C84  5C0F               	subwf	___lwdiv@dividend^0,w,c
  3994   002C86  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  3995   002C88  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3996   002C8A  A0D8               	btfss	status,0,c
  3997   002C8C  EF4A  F016         	goto	u1241
  3998   002C90  EF4C  F016         	goto	u1240
  3999   002C94                     u1241:
  4000   002C94  EF51  F016         	goto	l2316
  4001   002C98                     u1240:
  4002   002C98  5011               	movf	___lwdiv@divisor^0,w,c
  4003   002C9A  5E0F               	subwf	___lwdiv@dividend^0,f,c
  4004   002C9C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  4005   002C9E  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4006   002CA0  8013               	bsf	___lwdiv@quotient^0,0,c
  4007   002CA2                     l2316:
  4008   002CA2  90D8               	bcf	status,0,c
  4009   002CA4  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4010   002CA6  3211               	rrcf	___lwdiv@divisor^0,f,c
  4011   002CA8  2E15               	decfsz	___lwdiv@counter^0,f,c
  4012   002CAA  EF3E  F016         	goto	l2308
  4013   002CAE                     l1097:
  4014   002CAE  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4015   002CB2  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4016   002CB6  0012               	return		;funcret
  4017   002CB8                     __end_of___lwdiv:
  4018                           	callstack 0
  4019                           
  4020 ;; *************** function ___flge *****************
  4021 ;; Defined at:
  4022 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  4023 ;; Parameters:    Size  Location     Type
  4024 ;;  ff1             4    8[COMRAM] unsigned int 
  4025 ;;  ff2             4   12[COMRAM] unsigned int 
  4026 ;; Auto vars:     Size  Location     Type
  4027 ;;		None
  4028 ;; Return value:  Size  Location     Type
  4029 ;;		None               void
  4030 ;; Registers used:
  4031 ;;		wreg, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4037 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4039 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4040 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;Total ram usage:       12 bytes
  4042 ;; Hardware stack levels used: 1
  4043 ;; Hardware stack levels required when called: 6
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_motor_response
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text13
  4052   002818                     __ptext13:
  4053                           	callstack 0
  4054   002818                     ___flge:
  4055                           	callstack 23
  4056   002818  0E00               	movlw	0
  4057   00281A  1409               	andwf	___flge@ff1^0,w,c
  4058   00281C  6E11               	movwf	??___flge^0,c
  4059   00281E  0E00               	movlw	0
  4060   002820  140A               	andwf	(___flge@ff1+1)^0,w,c
  4061   002822  6E12               	movwf	(??___flge+1)^0,c
  4062   002824  0E80               	movlw	128
  4063   002826  140B               	andwf	(___flge@ff1+2)^0,w,c
  4064   002828  6E13               	movwf	(??___flge+2)^0,c
  4065   00282A  0E7F               	movlw	127
  4066   00282C  140C               	andwf	(___flge@ff1+3)^0,w,c
  4067   00282E  6E14               	movwf	(??___flge+3)^0,c
  4068   002830  5011               	movf	??___flge^0,w,c
  4069   002832  1012               	iorwf	(??___flge+1)^0,w,c
  4070   002834  1013               	iorwf	(??___flge+2)^0,w,c
  4071   002836  1014               	iorwf	(??___flge+3)^0,w,c
  4072   002838  A4D8               	btfss	status,2,c
  4073   00283A  EF21  F014         	goto	u1561
  4074   00283E  EF23  F014         	goto	u1560
  4075   002842                     u1561:
  4076   002842  EF2B  F014         	goto	l2646
  4077   002846                     u1560:
  4078   002846  0E00               	movlw	0
  4079   002848  6E09               	movwf	___flge@ff1^0,c
  4080   00284A  0E00               	movlw	0
  4081   00284C  6E0A               	movwf	(___flge@ff1+1)^0,c
  4082   00284E  0E00               	movlw	0
  4083   002850  6E0B               	movwf	(___flge@ff1+2)^0,c
  4084   002852  0E00               	movlw	0
  4085   002854  6E0C               	movwf	(___flge@ff1+3)^0,c
  4086   002856                     l2646:
  4087   002856  0E00               	movlw	0
  4088   002858  140D               	andwf	___flge@ff2^0,w,c
  4089   00285A  6E11               	movwf	??___flge^0,c
  4090   00285C  0E00               	movlw	0
  4091   00285E  140E               	andwf	(___flge@ff2+1)^0,w,c
  4092   002860  6E12               	movwf	(??___flge+1)^0,c
  4093   002862  0E80               	movlw	128
  4094   002864  140F               	andwf	(___flge@ff2+2)^0,w,c
  4095   002866  6E13               	movwf	(??___flge+2)^0,c
  4096   002868  0E7F               	movlw	127
  4097   00286A  1410               	andwf	(___flge@ff2+3)^0,w,c
  4098   00286C  6E14               	movwf	(??___flge+3)^0,c
  4099   00286E  5011               	movf	??___flge^0,w,c
  4100   002870  1012               	iorwf	(??___flge+1)^0,w,c
  4101   002872  1013               	iorwf	(??___flge+2)^0,w,c
  4102   002874  1014               	iorwf	(??___flge+3)^0,w,c
  4103   002876  A4D8               	btfss	status,2,c
  4104   002878  EF40  F014         	goto	u1571
  4105   00287C  EF42  F014         	goto	u1570
  4106   002880                     u1571:
  4107   002880  EF4A  F014         	goto	l2650
  4108   002884                     u1570:
  4109   002884  0E00               	movlw	0
  4110   002886  6E0D               	movwf	___flge@ff2^0,c
  4111   002888  0E00               	movlw	0
  4112   00288A  6E0E               	movwf	(___flge@ff2+1)^0,c
  4113   00288C  0E00               	movlw	0
  4114   00288E  6E0F               	movwf	(___flge@ff2+2)^0,c
  4115   002890  0E00               	movlw	0
  4116   002892  6E10               	movwf	(___flge@ff2+3)^0,c
  4117   002894                     l2650:
  4118   002894  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  4119   002896  EF4F  F014         	goto	u1581
  4120   00289A  EF51  F014         	goto	u1580
  4121   00289E                     u1581:
  4122   00289E  EF5A  F014         	goto	l2654
  4123   0028A2                     u1580:
  4124   0028A2  6C09               	negf	___flge@ff1^0,c
  4125   0028A4  1E0A               	comf	(___flge@ff1+1)^0,f,c
  4126   0028A6  B0D8               	btfsc	status,0,c
  4127   0028A8  2A0A               	incf	(___flge@ff1+1)^0,f,c
  4128   0028AA  1E0B               	comf	(___flge@ff1+2)^0,f,c
  4129   0028AC  B0D8               	btfsc	status,0,c
  4130   0028AE  2A0B               	incf	(___flge@ff1+2)^0,f,c
  4131   0028B0  0E80               	movlw	128
  4132   0028B2  560C               	subfwb	(___flge@ff1+3)^0,f,c
  4133   0028B4                     l2654:
  4134   0028B4  AE10               	btfss	(___flge@ff2+3)^0,7,c
  4135   0028B6  EF5F  F014         	goto	u1591
  4136   0028BA  EF61  F014         	goto	u1590
  4137   0028BE                     u1591:
  4138   0028BE  EF6A  F014         	goto	l871
  4139   0028C2                     u1590:
  4140   0028C2  6C0D               	negf	___flge@ff2^0,c
  4141   0028C4  1E0E               	comf	(___flge@ff2+1)^0,f,c
  4142   0028C6  B0D8               	btfsc	status,0,c
  4143   0028C8  2A0E               	incf	(___flge@ff2+1)^0,f,c
  4144   0028CA  1E0F               	comf	(___flge@ff2+2)^0,f,c
  4145   0028CC  B0D8               	btfsc	status,0,c
  4146   0028CE  2A0F               	incf	(___flge@ff2+2)^0,f,c
  4147   0028D0  0E80               	movlw	128
  4148   0028D2  5610               	subfwb	(___flge@ff2+3)^0,f,c
  4149   0028D4                     l871:
  4150   0028D4  0E00               	movlw	0
  4151   0028D6  1A09               	xorwf	___flge@ff1^0,f,c
  4152   0028D8  0E00               	movlw	0
  4153   0028DA  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  4154   0028DC  0E00               	movlw	0
  4155   0028DE  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  4156   0028E0  0E80               	movlw	128
  4157   0028E2  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  4158   0028E4  0E00               	movlw	0
  4159   0028E6  1A0D               	xorwf	___flge@ff2^0,f,c
  4160   0028E8  0E00               	movlw	0
  4161   0028EA  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  4162   0028EC  0E00               	movlw	0
  4163   0028EE  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  4164   0028F0  0E80               	movlw	128
  4165   0028F2  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  4166   0028F4  500D               	movf	___flge@ff2^0,w,c
  4167   0028F6  5C09               	subwf	___flge@ff1^0,w,c
  4168   0028F8  500E               	movf	(___flge@ff2+1)^0,w,c
  4169   0028FA  580A               	subwfb	(___flge@ff1+1)^0,w,c
  4170   0028FC  500F               	movf	(___flge@ff2+2)^0,w,c
  4171   0028FE  580B               	subwfb	(___flge@ff1+2)^0,w,c
  4172   002900  5010               	movf	(___flge@ff2+3)^0,w,c
  4173   002902  580C               	subwfb	(___flge@ff1+3)^0,w,c
  4174   002904  B0D8               	btfsc	status,0,c
  4175   002906  EF87  F014         	goto	u1601
  4176   00290A  EF89  F014         	goto	u1600
  4177   00290E                     u1601:
  4178   00290E  EF8C  F014         	goto	l2660
  4179   002912                     u1600:
  4180   002912  90D8               	bcf	status,0,c
  4181   002914  EF8D  F014         	goto	l876
  4182   002918                     l2660:
  4183   002918  80D8               	bsf	status,0,c
  4184   00291A                     l876:
  4185   00291A  0012               	return		;funcret
  4186   00291C                     __end_of___flge:
  4187                           	callstack 0
  4188                           
  4189 ;; *************** function _motorRinit *****************
  4190 ;; Defined at:
  4191 ;;		line 88 in file "dc_motor.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  4194 ;;		 -> main@mR(9), 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;		None
  4197 ;; Return value:  Size  Location     Type
  4198 ;;                  1    wreg      void 
  4199 ;; Registers used:
  4200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4201 ;; Tracked objects:
  4202 ;;		On entry : 0/0
  4203 ;;		On exit  : 0/0
  4204 ;;		Unchanged: 0/0
  4205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;Total ram usage:        2 bytes
  4211 ;; Hardware stack levels used: 1
  4212 ;; Hardware stack levels required when called: 6
  4213 ;; This function calls:
  4214 ;;		Nothing
  4215 ;; This function is called by:
  4216 ;;		_main
  4217 ;; This function uses a non-reentrant model
  4218 ;;
  4219                           
  4220                           	psect	text14
  4221   002D9C                     __ptext14:
  4222                           	callstack 0
  4223   002D9C                     _motorRinit:
  4224                           	callstack 24
  4225   002D9C                     
  4226                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  4227   002D9C  C009  FFD9         	movff	motorRinit@mR,fsr2l
  4228   002DA0  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  4229   002DA4  0E32               	movlw	50
  4230   002DA6  6EDF               	movwf	indf2,c
  4231   002DA8                     
  4232                           ;dc_motor.c: 91:     mR->direction = 1;
  4233   002DA8  EE20 F001          	lfsr	2,1
  4234   002DAC  5009               	movf	motorRinit@mR^0,w,c
  4235   002DAE  26D9               	addwf	fsr2l,f,c
  4236   002DB0  500A               	movf	(motorRinit@mR+1)^0,w,c
  4237   002DB2  22DA               	addwfc	fsr2h,f,c
  4238   002DB4  0E01               	movlw	1
  4239   002DB6  6EDF               	movwf	indf2,c
  4240   002DB8                     
  4241                           ;dc_motor.c: 92:     mR->brakemode = 1;
  4242   002DB8  EE20 F002          	lfsr	2,2
  4243   002DBC  5009               	movf	motorRinit@mR^0,w,c
  4244   002DBE  26D9               	addwf	fsr2l,f,c
  4245   002DC0  500A               	movf	(motorRinit@mR+1)^0,w,c
  4246   002DC2  22DA               	addwfc	fsr2h,f,c
  4247   002DC4  0E01               	movlw	1
  4248   002DC6  6EDF               	movwf	indf2,c
  4249   002DC8                     
  4250                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  4251   002DC8  EE20 F005          	lfsr	2,5
  4252   002DCC  5009               	movf	motorRinit@mR^0,w,c
  4253   002DCE  26D9               	addwf	fsr2l,f,c
  4254   002DD0  500A               	movf	(motorRinit@mR+1)^0,w,c
  4255   002DD2  22DA               	addwfc	fsr2h,f,c
  4256   002DD4  0E25               	movlw	37
  4257   002DD6  6EDE               	movwf	postinc2,c
  4258   002DD8  0E0F               	movlw	15
  4259   002DDA  6EDD               	movwf	postdec2,c
  4260   002DDC                     
  4261                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  4262   002DDC  EE20 F007          	lfsr	2,7
  4263   002DE0  5009               	movf	motorRinit@mR^0,w,c
  4264   002DE2  26D9               	addwf	fsr2l,f,c
  4265   002DE4  500A               	movf	(motorRinit@mR+1)^0,w,c
  4266   002DE6  22DA               	addwfc	fsr2h,f,c
  4267   002DE8  0E21               	movlw	33
  4268   002DEA  6EDE               	movwf	postinc2,c
  4269   002DEC  0E0F               	movlw	15
  4270   002DEE  6EDD               	movwf	postdec2,c
  4271   002DF0                     
  4272                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  4273   002DF0  EE20 F003          	lfsr	2,3
  4274   002DF4  5009               	movf	motorRinit@mR^0,w,c
  4275   002DF6  26D9               	addwf	fsr2l,f,c
  4276   002DF8  500A               	movf	(motorRinit@mR+1)^0,w,c
  4277   002DFA  22DA               	addwfc	fsr2h,f,c
  4278   002DFC  0EC8               	movlw	200
  4279   002DFE  6EDE               	movwf	postinc2,c
  4280   002E00  0E00               	movlw	0
  4281   002E02  6EDD               	movwf	postdec2,c
  4282   002E04  0012               	return		;funcret
  4283   002E06                     __end_of_motorRinit:
  4284                           	callstack 0
  4285                           
  4286 ;; *************** function _motorLinit *****************
  4287 ;; Defined at:
  4288 ;;		line 78 in file "dc_motor.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  4291 ;;		 -> main@mL(9), 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;Total ram usage:        2 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 6
  4310 ;; This function calls:
  4311 ;;		Nothing
  4312 ;; This function is called by:
  4313 ;;		_main
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           	psect	text15
  4318   002E06                     __ptext15:
  4319                           	callstack 0
  4320   002E06                     _motorLinit:
  4321                           	callstack 24
  4322   002E06                     
  4323                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  4324   002E06  C009  FFD9         	movff	motorLinit@mL,fsr2l
  4325   002E0A  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  4326   002E0E  0E32               	movlw	50
  4327   002E10  6EDF               	movwf	indf2,c
  4328   002E12                     
  4329                           ;dc_motor.c: 81:     mL->direction = 1;
  4330   002E12  EE20 F001          	lfsr	2,1
  4331   002E16  5009               	movf	motorLinit@mL^0,w,c
  4332   002E18  26D9               	addwf	fsr2l,f,c
  4333   002E1A  500A               	movf	(motorLinit@mL+1)^0,w,c
  4334   002E1C  22DA               	addwfc	fsr2h,f,c
  4335   002E1E  0E01               	movlw	1
  4336   002E20  6EDF               	movwf	indf2,c
  4337   002E22                     
  4338                           ;dc_motor.c: 82:     mL->brakemode = 1;
  4339   002E22  EE20 F002          	lfsr	2,2
  4340   002E26  5009               	movf	motorLinit@mL^0,w,c
  4341   002E28  26D9               	addwf	fsr2l,f,c
  4342   002E2A  500A               	movf	(motorLinit@mL+1)^0,w,c
  4343   002E2C  22DA               	addwfc	fsr2h,f,c
  4344   002E2E  0E01               	movlw	1
  4345   002E30  6EDF               	movwf	indf2,c
  4346   002E32                     
  4347                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  4348   002E32  EE20 F005          	lfsr	2,5
  4349   002E36  5009               	movf	motorLinit@mL^0,w,c
  4350   002E38  26D9               	addwf	fsr2l,f,c
  4351   002E3A  500A               	movf	(motorLinit@mL+1)^0,w,c
  4352   002E3C  22DA               	addwfc	fsr2h,f,c
  4353   002E3E  0EAA               	movlw	170
  4354   002E40  6EDE               	movwf	postinc2,c
  4355   002E42  0E0F               	movlw	15
  4356   002E44  6EDD               	movwf	postdec2,c
  4357   002E46                     
  4358                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  4359   002E46  EE20 F007          	lfsr	2,7
  4360   002E4A  5009               	movf	motorLinit@mL^0,w,c
  4361   002E4C  26D9               	addwf	fsr2l,f,c
  4362   002E4E  500A               	movf	(motorLinit@mL+1)^0,w,c
  4363   002E50  22DA               	addwfc	fsr2h,f,c
  4364   002E52  0EA6               	movlw	166
  4365   002E54  6EDE               	movwf	postinc2,c
  4366   002E56  0E0F               	movlw	15
  4367   002E58  6EDD               	movwf	postdec2,c
  4368   002E5A                     
  4369                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  4370   002E5A  EE20 F003          	lfsr	2,3
  4371   002E5E  5009               	movf	motorLinit@mL^0,w,c
  4372   002E60  26D9               	addwf	fsr2l,f,c
  4373   002E62  500A               	movf	(motorLinit@mL+1)^0,w,c
  4374   002E64  22DA               	addwfc	fsr2h,f,c
  4375   002E66  0EC8               	movlw	200
  4376   002E68  6EDE               	movwf	postinc2,c
  4377   002E6A  0E00               	movlw	0
  4378   002E6C  6EDD               	movwf	postdec2,c
  4379   002E6E  0012               	return		;funcret
  4380   002E70                     __end_of_motorLinit:
  4381                           	callstack 0
  4382                           
  4383 ;; *************** function _initDCmotorsPWM *****************
  4384 ;; Defined at:
  4385 ;;		line 5 in file "dc_motor.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  1    wreg      void 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4402 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4403 ;;Total ram usage:        2 bytes
  4404 ;; Hardware stack levels used: 1
  4405 ;; Hardware stack levels required when called: 6
  4406 ;; This function calls:
  4407 ;;		Nothing
  4408 ;; This function is called by:
  4409 ;;		_main
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text16
  4414   002BC4                     __ptext16:
  4415                           	callstack 0
  4416   002BC4                     _initDCmotorsPWM:
  4417                           	callstack 24
  4418   002BC4                     
  4419                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4420   002BC4  0E05               	movlw	5
  4421   002BC6  010E               	movlb	14	; () banked
  4422   002BC8  6F74               	movwf	116,b	;volatile
  4423                           
  4424                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4425   002BCA  0E06               	movlw	6
  4426   002BCC  6F76               	movwf	118,b	;volatile
  4427                           
  4428                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4429   002BCE  0E07               	movlw	7
  4430   002BD0  6F69               	movwf	105,b	;volatile
  4431                           
  4432                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4433   002BD2  0E08               	movlw	8
  4434   002BD4  6F88               	movwf	136,b	;volatile
  4435                           
  4436                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  4437   002BD6  50BD               	movf	189,w,c	;volatile
  4438   002BD8  0B8F               	andlw	-113
  4439   002BDA  0930               	iorlw	48
  4440   002BDC  6EBD               	movwf	189,c	;volatile
  4441                           
  4442                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  4443   002BDE  0EE0               	movlw	-32
  4444   002BE0  16BE               	andwf	190,f,c	;volatile
  4445                           
  4446                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  4447   002BE2  50BF               	movf	191,w,c	;volatile
  4448   002BE4  0BF0               	andlw	-16
  4449   002BE6  0901               	iorlw	1
  4450   002BE8  6EBF               	movwf	191,c	;volatile
  4451                           
  4452                           ;dc_motor.c: 21:     T2PR=200;
  4453   002BEA  0EC8               	movlw	200
  4454   002BEC  6EBC               	movwf	188,c	;volatile
  4455   002BEE                     
  4456                           ; BSR set to: 14
  4457                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  4458   002BEE  8EBD               	bsf	189,7,c	;volatile
  4459                           
  4460                           ;dc_motor.c: 26:     CCPR1H=0;
  4461   002BF0  0E00               	movlw	0
  4462   002BF2  6EAA               	movwf	170,c	;volatile
  4463                           
  4464                           ;dc_motor.c: 27:     CCPR2H=0;
  4465   002BF4  0E00               	movlw	0
  4466   002BF6  6EA6               	movwf	166,c	;volatile
  4467                           
  4468                           ;dc_motor.c: 28:     CCPR3H=0;
  4469   002BF8  0E00               	movlw	0
  4470   002BFA  010F               	movlb	15	; () banked
  4471   002BFC  6F25               	movwf	37,b	;volatile
  4472                           
  4473                           ;dc_motor.c: 29:     CCPR4H=0;
  4474   002BFE  0E00               	movlw	0
  4475   002C00  6F21               	movwf	33,b	;volatile
  4476                           
  4477                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  4478   002C02  0EFC               	movlw	-4
  4479   002C04  16AD               	andwf	173,f,c	;volatile
  4480                           
  4481                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  4482   002C06  0EF3               	movlw	-13
  4483   002C08  16AD               	andwf	173,f,c	;volatile
  4484                           
  4485                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  4486   002C0A  0ECF               	movlw	-49
  4487   002C0C  16AD               	andwf	173,f,c	;volatile
  4488                           
  4489                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  4490   002C0E  0E3F               	movlw	-193
  4491   002C10  16AD               	andwf	173,f,c	;volatile
  4492   002C12                     
  4493                           ; BSR set to: 15
  4494                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  4495   002C12  88AB               	bsf	171,4,c	;volatile
  4496                           
  4497                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  4498   002C14  50AB               	movf	171,w,c	;volatile
  4499   002C16  0BF0               	andlw	-16
  4500   002C18  090C               	iorlw	12
  4501   002C1A  6EAB               	movwf	171,c	;volatile
  4502   002C1C                     
  4503                           ; BSR set to: 15
  4504                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  4505   002C1C  8EAB               	bsf	171,7,c	;volatile
  4506   002C1E                     
  4507                           ; BSR set to: 15
  4508                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  4509   002C1E  88A7               	bsf	167,4,c	;volatile
  4510                           
  4511                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  4512   002C20  50A7               	movf	167,w,c	;volatile
  4513   002C22  0BF0               	andlw	-16
  4514   002C24  090C               	iorlw	12
  4515   002C26  6EA7               	movwf	167,c	;volatile
  4516   002C28                     
  4517                           ; BSR set to: 15
  4518                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  4519   002C28  8EA7               	bsf	167,7,c	;volatile
  4520   002C2A                     
  4521                           ; BSR set to: 15
  4522                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  4523   002C2A  8926               	bsf	38,4,b	;volatile
  4524                           
  4525                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  4526   002C2C  5126               	movf	38,w,b	;volatile
  4527   002C2E  0BF0               	andlw	-16
  4528   002C30  090C               	iorlw	12
  4529   002C32  6F26               	movwf	38,b	;volatile
  4530   002C34                     
  4531                           ; BSR set to: 15
  4532                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  4533   002C34  8F26               	bsf	38,7,b	;volatile
  4534   002C36                     
  4535                           ; BSR set to: 15
  4536                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  4537   002C36  8922               	bsf	34,4,b	;volatile
  4538                           
  4539                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  4540   002C38  5122               	movf	34,w,b	;volatile
  4541   002C3A  0BF0               	andlw	-16
  4542   002C3C  090C               	iorlw	12
  4543   002C3E  6F22               	movwf	34,b	;volatile
  4544   002C40                     
  4545                           ; BSR set to: 15
  4546                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  4547   002C40  8F22               	bsf	34,7,b	;volatile
  4548   002C42                     
  4549                           ; BSR set to: 15
  4550   002C42  0012               	return		;funcret
  4551   002C44                     __end_of_initDCmotorsPWM:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _color_read_RGBC *****************
  4555 ;; Defined at:
  4556 ;;		line 89 in file "color.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  4559 ;;		 -> main@RGBC(32), 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      void 
  4564 ;; Registers used:
  4565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4575 ;;Total ram usage:        2 bytes
  4576 ;; Hardware stack levels used: 1
  4577 ;; Hardware stack levels required when called: 9
  4578 ;; This function calls:
  4579 ;;		___xxtofl
  4580 ;;		_color_read_Blue
  4581 ;;		_color_read_Clear
  4582 ;;		_color_read_Green
  4583 ;;		_color_read_Red
  4584 ;; This function is called by:
  4585 ;;		_main
  4586 ;; This function uses a non-reentrant model
  4587 ;;
  4588                           
  4589                           	psect	text17
  4590   002AFE                     __ptext17:
  4591                           	callstack 0
  4592   002AFE                     _color_read_RGBC:
  4593                           	callstack 21
  4594   002AFE                     
  4595                           ;color.c: 90:     temp->R = color_read_Red();
  4596   002AFE  EC38  F017         	call	_color_read_Red	;wreg free
  4597   002B02  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  4598   002B06  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  4599   002B0A  6A16               	clrf	(___xxtofl@val+2)^0,c
  4600   002B0C  6A17               	clrf	(___xxtofl@val+3)^0,c
  4601   002B0E  0E00               	movlw	0
  4602   002B10  ECD3  F011         	call	___xxtofl
  4603   002B14  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  4604   002B18  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  4605   002B1C  C014  FFDE         	movff	?___xxtofl,postinc2
  4606   002B20  C015  FFDE         	movff	?___xxtofl+1,postinc2
  4607   002B24  C016  FFDE         	movff	?___xxtofl+2,postinc2
  4608   002B28  C017  FFDE         	movff	?___xxtofl+3,postinc2
  4609                           
  4610                           ;color.c: 91:     temp->B = color_read_Blue();
  4611   002B2C  ECB0  F017         	call	_color_read_Blue	;wreg free
  4612   002B30  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  4613   002B34  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  4614   002B38  6A16               	clrf	(___xxtofl@val+2)^0,c
  4615   002B3A  6A17               	clrf	(___xxtofl@val+3)^0,c
  4616   002B3C  0E00               	movlw	0
  4617   002B3E  ECD3  F011         	call	___xxtofl
  4618   002B42  EE20 F008          	lfsr	2,8
  4619   002B46  5022               	movf	color_read_RGBC@temp^0,w,c
  4620   002B48  26D9               	addwf	fsr2l,f,c
  4621   002B4A  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  4622   002B4C  22DA               	addwfc	fsr2h,f,c
  4623   002B4E  C014  FFDE         	movff	?___xxtofl,postinc2
  4624   002B52  C015  FFDE         	movff	?___xxtofl+1,postinc2
  4625   002B56  C016  FFDE         	movff	?___xxtofl+2,postinc2
  4626   002B5A  C017  FFDE         	movff	?___xxtofl+3,postinc2
  4627                           
  4628                           ;color.c: 92:     temp->G = color_read_Green();
  4629   002B5E  EC60  F017         	call	_color_read_Green	;wreg free
  4630   002B62  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  4631   002B66  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  4632   002B6A  6A16               	clrf	(___xxtofl@val+2)^0,c
  4633   002B6C  6A17               	clrf	(___xxtofl@val+3)^0,c
  4634   002B6E  0E00               	movlw	0
  4635   002B70  ECD3  F011         	call	___xxtofl
  4636   002B74  EE20 F004          	lfsr	2,4
  4637   002B78  5022               	movf	color_read_RGBC@temp^0,w,c
  4638   002B7A  26D9               	addwf	fsr2l,f,c
  4639   002B7C  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  4640   002B7E  22DA               	addwfc	fsr2h,f,c
  4641   002B80  C014  FFDE         	movff	?___xxtofl,postinc2
  4642   002B84  C015  FFDE         	movff	?___xxtofl+1,postinc2
  4643   002B88  C016  FFDE         	movff	?___xxtofl+2,postinc2
  4644   002B8C  C017  FFDE         	movff	?___xxtofl+3,postinc2
  4645                           
  4646                           ;color.c: 93:     temp->C = color_read_Clear();
  4647   002B90  EC88  F017         	call	_color_read_Clear	;wreg free
  4648   002B94  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  4649   002B98  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  4650   002B9C  6A16               	clrf	(___xxtofl@val+2)^0,c
  4651   002B9E  6A17               	clrf	(___xxtofl@val+3)^0,c
  4652   002BA0  0E00               	movlw	0
  4653   002BA2  ECD3  F011         	call	___xxtofl
  4654   002BA6  EE20 F00C          	lfsr	2,12
  4655   002BAA  5022               	movf	color_read_RGBC@temp^0,w,c
  4656   002BAC  26D9               	addwf	fsr2l,f,c
  4657   002BAE  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  4658   002BB0  22DA               	addwfc	fsr2h,f,c
  4659   002BB2  C014  FFDE         	movff	?___xxtofl,postinc2
  4660   002BB6  C015  FFDE         	movff	?___xxtofl+1,postinc2
  4661   002BBA  C016  FFDE         	movff	?___xxtofl+2,postinc2
  4662   002BBE  C017  FFDE         	movff	?___xxtofl+3,postinc2
  4663   002BC2  0012               	return		;funcret
  4664   002BC4                     __end_of_color_read_RGBC:
  4665                           	callstack 0
  4666                           
  4667 ;; *************** function _color_read_Red *****************
  4668 ;; Defined at:
  4669 ;;		line 32 in file "color.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;		None
  4672 ;; Auto vars:     Size  Location     Type
  4673 ;;  tmp             2   17[COMRAM] unsigned int 
  4674 ;; Return value:  Size  Location     Type
  4675 ;;                  2   12[COMRAM] unsigned int 
  4676 ;; Registers used:
  4677 ;;		wreg, status,2, status,0, cstack
  4678 ;; Tracked objects:
  4679 ;;		On entry : 0/0
  4680 ;;		On exit  : 0/0
  4681 ;;		Unchanged: 0/0
  4682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4684 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4685 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4686 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;Total ram usage:        7 bytes
  4688 ;; Hardware stack levels used: 1
  4689 ;; Hardware stack levels required when called: 8
  4690 ;; This function calls:
  4691 ;;		_I2C_2_Master_Read
  4692 ;;		_I2C_2_Master_RepStart
  4693 ;;		_I2C_2_Master_Start
  4694 ;;		_I2C_2_Master_Stop
  4695 ;;		_I2C_2_Master_Write
  4696 ;; This function is called by:
  4697 ;;		_color_read_RGBC
  4698 ;; This function uses a non-reentrant model
  4699 ;;
  4700                           
  4701                           	psect	text18
  4702   002E70                     __ptext18:
  4703                           	callstack 0
  4704   002E70                     _color_read_Red:
  4705                           	callstack 21
  4706   002E70                     
  4707                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  4708   002E70  EC52  F019         	call	_I2C_2_Master_Start	;wreg free
  4709                           
  4710                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  4711   002E74  0E52               	movlw	82
  4712   002E76  EC36  F019         	call	_I2C_2_Master_Write
  4713                           
  4714                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  4715   002E7A  0EB6               	movlw	182
  4716   002E7C  EC36  F019         	call	_I2C_2_Master_Write
  4717                           
  4718                           ;color.c: 37:     I2C_2_Master_RepStart();
  4719   002E80  EC48  F019         	call	_I2C_2_Master_RepStart	;wreg free
  4720                           
  4721                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  4722   002E84  0E53               	movlw	83
  4723   002E86  EC36  F019         	call	_I2C_2_Master_Write
  4724                           
  4725                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  4726   002E8A  0E01               	movlw	1
  4727   002E8C  ECF9  F017         	call	_I2C_2_Master_Read
  4728   002E90  6E0F               	movwf	??_color_read_Red^0,c
  4729   002E92  500F               	movf	??_color_read_Red^0,w,c
  4730   002E94  6E12               	movwf	color_read_Red@tmp^0,c
  4731   002E96  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  4732                           
  4733                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  4734   002E98  0E00               	movlw	0
  4735   002E9A  ECF9  F017         	call	_I2C_2_Master_Read
  4736   002E9E  6E0F               	movwf	??_color_read_Red^0,c
  4737   002EA0  500F               	movf	??_color_read_Red^0,w,c
  4738   002EA2  6E11               	movwf	(??_color_read_Red+2)^0,c
  4739   002EA4  6A10               	clrf	(??_color_read_Red+1)^0,c
  4740   002EA6  5012               	movf	color_read_Red@tmp^0,w,c
  4741   002EA8  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4742   002EAA  6E12               	movwf	color_read_Red@tmp^0,c
  4743   002EAC  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4744   002EAE  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4745   002EB0  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4746                           
  4747                           ;color.c: 41:     I2C_2_Master_Stop();
  4748   002EB2  EC4D  F019         	call	_I2C_2_Master_Stop	;wreg free
  4749   002EB6                     
  4750                           ;color.c: 42:     return tmp;
  4751   002EB6  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4752   002EBA  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4753   002EBE  0012               	return		;funcret
  4754   002EC0                     __end_of_color_read_Red:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _color_read_Green *****************
  4758 ;; Defined at:
  4759 ;;		line 45 in file "color.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;		None
  4762 ;; Auto vars:     Size  Location     Type
  4763 ;;  tmp             2   17[COMRAM] unsigned int 
  4764 ;; Return value:  Size  Location     Type
  4765 ;;                  2   12[COMRAM] unsigned int 
  4766 ;; Registers used:
  4767 ;;		wreg, status,2, status,0, cstack
  4768 ;; Tracked objects:
  4769 ;;		On entry : 0/0
  4770 ;;		On exit  : 0/0
  4771 ;;		Unchanged: 0/0
  4772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4773 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4775 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4776 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4777 ;;Total ram usage:        7 bytes
  4778 ;; Hardware stack levels used: 1
  4779 ;; Hardware stack levels required when called: 8
  4780 ;; This function calls:
  4781 ;;		_I2C_2_Master_Read
  4782 ;;		_I2C_2_Master_RepStart
  4783 ;;		_I2C_2_Master_Start
  4784 ;;		_I2C_2_Master_Stop
  4785 ;;		_I2C_2_Master_Write
  4786 ;; This function is called by:
  4787 ;;		_color_read_RGBC
  4788 ;; This function uses a non-reentrant model
  4789 ;;
  4790                           
  4791                           	psect	text19
  4792   002EC0                     __ptext19:
  4793                           	callstack 0
  4794   002EC0                     _color_read_Green:
  4795                           	callstack 21
  4796   002EC0                     
  4797                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  4798   002EC0  EC52  F019         	call	_I2C_2_Master_Start	;wreg free
  4799                           
  4800                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  4801   002EC4  0E52               	movlw	82
  4802   002EC6  EC36  F019         	call	_I2C_2_Master_Write
  4803                           
  4804                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  4805   002ECA  0EB8               	movlw	184
  4806   002ECC  EC36  F019         	call	_I2C_2_Master_Write
  4807                           
  4808                           ;color.c: 50:     I2C_2_Master_RepStart();
  4809   002ED0  EC48  F019         	call	_I2C_2_Master_RepStart	;wreg free
  4810                           
  4811                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  4812   002ED4  0E53               	movlw	83
  4813   002ED6  EC36  F019         	call	_I2C_2_Master_Write
  4814                           
  4815                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  4816   002EDA  0E01               	movlw	1
  4817   002EDC  ECF9  F017         	call	_I2C_2_Master_Read
  4818   002EE0  6E0F               	movwf	??_color_read_Green^0,c
  4819   002EE2  500F               	movf	??_color_read_Green^0,w,c
  4820   002EE4  6E12               	movwf	color_read_Green@tmp^0,c
  4821   002EE6  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4822                           
  4823                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  4824   002EE8  0E00               	movlw	0
  4825   002EEA  ECF9  F017         	call	_I2C_2_Master_Read
  4826   002EEE  6E0F               	movwf	??_color_read_Green^0,c
  4827   002EF0  500F               	movf	??_color_read_Green^0,w,c
  4828   002EF2  6E11               	movwf	(??_color_read_Green+2)^0,c
  4829   002EF4  6A10               	clrf	(??_color_read_Green+1)^0,c
  4830   002EF6  5012               	movf	color_read_Green@tmp^0,w,c
  4831   002EF8  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4832   002EFA  6E12               	movwf	color_read_Green@tmp^0,c
  4833   002EFC  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4834   002EFE  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4835   002F00  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4836                           
  4837                           ;color.c: 54:     I2C_2_Master_Stop();
  4838   002F02  EC4D  F019         	call	_I2C_2_Master_Stop	;wreg free
  4839   002F06                     
  4840                           ;color.c: 55:     return tmp;
  4841   002F06  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4842   002F0A  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4843   002F0E  0012               	return		;funcret
  4844   002F10                     __end_of_color_read_Green:
  4845                           	callstack 0
  4846                           
  4847 ;; *************** function _color_read_Clear *****************
  4848 ;; Defined at:
  4849 ;;		line 71 in file "color.c"
  4850 ;; Parameters:    Size  Location     Type
  4851 ;;		None
  4852 ;; Auto vars:     Size  Location     Type
  4853 ;;  tmp             2   17[COMRAM] unsigned int 
  4854 ;; Return value:  Size  Location     Type
  4855 ;;                  2   12[COMRAM] unsigned int 
  4856 ;; Registers used:
  4857 ;;		wreg, status,2, status,0, cstack
  4858 ;; Tracked objects:
  4859 ;;		On entry : 0/0
  4860 ;;		On exit  : 0/0
  4861 ;;		Unchanged: 0/0
  4862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4863 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4864 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4865 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4866 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4867 ;;Total ram usage:        7 bytes
  4868 ;; Hardware stack levels used: 1
  4869 ;; Hardware stack levels required when called: 8
  4870 ;; This function calls:
  4871 ;;		_I2C_2_Master_Read
  4872 ;;		_I2C_2_Master_RepStart
  4873 ;;		_I2C_2_Master_Start
  4874 ;;		_I2C_2_Master_Stop
  4875 ;;		_I2C_2_Master_Write
  4876 ;; This function is called by:
  4877 ;;		_color_read_RGBC
  4878 ;; This function uses a non-reentrant model
  4879 ;;
  4880                           
  4881                           	psect	text20
  4882   002F10                     __ptext20:
  4883                           	callstack 0
  4884   002F10                     _color_read_Clear:
  4885                           	callstack 21
  4886   002F10                     
  4887                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  4888   002F10  EC52  F019         	call	_I2C_2_Master_Start	;wreg free
  4889                           
  4890                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  4891   002F14  0E52               	movlw	82
  4892   002F16  EC36  F019         	call	_I2C_2_Master_Write
  4893                           
  4894                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  4895   002F1A  0EB4               	movlw	180
  4896   002F1C  EC36  F019         	call	_I2C_2_Master_Write
  4897                           
  4898                           ;color.c: 76:     I2C_2_Master_RepStart();
  4899   002F20  EC48  F019         	call	_I2C_2_Master_RepStart	;wreg free
  4900                           
  4901                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  4902   002F24  0E53               	movlw	83
  4903   002F26  EC36  F019         	call	_I2C_2_Master_Write
  4904                           
  4905                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  4906   002F2A  0E01               	movlw	1
  4907   002F2C  ECF9  F017         	call	_I2C_2_Master_Read
  4908   002F30  6E0F               	movwf	??_color_read_Clear^0,c
  4909   002F32  500F               	movf	??_color_read_Clear^0,w,c
  4910   002F34  6E12               	movwf	color_read_Clear@tmp^0,c
  4911   002F36  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4912                           
  4913                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  4914   002F38  0E00               	movlw	0
  4915   002F3A  ECF9  F017         	call	_I2C_2_Master_Read
  4916   002F3E  6E0F               	movwf	??_color_read_Clear^0,c
  4917   002F40  500F               	movf	??_color_read_Clear^0,w,c
  4918   002F42  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4919   002F44  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4920   002F46  5012               	movf	color_read_Clear@tmp^0,w,c
  4921   002F48  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4922   002F4A  6E12               	movwf	color_read_Clear@tmp^0,c
  4923   002F4C  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4924   002F4E  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4925   002F50  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4926                           
  4927                           ;color.c: 80:     I2C_2_Master_Stop();
  4928   002F52  EC4D  F019         	call	_I2C_2_Master_Stop	;wreg free
  4929   002F56                     
  4930                           ;color.c: 81:     return tmp;
  4931   002F56  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4932   002F5A  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4933   002F5E  0012               	return		;funcret
  4934   002F60                     __end_of_color_read_Clear:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _color_read_Blue *****************
  4938 ;; Defined at:
  4939 ;;		line 58 in file "color.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;		None
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  tmp             2   17[COMRAM] unsigned int 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;                  2   12[COMRAM] unsigned int 
  4946 ;; Registers used:
  4947 ;;		wreg, status,2, status,0, cstack
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4953 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4955 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;Total ram usage:        7 bytes
  4958 ;; Hardware stack levels used: 1
  4959 ;; Hardware stack levels required when called: 8
  4960 ;; This function calls:
  4961 ;;		_I2C_2_Master_Read
  4962 ;;		_I2C_2_Master_RepStart
  4963 ;;		_I2C_2_Master_Start
  4964 ;;		_I2C_2_Master_Stop
  4965 ;;		_I2C_2_Master_Write
  4966 ;; This function is called by:
  4967 ;;		_color_read_RGBC
  4968 ;; This function uses a non-reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text21
  4972   002F60                     __ptext21:
  4973                           	callstack 0
  4974   002F60                     _color_read_Blue:
  4975                           	callstack 21
  4976   002F60                     
  4977                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  4978   002F60  EC52  F019         	call	_I2C_2_Master_Start	;wreg free
  4979                           
  4980                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  4981   002F64  0E52               	movlw	82
  4982   002F66  EC36  F019         	call	_I2C_2_Master_Write
  4983                           
  4984                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  4985   002F6A  0EBA               	movlw	186
  4986   002F6C  EC36  F019         	call	_I2C_2_Master_Write
  4987                           
  4988                           ;color.c: 63:     I2C_2_Master_RepStart();
  4989   002F70  EC48  F019         	call	_I2C_2_Master_RepStart	;wreg free
  4990                           
  4991                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  4992   002F74  0E53               	movlw	83
  4993   002F76  EC36  F019         	call	_I2C_2_Master_Write
  4994                           
  4995                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  4996   002F7A  0E01               	movlw	1
  4997   002F7C  ECF9  F017         	call	_I2C_2_Master_Read
  4998   002F80  6E0F               	movwf	??_color_read_Blue^0,c
  4999   002F82  500F               	movf	??_color_read_Blue^0,w,c
  5000   002F84  6E12               	movwf	color_read_Blue@tmp^0,c
  5001   002F86  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  5002                           
  5003                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  5004   002F88  0E00               	movlw	0
  5005   002F8A  ECF9  F017         	call	_I2C_2_Master_Read
  5006   002F8E  6E0F               	movwf	??_color_read_Blue^0,c
  5007   002F90  500F               	movf	??_color_read_Blue^0,w,c
  5008   002F92  6E11               	movwf	(??_color_read_Blue+2)^0,c
  5009   002F94  6A10               	clrf	(??_color_read_Blue+1)^0,c
  5010   002F96  5012               	movf	color_read_Blue@tmp^0,w,c
  5011   002F98  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  5012   002F9A  6E12               	movwf	color_read_Blue@tmp^0,c
  5013   002F9C  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  5014   002F9E  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  5015   002FA0  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  5016                           
  5017                           ;color.c: 67:     I2C_2_Master_Stop();
  5018   002FA2  EC4D  F019         	call	_I2C_2_Master_Stop	;wreg free
  5019   002FA6                     
  5020                           ;color.c: 68:     return tmp;
  5021   002FA6  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  5022   002FAA  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5023   002FAE  0012               	return		;funcret
  5024   002FB0                     __end_of_color_read_Blue:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _I2C_2_Master_RepStart *****************
  5028 ;; Defined at:
  5029 ;;		line 33 in file "i2c.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;		None
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0, cstack
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5047 ;;Total ram usage:        0 bytes
  5048 ;; Hardware stack levels used: 1
  5049 ;; Hardware stack levels required when called: 7
  5050 ;; This function calls:
  5051 ;;		_I2C_2_Master_Idle
  5052 ;; This function is called by:
  5053 ;;		_color_read_Red
  5054 ;;		_color_read_Green
  5055 ;;		_color_read_Blue
  5056 ;;		_color_read_Clear
  5057 ;; This function uses a non-reentrant model
  5058 ;;
  5059                           
  5060                           	psect	text22
  5061   003290                     __ptext22:
  5062                           	callstack 0
  5063   003290                     _I2C_2_Master_RepStart:
  5064                           	callstack 21
  5065   003290                     
  5066                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5067   003290  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  5068   003294                     
  5069                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5070   003294  010E               	movlb	14	; () banked
  5071   003296  83DA               	bsf	218,1,b	;volatile
  5072   003298                     
  5073                           ; BSR set to: 14
  5074   003298  0012               	return		;funcret
  5075   00329A                     __end_of_I2C_2_Master_RepStart:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _I2C_2_Master_Read *****************
  5079 ;; Defined at:
  5080 ;;		line 51 in file "i2c.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  ack             1    wreg     unsigned char 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;  ack             1   10[COMRAM] unsigned char 
  5085 ;;  tmp             1   11[COMRAM] unsigned char 
  5086 ;; Return value:  Size  Location     Type
  5087 ;;                  1    wreg      unsigned char 
  5088 ;; Registers used:
  5089 ;;		wreg, status,2, status,0, cstack
  5090 ;; Tracked objects:
  5091 ;;		On entry : 0/0
  5092 ;;		On exit  : 0/0
  5093 ;;		Unchanged: 0/0
  5094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5098 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;Total ram usage:        3 bytes
  5100 ;; Hardware stack levels used: 1
  5101 ;; Hardware stack levels required when called: 7
  5102 ;; This function calls:
  5103 ;;		_I2C_2_Master_Idle
  5104 ;; This function is called by:
  5105 ;;		_color_read_Red
  5106 ;;		_color_read_Green
  5107 ;;		_color_read_Blue
  5108 ;;		_color_read_Clear
  5109 ;; This function uses a non-reentrant model
  5110 ;;
  5111                           
  5112                           	psect	text23
  5113   002FF2                     __ptext23:
  5114                           	callstack 0
  5115   002FF2                     _I2C_2_Master_Read:
  5116                           	callstack 21
  5117                           
  5118                           ; BSR set to: 14
  5119                           ;incstack = 0
  5120                           ;I2C_2_Master_Read@ack stored from wreg
  5121   002FF2  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  5122   002FF4                     
  5123                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5124   002FF4  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  5125   002FF8                     
  5126                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5127   002FF8  010E               	movlb	14	; () banked
  5128   002FFA  87DA               	bsf	218,3,b	;volatile
  5129                           
  5130                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5131   002FFC  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  5132   003000                     
  5133                           ;i2c.c: 57:   tmp = SSP2BUF;
  5134   003000  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5135                           
  5136                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5137   003004  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  5138   003008                     
  5139                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5140   003008  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  5141   00300A  B4D8               	btfsc	status,2,c
  5142   00300C  EF0A  F018         	goto	u1251
  5143   003010  EF0E  F018         	goto	u1250
  5144   003014                     u1251:
  5145   003014  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5146   003016  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  5147   003018  EF0F  F018         	goto	u1268
  5148   00301C                     u1250:
  5149   00301C  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5150   00301E                     u1268:
  5151   00301E  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  5152   003020  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  5153   003022  010E               	movlb	14	; () banked
  5154   003024  51DA               	movf	218,w,b	;volatile
  5155   003026  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5156   003028  0BDF               	andlw	-33
  5157   00302A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5158   00302C  6FDA               	movwf	218,b	;volatile
  5159   00302E                     
  5160                           ; BSR set to: 14
  5161                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5162   00302E  89DA               	bsf	218,4,b	;volatile
  5163   003030                     
  5164                           ; BSR set to: 14
  5165                           ;i2c.c: 61:   return tmp;
  5166   003030  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  5167   003032                     
  5168                           ; BSR set to: 14
  5169   003032  0012               	return		;funcret
  5170   003034                     __end_of_I2C_2_Master_Read:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function ___xxtofl *****************
  5174 ;; Defined at:
  5175 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  sign            1    wreg     unsigned char 
  5178 ;;  val             4   19[COMRAM] long 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  sign            1   27[COMRAM] unsigned char 
  5181 ;;  arg             4   29[COMRAM] unsigned long 
  5182 ;;  exp             1   28[COMRAM] unsigned char 
  5183 ;; Return value:  Size  Location     Type
  5184 ;;                  4   19[COMRAM] unsigned char 
  5185 ;; Registers used:
  5186 ;;		wreg, status,2, status,0
  5187 ;; Tracked objects:
  5188 ;;		On entry : 0/0
  5189 ;;		On exit  : 0/0
  5190 ;;		Unchanged: 0/0
  5191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5195 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5196 ;;Total ram usage:       14 bytes
  5197 ;; Hardware stack levels used: 1
  5198 ;; Hardware stack levels required when called: 6
  5199 ;; This function calls:
  5200 ;;		Nothing
  5201 ;; This function is called by:
  5202 ;;		_color_read_RGBC
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text24
  5207   0023A6                     __ptext24:
  5208                           	callstack 0
  5209   0023A6                     ___xxtofl:
  5210                           	callstack 23
  5211                           
  5212                           ; BSR set to: 14
  5213                           ;incstack = 0
  5214                           ;___xxtofl@sign stored from wreg
  5215   0023A6  6E1C               	movwf	___xxtofl@sign^0,c
  5216   0023A8  501C               	movf	___xxtofl@sign^0,w,c
  5217   0023AA  B4D8               	btfsc	status,2,c
  5218   0023AC  EFDA  F011         	goto	u1611
  5219   0023B0  EFDC  F011         	goto	u1610
  5220   0023B4                     u1611:
  5221   0023B4  EFFE  F011         	goto	l1261
  5222   0023B8                     u1610:
  5223   0023B8  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  5224   0023BA  EFE3  F011         	goto	u1620
  5225   0023BE  EFE1  F011         	goto	u1621
  5226   0023C2                     u1621:
  5227   0023C2  EFFE  F011         	goto	l1261
  5228   0023C6                     u1620:
  5229   0023C6  C014  F018         	movff	___xxtofl@val,??___xxtofl
  5230   0023CA  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  5231   0023CE  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  5232   0023D2  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  5233   0023D6  1E18               	comf	??___xxtofl^0,f,c
  5234   0023D8  1E19               	comf	(??___xxtofl+1)^0,f,c
  5235   0023DA  1E1A               	comf	(??___xxtofl+2)^0,f,c
  5236   0023DC  1E1B               	comf	(??___xxtofl+3)^0,f,c
  5237   0023DE  2A18               	incf	??___xxtofl^0,f,c
  5238   0023E0  0E00               	movlw	0
  5239   0023E2  2219               	addwfc	(??___xxtofl+1)^0,f,c
  5240   0023E4  221A               	addwfc	(??___xxtofl+2)^0,f,c
  5241   0023E6  221B               	addwfc	(??___xxtofl+3)^0,f,c
  5242   0023E8  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  5243   0023EC  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  5244   0023F0  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  5245   0023F4  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  5246   0023F8  EF06  F012         	goto	l2670
  5247   0023FC                     l1261:
  5248   0023FC  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  5249   002400  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5250   002404  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5251   002408  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5252   00240C                     l2670:
  5253   00240C  5014               	movf	___xxtofl@val^0,w,c
  5254   00240E  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  5255   002410  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  5256   002412  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  5257   002414  A4D8               	btfss	status,2,c
  5258   002416  EF0F  F012         	goto	u1631
  5259   00241A  EF11  F012         	goto	u1630
  5260   00241E                     u1631:
  5261   00241E  EF1B  F012         	goto	l2676
  5262   002422                     u1630:
  5263   002422  0E00               	movlw	0
  5264   002424  6E14               	movwf	?___xxtofl^0,c
  5265   002426  0E00               	movlw	0
  5266   002428  6E15               	movwf	(?___xxtofl+1)^0,c
  5267   00242A  0E00               	movlw	0
  5268   00242C  6E16               	movwf	(?___xxtofl+2)^0,c
  5269   00242E  0E00               	movlw	0
  5270   002430  6E17               	movwf	(?___xxtofl+3)^0,c
  5271   002432  EFAC  F012         	goto	l1264
  5272   002436                     l2676:
  5273   002436  0E96               	movlw	150
  5274   002438  6E1D               	movwf	___xxtofl@exp^0,c
  5275   00243A  EF25  F012         	goto	l2680
  5276   00243E                     l2678:
  5277   00243E  2A1D               	incf	___xxtofl@exp^0,f,c
  5278   002440  90D8               	bcf	status,0,c
  5279   002442  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  5280   002444  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  5281   002446  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  5282   002448  321E               	rrcf	___xxtofl@arg^0,f,c
  5283   00244A                     l2680:
  5284   00244A  0E00               	movlw	0
  5285   00244C  141E               	andwf	___xxtofl@arg^0,w,c
  5286   00244E  6E18               	movwf	??___xxtofl^0,c
  5287   002450  0E00               	movlw	0
  5288   002452  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  5289   002454  6E19               	movwf	(??___xxtofl+1)^0,c
  5290   002456  0E00               	movlw	0
  5291   002458  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  5292   00245A  6E1A               	movwf	(??___xxtofl+2)^0,c
  5293   00245C  0EFE               	movlw	254
  5294   00245E  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  5295   002460  6E1B               	movwf	(??___xxtofl+3)^0,c
  5296   002462  5018               	movf	??___xxtofl^0,w,c
  5297   002464  1019               	iorwf	(??___xxtofl+1)^0,w,c
  5298   002466  101A               	iorwf	(??___xxtofl+2)^0,w,c
  5299   002468  101B               	iorwf	(??___xxtofl+3)^0,w,c
  5300   00246A  A4D8               	btfss	status,2,c
  5301   00246C  EF3A  F012         	goto	u1641
  5302   002470  EF3C  F012         	goto	u1640
  5303   002474                     u1641:
  5304   002474  EF1F  F012         	goto	l2678
  5305   002478                     u1640:
  5306   002478  EF4A  F012         	goto	l1268
  5307   00247C                     l2682:
  5308   00247C  2A1D               	incf	___xxtofl@exp^0,f,c
  5309   00247E  0E01               	movlw	1
  5310   002480  261E               	addwf	___xxtofl@arg^0,f,c
  5311   002482  0E00               	movlw	0
  5312   002484  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  5313   002486  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  5314   002488  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  5315   00248A  90D8               	bcf	status,0,c
  5316   00248C  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  5317   00248E  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  5318   002490  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  5319   002492  321E               	rrcf	___xxtofl@arg^0,f,c
  5320   002494                     l1268:
  5321   002494  0E00               	movlw	0
  5322   002496  141E               	andwf	___xxtofl@arg^0,w,c
  5323   002498  6E18               	movwf	??___xxtofl^0,c
  5324   00249A  0E00               	movlw	0
  5325   00249C  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  5326   00249E  6E19               	movwf	(??___xxtofl+1)^0,c
  5327   0024A0  0E00               	movlw	0
  5328   0024A2  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  5329   0024A4  6E1A               	movwf	(??___xxtofl+2)^0,c
  5330   0024A6  0EFF               	movlw	255
  5331   0024A8  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  5332   0024AA  6E1B               	movwf	(??___xxtofl+3)^0,c
  5333   0024AC  5018               	movf	??___xxtofl^0,w,c
  5334   0024AE  1019               	iorwf	(??___xxtofl+1)^0,w,c
  5335   0024B0  101A               	iorwf	(??___xxtofl+2)^0,w,c
  5336   0024B2  101B               	iorwf	(??___xxtofl+3)^0,w,c
  5337   0024B4  A4D8               	btfss	status,2,c
  5338   0024B6  EF5F  F012         	goto	u1651
  5339   0024BA  EF61  F012         	goto	u1650
  5340   0024BE                     u1651:
  5341   0024BE  EF3E  F012         	goto	l2682
  5342   0024C2                     u1650:
  5343   0024C2  EF69  F012         	goto	l2690
  5344   0024C6                     l2688:
  5345   0024C6  061D               	decf	___xxtofl@exp^0,f,c
  5346   0024C8  90D8               	bcf	status,0,c
  5347   0024CA  361E               	rlcf	___xxtofl@arg^0,f,c
  5348   0024CC  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  5349   0024CE  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  5350   0024D0  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  5351   0024D2                     l2690:
  5352   0024D2  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  5353   0024D4  EF6E  F012         	goto	u1661
  5354   0024D8  EF70  F012         	goto	u1660
  5355   0024DC                     u1661:
  5356   0024DC  EF78  F012         	goto	l1275
  5357   0024E0                     u1660:
  5358   0024E0  0E02               	movlw	2
  5359   0024E2  601D               	cpfslt	___xxtofl@exp^0,c
  5360   0024E4  EF76  F012         	goto	u1671
  5361   0024E8  EF78  F012         	goto	u1670
  5362   0024EC                     u1671:
  5363   0024EC  EF63  F012         	goto	l2688
  5364   0024F0                     u1670:
  5365   0024F0                     l1275:
  5366   0024F0  B01D               	btfsc	___xxtofl@exp^0,0,c
  5367   0024F2  EF7D  F012         	goto	u1681
  5368   0024F6  EF7F  F012         	goto	u1680
  5369   0024FA                     u1681:
  5370   0024FA  EF80  F012         	goto	l2696
  5371   0024FE                     u1680:
  5372   0024FE  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  5373   002500                     l2696:
  5374   002500  90D8               	bcf	status,0,c
  5375   002502  321D               	rrcf	___xxtofl@exp^0,f,c
  5376   002504  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  5377   002508  6A19               	clrf	(??___xxtofl+1)^0,c
  5378   00250A  6A1A               	clrf	(??___xxtofl+2)^0,c
  5379   00250C  6A1B               	clrf	(??___xxtofl+3)^0,c
  5380   00250E  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  5381   002512  6A1A               	clrf	(??___xxtofl+2)^0,c
  5382   002514  6A19               	clrf	(??___xxtofl+1)^0,c
  5383   002516  6A18               	clrf	??___xxtofl^0,c
  5384   002518  5018               	movf	??___xxtofl^0,w,c
  5385   00251A  121E               	iorwf	___xxtofl@arg^0,f,c
  5386   00251C  5019               	movf	(??___xxtofl+1)^0,w,c
  5387   00251E  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  5388   002520  501A               	movf	(??___xxtofl+2)^0,w,c
  5389   002522  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  5390   002524  501B               	movf	(??___xxtofl+3)^0,w,c
  5391   002526  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  5392   002528  501C               	movf	___xxtofl@sign^0,w,c
  5393   00252A  B4D8               	btfsc	status,2,c
  5394   00252C  EF9A  F012         	goto	u1691
  5395   002530  EF9C  F012         	goto	u1690
  5396   002534                     u1691:
  5397   002534  EFA4  F012         	goto	l2706
  5398   002538                     u1690:
  5399   002538  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  5400   00253A  EFA3  F012         	goto	u1700
  5401   00253E  EFA1  F012         	goto	u1701
  5402   002542                     u1701:
  5403   002542  EFA4  F012         	goto	l2706
  5404   002546                     u1700:
  5405   002546  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  5406   002548                     l2706:
  5407   002548  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  5408   00254C  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  5409   002550  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  5410   002554  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  5411   002558                     l1264:
  5412   002558  0012               	return		;funcret
  5413   00255A                     __end_of___xxtofl:
  5414                           	callstack 0
  5415                           
  5416 ;; *************** function _color_normalise *****************
  5417 ;; Defined at:
  5418 ;;		line 96 in file "color.c"
  5419 ;; Parameters:    Size  Location     Type
  5420 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  5421 ;;		 -> main@RGBC(32), 
  5422 ;; Auto vars:     Size  Location     Type
  5423 ;;		None
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  1    wreg      void 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;Total ram usage:        2 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 7
  5440 ;; This function calls:
  5441 ;;		___fldiv
  5442 ;; This function is called by:
  5443 ;;		_main
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text25
  5448   0026C6                     __ptext25:
  5449                           	callstack 0
  5450   0026C6                     _color_normalise:
  5451                           	callstack 23
  5452   0026C6                     
  5453                           ;color.c: 97:     RGBC->norm_R = RGBC->C / RGBC->R;
  5454   0026C6  EE20 F00C          	lfsr	2,12
  5455   0026CA  5022               	movf	color_normalise@RGBC^0,w,c
  5456   0026CC  26D9               	addwf	fsr2l,f,c
  5457   0026CE  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5458   0026D0  22DA               	addwfc	fsr2h,f,c
  5459   0026D2  CFDE F009          	movff	postinc2,___fldiv@b
  5460   0026D6  CFDE F00A          	movff	postinc2,___fldiv@b+1
  5461   0026DA  CFDE F00B          	movff	postinc2,___fldiv@b+2
  5462   0026DE  CFDE F00C          	movff	postinc2,___fldiv@b+3
  5463   0026E2  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  5464   0026E6  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  5465   0026EA  CFDE F00D          	movff	postinc2,___fldiv@a
  5466   0026EE  CFDE F00E          	movff	postinc2,___fldiv@a+1
  5467   0026F2  CFDE F00F          	movff	postinc2,___fldiv@a+2
  5468   0026F6  CFDE F010          	movff	postinc2,___fldiv@a+3
  5469   0026FA  ECAD  F00E         	call	___fldiv	;wreg free
  5470   0026FE  EE20 F010          	lfsr	2,16
  5471   002702  5022               	movf	color_normalise@RGBC^0,w,c
  5472   002704  26D9               	addwf	fsr2l,f,c
  5473   002706  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5474   002708  22DA               	addwfc	fsr2h,f,c
  5475   00270A  C009  FFDE         	movff	?___fldiv,postinc2
  5476   00270E  C00A  FFDE         	movff	?___fldiv+1,postinc2
  5477   002712  C00B  FFDE         	movff	?___fldiv+2,postinc2
  5478   002716  C00C  FFDE         	movff	?___fldiv+3,postinc2
  5479                           
  5480                           ;color.c: 98:     RGBC->norm_G = RGBC->C / RGBC->G;
  5481   00271A  EE20 F00C          	lfsr	2,12
  5482   00271E  5022               	movf	color_normalise@RGBC^0,w,c
  5483   002720  26D9               	addwf	fsr2l,f,c
  5484   002722  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5485   002724  22DA               	addwfc	fsr2h,f,c
  5486   002726  CFDE F009          	movff	postinc2,___fldiv@b
  5487   00272A  CFDE F00A          	movff	postinc2,___fldiv@b+1
  5488   00272E  CFDE F00B          	movff	postinc2,___fldiv@b+2
  5489   002732  CFDE F00C          	movff	postinc2,___fldiv@b+3
  5490   002736  EE20 F004          	lfsr	2,4
  5491   00273A  5022               	movf	color_normalise@RGBC^0,w,c
  5492   00273C  26D9               	addwf	fsr2l,f,c
  5493   00273E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5494   002740  22DA               	addwfc	fsr2h,f,c
  5495   002742  CFDE F00D          	movff	postinc2,___fldiv@a
  5496   002746  CFDE F00E          	movff	postinc2,___fldiv@a+1
  5497   00274A  CFDE F00F          	movff	postinc2,___fldiv@a+2
  5498   00274E  CFDE F010          	movff	postinc2,___fldiv@a+3
  5499   002752  ECAD  F00E         	call	___fldiv	;wreg free
  5500   002756  EE20 F014          	lfsr	2,20
  5501   00275A  5022               	movf	color_normalise@RGBC^0,w,c
  5502   00275C  26D9               	addwf	fsr2l,f,c
  5503   00275E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5504   002760  22DA               	addwfc	fsr2h,f,c
  5505   002762  C009  FFDE         	movff	?___fldiv,postinc2
  5506   002766  C00A  FFDE         	movff	?___fldiv+1,postinc2
  5507   00276A  C00B  FFDE         	movff	?___fldiv+2,postinc2
  5508   00276E  C00C  FFDE         	movff	?___fldiv+3,postinc2
  5509                           
  5510                           ;color.c: 99:     RGBC->norm_B = RGBC->C / RGBC->B;
  5511   002772  EE20 F00C          	lfsr	2,12
  5512   002776  5022               	movf	color_normalise@RGBC^0,w,c
  5513   002778  26D9               	addwf	fsr2l,f,c
  5514   00277A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5515   00277C  22DA               	addwfc	fsr2h,f,c
  5516   00277E  CFDE F009          	movff	postinc2,___fldiv@b
  5517   002782  CFDE F00A          	movff	postinc2,___fldiv@b+1
  5518   002786  CFDE F00B          	movff	postinc2,___fldiv@b+2
  5519   00278A  CFDE F00C          	movff	postinc2,___fldiv@b+3
  5520   00278E  EE20 F008          	lfsr	2,8
  5521   002792  5022               	movf	color_normalise@RGBC^0,w,c
  5522   002794  26D9               	addwf	fsr2l,f,c
  5523   002796  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5524   002798  22DA               	addwfc	fsr2h,f,c
  5525   00279A  CFDE F00D          	movff	postinc2,___fldiv@a
  5526   00279E  CFDE F00E          	movff	postinc2,___fldiv@a+1
  5527   0027A2  CFDE F00F          	movff	postinc2,___fldiv@a+2
  5528   0027A6  CFDE F010          	movff	postinc2,___fldiv@a+3
  5529   0027AA  ECAD  F00E         	call	___fldiv	;wreg free
  5530   0027AE  EE20 F018          	lfsr	2,24
  5531   0027B2  5022               	movf	color_normalise@RGBC^0,w,c
  5532   0027B4  26D9               	addwf	fsr2l,f,c
  5533   0027B6  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5534   0027B8  22DA               	addwfc	fsr2h,f,c
  5535   0027BA  C009  FFDE         	movff	?___fldiv,postinc2
  5536   0027BE  C00A  FFDE         	movff	?___fldiv+1,postinc2
  5537   0027C2  C00B  FFDE         	movff	?___fldiv+2,postinc2
  5538   0027C6  C00C  FFDE         	movff	?___fldiv+3,postinc2
  5539                           
  5540                           ;color.c: 100:     RGBC->norm_C = RGBC->C / 2650;
  5541   0027CA  EE20 F00C          	lfsr	2,12
  5542   0027CE  5022               	movf	color_normalise@RGBC^0,w,c
  5543   0027D0  26D9               	addwf	fsr2l,f,c
  5544   0027D2  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5545   0027D4  22DA               	addwfc	fsr2h,f,c
  5546   0027D6  CFDE F009          	movff	postinc2,___fldiv@b
  5547   0027DA  CFDE F00A          	movff	postinc2,___fldiv@b+1
  5548   0027DE  CFDE F00B          	movff	postinc2,___fldiv@b+2
  5549   0027E2  CFDE F00C          	movff	postinc2,___fldiv@b+3
  5550   0027E6  0E00               	movlw	0
  5551   0027E8  6E0D               	movwf	___fldiv@a^0,c
  5552   0027EA  0EA0               	movlw	160
  5553   0027EC  6E0E               	movwf	(___fldiv@a+1)^0,c
  5554   0027EE  0E25               	movlw	37
  5555   0027F0  6E0F               	movwf	(___fldiv@a+2)^0,c
  5556   0027F2  0E45               	movlw	69
  5557   0027F4  6E10               	movwf	(___fldiv@a+3)^0,c
  5558   0027F6  ECAD  F00E         	call	___fldiv	;wreg free
  5559   0027FA  EE20 F01C          	lfsr	2,28
  5560   0027FE  5022               	movf	color_normalise@RGBC^0,w,c
  5561   002800  26D9               	addwf	fsr2l,f,c
  5562   002802  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  5563   002804  22DA               	addwfc	fsr2h,f,c
  5564   002806  C009  FFDE         	movff	?___fldiv,postinc2
  5565   00280A  C00A  FFDE         	movff	?___fldiv+1,postinc2
  5566   00280E  C00B  FFDE         	movff	?___fldiv+2,postinc2
  5567   002812  C00C  FFDE         	movff	?___fldiv+3,postinc2
  5568   002816  0012               	return		;funcret
  5569   002818                     __end_of_color_normalise:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function ___fldiv *****************
  5573 ;; Defined at:
  5574 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  b               4    8[COMRAM] void 
  5577 ;;  a               4   12[COMRAM] void 
  5578 ;; Auto vars:     Size  Location     Type
  5579 ;;  grs             4   27[COMRAM] unsigned long 
  5580 ;;  rem             4   20[COMRAM] unsigned long 
  5581 ;;  new_exp         2   25[COMRAM] short 
  5582 ;;  aexp            1   32[COMRAM] unsigned char 
  5583 ;;  bexp            1   31[COMRAM] unsigned char 
  5584 ;;  sign            1   24[COMRAM] unsigned char 
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  4    8[COMRAM] unsigned char 
  5587 ;; Registers used:
  5588 ;;		wreg, status,2, status,0
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 0/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5594 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5595 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5596 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5597 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5598 ;;Total ram usage:       25 bytes
  5599 ;; Hardware stack levels used: 1
  5600 ;; Hardware stack levels required when called: 6
  5601 ;; This function calls:
  5602 ;;		Nothing
  5603 ;; This function is called by:
  5604 ;;		_color_normalise
  5605 ;; This function uses a non-reentrant model
  5606 ;;
  5607                           
  5608                           	psect	text26
  5609   001D5A                     __ptext26:
  5610                           	callstack 0
  5611   001D5A                     ___fldiv:
  5612                           	callstack 23
  5613   001D5A  500C               	movf	(___fldiv@b+3)^0,w,c
  5614   001D5C  0B80               	andlw	128
  5615   001D5E  6E19               	movwf	___fldiv@sign^0,c
  5616   001D60  500C               	movf	(___fldiv@b+3)^0,w,c
  5617   001D62  240C               	addwf	(___fldiv@b+3)^0,w,c
  5618   001D64  6E20               	movwf	___fldiv@bexp^0,c
  5619   001D66  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  5620   001D68  EFB8  F00E         	goto	u1331
  5621   001D6C  EFBA  F00E         	goto	u1330
  5622   001D70                     u1331:
  5623   001D70  EFBB  F00E         	goto	l2510
  5624   001D74                     u1330:
  5625   001D74  8020               	bsf	___fldiv@bexp^0,0,c
  5626   001D76                     l2510:
  5627   001D76  5020               	movf	___fldiv@bexp^0,w,c
  5628   001D78  B4D8               	btfsc	status,2,c
  5629   001D7A  EFC1  F00E         	goto	u1341
  5630   001D7E  EFC3  F00E         	goto	u1340
  5631   001D82                     u1341:
  5632   001D82  EFD8  F00E         	goto	l2520
  5633   001D86                     u1340:
  5634   001D86  2820               	incf	___fldiv@bexp^0,w,c
  5635   001D88  A4D8               	btfss	status,2,c
  5636   001D8A  EFC9  F00E         	goto	u1351
  5637   001D8E  EFCB  F00E         	goto	u1350
  5638   001D92                     u1351:
  5639   001D92  EFD3  F00E         	goto	l2516
  5640   001D96                     u1350:
  5641   001D96  0E00               	movlw	0
  5642   001D98  6E09               	movwf	___fldiv@b^0,c
  5643   001D9A  0E00               	movlw	0
  5644   001D9C  6E0A               	movwf	(___fldiv@b+1)^0,c
  5645   001D9E  0E00               	movlw	0
  5646   001DA0  6E0B               	movwf	(___fldiv@b+2)^0,c
  5647   001DA2  0E00               	movlw	0
  5648   001DA4  6E0C               	movwf	(___fldiv@b+3)^0,c
  5649   001DA6                     l2516:
  5650   001DA6  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  5651   001DA8  0E00               	movlw	0
  5652   001DAA  6E0C               	movwf	(___fldiv@b+3)^0,c
  5653   001DAC  EFE0  F00E         	goto	l2522
  5654   001DB0                     l2520:
  5655   001DB0  0E00               	movlw	0
  5656   001DB2  6E09               	movwf	___fldiv@b^0,c
  5657   001DB4  0E00               	movlw	0
  5658   001DB6  6E0A               	movwf	(___fldiv@b+1)^0,c
  5659   001DB8  0E00               	movlw	0
  5660   001DBA  6E0B               	movwf	(___fldiv@b+2)^0,c
  5661   001DBC  0E00               	movlw	0
  5662   001DBE  6E0C               	movwf	(___fldiv@b+3)^0,c
  5663   001DC0                     l2522:
  5664   001DC0  5010               	movf	(___fldiv@a+3)^0,w,c
  5665   001DC2  0B80               	andlw	128
  5666   001DC4  1A19               	xorwf	___fldiv@sign^0,f,c
  5667   001DC6  5010               	movf	(___fldiv@a+3)^0,w,c
  5668   001DC8  2410               	addwf	(___fldiv@a+3)^0,w,c
  5669   001DCA  6E21               	movwf	___fldiv@aexp^0,c
  5670   001DCC  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  5671   001DCE  EFEB  F00E         	goto	u1361
  5672   001DD2  EFED  F00E         	goto	u1360
  5673   001DD6                     u1361:
  5674   001DD6  EFEE  F00E         	goto	l2530
  5675   001DDA                     u1360:
  5676   001DDA  8021               	bsf	___fldiv@aexp^0,0,c
  5677   001DDC                     l2530:
  5678   001DDC  5021               	movf	___fldiv@aexp^0,w,c
  5679   001DDE  B4D8               	btfsc	status,2,c
  5680   001DE0  EFF4  F00E         	goto	u1371
  5681   001DE4  EFF6  F00E         	goto	u1370
  5682   001DE8                     u1371:
  5683   001DE8  EF0B  F00F         	goto	l2540
  5684   001DEC                     u1370:
  5685   001DEC  2821               	incf	___fldiv@aexp^0,w,c
  5686   001DEE  A4D8               	btfss	status,2,c
  5687   001DF0  EFFC  F00E         	goto	u1381
  5688   001DF4  EFFE  F00E         	goto	u1380
  5689   001DF8                     u1381:
  5690   001DF8  EF06  F00F         	goto	l2536
  5691   001DFC                     u1380:
  5692   001DFC  0E00               	movlw	0
  5693   001DFE  6E0D               	movwf	___fldiv@a^0,c
  5694   001E00  0E00               	movlw	0
  5695   001E02  6E0E               	movwf	(___fldiv@a+1)^0,c
  5696   001E04  0E00               	movlw	0
  5697   001E06  6E0F               	movwf	(___fldiv@a+2)^0,c
  5698   001E08  0E00               	movlw	0
  5699   001E0A  6E10               	movwf	(___fldiv@a+3)^0,c
  5700   001E0C                     l2536:
  5701   001E0C  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  5702   001E0E  0E00               	movlw	0
  5703   001E10  6E10               	movwf	(___fldiv@a+3)^0,c
  5704   001E12  EF13  F00F         	goto	l2542
  5705   001E16                     l2540:
  5706   001E16  0E00               	movlw	0
  5707   001E18  6E0D               	movwf	___fldiv@a^0,c
  5708   001E1A  0E00               	movlw	0
  5709   001E1C  6E0E               	movwf	(___fldiv@a+1)^0,c
  5710   001E1E  0E00               	movlw	0
  5711   001E20  6E0F               	movwf	(___fldiv@a+2)^0,c
  5712   001E22  0E00               	movlw	0
  5713   001E24  6E10               	movwf	(___fldiv@a+3)^0,c
  5714   001E26                     l2542:
  5715   001E26  500D               	movf	___fldiv@a^0,w,c
  5716   001E28  100E               	iorwf	(___fldiv@a+1)^0,w,c
  5717   001E2A  100F               	iorwf	(___fldiv@a+2)^0,w,c
  5718   001E2C  1010               	iorwf	(___fldiv@a+3)^0,w,c
  5719   001E2E  A4D8               	btfss	status,2,c
  5720   001E30  EF1C  F00F         	goto	u1391
  5721   001E34  EF1E  F00F         	goto	u1390
  5722   001E38                     u1391:
  5723   001E38  EF36  F00F         	goto	l2554
  5724   001E3C                     u1390:
  5725   001E3C  0E00               	movlw	0
  5726   001E3E  6E09               	movwf	___fldiv@b^0,c
  5727   001E40  0E00               	movlw	0
  5728   001E42  6E0A               	movwf	(___fldiv@b+1)^0,c
  5729   001E44  0E00               	movlw	0
  5730   001E46  6E0B               	movwf	(___fldiv@b+2)^0,c
  5731   001E48  0E00               	movlw	0
  5732   001E4A  6E0C               	movwf	(___fldiv@b+3)^0,c
  5733   001E4C  0E80               	movlw	128
  5734   001E4E  120B               	iorwf	(___fldiv@b+2)^0,f,c
  5735   001E50  0E7F               	movlw	127
  5736   001E52  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5737   001E54                     l2548:
  5738   001E54  5019               	movf	___fldiv@sign^0,w,c
  5739   001E56  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5740   001E58  C009  F009         	movff	___fldiv@b,?___fldiv
  5741   001E5C  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  5742   001E60  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  5743   001E64  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  5744   001E68  EF79  F010         	goto	l1188
  5745   001E6C                     l2554:
  5746   001E6C  5020               	movf	___fldiv@bexp^0,w,c
  5747   001E6E  A4D8               	btfss	status,2,c
  5748   001E70  EF3C  F00F         	goto	u1401
  5749   001E74  EF3E  F00F         	goto	u1400
  5750   001E78                     u1401:
  5751   001E78  EF48  F00F         	goto	l2562
  5752   001E7C                     u1400:
  5753   001E7C  0E00               	movlw	0
  5754   001E7E  6E09               	movwf	?___fldiv^0,c
  5755   001E80  0E00               	movlw	0
  5756   001E82  6E0A               	movwf	(?___fldiv+1)^0,c
  5757   001E84  0E00               	movlw	0
  5758   001E86  6E0B               	movwf	(?___fldiv+2)^0,c
  5759   001E88  0E00               	movlw	0
  5760   001E8A  6E0C               	movwf	(?___fldiv+3)^0,c
  5761   001E8C  EF79  F010         	goto	l1188
  5762   001E90                     l2562:
  5763   001E90  5021               	movf	___fldiv@aexp^0,w,c
  5764   001E92  C020  F011         	movff	___fldiv@bexp,??___fldiv
  5765   001E96  6A12               	clrf	(??___fldiv+1)^0,c
  5766   001E98  5E11               	subwf	??___fldiv^0,f,c
  5767   001E9A  0E00               	movlw	0
  5768   001E9C  5A12               	subwfb	(??___fldiv+1)^0,f,c
  5769   001E9E  0E7F               	movlw	127
  5770   001EA0  2411               	addwf	??___fldiv^0,w,c
  5771   001EA2  6E1A               	movwf	___fldiv@new_exp^0,c
  5772   001EA4  0E00               	movlw	0
  5773   001EA6  2012               	addwfc	(??___fldiv+1)^0,w,c
  5774   001EA8  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5775   001EAA  C009  F015         	movff	___fldiv@b,___fldiv@rem
  5776   001EAE  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  5777   001EB2  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  5778   001EB6  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  5779   001EBA  0E00               	movlw	0
  5780   001EBC  6E09               	movwf	___fldiv@b^0,c
  5781   001EBE  0E00               	movlw	0
  5782   001EC0  6E0A               	movwf	(___fldiv@b+1)^0,c
  5783   001EC2  0E00               	movlw	0
  5784   001EC4  6E0B               	movwf	(___fldiv@b+2)^0,c
  5785   001EC6  0E00               	movlw	0
  5786   001EC8  6E0C               	movwf	(___fldiv@b+3)^0,c
  5787   001ECA  0E00               	movlw	0
  5788   001ECC  6E1C               	movwf	___fldiv@grs^0,c
  5789   001ECE  0E00               	movlw	0
  5790   001ED0  6E1D               	movwf	(___fldiv@grs+1)^0,c
  5791   001ED2  0E00               	movlw	0
  5792   001ED4  6E1E               	movwf	(___fldiv@grs+2)^0,c
  5793   001ED6  0E00               	movlw	0
  5794   001ED8  6E1F               	movwf	(___fldiv@grs+3)^0,c
  5795   001EDA  0E00               	movlw	0
  5796   001EDC  6E21               	movwf	___fldiv@aexp^0,c
  5797   001EDE  EFA9  F00F         	goto	l1190
  5798   001EE2                     l2572:
  5799   001EE2  5021               	movf	___fldiv@aexp^0,w,c
  5800   001EE4  B4D8               	btfsc	status,2,c
  5801   001EE6  EF77  F00F         	goto	u1411
  5802   001EEA  EF79  F00F         	goto	u1410
  5803   001EEE                     u1411:
  5804   001EEE  EF90  F00F         	goto	l2580
  5805   001EF2                     u1410:
  5806   001EF2  90D8               	bcf	status,0,c
  5807   001EF4  3615               	rlcf	___fldiv@rem^0,f,c
  5808   001EF6  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  5809   001EF8  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  5810   001EFA  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  5811   001EFC  90D8               	bcf	status,0,c
  5812   001EFE  3609               	rlcf	___fldiv@b^0,f,c
  5813   001F00  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5814   001F02  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5815   001F04  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5816   001F06  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5817   001F08  EF88  F00F         	goto	u1421
  5818   001F0C  EF8A  F00F         	goto	u1420
  5819   001F10                     u1421:
  5820   001F10  EF8B  F00F         	goto	l1193
  5821   001F14                     u1420:
  5822   001F14  8009               	bsf	___fldiv@b^0,0,c
  5823   001F16                     l1193:
  5824   001F16  90D8               	bcf	status,0,c
  5825   001F18  361C               	rlcf	___fldiv@grs^0,f,c
  5826   001F1A  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5827   001F1C  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5828   001F1E  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5829   001F20                     l2580:
  5830   001F20  500D               	movf	___fldiv@a^0,w,c
  5831   001F22  5C15               	subwf	___fldiv@rem^0,w,c
  5832   001F24  500E               	movf	(___fldiv@a+1)^0,w,c
  5833   001F26  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  5834   001F28  500F               	movf	(___fldiv@a+2)^0,w,c
  5835   001F2A  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  5836   001F2C  5010               	movf	(___fldiv@a+3)^0,w,c
  5837   001F2E  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  5838   001F30  A0D8               	btfss	status,0,c
  5839   001F32  EF9D  F00F         	goto	u1431
  5840   001F36  EF9F  F00F         	goto	u1430
  5841   001F3A                     u1431:
  5842   001F3A  EFA8  F00F         	goto	l2586
  5843   001F3E                     u1430:
  5844   001F3E  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  5845   001F40  500D               	movf	___fldiv@a^0,w,c
  5846   001F42  5E15               	subwf	___fldiv@rem^0,f,c
  5847   001F44  500E               	movf	(___fldiv@a+1)^0,w,c
  5848   001F46  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  5849   001F48  500F               	movf	(___fldiv@a+2)^0,w,c
  5850   001F4A  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  5851   001F4C  5010               	movf	(___fldiv@a+3)^0,w,c
  5852   001F4E  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  5853   001F50                     l2586:
  5854   001F50  2A21               	incf	___fldiv@aexp^0,f,c
  5855   001F52                     l1190:
  5856   001F52  0E19               	movlw	25
  5857   001F54  6421               	cpfsgt	___fldiv@aexp^0,c
  5858   001F56  EFAF  F00F         	goto	u1441
  5859   001F5A  EFB1  F00F         	goto	u1440
  5860   001F5E                     u1441:
  5861   001F5E  EF71  F00F         	goto	l2572
  5862   001F62                     u1440:
  5863   001F62  5015               	movf	___fldiv@rem^0,w,c
  5864   001F64  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  5865   001F66  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  5866   001F68  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  5867   001F6A  B4D8               	btfsc	status,2,c
  5868   001F6C  EFBA  F00F         	goto	u1451
  5869   001F70  EFBC  F00F         	goto	u1450
  5870   001F74                     u1451:
  5871   001F74  EFD4  F00F         	goto	l2598
  5872   001F78                     u1450:
  5873   001F78  801C               	bsf	___fldiv@grs^0,0,c
  5874   001F7A  EFD4  F00F         	goto	l2598
  5875   001F7E                     l2592:
  5876   001F7E  90D8               	bcf	status,0,c
  5877   001F80  3609               	rlcf	___fldiv@b^0,f,c
  5878   001F82  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5879   001F84  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5880   001F86  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5881   001F88  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5882   001F8A  EFC9  F00F         	goto	u1461
  5883   001F8E  EFCB  F00F         	goto	u1460
  5884   001F92                     u1461:
  5885   001F92  EFCC  F00F         	goto	l1199
  5886   001F96                     u1460:
  5887   001F96  8009               	bsf	___fldiv@b^0,0,c
  5888   001F98                     l1199:
  5889   001F98  90D8               	bcf	status,0,c
  5890   001F9A  361C               	rlcf	___fldiv@grs^0,f,c
  5891   001F9C  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5892   001F9E  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5893   001FA0  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5894   001FA2  061A               	decf	___fldiv@new_exp^0,f,c
  5895   001FA4  A0D8               	btfss	status,0,c
  5896   001FA6  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  5897   001FA8                     l2598:
  5898   001FA8  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  5899   001FAA  EFD9  F00F         	goto	u1471
  5900   001FAE  EFDB  F00F         	goto	u1470
  5901   001FB2                     u1471:
  5902   001FB2  EFBF  F00F         	goto	l2592
  5903   001FB6                     u1470:
  5904   001FB6  0E00               	movlw	0
  5905   001FB8  6E21               	movwf	___fldiv@aexp^0,c
  5906   001FBA  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5907   001FBC  EFE2  F00F         	goto	u1481
  5908   001FC0  EFE4  F00F         	goto	u1480
  5909   001FC4                     u1481:
  5910   001FC4  EF08  F010         	goto	l1201
  5911   001FC8                     u1480:
  5912   001FC8  0EFF               	movlw	255
  5913   001FCA  141C               	andwf	___fldiv@grs^0,w,c
  5914   001FCC  6E11               	movwf	??___fldiv^0,c
  5915   001FCE  0EFF               	movlw	255
  5916   001FD0  141D               	andwf	(___fldiv@grs+1)^0,w,c
  5917   001FD2  6E12               	movwf	(??___fldiv+1)^0,c
  5918   001FD4  0EFF               	movlw	255
  5919   001FD6  141E               	andwf	(___fldiv@grs+2)^0,w,c
  5920   001FD8  6E13               	movwf	(??___fldiv+2)^0,c
  5921   001FDA  0E7F               	movlw	127
  5922   001FDC  141F               	andwf	(___fldiv@grs+3)^0,w,c
  5923   001FDE  6E14               	movwf	(??___fldiv+3)^0,c
  5924   001FE0  5011               	movf	??___fldiv^0,w,c
  5925   001FE2  1012               	iorwf	(??___fldiv+1)^0,w,c
  5926   001FE4  1013               	iorwf	(??___fldiv+2)^0,w,c
  5927   001FE6  1014               	iorwf	(??___fldiv+3)^0,w,c
  5928   001FE8  B4D8               	btfsc	status,2,c
  5929   001FEA  EFF9  F00F         	goto	u1491
  5930   001FEE  EFFB  F00F         	goto	u1490
  5931   001FF2                     u1491:
  5932   001FF2  EFFF  F00F         	goto	l1202
  5933   001FF6                     u1490:
  5934   001FF6                     l2606:
  5935   001FF6  0E01               	movlw	1
  5936   001FF8  6E21               	movwf	___fldiv@aexp^0,c
  5937   001FFA  EF08  F010         	goto	l1201
  5938   001FFE                     l1202:
  5939   001FFE  A009               	btfss	___fldiv@b^0,0,c
  5940   002000  EF04  F010         	goto	u1501
  5941   002004  EF06  F010         	goto	u1500
  5942   002008                     u1501:
  5943   002008  EF08  F010         	goto	l1201
  5944   00200C                     u1500:
  5945   00200C  EFFB  F00F         	goto	l2606
  5946   002010                     l1201:
  5947   002010  5021               	movf	___fldiv@aexp^0,w,c
  5948   002012  B4D8               	btfsc	status,2,c
  5949   002014  EF0E  F010         	goto	u1511
  5950   002018  EF10  F010         	goto	u1510
  5951   00201C                     u1511:
  5952   00201C  EF34  F010         	goto	l2618
  5953   002020                     u1510:
  5954   002020  0E01               	movlw	1
  5955   002022  2609               	addwf	___fldiv@b^0,f,c
  5956   002024  0E00               	movlw	0
  5957   002026  220A               	addwfc	(___fldiv@b+1)^0,f,c
  5958   002028  220B               	addwfc	(___fldiv@b+2)^0,f,c
  5959   00202A  220C               	addwfc	(___fldiv@b+3)^0,f,c
  5960   00202C  A00C               	btfss	(___fldiv@b+3)^0,0,c
  5961   00202E  EF1B  F010         	goto	u1521
  5962   002032  EF1D  F010         	goto	u1520
  5963   002036                     u1521:
  5964   002036  EF34  F010         	goto	l2618
  5965   00203A                     u1520:
  5966   00203A  C009  F011         	movff	___fldiv@b,??___fldiv
  5967   00203E  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  5968   002042  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  5969   002046  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  5970   00204A  3414               	rlcf	(??___fldiv+3)^0,w,c
  5971   00204C  3214               	rrcf	(??___fldiv+3)^0,f,c
  5972   00204E  3213               	rrcf	(??___fldiv+2)^0,f,c
  5973   002050  3212               	rrcf	(??___fldiv+1)^0,f,c
  5974   002052  3211               	rrcf	??___fldiv^0,f,c
  5975   002054  C011  F009         	movff	??___fldiv,___fldiv@b
  5976   002058  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  5977   00205C  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  5978   002060  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  5979   002064  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  5980   002066  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  5981   002068                     l2618:
  5982   002068  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5983   00206A  EF3F  F010         	goto	u1531
  5984   00206E  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5985   002070  E108               	bnz	u1530
  5986   002072  281A               	incf	___fldiv@new_exp^0,w,c
  5987   002074  A0D8               	btfss	status,0,c
  5988   002076  EF3F  F010         	goto	u1531
  5989   00207A  EF41  F010         	goto	u1530
  5990   00207E                     u1531:
  5991   00207E  EF4C  F010         	goto	l2622
  5992   002082                     u1530:
  5993   002082  0E00               	movlw	0
  5994   002084  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5995   002086  681A               	setf	___fldiv@new_exp^0,c
  5996   002088  0E00               	movlw	0
  5997   00208A  6E09               	movwf	___fldiv@b^0,c
  5998   00208C  0E00               	movlw	0
  5999   00208E  6E0A               	movwf	(___fldiv@b+1)^0,c
  6000   002090  0E00               	movlw	0
  6001   002092  6E0B               	movwf	(___fldiv@b+2)^0,c
  6002   002094  0E00               	movlw	0
  6003   002096  6E0C               	movwf	(___fldiv@b+3)^0,c
  6004   002098                     l2622:
  6005   002098  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6006   00209A  EF59  F010         	goto	u1540
  6007   00209E  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  6008   0020A0  E106               	bnz	u1541
  6009   0020A2  041A               	decf	___fldiv@new_exp^0,w,c
  6010   0020A4  B0D8               	btfsc	status,0,c
  6011   0020A6  EF57  F010         	goto	u1541
  6012   0020AA  EF59  F010         	goto	u1540
  6013   0020AE                     u1541:
  6014   0020AE  EF67  F010         	goto	l2626
  6015   0020B2                     u1540:
  6016   0020B2  0E00               	movlw	0
  6017   0020B4  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  6018   0020B6  0E00               	movlw	0
  6019   0020B8  6E1A               	movwf	___fldiv@new_exp^0,c
  6020   0020BA  0E00               	movlw	0
  6021   0020BC  6E09               	movwf	___fldiv@b^0,c
  6022   0020BE  0E00               	movlw	0
  6023   0020C0  6E0A               	movwf	(___fldiv@b+1)^0,c
  6024   0020C2  0E00               	movlw	0
  6025   0020C4  6E0B               	movwf	(___fldiv@b+2)^0,c
  6026   0020C6  0E00               	movlw	0
  6027   0020C8  6E0C               	movwf	(___fldiv@b+3)^0,c
  6028   0020CA  0E00               	movlw	0
  6029   0020CC  6E19               	movwf	___fldiv@sign^0,c
  6030   0020CE                     l2626:
  6031   0020CE  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  6032   0020D2  A020               	btfss	___fldiv@bexp^0,0,c
  6033   0020D4  EF6E  F010         	goto	u1551
  6034   0020D8  EF70  F010         	goto	u1550
  6035   0020DC                     u1551:
  6036   0020DC  EF73  F010         	goto	l2632
  6037   0020E0                     u1550:
  6038   0020E0  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  6039   0020E2  EF74  F010         	goto	l2634
  6040   0020E6                     l2632:
  6041   0020E6  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  6042   0020E8                     l2634:
  6043   0020E8  90D8               	bcf	status,0,c
  6044   0020EA  3020               	rrcf	___fldiv@bexp^0,w,c
  6045   0020EC  6E0C               	movwf	(___fldiv@b+3)^0,c
  6046   0020EE  EF2A  F00F         	goto	l2548
  6047   0020F2                     l1188:
  6048   0020F2  0012               	return		;funcret
  6049   0020F4                     __end_of___fldiv:
  6050                           	callstack 0
  6051                           
  6052 ;; *************** function _color_click_init *****************
  6053 ;; Defined at:
  6054 ;;		line 9 in file "color.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;		None
  6057 ;; Auto vars:     Size  Location     Type
  6058 ;;		None
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      void 
  6061 ;; Registers used:
  6062 ;;		wreg, status,2, status,0, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6071 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6072 ;;Total ram usage:        1 bytes
  6073 ;; Hardware stack levels used: 1
  6074 ;; Hardware stack levels required when called: 9
  6075 ;; This function calls:
  6076 ;;		_I2C_2_Master_Init
  6077 ;;		_color_writetoaddr
  6078 ;; This function is called by:
  6079 ;;		_main
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083                           	psect	text27
  6084   003034                     __ptext27:
  6085                           	callstack 0
  6086   003034                     _color_click_init:
  6087                           	callstack 21
  6088   003034                     
  6089                           ;color.c: 11:     I2C_2_Master_Init();
  6090   003034  EC66  F018         	call	_I2C_2_Master_Init	;wreg free
  6091   003038                     
  6092                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  6093   003038  0E01               	movlw	1
  6094   00303A  6E0B               	movwf	color_writetoaddr@value^0,c
  6095   00303C  0E00               	movlw	0
  6096   00303E  ECE0  F018         	call	_color_writetoaddr
  6097   003042                     
  6098                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6099   003042  0E3F               	movlw	63
  6100   003044  6E0D               	movwf	??_color_click_init^0,c
  6101   003046  0E55               	movlw	85
  6102   003048                     u2677:
  6103   003048  2EE8               	decfsz	wreg,f,c
  6104   00304A  D7FE               	bra	u2677
  6105   00304C  2E0D               	decfsz	??_color_click_init^0,f,c
  6106   00304E  D7FC               	bra	u2677
  6107   003050  F000               	nop	
  6108   003052                     
  6109                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  6110   003052  0E03               	movlw	3
  6111   003054  6E0B               	movwf	color_writetoaddr@value^0,c
  6112   003056  0E00               	movlw	0
  6113   003058  ECE0  F018         	call	_color_writetoaddr
  6114   00305C                     
  6115                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  6116   00305C  0ED5               	movlw	213
  6117   00305E  6E0B               	movwf	color_writetoaddr@value^0,c
  6118   003060  0E01               	movlw	1
  6119   003062  ECE0  F018         	call	_color_writetoaddr
  6120   003066  0012               	return		;funcret
  6121   003068                     __end_of_color_click_init:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function _I2C_2_Master_Init *****************
  6125 ;; Defined at:
  6126 ;;		line 4 in file "i2c.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6144 ;;Total ram usage:        0 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 6
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_color_click_init
  6151 ;; This function uses a non-reentrant model
  6152 ;;
  6153                           
  6154                           	psect	text28
  6155   0030CC                     __ptext28:
  6156                           	callstack 0
  6157   0030CC                     _I2C_2_Master_Init:
  6158                           	callstack 23
  6159   0030CC                     
  6160                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6161   0030CC  010E               	movlb	14	; () banked
  6162   0030CE  51D9               	movf	217,w,b	;volatile
  6163   0030D0  0BF0               	andlw	-16
  6164   0030D2  0908               	iorlw	8
  6165   0030D4  6FD9               	movwf	217,b	;volatile
  6166   0030D6                     
  6167                           ; BSR set to: 14
  6168                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6169   0030D6  8BD9               	bsf	217,5,b	;volatile
  6170                           
  6171                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6172   0030D8  0E9F               	movlw	159
  6173   0030DA  6FD6               	movwf	214,b	;volatile
  6174   0030DC                     
  6175                           ; BSR set to: 14
  6176                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6177   0030DC  8A84               	bsf	132,5,c	;volatile
  6178   0030DE                     
  6179                           ; BSR set to: 14
  6180                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6181   0030DE  8C84               	bsf	132,6,c	;volatile
  6182   0030E0                     
  6183                           ; BSR set to: 14
  6184                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6185   0030E0  9BA7               	bcf	167,5,b	;volatile
  6186   0030E2                     
  6187                           ; BSR set to: 14
  6188                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6189   0030E2  9DA7               	bcf	167,6,b	;volatile
  6190                           
  6191                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6192   0030E4  0E1D               	movlw	29
  6193   0030E6  6F1D               	movwf	29,b	;volatile
  6194                           
  6195                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6196   0030E8  0E1E               	movlw	30
  6197   0030EA  6F1C               	movwf	28,b	;volatile
  6198                           
  6199                           ;i2c.c: 18:   RD5PPS=0x1C;
  6200   0030EC  0E1C               	movlw	28
  6201   0030EE  6F6F               	movwf	111,b	;volatile
  6202                           
  6203                           ;i2c.c: 19:   RD6PPS=0x1B;
  6204   0030F0  0E1B               	movlw	27
  6205   0030F2  6F70               	movwf	112,b	;volatile
  6206   0030F4                     
  6207                           ; BSR set to: 14
  6208   0030F4  0012               	return		;funcret
  6209   0030F6                     __end_of_I2C_2_Master_Init:
  6210                           	callstack 0
  6211                           
  6212 ;; *************** function _Interrupts_init *****************
  6213 ;; Defined at:
  6214 ;;		line 10 in file "interrupts.c"
  6215 ;; Parameters:    Size  Location     Type
  6216 ;;		None
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;		None
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      void 
  6221 ;; Registers used:
  6222 ;;		None
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;Total ram usage:        0 bytes
  6233 ;; Hardware stack levels used: 1
  6234 ;; Hardware stack levels required when called: 6
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		_main
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text29
  6243   00324A                     __ptext29:
  6244                           	callstack 0
  6245   00324A                     _Interrupts_init:
  6246                           	callstack 24
  6247   00324A                     
  6248                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  6249   00324A  8082               	bsf	130,0,c	;volatile
  6250                           
  6251                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  6252   00324C  010E               	movlb	14	; () banked
  6253   00324E  919A               	bcf	154,0,b	;volatile
  6254                           
  6255                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  6256   003250  9133               	bcf	51,0,b	;volatile
  6257                           
  6258                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  6259   003252  8129               	bsf	41,0,b	;volatile
  6260                           
  6261                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  6262   003254  811F               	bsf	31,0,b	;volatile
  6263                           
  6264                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  6265   003256  90F2               	bcf	242,0,c	;volatile
  6266                           
  6267                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  6268   003258  8AF2               	bsf	242,5,c	;volatile
  6269                           
  6270                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  6271   00325A  8CF2               	bsf	242,6,c	;volatile
  6272                           
  6273                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  6274   00325C  8EF2               	bsf	242,7,c	;volatile
  6275   00325E                     
  6276                           ; BSR set to: 14
  6277   00325E  0012               	return		;funcret
  6278   003260                     __end_of_Interrupts_init:
  6279                           	callstack 0
  6280                           
  6281 ;; *************** function _Color_Interrupts_threshold *****************
  6282 ;; Defined at:
  6283 ;;		line 38 in file "interrupts.c"
  6284 ;; Parameters:    Size  Location     Type
  6285 ;;  upperThresho    2   12[COMRAM] unsigned int 
  6286 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  6287 ;; Auto vars:     Size  Location     Type
  6288 ;;		None
  6289 ;; Return value:  Size  Location     Type
  6290 ;;                  1    wreg      void 
  6291 ;; Registers used:
  6292 ;;		wreg, status,2, status,0, cstack
  6293 ;; Tracked objects:
  6294 ;;		On entry : 0/0
  6295 ;;		On exit  : 0/0
  6296 ;;		Unchanged: 0/0
  6297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6302 ;;Total ram usage:        4 bytes
  6303 ;; Hardware stack levels used: 1
  6304 ;; Hardware stack levels required when called: 9
  6305 ;; This function calls:
  6306 ;;		_color_writetoaddr
  6307 ;; This function is called by:
  6308 ;;		_main
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text30
  6313   0030F6                     __ptext30:
  6314                           	callstack 0
  6315   0030F6                     _Color_Interrupts_threshold:
  6316                           	callstack 21
  6317   0030F6                     
  6318                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  6319   0030F6  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  6320   0030FA  0E04               	movlw	4
  6321   0030FC  ECE0  F018         	call	_color_writetoaddr
  6322                           
  6323                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  6324   003100  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  6325   003102  6E0B               	movwf	color_writetoaddr@value^0,c
  6326   003104  0E05               	movlw	5
  6327   003106  ECE0  F018         	call	_color_writetoaddr
  6328                           
  6329                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  6330   00310A  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  6331   00310E  0E06               	movlw	6
  6332   003110  ECE0  F018         	call	_color_writetoaddr
  6333                           
  6334                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  6335   003114  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  6336   003116  6E0B               	movwf	color_writetoaddr@value^0,c
  6337   003118  0E07               	movlw	7
  6338   00311A  ECE0  F018         	call	_color_writetoaddr
  6339   00311E  0012               	return		;funcret
  6340   003120                     __end_of_Color_Interrupts_threshold:
  6341                           	callstack 0
  6342                           
  6343 ;; *************** function _Color_Interrupts_init *****************
  6344 ;; Defined at:
  6345 ;;		line 29 in file "interrupts.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;		None
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6361 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;Total ram usage:        1 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 9
  6366 ;; This function calls:
  6367 ;;		_color_writetoaddr
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;; This function uses a non-reentrant model
  6371 ;;
  6372                           
  6373                           	psect	text31
  6374   003200                     __ptext31:
  6375                           	callstack 0
  6376   003200                     _Color_Interrupts_init:
  6377                           	callstack 21
  6378   003200                     
  6379                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  6380   003200  0E13               	movlw	19
  6381   003202  6E0B               	movwf	color_writetoaddr@value^0,c
  6382   003204  0E00               	movlw	0
  6383   003206  ECE0  F018         	call	_color_writetoaddr
  6384   00320A                     
  6385                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  6386   00320A  0ED0               	movlw	208
  6387   00320C  6E0D               	movwf	??_Color_Interrupts_init^0,c
  6388   00320E  0ECA               	movlw	202
  6389   003210                     u2687:
  6390   003210  2EE8               	decfsz	wreg,f,c
  6391   003212  D7FE               	bra	u2687
  6392   003214  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  6393   003216  D7FC               	bra	u2687
  6394   003218  0012               	return		;funcret
  6395   00321A                     __end_of_Color_Interrupts_init:
  6396                           	callstack 0
  6397                           
  6398 ;; *************** function _color_writetoaddr *****************
  6399 ;; Defined at:
  6400 ;;		line 24 in file "color.c"
  6401 ;; Parameters:    Size  Location     Type
  6402 ;;  address         1    wreg     unsigned char 
  6403 ;;  value           1   10[COMRAM] unsigned char 
  6404 ;; Auto vars:     Size  Location     Type
  6405 ;;  address         1   11[COMRAM] unsigned char 
  6406 ;; Return value:  Size  Location     Type
  6407 ;;                  1    wreg      void 
  6408 ;; Registers used:
  6409 ;;		wreg, status,2, status,0, cstack
  6410 ;; Tracked objects:
  6411 ;;		On entry : 0/0
  6412 ;;		On exit  : 0/0
  6413 ;;		Unchanged: 0/0
  6414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6415 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6419 ;;Total ram usage:        2 bytes
  6420 ;; Hardware stack levels used: 1
  6421 ;; Hardware stack levels required when called: 8
  6422 ;; This function calls:
  6423 ;;		_I2C_2_Master_Start
  6424 ;;		_I2C_2_Master_Stop
  6425 ;;		_I2C_2_Master_Write
  6426 ;; This function is called by:
  6427 ;;		_color_click_init
  6428 ;;		_Color_Interrupts_init
  6429 ;;		_Color_Interrupts_threshold
  6430 ;;		_persistence_register
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           	psect	text32
  6435   0031C0                     __ptext32:
  6436                           	callstack 0
  6437   0031C0                     _color_writetoaddr:
  6438                           	callstack 21
  6439                           
  6440                           ;incstack = 0
  6441                           ;color_writetoaddr@address stored from wreg
  6442   0031C0  6E0C               	movwf	color_writetoaddr@address^0,c
  6443   0031C2                     
  6444                           ;color.c: 25:     I2C_2_Master_Start();
  6445   0031C2  EC52  F019         	call	_I2C_2_Master_Start	;wreg free
  6446                           
  6447                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  6448   0031C6  0E52               	movlw	82
  6449   0031C8  EC36  F019         	call	_I2C_2_Master_Write
  6450                           
  6451                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  6452   0031CC  500C               	movf	color_writetoaddr@address^0,w,c
  6453   0031CE  0980               	iorlw	128
  6454   0031D0  EC36  F019         	call	_I2C_2_Master_Write
  6455                           
  6456                           ;color.c: 28:     I2C_2_Master_Write(value);
  6457   0031D4  500B               	movf	color_writetoaddr@value^0,w,c
  6458   0031D6  EC36  F019         	call	_I2C_2_Master_Write
  6459                           
  6460                           ;color.c: 29:     I2C_2_Master_Stop();
  6461   0031DA  EC4D  F019         	call	_I2C_2_Master_Stop	;wreg free
  6462   0031DE  0012               	return		;funcret
  6463   0031E0                     __end_of_color_writetoaddr:
  6464                           	callstack 0
  6465                           
  6466 ;; *************** function _I2C_2_Master_Write *****************
  6467 ;; Defined at:
  6468 ;;		line 45 in file "i2c.c"
  6469 ;; Parameters:    Size  Location     Type
  6470 ;;  data_byte       1    wreg     unsigned char 
  6471 ;; Auto vars:     Size  Location     Type
  6472 ;;  data_byte       1    9[COMRAM] unsigned char 
  6473 ;; Return value:  Size  Location     Type
  6474 ;;                  1    wreg      void 
  6475 ;; Registers used:
  6476 ;;		wreg, status,2, status,0, cstack
  6477 ;; Tracked objects:
  6478 ;;		On entry : 0/0
  6479 ;;		On exit  : 0/0
  6480 ;;		Unchanged: 0/0
  6481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;Total ram usage:        1 bytes
  6487 ;; Hardware stack levels used: 1
  6488 ;; Hardware stack levels required when called: 7
  6489 ;; This function calls:
  6490 ;;		_I2C_2_Master_Idle
  6491 ;; This function is called by:
  6492 ;;		_color_writetoaddr
  6493 ;;		_color_read_Red
  6494 ;;		_color_read_Green
  6495 ;;		_color_read_Blue
  6496 ;;		_color_read_Clear
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text33
  6501   00326C                     __ptext33:
  6502                           	callstack 0
  6503   00326C                     _I2C_2_Master_Write:
  6504                           	callstack 21
  6505                           
  6506                           ;incstack = 0
  6507                           ;I2C_2_Master_Write@data_byte stored from wreg
  6508   00326C  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  6509   00326E                     
  6510                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6511   00326E  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  6512   003272                     
  6513                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6514   003272  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  6515   003276  0012               	return		;funcret
  6516   003278                     __end_of_I2C_2_Master_Write:
  6517                           	callstack 0
  6518                           
  6519 ;; *************** function _I2C_2_Master_Stop *****************
  6520 ;; Defined at:
  6521 ;;		line 39 in file "i2c.c"
  6522 ;; Parameters:    Size  Location     Type
  6523 ;;		None
  6524 ;; Auto vars:     Size  Location     Type
  6525 ;;		None
  6526 ;; Return value:  Size  Location     Type
  6527 ;;                  1    wreg      void 
  6528 ;; Registers used:
  6529 ;;		wreg, status,2, status,0, cstack
  6530 ;; Tracked objects:
  6531 ;;		On entry : 0/0
  6532 ;;		On exit  : 0/0
  6533 ;;		Unchanged: 0/0
  6534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6539 ;;Total ram usage:        0 bytes
  6540 ;; Hardware stack levels used: 1
  6541 ;; Hardware stack levels required when called: 7
  6542 ;; This function calls:
  6543 ;;		_I2C_2_Master_Idle
  6544 ;; This function is called by:
  6545 ;;		_color_writetoaddr
  6546 ;;		_color_read_Red
  6547 ;;		_color_read_Green
  6548 ;;		_color_read_Blue
  6549 ;;		_color_read_Clear
  6550 ;; This function uses a non-reentrant model
  6551 ;;
  6552                           
  6553                           	psect	text34
  6554   00329A                     __ptext34:
  6555                           	callstack 0
  6556   00329A                     _I2C_2_Master_Stop:
  6557                           	callstack 21
  6558   00329A                     
  6559                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6560   00329A  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  6561   00329E                     
  6562                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6563   00329E  010E               	movlb	14	; () banked
  6564   0032A0  85DA               	bsf	218,2,b	;volatile
  6565   0032A2                     
  6566                           ; BSR set to: 14
  6567   0032A2  0012               	return		;funcret
  6568   0032A4                     __end_of_I2C_2_Master_Stop:
  6569                           	callstack 0
  6570                           
  6571 ;; *************** function _I2C_2_Master_Start *****************
  6572 ;; Defined at:
  6573 ;;		line 27 in file "i2c.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 7
  6594 ;; This function calls:
  6595 ;;		_I2C_2_Master_Idle
  6596 ;; This function is called by:
  6597 ;;		_color_writetoaddr
  6598 ;;		_color_read_Red
  6599 ;;		_color_read_Green
  6600 ;;		_color_read_Blue
  6601 ;;		_color_read_Clear
  6602 ;; This function uses a non-reentrant model
  6603 ;;
  6604                           
  6605                           	psect	text35
  6606   0032A4                     __ptext35:
  6607                           	callstack 0
  6608   0032A4                     _I2C_2_Master_Start:
  6609                           	callstack 21
  6610   0032A4                     
  6611                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6612   0032A4  ECA5  F018         	call	_I2C_2_Master_Idle	;wreg free
  6613   0032A8                     
  6614                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6615   0032A8  010E               	movlb	14	; () banked
  6616   0032AA  81DA               	bsf	218,0,b	;volatile
  6617   0032AC                     
  6618                           ; BSR set to: 14
  6619   0032AC  0012               	return		;funcret
  6620   0032AE                     __end_of_I2C_2_Master_Start:
  6621                           	callstack 0
  6622                           
  6623 ;; *************** function _I2C_2_Master_Idle *****************
  6624 ;; Defined at:
  6625 ;;		line 22 in file "i2c.c"
  6626 ;; Parameters:    Size  Location     Type
  6627 ;;		None
  6628 ;; Auto vars:     Size  Location     Type
  6629 ;;		None
  6630 ;; Return value:  Size  Location     Type
  6631 ;;                  1    wreg      void 
  6632 ;; Registers used:
  6633 ;;		wreg, status,2, status,0
  6634 ;; Tracked objects:
  6635 ;;		On entry : 0/0
  6636 ;;		On exit  : 0/0
  6637 ;;		Unchanged: 0/0
  6638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6641 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6642 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6643 ;;Total ram usage:        1 bytes
  6644 ;; Hardware stack levels used: 1
  6645 ;; Hardware stack levels required when called: 6
  6646 ;; This function calls:
  6647 ;;		Nothing
  6648 ;; This function is called by:
  6649 ;;		_I2C_2_Master_Start
  6650 ;;		_I2C_2_Master_RepStart
  6651 ;;		_I2C_2_Master_Stop
  6652 ;;		_I2C_2_Master_Write
  6653 ;;		_I2C_2_Master_Read
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text36
  6658   00314A                     __ptext36:
  6659                           	callstack 0
  6660   00314A                     _I2C_2_Master_Idle:
  6661                           	callstack 21
  6662   00314A                     l183:
  6663   00314A  010E               	movlb	14	; () banked
  6664   00314C  B5D8               	btfsc	216,2,b	;volatile
  6665   00314E  EFAB  F018         	goto	u1201
  6666   003152  EFAD  F018         	goto	u1200
  6667   003156                     u1201:
  6668   003156  EFA5  F018         	goto	l183
  6669   00315A                     u1200:
  6670   00315A                     
  6671                           ; BSR set to: 14
  6672   00315A  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6673   00315E  0E1F               	movlw	31
  6674   003160  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  6675   003162  A4D8               	btfss	status,2,c
  6676   003164  EFB6  F018         	goto	u1211
  6677   003168  EFB8  F018         	goto	u1210
  6678   00316C                     u1211:
  6679   00316C  EFA5  F018         	goto	l183
  6680   003170                     u1210:
  6681   003170                     
  6682                           ; BSR set to: 14
  6683   003170  0012               	return		;funcret
  6684   003172                     __end_of_I2C_2_Master_Idle:
  6685                           	callstack 0
  6686                           
  6687 ;; *************** function _HighISR *****************
  6688 ;; Defined at:
  6689 ;;		line 71 in file "interrupts.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 5
  6710 ;; This function calls:
  6711 ;;		_Color_Interrupts_clear
  6712 ;; This function is called by:
  6713 ;;		Interrupt level 2
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	intcode
  6718   000008                     __pintcode:
  6719                           	callstack 0
  6720   000008                     _HighISR:
  6721                           	callstack 21
  6722                           
  6723                           ; BSR set to: 14
  6724                           ;incstack = 0
  6725   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6726   00000A                     
  6727                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  6728   00000A  010E               	movlb	14	; () banked
  6729   00000C  A133               	btfss	51,0,b	;volatile
  6730   00000E  EF0B  F000         	goto	i2u224_41
  6731   000012  EF0D  F000         	goto	i2u224_40
  6732   000016                     i2u224_41:
  6733   000016  EF19  F000         	goto	i2l467
  6734   00001A                     i2u224_40:
  6735   00001A                     
  6736                           ; BSR set to: 14
  6737                           ;interrupts.c: 77:         LATDbits.LATD7 = 1;
  6738   00001A  8E7C               	bsf	124,7,c	;volatile
  6739   00001C                     
  6740                           ; BSR set to: 14
  6741                           ;interrupts.c: 78:         interrupt_flag = 1;
  6742   00001C  0E00               	movlw	0
  6743   00001E  0100               	movlb	0	; () banked
  6744   000020  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  6745   000022  0E01               	movlw	1
  6746   000024  6FA0               	movwf	_interrupt_flag& (0+255),b
  6747   000026                     
  6748                           ; BSR set to: 0
  6749                           ;interrupts.c: 79:         interrupt_ctr++;
  6750   000026  4B9E               	infsnz	_interrupt_ctr& (0+255),f,b
  6751   000028  2B9F               	incf	(_interrupt_ctr+1)& (0+255),f,b
  6752   00002A                     
  6753                           ; BSR set to: 0
  6754                           ;interrupts.c: 80:         Color_Interrupts_clear();
  6755   00002A  EC4D  F018         	call	_Color_Interrupts_clear	;wreg free
  6756   00002E                     
  6757                           ;interrupts.c: 81:         PIR0bits.INT0IF = 0;
  6758   00002E  010E               	movlb	14	; () banked
  6759   000030  9133               	bcf	51,0,b	;volatile
  6760   000032                     i2l467:
  6761                           
  6762                           ; BSR set to: 14
  6763   000032  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6764   000034  0011               	retfie		f
  6765   000036                     __end_of_HighISR:
  6766                           	callstack 0
  6767                           
  6768 ;; *************** function _Color_Interrupts_clear *****************
  6769 ;; Defined at:
  6770 ;;		line 51 in file "interrupts.c"
  6771 ;; Parameters:    Size  Location     Type
  6772 ;;		None
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;		None
  6775 ;; Return value:  Size  Location     Type
  6776 ;;                  1    wreg      void 
  6777 ;; Registers used:
  6778 ;;		wreg, status,2, status,0, cstack
  6779 ;; Tracked objects:
  6780 ;;		On entry : 0/0
  6781 ;;		On exit  : 0/0
  6782 ;;		Unchanged: 0/0
  6783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6788 ;;Total ram usage:        0 bytes
  6789 ;; Hardware stack levels used: 1
  6790 ;; Hardware stack levels required when called: 4
  6791 ;; This function calls:
  6792 ;;		i2_Color_Interrupts_init
  6793 ;;		i2_Color_Interrupts_threshold
  6794 ;;		i2_I2C_2_Master_Start
  6795 ;;		i2_I2C_2_Master_Stop
  6796 ;;		i2_I2C_2_Master_Write
  6797 ;;		i2_persistence_register
  6798 ;; This function is called by:
  6799 ;;		_HighISR
  6800 ;; This function uses a non-reentrant model
  6801 ;;
  6802                           
  6803                           	psect	text38
  6804   00309A                     __ptext38:
  6805                           	callstack 0
  6806   00309A                     _Color_Interrupts_clear:
  6807                           	callstack 21
  6808   00309A                     
  6809                           ;interrupts.c: 55:     I2C_2_Master_Start();
  6810   00309A  EC5C  F019         	call	i2_I2C_2_Master_Start	;wreg free
  6811                           
  6812                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  6813   00309E  0E52               	movlw	82
  6814   0030A0  EC42  F019         	call	i2_I2C_2_Master_Write
  6815                           
  6816                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  6817   0030A4  0EE6               	movlw	230
  6818   0030A6  EC42  F019         	call	i2_I2C_2_Master_Write
  6819                           
  6820                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  6821   0030AA  EC57  F019         	call	i2_I2C_2_Master_Stop	;wreg free
  6822                           
  6823                           ;interrupts.c: 61:     Color_Interrupts_init();
  6824   0030AE  EC0D  F019         	call	i2_Color_Interrupts_init	;wreg free
  6825                           
  6826                           ;interrupts.c: 62:     persistence_register();
  6827   0030B2  EC3C  F019         	call	i2_persistence_register	;wreg free
  6828                           
  6829                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  6830   0030B6  C0E6  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  6831   0030BA  C0E7  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  6832   0030BE  C09C  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  6833   0030C2  C09D  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  6834   0030C6  EC90  F018         	call	i2_Color_Interrupts_threshold	;wreg free
  6835   0030CA  0012               	return		;funcret
  6836   0030CC                     __end_of_Color_Interrupts_clear:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function i2_persistence_register *****************
  6840 ;; Defined at:
  6841 ;;		line 46 in file "interrupts.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;		None
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;		None
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6859 ;;Total ram usage:        0 bytes
  6860 ;; Hardware stack levels used: 1
  6861 ;; Hardware stack levels required when called: 3
  6862 ;; This function calls:
  6863 ;;		i2_color_writetoaddr
  6864 ;; This function is called by:
  6865 ;;		_Color_Interrupts_clear
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text39
  6870   003278                     __ptext39:
  6871                           	callstack 0
  6872   003278                     i2_persistence_register:
  6873                           	callstack 21
  6874   003278                     
  6875                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  6876   003278  0E02               	movlw	2
  6877   00327A  6E03               	movwf	i2color_writetoaddr@value^0,c
  6878   00327C  0E0C               	movlw	12
  6879   00327E  ECF0  F018         	call	i2_color_writetoaddr
  6880   003282  0012               	return		;funcret
  6881   003284                     __end_ofi2_persistence_register:
  6882                           	callstack 0
  6883                           
  6884 ;; *************** function i2_Color_Interrupts_threshold *****************
  6885 ;; Defined at:
  6886 ;;		line 38 in file "interrupts.c"
  6887 ;; Parameters:    Size  Location     Type
  6888 ;;  upperThresho    2    4[COMRAM] unsigned int 
  6889 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;		None
  6892 ;; Return value:  Size  Location     Type
  6893 ;;                  1    wreg      void 
  6894 ;; Registers used:
  6895 ;;		wreg, status,2, status,0, cstack
  6896 ;; Tracked objects:
  6897 ;;		On entry : 0/0
  6898 ;;		On exit  : 0/0
  6899 ;;		Unchanged: 0/0
  6900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6901 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6904 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6905 ;;Total ram usage:        4 bytes
  6906 ;; Hardware stack levels used: 1
  6907 ;; Hardware stack levels required when called: 3
  6908 ;; This function calls:
  6909 ;;		i2_color_writetoaddr
  6910 ;; This function is called by:
  6911 ;;		_Color_Interrupts_clear
  6912 ;; This function uses a non-reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text40
  6916   003120                     __ptext40:
  6917                           	callstack 0
  6918   003120                     i2_Color_Interrupts_threshold:
  6919                           	callstack 21
  6920   003120                     
  6921                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  6922   003120  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  6923   003124  0E04               	movlw	4
  6924   003126  ECF0  F018         	call	i2_color_writetoaddr
  6925                           
  6926                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  6927   00312A  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  6928   00312C  6E03               	movwf	i2color_writetoaddr@value^0,c
  6929   00312E  0E05               	movlw	5
  6930   003130  ECF0  F018         	call	i2_color_writetoaddr
  6931                           
  6932                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  6933   003134  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  6934   003138  0E06               	movlw	6
  6935   00313A  ECF0  F018         	call	i2_color_writetoaddr
  6936                           
  6937                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  6938   00313E  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  6939   003140  6E03               	movwf	i2color_writetoaddr@value^0,c
  6940   003142  0E07               	movlw	7
  6941   003144  ECF0  F018         	call	i2_color_writetoaddr
  6942   003148  0012               	return		;funcret
  6943   00314A                     __end_ofi2_Color_Interrupts_threshold:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function i2_Color_Interrupts_init *****************
  6947 ;; Defined at:
  6948 ;;		line 29 in file "interrupts.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;		None
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;		None
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  1    wreg      void 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6964 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6966 ;;Total ram usage:        1 bytes
  6967 ;; Hardware stack levels used: 1
  6968 ;; Hardware stack levels required when called: 3
  6969 ;; This function calls:
  6970 ;;		i2_color_writetoaddr
  6971 ;; This function is called by:
  6972 ;;		_Color_Interrupts_clear
  6973 ;; This function uses a non-reentrant model
  6974 ;;
  6975                           
  6976                           	psect	text41
  6977   00321A                     __ptext41:
  6978                           	callstack 0
  6979   00321A                     i2_Color_Interrupts_init:
  6980                           	callstack 21
  6981   00321A                     
  6982                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  6983   00321A  0E13               	movlw	19
  6984   00321C  6E03               	movwf	i2color_writetoaddr@value^0,c
  6985   00321E  0E00               	movlw	0
  6986   003220  ECF0  F018         	call	i2_color_writetoaddr
  6987   003224                     
  6988                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  6989   003224  0ED0               	movlw	208
  6990   003226  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  6991   003228  0ECA               	movlw	202
  6992   00322A                     i2u269_47:
  6993   00322A  2EE8               	decfsz	wreg,f,c
  6994   00322C  D7FE               	bra	i2u269_47
  6995   00322E  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  6996   003230  D7FC               	bra	i2u269_47
  6997   003232  0012               	return		;funcret
  6998   003234                     __end_ofi2_Color_Interrupts_init:
  6999                           	callstack 0
  7000                           
  7001 ;; *************** function i2_color_writetoaddr *****************
  7002 ;; Defined at:
  7003 ;;		line 24 in file "color.c"
  7004 ;; Parameters:    Size  Location     Type
  7005 ;;  address         1    wreg     unsigned char 
  7006 ;;  value           1    2[COMRAM] unsigned char 
  7007 ;; Auto vars:     Size  Location     Type
  7008 ;;  address         1    3[COMRAM] unsigned char 
  7009 ;; Return value:  Size  Location     Type
  7010 ;;                  1    wreg      void 
  7011 ;; Registers used:
  7012 ;;		wreg, status,2, status,0, cstack
  7013 ;; Tracked objects:
  7014 ;;		On entry : 0/0
  7015 ;;		On exit  : 0/0
  7016 ;;		Unchanged: 0/0
  7017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7018 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7021 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;Total ram usage:        2 bytes
  7023 ;; Hardware stack levels used: 1
  7024 ;; Hardware stack levels required when called: 2
  7025 ;; This function calls:
  7026 ;;		i2_I2C_2_Master_Start
  7027 ;;		i2_I2C_2_Master_Stop
  7028 ;;		i2_I2C_2_Master_Write
  7029 ;; This function is called by:
  7030 ;;		i2_Color_Interrupts_init
  7031 ;;		i2_Color_Interrupts_threshold
  7032 ;;		i2_persistence_register
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text42
  7037   0031E0                     __ptext42:
  7038                           	callstack 0
  7039   0031E0                     i2_color_writetoaddr:
  7040                           	callstack 21
  7041                           
  7042                           ;incstack = 0
  7043                           ;i2color_writetoaddr@address stored from wreg
  7044   0031E0  6E04               	movwf	i2color_writetoaddr@address^0,c
  7045   0031E2                     
  7046                           ;color.c: 25:     I2C_2_Master_Start();
  7047   0031E2  EC5C  F019         	call	i2_I2C_2_Master_Start	;wreg free
  7048                           
  7049                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7050   0031E6  0E52               	movlw	82
  7051   0031E8  EC42  F019         	call	i2_I2C_2_Master_Write
  7052                           
  7053                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7054   0031EC  5004               	movf	i2color_writetoaddr@address^0,w,c
  7055   0031EE  0980               	iorlw	128
  7056   0031F0  EC42  F019         	call	i2_I2C_2_Master_Write
  7057                           
  7058                           ;color.c: 28:     I2C_2_Master_Write(value);
  7059   0031F4  5003               	movf	i2color_writetoaddr@value^0,w,c
  7060   0031F6  EC42  F019         	call	i2_I2C_2_Master_Write
  7061                           
  7062                           ;color.c: 29:     I2C_2_Master_Stop();
  7063   0031FA  EC57  F019         	call	i2_I2C_2_Master_Stop	;wreg free
  7064   0031FE  0012               	return		;funcret
  7065   003200                     __end_ofi2_color_writetoaddr:
  7066                           	callstack 0
  7067                           
  7068 ;; *************** function i2_I2C_2_Master_Write *****************
  7069 ;; Defined at:
  7070 ;;		line 45 in file "i2c.c"
  7071 ;; Parameters:    Size  Location     Type
  7072 ;;  data_byte       1    wreg     unsigned char 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  data_byte       1    1[COMRAM] unsigned char 
  7075 ;; Return value:  Size  Location     Type
  7076 ;;                  1    wreg      void 
  7077 ;; Registers used:
  7078 ;;		wreg, status,2, status,0, cstack
  7079 ;; Tracked objects:
  7080 ;;		On entry : 0/0
  7081 ;;		On exit  : 0/0
  7082 ;;		Unchanged: 0/0
  7083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;Total ram usage:        1 bytes
  7089 ;; Hardware stack levels used: 1
  7090 ;; Hardware stack levels required when called: 1
  7091 ;; This function calls:
  7092 ;;		i2_I2C_2_Master_Idle
  7093 ;; This function is called by:
  7094 ;;		_Color_Interrupts_clear
  7095 ;;		i2_color_writetoaddr
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text43
  7100   003284                     __ptext43:
  7101                           	callstack 0
  7102   003284                     i2_I2C_2_Master_Write:
  7103                           	callstack 21
  7104                           
  7105                           ;incstack = 0
  7106                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  7107   003284  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  7108   003286                     
  7109                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7110   003286  ECB9  F018         	call	i2_I2C_2_Master_Idle	;wreg free
  7111   00328A                     
  7112                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7113   00328A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  7114   00328E  0012               	return		;funcret
  7115   003290                     __end_ofi2_I2C_2_Master_Write:
  7116                           	callstack 0
  7117                           
  7118 ;; *************** function i2_I2C_2_Master_Stop *****************
  7119 ;; Defined at:
  7120 ;;		line 39 in file "i2c.c"
  7121 ;; Parameters:    Size  Location     Type
  7122 ;;		None
  7123 ;; Auto vars:     Size  Location     Type
  7124 ;;		None
  7125 ;; Return value:  Size  Location     Type
  7126 ;;                  1    wreg      void 
  7127 ;; Registers used:
  7128 ;;		wreg, status,2, status,0, cstack
  7129 ;; Tracked objects:
  7130 ;;		On entry : 0/0
  7131 ;;		On exit  : 0/0
  7132 ;;		Unchanged: 0/0
  7133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7138 ;;Total ram usage:        0 bytes
  7139 ;; Hardware stack levels used: 1
  7140 ;; Hardware stack levels required when called: 1
  7141 ;; This function calls:
  7142 ;;		i2_I2C_2_Master_Idle
  7143 ;; This function is called by:
  7144 ;;		_Color_Interrupts_clear
  7145 ;;		i2_color_writetoaddr
  7146 ;; This function uses a non-reentrant model
  7147 ;;
  7148                           
  7149                           	psect	text44
  7150   0032AE                     __ptext44:
  7151                           	callstack 0
  7152   0032AE                     i2_I2C_2_Master_Stop:
  7153                           	callstack 21
  7154   0032AE                     
  7155                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7156   0032AE  ECB9  F018         	call	i2_I2C_2_Master_Idle	;wreg free
  7157   0032B2                     
  7158                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7159   0032B2  010E               	movlb	14	; () banked
  7160   0032B4  85DA               	bsf	218,2,b	;volatile
  7161   0032B6                     
  7162                           ; BSR set to: 14
  7163   0032B6  0012               	return		;funcret
  7164   0032B8                     __end_ofi2_I2C_2_Master_Stop:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function i2_I2C_2_Master_Start *****************
  7168 ;; Defined at:
  7169 ;;		line 27 in file "i2c.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 1
  7190 ;; This function calls:
  7191 ;;		i2_I2C_2_Master_Idle
  7192 ;; This function is called by:
  7193 ;;		_Color_Interrupts_clear
  7194 ;;		i2_color_writetoaddr
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text45
  7199   0032B8                     __ptext45:
  7200                           	callstack 0
  7201   0032B8                     i2_I2C_2_Master_Start:
  7202                           	callstack 21
  7203   0032B8                     
  7204                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7205   0032B8  ECB9  F018         	call	i2_I2C_2_Master_Idle	;wreg free
  7206   0032BC                     
  7207                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7208   0032BC  010E               	movlb	14	; () banked
  7209   0032BE  81DA               	bsf	218,0,b	;volatile
  7210   0032C0                     
  7211                           ; BSR set to: 14
  7212   0032C0  0012               	return		;funcret
  7213   0032C2                     __end_ofi2_I2C_2_Master_Start:
  7214                           	callstack 0
  7215                           
  7216 ;; *************** function i2_I2C_2_Master_Idle *****************
  7217 ;; Defined at:
  7218 ;;		line 22 in file "i2c.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;		None
  7221 ;; Auto vars:     Size  Location     Type
  7222 ;;		None
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  1    wreg      void 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7234 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7236 ;;Total ram usage:        1 bytes
  7237 ;; Hardware stack levels used: 1
  7238 ;; This function calls:
  7239 ;;		Nothing
  7240 ;; This function is called by:
  7241 ;;		i2_I2C_2_Master_Start
  7242 ;;		i2_I2C_2_Master_Stop
  7243 ;;		i2_I2C_2_Master_Write
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           	psect	text46
  7248   003172                     __ptext46:
  7249                           	callstack 0
  7250   003172                     i2_I2C_2_Master_Idle:
  7251                           	callstack 21
  7252   003172                     i2l183:
  7253   003172  010E               	movlb	14	; () banked
  7254   003174  B5D8               	btfsc	216,2,b	;volatile
  7255   003176  EFBF  F018         	goto	i2u118_41
  7256   00317A  EFC1  F018         	goto	i2u118_40
  7257   00317E                     i2u118_41:
  7258   00317E  EFB9  F018         	goto	i2l183
  7259   003182                     i2u118_40:
  7260   003182                     
  7261                           ; BSR set to: 14
  7262   003182  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  7263   003186  0E1F               	movlw	31
  7264   003188  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  7265   00318A  A4D8               	btfss	status,2,c
  7266   00318C  EFCA  F018         	goto	i2u119_41
  7267   003190  EFCC  F018         	goto	i2u119_40
  7268   003194                     i2u119_41:
  7269   003194  EFB9  F018         	goto	i2l183
  7270   003198                     i2u119_40:
  7271   003198                     
  7272                           ; BSR set to: 14
  7273   003198  0012               	return		;funcret
  7274   00319A                     __end_ofi2_I2C_2_Master_Idle:
  7275                           	callstack 0
  7276                           
  7277                           	psect	rparam
  7278   000000                     
  7279                           	psect	temp
  7280   00004E                     btemp:
  7281                           	callstack 0
  7282   00004E                     	ds	1
  7283   000000                     int$flags	set	btemp
  7284   000000                     wtemp8	set	btemp+1
  7285   000000                     ttemp5	set	btemp+1
  7286   000000                     ttemp6	set	btemp+4
  7287   000000                     ttemp7	set	btemp+8
  7288                           
  7289                           	psect	idloc
  7290                           
  7291                           ;Config register IDLOC0 @ 0x200000
  7292                           ;	unspecified, using default values
  7293   200000                     	org	2097152
  7294   200000  0FFF               	dw	4095
  7295                           
  7296                           ;Config register IDLOC1 @ 0x200002
  7297                           ;	unspecified, using default values
  7298   200002                     	org	2097154
  7299   200002  0FFF               	dw	4095
  7300                           
  7301                           ;Config register IDLOC2 @ 0x200004
  7302                           ;	unspecified, using default values
  7303   200004                     	org	2097156
  7304   200004  0FFF               	dw	4095
  7305                           
  7306                           ;Config register IDLOC3 @ 0x200006
  7307                           ;	unspecified, using default values
  7308   200006                     	org	2097158
  7309   200006  0FFF               	dw	4095
  7310                           
  7311                           ;Config register IDLOC4 @ 0x200008
  7312                           ;	unspecified, using default values
  7313   200008                     	org	2097160
  7314   200008  0FFF               	dw	4095
  7315                           
  7316                           ;Config register IDLOC5 @ 0x20000A
  7317                           ;	unspecified, using default values
  7318   20000A                     	org	2097162
  7319   20000A  0FFF               	dw	4095
  7320                           
  7321                           ;Config register IDLOC6 @ 0x20000C
  7322                           ;	unspecified, using default values
  7323   20000C                     	org	2097164
  7324   20000C  0FFF               	dw	4095
  7325                           
  7326                           ;Config register IDLOC7 @ 0x20000E
  7327                           ;	unspecified, using default values
  7328   20000E                     	org	2097166
  7329   20000E  0FFF               	dw	4095
  7330                           
  7331                           	psect	config
  7332                           
  7333                           ;Config register CONFIG1L @ 0x300000
  7334                           ;	External Oscillator mode Selection bits
  7335                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7336                           ;	Power-up default value for COSC bits
  7337                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7338   300000                     	org	3145728
  7339   300000  AA                 	db	170
  7340                           
  7341                           ;Config register CONFIG1H @ 0x300001
  7342                           ;	unspecified, using default values
  7343                           ;	Clock Out Enable bit
  7344                           ;	CLKOUTEN = 0x1, unprogrammed default
  7345                           ;	Clock Switch Enable bit
  7346                           ;	CSWEN = 0x1, unprogrammed default
  7347                           ;	Fail-Safe Clock Monitor Enable bit
  7348                           ;	FCMEN = 0x1, unprogrammed default
  7349   300001                     	org	3145729
  7350   300001  FF                 	db	255
  7351                           
  7352                           ;Config register CONFIG2L @ 0x300002
  7353                           ;	unspecified, using default values
  7354                           ;	Master Clear Enable bit
  7355                           ;	MCLRE = 0x1, unprogrammed default
  7356                           ;	Power-up Timer Enable bit
  7357                           ;	PWRTE = 0x1, unprogrammed default
  7358                           ;	Low-power BOR enable bit
  7359                           ;	LPBOREN = 0x1, unprogrammed default
  7360                           ;	Brown-out Reset Enable bits
  7361                           ;	BOREN = 0x3, unprogrammed default
  7362   300002                     	org	3145730
  7363   300002  FF                 	db	255
  7364                           
  7365                           ;Config register CONFIG2H @ 0x300003
  7366                           ;	unspecified, using default values
  7367                           ;	Brown Out Reset Voltage selection bits
  7368                           ;	BORV = 0x3, unprogrammed default
  7369                           ;	ZCD Disable bit
  7370                           ;	ZCD = 0x1, unprogrammed default
  7371                           ;	PPSLOCK bit One-Way Set Enable bit
  7372                           ;	PPS1WAY = 0x1, unprogrammed default
  7373                           ;	Stack Full/Underflow Reset Enable bit
  7374                           ;	STVREN = 0x1, unprogrammed default
  7375                           ;	Debugger Enable bit
  7376                           ;	DEBUG = 0x1, unprogrammed default
  7377                           ;	Extended Instruction Set Enable bit
  7378                           ;	XINST = 0x1, unprogrammed default
  7379   300003                     	org	3145731
  7380   300003  FF                 	db	255
  7381                           
  7382                           ;Config register CONFIG3L @ 0x300004
  7383                           ;	WDT Period Select bits
  7384                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7385                           ;	WDT operating mode
  7386                           ;	WDTE = OFF, WDT Disabled
  7387   300004                     	org	3145732
  7388   300004  9F                 	db	159
  7389                           
  7390                           ;Config register CONFIG3H @ 0x300005
  7391                           ;	unspecified, using default values
  7392                           ;	WDT Window Select bits
  7393                           ;	WDTCWS = 0x7, unprogrammed default
  7394                           ;	WDT input clock selector
  7395                           ;	WDTCCS = 0x7, unprogrammed default
  7396   300005                     	org	3145733
  7397   300005  FF                 	db	255
  7398                           
  7399                           ;Config register CONFIG4L @ 0x300006
  7400                           ;	unspecified, using default values
  7401                           ;	Write Protection Block 0
  7402                           ;	WRT0 = 0x1, unprogrammed default
  7403                           ;	Write Protection Block 1
  7404                           ;	WRT1 = 0x1, unprogrammed default
  7405                           ;	Write Protection Block 2
  7406                           ;	WRT2 = 0x1, unprogrammed default
  7407                           ;	Write Protection Block 3
  7408                           ;	WRT3 = 0x1, unprogrammed default
  7409                           ;	Write Protection Block 3
  7410                           ;	WRT4 = 0x1, unprogrammed default
  7411                           ;	Write Protection Block 3
  7412                           ;	WRT5 = 0x1, unprogrammed default
  7413                           ;	Write Protection Block 3
  7414                           ;	WRT6 = 0x1, unprogrammed default
  7415                           ;	Write Protection Block 3
  7416                           ;	WRT7 = 0x1, unprogrammed default
  7417   300006                     	org	3145734
  7418   300006  FF                 	db	255
  7419                           
  7420                           ;Config register CONFIG4H @ 0x300007
  7421                           ;	unspecified, using default values
  7422                           ;	Configuration Register Write Protection bit
  7423                           ;	WRTC = 0x1, unprogrammed default
  7424                           ;	Boot Block Write Protection bit
  7425                           ;	WRTB = 0x1, unprogrammed default
  7426                           ;	Data EEPROM Write Protection bit
  7427                           ;	WRTD = 0x1, unprogrammed default
  7428                           ;	Scanner Enable bit
  7429                           ;	SCANE = 0x1, unprogrammed default
  7430                           ;	Low Voltage Programming Enable bit
  7431                           ;	LVP = 0x1, unprogrammed default
  7432   300007                     	org	3145735
  7433   300007  FF                 	db	255
  7434                           
  7435                           ;Config register CONFIG5L @ 0x300008
  7436                           ;	unspecified, using default values
  7437                           ;	UserNVM Program Memory Code Protection bit
  7438                           ;	CP = 0x1, unprogrammed default
  7439                           ;	DataNVM Memory Code Protection bit
  7440                           ;	CPD = 0x1, unprogrammed default
  7441   300008                     	org	3145736
  7442   300008  FF                 	db	255
  7443                           
  7444                           ;Config register CONFIG5H @ 0x300009
  7445                           ;	unspecified, using default values
  7446   300009                     	org	3145737
  7447   300009  FF                 	db	255
  7448                           
  7449                           ;Config register CONFIG6L @ 0x30000A
  7450                           ;	unspecified, using default values
  7451                           ;	Table Read Protection Block 0
  7452                           ;	EBTR0 = 0x1, unprogrammed default
  7453                           ;	Table Read Protection Block 1
  7454                           ;	EBTR1 = 0x1, unprogrammed default
  7455                           ;	Table Read Protection Block 2
  7456                           ;	EBTR2 = 0x1, unprogrammed default
  7457                           ;	Table Read Protection Block 3
  7458                           ;	EBTR3 = 0x1, unprogrammed default
  7459                           ;	Table Read Protection Block 4
  7460                           ;	EBTR4 = 0x1, unprogrammed default
  7461                           ;	Table Read Protection Block 5
  7462                           ;	EBTR5 = 0x1, unprogrammed default
  7463                           ;	Table Read Protection Block 6
  7464                           ;	EBTR6 = 0x1, unprogrammed default
  7465                           ;	Table Read Protection Block 7
  7466                           ;	EBTR7 = 0x1, unprogrammed default
  7467   30000A                     	org	3145738
  7468   30000A  FF                 	db	255
  7469                           
  7470                           ;Config register CONFIG6H @ 0x30000B
  7471                           ;	unspecified, using default values
  7472                           ;	Boot Block Table Read Protection bit
  7473                           ;	EBTRB = 0x1, unprogrammed default
  7474   30000B                     	org	3145739
  7475   30000B  FF                 	db	255
  7476                           tosu	equ	0xFFF
  7477                           tosh	equ	0xFFE
  7478                           tosl	equ	0xFFD
  7479                           stkptr	equ	0xFFC
  7480                           pclatu	equ	0xFFB
  7481                           pclath	equ	0xFFA
  7482                           pcl	equ	0xFF9
  7483                           tblptru	equ	0xFF8
  7484                           tblptrh	equ	0xFF7
  7485                           tblptrl	equ	0xFF6
  7486                           tablat	equ	0xFF5
  7487                           prodh	equ	0xFF4
  7488                           prodl	equ	0xFF3
  7489                           indf0	equ	0xFEF
  7490                           postinc0	equ	0xFEE
  7491                           postdec0	equ	0xFED
  7492                           preinc0	equ	0xFEC
  7493                           plusw0	equ	0xFEB
  7494                           fsr0h	equ	0xFEA
  7495                           fsr0l	equ	0xFE9
  7496                           wreg	equ	0xFE8
  7497                           indf1	equ	0xFE7
  7498                           postinc1	equ	0xFE6
  7499                           postdec1	equ	0xFE5
  7500                           preinc1	equ	0xFE4
  7501                           plusw1	equ	0xFE3
  7502                           fsr1h	equ	0xFE2
  7503                           fsr1l	equ	0xFE1
  7504                           bsr	equ	0xFE0
  7505                           indf2	equ	0xFDF
  7506                           postinc2	equ	0xFDE
  7507                           postdec2	equ	0xFDD
  7508                           preinc2	equ	0xFDC
  7509                           plusw2	equ	0xFDB
  7510                           fsr2h	equ	0xFDA
  7511                           fsr2l	equ	0xFD9
  7512                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      77
    BANK0           160     52     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2608$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2608$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_retrace
    _persistence_register->_color_writetoaddr
    _motor_retrace->_fullSpeedAhead
    _motor_retrace->_reverse
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_reverse
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               154   154      0   64489
                                             41 COMRAM     2     2      0
                                              0 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
                           _turnLeft
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   21843
                                             32 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3549
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                       8     2      6   22118
                                             32 COMRAM     8     2      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    3677
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    4133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    4157
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5109
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3318
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1242
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
         _I2C_2_Master_Read
           _I2C_2_Master_Idle
         _I2C_2_Master_RepStart
           _I2C_2_Master_Idle
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Clear (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Green (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _reverse
     _turnLeft
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED
   _turnLeft

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4D       1       81.9%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D5      61        0.0%
DATA                 0      0      D5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Dec 13 17:49:34 2022

                            _color_read_Red 2E70                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 2AFE  
                              ___fldiv@sign 0019                             _color_read_Blue 2F60  
                                        l91 2EBE                                          l85 3066  
                                        l94 2F0E                                          l88 31DE  
                                        l97 2FAE                             ??_motor_retrace 0027  
                       ___wmul@multiplicand 000B                            _color_read_Clear 2F10  
                          _color_read_Green 2EC0                           ??_Interrupts_init 0009  
                                       l100 2F5E                                         l201 3032  
                                       l106 2BC2                                         l123 194C  
                                       l115 3248                                         l109 2816  
                                       l153 1D58                                         l147 1D58  
                                       l180 30F4                                         l183 314A  
                                       l192 3298                                         l186 3170  
                                       l195 32A2                                         l603 2A12  
                                       l452 3218                                         l189 32AC  
                                       l198 3276                                         l606 31BE  
                                       l455 311E                                         l449 325E  
                                       l561 26C4                                         l554 2C42  
                                       l458 326A                                         l564 2E6E  
                                       l581 2D9A                                         l567 2E04  
                                       l584 2D28                                         l578 3098  
                                       l595 2AFC                                         l598 29B2  
                                       l871 28D4                                         l876 291A  
                          ??_motor_response 0027                                         _ctr 0048  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 3234  
                       i2_color_writetoaddr 31E0                                         wreg 000FE8  
                           _color_normalise 26C6                                        l1104 2CB6  
                                      l1201 2010                                        l1202 1FFE  
                                      l3000 2C1E                                        l3010 2C40  
                                      l3002 2C28                                        l3004 2C2A  
                                      l3020 2E46                                        l3012 2E06  
                                      l2300 2C4C                                        l3100 219E  
                                      l1261 23FC                                        l1190 1F52  
                                      l3006 2C34                                        l3022 2E5A  
                                      l3014 2E12                                        l3030 2DC8  
                                      l2310 2C82                                        l2302 2C5E  
                                      l3110 21D0                                        l3102 21A0  
                                      l1264 2558                                        l2400 2EC0  
                                      l3008 2C36                                        l3016 2E22  
                                      l3032 2DDC                                        l3024 2D9C  
                                      l2312 2C98                                        l2304 2C66  
                                      l3120 222C                                        l3112 21EC  
                                      l3104 21A2                                        l1193 1F16  
                                      l1097 2CAE                                        l2402 2F06  
                                      l3018 2E32                                        l3034 2DF0  
                                      l3026 2DA8                                        l2314 2CA0  
                                      l2306 2C6E                                        l3130 22BA  
                                      l3122 2244                                        l3114 2200  
                                      l3106 21A8                                        l3050 20FC  
                                      l1275 24F0                                        l2332 32A4  
                                      l2340 329A                                        l1188 20F2  
                                      l1268 2494                                        l2412 2F10  
                                      l3028 2DB8                                        l2316 2CA2  
                                      l2308 2C7C                                        l2420 2934  
                                      l2500 2AE4                                        l3140 2336  
                                      l3132 22C0                                        l3124 2268  
                                      l3116 2218                                        l3108 21BC  
                                      l3060 2116                                        l3052 2104  
                                      l2334 32A8                                        l2342 329E  
                                      l2510 1D76                                        l2350 2FF8  
                                      l2406 2F60                                        l2414 2F56  
                                      l2318 2CA8                                        l2430 298C  
                                      l2422 2944                                        l2502 2AF0  
                                      l3142 234A                                        l3134 22DE  
                                      l3150 2392                                        l3126 2296  
                                      l3118 221A                                        l3070 214E  
                                      l3062 2126                                        l3054 210E  
                                      l3046 20F4                                        l1199 1F98  
                                      l2336 326E                                        l2600 1FB6  
                                      l2512 1D86                                        l2520 1DB0  
                                      l2504 1D5A                                        l2352 3000  
                                      l2344 3290                                        l2408 2FA6  
                                      l2440 29FA                                        l2432 299A  
                                      l2424 2954                                        l3152 2394  
                                      l3144 2360                                        l3136 22F2  
                                      l3128 229E                                        l3080 218A  
                                      l3072 2162                                        l3064 212A  
                                      l3056 210E                                        l3048 20F8  
                                      l2290 315A                                        l2338 3272  
                                      l2610 2020                                        l2602 1FBA  
                                      l2530 1DDC                                        l2522 1DC0  
                                      l2514 1D96                                        l2506 1D66  
                                      l2354 3008                                        l2346 3294  
                                      l2370 2620                                        l2362 255A  
                                      l2442 2A06                                        l2434 29A6  
                                      l2426 2964                                        l2418 291C  
                                      l2450 2CB8                                        l3146 2366  
                                      l3138 230A                                        l3090 2194  
                                      l3082 218C                                        l3074 2166  
                                      l3066 2146                                        l2380 30CC  
                                      l2620 2082                                        l2612 202C  
                                      l2604 1FC8                                        l2532 1DEC  
                                      l2540 1E16                                        l2524 1DC6  
                                      l2516 1DA6                                        l2508 1D74  
                                      l2700 2528                                        l2356 302E  
                                      l2348 2FF4                                        l2292 319A  
                                      l2372 2624                                        l2364 2576  
                                      l2444 3068                                        l2436 29CA  
                                      l2428 2978                                        l2460 2D10  
                                      l2452 2CD0                                        l3148 237A  
                                      l3092 2196                                        l3084 218E  
                                      l3076 2172                                        l3068 214A  
                                      l2390 30E2                                        l2382 30D6  
                                      l2630 20E0                                        l2622 2098  
                                      l2614 203A                                        l2606 1FF6  
                                      l2550 1E58                                        l2542 1E26  
                                      l2534 1DFC                                        l2526 1DCC  
                                      l2518 1DA8                                        l2702 2538  
                                      l2358 3030                                        l2294 31B6  
                                      l2374 2640                                        l2366 25CA  
                                      l2446 3080                                        l2438 29E2  
                                      l2470 2D62                                        l2462 2D1C  
                                      l2454 2CE0                                        l3094 2198  
                                      l3086 2190                                        l3078 217E  
                                      l2288 314A                                        l2392 31C2  
                                      l2384 30DC                                        l2720 3038  
                                      l2632 20E6                                        l2624 20B2  
                                      l2616 2064                                        l2544 1E3C  
                                      l2536 1E0C                                        l2528 1DDA  
                                      l2704 2546                                        l2376 2684  
                                      l2368 25DE                                        l2448 308C  
                                      l2472 2D72                                        l2464 2D2A  
                                      l2456 2CF0                                        l2480 2A2C  
                                      l3096 219A                                        l3088 2192  
                                      l2386 30DE                                        l2722 3042  
                                      l2634 20E8                                        l2626 20CE  
                                      l2618 2068                                        l2570 1EDA  
                                      l2562 1E90                                        l2546 1E4C  
                                      l2554 1E6C                                        l2538 1E0E  
                                      l2730 26C6                                        l2706 2548  
                                      l2394 2E70                                        l2650 2894  
                                      l2642 2818                                        l2298 2C44  
                                      l2474 2D82                                        l2466 2D42  
                                      l2458 2D00                                        l2810 1354  
                                      l2802 125C                                        l2490 2A84  
                                      l2482 2A3C                                        l3098 219C  
                                      l2388 30E0                                        l2724 3052  
                                      l2628 20D2                                        l2580 1F20  
                                      l2572 1EE2                                        l2564 1EAA  
                                      l2556 1E7C                                        l2548 1E54  
                                      l2396 2EB6                                        l2660 2918  
                                      l2652 28A2                                        l2644 2846  
                                      l2476 2D8E                                        l2468 2D52  
                                      l2900 1934                                        l2820 1440  
                                      l2812 1392                                        l2804 129A  
                                      l2740 0ED2                                        l2492 2A90  
                                      l2484 2A4C                                        l2732 3234  
                                      l2726 305C                                        l2718 3034  
                                      l2590 1F78                                        l2582 1F3E  
                                      l2574 1EF2                                        l2566 1EBA  
                                      l2558 1E7C                                        l2670 240C  
                                      l2654 28B4                                        l2646 2856  
                                      l2902 194A                                        l2830 14AE  
                                      l2822 1458                                        l2814 13D0  
                                      l2806 12D8                                        l2750 0F52  
                                      l2742 0EE6                                        l2734 0E18  
                                      l2494 2A9C                                        l2486 2A5C  
                                      l2478 2A14                                        l2910 198A  
                                      l2592 1F7E                                        l2584 1F40  
                                      l2576 1F06                                        l2568 1ECA  
                                      l2680 244A                                        l2672 2422  
                                      l2664 23A8                                        l2728 2AFE  
                                      l2656 28C2                                        l2648 2884  
                                      l2840 1530                                        l2824 146C  
                                      l2816 140E                                        l2808 1316  
                                      l2760 0FD8                                        l2752 0F58  
                                      l2744 0EFE                                        l2736 0E56  
                                      l2496 2AB4                                        l2488 2A70  
                                      l2920 1A26                                        l2912 19A2  
                                      l2594 1F88                                        l2586 1F50  
                                      l2578 1F14                                        l2690 24D2  
                                      l2682 247C                                        l2666 23B8  
                                      l2658 2912                                        l2850 163C  
                                      l2842 156E                                        l2826 1482  
                                      l2818 142C                                        l2770 105A  
                                      l2762 0FEC                                        l2746 0F28  
                                      l2738 0E94                                        l2498 2ACC  
                                      l2922 1A3A                                        l2930 1AAA  
                                      l2914 19CC                                        l2906 194E  
                                      l2596 1F96                                        l2588 1F62  
                                      l2692 24E0                                        l2684 247E  
                                      l2676 2436                                        l2668 23C6  
                                      l2860 1698                                        l2852 1654  
                                      l2844 15AC                                        l2828 1496  
                                      l2836 14B4                                        l2780 10DC  
                                      l2764 1004                                        l2748 0F3C  
                                      l2756 0F5C                                        l2940 1B3E  
                                      l2932 1AD4                                        l2924 1A52  
                                      l2916 19E0                                        l2908 1976  
                                      l2598 1FA8                                        l2694 24FE  
                                      l2686 248A                                        l2678 243E  
                                      l2870 17CE                                        l2862 16D6  
                                      l2846 15EA                                        l2838 14F2  
                                      l2790 11E8                                        l2782 111A  
                                      l2766 102E                                        l2758 0F9A  
                                      l2950 1BDA                                        l2934 1AE8  
                                      l2942 1B58                                        l2926 1A7C  
                                      l2918 19FC                                        l2696 2500  
                                      l2688 24C6                                        l2880 1842  
                                      l2872 17EC                                        l2864 1714  
                                      l2848 1628                                        l2792 1200  
                                      l2784 1158                                        l2768 1042  
                                      l2776 1060                                        l2960 1C74  
                                      l2952 1BEE                                        l2944 1B82  
                                      l2936 1B00                                        l2928 1A90  
                                      l2698 2504                                        l2890 18CA  
                                      l2874 1800                                        l2866 1752  
                                      l2858 165A                                        l2794 122A  
                                      l2786 1196                                        l2778 109E  
                                      l2962 1C8C                                        l2970 1CBC  
                                      l2954 1C1A                                        l2946 1B96  
                                      l2938 1B2A                                        l2892 18DE  
                                      l2876 1816                                        l2868 1790  
                                      l2884 1848                                        l2796 123E  
                                      l2788 11D4                                        l2972 1CE6  
                                      l2948 1BAE                                        l2956 1C36  
                                      l2982 324A                                        l2894 18F6  
                                      l2886 1886                                        l2878 182A  
                                      l2798 1256                                        l2974 1CFA  
                                      l2958 1C60                                        l2990 3260  
                                      l2984 3200                                        l2992 2BC4  
                                      l2896 190A                                        l2888 18C4  
                                      l2976 1D16                                        l2986 320A  
                                      l2994 2BEE                                        l2898 1920  
                                      l2978 1D40                                        l2988 30F6  
                                      l2996 2C12                                        l2998 2C1C  
                                      STR_1 0E01                                        u1200 315A  
                                      u2000 1752                                        u1201 3156  
                                      u2001 174E                                        u1210 3170  
                                      u2010 1790                                        u1211 316C  
                                      u2011 178C                                        u1220 2C5E  
                                      u1300 29E2                                        u2020 17CE  
                                      u2100 1B82                                        u1221 2C5A  
                                      u1301 29DE                                        u2021 17CA  
                                      u2101 1B7E                                        u1230 2C7C  
                                      u2030 17E0                                        u1310 2AB4  
                                      u2110 1C60                                        u1231 2C78  
                                      u2031 17D8                                        u1311 2AB0  
                                      u2111 1C5C                                        u1400 1E7C  
                                      u1240 2C98                                        u1320 2ACC  
                                      u2120 1CE6                                        u1401 1E78  
                                      u1241 2C94                                        u1321 2AC8  
                                      u2121 1CE2                                        u1410 1EF2  
                                      u1330 1D74                                        u1250 301C  
                                      u2050 1886                                        u2130 1D40  
                                      u2210 22DE                                        u1411 1EEE  
                                      u1331 1D70                                        u1251 3014  
                                      u2051 1882                                        u2131 1D3C  
                                      u2211 22DA                                        u1500 200C  
                                      u1420 1F14                                        u1340 1D86  
                                      u2060 18C4                                        u1501 2008  
                                      u1421 1F10                                        u1341 1D82  
                                      u2061 18C0                                        u1510 2020  
                                      u1430 1F3E                                        u1350 1D96  
                                      u1270 2576                                        u2070 1976  
                                      u2150 2146                                        u1511 201C  
                                      u1431 1F3A                                        u1351 1D92  
                                      u1271 2572                                        u2071 1972  
                                      u2151 2142                                        u1520 203A  
                                      u1440 1F62                                        u1360 1DDA  
                                      u1600 2912                                        u1280 2640  
                                      u2048 17E2                                        u2080 1A26  
                                      u2208 2258                                        u2160 21D0  
                              _BAUD4CONbits 000EE9                                        u1521 2036  
                                      u1441 1F5E                                        u1361 1DD6  
                                      u1601 290E                                        u1281 263C  
                                      u2081 1A22                                        u2161 21CC  
                                      u1530 2082                                        u1450 1F78  
                                      u1370 1DEC                                        u1610 23B8  
                                      u1290 29CA                                        u2090 1AD4  
                                      u2170 21EC                                        u1531 207E  
                                      u1451 1F74                                        u1371 1DE8  
                                      u1611 23B4                                        u1291 29C6  
                                      u2091 1AD0                                        u2307 2354  
                                      u2171 21E8                                        u1540 20B2  
                                      u1460 1F96                                        u1380 1DFC  
                                      u1700 2546                                        u1620 23C6  
                                      u1268 301E                                        u2180 222C  
                                      u1541 20AE                                        u1461 1F92  
                                      u1381 1DF8                                        u1701 2542  
                                      u1621 23C2                                        u2317 2384  
                                      u2181 2228                                        u1550 20E0  
                                      u1470 1FB6                                        u1390 1E3C  
                                      u1630 2422                                        u1710 0E56  
                                      u2190 2256                                        u1551 20DC  
                                      u1471 1FB2                                        u1391 1E38  
                                      u1631 241E                                        u1711 0E52  
                                      u2407 1B48                                        u2327 1994  
                                      u2191 224E                                        u1480 1FC8  
                                      u1640 2478                                        u1560 2846  
                                      u1800 1196                                        u1720 0E94  
                                      u1481 1FC4                                        u1641 2474  
                                      u1561 2842                                        u1801 1192  
                                      u1721 0E90                                        u2417 1BA0  
                                      u2337 19C0                                        u1490 1FF6  
                                      u1650 24C2                                        u1570 2884  
                                      u1810 11D4                                        u1730 0ED2  
                                      _T2PR 000FBC                                        u1491 1FF2  
                                      u1651 24BE                                        u1571 2880  
                                      u1811 11D0                                        u2507 0F46  
                                      u1731 0ECE                                        u2427 1BCC  
                                      u2347 19EA                                        u1660 24E0  
                                      u1580 28A2                                        u1820 129A  
                                      u1740 0F9A                                        u1661 24DC  
                                      u1581 289E                                        u1821 1296  
                                      u2517 0FF6                                        u1741 0F96  
                                      u2437 1BF8                                        u2357 1A44  
                                      u2277 220A                                        u1670 24F0  
                                      u1590 28C2                                        u1910 14F2  
                                      u1830 12D8                                        u1750 0FD8  
                                      u1671 24EC                                        u1591 28BE  
                                      u2607 1646                                        u1911 14EE  
                                      u1831 12D4                                        u2527 1022  
                                      u1751 0FD4                                        u2447 1C24  
                                      u2367 1A70                                        u2287 22FC  
                                      u1680 24FE                                        u1920 1530  
                                      u1840 1316                                        u1760 109E  
                                      u1681 24FA                                        u2617 180A  
                                      u1921 152C                                        u1841 1312  
                                      u1761 109A                                        u2537 104C  
                                      u2457 1C7E                                        u2377 1A9A  
                                      u2297 2328                                        u1690 2538  
                                      u1930 156E                                        u1850 1354  
                                      u1770 10DC                                        u1691 2534  
                                      u2627 1834                                        u1931 156A  
                                      u1851 1350                                        u2547 11F2  
                                      u1771 10D8                                        u2467 1CAA  
                                      u2387 1AF2                                        u1940 15AC  
                                      u1908 1422                                        u1860 1392  
                                      u1780 111A                                        u2637 18E8  
                                      u1941 15A8                                        u1861 138E  
                                      u2557 121E                                        u1781 1116  
                                      u2477 1D04                                        u2397 1B1E  
                                      u1950 15EA                                        u1870 13D0  
                                      u1790 1158                                        u2647 1914  
                                      u1951 15E6                                        u1871 13CC  
                                      u2567 1248                                        u1791 1154  
                                      u2487 0EF0                                        u1960 1628  
                                      u1880 140E                                        u2657 193E  
                                      u1961 1624                                        u2577 144A  
                                      u1881 140A                                        u2497 0F1C  
                                      u1970 1698                                        u1890 1420  
                                      u2667 2992                                        u1971 1694  
                                      u2587 1476                                        u1891 1418  
                                      u1980 16D6                                        u2677 3048  
                                      u1981 16D2                                        u2597 14A0  
                                      u1990 1714                                        u2687 3210  
                                      u1991 1710                                        i2l88 31FE  
                               main@pathSet 00B2                                        _main 20F4  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 004E  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0036                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 001A                      __end_of_color_read_Red 2EC0  
                           __end_of_HighISR 0036                                ___param_bank 000000  
                                     ?_main 0001                             __end_of___fldiv 20F4  
                           __end_of___lwdiv 2CB8                                       i2l183 3172  
                                     i2l186 3198                                       i2l195 32B6  
                                     i2l452 3232                                       i2l189 32C0  
                                     i2l461 30CA                                       i2l198 328E  
                                     i2l455 3148                                       i2l458 3282  
                                     i2l467 0032                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 32AE  
                __end_of_I2C_2_Master_Write 3278                                       tablat 000FF5  
                     _Color_Interrupts_init 3200                             __end_of_reverse 2A14  
                                     ttemp5 004F                                       ttemp6 0052  
                                     ttemp7 0056                                       status 000FD8  
                                     wtemp8 004F                     __end_of_color_read_RGBC 2BC4  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 2FB0  
                     _I2C_2_Master_RepStart 3290                             ?_color_read_Red 000D  
                           __initialization 2FB0                                __end_of_main 23A6  
               ?_Color_Interrupts_threshold 000D                                      ??_main 002A  
                             __activetblptr 000001                     __end_of_color_normalise 2818  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2320 32B8                                      i2l2322 32BC  
                                    i2l2330 328A                                      i2l2324 32AE  
                                    i2l3044 309A                                      i2l2326 32B2  
                                    i2l2328 3286                                      i2l2284 3172  
                                    i2l3180 002A                                      i2l3172 000A  
                                    i2l2286 3182                                      i2l2710 321A  
                                    i2l3182 002E                                      i2l3174 001A  
                                    i2l2712 3224                                      i2l3176 001C  
                                    i2l2378 31E2                                      i2l2714 3120  
                                    i2l3178 0026                                      i2l2716 3278  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 3068                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 255A  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 326C                                _CCPTMRS0bits 000FAD  
                                    ___flge 2818                                      ___wmul 319A  
                                 ??___fldiv 0011                                   ??___lwdiv 0013  
                                    clear_0 2FCE                                      clear_1 2FDA  
                                    isa$std 000001                                      main@mL 00D4  
                                    main@mR 00DD                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 309A                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 2D9C  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 2FE0                    __end_of_color_read_Clear 2F60  
                  __end_of_color_read_Green 2F10                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 324A  
                            __pcstackCOMRAM 0001                                __pidataBANK0 32C2  
            __end_ofi2_persistence_register 3284                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 321A  
                                __pbssBANK0 0060                           _color_writetoaddr 31C0  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0023  
                          motor_response@mR 0025                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0021                       __end_of_motor_retrace 1D5A  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 3260                                  _buggy_path 00A3  
                   __end_of_Interrupts_init 3260                              _lowerThreshold 009C  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 31E0  
                        _I2C_2_Master_Start 32A4                         i2_I2C_2_Master_Idle 3172  
                        _I2C_2_Master_Write 326C                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 32AE                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fldiv 1D5A  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 2C44  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 0046                                     __pcinit 2FB0  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                   __ptext0 20F4                                     __ptext1 3234  
                                   __ptext2 3260                                     __ptext3 194E  
                                   __ptext4 2A14                                     __ptext5 0E18  
                                   __ptext6 2CB8                                     __ptext7 2D2A  
                                   __ptext8 291C                                     __ptext9 3068  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00E6                                     _reverse 291C  
                             _RxBufWriteCnt 004D                       ?_persistence_register 0001  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 2FE0                 __end_ofi2_color_writetoaddr 3200  
                         ?_color_click_init 0001                           __end_of_norm_stop 309A  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 2E06                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 2D9C  
                             _interrupt_ctr 009E                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 2BC4                                  ??_turnLeft 0020  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 2D2A  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 002C  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 30CC  
                            __end_of___flge 291C                              _fullSpeedAhead 2A14  
                            __end_of___wmul 31C0                         color_read_Clear@tmp 0012  
                       start_initialization 2FB0                      ??_persistence_register 000D  
                             _TxBufWriteCnt 004B                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 2C44                      __end_of_fullSpeedAhead 2AFE  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022                                 __pdataBANK0 00E6  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 32C2  
              __end_ofi2_I2C_2_Master_Write 3290                                   ___fldiv@a 000D  
                                 ___fldiv@b 0009                                 __pbssCOMRAM 002C  
                             __pcstackBANK0 00B2                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 0040  
                                 _amb_green 0044                             motor_retrace@mL 0023  
                           motor_retrace@mR 0025                            ___lwdiv@dividend 000F  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fldiv 0009                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 314A                           _I2C_2_Master_Init 30CC  
                         _I2C_2_Master_Read 2FF2                           _I2C_2_Master_Stop 329A  
                              _RxBufReadCnt 004C                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 194E                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                                  i2u118_40 3182                                    i2u118_41 317E  
                               turnRight@mL 001C                                    i2u119_40 3198  
                                  i2u119_41 3194                                 turnRight@mR 001E  
                                  i2u224_40 001A                                    i2u224_41 0016  
                                  _PIR0bits 000E33                                    i2u269_47 322A  
                                  _PIR4bits 000E37                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 3068  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 3172                   __end_of_I2C_2_Master_Init 30F6  
                 __end_of_I2C_2_Master_Read 3034                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 32A4                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 004A  
                  i2color_writetoaddr@value 0003                                   _turnRight 2CB8  
             __end_of_Color_Interrupts_init 321A                             ?_motor_response 0021  
             __end_of_I2C_2_Master_RepStart 329A                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 26C6                        i2_I2C_2_Master_Start 32B8  
                      i2_I2C_2_Master_Write 3284                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0021                           ??_color_normalise 0024  
                                  __Lrparam 0000                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 314A  
              i2_Color_Interrupts_threshold 3120                 __end_ofi2_I2C_2_Master_Idle 319A  
               __end_ofi2_I2C_2_Master_Stop 32B8                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 194E                               ??_tricolorLED 0009  
                                  _amb_blue 0042                                    ___xxtofl 23A6  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 255A  
                                  __ptext11 319A                                    __ptext20 2F10  
                                  __ptext12 2C44                                    __ptext21 2F60  
                                  __ptext13 2818                                    __ptext30 30F6  
                                  __ptext22 3290                                    __ptext14 2D9C  
                                  __ptext31 3200                                    __ptext23 2FF2  
                                  __ptext15 2E06                                    __ptext40 3120  
                                  __ptext32 31C0                                    __ptext24 23A6  
                                  __ptext16 2BC4                                    __ptext41 321A  
                                  __ptext33 326C                                    __ptext25 26C6  
                                  __ptext17 2AFE                                    __ptext42 31E0  
                                  __ptext34 329A                                    __ptext26 1D5A  
                                  __ptext18 2E70                                    __ptext43 3284  
                                  __ptext35 32A4                                    __ptext27 3034  
                                  __ptext19 2EC0                                    __ptext44 32AE  
                                  __ptext36 314A                                    __ptext28 30CC  
                                  __ptext45 32B8                                    __ptext29 324A  
                                  __ptext46 3172                                    __ptext38 309A  
                                  __ptext39 3278                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                   reverse@mL 001C  
                                 reverse@mR 001E                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 00B4  
                                  int$flags 004E          __end_of_Color_Interrupts_threshold 3120  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 30F6  
                                  _turnLeft 2D2A                              ?_motor_retrace 0021  
                                _INTCONbits 000FF2                                 _setMotorPWM 255A  
                              motorLinit@mL 0009                         __end_of_tricolorLED 324A  
                                  intlevel2 0000                                _motor_return 00A2  
                        __end_of_motorLinit 2E70                          __end_of_motorRinit 2E06  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3234  
                          _color_click_init 3034                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00A0  
                    i2_persistence_register 3278                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
