

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 21:21:13 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   003934                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _upperThreshold
   106   003934  0BB8               	dw	3000
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _TRISCbits	set	3971
   112   000000                     _TRISDbits	set	3972
   113   000000                     _LATHbits	set	3968
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISAbits	set	3969
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _SSP2ADD	set	3798
   123   000000                     _SSP2CON1bits	set	3801
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _TMR0L	set	4051
   130   000000                     _TMR0H	set	4052
   131   000000                     _T0CON0bits	set	4053
   132   000000                     _T0CON1bits	set	4054
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISHbits	set	3976
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATFbits	set	3966
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _PIE4bits	set	3629
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _ANSELBbits	set	3738
   154   000000                     _RD6PPS	set	3696
   155   000000                     _RC7PPS	set	3689
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _PIR0bits	set	3635
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RE4PPS	set	3702
   161   000000                     _RG6PPS	set	3720
   162   000000                     _T2CLKCONbits	set	4031
   163   000000                     _T2HLTbits	set	4030
   164   000000                     _CCP1CONbits	set	4011
   165   000000                     _CCPTMRS0bits	set	4013
   166   000000                     _CCP2CONbits	set	4007
   167   000000                     _CCP3CONbits	set	3878
   168   000000                     _CCP4CONbits	set	3874
   169                           
   170                           	psect	smallconst
   171   000E00                     __psmallconst:
   172                           	callstack 0
   173   000E00  00                 	db	0
   174   000E01                     
   175                           ; BSR set to: 14
   176   000E01  52                 	db	82	;'R'
   177   000E02  47                 	db	71	;'G'
   178   000E03  42                 	db	66	;'B'
   179   000E04  43                 	db	67	;'C'
   180   000E05  3A                 	db	58	;':'
   181   000E06  25                 	db	37
   182   000E07  69                 	db	105	;'i'
   183   000E08  20                 	db	32
   184   000E09  25                 	db	37
   185   000E0A  69                 	db	105	;'i'
   186   000E0B  20                 	db	32
   187   000E0C  25                 	db	37
   188   000E0D  69                 	db	105	;'i'
   189   000E0E  20                 	db	32
   190   000E0F  25                 	db	37
   191   000E10  69                 	db	105	;'i'
   192   000E11  20                 	db	32
   193   000E12  25                 	db	37
   194   000E13  69                 	db	105	;'i'
   195   000E14  0A                 	db	10
   196   000E15  00                 	db	0
   197   000E16  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   003622                     __pcinit:
   203                           	callstack 0
   204   003622                     start_initialization:
   205                           	callstack 0
   206   003622                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (2 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   003622  0E34               	movlw	low __pidataBANK0
   212   003624  6EF6               	movwf	tblptrl,c
   213   003626  0E39               	movlw	high __pidataBANK0
   214   003628  6EF7               	movwf	tblptrh,c
   215   00362A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   00362C  6EF8               	movwf	tblptru,c
   217   00362E  0009               	tblrd		*+	;fetch initializer
   218   003630  CFF5 F0F8          	movff	tablat,__pdataBANK0
   219   003634  0009               	tblrd		*+	;fetch initializer
   220   003636  CFF5 F0F9          	movff	tablat,__pdataBANK0+1
   221                           
   222                           ; Clear objects allocated to BANK0 (82 bytes)
   223   00363A  EE00  F060         	lfsr	0,__pbssBANK0
   224   00363E  0E52               	movlw	82
   225   003640                     clear_0:
   226   003640  6AEE               	clrf	postinc0,c
   227   003642  06E8               	decf	wreg,f,c
   228   003644  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (34 bytes)
   231   003646  EE00  F02C         	lfsr	0,__pbssCOMRAM
   232   00364A  0E22               	movlw	34
   233   00364C                     clear_1:
   234   00364C  6AEE               	clrf	postinc0,c
   235   00364E  06E8               	decf	wreg,f,c
   236   003650  E1FD               	bnz	clear_1
   237   003652                     end_of_initialization:
   238                           	callstack 0
   239   003652                     __end_of__initialization:
   240                           	callstack 0
   241   003652  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   003654  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   003656  0E00               	movlw	low (__Lsmallconst shr (0+16))
   244   003658  6EF8               	movwf	tblptru,c
   245   00365A  0E0E               	movlw	high __Lsmallconst
   246   00365C  6EF7               	movwf	tblptrh,c
   247   00365E  0100               	movlb	0
   248   003660  EF7E  F013         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   00002C                     __pbssCOMRAM:
   252                           	callstack 0
   253   00002C                     _EUSART4RXbuf:
   254                           	callstack 0
   255   00002C                     	ds	20
   256   000040                     _amb_clear:
   257                           	callstack 0
   258   000040                     	ds	2
   259   000042                     _amb_blue:
   260                           	callstack 0
   261   000042                     	ds	2
   262   000044                     _amb_green:
   263                           	callstack 0
   264   000044                     	ds	2
   265   000046                     _amb_red:
   266                           	callstack 0
   267   000046                     	ds	2
   268   000048                     _ctr:
   269                           	callstack 0
   270   000048                     	ds	2
   271   00004A                     _TxBufReadCnt:
   272                           	callstack 0
   273   00004A                     	ds	1
   274   00004B                     _TxBufWriteCnt:
   275                           	callstack 0
   276   00004B                     	ds	1
   277   00004C                     _RxBufReadCnt:
   278                           	callstack 0
   279   00004C                     	ds	1
   280   00004D                     _RxBufWriteCnt:
   281                           	callstack 0
   282   00004D                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   000060                     __pbssBANK0:
   286                           	callstack 0
   287   000060                     _EUSART4TXbuf:
   288                           	callstack 0
   289   000060                     	ds	60
   290   00009C                     _lowerThreshold:
   291                           	callstack 0
   292   00009C                     	ds	2
   293   00009E                     _interrupt_ctr:
   294                           	callstack 0
   295   00009E                     	ds	2
   296   0000A0                     _interrupt_flag:
   297                           	callstack 0
   298   0000A0                     	ds	2
   299   0000A2                     _motor_return:
   300                           	callstack 0
   301   0000A2                     	ds	1
   302   0000A3                     _buggy_path:
   303                           	callstack 0
   304   0000A3                     	ds	15
   305                           
   306                           	psect	dataBANK0
   307   0000F8                     __pdataBANK0:
   308                           	callstack 0
   309   0000F8                     _upperThreshold:
   310                           	callstack 0
   311   0000F8                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314   0000B2                     __pcstackBANK0:
   315                           	callstack 0
   316   0000B2                     motor_response@j:
   317                           	callstack 0
   318   0000B2                     motor_retrace@j:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x0
   322   0000B2                     	ds	2
   323   0000B4                     motor_response@j_548:
   324                           	callstack 0
   325   0000B4                     motor_retrace@j_564:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x2
   329   0000B4                     	ds	2
   330   0000B6                     motor_response@j_549:
   331                           	callstack 0
   332   0000B6                     motor_retrace@j_565:
   333                           	callstack 0
   334                           
   335                           ; 2 bytes @ 0x4
   336   0000B6                     	ds	2
   337   0000B8                     motor_response@j_550:
   338                           	callstack 0
   339   0000B8                     motor_retrace@j_566:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x6
   343   0000B8                     	ds	2
   344   0000BA                     motor_response@j_555:
   345                           	callstack 0
   346   0000BA                     motor_retrace@j_567:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x8
   350   0000BA                     	ds	2
   351   0000BC                     motor_response@j_556:
   352                           	callstack 0
   353   0000BC                     motor_retrace@j_568:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xA
   357   0000BC                     	ds	2
   358   0000BE                     motor_response@j_557:
   359                           	callstack 0
   360   0000BE                     motor_retrace@j_569:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xC
   364   0000BE                     	ds	2
   365   0000C0                     motor_response@j_558:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0xE
   369   0000C0                     	ds	2
   370   0000C2                     main@j:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x10
   374   0000C2                     	ds	2
   375   0000C4                     main@pathSet:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x12
   379   0000C4                     	ds	2
   380   0000C6                     main@RGBC:
   381                           	callstack 0
   382                           
   383                           ; 32 bytes @ 0x14
   384   0000C6                     	ds	32
   385   0000E6                     main@mL:
   386                           	callstack 0
   387                           
   388                           ; 9 bytes @ 0x34
   389   0000E6                     	ds	9
   390   0000EF                     main@mR:
   391                           	callstack 0
   392                           
   393                           ; 9 bytes @ 0x3D
   394   0000EF                     	ds	9
   395                           
   396                           	psect	cstackCOMRAM
   397   000001                     __pcstackCOMRAM:
   398                           	callstack 0
   399   000001                     ??i2_I2C_2_Master_Idle:
   400   000001                     
   401                           ; 1 bytes @ 0x0
   402   000001                     	ds	1
   403   000002                     i2I2C_2_Master_Write@data_byte:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x1
   407   000002                     	ds	1
   408   000003                     i2color_writetoaddr@value:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x2
   412   000003                     	ds	1
   413   000004                     i2color_writetoaddr@address:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x3
   417   000004                     	ds	1
   418   000005                     ??i2_Color_Interrupts_init:
   419   000005                     i2Color_Interrupts_threshold@upperThreshold:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423   000005                     	ds	2
   424   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428   000007                     	ds	2
   429   000009                     ??_I2C_2_Master_Idle:
   430   000009                     ?___wmul:
   431                           	callstack 0
   432   000009                     ?___fldiv:
   433                           	callstack 0
   434   000009                     initDCmotorsPWM@PWMperiod:
   435                           	callstack 0
   436   000009                     motorLinit@mL:
   437                           	callstack 0
   438   000009                     motorRinit@mR:
   439                           	callstack 0
   440   000009                     ___wmul@multiplier:
   441                           	callstack 0
   442   000009                     ___flge@ff1:
   443                           	callstack 0
   444   000009                     ___fldiv@b:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x8
   448   000009                     	ds	1
   449   00000A                     ??_I2C_2_Master_Read:
   450   00000A                     I2C_2_Master_Write@data_byte:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0x9
   454   00000A                     	ds	1
   455   00000B                     color_writetoaddr@value:
   456                           	callstack 0
   457   00000B                     I2C_2_Master_Read@ack:
   458                           	callstack 0
   459   00000B                     ___wmul@multiplicand:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0xA
   463   00000B                     	ds	1
   464   00000C                     color_writetoaddr@address:
   465                           	callstack 0
   466   00000C                     I2C_2_Master_Read@tmp:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0xB
   470   00000C                     	ds	1
   471   00000D                     ??_Color_Interrupts_init:
   472   00000D                     ??_color_click_init:
   473   00000D                     ?_color_read_Red:
   474                           	callstack 0
   475   00000D                     ?_color_read_Green:
   476                           	callstack 0
   477   00000D                     ?_color_read_Blue:
   478                           	callstack 0
   479   00000D                     ?_color_read_Clear:
   480                           	callstack 0
   481   00000D                     Color_Interrupts_threshold@upperThreshold:
   482                           	callstack 0
   483   00000D                     ___wmul@product:
   484                           	callstack 0
   485   00000D                     ___flge@ff2:
   486                           	callstack 0
   487   00000D                     ___fldiv@a:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0xC
   491   00000D                     	ds	2
   492   00000F                     ??_color_read_Red:
   493   00000F                     ??_color_read_Green:
   494   00000F                     ??_color_read_Blue:
   495   00000F                     ??_color_read_Clear:
   496   00000F                     ?___lwdiv:
   497                           	callstack 0
   498   00000F                     Color_Interrupts_threshold@lowerThreshold:
   499                           	callstack 0
   500   00000F                     ___lwdiv@dividend:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0xE
   504   00000F                     	ds	2
   505   000011                     ??___fldiv:
   506   000011                     ??___flge:
   507   000011                     ___lwdiv@divisor:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x10
   511   000011                     	ds	1
   512   000012                     color_read_Red@tmp:
   513                           	callstack 0
   514   000012                     color_read_Green@tmp:
   515                           	callstack 0
   516   000012                     color_read_Blue@tmp:
   517                           	callstack 0
   518   000012                     color_read_Clear@tmp:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x11
   522   000012                     	ds	1
   523   000013                     ___lwdiv@counter:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x12
   527   000013                     	ds	1
   528   000014                     ?___xxtofl:
   529                           	callstack 0
   530   000014                     ___lwdiv@quotient:
   531                           	callstack 0
   532   000014                     ___xxtofl@val:
   533                           	callstack 0
   534                           
   535                           ; 4 bytes @ 0x13
   536   000014                     	ds	1
   537   000015                     ___fldiv@rem:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x14
   541   000015                     	ds	1
   542   000016                     setMotorPWM@m:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x15
   546   000016                     	ds	2
   547   000018                     ??_setMotorPWM:
   548   000018                     ??___xxtofl:
   549                           
   550                           ; 1 bytes @ 0x17
   551   000018                     	ds	1
   552   000019                     ___fldiv@sign:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x18
   556   000019                     	ds	1
   557   00001A                     setMotorPWM@posDuty:
   558                           	callstack 0
   559   00001A                     ___fldiv@new_exp:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x19
   563   00001A                     	ds	1
   564   00001B                     setMotorPWM@negDuty:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x1A
   568   00001B                     	ds	1
   569   00001C                     ___xxtofl@sign:
   570                           	callstack 0
   571   00001C                     norm_stop@mL:
   572                           	callstack 0
   573   00001C                     turnLeft@mL:
   574                           	callstack 0
   575   00001C                     turnRight@mL:
   576                           	callstack 0
   577   00001C                     fullSpeedAhead@mL:
   578                           	callstack 0
   579   00001C                     reverse@mL:
   580                           	callstack 0
   581   00001C                     ___fldiv@grs:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x1B
   585   00001C                     	ds	1
   586   00001D                     ___xxtofl@exp:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x1C
   590   00001D                     	ds	1
   591   00001E                     norm_stop@mR:
   592                           	callstack 0
   593   00001E                     turnLeft@mR:
   594                           	callstack 0
   595   00001E                     turnRight@mR:
   596                           	callstack 0
   597   00001E                     fullSpeedAhead@mR:
   598                           	callstack 0
   599   00001E                     reverse@mR:
   600                           	callstack 0
   601   00001E                     ___xxtofl@arg:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x1D
   605   00001E                     	ds	2
   606   000020                     ??_reverse:
   607   000020                     ___fldiv@bexp:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x1F
   611   000020                     	ds	1
   612   000021                     ___fldiv@aexp:
   613                           	callstack 0
   614   000021                     motor_response@temp:
   615                           	callstack 0
   616   000021                     motor_retrace@buggy_path:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x20
   620   000021                     	ds	1
   621   000022                     color_read_RGBC@temp:
   622                           	callstack 0
   623   000022                     color_normalise@RGBC:
   624                           	callstack 0
   625                           
   626                           ; 2 bytes @ 0x21
   627   000022                     	ds	1
   628   000023                     motor_response@mL:
   629                           	callstack 0
   630   000023                     motor_retrace@mL:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x22
   634   000023                     	ds	1
   635   000024                     
   636                           ; 1 bytes @ 0x23
   637   000024                     	ds	1
   638   000025                     motor_response@mR:
   639                           	callstack 0
   640   000025                     motor_retrace@mR:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x24
   644   000025                     	ds	2
   645   000027                     ??_motor_response:
   646   000027                     ??_motor_retrace:
   647                           
   648                           ; 1 bytes @ 0x26
   649   000027                     	ds	3
   650   00002A                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x29
   653   00002A                     	ds	2
   654                           
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 22 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;  j               2   16[BANK0 ] int 
   665 ;;  buf           100    0        unsigned char [100]
   666 ;;  RGBC           32   20[BANK0 ] struct RGBC_val
   667 ;;  mR              9   61[BANK0 ] struct DC_motor
   668 ;;  mL              9   52[BANK0 ] struct DC_motor
   669 ;;  pathSet         2   18[BANK0 ] int 
   670 ;;  amb_clear       2    0        int 
   671 ;;  amb_blue        2    0        int 
   672 ;;  amb_green       2    0        int 
   673 ;;  amb_red         2    0        int 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   684 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   685 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   686 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;Total ram usage:       56 bytes
   688 ;; Hardware stack levels required when called: 10
   689 ;; This function calls:
   690 ;;		_Color_Interrupts_init
   691 ;;		_Color_Interrupts_threshold
   692 ;;		_Interrupts_init
   693 ;;		_color_click_init
   694 ;;		_color_normalise
   695 ;;		_color_read_Blue
   696 ;;		_color_read_Clear
   697 ;;		_color_read_Green
   698 ;;		_color_read_RGBC
   699 ;;		_color_read_Red
   700 ;;		_fullSpeedAhead
   701 ;;		_initDCmotorsPWM
   702 ;;		_motorLinit
   703 ;;		_motorRinit
   704 ;;		_motor_response
   705 ;;		_motor_retrace
   706 ;;		_norm_stop
   707 ;;		_persistence_register
   708 ;;		_tricolorLED
   709 ;;		_turnLeft
   710 ;; This function is called by:
   711 ;;		Startup code after reset
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715                           	psect	text0
   716   0026FC                     __ptext0:
   717                           	callstack 0
   718   0026FC                     _main:
   719                           	callstack 21
   720   0026FC                     
   721                           ;main.c: 24:     tricolorLED();
   722   0026FC  EC53  F01C         	call	_tricolorLED	;wreg free
   723   002700                     
   724                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   725   002700  EC53  F01B         	call	_color_click_init	;wreg free
   726   002704                     
   727                           ;main.c: 29:     ctr=0;
   728   002704  0E00               	movlw	0
   729   002706  6E49               	movwf	(_ctr+1)^0,c
   730   002708  0E00               	movlw	0
   731   00270A  6E48               	movwf	_ctr^0,c
   732   00270C                     
   733                           ;main.c: 30:     interrupt_ctr=0;
   734   00270C  0E00               	movlw	0
   735   00270E  0100               	movlb	0	; () banked
   736   002710  6F9F               	movwf	(_interrupt_ctr+1)& (0+255),b
   737   002712  0E00               	movlw	0
   738   002714  6F9E               	movwf	_interrupt_ctr& (0+255),b
   739   002716                     
   740                           ; BSR set to: 0
   741                           ;main.c: 32:     for(pathSet=0;pathSet<15;pathSet++)
   742   002716  0E00               	movlw	0
   743   002718  6FC5               	movwf	(main@pathSet+1)& (0+255),b
   744   00271A  0E00               	movlw	0
   745   00271C  6FC4               	movwf	main@pathSet& (0+255),b
   746   00271E                     l4146:
   747                           
   748                           ; BSR set to: 0
   749                           ;main.c: 33:     {;main.c: 34:         buggy_path[pathSet]=0;
   750   00271E  0EA3               	movlw	low _buggy_path
   751   002720  25C4               	addwf	main@pathSet& (0+255),w,b
   752   002722  6ED9               	movwf	fsr2l,c
   753   002724  0E00               	movlw	high _buggy_path
   754   002726  21C5               	addwfc	(main@pathSet+1)& (0+255),w,b
   755   002728  6EDA               	movwf	fsr2h,c
   756   00272A  0E00               	movlw	0
   757   00272C  6EDF               	movwf	indf2,c
   758   00272E                     
   759                           ; BSR set to: 0
   760                           ;main.c: 35:     }
   761   00272E  4BC4               	infsnz	main@pathSet& (0+255),f,b
   762   002730  2BC5               	incf	(main@pathSet+1)& (0+255),f,b
   763   002732                     
   764                           ; BSR set to: 0
   765   002732  BFC5               	btfsc	(main@pathSet+1)& (0+255),7,b
   766   002734  EFA5  F013         	goto	u3571
   767   002738  51C5               	movf	(main@pathSet+1)& (0+255),w,b
   768   00273A  E109               	bnz	u3570
   769   00273C  0E0F               	movlw	15
   770   00273E  5DC4               	subwf	main@pathSet& (0+255),w,b
   771   002740  A0D8               	btfss	status,0,c
   772   002742  EFA5  F013         	goto	u3571
   773   002746  EFA7  F013         	goto	u3570
   774   00274A                     u3571:
   775   00274A  EF8F  F013         	goto	l4146
   776   00274E                     u3570:
   777   00274E                     
   778                           ; BSR set to: 0
   779                           ;main.c: 37:     Interrupts_init();
   780   00274E  EC5E  F01C         	call	_Interrupts_init	;wreg free
   781   002752                     
   782                           ;main.c: 38:     Color_Interrupts_init();
   783   002752  EC39  F01C         	call	_Color_Interrupts_init	;wreg free
   784   002756                     
   785                           ;main.c: 39:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   786   002756  C0F8  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   787   00275A  C0F9  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   788   00275E  C09C  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   789   002762  C09D  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   790   002766  ECB4  F01B         	call	_Color_Interrupts_threshold	;wreg free
   791   00276A                     
   792                           ;main.c: 40:     persistence_register();
   793   00276A  EC69  F01C         	call	_persistence_register	;wreg free
   794   00276E                     
   795                           ;main.c: 42:     initDCmotorsPWM(200);
   796   00276E  0E00               	movlw	0
   797   002770  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   798   002772  0EC8               	movlw	200
   799   002774  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   800   002776  EC1B  F019         	call	_initDCmotorsPWM	;wreg free
   801   00277A                     
   802                           ;main.c: 43:     DC_motor mL, mR;;main.c: 44:     motorLinit(&mL);
   803   00277A  0EE6               	movlw	low main@mL
   804   00277C  6E09               	movwf	motorLinit@mL^0,c
   805   00277E  0E00               	movlw	high main@mL
   806   002780  6E0A               	movwf	(motorLinit@mL+1)^0,c
   807   002782  EC3C  F01A         	call	_motorLinit	;wreg free
   808   002786                     
   809                           ;main.c: 45:     motorRinit(&mR);
   810   002786  0EEF               	movlw	low main@mR
   811   002788  6E09               	movwf	motorRinit@mR^0,c
   812   00278A  0E00               	movlw	high main@mR
   813   00278C  6E0A               	movwf	(motorRinit@mR+1)^0,c
   814   00278E  EC07  F01A         	call	_motorRinit	;wreg free
   815   002792                     
   816                           ;main.c: 47:     TRISEbits.TRISE2 = 0;
   817   002792  9485               	bcf	133,2,c	;volatile
   818   002794                     
   819                           ;main.c: 48:     TRISEbits.TRISE4 = 0;
   820   002794  9885               	bcf	133,4,c	;volatile
   821   002796                     
   822                           ;main.c: 49:     TRISCbits.TRISC7 = 0;
   823   002796  9E83               	bcf	131,7,c	;volatile
   824   002798                     
   825                           ;main.c: 50:     TRISGbits.TRISG6 = 0;
   826   002798  9C87               	bcf	135,6,c	;volatile
   827   00279A                     
   828                           ;main.c: 51:     TRISDbits.TRISD7 = 0;
   829   00279A  9E84               	bcf	132,7,c	;volatile
   830   00279C                     
   831                           ;main.c: 52:     LATDbits.LATD7 = 0;
   832   00279C  9E7C               	bcf	124,7,c	;volatile
   833   00279E                     
   834                           ;main.c: 53:     TRISHbits.TRISH3 = 0;
   835   00279E  9688               	bcf	136,3,c	;volatile
   836   0027A0                     
   837                           ;main.c: 54:     LATHbits.LATH3 = 0;
   838   0027A0  9680               	bcf	128,3,c	;volatile
   839   0027A2                     
   840                           ;main.c: 55:     TRISHbits.TRISH0 = 0;
   841   0027A2  9088               	bcf	136,0,c	;volatile
   842   0027A4                     
   843                           ;main.c: 56:     LATHbits.LATH0 = 0;
   844   0027A4  9080               	bcf	128,0,c	;volatile
   845   0027A6                     
   846                           ;main.c: 58:     TRISFbits.TRISF0 = 0;
   847   0027A6  9086               	bcf	134,0,c	;volatile
   848   0027A8                     
   849                           ;main.c: 59:     LATFbits.LATF0 = 0;
   850   0027A8  907E               	bcf	126,0,c	;volatile
   851   0027AA  EC71  F01A         	call	_color_read_Red	;wreg free
   852   0027AE  ECE9  F01A         	call	_color_read_Blue	;wreg free
   853   0027B2  EC99  F01A         	call	_color_read_Green	;wreg free
   854   0027B6  ECC1  F01A         	call	_color_read_Clear	;wreg free
   855   0027BA                     
   856                           ;main.c: 65:     motor_return = 0;
   857   0027BA  0E00               	movlw	0
   858   0027BC  0100               	movlb	0	; () banked
   859   0027BE  6FA2               	movwf	_motor_return& (0+255),b
   860   0027C0                     l4200:
   861                           
   862                           ; BSR set to: 0
   863                           ;main.c: 69:         fullSpeedAhead(&mL, &mR);
   864   0027C0  0EE6               	movlw	low main@mL
   865   0027C2  6E1C               	movwf	fullSpeedAhead@mL^0,c
   866   0027C4  0E00               	movlw	high main@mL
   867   0027C6  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   868   0027C8  0EEF               	movlw	low main@mR
   869   0027CA  6E1E               	movwf	fullSpeedAhead@mR^0,c
   870   0027CC  0E00               	movlw	high main@mR
   871   0027CE  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   872   0027D0  EC43  F018         	call	_fullSpeedAhead	;wreg free
   873   0027D4                     
   874                           ;main.c: 70:         if(ctr==1){
   875   0027D4  0448               	decf	_ctr^0,w,c
   876   0027D6  1049               	iorwf	(_ctr+1)^0,w,c
   877   0027D8  A4D8               	btfss	status,2,c
   878   0027DA  EFF1  F013         	goto	u3581
   879   0027DE  EFF3  F013         	goto	u3580
   880   0027E2                     u3581:
   881   0027E2  EFF6  F013         	goto	l327
   882   0027E6                     u3580:
   883   0027E6                     
   884                           ;main.c: 71:             LATFbits.LATF0=1;
   885   0027E6  807E               	bsf	126,0,c	;volatile
   886                           
   887                           ;main.c: 72:         }
   888   0027E8  EFF7  F013         	goto	l4206
   889   0027EC                     l327:
   890                           
   891                           ;main.c: 74:             {;main.c: 75:             LATFbits.LATF0=0;
   892   0027EC  907E               	bcf	126,0,c	;volatile
   893   0027EE                     l4206:
   894                           
   895                           ;main.c: 78:         if (interrupt_flag == 1 && interrupt_ctr>1) {
   896   0027EE  0100               	movlb	0	; () banked
   897   0027F0  05A0               	decf	_interrupt_flag& (0+255),w,b
   898   0027F2  11A1               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   899   0027F4  A4D8               	btfss	status,2,c
   900   0027F6  EFFF  F013         	goto	u3591
   901   0027FA  EF01  F014         	goto	u3590
   902   0027FE                     u3591:
   903   0027FE  EFE0  F013         	goto	l4200
   904   002802                     u3590:
   905   002802                     
   906                           ; BSR set to: 0
   907   002802  BF9F               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   908   002804  EF0D  F014         	goto	u3601
   909   002808  519F               	movf	(_interrupt_ctr+1)& (0+255),w,b
   910   00280A  E109               	bnz	u3600
   911   00280C  0E02               	movlw	2
   912   00280E  5D9E               	subwf	_interrupt_ctr& (0+255),w,b
   913   002810  A0D8               	btfss	status,0,c
   914   002812  EF0D  F014         	goto	u3601
   915   002816  EF0F  F014         	goto	u3600
   916   00281A                     u3601:
   917   00281A  EFE0  F013         	goto	l4200
   918   00281E                     u3600:
   919   00281E                     
   920                           ; BSR set to: 0
   921                           ;main.c: 83:             norm_stop(&mL, &mR);
   922   00281E  0EE6               	movlw	low main@mL
   923   002820  6E1C               	movwf	norm_stop@mL^0,c
   924   002822  0E00               	movlw	high main@mL
   925   002824  6E1D               	movwf	(norm_stop@mL+1)^0,c
   926   002826  0EEF               	movlw	low main@mR
   927   002828  6E1E               	movwf	norm_stop@mR^0,c
   928   00282A  0E00               	movlw	high main@mR
   929   00282C  6E1F               	movwf	(norm_stop@mR+1)^0,c
   930   00282E  EC6D  F01B         	call	_norm_stop	;wreg free
   931   002832                     
   932                           ;main.c: 84:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   933   002832  0E52               	movlw	82
   934   002834  6E2B               	movwf	(??_main+1)^0,c
   935   002836  0E2B               	movlw	43
   936   002838  6E2A               	movwf	??_main^0,c
   937   00283A  0E00               	movlw	0
   938   00283C                     u3717:
   939   00283C  2EE8               	decfsz	wreg,f,c
   940   00283E  D7FE               	bra	u3717
   941   002840  2E2A               	decfsz	??_main^0,f,c
   942   002842  D7FC               	bra	u3717
   943   002844  2E2B               	decfsz	(??_main+1)^0,f,c
   944   002846  D7FA               	bra	u3717
   945   002848  D000               	nop2	
   946   00284A                     
   947                           ;main.c: 85:             LATDbits.LATD7 = 0;
   948   00284A  9E7C               	bcf	124,7,c	;volatile
   949   00284C                     
   950                           ;main.c: 89:             if(motor_return == 0){
   951   00284C  0100               	movlb	0	; () banked
   952   00284E  51A2               	movf	_motor_return& (0+255),w,b
   953   002850  A4D8               	btfss	status,2,c
   954   002852  EF2D  F014         	goto	u3611
   955   002856  EF2F  F014         	goto	u3610
   956   00285A                     u3611:
   957   00285A  EF68  F014         	goto	l4226
   958   00285E                     u3610:
   959   00285E                     
   960                           ; BSR set to: 0
   961                           ;main.c: 90:                 color_read_RGBC(&RGBC);
   962   00285E  0EC6               	movlw	low main@RGBC
   963   002860  6E22               	movwf	color_read_RGBC@temp^0,c
   964   002862  0E00               	movlw	high main@RGBC
   965   002864  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   966   002866  ECB8  F018         	call	_color_read_RGBC	;wreg free
   967                           
   968                           ;main.c: 91:                 color_normalise(&RGBC);
   969   00286A  0EC6               	movlw	low main@RGBC
   970   00286C  6E22               	movwf	color_normalise@RGBC^0,c
   971   00286E  0E00               	movlw	high main@RGBC
   972   002870  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   973   002872  EC9C  F016         	call	_color_normalise	;wreg free
   974   002876                     
   975                           ;main.c: 92:                 LATHbits.LATH3 = !LATHbits.LATH3;
   976   002876  A680               	btfss	128,3,c	;volatile
   977   002878  EF40  F014         	goto	u3621
   978   00287C  EF44  F014         	goto	u3620
   979   002880                     u3621:
   980   002880  6A2A               	clrf	??_main^0,c
   981   002882  2A2A               	incf	??_main^0,f,c
   982   002884  EF45  F014         	goto	u3638
   983   002888                     u3620:
   984   002888  6A2A               	clrf	??_main^0,c
   985   00288A                     u3638:
   986   00288A  462A               	rlncf	??_main^0,f,c
   987   00288C  462A               	rlncf	??_main^0,f,c
   988   00288E  462A               	rlncf	??_main^0,f,c
   989   002890  5080               	movf	128,w,c	;volatile
   990   002892  182A               	xorwf	??_main^0,w,c
   991   002894  0BF7               	andlw	-9
   992   002896  182A               	xorwf	??_main^0,w,c
   993   002898  6E80               	movwf	128,c	;volatile
   994   00289A                     
   995                           ;main.c: 93:                 buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   996   00289A  0EC6               	movlw	low main@RGBC
   997   00289C  6E21               	movwf	motor_response@temp^0,c
   998   00289E  0E00               	movlw	high main@RGBC
   999   0028A0  6E22               	movwf	(motor_response@temp+1)^0,c
  1000   0028A2  0EE6               	movlw	low main@mL
  1001   0028A4  6E23               	movwf	motor_response@mL^0,c
  1002   0028A6  0E00               	movlw	high main@mL
  1003   0028A8  6E24               	movwf	(motor_response@mL+1)^0,c
  1004   0028AA  0EEF               	movlw	low main@mR
  1005   0028AC  6E25               	movwf	motor_response@mR^0,c
  1006   0028AE  0E00               	movlw	high main@mR
  1007   0028B0  6E26               	movwf	(motor_response@mR+1)^0,c
  1008   0028B2  EC0C  F007         	call	_motor_response	;wreg free
  1009   0028B6  6E2A               	movwf	??_main^0,c
  1010   0028B8  0EA3               	movlw	low _buggy_path
  1011   0028BA  2448               	addwf	_ctr^0,w,c
  1012   0028BC  6ED9               	movwf	fsr2l,c
  1013   0028BE  0E00               	movlw	high _buggy_path
  1014   0028C0  2049               	addwfc	(_ctr+1)^0,w,c
  1015   0028C2  6EDA               	movwf	fsr2h,c
  1016   0028C4  C02A  FFDF         	movff	??_main,indf2
  1017   0028C8                     
  1018                           ;main.c: 94:                 ctr++;
  1019   0028C8  4A48               	infsnz	_ctr^0,f,c
  1020   0028CA  2A49               	incf	(_ctr+1)^0,f,c
  1021                           
  1022                           ;main.c: 95:             } else {
  1023   0028CC  EF02  F015         	goto	l4254
  1024   0028D0                     l4226:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;main.c: 96:                 motor_retrace(&buggy_path, &mL, &mR);
  1028   0028D0  0EA3               	movlw	low _buggy_path
  1029   0028D2  6E21               	movwf	motor_retrace@buggy_path^0,c
  1030   0028D4  0E00               	movlw	high _buggy_path
  1031   0028D6  6E22               	movwf	(motor_retrace@buggy_path+1)^0,c
  1032   0028D8  0EE6               	movlw	low main@mL
  1033   0028DA  6E23               	movwf	motor_retrace@mL^0,c
  1034   0028DC  0E00               	movlw	high main@mL
  1035   0028DE  6E24               	movwf	(motor_retrace@mL+1)^0,c
  1036   0028E0  0EEF               	movlw	low main@mR
  1037   0028E2  6E25               	movwf	motor_retrace@mR^0,c
  1038   0028E4  0E00               	movlw	high main@mR
  1039   0028E6  6E26               	movwf	(motor_retrace@mR+1)^0,c
  1040   0028E8  ECB9  F00E         	call	_motor_retrace	;wreg free
  1041   0028EC                     
  1042                           ;main.c: 97:                 ctr--;
  1043   0028EC  0648               	decf	_ctr^0,f,c
  1044   0028EE  A0D8               	btfss	status,0,c
  1045   0028F0  0649               	decf	(_ctr+1)^0,f,c
  1046   0028F2                     
  1047                           ;main.c: 98:                 if (ctr-1 == 0) {
  1048   0028F2  0EFF               	movlw	255
  1049   0028F4  2448               	addwf	_ctr^0,w,c
  1050   0028F6  6E2A               	movwf	??_main^0,c
  1051   0028F8  0EFF               	movlw	255
  1052   0028FA  2049               	addwfc	(_ctr+1)^0,w,c
  1053   0028FC  6E2B               	movwf	(??_main+1)^0,c
  1054   0028FE  502A               	movf	??_main^0,w,c
  1055   002900  102B               	iorwf	(??_main+1)^0,w,c
  1056   002902  A4D8               	btfss	status,2,c
  1057   002904  EF86  F014         	goto	u3641
  1058   002908  EF88  F014         	goto	u3640
  1059   00290C                     u3641:
  1060   00290C  EF02  F015         	goto	l4254
  1061   002910                     u3640:
  1062   002910                     
  1063                           ;main.c: 99:                     for (int j = 0; j <= 40; j++) {
  1064   002910  0E00               	movlw	0
  1065   002912  0100               	movlb	0	; () banked
  1066   002914  6FC3               	movwf	(main@j+1)& (0+255),b
  1067   002916  0E00               	movlw	0
  1068   002918  6FC2               	movwf	main@j& (0+255),b
  1069   00291A                     
  1070                           ; BSR set to: 0
  1071   00291A  BFC3               	btfsc	(main@j+1)& (0+255),7,b
  1072   00291C  EF99  F014         	goto	u3651
  1073   002920  51C3               	movf	(main@j+1)& (0+255),w,b
  1074   002922  E109               	bnz	u3650
  1075   002924  0E29               	movlw	41
  1076   002926  5DC2               	subwf	main@j& (0+255),w,b
  1077   002928  A0D8               	btfss	status,0,c
  1078   00292A  EF99  F014         	goto	u3651
  1079   00292E  EF9B  F014         	goto	u3650
  1080   002932                     u3651:
  1081   002932  EF9D  F014         	goto	l4238
  1082   002936                     u3650:
  1083   002936  EFDA  F014         	goto	l4246
  1084   00293A                     l4238:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;main.c: 100:                         turnLeft(&mL, &mR);
  1088   00293A  0EE6               	movlw	low main@mL
  1089   00293C  6E1C               	movwf	turnLeft@mL^0,c
  1090   00293E  0E00               	movlw	high main@mL
  1091   002940  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1092   002942  0EEF               	movlw	low main@mR
  1093   002944  6E1E               	movwf	turnLeft@mR^0,c
  1094   002946  0E00               	movlw	high main@mR
  1095   002948  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1096   00294A  ECCE  F019         	call	_turnLeft	;wreg free
  1097   00294E                     
  1098                           ;main.c: 101:                         _delay((unsigned long)((30)*(64000000/4000.0)));
  1099   00294E  0E03               	movlw	3
  1100   002950  6E2B               	movwf	(??_main+1)^0,c
  1101   002952  0E70               	movlw	112
  1102   002954  6E2A               	movwf	??_main^0,c
  1103   002956  0E5C               	movlw	92
  1104   002958                     u3727:
  1105   002958  2EE8               	decfsz	wreg,f,c
  1106   00295A  D7FE               	bra	u3727
  1107   00295C  2E2A               	decfsz	??_main^0,f,c
  1108   00295E  D7FC               	bra	u3727
  1109   002960  2E2B               	decfsz	(??_main+1)^0,f,c
  1110   002962  D7FA               	bra	u3727
  1111   002964  D000               	nop2	
  1112   002966                     
  1113                           ;main.c: 102:                         norm_stop(&mL, &mR);
  1114   002966  0EE6               	movlw	low main@mL
  1115   002968  6E1C               	movwf	norm_stop@mL^0,c
  1116   00296A  0E00               	movlw	high main@mL
  1117   00296C  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1118   00296E  0EEF               	movlw	low main@mR
  1119   002970  6E1E               	movwf	norm_stop@mR^0,c
  1120   002972  0E00               	movlw	high main@mR
  1121   002974  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1122   002976  EC6D  F01B         	call	_norm_stop	;wreg free
  1123                           
  1124                           ;main.c: 103:                         _delay((unsigned long)((30)*(64000000/4000.0)));
  1125   00297A  0E03               	movlw	3
  1126   00297C  6E2B               	movwf	(??_main+1)^0,c
  1127   00297E  0E70               	movlw	112
  1128   002980  6E2A               	movwf	??_main^0,c
  1129   002982  0E5C               	movlw	92
  1130   002984                     u3737:
  1131   002984  2EE8               	decfsz	wreg,f,c
  1132   002986  D7FE               	bra	u3737
  1133   002988  2E2A               	decfsz	??_main^0,f,c
  1134   00298A  D7FC               	bra	u3737
  1135   00298C  2E2B               	decfsz	(??_main+1)^0,f,c
  1136   00298E  D7FA               	bra	u3737
  1137   002990  D000               	nop2	
  1138   002992                     
  1139                           ;main.c: 104:                     }
  1140   002992  0100               	movlb	0	; () banked
  1141   002994  4BC2               	infsnz	main@j& (0+255),f,b
  1142   002996  2BC3               	incf	(main@j+1)& (0+255),f,b
  1143   002998  BFC3               	btfsc	(main@j+1)& (0+255),7,b
  1144   00299A  EFD8  F014         	goto	u3661
  1145   00299E  51C3               	movf	(main@j+1)& (0+255),w,b
  1146   0029A0  E109               	bnz	u3660
  1147   0029A2  0E29               	movlw	41
  1148   0029A4  5DC2               	subwf	main@j& (0+255),w,b
  1149   0029A6  A0D8               	btfss	status,0,c
  1150   0029A8  EFD8  F014         	goto	u3661
  1151   0029AC  EFDA  F014         	goto	u3660
  1152   0029B0                     u3661:
  1153   0029B0  EF9D  F014         	goto	l4238
  1154   0029B4                     u3660:
  1155   0029B4                     l4246:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 105:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1159   0029B4  A080               	btfss	128,0,c	;volatile
  1160   0029B6  EFDF  F014         	goto	u3671
  1161   0029BA  EFE3  F014         	goto	u3670
  1162   0029BE                     u3671:
  1163   0029BE  6A2A               	clrf	??_main^0,c
  1164   0029C0  2A2A               	incf	??_main^0,f,c
  1165   0029C2  EFE4  F014         	goto	u3688
  1166   0029C6                     u3670:
  1167   0029C6  6A2A               	clrf	??_main^0,c
  1168   0029C8                     u3688:
  1169   0029C8  5080               	movf	128,w,c	;volatile
  1170   0029CA  182A               	xorwf	??_main^0,w,c
  1171   0029CC  0BFE               	andlw	-2
  1172   0029CE  182A               	xorwf	??_main^0,w,c
  1173   0029D0  6E80               	movwf	128,c	;volatile
  1174   0029D2                     
  1175                           ;main.c: 106:                     motor_return = 0;
  1176   0029D2  0E00               	movlw	0
  1177   0029D4  0100               	movlb	0	; () banked
  1178   0029D6  6FA2               	movwf	_motor_return& (0+255),b
  1179   0029D8                     
  1180                           ; BSR set to: 0
  1181                           ;main.c: 107:                     norm_stop(&mL, &mR);
  1182   0029D8  0EE6               	movlw	low main@mL
  1183   0029DA  6E1C               	movwf	norm_stop@mL^0,c
  1184   0029DC  0E00               	movlw	high main@mL
  1185   0029DE  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1186   0029E0  0EEF               	movlw	low main@mR
  1187   0029E2  6E1E               	movwf	norm_stop@mR^0,c
  1188   0029E4  0E00               	movlw	high main@mR
  1189   0029E6  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1190   0029E8  EC6D  F01B         	call	_norm_stop	;wreg free
  1191   0029EC                     
  1192                           ;main.c: 108:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1193   0029EC  0EA3               	movlw	163
  1194   0029EE  6E2B               	movwf	(??_main+1)^0,c
  1195   0029F0  0E57               	movlw	87
  1196   0029F2  6E2A               	movwf	??_main^0,c
  1197   0029F4  0E02               	movlw	2
  1198   0029F6                     u3747:
  1199   0029F6  2EE8               	decfsz	wreg,f,c
  1200   0029F8  D7FE               	bra	u3747
  1201   0029FA  2E2A               	decfsz	??_main^0,f,c
  1202   0029FC  D7FC               	bra	u3747
  1203   0029FE  2E2B               	decfsz	(??_main+1)^0,f,c
  1204   002A00  D7FA               	bra	u3747
  1205   002A02  D000               	nop2	
  1206   002A04                     l4254:
  1207                           
  1208                           ;main.c: 113:             LATHbits.LATH3 = 0;
  1209   002A04  9680               	bcf	128,3,c	;volatile
  1210   002A06                     
  1211                           ;main.c: 114:             interrupt_flag = 0;
  1212   002A06  0E00               	movlw	0
  1213   002A08  0100               	movlb	0	; () banked
  1214   002A0A  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  1215   002A0C  0E00               	movlw	0
  1216   002A0E  6FA0               	movwf	_interrupt_flag& (0+255),b
  1217   002A10  EFE0  F013         	goto	l4200
  1218   002A14  EF1B  F000         	goto	start
  1219   002A18                     __end_of_main:
  1220                           	callstack 0
  1221                           
  1222 ;; *************** function _tricolorLED *****************
  1223 ;; Defined at:
  1224 ;;		line 113 in file "color.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		None
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 6
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text1
  1253   0038A6                     __ptext1:
  1254                           	callstack 0
  1255   0038A6                     _tricolorLED:
  1256                           	callstack 24
  1257   0038A6                     
  1258                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
  1259   0038A6  9087               	bcf	135,0,c	;volatile
  1260                           
  1261                           ;color.c: 116:     LATGbits.LATG0 = 1;
  1262   0038A8  807F               	bsf	127,0,c	;volatile
  1263                           
  1264                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
  1265   0038AA  9881               	bcf	129,4,c	;volatile
  1266                           
  1267                           ;color.c: 118:     LATAbits.LATA4 = 1;
  1268   0038AC  8879               	bsf	121,4,c	;volatile
  1269                           
  1270                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
  1271   0038AE  9E86               	bcf	134,7,c	;volatile
  1272                           
  1273                           ;color.c: 120:     LATFbits.LATF7 = 1;
  1274   0038B0  8E7E               	bsf	126,7,c	;volatile
  1275                           
  1276                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
  1277   0038B2  9681               	bcf	129,3,c	;volatile
  1278                           
  1279                           ;color.c: 122:     LATAbits.LATA3 = 1;
  1280   0038B4  8679               	bsf	121,3,c	;volatile
  1281                           
  1282                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
  1283   0038B6  9E85               	bcf	133,7,c	;volatile
  1284                           
  1285                           ;color.c: 124:     LATEbits.LATE7 = 1;
  1286   0038B8  8E7D               	bsf	125,7,c	;volatile
  1287   0038BA  0012               	return		;funcret
  1288   0038BC                     __end_of_tricolorLED:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _persistence_register *****************
  1292 ;; Defined at:
  1293 ;;		line 46 in file "interrupts.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1311 ;;Total ram usage:        0 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 9
  1314 ;; This function calls:
  1315 ;;		_color_writetoaddr
  1316 ;; This function is called by:
  1317 ;;		_main
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           
  1321                           	psect	text2
  1322   0038D2                     __ptext2:
  1323                           	callstack 0
  1324   0038D2                     _persistence_register:
  1325                           	callstack 21
  1326   0038D2                     
  1327                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  1328   0038D2  0E02               	movlw	2
  1329   0038D4  6E0B               	movwf	color_writetoaddr@value^0,c
  1330   0038D6  0E0C               	movlw	12
  1331   0038D8  EC19  F01C         	call	_color_writetoaddr
  1332   0038DC  0012               	return		;funcret
  1333   0038DE                     __end_of_persistence_register:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _motor_retrace *****************
  1337 ;; Defined at:
  1338 ;;		line 239 in file "color.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  buggy_path      2   32[COMRAM] PTR unsigned char 
  1341 ;;		 -> buggy_path(15), 
  1342 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1343 ;;		 -> main@mL(9), 
  1344 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1345 ;;		 -> main@mR(9), 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  j               2   12[BANK0 ] int 
  1348 ;;  j               2   10[BANK0 ] int 
  1349 ;;  j               2    8[BANK0 ] int 
  1350 ;;  j               2    6[BANK0 ] int 
  1351 ;;  j               2    4[BANK0 ] int 
  1352 ;;  j               2    2[BANK0 ] int 
  1353 ;;  j               2    0[BANK0 ] int 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1364 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1366 ;;      Totals:         9      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1367 ;;Total ram usage:       23 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 9
  1370 ;; This function calls:
  1371 ;;		_norm_stop
  1372 ;;		_reverse
  1373 ;;		_turnLeft
  1374 ;;		_turnRight
  1375 ;; This function is called by:
  1376 ;;		_main
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text3
  1381   001D72                     __ptext3:
  1382                           	callstack 0
  1383   001D72                     _motor_retrace:
  1384                           	callstack 21
  1385   001D72                     
  1386                           ;color.c: 240:     if (buggy_path[ctr-2]==1) {
  1387   001D72  5048               	movf	_ctr^0,w,c
  1388   001D74  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1389   001D76  6E27               	movwf	??_motor_retrace^0,c
  1390   001D78  5049               	movf	(_ctr+1)^0,w,c
  1391   001D7A  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1392   001D7C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1393   001D7E  0EFE               	movlw	254
  1394   001D80  2427               	addwf	??_motor_retrace^0,w,c
  1395   001D82  6ED9               	movwf	fsr2l,c
  1396   001D84  0EFF               	movlw	255
  1397   001D86  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1398   001D88  6EDA               	movwf	fsr2h,c
  1399   001D8A  04DE               	decf	postinc2,w,c
  1400   001D8C  A4D8               	btfss	status,2,c
  1401   001D8E  EFCB  F00E         	goto	u3411
  1402   001D92  EFCD  F00E         	goto	u3410
  1403   001D96                     u3411:
  1404   001D96  EF3C  F00F         	goto	l3992
  1405   001D9A                     u3410:
  1406   001D9A                     
  1407                           ;color.c: 241:         reverse(mL, mR);
  1408   001D9A  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1409   001D9E  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1410   001DA2  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1411   001DA6  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1412   001DAA  ECC7  F017         	call	_reverse	;wreg free
  1413   001DAE                     
  1414                           ;color.c: 242:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1415   001DAE  0E21               	movlw	33
  1416   001DB0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1417   001DB2  0E78               	movlw	120
  1418   001DB4  6E27               	movwf	??_motor_retrace^0,c
  1419   001DB6  0E98               	movlw	152
  1420   001DB8                     u3757:
  1421   001DB8  2EE8               	decfsz	wreg,f,c
  1422   001DBA  D7FE               	bra	u3757
  1423   001DBC  2E27               	decfsz	??_motor_retrace^0,f,c
  1424   001DBE  D7FC               	bra	u3757
  1425   001DC0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1426   001DC2  D7FA               	bra	u3757
  1427   001DC4  D000               	nop2	
  1428   001DC6                     
  1429                           ;color.c: 243:         norm_stop(mL, mR);
  1430   001DC6  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1431   001DCA  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1432   001DCE  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1433   001DD2  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1434   001DD6  EC6D  F01B         	call	_norm_stop	;wreg free
  1435                           
  1436                           ;color.c: 244:         _delay((unsigned long)((80)*(64000000/4000.0)));
  1437   001DDA  0E07               	movlw	7
  1438   001DDC  6E28               	movwf	(??_motor_retrace+1)^0,c
  1439   001DDE  0E7F               	movlw	127
  1440   001DE0  6E27               	movwf	??_motor_retrace^0,c
  1441   001DE2  0E50               	movlw	80
  1442   001DE4                     u3767:
  1443   001DE4  2EE8               	decfsz	wreg,f,c
  1444   001DE6  D7FE               	bra	u3767
  1445   001DE8  2E27               	decfsz	??_motor_retrace^0,f,c
  1446   001DEA  D7FC               	bra	u3767
  1447   001DEC  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1448   001DEE  D7FA               	bra	u3767
  1449   001DF0                     
  1450                           ;color.c: 245:         for (int j = 0; j <= 23; j++) {
  1451   001DF0  0E00               	movlw	0
  1452   001DF2  0100               	movlb	0	; () banked
  1453   001DF4  6FB3               	movwf	(motor_retrace@j+1)& (0+255),b
  1454   001DF6  0E00               	movlw	0
  1455   001DF8  6FB2               	movwf	motor_retrace@j& (0+255),b
  1456   001DFA                     l3984:
  1457                           
  1458                           ; BSR set to: 0
  1459                           ;color.c: 246:             turnLeft(mL, mR);
  1460   001DFA  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1461   001DFE  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1462   001E02  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1463   001E06  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1464   001E0A  ECCE  F019         	call	_turnLeft	;wreg free
  1465   001E0E                     
  1466                           ;color.c: 247:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1467   001E0E  0E02               	movlw	2
  1468   001E10  6E28               	movwf	(??_motor_retrace+1)^0,c
  1469   001E12  0EF3               	movlw	243
  1470   001E14  6E27               	movwf	??_motor_retrace^0,c
  1471   001E16  0EB0               	movlw	176
  1472   001E18                     u3777:
  1473   001E18  2EE8               	decfsz	wreg,f,c
  1474   001E1A  D7FE               	bra	u3777
  1475   001E1C  2E27               	decfsz	??_motor_retrace^0,f,c
  1476   001E1E  D7FC               	bra	u3777
  1477   001E20  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1478   001E22  D7FA               	bra	u3777
  1479   001E24  D000               	nop2	
  1480   001E26                     
  1481                           ;color.c: 248:             norm_stop(mL, mR);
  1482   001E26  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1483   001E2A  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1484   001E2E  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1485   001E32  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1486   001E36  EC6D  F01B         	call	_norm_stop	;wreg free
  1487                           
  1488                           ;color.c: 249:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1489   001E3A  0E03               	movlw	3
  1490   001E3C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1491   001E3E  0E70               	movlw	112
  1492   001E40  6E27               	movwf	??_motor_retrace^0,c
  1493   001E42  0E5C               	movlw	92
  1494   001E44                     u3787:
  1495   001E44  2EE8               	decfsz	wreg,f,c
  1496   001E46  D7FE               	bra	u3787
  1497   001E48  2E27               	decfsz	??_motor_retrace^0,f,c
  1498   001E4A  D7FC               	bra	u3787
  1499   001E4C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1500   001E4E  D7FA               	bra	u3787
  1501   001E50  D000               	nop2	
  1502   001E52                     
  1503                           ;color.c: 250:         }
  1504   001E52  0100               	movlb	0	; () banked
  1505   001E54  4BB2               	infsnz	motor_retrace@j& (0+255),f,b
  1506   001E56  2BB3               	incf	(motor_retrace@j+1)& (0+255),f,b
  1507   001E58  BFB3               	btfsc	(motor_retrace@j+1)& (0+255),7,b
  1508   001E5A  EF38  F00F         	goto	u3421
  1509   001E5E  51B3               	movf	(motor_retrace@j+1)& (0+255),w,b
  1510   001E60  E109               	bnz	u3420
  1511   001E62  0E18               	movlw	24
  1512   001E64  5DB2               	subwf	motor_retrace@j& (0+255),w,b
  1513   001E66  A0D8               	btfss	status,0,c
  1514   001E68  EF38  F00F         	goto	u3421
  1515   001E6C  EF3A  F00F         	goto	u3420
  1516   001E70                     u3421:
  1517   001E70  EFFD  F00E         	goto	l3984
  1518   001E74                     u3420:
  1519   001E74  EFB0  F011         	goto	l177
  1520   001E78                     l3992:
  1521   001E78  5048               	movf	_ctr^0,w,c
  1522   001E7A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1523   001E7C  6E27               	movwf	??_motor_retrace^0,c
  1524   001E7E  5049               	movf	(_ctr+1)^0,w,c
  1525   001E80  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1526   001E82  6E28               	movwf	(??_motor_retrace+1)^0,c
  1527   001E84  0EFE               	movlw	254
  1528   001E86  2427               	addwf	??_motor_retrace^0,w,c
  1529   001E88  6ED9               	movwf	fsr2l,c
  1530   001E8A  0EFF               	movlw	255
  1531   001E8C  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1532   001E8E  6EDA               	movwf	fsr2h,c
  1533   001E90  0E02               	movlw	2
  1534   001E92  18DE               	xorwf	postinc2,w,c
  1535   001E94  A4D8               	btfss	status,2,c
  1536   001E96  EF4F  F00F         	goto	u3431
  1537   001E9A  EF51  F00F         	goto	u3430
  1538   001E9E                     u3431:
  1539   001E9E  EF95  F00F         	goto	l4008
  1540   001EA2                     u3430:
  1541   001EA2                     
  1542                           ;color.c: 253:     for (int j = 0; j <= 15; j++) {
  1543   001EA2  0E00               	movlw	0
  1544   001EA4  0100               	movlb	0	; () banked
  1545   001EA6  6FB5               	movwf	(motor_retrace@j_564+1)& (0+255),b
  1546   001EA8  0E00               	movlw	0
  1547   001EAA  6FB4               	movwf	motor_retrace@j_564& (0+255),b
  1548   001EAC                     l4000:
  1549                           
  1550                           ; BSR set to: 0
  1551                           ;color.c: 254:         turnRight(mL, mR);
  1552   001EAC  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1553   001EB0  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1554   001EB4  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1555   001EB8  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1556   001EBC  EC95  F019         	call	_turnRight	;wreg free
  1557   001EC0                     
  1558                           ;color.c: 255:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1559   001EC0  0E03               	movlw	3
  1560   001EC2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1561   001EC4  0E70               	movlw	112
  1562   001EC6  6E27               	movwf	??_motor_retrace^0,c
  1563   001EC8  0E5C               	movlw	92
  1564   001ECA                     u3797:
  1565   001ECA  2EE8               	decfsz	wreg,f,c
  1566   001ECC  D7FE               	bra	u3797
  1567   001ECE  2E27               	decfsz	??_motor_retrace^0,f,c
  1568   001ED0  D7FC               	bra	u3797
  1569   001ED2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1570   001ED4  D7FA               	bra	u3797
  1571   001ED6  D000               	nop2	
  1572   001ED8                     
  1573                           ;color.c: 256:         norm_stop(mL, mR);
  1574   001ED8  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1575   001EDC  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1576   001EE0  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1577   001EE4  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1578   001EE8  EC6D  F01B         	call	_norm_stop	;wreg free
  1579                           
  1580                           ;color.c: 257:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1581   001EEC  0E03               	movlw	3
  1582   001EEE  6E28               	movwf	(??_motor_retrace+1)^0,c
  1583   001EF0  0E70               	movlw	112
  1584   001EF2  6E27               	movwf	??_motor_retrace^0,c
  1585   001EF4  0E5C               	movlw	92
  1586   001EF6                     u3807:
  1587   001EF6  2EE8               	decfsz	wreg,f,c
  1588   001EF8  D7FE               	bra	u3807
  1589   001EFA  2E27               	decfsz	??_motor_retrace^0,f,c
  1590   001EFC  D7FC               	bra	u3807
  1591   001EFE  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1592   001F00  D7FA               	bra	u3807
  1593   001F02  D000               	nop2	
  1594   001F04                     
  1595                           ;color.c: 258:     }
  1596   001F04  0100               	movlb	0	; () banked
  1597   001F06  4BB4               	infsnz	motor_retrace@j_564& (0+255),f,b
  1598   001F08  2BB5               	incf	(motor_retrace@j_564+1)& (0+255),f,b
  1599   001F0A  BFB5               	btfsc	(motor_retrace@j_564+1)& (0+255),7,b
  1600   001F0C  EF91  F00F         	goto	u3441
  1601   001F10  51B5               	movf	(motor_retrace@j_564+1)& (0+255),w,b
  1602   001F12  E109               	bnz	u3440
  1603   001F14  0E10               	movlw	16
  1604   001F16  5DB4               	subwf	motor_retrace@j_564& (0+255),w,b
  1605   001F18  A0D8               	btfss	status,0,c
  1606   001F1A  EF91  F00F         	goto	u3441
  1607   001F1E  EF93  F00F         	goto	u3440
  1608   001F22                     u3441:
  1609   001F22  EF56  F00F         	goto	l4000
  1610   001F26                     u3440:
  1611   001F26  EFB0  F011         	goto	l177
  1612   001F2A                     l4008:
  1613   001F2A  5048               	movf	_ctr^0,w,c
  1614   001F2C  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1615   001F2E  6E27               	movwf	??_motor_retrace^0,c
  1616   001F30  5049               	movf	(_ctr+1)^0,w,c
  1617   001F32  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1618   001F34  6E28               	movwf	(??_motor_retrace+1)^0,c
  1619   001F36  0EFE               	movlw	254
  1620   001F38  2427               	addwf	??_motor_retrace^0,w,c
  1621   001F3A  6ED9               	movwf	fsr2l,c
  1622   001F3C  0EFF               	movlw	255
  1623   001F3E  2028               	addwfc	(??_motor_retrace+1)^0,w,c
  1624   001F40  6EDA               	movwf	fsr2h,c
  1625   001F42  0E03               	movlw	3
  1626   001F44  18DE               	xorwf	postinc2,w,c
  1627   001F46  A4D8               	btfss	status,2,c
  1628   001F48  EFA8  F00F         	goto	u3451
  1629   001F4C  EFAA  F00F         	goto	u3450
  1630   001F50                     u3451:
  1631   001F50  EF19  F010         	goto	l4030
  1632   001F54                     u3450:
  1633   001F54                     
  1634                           ;color.c: 261:         reverse(mL,mR);
  1635   001F54  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1636   001F58  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1637   001F5C  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1638   001F60  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1639   001F64  ECC7  F017         	call	_reverse	;wreg free
  1640   001F68                     
  1641                           ;color.c: 262:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1642   001F68  0E21               	movlw	33
  1643   001F6A  6E28               	movwf	(??_motor_retrace+1)^0,c
  1644   001F6C  0E78               	movlw	120
  1645   001F6E  6E27               	movwf	??_motor_retrace^0,c
  1646   001F70  0E98               	movlw	152
  1647   001F72                     u3817:
  1648   001F72  2EE8               	decfsz	wreg,f,c
  1649   001F74  D7FE               	bra	u3817
  1650   001F76  2E27               	decfsz	??_motor_retrace^0,f,c
  1651   001F78  D7FC               	bra	u3817
  1652   001F7A  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1653   001F7C  D7FA               	bra	u3817
  1654   001F7E  D000               	nop2	
  1655   001F80                     
  1656                           ;color.c: 263:         norm_stop(mL, mR);
  1657   001F80  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1658   001F84  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1659   001F88  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1660   001F8C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1661   001F90  EC6D  F01B         	call	_norm_stop	;wreg free
  1662                           
  1663                           ;color.c: 264:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1664   001F94  0E07               	movlw	7
  1665   001F96  6E28               	movwf	(??_motor_retrace+1)^0,c
  1666   001F98  0E7F               	movlw	127
  1667   001F9A  6E27               	movwf	??_motor_retrace^0,c
  1668   001F9C  0E50               	movlw	80
  1669   001F9E                     u3827:
  1670   001F9E  2EE8               	decfsz	wreg,f,c
  1671   001FA0  D7FE               	bra	u3827
  1672   001FA2  2E27               	decfsz	??_motor_retrace^0,f,c
  1673   001FA4  D7FC               	bra	u3827
  1674   001FA6  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1675   001FA8  D7FA               	bra	u3827
  1676   001FAA                     
  1677                           ;color.c: 265:         for (int j = 0; j <= 45; j++) {
  1678   001FAA  0E00               	movlw	0
  1679   001FAC  0100               	movlb	0	; () banked
  1680   001FAE  6FB7               	movwf	(motor_retrace@j_565+1)& (0+255),b
  1681   001FB0  0E00               	movlw	0
  1682   001FB2  6FB6               	movwf	motor_retrace@j_565& (0+255),b
  1683   001FB4                     l4022:
  1684                           
  1685                           ; BSR set to: 0
  1686                           ;color.c: 266:             turnLeft(mL, mR);
  1687   001FB4  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1688   001FB8  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1689   001FBC  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1690   001FC0  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1691   001FC4  ECCE  F019         	call	_turnLeft	;wreg free
  1692   001FC8                     
  1693                           ;color.c: 267:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1694   001FC8  0E02               	movlw	2
  1695   001FCA  6E28               	movwf	(??_motor_retrace+1)^0,c
  1696   001FCC  0EF3               	movlw	243
  1697   001FCE  6E27               	movwf	??_motor_retrace^0,c
  1698   001FD0  0EB0               	movlw	176
  1699   001FD2                     u3837:
  1700   001FD2  2EE8               	decfsz	wreg,f,c
  1701   001FD4  D7FE               	bra	u3837
  1702   001FD6  2E27               	decfsz	??_motor_retrace^0,f,c
  1703   001FD8  D7FC               	bra	u3837
  1704   001FDA  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1705   001FDC  D7FA               	bra	u3837
  1706   001FDE  D000               	nop2	
  1707   001FE0                     
  1708                           ;color.c: 268:             norm_stop(mL, mR);
  1709   001FE0  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1710   001FE4  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1711   001FE8  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1712   001FEC  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1713   001FF0  EC6D  F01B         	call	_norm_stop	;wreg free
  1714                           
  1715                           ;color.c: 269:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1716   001FF4  0E03               	movlw	3
  1717   001FF6  6E28               	movwf	(??_motor_retrace+1)^0,c
  1718   001FF8  0E70               	movlw	112
  1719   001FFA  6E27               	movwf	??_motor_retrace^0,c
  1720   001FFC  0E5C               	movlw	92
  1721   001FFE                     u3847:
  1722   001FFE  2EE8               	decfsz	wreg,f,c
  1723   002000  D7FE               	bra	u3847
  1724   002002  2E27               	decfsz	??_motor_retrace^0,f,c
  1725   002004  D7FC               	bra	u3847
  1726   002006  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1727   002008  D7FA               	bra	u3847
  1728   00200A  D000               	nop2	
  1729   00200C                     
  1730                           ;color.c: 270:         }
  1731   00200C  0100               	movlb	0	; () banked
  1732   00200E  4BB6               	infsnz	motor_retrace@j_565& (0+255),f,b
  1733   002010  2BB7               	incf	(motor_retrace@j_565+1)& (0+255),f,b
  1734   002012  BFB7               	btfsc	(motor_retrace@j_565+1)& (0+255),7,b
  1735   002014  EF15  F010         	goto	u3461
  1736   002018  51B7               	movf	(motor_retrace@j_565+1)& (0+255),w,b
  1737   00201A  E109               	bnz	u3460
  1738   00201C  0E2E               	movlw	46
  1739   00201E  5DB6               	subwf	motor_retrace@j_565& (0+255),w,b
  1740   002020  A0D8               	btfss	status,0,c
  1741   002022  EF15  F010         	goto	u3461
  1742   002026  EF17  F010         	goto	u3460
  1743   00202A                     u3461:
  1744   00202A  EFDA  F00F         	goto	l4022
  1745   00202E                     u3460:
  1746   00202E  EFB0  F011         	goto	l177
  1747   002032                     l4030:
  1748   002032  5048               	movf	_ctr^0,w,c
  1749   002034  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1750   002036  6ED9               	movwf	fsr2l,c
  1751   002038  5049               	movf	(_ctr+1)^0,w,c
  1752   00203A  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1753   00203C  6EDA               	movwf	fsr2h,c
  1754   00203E  0E04               	movlw	4
  1755   002040  18DE               	xorwf	postinc2,w,c
  1756   002042  A4D8               	btfss	status,2,c
  1757   002044  EF26  F010         	goto	u3471
  1758   002048  EF28  F010         	goto	u3470
  1759   00204C                     u3471:
  1760   00204C  EF93  F010         	goto	l4052
  1761   002050                     u3470:
  1762   002050                     
  1763                           ;color.c: 274:      reverse(mL, mR);
  1764   002050  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1765   002054  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1766   002058  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1767   00205C  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1768   002060  ECC7  F017         	call	_reverse	;wreg free
  1769   002064                     
  1770                           ;color.c: 275:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1771   002064  0ED0               	movlw	208
  1772   002066  6E27               	movwf	??_motor_retrace^0,c
  1773   002068  0ECA               	movlw	202
  1774   00206A                     u3857:
  1775   00206A  2EE8               	decfsz	wreg,f,c
  1776   00206C  D7FE               	bra	u3857
  1777   00206E  2E27               	decfsz	??_motor_retrace^0,f,c
  1778   002070  D7FC               	bra	u3857
  1779   002072                     
  1780                           ;color.c: 276:      norm_stop(mL, mR);
  1781   002072  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1782   002076  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1783   00207A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1784   00207E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1785   002082  EC6D  F01B         	call	_norm_stop	;wreg free
  1786                           
  1787                           ;color.c: 277:      _delay((unsigned long)((100)*(64000000/4000.0)));
  1788   002086  0E09               	movlw	9
  1789   002088  6E28               	movwf	(??_motor_retrace+1)^0,c
  1790   00208A  0E1E               	movlw	30
  1791   00208C  6E27               	movwf	??_motor_retrace^0,c
  1792   00208E  0EE4               	movlw	228
  1793   002090                     u3867:
  1794   002090  2EE8               	decfsz	wreg,f,c
  1795   002092  D7FE               	bra	u3867
  1796   002094  2E27               	decfsz	??_motor_retrace^0,f,c
  1797   002096  D7FC               	bra	u3867
  1798   002098  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1799   00209A  D7FA               	bra	u3867
  1800   00209C  D000               	nop2	
  1801   00209E                     
  1802                           ;color.c: 278:      for (int j = 0; j <= 16; j++) {
  1803   00209E  0E00               	movlw	0
  1804   0020A0  0100               	movlb	0	; () banked
  1805   0020A2  6FB9               	movwf	(motor_retrace@j_566+1)& (0+255),b
  1806   0020A4  0E00               	movlw	0
  1807   0020A6  6FB8               	movwf	motor_retrace@j_566& (0+255),b
  1808   0020A8                     l4044:
  1809                           
  1810                           ; BSR set to: 0
  1811                           ;color.c: 279:          turnLeft(mL, mR);
  1812   0020A8  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1813   0020AC  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1814   0020B0  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1815   0020B4  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1816   0020B8  ECCE  F019         	call	_turnLeft	;wreg free
  1817   0020BC                     
  1818                           ;color.c: 280:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1819   0020BC  0E03               	movlw	3
  1820   0020BE  6E28               	movwf	(??_motor_retrace+1)^0,c
  1821   0020C0  0E70               	movlw	112
  1822   0020C2  6E27               	movwf	??_motor_retrace^0,c
  1823   0020C4  0E5C               	movlw	92
  1824   0020C6                     u3877:
  1825   0020C6  2EE8               	decfsz	wreg,f,c
  1826   0020C8  D7FE               	bra	u3877
  1827   0020CA  2E27               	decfsz	??_motor_retrace^0,f,c
  1828   0020CC  D7FC               	bra	u3877
  1829   0020CE  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1830   0020D0  D7FA               	bra	u3877
  1831   0020D2  D000               	nop2	
  1832   0020D4                     
  1833                           ;color.c: 281:          norm_stop(mL, mR);
  1834   0020D4  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1835   0020D8  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1836   0020DC  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1837   0020E0  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1838   0020E4  EC6D  F01B         	call	_norm_stop	;wreg free
  1839                           
  1840                           ;color.c: 282:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1841   0020E8  0E03               	movlw	3
  1842   0020EA  6E28               	movwf	(??_motor_retrace+1)^0,c
  1843   0020EC  0E70               	movlw	112
  1844   0020EE  6E27               	movwf	??_motor_retrace^0,c
  1845   0020F0  0E5C               	movlw	92
  1846   0020F2                     u3887:
  1847   0020F2  2EE8               	decfsz	wreg,f,c
  1848   0020F4  D7FE               	bra	u3887
  1849   0020F6  2E27               	decfsz	??_motor_retrace^0,f,c
  1850   0020F8  D7FC               	bra	u3887
  1851   0020FA  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1852   0020FC  D7FA               	bra	u3887
  1853   0020FE  D000               	nop2	
  1854   002100                     
  1855                           ;color.c: 283:      }
  1856   002100  0100               	movlb	0	; () banked
  1857   002102  4BB8               	infsnz	motor_retrace@j_566& (0+255),f,b
  1858   002104  2BB9               	incf	(motor_retrace@j_566+1)& (0+255),f,b
  1859   002106  BFB9               	btfsc	(motor_retrace@j_566+1)& (0+255),7,b
  1860   002108  EF8F  F010         	goto	u3481
  1861   00210C  51B9               	movf	(motor_retrace@j_566+1)& (0+255),w,b
  1862   00210E  E109               	bnz	u3480
  1863   002110  0E11               	movlw	17
  1864   002112  5DB8               	subwf	motor_retrace@j_566& (0+255),w,b
  1865   002114  A0D8               	btfss	status,0,c
  1866   002116  EF8F  F010         	goto	u3481
  1867   00211A  EF91  F010         	goto	u3480
  1868   00211E                     u3481:
  1869   00211E  EF54  F010         	goto	l4044
  1870   002122                     u3480:
  1871   002122  EFB0  F011         	goto	l177
  1872   002126                     l4052:
  1873   002126  5048               	movf	_ctr^0,w,c
  1874   002128  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1875   00212A  6ED9               	movwf	fsr2l,c
  1876   00212C  5049               	movf	(_ctr+1)^0,w,c
  1877   00212E  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1878   002130  6EDA               	movwf	fsr2h,c
  1879   002132  0E05               	movlw	5
  1880   002134  18DE               	xorwf	postinc2,w,c
  1881   002136  A4D8               	btfss	status,2,c
  1882   002138  EFA0  F010         	goto	u3491
  1883   00213C  EFA2  F010         	goto	u3490
  1884   002140                     u3491:
  1885   002140  EF0C  F011         	goto	l4074
  1886   002144                     u3490:
  1887   002144                     
  1888                           ;color.c: 286:      reverse(mL, mR);
  1889   002144  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1890   002148  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1891   00214C  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1892   002150  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1893   002154  ECC7  F017         	call	_reverse	;wreg free
  1894   002158                     
  1895                           ;color.c: 287:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1896   002158  0ED0               	movlw	208
  1897   00215A  6E27               	movwf	??_motor_retrace^0,c
  1898   00215C  0ECA               	movlw	202
  1899   00215E                     u3897:
  1900   00215E  2EE8               	decfsz	wreg,f,c
  1901   002160  D7FE               	bra	u3897
  1902   002162  2E27               	decfsz	??_motor_retrace^0,f,c
  1903   002164  D7FC               	bra	u3897
  1904   002166                     
  1905                           ;color.c: 288:      norm_stop(mL, mR);
  1906   002166  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1907   00216A  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1908   00216E  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1909   002172  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1910   002176  EC6D  F01B         	call	_norm_stop	;wreg free
  1911                           
  1912                           ;color.c: 289:      _delay((unsigned long)((300)*(64000000/4000.0)));
  1913   00217A  0E19               	movlw	25
  1914   00217C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1915   00217E  0E5A               	movlw	90
  1916   002180  6E27               	movwf	??_motor_retrace^0,c
  1917   002182  0EB2               	movlw	178
  1918   002184                     u3907:
  1919   002184  2EE8               	decfsz	wreg,f,c
  1920   002186  D7FE               	bra	u3907
  1921   002188  2E27               	decfsz	??_motor_retrace^0,f,c
  1922   00218A  D7FC               	bra	u3907
  1923   00218C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1924   00218E  D7FA               	bra	u3907
  1925   002190                     
  1926                           ;color.c: 290:      for (int j = 0; j <= 12; j++) {
  1927   002190  0E00               	movlw	0
  1928   002192  0100               	movlb	0	; () banked
  1929   002194  6FBB               	movwf	(motor_retrace@j_567+1)& (0+255),b
  1930   002196  0E00               	movlw	0
  1931   002198  6FBA               	movwf	motor_retrace@j_567& (0+255),b
  1932   00219A                     l4066:
  1933                           
  1934                           ; BSR set to: 0
  1935                           ;color.c: 291:          turnRight(mL, mR);
  1936   00219A  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1937   00219E  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1938   0021A2  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1939   0021A6  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1940   0021AA  EC95  F019         	call	_turnRight	;wreg free
  1941   0021AE                     
  1942                           ;color.c: 292:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1943   0021AE  0E03               	movlw	3
  1944   0021B0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1945   0021B2  0E70               	movlw	112
  1946   0021B4  6E27               	movwf	??_motor_retrace^0,c
  1947   0021B6  0E5C               	movlw	92
  1948   0021B8                     u3917:
  1949   0021B8  2EE8               	decfsz	wreg,f,c
  1950   0021BA  D7FE               	bra	u3917
  1951   0021BC  2E27               	decfsz	??_motor_retrace^0,f,c
  1952   0021BE  D7FC               	bra	u3917
  1953   0021C0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1954   0021C2  D7FA               	bra	u3917
  1955   0021C4  D000               	nop2	
  1956   0021C6                     
  1957                           ;color.c: 293:          norm_stop(mL, mR);
  1958   0021C6  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1959   0021CA  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1960   0021CE  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1961   0021D2  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1962   0021D6  EC6D  F01B         	call	_norm_stop	;wreg free
  1963                           
  1964                           ;color.c: 294:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1965   0021DA  0E03               	movlw	3
  1966   0021DC  6E28               	movwf	(??_motor_retrace+1)^0,c
  1967   0021DE  0E70               	movlw	112
  1968   0021E0  6E27               	movwf	??_motor_retrace^0,c
  1969   0021E2  0E5C               	movlw	92
  1970   0021E4                     u3927:
  1971   0021E4  2EE8               	decfsz	wreg,f,c
  1972   0021E6  D7FE               	bra	u3927
  1973   0021E8  2E27               	decfsz	??_motor_retrace^0,f,c
  1974   0021EA  D7FC               	bra	u3927
  1975   0021EC  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1976   0021EE  D7FA               	bra	u3927
  1977   0021F0  D000               	nop2	
  1978   0021F2                     
  1979                           ;color.c: 295:      }
  1980   0021F2  0100               	movlb	0	; () banked
  1981   0021F4  4BBA               	infsnz	motor_retrace@j_567& (0+255),f,b
  1982   0021F6  2BBB               	incf	(motor_retrace@j_567+1)& (0+255),f,b
  1983   0021F8  BFBB               	btfsc	(motor_retrace@j_567+1)& (0+255),7,b
  1984   0021FA  EF08  F011         	goto	u3501
  1985   0021FE  51BB               	movf	(motor_retrace@j_567+1)& (0+255),w,b
  1986   002200  E109               	bnz	u3500
  1987   002202  0E0D               	movlw	13
  1988   002204  5DBA               	subwf	motor_retrace@j_567& (0+255),w,b
  1989   002206  A0D8               	btfss	status,0,c
  1990   002208  EF08  F011         	goto	u3501
  1991   00220C  EF0A  F011         	goto	u3500
  1992   002210                     u3501:
  1993   002210  EFCD  F010         	goto	l4066
  1994   002214                     u3500:
  1995   002214  EFB0  F011         	goto	l177
  1996   002218                     l4074:
  1997   002218  5048               	movf	_ctr^0,w,c
  1998   00221A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1999   00221C  6ED9               	movwf	fsr2l,c
  2000   00221E  5049               	movf	(_ctr+1)^0,w,c
  2001   002220  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  2002   002222  6EDA               	movwf	fsr2h,c
  2003   002224  0E06               	movlw	6
  2004   002226  18DE               	xorwf	postinc2,w,c
  2005   002228  A4D8               	btfss	status,2,c
  2006   00222A  EF19  F011         	goto	u3511
  2007   00222E  EF1B  F011         	goto	u3510
  2008   002232                     u3511:
  2009   002232  EF5F  F011         	goto	l4090
  2010   002236                     u3510:
  2011   002236                     
  2012                           ;color.c: 298:      for (int j = 0; j <= 23; j++) {
  2013   002236  0E00               	movlw	0
  2014   002238  0100               	movlb	0	; () banked
  2015   00223A  6FBD               	movwf	(motor_retrace@j_568+1)& (0+255),b
  2016   00223C  0E00               	movlw	0
  2017   00223E  6FBC               	movwf	motor_retrace@j_568& (0+255),b
  2018   002240                     l4082:
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;color.c: 299:          turnRight(mL, mR);
  2022   002240  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  2023   002244  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  2024   002248  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  2025   00224C  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  2026   002250  EC95  F019         	call	_turnRight	;wreg free
  2027   002254                     
  2028                           ;color.c: 300:          _delay((unsigned long)((30)*(64000000/4000.0)));
  2029   002254  0E03               	movlw	3
  2030   002256  6E28               	movwf	(??_motor_retrace+1)^0,c
  2031   002258  0E70               	movlw	112
  2032   00225A  6E27               	movwf	??_motor_retrace^0,c
  2033   00225C  0E5C               	movlw	92
  2034   00225E                     u3937:
  2035   00225E  2EE8               	decfsz	wreg,f,c
  2036   002260  D7FE               	bra	u3937
  2037   002262  2E27               	decfsz	??_motor_retrace^0,f,c
  2038   002264  D7FC               	bra	u3937
  2039   002266  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  2040   002268  D7FA               	bra	u3937
  2041   00226A  D000               	nop2	
  2042   00226C                     
  2043                           ;color.c: 301:          norm_stop(mL, mR);
  2044   00226C  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  2045   002270  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  2046   002274  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  2047   002278  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  2048   00227C  EC6D  F01B         	call	_norm_stop	;wreg free
  2049                           
  2050                           ;color.c: 302:          _delay((unsigned long)((30)*(64000000/4000.0)));
  2051   002280  0E03               	movlw	3
  2052   002282  6E28               	movwf	(??_motor_retrace+1)^0,c
  2053   002284  0E70               	movlw	112
  2054   002286  6E27               	movwf	??_motor_retrace^0,c
  2055   002288  0E5C               	movlw	92
  2056   00228A                     u3947:
  2057   00228A  2EE8               	decfsz	wreg,f,c
  2058   00228C  D7FE               	bra	u3947
  2059   00228E  2E27               	decfsz	??_motor_retrace^0,f,c
  2060   002290  D7FC               	bra	u3947
  2061   002292  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  2062   002294  D7FA               	bra	u3947
  2063   002296  D000               	nop2	
  2064   002298                     
  2065                           ;color.c: 303:      }
  2066   002298  0100               	movlb	0	; () banked
  2067   00229A  4BBC               	infsnz	motor_retrace@j_568& (0+255),f,b
  2068   00229C  2BBD               	incf	(motor_retrace@j_568+1)& (0+255),f,b
  2069   00229E  BFBD               	btfsc	(motor_retrace@j_568+1)& (0+255),7,b
  2070   0022A0  EF5B  F011         	goto	u3521
  2071   0022A4  51BD               	movf	(motor_retrace@j_568+1)& (0+255),w,b
  2072   0022A6  E109               	bnz	u3520
  2073   0022A8  0E18               	movlw	24
  2074   0022AA  5DBC               	subwf	motor_retrace@j_568& (0+255),w,b
  2075   0022AC  A0D8               	btfss	status,0,c
  2076   0022AE  EF5B  F011         	goto	u3521
  2077   0022B2  EF5D  F011         	goto	u3520
  2078   0022B6                     u3521:
  2079   0022B6  EF20  F011         	goto	l4082
  2080   0022BA                     u3520:
  2081   0022BA  EFB0  F011         	goto	l177
  2082   0022BE                     l4090:
  2083   0022BE  5048               	movf	_ctr^0,w,c
  2084   0022C0  2421               	addwf	motor_retrace@buggy_path^0,w,c
  2085   0022C2  6ED9               	movwf	fsr2l,c
  2086   0022C4  5049               	movf	(_ctr+1)^0,w,c
  2087   0022C6  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  2088   0022C8  6EDA               	movwf	fsr2h,c
  2089   0022CA  0E07               	movlw	7
  2090   0022CC  18DE               	xorwf	postinc2,w,c
  2091   0022CE  A4D8               	btfss	status,2,c
  2092   0022D0  EF6C  F011         	goto	u3531
  2093   0022D4  EF6E  F011         	goto	u3530
  2094   0022D8                     u3531:
  2095   0022D8  EFB0  F011         	goto	l177
  2096   0022DC                     u3530:
  2097   0022DC                     
  2098                           ;color.c: 306:          for (int j = 0; j <= 20; j++) {
  2099   0022DC  0E00               	movlw	0
  2100   0022DE  0100               	movlb	0	; () banked
  2101   0022E0  6FBF               	movwf	(motor_retrace@j_569+1)& (0+255),b
  2102   0022E2  0E00               	movlw	0
  2103   0022E4  6FBE               	movwf	motor_retrace@j_569& (0+255),b
  2104   0022E6                     l4098:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;color.c: 307:          turnRight(mL, mR);
  2108   0022E6  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  2109   0022EA  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  2110   0022EE  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  2111   0022F2  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  2112   0022F6  EC95  F019         	call	_turnRight	;wreg free
  2113   0022FA                     
  2114                           ;color.c: 308:          _delay((unsigned long)((30)*(64000000/4000.0)));
  2115   0022FA  0E03               	movlw	3
  2116   0022FC  6E28               	movwf	(??_motor_retrace+1)^0,c
  2117   0022FE  0E70               	movlw	112
  2118   002300  6E27               	movwf	??_motor_retrace^0,c
  2119   002302  0E5C               	movlw	92
  2120   002304                     u3957:
  2121   002304  2EE8               	decfsz	wreg,f,c
  2122   002306  D7FE               	bra	u3957
  2123   002308  2E27               	decfsz	??_motor_retrace^0,f,c
  2124   00230A  D7FC               	bra	u3957
  2125   00230C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  2126   00230E  D7FA               	bra	u3957
  2127   002310  D000               	nop2	
  2128   002312                     
  2129                           ;color.c: 309:          norm_stop(mL, mR);
  2130   002312  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  2131   002316  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  2132   00231A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  2133   00231E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  2134   002322  EC6D  F01B         	call	_norm_stop	;wreg free
  2135                           
  2136                           ;color.c: 310:          _delay((unsigned long)((30)*(64000000/4000.0)));
  2137   002326  0E03               	movlw	3
  2138   002328  6E28               	movwf	(??_motor_retrace+1)^0,c
  2139   00232A  0E70               	movlw	112
  2140   00232C  6E27               	movwf	??_motor_retrace^0,c
  2141   00232E  0E5C               	movlw	92
  2142   002330                     u3967:
  2143   002330  2EE8               	decfsz	wreg,f,c
  2144   002332  D7FE               	bra	u3967
  2145   002334  2E27               	decfsz	??_motor_retrace^0,f,c
  2146   002336  D7FC               	bra	u3967
  2147   002338  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  2148   00233A  D7FA               	bra	u3967
  2149   00233C  D000               	nop2	
  2150   00233E                     
  2151                           ;color.c: 311:         }
  2152   00233E  0100               	movlb	0	; () banked
  2153   002340  4BBE               	infsnz	motor_retrace@j_569& (0+255),f,b
  2154   002342  2BBF               	incf	(motor_retrace@j_569+1)& (0+255),f,b
  2155   002344  BFBF               	btfsc	(motor_retrace@j_569+1)& (0+255),7,b
  2156   002346  EFAE  F011         	goto	u3541
  2157   00234A  51BF               	movf	(motor_retrace@j_569+1)& (0+255),w,b
  2158   00234C  E109               	bnz	u3540
  2159   00234E  0E15               	movlw	21
  2160   002350  5DBE               	subwf	motor_retrace@j_569& (0+255),w,b
  2161   002352  A0D8               	btfss	status,0,c
  2162   002354  EFAE  F011         	goto	u3541
  2163   002358  EFB0  F011         	goto	u3540
  2164   00235C                     u3541:
  2165   00235C  EF73  F011         	goto	l4098
  2166   002360                     u3540:
  2167   002360                     l177:
  2168   002360  0012               	return		;funcret
  2169   002362                     __end_of_motor_retrace:
  2170                           	callstack 0
  2171                           
  2172 ;; *************** function _motor_response *****************
  2173 ;; Defined at:
  2174 ;;		line 127 in file "color.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;  temp            2   32[COMRAM] PTR struct RGBC_val
  2177 ;;		 -> main@RGBC(32), 
  2178 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  2179 ;;		 -> main@mL(9), 
  2180 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  2181 ;;		 -> main@mR(9), 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  j               2   14[BANK0 ] int 
  2184 ;;  j               2   12[BANK0 ] int 
  2185 ;;  j               2   10[BANK0 ] int 
  2186 ;;  j               2    8[BANK0 ] int 
  2187 ;;  j               2    6[BANK0 ] int 
  2188 ;;  j               2    4[BANK0 ] int 
  2189 ;;  j               2    2[BANK0 ] int 
  2190 ;;  j               2    0[BANK0 ] int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2200 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Totals:         8      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;Total ram usage:       24 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 9
  2207 ;; This function calls:
  2208 ;;		___flge
  2209 ;;		_norm_stop
  2210 ;;		_reverse
  2211 ;;		_turnLeft
  2212 ;;		_turnRight
  2213 ;; This function is called by:
  2214 ;;		_main
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text4
  2219   000E18                     __ptext4:
  2220                           	callstack 0
  2221   000E18                     _motor_response:
  2222                           	callstack 21
  2223   000E18                     
  2224                           ;color.c: 129:     if (temp->norm_G >8) {
  2225   000E18  0E00               	movlw	0
  2226   000E1A  6E09               	movwf	___flge@ff1^0,c
  2227   000E1C  0E00               	movlw	0
  2228   000E1E  6E0A               	movwf	(___flge@ff1+1)^0,c
  2229   000E20  0E00               	movlw	0
  2230   000E22  6E0B               	movwf	(___flge@ff1+2)^0,c
  2231   000E24  0E41               	movlw	65
  2232   000E26  6E0C               	movwf	(___flge@ff1+3)^0,c
  2233   000E28  EE20 F014          	lfsr	2,20
  2234   000E2C  5021               	movf	motor_response@temp^0,w,c
  2235   000E2E  26D9               	addwf	fsr2l,f,c
  2236   000E30  5022               	movf	(motor_response@temp+1)^0,w,c
  2237   000E32  22DA               	addwfc	fsr2h,f,c
  2238   000E34  CFDE F00D          	movff	postinc2,___flge@ff2
  2239   000E38  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2240   000E3C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2241   000E40  CFDE F010          	movff	postinc2,___flge@ff2+3
  2242   000E44  EC45  F017         	call	___flge	;wreg free
  2243   000E48  B0D8               	btfsc	status,0,c
  2244   000E4A  EF29  F007         	goto	u2911
  2245   000E4E  EF2B  F007         	goto	u2910
  2246   000E52                     u2911:
  2247   000E52  EF9B  F007         	goto	l3732
  2248   000E56                     u2910:
  2249   000E56                     
  2250                           ;color.c: 130:         reverse(mL,mR);
  2251   000E56  C023  F01C         	movff	motor_response@mL,reverse@mL
  2252   000E5A  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2253   000E5E  C025  F01E         	movff	motor_response@mR,reverse@mR
  2254   000E62  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2255   000E66  ECC7  F017         	call	_reverse	;wreg free
  2256   000E6A                     
  2257                           ;color.c: 131:         _delay((unsigned long)((400)*(64000000/4000.0)));
  2258   000E6A  0E21               	movlw	33
  2259   000E6C  6E28               	movwf	(??_motor_response+1)^0,c
  2260   000E6E  0E78               	movlw	120
  2261   000E70  6E27               	movwf	??_motor_response^0,c
  2262   000E72  0E98               	movlw	152
  2263   000E74                     u3977:
  2264   000E74  2EE8               	decfsz	wreg,f,c
  2265   000E76  D7FE               	bra	u3977
  2266   000E78  2E27               	decfsz	??_motor_response^0,f,c
  2267   000E7A  D7FC               	bra	u3977
  2268   000E7C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2269   000E7E  D7FA               	bra	u3977
  2270   000E80  D000               	nop2	
  2271   000E82                     
  2272                           ;color.c: 132:         norm_stop(mL, mR);
  2273   000E82  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2274   000E86  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2275   000E8A  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2276   000E8E  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2277   000E92  EC6D  F01B         	call	_norm_stop	;wreg free
  2278                           
  2279                           ;color.c: 133:             _delay((unsigned long)((80)*(64000000/4000.0)));
  2280   000E96  0E07               	movlw	7
  2281   000E98  6E28               	movwf	(??_motor_response+1)^0,c
  2282   000E9A  0E7F               	movlw	127
  2283   000E9C  6E27               	movwf	??_motor_response^0,c
  2284   000E9E  0E50               	movlw	80
  2285   000EA0                     u3987:
  2286   000EA0  2EE8               	decfsz	wreg,f,c
  2287   000EA2  D7FE               	bra	u3987
  2288   000EA4  2E27               	decfsz	??_motor_response^0,f,c
  2289   000EA6  D7FC               	bra	u3987
  2290   000EA8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2291   000EAA  D7FA               	bra	u3987
  2292   000EAC                     
  2293                           ;color.c: 134:         for (int j = 0; j <= 23; j++) {
  2294   000EAC  0E00               	movlw	0
  2295   000EAE  0100               	movlb	0	; () banked
  2296   000EB0  6FB3               	movwf	(motor_response@j+1)& (0+255),b
  2297   000EB2  0E00               	movlw	0
  2298   000EB4  6FB2               	movwf	motor_response@j& (0+255),b
  2299   000EB6                     l3718:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ;color.c: 135:             turnRight(mL, mR);
  2303   000EB6  C023  F01C         	movff	motor_response@mL,turnRight@mL
  2304   000EBA  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2305   000EBE  C025  F01E         	movff	motor_response@mR,turnRight@mR
  2306   000EC2  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2307   000EC6  EC95  F019         	call	_turnRight	;wreg free
  2308   000ECA                     
  2309                           ;color.c: 136:             _delay((unsigned long)((24)*(64000000/4000.0)));
  2310   000ECA  0E02               	movlw	2
  2311   000ECC  6E28               	movwf	(??_motor_response+1)^0,c
  2312   000ECE  0EF3               	movlw	243
  2313   000ED0  6E27               	movwf	??_motor_response^0,c
  2314   000ED2  0EB0               	movlw	176
  2315   000ED4                     u3997:
  2316   000ED4  2EE8               	decfsz	wreg,f,c
  2317   000ED6  D7FE               	bra	u3997
  2318   000ED8  2E27               	decfsz	??_motor_response^0,f,c
  2319   000EDA  D7FC               	bra	u3997
  2320   000EDC  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2321   000EDE  D7FA               	bra	u3997
  2322   000EE0  D000               	nop2	
  2323   000EE2                     
  2324                           ;color.c: 137:             norm_stop(mL, mR);
  2325   000EE2  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2326   000EE6  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2327   000EEA  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2328   000EEE  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2329   000EF2  EC6D  F01B         	call	_norm_stop	;wreg free
  2330                           
  2331                           ;color.c: 138:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2332   000EF6  0E03               	movlw	3
  2333   000EF8  6E28               	movwf	(??_motor_response+1)^0,c
  2334   000EFA  0E70               	movlw	112
  2335   000EFC  6E27               	movwf	??_motor_response^0,c
  2336   000EFE  0E5C               	movlw	92
  2337   000F00                     u4007:
  2338   000F00  2EE8               	decfsz	wreg,f,c
  2339   000F02  D7FE               	bra	u4007
  2340   000F04  2E27               	decfsz	??_motor_response^0,f,c
  2341   000F06  D7FC               	bra	u4007
  2342   000F08  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2343   000F0A  D7FA               	bra	u4007
  2344   000F0C  D000               	nop2	
  2345   000F0E                     
  2346                           ;color.c: 139:         }
  2347   000F0E  0100               	movlb	0	; () banked
  2348   000F10  4BB2               	infsnz	motor_response@j& (0+255),f,b
  2349   000F12  2BB3               	incf	(motor_response@j+1)& (0+255),f,b
  2350   000F14  BFB3               	btfsc	(motor_response@j+1)& (0+255),7,b
  2351   000F16  EF96  F007         	goto	u2921
  2352   000F1A  51B3               	movf	(motor_response@j+1)& (0+255),w,b
  2353   000F1C  E109               	bnz	u2920
  2354   000F1E  0E18               	movlw	24
  2355   000F20  5DB2               	subwf	motor_response@j& (0+255),w,b
  2356   000F22  A0D8               	btfss	status,0,c
  2357   000F24  EF96  F007         	goto	u2921
  2358   000F28  EF98  F007         	goto	u2920
  2359   000F2C                     u2921:
  2360   000F2C  EF5B  F007         	goto	l3718
  2361   000F30                     u2920:
  2362   000F30                     
  2363                           ; BSR set to: 0
  2364                           ;color.c: 140:         return 1;
  2365   000F30  0E01               	movlw	1
  2366   000F32  EFB8  F00E         	goto	l119
  2367   000F36                     l3732:
  2368   000F36  0E00               	movlw	0
  2369   000F38  6E09               	movwf	___flge@ff1^0,c
  2370   000F3A  0E00               	movlw	0
  2371   000F3C  6E0A               	movwf	(___flge@ff1+1)^0,c
  2372   000F3E  0E90               	movlw	144
  2373   000F40  6E0B               	movwf	(___flge@ff1+2)^0,c
  2374   000F42  0E40               	movlw	64
  2375   000F44  6E0C               	movwf	(___flge@ff1+3)^0,c
  2376   000F46  EE20 F018          	lfsr	2,24
  2377   000F4A  5021               	movf	motor_response@temp^0,w,c
  2378   000F4C  26D9               	addwf	fsr2l,f,c
  2379   000F4E  5022               	movf	(motor_response@temp+1)^0,w,c
  2380   000F50  22DA               	addwfc	fsr2h,f,c
  2381   000F52  CFDE F00D          	movff	postinc2,___flge@ff2
  2382   000F56  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2383   000F5A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2384   000F5E  CFDE F010          	movff	postinc2,___flge@ff2+3
  2385   000F62  EC45  F017         	call	___flge	;wreg free
  2386   000F66  B0D8               	btfsc	status,0,c
  2387   000F68  EFB8  F007         	goto	u2931
  2388   000F6C  EFBA  F007         	goto	u2930
  2389   000F70                     u2931:
  2390   000F70  EF59  F008         	goto	l3762
  2391   000F74                     u2930:
  2392   000F74  EE20 F018          	lfsr	2,24
  2393   000F78  5021               	movf	motor_response@temp^0,w,c
  2394   000F7A  26D9               	addwf	fsr2l,f,c
  2395   000F7C  5022               	movf	(motor_response@temp+1)^0,w,c
  2396   000F7E  22DA               	addwfc	fsr2h,f,c
  2397   000F80  CFDE F009          	movff	postinc2,___flge@ff1
  2398   000F84  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2399   000F88  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2400   000F8C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2401   000F90  0E66               	movlw	102
  2402   000F92  6E0D               	movwf	___flge@ff2^0,c
  2403   000F94  0E66               	movlw	102
  2404   000F96  6E0E               	movwf	(___flge@ff2+1)^0,c
  2405   000F98  0EA6               	movlw	166
  2406   000F9A  6E0F               	movwf	(___flge@ff2+2)^0,c
  2407   000F9C  0E40               	movlw	64
  2408   000F9E  6E10               	movwf	(___flge@ff2+3)^0,c
  2409   000FA0  EC45  F017         	call	___flge	;wreg free
  2410   000FA4  B0D8               	btfsc	status,0,c
  2411   000FA6  EFD7  F007         	goto	u2941
  2412   000FAA  EFD9  F007         	goto	u2940
  2413   000FAE                     u2941:
  2414   000FAE  EF59  F008         	goto	l3762
  2415   000FB2                     u2940:
  2416   000FB2                     
  2417                           ;color.c: 144:         reverse(mL, mR);
  2418   000FB2  C023  F01C         	movff	motor_response@mL,reverse@mL
  2419   000FB6  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2420   000FBA  C025  F01E         	movff	motor_response@mR,reverse@mR
  2421   000FBE  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2422   000FC2  ECC7  F017         	call	_reverse	;wreg free
  2423   000FC6                     
  2424                           ;color.c: 145:         _delay((unsigned long)((400)*(64000000/4000.0)));
  2425   000FC6  0E21               	movlw	33
  2426   000FC8  6E28               	movwf	(??_motor_response+1)^0,c
  2427   000FCA  0E78               	movlw	120
  2428   000FCC  6E27               	movwf	??_motor_response^0,c
  2429   000FCE  0E98               	movlw	152
  2430   000FD0                     u4017:
  2431   000FD0  2EE8               	decfsz	wreg,f,c
  2432   000FD2  D7FE               	bra	u4017
  2433   000FD4  2E27               	decfsz	??_motor_response^0,f,c
  2434   000FD6  D7FC               	bra	u4017
  2435   000FD8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2436   000FDA  D7FA               	bra	u4017
  2437   000FDC  D000               	nop2	
  2438   000FDE                     
  2439                           ;color.c: 146:         norm_stop(mL, mR);
  2440   000FDE  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2441   000FE2  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2442   000FE6  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2443   000FEA  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2444   000FEE  EC6D  F01B         	call	_norm_stop	;wreg free
  2445                           
  2446                           ;color.c: 147:         _delay((unsigned long)((80)*(64000000/4000.0)));
  2447   000FF2  0E07               	movlw	7
  2448   000FF4  6E28               	movwf	(??_motor_response+1)^0,c
  2449   000FF6  0E7F               	movlw	127
  2450   000FF8  6E27               	movwf	??_motor_response^0,c
  2451   000FFA  0E50               	movlw	80
  2452   000FFC                     u4027:
  2453   000FFC  2EE8               	decfsz	wreg,f,c
  2454   000FFE  D7FE               	bra	u4027
  2455   001000  2E27               	decfsz	??_motor_response^0,f,c
  2456   001002  D7FC               	bra	u4027
  2457   001004  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2458   001006  D7FA               	bra	u4027
  2459   001008                     
  2460                           ;color.c: 148:         for (int j = 0; j <= 18; j++) {
  2461   001008  0E00               	movlw	0
  2462   00100A  0100               	movlb	0	; () banked
  2463   00100C  6FB5               	movwf	(motor_response@j_548+1)& (0+255),b
  2464   00100E  0E00               	movlw	0
  2465   001010  6FB4               	movwf	motor_response@j_548& (0+255),b
  2466   001012                     
  2467                           ; BSR set to: 0
  2468   001012  BFB5               	btfsc	(motor_response@j_548+1)& (0+255),7,b
  2469   001014  EF15  F008         	goto	u2951
  2470   001018  51B5               	movf	(motor_response@j_548+1)& (0+255),w,b
  2471   00101A  E109               	bnz	u2950
  2472   00101C  0E13               	movlw	19
  2473   00101E  5DB4               	subwf	motor_response@j_548& (0+255),w,b
  2474   001020  A0D8               	btfss	status,0,c
  2475   001022  EF15  F008         	goto	u2951
  2476   001026  EF17  F008         	goto	u2950
  2477   00102A                     u2951:
  2478   00102A  EF19  F008         	goto	l3748
  2479   00102E                     u2950:
  2480   00102E  EF56  F008         	goto	l3756
  2481   001032                     l3748:
  2482                           
  2483                           ; BSR set to: 0
  2484                           ;color.c: 149:             turnLeft(mL, mR);
  2485   001032  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2486   001036  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2487   00103A  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2488   00103E  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2489   001042  ECCE  F019         	call	_turnLeft	;wreg free
  2490   001046                     
  2491                           ;color.c: 150:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2492   001046  0E03               	movlw	3
  2493   001048  6E28               	movwf	(??_motor_response+1)^0,c
  2494   00104A  0E70               	movlw	112
  2495   00104C  6E27               	movwf	??_motor_response^0,c
  2496   00104E  0E5C               	movlw	92
  2497   001050                     u4037:
  2498   001050  2EE8               	decfsz	wreg,f,c
  2499   001052  D7FE               	bra	u4037
  2500   001054  2E27               	decfsz	??_motor_response^0,f,c
  2501   001056  D7FC               	bra	u4037
  2502   001058  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2503   00105A  D7FA               	bra	u4037
  2504   00105C  D000               	nop2	
  2505   00105E                     
  2506                           ;color.c: 151:             norm_stop(mL, mR);
  2507   00105E  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2508   001062  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2509   001066  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2510   00106A  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2511   00106E  EC6D  F01B         	call	_norm_stop	;wreg free
  2512                           
  2513                           ;color.c: 152:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2514   001072  0E03               	movlw	3
  2515   001074  6E28               	movwf	(??_motor_response+1)^0,c
  2516   001076  0E70               	movlw	112
  2517   001078  6E27               	movwf	??_motor_response^0,c
  2518   00107A  0E5C               	movlw	92
  2519   00107C                     u4047:
  2520   00107C  2EE8               	decfsz	wreg,f,c
  2521   00107E  D7FE               	bra	u4047
  2522   001080  2E27               	decfsz	??_motor_response^0,f,c
  2523   001082  D7FC               	bra	u4047
  2524   001084  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2525   001086  D7FA               	bra	u4047
  2526   001088  D000               	nop2	
  2527   00108A                     
  2528                           ;color.c: 153:         }
  2529   00108A  0100               	movlb	0	; () banked
  2530   00108C  4BB4               	infsnz	motor_response@j_548& (0+255),f,b
  2531   00108E  2BB5               	incf	(motor_response@j_548+1)& (0+255),f,b
  2532   001090  BFB5               	btfsc	(motor_response@j_548+1)& (0+255),7,b
  2533   001092  EF54  F008         	goto	u2961
  2534   001096  51B5               	movf	(motor_response@j_548+1)& (0+255),w,b
  2535   001098  E109               	bnz	u2960
  2536   00109A  0E13               	movlw	19
  2537   00109C  5DB4               	subwf	motor_response@j_548& (0+255),w,b
  2538   00109E  A0D8               	btfss	status,0,c
  2539   0010A0  EF54  F008         	goto	u2961
  2540   0010A4  EF56  F008         	goto	u2960
  2541   0010A8                     u2961:
  2542   0010A8  EF19  F008         	goto	l3748
  2543   0010AC                     u2960:
  2544   0010AC                     l3756:
  2545                           
  2546                           ; BSR set to: 0
  2547                           ;color.c: 154:         return 2;
  2548   0010AC  0E02               	movlw	2
  2549   0010AE  EFB8  F00E         	goto	l119
  2550   0010B2                     l3762:
  2551   0010B2  0E33               	movlw	51
  2552   0010B4  6E09               	movwf	___flge@ff1^0,c
  2553   0010B6  0E33               	movlw	51
  2554   0010B8  6E0A               	movwf	(___flge@ff1+1)^0,c
  2555   0010BA  0E33               	movlw	51
  2556   0010BC  6E0B               	movwf	(___flge@ff1+2)^0,c
  2557   0010BE  0E40               	movlw	64
  2558   0010C0  6E0C               	movwf	(___flge@ff1+3)^0,c
  2559   0010C2  EE20 F018          	lfsr	2,24
  2560   0010C6  5021               	movf	motor_response@temp^0,w,c
  2561   0010C8  26D9               	addwf	fsr2l,f,c
  2562   0010CA  5022               	movf	(motor_response@temp+1)^0,w,c
  2563   0010CC  22DA               	addwfc	fsr2h,f,c
  2564   0010CE  CFDE F00D          	movff	postinc2,___flge@ff2
  2565   0010D2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2566   0010D6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2567   0010DA  CFDE F010          	movff	postinc2,___flge@ff2+3
  2568   0010DE  EC45  F017         	call	___flge	;wreg free
  2569   0010E2  B0D8               	btfsc	status,0,c
  2570   0010E4  EF76  F008         	goto	u2971
  2571   0010E8  EF78  F008         	goto	u2970
  2572   0010EC                     u2971:
  2573   0010EC  EF93  F009         	goto	l3800
  2574   0010F0                     u2970:
  2575   0010F0  EE20 F018          	lfsr	2,24
  2576   0010F4  5021               	movf	motor_response@temp^0,w,c
  2577   0010F6  26D9               	addwf	fsr2l,f,c
  2578   0010F8  5022               	movf	(motor_response@temp+1)^0,w,c
  2579   0010FA  22DA               	addwfc	fsr2h,f,c
  2580   0010FC  CFDE F009          	movff	postinc2,___flge@ff1
  2581   001100  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2582   001104  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2583   001108  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2584   00110C  0ECD               	movlw	205
  2585   00110E  6E0D               	movwf	___flge@ff2^0,c
  2586   001110  0ECC               	movlw	204
  2587   001112  6E0E               	movwf	(___flge@ff2+1)^0,c
  2588   001114  0E4C               	movlw	76
  2589   001116  6E0F               	movwf	(___flge@ff2+2)^0,c
  2590   001118  0E40               	movlw	64
  2591   00111A  6E10               	movwf	(___flge@ff2+3)^0,c
  2592   00111C  EC45  F017         	call	___flge	;wreg free
  2593   001120  B0D8               	btfsc	status,0,c
  2594   001122  EF95  F008         	goto	u2981
  2595   001126  EF97  F008         	goto	u2980
  2596   00112A                     u2981:
  2597   00112A  EF93  F009         	goto	l3800
  2598   00112E                     u2980:
  2599   00112E  0E33               	movlw	51
  2600   001130  6E09               	movwf	___flge@ff1^0,c
  2601   001132  0E33               	movlw	51
  2602   001134  6E0A               	movwf	(___flge@ff1+1)^0,c
  2603   001136  0E33               	movlw	51
  2604   001138  6E0B               	movwf	(___flge@ff1+2)^0,c
  2605   00113A  0E40               	movlw	64
  2606   00113C  6E0C               	movwf	(___flge@ff1+3)^0,c
  2607   00113E  EE20 F010          	lfsr	2,16
  2608   001142  5021               	movf	motor_response@temp^0,w,c
  2609   001144  26D9               	addwf	fsr2l,f,c
  2610   001146  5022               	movf	(motor_response@temp+1)^0,w,c
  2611   001148  22DA               	addwfc	fsr2h,f,c
  2612   00114A  CFDE F00D          	movff	postinc2,___flge@ff2
  2613   00114E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2614   001152  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2615   001156  CFDE F010          	movff	postinc2,___flge@ff2+3
  2616   00115A  EC45  F017         	call	___flge	;wreg free
  2617   00115E  B0D8               	btfsc	status,0,c
  2618   001160  EFB4  F008         	goto	u2991
  2619   001164  EFB6  F008         	goto	u2990
  2620   001168                     u2991:
  2621   001168  EF93  F009         	goto	l3800
  2622   00116C                     u2990:
  2623   00116C  EE20 F010          	lfsr	2,16
  2624   001170  5021               	movf	motor_response@temp^0,w,c
  2625   001172  26D9               	addwf	fsr2l,f,c
  2626   001174  5022               	movf	(motor_response@temp+1)^0,w,c
  2627   001176  22DA               	addwfc	fsr2h,f,c
  2628   001178  CFDE F009          	movff	postinc2,___flge@ff1
  2629   00117C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2630   001180  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2631   001184  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2632   001188  0ECD               	movlw	205
  2633   00118A  6E0D               	movwf	___flge@ff2^0,c
  2634   00118C  0ECC               	movlw	204
  2635   00118E  6E0E               	movwf	(___flge@ff2+1)^0,c
  2636   001190  0E4C               	movlw	76
  2637   001192  6E0F               	movwf	(___flge@ff2+2)^0,c
  2638   001194  0E40               	movlw	64
  2639   001196  6E10               	movwf	(___flge@ff2+3)^0,c
  2640   001198  EC45  F017         	call	___flge	;wreg free
  2641   00119C  B0D8               	btfsc	status,0,c
  2642   00119E  EFD3  F008         	goto	u3001
  2643   0011A2  EFD5  F008         	goto	u3000
  2644   0011A6                     u3001:
  2645   0011A6  EF93  F009         	goto	l3800
  2646   0011AA                     u3000:
  2647   0011AA  0E33               	movlw	51
  2648   0011AC  6E09               	movwf	___flge@ff1^0,c
  2649   0011AE  0E33               	movlw	51
  2650   0011B0  6E0A               	movwf	(___flge@ff1+1)^0,c
  2651   0011B2  0E33               	movlw	51
  2652   0011B4  6E0B               	movwf	(___flge@ff1+2)^0,c
  2653   0011B6  0E40               	movlw	64
  2654   0011B8  6E0C               	movwf	(___flge@ff1+3)^0,c
  2655   0011BA  EE20 F014          	lfsr	2,20
  2656   0011BE  5021               	movf	motor_response@temp^0,w,c
  2657   0011C0  26D9               	addwf	fsr2l,f,c
  2658   0011C2  5022               	movf	(motor_response@temp+1)^0,w,c
  2659   0011C4  22DA               	addwfc	fsr2h,f,c
  2660   0011C6  CFDE F00D          	movff	postinc2,___flge@ff2
  2661   0011CA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2662   0011CE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2663   0011D2  CFDE F010          	movff	postinc2,___flge@ff2+3
  2664   0011D6  EC45  F017         	call	___flge	;wreg free
  2665   0011DA  B0D8               	btfsc	status,0,c
  2666   0011DC  EFF2  F008         	goto	u3011
  2667   0011E0  EFF4  F008         	goto	u3010
  2668   0011E4                     u3011:
  2669   0011E4  EF93  F009         	goto	l3800
  2670   0011E8                     u3010:
  2671   0011E8  EE20 F014          	lfsr	2,20
  2672   0011EC  5021               	movf	motor_response@temp^0,w,c
  2673   0011EE  26D9               	addwf	fsr2l,f,c
  2674   0011F0  5022               	movf	(motor_response@temp+1)^0,w,c
  2675   0011F2  22DA               	addwfc	fsr2h,f,c
  2676   0011F4  CFDE F009          	movff	postinc2,___flge@ff1
  2677   0011F8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2678   0011FC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2679   001200  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2680   001204  0ECD               	movlw	205
  2681   001206  6E0D               	movwf	___flge@ff2^0,c
  2682   001208  0ECC               	movlw	204
  2683   00120A  6E0E               	movwf	(___flge@ff2+1)^0,c
  2684   00120C  0E4C               	movlw	76
  2685   00120E  6E0F               	movwf	(___flge@ff2+2)^0,c
  2686   001210  0E40               	movlw	64
  2687   001212  6E10               	movwf	(___flge@ff2+3)^0,c
  2688   001214  EC45  F017         	call	___flge	;wreg free
  2689   001218  B0D8               	btfsc	status,0,c
  2690   00121A  EF11  F009         	goto	u3021
  2691   00121E  EF13  F009         	goto	u3020
  2692   001222                     u3021:
  2693   001222  EF93  F009         	goto	l3800
  2694   001226                     u3020:
  2695   001226                     
  2696                           ;color.c: 158:         reverse(mL,mR);
  2697   001226  C023  F01C         	movff	motor_response@mL,reverse@mL
  2698   00122A  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2699   00122E  C025  F01E         	movff	motor_response@mR,reverse@mR
  2700   001232  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2701   001236  ECC7  F017         	call	_reverse	;wreg free
  2702   00123A                     
  2703                           ;color.c: 159:         _delay((unsigned long)((400)*(64000000/4000.0)));
  2704   00123A  0E21               	movlw	33
  2705   00123C  6E28               	movwf	(??_motor_response+1)^0,c
  2706   00123E  0E78               	movlw	120
  2707   001240  6E27               	movwf	??_motor_response^0,c
  2708   001242  0E98               	movlw	152
  2709   001244                     u4057:
  2710   001244  2EE8               	decfsz	wreg,f,c
  2711   001246  D7FE               	bra	u4057
  2712   001248  2E27               	decfsz	??_motor_response^0,f,c
  2713   00124A  D7FC               	bra	u4057
  2714   00124C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2715   00124E  D7FA               	bra	u4057
  2716   001250  D000               	nop2	
  2717   001252                     
  2718                           ;color.c: 160:         norm_stop(mL, mR);
  2719   001252  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2720   001256  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2721   00125A  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2722   00125E  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2723   001262  EC6D  F01B         	call	_norm_stop	;wreg free
  2724                           
  2725                           ;color.c: 161:         _delay((unsigned long)((80)*(64000000/4000.0)));
  2726   001266  0E07               	movlw	7
  2727   001268  6E28               	movwf	(??_motor_response+1)^0,c
  2728   00126A  0E7F               	movlw	127
  2729   00126C  6E27               	movwf	??_motor_response^0,c
  2730   00126E  0E50               	movlw	80
  2731   001270                     u4067:
  2732   001270  2EE8               	decfsz	wreg,f,c
  2733   001272  D7FE               	bra	u4067
  2734   001274  2E27               	decfsz	??_motor_response^0,f,c
  2735   001276  D7FC               	bra	u4067
  2736   001278  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2737   00127A  D7FA               	bra	u4067
  2738   00127C                     
  2739                           ;color.c: 162:         for (int j = 0; j <= 40; j++) {
  2740   00127C  0E00               	movlw	0
  2741   00127E  0100               	movlb	0	; () banked
  2742   001280  6FB7               	movwf	(motor_response@j_549+1)& (0+255),b
  2743   001282  0E00               	movlw	0
  2744   001284  6FB6               	movwf	motor_response@j_549& (0+255),b
  2745   001286                     
  2746                           ; BSR set to: 0
  2747   001286  BFB7               	btfsc	(motor_response@j_549+1)& (0+255),7,b
  2748   001288  EF4F  F009         	goto	u3031
  2749   00128C  51B7               	movf	(motor_response@j_549+1)& (0+255),w,b
  2750   00128E  E109               	bnz	u3030
  2751   001290  0E29               	movlw	41
  2752   001292  5DB6               	subwf	motor_response@j_549& (0+255),w,b
  2753   001294  A0D8               	btfss	status,0,c
  2754   001296  EF4F  F009         	goto	u3031
  2755   00129A  EF51  F009         	goto	u3030
  2756   00129E                     u3031:
  2757   00129E  EF53  F009         	goto	l3786
  2758   0012A2                     u3030:
  2759   0012A2  EF90  F009         	goto	l3794
  2760   0012A6                     l3786:
  2761                           
  2762                           ; BSR set to: 0
  2763                           ;color.c: 163:             turnLeft(mL, mR);
  2764   0012A6  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2765   0012AA  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2766   0012AE  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2767   0012B2  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2768   0012B6  ECCE  F019         	call	_turnLeft	;wreg free
  2769   0012BA                     
  2770                           ;color.c: 164:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2771   0012BA  0E03               	movlw	3
  2772   0012BC  6E28               	movwf	(??_motor_response+1)^0,c
  2773   0012BE  0E70               	movlw	112
  2774   0012C0  6E27               	movwf	??_motor_response^0,c
  2775   0012C2  0E5C               	movlw	92
  2776   0012C4                     u4077:
  2777   0012C4  2EE8               	decfsz	wreg,f,c
  2778   0012C6  D7FE               	bra	u4077
  2779   0012C8  2E27               	decfsz	??_motor_response^0,f,c
  2780   0012CA  D7FC               	bra	u4077
  2781   0012CC  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2782   0012CE  D7FA               	bra	u4077
  2783   0012D0  D000               	nop2	
  2784   0012D2                     
  2785                           ;color.c: 165:             norm_stop(mL, mR);
  2786   0012D2  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2787   0012D6  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2788   0012DA  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2789   0012DE  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2790   0012E2  EC6D  F01B         	call	_norm_stop	;wreg free
  2791                           
  2792                           ;color.c: 166:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2793   0012E6  0E03               	movlw	3
  2794   0012E8  6E28               	movwf	(??_motor_response+1)^0,c
  2795   0012EA  0E70               	movlw	112
  2796   0012EC  6E27               	movwf	??_motor_response^0,c
  2797   0012EE  0E5C               	movlw	92
  2798   0012F0                     u4087:
  2799   0012F0  2EE8               	decfsz	wreg,f,c
  2800   0012F2  D7FE               	bra	u4087
  2801   0012F4  2E27               	decfsz	??_motor_response^0,f,c
  2802   0012F6  D7FC               	bra	u4087
  2803   0012F8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2804   0012FA  D7FA               	bra	u4087
  2805   0012FC  D000               	nop2	
  2806   0012FE                     
  2807                           ;color.c: 167:         }
  2808   0012FE  0100               	movlb	0	; () banked
  2809   001300  4BB6               	infsnz	motor_response@j_549& (0+255),f,b
  2810   001302  2BB7               	incf	(motor_response@j_549+1)& (0+255),f,b
  2811   001304  BFB7               	btfsc	(motor_response@j_549+1)& (0+255),7,b
  2812   001306  EF8E  F009         	goto	u3041
  2813   00130A  51B7               	movf	(motor_response@j_549+1)& (0+255),w,b
  2814   00130C  E109               	bnz	u3040
  2815   00130E  0E29               	movlw	41
  2816   001310  5DB6               	subwf	motor_response@j_549& (0+255),w,b
  2817   001312  A0D8               	btfss	status,0,c
  2818   001314  EF8E  F009         	goto	u3041
  2819   001318  EF90  F009         	goto	u3040
  2820   00131C                     u3041:
  2821   00131C  EF53  F009         	goto	l3786
  2822   001320                     u3040:
  2823   001320                     l3794:
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;color.c: 168:         return 3;
  2827   001320  0E03               	movlw	3
  2828   001322  EFB8  F00E         	goto	l119
  2829   001326                     l3800:
  2830   001326  0E00               	movlw	0
  2831   001328  6E09               	movwf	___flge@ff1^0,c
  2832   00132A  0E00               	movlw	0
  2833   00132C  6E0A               	movwf	(___flge@ff1+1)^0,c
  2834   00132E  0EB0               	movlw	176
  2835   001330  6E0B               	movwf	(___flge@ff1+2)^0,c
  2836   001332  0E40               	movlw	64
  2837   001334  6E0C               	movwf	(___flge@ff1+3)^0,c
  2838   001336  EE20 F018          	lfsr	2,24
  2839   00133A  5021               	movf	motor_response@temp^0,w,c
  2840   00133C  26D9               	addwf	fsr2l,f,c
  2841   00133E  5022               	movf	(motor_response@temp+1)^0,w,c
  2842   001340  22DA               	addwfc	fsr2h,f,c
  2843   001342  CFDE F00D          	movff	postinc2,___flge@ff2
  2844   001346  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2845   00134A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2846   00134E  CFDE F010          	movff	postinc2,___flge@ff2+3
  2847   001352  EC45  F017         	call	___flge	;wreg free
  2848   001356  B0D8               	btfsc	status,0,c
  2849   001358  EFB0  F009         	goto	u3051
  2850   00135C  EFB2  F009         	goto	u3050
  2851   001360                     u3051:
  2852   001360  EFCE  F00A         	goto	l3838
  2853   001364                     u3050:
  2854   001364  EE20 F018          	lfsr	2,24
  2855   001368  5021               	movf	motor_response@temp^0,w,c
  2856   00136A  26D9               	addwf	fsr2l,f,c
  2857   00136C  5022               	movf	(motor_response@temp+1)^0,w,c
  2858   00136E  22DA               	addwfc	fsr2h,f,c
  2859   001370  CFDE F009          	movff	postinc2,___flge@ff1
  2860   001374  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2861   001378  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2862   00137C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2863   001380  0E00               	movlw	0
  2864   001382  6E0D               	movwf	___flge@ff2^0,c
  2865   001384  0E00               	movlw	0
  2866   001386  6E0E               	movwf	(___flge@ff2+1)^0,c
  2867   001388  0EC0               	movlw	192
  2868   00138A  6E0F               	movwf	(___flge@ff2+2)^0,c
  2869   00138C  0E40               	movlw	64
  2870   00138E  6E10               	movwf	(___flge@ff2+3)^0,c
  2871   001390  EC45  F017         	call	___flge	;wreg free
  2872   001394  B0D8               	btfsc	status,0,c
  2873   001396  EFCF  F009         	goto	u3061
  2874   00139A  EFD1  F009         	goto	u3060
  2875   00139E                     u3061:
  2876   00139E  EFCE  F00A         	goto	l3838
  2877   0013A2                     u3060:
  2878   0013A2  0E00               	movlw	0
  2879   0013A4  6E09               	movwf	___flge@ff1^0,c
  2880   0013A6  0E00               	movlw	0
  2881   0013A8  6E0A               	movwf	(___flge@ff1+1)^0,c
  2882   0013AA  0EC0               	movlw	192
  2883   0013AC  6E0B               	movwf	(___flge@ff1+2)^0,c
  2884   0013AE  0E3F               	movlw	63
  2885   0013B0  6E0C               	movwf	(___flge@ff1+3)^0,c
  2886   0013B2  EE20 F010          	lfsr	2,16
  2887   0013B6  5021               	movf	motor_response@temp^0,w,c
  2888   0013B8  26D9               	addwf	fsr2l,f,c
  2889   0013BA  5022               	movf	(motor_response@temp+1)^0,w,c
  2890   0013BC  22DA               	addwfc	fsr2h,f,c
  2891   0013BE  CFDE F00D          	movff	postinc2,___flge@ff2
  2892   0013C2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2893   0013C6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2894   0013CA  CFDE F010          	movff	postinc2,___flge@ff2+3
  2895   0013CE  EC45  F017         	call	___flge	;wreg free
  2896   0013D2  B0D8               	btfsc	status,0,c
  2897   0013D4  EFEE  F009         	goto	u3071
  2898   0013D8  EFF0  F009         	goto	u3070
  2899   0013DC                     u3071:
  2900   0013DC  EFCE  F00A         	goto	l3838
  2901   0013E0                     u3070:
  2902   0013E0  EE20 F010          	lfsr	2,16
  2903   0013E4  5021               	movf	motor_response@temp^0,w,c
  2904   0013E6  26D9               	addwf	fsr2l,f,c
  2905   0013E8  5022               	movf	(motor_response@temp+1)^0,w,c
  2906   0013EA  22DA               	addwfc	fsr2h,f,c
  2907   0013EC  CFDE F009          	movff	postinc2,___flge@ff1
  2908   0013F0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2909   0013F4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2910   0013F8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2911   0013FC  0E00               	movlw	0
  2912   0013FE  6E0D               	movwf	___flge@ff2^0,c
  2913   001400  0E00               	movlw	0
  2914   001402  6E0E               	movwf	(___flge@ff2+1)^0,c
  2915   001404  0E00               	movlw	0
  2916   001406  6E0F               	movwf	(___flge@ff2+2)^0,c
  2917   001408  0E40               	movlw	64
  2918   00140A  6E10               	movwf	(___flge@ff2+3)^0,c
  2919   00140C  EC45  F017         	call	___flge	;wreg free
  2920   001410  B0D8               	btfsc	status,0,c
  2921   001412  EF0D  F00A         	goto	u3081
  2922   001416  EF0F  F00A         	goto	u3080
  2923   00141A                     u3081:
  2924   00141A  EFCE  F00A         	goto	l3838
  2925   00141E                     u3080:
  2926   00141E  0E00               	movlw	0
  2927   001420  6E09               	movwf	___flge@ff1^0,c
  2928   001422  0E00               	movlw	0
  2929   001424  6E0A               	movwf	(___flge@ff1+1)^0,c
  2930   001426  0E40               	movlw	64
  2931   001428  6E0B               	movwf	(___flge@ff1+2)^0,c
  2932   00142A  0E40               	movlw	64
  2933   00142C  6E0C               	movwf	(___flge@ff1+3)^0,c
  2934   00142E  EE20 F014          	lfsr	2,20
  2935   001432  5021               	movf	motor_response@temp^0,w,c
  2936   001434  26D9               	addwf	fsr2l,f,c
  2937   001436  5022               	movf	(motor_response@temp+1)^0,w,c
  2938   001438  22DA               	addwfc	fsr2h,f,c
  2939   00143A  CFDE F00D          	movff	postinc2,___flge@ff2
  2940   00143E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2941   001442  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2942   001446  CFDE F010          	movff	postinc2,___flge@ff2+3
  2943   00144A  EC45  F017         	call	___flge	;wreg free
  2944   00144E  B0D8               	btfsc	status,0,c
  2945   001450  EF2C  F00A         	goto	u3091
  2946   001454  EF2E  F00A         	goto	u3090
  2947   001458                     u3091:
  2948   001458  EFCE  F00A         	goto	l3838
  2949   00145C                     u3090:
  2950   00145C  EE20 F014          	lfsr	2,20
  2951   001460  5021               	movf	motor_response@temp^0,w,c
  2952   001462  26D9               	addwf	fsr2l,f,c
  2953   001464  5022               	movf	(motor_response@temp+1)^0,w,c
  2954   001466  22DA               	addwfc	fsr2h,f,c
  2955   001468  CFDE F009          	movff	postinc2,___flge@ff1
  2956   00146C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2957   001470  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2958   001474  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2959   001478  0E00               	movlw	0
  2960   00147A  6E0D               	movwf	___flge@ff2^0,c
  2961   00147C  0E00               	movlw	0
  2962   00147E  6E0E               	movwf	(___flge@ff2+1)^0,c
  2963   001480  0E60               	movlw	96
  2964   001482  6E0F               	movwf	(___flge@ff2+2)^0,c
  2965   001484  0E40               	movlw	64
  2966   001486  6E10               	movwf	(___flge@ff2+3)^0,c
  2967   001488  EC45  F017         	call	___flge	;wreg free
  2968   00148C  B0D8               	btfsc	status,0,c
  2969   00148E  EF4B  F00A         	goto	u3101
  2970   001492  EF4D  F00A         	goto	u3100
  2971   001496                     u3101:
  2972   001496  EFCE  F00A         	goto	l3838
  2973   00149A                     u3100:
  2974   00149A                     
  2975                           ;color.c: 171:         reverse(mL, mR);
  2976   00149A  C023  F01C         	movff	motor_response@mL,reverse@mL
  2977   00149E  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2978   0014A2  C025  F01E         	movff	motor_response@mR,reverse@mR
  2979   0014A6  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2980   0014AA  ECC7  F017         	call	_reverse	;wreg free
  2981   0014AE                     
  2982                           ;color.c: 172:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  2983   0014AE  0EA3               	movlw	163
  2984   0014B0  6E28               	movwf	(??_motor_response+1)^0,c
  2985   0014B2  0E57               	movlw	87
  2986   0014B4  6E27               	movwf	??_motor_response^0,c
  2987   0014B6  0E02               	movlw	2
  2988   0014B8                     u4097:
  2989   0014B8  2EE8               	decfsz	wreg,f,c
  2990   0014BA  D7FE               	bra	u4097
  2991   0014BC  2E27               	decfsz	??_motor_response^0,f,c
  2992   0014BE  D7FC               	bra	u4097
  2993   0014C0  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2994   0014C2  D7FA               	bra	u4097
  2995   0014C4  D000               	nop2	
  2996   0014C6                     
  2997                           ;color.c: 173:         norm_stop(mL, mR);
  2998   0014C6  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2999   0014CA  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3000   0014CE  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3001   0014D2  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3002   0014D6  EC6D  F01B         	call	_norm_stop	;wreg free
  3003                           
  3004                           ;color.c: 174:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3005   0014DA  0E09               	movlw	9
  3006   0014DC  6E28               	movwf	(??_motor_response+1)^0,c
  3007   0014DE  0E1E               	movlw	30
  3008   0014E0  6E27               	movwf	??_motor_response^0,c
  3009   0014E2  0EE4               	movlw	228
  3010   0014E4                     u4107:
  3011   0014E4  2EE8               	decfsz	wreg,f,c
  3012   0014E6  D7FE               	bra	u4107
  3013   0014E8  2E27               	decfsz	??_motor_response^0,f,c
  3014   0014EA  D7FC               	bra	u4107
  3015   0014EC  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3016   0014EE  D7FA               	bra	u4107
  3017   0014F0  D000               	nop2	
  3018   0014F2                     
  3019                           ;color.c: 175:         for (int j = 0; j <= 16; j++) {
  3020   0014F2  0E00               	movlw	0
  3021   0014F4  0100               	movlb	0	; () banked
  3022   0014F6  6FB9               	movwf	(motor_response@j_550+1)& (0+255),b
  3023   0014F8  0E00               	movlw	0
  3024   0014FA  6FB8               	movwf	motor_response@j_550& (0+255),b
  3025   0014FC                     
  3026                           ; BSR set to: 0
  3027   0014FC  BFB9               	btfsc	(motor_response@j_550+1)& (0+255),7,b
  3028   0014FE  EF8A  F00A         	goto	u3111
  3029   001502  51B9               	movf	(motor_response@j_550+1)& (0+255),w,b
  3030   001504  E109               	bnz	u3110
  3031   001506  0E11               	movlw	17
  3032   001508  5DB8               	subwf	motor_response@j_550& (0+255),w,b
  3033   00150A  A0D8               	btfss	status,0,c
  3034   00150C  EF8A  F00A         	goto	u3111
  3035   001510  EF8C  F00A         	goto	u3110
  3036   001514                     u3111:
  3037   001514  EF8E  F00A         	goto	l3824
  3038   001518                     u3110:
  3039   001518  EFCB  F00A         	goto	l3832
  3040   00151C                     l3824:
  3041                           
  3042                           ; BSR set to: 0
  3043                           ;color.c: 176:             turnRight(mL, mR);
  3044   00151C  C023  F01C         	movff	motor_response@mL,turnRight@mL
  3045   001520  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  3046   001524  C025  F01E         	movff	motor_response@mR,turnRight@mR
  3047   001528  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  3048   00152C  EC95  F019         	call	_turnRight	;wreg free
  3049   001530                     
  3050                           ;color.c: 177:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3051   001530  0E03               	movlw	3
  3052   001532  6E28               	movwf	(??_motor_response+1)^0,c
  3053   001534  0E70               	movlw	112
  3054   001536  6E27               	movwf	??_motor_response^0,c
  3055   001538  0E5C               	movlw	92
  3056   00153A                     u4117:
  3057   00153A  2EE8               	decfsz	wreg,f,c
  3058   00153C  D7FE               	bra	u4117
  3059   00153E  2E27               	decfsz	??_motor_response^0,f,c
  3060   001540  D7FC               	bra	u4117
  3061   001542  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3062   001544  D7FA               	bra	u4117
  3063   001546  D000               	nop2	
  3064   001548                     
  3065                           ;color.c: 178:             norm_stop(mL, mR);
  3066   001548  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3067   00154C  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3068   001550  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3069   001554  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3070   001558  EC6D  F01B         	call	_norm_stop	;wreg free
  3071                           
  3072                           ;color.c: 179:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3073   00155C  0E03               	movlw	3
  3074   00155E  6E28               	movwf	(??_motor_response+1)^0,c
  3075   001560  0E70               	movlw	112
  3076   001562  6E27               	movwf	??_motor_response^0,c
  3077   001564  0E5C               	movlw	92
  3078   001566                     u4127:
  3079   001566  2EE8               	decfsz	wreg,f,c
  3080   001568  D7FE               	bra	u4127
  3081   00156A  2E27               	decfsz	??_motor_response^0,f,c
  3082   00156C  D7FC               	bra	u4127
  3083   00156E  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3084   001570  D7FA               	bra	u4127
  3085   001572  D000               	nop2	
  3086   001574                     
  3087                           ;color.c: 180:         }
  3088   001574  0100               	movlb	0	; () banked
  3089   001576  4BB8               	infsnz	motor_response@j_550& (0+255),f,b
  3090   001578  2BB9               	incf	(motor_response@j_550+1)& (0+255),f,b
  3091   00157A  BFB9               	btfsc	(motor_response@j_550+1)& (0+255),7,b
  3092   00157C  EFC9  F00A         	goto	u3121
  3093   001580  51B9               	movf	(motor_response@j_550+1)& (0+255),w,b
  3094   001582  E109               	bnz	u3120
  3095   001584  0E11               	movlw	17
  3096   001586  5DB8               	subwf	motor_response@j_550& (0+255),w,b
  3097   001588  A0D8               	btfss	status,0,c
  3098   00158A  EFC9  F00A         	goto	u3121
  3099   00158E  EFCB  F00A         	goto	u3120
  3100   001592                     u3121:
  3101   001592  EF8E  F00A         	goto	l3824
  3102   001596                     u3120:
  3103   001596                     l3832:
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;color.c: 181:         return 4;
  3107   001596  0E04               	movlw	4
  3108   001598  EFB8  F00E         	goto	l119
  3109   00159C                     l3838:
  3110   00159C  EE20 F018          	lfsr	2,24
  3111   0015A0  5021               	movf	motor_response@temp^0,w,c
  3112   0015A2  26D9               	addwf	fsr2l,f,c
  3113   0015A4  5022               	movf	(motor_response@temp+1)^0,w,c
  3114   0015A6  22DA               	addwfc	fsr2h,f,c
  3115   0015A8  CFDE F009          	movff	postinc2,___flge@ff1
  3116   0015AC  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3117   0015B0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3118   0015B4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3119   0015B8  0E00               	movlw	0
  3120   0015BA  6E0D               	movwf	___flge@ff2^0,c
  3121   0015BC  0E00               	movlw	0
  3122   0015BE  6E0E               	movwf	(___flge@ff2+1)^0,c
  3123   0015C0  0EA0               	movlw	160
  3124   0015C2  6E0F               	movwf	(___flge@ff2+2)^0,c
  3125   0015C4  0E40               	movlw	64
  3126   0015C6  6E10               	movwf	(___flge@ff2+3)^0,c
  3127   0015C8  EC45  F017         	call	___flge	;wreg free
  3128   0015CC  B0D8               	btfsc	status,0,c
  3129   0015CE  EFEB  F00A         	goto	u3131
  3130   0015D2  EFED  F00A         	goto	u3130
  3131   0015D6                     u3131:
  3132   0015D6  EFF8  F00B         	goto	l3878
  3133   0015DA                     u3130:
  3134   0015DA  0E00               	movlw	0
  3135   0015DC  6E09               	movwf	___flge@ff1^0,c
  3136   0015DE  0E00               	movlw	0
  3137   0015E0  6E0A               	movwf	(___flge@ff1+1)^0,c
  3138   0015E2  0EC0               	movlw	192
  3139   0015E4  6E0B               	movwf	(___flge@ff1+2)^0,c
  3140   0015E6  0E3F               	movlw	63
  3141   0015E8  6E0C               	movwf	(___flge@ff1+3)^0,c
  3142   0015EA  EE20 F010          	lfsr	2,16
  3143   0015EE  5021               	movf	motor_response@temp^0,w,c
  3144   0015F0  26D9               	addwf	fsr2l,f,c
  3145   0015F2  5022               	movf	(motor_response@temp+1)^0,w,c
  3146   0015F4  22DA               	addwfc	fsr2h,f,c
  3147   0015F6  CFDE F00D          	movff	postinc2,___flge@ff2
  3148   0015FA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3149   0015FE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3150   001602  CFDE F010          	movff	postinc2,___flge@ff2+3
  3151   001606  EC45  F017         	call	___flge	;wreg free
  3152   00160A  B0D8               	btfsc	status,0,c
  3153   00160C  EF0A  F00B         	goto	u3141
  3154   001610  EF0C  F00B         	goto	u3140
  3155   001614                     u3141:
  3156   001614  EFF8  F00B         	goto	l3878
  3157   001618                     u3140:
  3158   001618  EE20 F010          	lfsr	2,16
  3159   00161C  5021               	movf	motor_response@temp^0,w,c
  3160   00161E  26D9               	addwf	fsr2l,f,c
  3161   001620  5022               	movf	(motor_response@temp+1)^0,w,c
  3162   001622  22DA               	addwfc	fsr2h,f,c
  3163   001624  CFDE F009          	movff	postinc2,___flge@ff1
  3164   001628  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3165   00162C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3166   001630  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3167   001634  0E00               	movlw	0
  3168   001636  6E0D               	movwf	___flge@ff2^0,c
  3169   001638  0E00               	movlw	0
  3170   00163A  6E0E               	movwf	(___flge@ff2+1)^0,c
  3171   00163C  0E00               	movlw	0
  3172   00163E  6E0F               	movwf	(___flge@ff2+2)^0,c
  3173   001640  0E40               	movlw	64
  3174   001642  6E10               	movwf	(___flge@ff2+3)^0,c
  3175   001644  EC45  F017         	call	___flge	;wreg free
  3176   001648  B0D8               	btfsc	status,0,c
  3177   00164A  EF29  F00B         	goto	u3151
  3178   00164E  EF2B  F00B         	goto	u3150
  3179   001652                     u3151:
  3180   001652  EFF8  F00B         	goto	l3878
  3181   001656                     u3150:
  3182   001656  0E00               	movlw	0
  3183   001658  6E09               	movwf	___flge@ff1^0,c
  3184   00165A  0E00               	movlw	0
  3185   00165C  6E0A               	movwf	(___flge@ff1+1)^0,c
  3186   00165E  0E40               	movlw	64
  3187   001660  6E0B               	movwf	(___flge@ff1+2)^0,c
  3188   001662  0E40               	movlw	64
  3189   001664  6E0C               	movwf	(___flge@ff1+3)^0,c
  3190   001666  EE20 F014          	lfsr	2,20
  3191   00166A  5021               	movf	motor_response@temp^0,w,c
  3192   00166C  26D9               	addwf	fsr2l,f,c
  3193   00166E  5022               	movf	(motor_response@temp+1)^0,w,c
  3194   001670  22DA               	addwfc	fsr2h,f,c
  3195   001672  CFDE F00D          	movff	postinc2,___flge@ff2
  3196   001676  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3197   00167A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3198   00167E  CFDE F010          	movff	postinc2,___flge@ff2+3
  3199   001682  EC45  F017         	call	___flge	;wreg free
  3200   001686  B0D8               	btfsc	status,0,c
  3201   001688  EF48  F00B         	goto	u3161
  3202   00168C  EF4A  F00B         	goto	u3160
  3203   001690                     u3161:
  3204   001690  EFF8  F00B         	goto	l3878
  3205   001694                     u3160:
  3206   001694  EE20 F014          	lfsr	2,20
  3207   001698  5021               	movf	motor_response@temp^0,w,c
  3208   00169A  26D9               	addwf	fsr2l,f,c
  3209   00169C  5022               	movf	(motor_response@temp+1)^0,w,c
  3210   00169E  22DA               	addwfc	fsr2h,f,c
  3211   0016A0  CFDE F009          	movff	postinc2,___flge@ff1
  3212   0016A4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3213   0016A8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3214   0016AC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3215   0016B0  0E00               	movlw	0
  3216   0016B2  6E0D               	movwf	___flge@ff2^0,c
  3217   0016B4  0E00               	movlw	0
  3218   0016B6  6E0E               	movwf	(___flge@ff2+1)^0,c
  3219   0016B8  0E60               	movlw	96
  3220   0016BA  6E0F               	movwf	(___flge@ff2+2)^0,c
  3221   0016BC  0E40               	movlw	64
  3222   0016BE  6E10               	movwf	(___flge@ff2+3)^0,c
  3223   0016C0  EC45  F017         	call	___flge	;wreg free
  3224   0016C4  B0D8               	btfsc	status,0,c
  3225   0016C6  EF67  F00B         	goto	u3171
  3226   0016CA  EF69  F00B         	goto	u3170
  3227   0016CE                     u3171:
  3228   0016CE  EFF8  F00B         	goto	l3878
  3229   0016D2                     u3170:
  3230   0016D2                     
  3231                           ;color.c: 184:         LATHbits.LATH0 = !LATHbits.LATH0;
  3232   0016D2  A080               	btfss	128,0,c	;volatile
  3233   0016D4  EF6E  F00B         	goto	u3181
  3234   0016D8  EF72  F00B         	goto	u3180
  3235   0016DC                     u3181:
  3236   0016DC  6A27               	clrf	??_motor_response^0,c
  3237   0016DE  2A27               	incf	??_motor_response^0,f,c
  3238   0016E0  EF73  F00B         	goto	u3198
  3239   0016E4                     u3180:
  3240   0016E4  6A27               	clrf	??_motor_response^0,c
  3241   0016E6                     u3198:
  3242   0016E6  5080               	movf	128,w,c	;volatile
  3243   0016E8  1827               	xorwf	??_motor_response^0,w,c
  3244   0016EA  0BFE               	andlw	-2
  3245   0016EC  1827               	xorwf	??_motor_response^0,w,c
  3246   0016EE  6E80               	movwf	128,c	;volatile
  3247   0016F0                     
  3248                           ;color.c: 185:         reverse(mL, mR);
  3249   0016F0  C023  F01C         	movff	motor_response@mL,reverse@mL
  3250   0016F4  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  3251   0016F8  C025  F01E         	movff	motor_response@mR,reverse@mR
  3252   0016FC  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  3253   001700  ECC7  F017         	call	_reverse	;wreg free
  3254   001704                     
  3255                           ;color.c: 186:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  3256   001704  0EA3               	movlw	163
  3257   001706  6E28               	movwf	(??_motor_response+1)^0,c
  3258   001708  0E57               	movlw	87
  3259   00170A  6E27               	movwf	??_motor_response^0,c
  3260   00170C  0E02               	movlw	2
  3261   00170E                     u4137:
  3262   00170E  2EE8               	decfsz	wreg,f,c
  3263   001710  D7FE               	bra	u4137
  3264   001712  2E27               	decfsz	??_motor_response^0,f,c
  3265   001714  D7FC               	bra	u4137
  3266   001716  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3267   001718  D7FA               	bra	u4137
  3268   00171A  D000               	nop2	
  3269   00171C                     
  3270                           ;color.c: 187:         norm_stop(mL, mR);
  3271   00171C  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3272   001720  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3273   001724  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3274   001728  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3275   00172C  EC6D  F01B         	call	_norm_stop	;wreg free
  3276   001730                     
  3277                           ;color.c: 188:         _delay((unsigned long)((300)*(64000000/4000.0)));
  3278   001730  0E19               	movlw	25
  3279   001732  6E28               	movwf	(??_motor_response+1)^0,c
  3280   001734  0E5A               	movlw	90
  3281   001736  6E27               	movwf	??_motor_response^0,c
  3282   001738  0EB2               	movlw	178
  3283   00173A                     u4147:
  3284   00173A  2EE8               	decfsz	wreg,f,c
  3285   00173C  D7FE               	bra	u4147
  3286   00173E  2E27               	decfsz	??_motor_response^0,f,c
  3287   001740  D7FC               	bra	u4147
  3288   001742  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3289   001744  D7FA               	bra	u4147
  3290   001746                     
  3291                           ;color.c: 189:         for (int j = 0; j <= 12; j++) {
  3292   001746  0E00               	movlw	0
  3293   001748  0100               	movlb	0	; () banked
  3294   00174A  6FBB               	movwf	(motor_response@j_555+1)& (0+255),b
  3295   00174C  0E00               	movlw	0
  3296   00174E  6FBA               	movwf	motor_response@j_555& (0+255),b
  3297   001750                     
  3298                           ; BSR set to: 0
  3299   001750  BFBB               	btfsc	(motor_response@j_555+1)& (0+255),7,b
  3300   001752  EFB4  F00B         	goto	u3201
  3301   001756  51BB               	movf	(motor_response@j_555+1)& (0+255),w,b
  3302   001758  E109               	bnz	u3200
  3303   00175A  0E0D               	movlw	13
  3304   00175C  5DBA               	subwf	motor_response@j_555& (0+255),w,b
  3305   00175E  A0D8               	btfss	status,0,c
  3306   001760  EFB4  F00B         	goto	u3201
  3307   001764  EFB6  F00B         	goto	u3200
  3308   001768                     u3201:
  3309   001768  EFB8  F00B         	goto	l3864
  3310   00176C                     u3200:
  3311   00176C  EFF5  F00B         	goto	l3872
  3312   001770                     l3864:
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;color.c: 190:             turnLeft(mL, mR);
  3316   001770  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  3317   001774  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3318   001778  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  3319   00177C  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3320   001780  ECCE  F019         	call	_turnLeft	;wreg free
  3321   001784                     
  3322                           ;color.c: 191:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3323   001784  0E03               	movlw	3
  3324   001786  6E28               	movwf	(??_motor_response+1)^0,c
  3325   001788  0E70               	movlw	112
  3326   00178A  6E27               	movwf	??_motor_response^0,c
  3327   00178C  0E5C               	movlw	92
  3328   00178E                     u4157:
  3329   00178E  2EE8               	decfsz	wreg,f,c
  3330   001790  D7FE               	bra	u4157
  3331   001792  2E27               	decfsz	??_motor_response^0,f,c
  3332   001794  D7FC               	bra	u4157
  3333   001796  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3334   001798  D7FA               	bra	u4157
  3335   00179A  D000               	nop2	
  3336   00179C                     
  3337                           ;color.c: 192:             norm_stop(mL, mR);
  3338   00179C  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3339   0017A0  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3340   0017A4  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3341   0017A8  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3342   0017AC  EC6D  F01B         	call	_norm_stop	;wreg free
  3343                           
  3344                           ;color.c: 193:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3345   0017B0  0E03               	movlw	3
  3346   0017B2  6E28               	movwf	(??_motor_response+1)^0,c
  3347   0017B4  0E70               	movlw	112
  3348   0017B6  6E27               	movwf	??_motor_response^0,c
  3349   0017B8  0E5C               	movlw	92
  3350   0017BA                     u4167:
  3351   0017BA  2EE8               	decfsz	wreg,f,c
  3352   0017BC  D7FE               	bra	u4167
  3353   0017BE  2E27               	decfsz	??_motor_response^0,f,c
  3354   0017C0  D7FC               	bra	u4167
  3355   0017C2  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3356   0017C4  D7FA               	bra	u4167
  3357   0017C6  D000               	nop2	
  3358   0017C8                     
  3359                           ;color.c: 194:         }
  3360   0017C8  0100               	movlb	0	; () banked
  3361   0017CA  4BBA               	infsnz	motor_response@j_555& (0+255),f,b
  3362   0017CC  2BBB               	incf	(motor_response@j_555+1)& (0+255),f,b
  3363   0017CE  BFBB               	btfsc	(motor_response@j_555+1)& (0+255),7,b
  3364   0017D0  EFF3  F00B         	goto	u3211
  3365   0017D4  51BB               	movf	(motor_response@j_555+1)& (0+255),w,b
  3366   0017D6  E109               	bnz	u3210
  3367   0017D8  0E0D               	movlw	13
  3368   0017DA  5DBA               	subwf	motor_response@j_555& (0+255),w,b
  3369   0017DC  A0D8               	btfss	status,0,c
  3370   0017DE  EFF3  F00B         	goto	u3211
  3371   0017E2  EFF5  F00B         	goto	u3210
  3372   0017E6                     u3211:
  3373   0017E6  EFB8  F00B         	goto	l3864
  3374   0017EA                     u3210:
  3375   0017EA                     l3872:
  3376                           
  3377                           ; BSR set to: 0
  3378                           ;color.c: 195:         return 5;
  3379   0017EA  0E05               	movlw	5
  3380   0017EC  EFB8  F00E         	goto	l119
  3381   0017F0                     l3878:
  3382   0017F0  0E00               	movlw	0
  3383   0017F2  6E09               	movwf	___flge@ff1^0,c
  3384   0017F4  0E00               	movlw	0
  3385   0017F6  6E0A               	movwf	(___flge@ff1+1)^0,c
  3386   0017F8  0EB0               	movlw	176
  3387   0017FA  6E0B               	movwf	(___flge@ff1+2)^0,c
  3388   0017FC  0E40               	movlw	64
  3389   0017FE  6E0C               	movwf	(___flge@ff1+3)^0,c
  3390   001800  EE20 F018          	lfsr	2,24
  3391   001804  5021               	movf	motor_response@temp^0,w,c
  3392   001806  26D9               	addwf	fsr2l,f,c
  3393   001808  5022               	movf	(motor_response@temp+1)^0,w,c
  3394   00180A  22DA               	addwfc	fsr2h,f,c
  3395   00180C  CFDE F00D          	movff	postinc2,___flge@ff2
  3396   001810  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3397   001814  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3398   001818  CFDE F010          	movff	postinc2,___flge@ff2+3
  3399   00181C  EC45  F017         	call	___flge	;wreg free
  3400   001820  B0D8               	btfsc	status,0,c
  3401   001822  EF15  F00C         	goto	u3221
  3402   001826  EF17  F00C         	goto	u3220
  3403   00182A                     u3221:
  3404   00182A  EF07  F00D         	goto	l3910
  3405   00182E                     u3220:
  3406   00182E  EE20 F018          	lfsr	2,24
  3407   001832  5021               	movf	motor_response@temp^0,w,c
  3408   001834  26D9               	addwf	fsr2l,f,c
  3409   001836  5022               	movf	(motor_response@temp+1)^0,w,c
  3410   001838  22DA               	addwfc	fsr2h,f,c
  3411   00183A  CFDE F009          	movff	postinc2,___flge@ff1
  3412   00183E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3413   001842  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3414   001846  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3415   00184A  0E00               	movlw	0
  3416   00184C  6E0D               	movwf	___flge@ff2^0,c
  3417   00184E  0E00               	movlw	0
  3418   001850  6E0E               	movwf	(___flge@ff2+1)^0,c
  3419   001852  0EC0               	movlw	192
  3420   001854  6E0F               	movwf	(___flge@ff2+2)^0,c
  3421   001856  0E40               	movlw	64
  3422   001858  6E10               	movwf	(___flge@ff2+3)^0,c
  3423   00185A  EC45  F017         	call	___flge	;wreg free
  3424   00185E  B0D8               	btfsc	status,0,c
  3425   001860  EF34  F00C         	goto	u3231
  3426   001864  EF36  F00C         	goto	u3230
  3427   001868                     u3231:
  3428   001868  EF07  F00D         	goto	l3910
  3429   00186C                     u3230:
  3430   00186C  0E33               	movlw	51
  3431   00186E  6E09               	movwf	___flge@ff1^0,c
  3432   001870  0E33               	movlw	51
  3433   001872  6E0A               	movwf	(___flge@ff1+1)^0,c
  3434   001874  0EB3               	movlw	179
  3435   001876  6E0B               	movwf	(___flge@ff1+2)^0,c
  3436   001878  0E3F               	movlw	63
  3437   00187A  6E0C               	movwf	(___flge@ff1+3)^0,c
  3438   00187C  EE20 F010          	lfsr	2,16
  3439   001880  5021               	movf	motor_response@temp^0,w,c
  3440   001882  26D9               	addwf	fsr2l,f,c
  3441   001884  5022               	movf	(motor_response@temp+1)^0,w,c
  3442   001886  22DA               	addwfc	fsr2h,f,c
  3443   001888  CFDE F00D          	movff	postinc2,___flge@ff2
  3444   00188C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3445   001890  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3446   001894  CFDE F010          	movff	postinc2,___flge@ff2+3
  3447   001898  EC45  F017         	call	___flge	;wreg free
  3448   00189C  B0D8               	btfsc	status,0,c
  3449   00189E  EF53  F00C         	goto	u3241
  3450   0018A2  EF55  F00C         	goto	u3240
  3451   0018A6                     u3241:
  3452   0018A6  EF07  F00D         	goto	l3910
  3453   0018AA                     u3240:
  3454   0018AA  EE20 F010          	lfsr	2,16
  3455   0018AE  5021               	movf	motor_response@temp^0,w,c
  3456   0018B0  26D9               	addwf	fsr2l,f,c
  3457   0018B2  5022               	movf	(motor_response@temp+1)^0,w,c
  3458   0018B4  22DA               	addwfc	fsr2h,f,c
  3459   0018B6  CFDE F009          	movff	postinc2,___flge@ff1
  3460   0018BA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3461   0018BE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3462   0018C2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3463   0018C6  0E66               	movlw	102
  3464   0018C8  6E0D               	movwf	___flge@ff2^0,c
  3465   0018CA  0E66               	movlw	102
  3466   0018CC  6E0E               	movwf	(___flge@ff2+1)^0,c
  3467   0018CE  0EE6               	movlw	230
  3468   0018D0  6E0F               	movwf	(___flge@ff2+2)^0,c
  3469   0018D2  0E3F               	movlw	63
  3470   0018D4  6E10               	movwf	(___flge@ff2+3)^0,c
  3471   0018D6  EC45  F017         	call	___flge	;wreg free
  3472   0018DA  B0D8               	btfsc	status,0,c
  3473   0018DC  EF72  F00C         	goto	u3251
  3474   0018E0  EF74  F00C         	goto	u3250
  3475   0018E4                     u3251:
  3476   0018E4  EF07  F00D         	goto	l3910
  3477   0018E8                     u3250:
  3478   0018E8  0E33               	movlw	51
  3479   0018EA  6E09               	movwf	___flge@ff1^0,c
  3480   0018EC  0E33               	movlw	51
  3481   0018EE  6E0A               	movwf	(___flge@ff1+1)^0,c
  3482   0018F0  0E83               	movlw	131
  3483   0018F2  6E0B               	movwf	(___flge@ff1+2)^0,c
  3484   0018F4  0E40               	movlw	64
  3485   0018F6  6E0C               	movwf	(___flge@ff1+3)^0,c
  3486   0018F8  EE20 F014          	lfsr	2,20
  3487   0018FC  5021               	movf	motor_response@temp^0,w,c
  3488   0018FE  26D9               	addwf	fsr2l,f,c
  3489   001900  5022               	movf	(motor_response@temp+1)^0,w,c
  3490   001902  22DA               	addwfc	fsr2h,f,c
  3491   001904  CFDE F00D          	movff	postinc2,___flge@ff2
  3492   001908  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3493   00190C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3494   001910  CFDE F010          	movff	postinc2,___flge@ff2+3
  3495   001914  EC45  F017         	call	___flge	;wreg free
  3496   001918  B0D8               	btfsc	status,0,c
  3497   00191A  EF91  F00C         	goto	u3261
  3498   00191E  EF93  F00C         	goto	u3260
  3499   001922                     u3261:
  3500   001922  EF07  F00D         	goto	l3910
  3501   001926                     u3260:
  3502   001926  EE20 F014          	lfsr	2,20
  3503   00192A  5021               	movf	motor_response@temp^0,w,c
  3504   00192C  26D9               	addwf	fsr2l,f,c
  3505   00192E  5022               	movf	(motor_response@temp+1)^0,w,c
  3506   001930  22DA               	addwfc	fsr2h,f,c
  3507   001932  CFDE F009          	movff	postinc2,___flge@ff1
  3508   001936  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3509   00193A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3510   00193E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3511   001942  0E00               	movlw	0
  3512   001944  6E0D               	movwf	___flge@ff2^0,c
  3513   001946  0E00               	movlw	0
  3514   001948  6E0E               	movwf	(___flge@ff2+1)^0,c
  3515   00194A  0E90               	movlw	144
  3516   00194C  6E0F               	movwf	(___flge@ff2+2)^0,c
  3517   00194E  0E40               	movlw	64
  3518   001950  6E10               	movwf	(___flge@ff2+3)^0,c
  3519   001952  EC45  F017         	call	___flge	;wreg free
  3520   001956  B0D8               	btfsc	status,0,c
  3521   001958  EFB0  F00C         	goto	u3271
  3522   00195C  EFB2  F00C         	goto	u3270
  3523   001960                     u3271:
  3524   001960  EF07  F00D         	goto	l3910
  3525   001964                     u3270:
  3526   001964                     
  3527                           ;color.c: 199:         for (int j = 0; j <= 23; j++) {
  3528   001964  0E00               	movlw	0
  3529   001966  0100               	movlb	0	; () banked
  3530   001968  6FBD               	movwf	(motor_response@j_556+1)& (0+255),b
  3531   00196A  0E00               	movlw	0
  3532   00196C  6FBC               	movwf	motor_response@j_556& (0+255),b
  3533   00196E                     
  3534                           ; BSR set to: 0
  3535   00196E  BFBD               	btfsc	(motor_response@j_556+1)& (0+255),7,b
  3536   001970  EFC3  F00C         	goto	u3281
  3537   001974  51BD               	movf	(motor_response@j_556+1)& (0+255),w,b
  3538   001976  E109               	bnz	u3280
  3539   001978  0E18               	movlw	24
  3540   00197A  5DBC               	subwf	motor_response@j_556& (0+255),w,b
  3541   00197C  A0D8               	btfss	status,0,c
  3542   00197E  EFC3  F00C         	goto	u3281
  3543   001982  EFC5  F00C         	goto	u3280
  3544   001986                     u3281:
  3545   001986  EFC7  F00C         	goto	l3896
  3546   00198A                     u3280:
  3547   00198A  EF04  F00D         	goto	l3904
  3548   00198E                     l3896:
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;color.c: 200:             turnRight(mL, mR);
  3552   00198E  C023  F01C         	movff	motor_response@mL,turnRight@mL
  3553   001992  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  3554   001996  C025  F01E         	movff	motor_response@mR,turnRight@mR
  3555   00199A  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  3556   00199E  EC95  F019         	call	_turnRight	;wreg free
  3557   0019A2                     
  3558                           ;color.c: 201:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3559   0019A2  0E03               	movlw	3
  3560   0019A4  6E28               	movwf	(??_motor_response+1)^0,c
  3561   0019A6  0E70               	movlw	112
  3562   0019A8  6E27               	movwf	??_motor_response^0,c
  3563   0019AA  0E5C               	movlw	92
  3564   0019AC                     u4177:
  3565   0019AC  2EE8               	decfsz	wreg,f,c
  3566   0019AE  D7FE               	bra	u4177
  3567   0019B0  2E27               	decfsz	??_motor_response^0,f,c
  3568   0019B2  D7FC               	bra	u4177
  3569   0019B4  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3570   0019B6  D7FA               	bra	u4177
  3571   0019B8  D000               	nop2	
  3572   0019BA                     
  3573                           ;color.c: 202:             norm_stop(mL, mR);
  3574   0019BA  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3575   0019BE  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3576   0019C2  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3577   0019C6  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3578   0019CA  EC6D  F01B         	call	_norm_stop	;wreg free
  3579                           
  3580                           ;color.c: 203:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3581   0019CE  0E03               	movlw	3
  3582   0019D0  6E28               	movwf	(??_motor_response+1)^0,c
  3583   0019D2  0E70               	movlw	112
  3584   0019D4  6E27               	movwf	??_motor_response^0,c
  3585   0019D6  0E5C               	movlw	92
  3586   0019D8                     u4187:
  3587   0019D8  2EE8               	decfsz	wreg,f,c
  3588   0019DA  D7FE               	bra	u4187
  3589   0019DC  2E27               	decfsz	??_motor_response^0,f,c
  3590   0019DE  D7FC               	bra	u4187
  3591   0019E0  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3592   0019E2  D7FA               	bra	u4187
  3593   0019E4  D000               	nop2	
  3594   0019E6                     
  3595                           ;color.c: 204:         }
  3596   0019E6  0100               	movlb	0	; () banked
  3597   0019E8  4BBC               	infsnz	motor_response@j_556& (0+255),f,b
  3598   0019EA  2BBD               	incf	(motor_response@j_556+1)& (0+255),f,b
  3599   0019EC  BFBD               	btfsc	(motor_response@j_556+1)& (0+255),7,b
  3600   0019EE  EF02  F00D         	goto	u3291
  3601   0019F2  51BD               	movf	(motor_response@j_556+1)& (0+255),w,b
  3602   0019F4  E109               	bnz	u3290
  3603   0019F6  0E18               	movlw	24
  3604   0019F8  5DBC               	subwf	motor_response@j_556& (0+255),w,b
  3605   0019FA  A0D8               	btfss	status,0,c
  3606   0019FC  EF02  F00D         	goto	u3291
  3607   001A00  EF04  F00D         	goto	u3290
  3608   001A04                     u3291:
  3609   001A04  EFC7  F00C         	goto	l3896
  3610   001A08                     u3290:
  3611   001A08                     l3904:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;color.c: 205:         return 6;
  3615   001A08  0E06               	movlw	6
  3616   001A0A  EFB8  F00E         	goto	l119
  3617   001A0E                     l3910:
  3618   001A0E  0E00               	movlw	0
  3619   001A10  6E09               	movwf	___flge@ff1^0,c
  3620   001A12  0E00               	movlw	0
  3621   001A14  6E0A               	movwf	(___flge@ff1+1)^0,c
  3622   001A16  0E40               	movlw	64
  3623   001A18  6E0B               	movwf	(___flge@ff1+2)^0,c
  3624   001A1A  0E40               	movlw	64
  3625   001A1C  6E0C               	movwf	(___flge@ff1+3)^0,c
  3626   001A1E  EE20 F018          	lfsr	2,24
  3627   001A22  5021               	movf	motor_response@temp^0,w,c
  3628   001A24  26D9               	addwf	fsr2l,f,c
  3629   001A26  5022               	movf	(motor_response@temp+1)^0,w,c
  3630   001A28  22DA               	addwfc	fsr2h,f,c
  3631   001A2A  CFDE F00D          	movff	postinc2,___flge@ff2
  3632   001A2E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3633   001A32  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3634   001A36  CFDE F010          	movff	postinc2,___flge@ff2+3
  3635   001A3A  EC45  F017         	call	___flge	;wreg free
  3636   001A3E  B0D8               	btfsc	status,0,c
  3637   001A40  EF24  F00D         	goto	u3301
  3638   001A44  EF26  F00D         	goto	u3300
  3639   001A48                     u3301:
  3640   001A48  EF16  F00E         	goto	l3942
  3641   001A4C                     u3300:
  3642   001A4C  EE20 F018          	lfsr	2,24
  3643   001A50  5021               	movf	motor_response@temp^0,w,c
  3644   001A52  26D9               	addwf	fsr2l,f,c
  3645   001A54  5022               	movf	(motor_response@temp+1)^0,w,c
  3646   001A56  22DA               	addwfc	fsr2h,f,c
  3647   001A58  CFDE F009          	movff	postinc2,___flge@ff1
  3648   001A5C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3649   001A60  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3650   001A64  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3651   001A68  0E33               	movlw	51
  3652   001A6A  6E0D               	movwf	___flge@ff2^0,c
  3653   001A6C  0E33               	movlw	51
  3654   001A6E  6E0E               	movwf	(___flge@ff2+1)^0,c
  3655   001A70  0E53               	movlw	83
  3656   001A72  6E0F               	movwf	(___flge@ff2+2)^0,c
  3657   001A74  0E40               	movlw	64
  3658   001A76  6E10               	movwf	(___flge@ff2+3)^0,c
  3659   001A78  EC45  F017         	call	___flge	;wreg free
  3660   001A7C  B0D8               	btfsc	status,0,c
  3661   001A7E  EF43  F00D         	goto	u3311
  3662   001A82  EF45  F00D         	goto	u3310
  3663   001A86                     u3311:
  3664   001A86  EF16  F00E         	goto	l3942
  3665   001A8A                     u3310:
  3666   001A8A  0E00               	movlw	0
  3667   001A8C  6E09               	movwf	___flge@ff1^0,c
  3668   001A8E  0E00               	movlw	0
  3669   001A90  6E0A               	movwf	(___flge@ff1+1)^0,c
  3670   001A92  0E60               	movlw	96
  3671   001A94  6E0B               	movwf	(___flge@ff1+2)^0,c
  3672   001A96  0E40               	movlw	64
  3673   001A98  6E0C               	movwf	(___flge@ff1+3)^0,c
  3674   001A9A  EE20 F010          	lfsr	2,16
  3675   001A9E  5021               	movf	motor_response@temp^0,w,c
  3676   001AA0  26D9               	addwf	fsr2l,f,c
  3677   001AA2  5022               	movf	(motor_response@temp+1)^0,w,c
  3678   001AA4  22DA               	addwfc	fsr2h,f,c
  3679   001AA6  CFDE F00D          	movff	postinc2,___flge@ff2
  3680   001AAA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3681   001AAE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3682   001AB2  CFDE F010          	movff	postinc2,___flge@ff2+3
  3683   001AB6  EC45  F017         	call	___flge	;wreg free
  3684   001ABA  B0D8               	btfsc	status,0,c
  3685   001ABC  EF62  F00D         	goto	u3321
  3686   001AC0  EF64  F00D         	goto	u3320
  3687   001AC4                     u3321:
  3688   001AC4  EF16  F00E         	goto	l3942
  3689   001AC8                     u3320:
  3690   001AC8  EE20 F010          	lfsr	2,16
  3691   001ACC  5021               	movf	motor_response@temp^0,w,c
  3692   001ACE  26D9               	addwf	fsr2l,f,c
  3693   001AD0  5022               	movf	(motor_response@temp+1)^0,w,c
  3694   001AD2  22DA               	addwfc	fsr2h,f,c
  3695   001AD4  CFDE F009          	movff	postinc2,___flge@ff1
  3696   001AD8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3697   001ADC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3698   001AE0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3699   001AE4  0E00               	movlw	0
  3700   001AE6  6E0D               	movwf	___flge@ff2^0,c
  3701   001AE8  0E00               	movlw	0
  3702   001AEA  6E0E               	movwf	(___flge@ff2+1)^0,c
  3703   001AEC  0E80               	movlw	128
  3704   001AEE  6E0F               	movwf	(___flge@ff2+2)^0,c
  3705   001AF0  0E40               	movlw	64
  3706   001AF2  6E10               	movwf	(___flge@ff2+3)^0,c
  3707   001AF4  EC45  F017         	call	___flge	;wreg free
  3708   001AF8  B0D8               	btfsc	status,0,c
  3709   001AFA  EF81  F00D         	goto	u3331
  3710   001AFE  EF83  F00D         	goto	u3330
  3711   001B02                     u3331:
  3712   001B02  EF16  F00E         	goto	l3942
  3713   001B06                     u3330:
  3714   001B06  0E66               	movlw	102
  3715   001B08  6E09               	movwf	___flge@ff1^0,c
  3716   001B0A  0E66               	movlw	102
  3717   001B0C  6E0A               	movwf	(___flge@ff1+1)^0,c
  3718   001B0E  0E06               	movlw	6
  3719   001B10  6E0B               	movwf	(___flge@ff1+2)^0,c
  3720   001B12  0E40               	movlw	64
  3721   001B14  6E0C               	movwf	(___flge@ff1+3)^0,c
  3722   001B16  EE20 F014          	lfsr	2,20
  3723   001B1A  5021               	movf	motor_response@temp^0,w,c
  3724   001B1C  26D9               	addwf	fsr2l,f,c
  3725   001B1E  5022               	movf	(motor_response@temp+1)^0,w,c
  3726   001B20  22DA               	addwfc	fsr2h,f,c
  3727   001B22  CFDE F00D          	movff	postinc2,___flge@ff2
  3728   001B26  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3729   001B2A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3730   001B2E  CFDE F010          	movff	postinc2,___flge@ff2+3
  3731   001B32  EC45  F017         	call	___flge	;wreg free
  3732   001B36  B0D8               	btfsc	status,0,c
  3733   001B38  EFA0  F00D         	goto	u3341
  3734   001B3C  EFA2  F00D         	goto	u3340
  3735   001B40                     u3341:
  3736   001B40  EF16  F00E         	goto	l3942
  3737   001B44                     u3340:
  3738   001B44  EE20 F014          	lfsr	2,20
  3739   001B48  5021               	movf	motor_response@temp^0,w,c
  3740   001B4A  26D9               	addwf	fsr2l,f,c
  3741   001B4C  5022               	movf	(motor_response@temp+1)^0,w,c
  3742   001B4E  22DA               	addwfc	fsr2h,f,c
  3743   001B50  CFDE F009          	movff	postinc2,___flge@ff1
  3744   001B54  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3745   001B58  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3746   001B5C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3747   001B60  0E00               	movlw	0
  3748   001B62  6E0D               	movwf	___flge@ff2^0,c
  3749   001B64  0E00               	movlw	0
  3750   001B66  6E0E               	movwf	(___flge@ff2+1)^0,c
  3751   001B68  0E20               	movlw	32
  3752   001B6A  6E0F               	movwf	(___flge@ff2+2)^0,c
  3753   001B6C  0E40               	movlw	64
  3754   001B6E  6E10               	movwf	(___flge@ff2+3)^0,c
  3755   001B70  EC45  F017         	call	___flge	;wreg free
  3756   001B74  B0D8               	btfsc	status,0,c
  3757   001B76  EFBF  F00D         	goto	u3351
  3758   001B7A  EFC1  F00D         	goto	u3350
  3759   001B7E                     u3351:
  3760   001B7E  EF16  F00E         	goto	l3942
  3761   001B82                     u3350:
  3762   001B82                     
  3763                           ;color.c: 209:         for (int j = 0; j <= 20; j++) {
  3764   001B82  0E00               	movlw	0
  3765   001B84  0100               	movlb	0	; () banked
  3766   001B86  6FBF               	movwf	(motor_response@j_557+1)& (0+255),b
  3767   001B88  0E00               	movlw	0
  3768   001B8A  6FBE               	movwf	motor_response@j_557& (0+255),b
  3769   001B8C                     
  3770                           ; BSR set to: 0
  3771   001B8C  BFBF               	btfsc	(motor_response@j_557+1)& (0+255),7,b
  3772   001B8E  EFD2  F00D         	goto	u3361
  3773   001B92  51BF               	movf	(motor_response@j_557+1)& (0+255),w,b
  3774   001B94  E109               	bnz	u3360
  3775   001B96  0E15               	movlw	21
  3776   001B98  5DBE               	subwf	motor_response@j_557& (0+255),w,b
  3777   001B9A  A0D8               	btfss	status,0,c
  3778   001B9C  EFD2  F00D         	goto	u3361
  3779   001BA0  EFD4  F00D         	goto	u3360
  3780   001BA4                     u3361:
  3781   001BA4  EFD6  F00D         	goto	l3928
  3782   001BA8                     u3360:
  3783   001BA8  EF13  F00E         	goto	l3936
  3784   001BAC                     l3928:
  3785                           
  3786                           ; BSR set to: 0
  3787                           ;color.c: 210:             turnLeft(mL, mR);
  3788   001BAC  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  3789   001BB0  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3790   001BB4  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  3791   001BB8  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3792   001BBC  ECCE  F019         	call	_turnLeft	;wreg free
  3793   001BC0                     
  3794                           ;color.c: 211:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3795   001BC0  0E03               	movlw	3
  3796   001BC2  6E28               	movwf	(??_motor_response+1)^0,c
  3797   001BC4  0E70               	movlw	112
  3798   001BC6  6E27               	movwf	??_motor_response^0,c
  3799   001BC8  0E5C               	movlw	92
  3800   001BCA                     u4197:
  3801   001BCA  2EE8               	decfsz	wreg,f,c
  3802   001BCC  D7FE               	bra	u4197
  3803   001BCE  2E27               	decfsz	??_motor_response^0,f,c
  3804   001BD0  D7FC               	bra	u4197
  3805   001BD2  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3806   001BD4  D7FA               	bra	u4197
  3807   001BD6  D000               	nop2	
  3808   001BD8                     
  3809                           ;color.c: 212:             norm_stop(mL, mR);
  3810   001BD8  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3811   001BDC  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3812   001BE0  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3813   001BE4  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3814   001BE8  EC6D  F01B         	call	_norm_stop	;wreg free
  3815                           
  3816                           ;color.c: 213:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3817   001BEC  0E03               	movlw	3
  3818   001BEE  6E28               	movwf	(??_motor_response+1)^0,c
  3819   001BF0  0E70               	movlw	112
  3820   001BF2  6E27               	movwf	??_motor_response^0,c
  3821   001BF4  0E5C               	movlw	92
  3822   001BF6                     u4207:
  3823   001BF6  2EE8               	decfsz	wreg,f,c
  3824   001BF8  D7FE               	bra	u4207
  3825   001BFA  2E27               	decfsz	??_motor_response^0,f,c
  3826   001BFC  D7FC               	bra	u4207
  3827   001BFE  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3828   001C00  D7FA               	bra	u4207
  3829   001C02  D000               	nop2	
  3830   001C04                     
  3831                           ;color.c: 214:         }
  3832   001C04  0100               	movlb	0	; () banked
  3833   001C06  4BBE               	infsnz	motor_response@j_557& (0+255),f,b
  3834   001C08  2BBF               	incf	(motor_response@j_557+1)& (0+255),f,b
  3835   001C0A  BFBF               	btfsc	(motor_response@j_557+1)& (0+255),7,b
  3836   001C0C  EF11  F00E         	goto	u3371
  3837   001C10  51BF               	movf	(motor_response@j_557+1)& (0+255),w,b
  3838   001C12  E109               	bnz	u3370
  3839   001C14  0E15               	movlw	21
  3840   001C16  5DBE               	subwf	motor_response@j_557& (0+255),w,b
  3841   001C18  A0D8               	btfss	status,0,c
  3842   001C1A  EF11  F00E         	goto	u3371
  3843   001C1E  EF13  F00E         	goto	u3370
  3844   001C22                     u3371:
  3845   001C22  EFD6  F00D         	goto	l3928
  3846   001C26                     u3370:
  3847   001C26                     l3936:
  3848                           
  3849                           ; BSR set to: 0
  3850                           ;color.c: 215:         return 7;
  3851   001C26  0E07               	movlw	7
  3852   001C28  EFB8  F00E         	goto	l119
  3853   001C2C                     l3942:
  3854   001C2C  0E00               	movlw	0
  3855   001C2E  6E09               	movwf	___flge@ff1^0,c
  3856   001C30  0E00               	movlw	0
  3857   001C32  6E0A               	movwf	(___flge@ff1+1)^0,c
  3858   001C34  0E40               	movlw	64
  3859   001C36  6E0B               	movwf	(___flge@ff1+2)^0,c
  3860   001C38  0E41               	movlw	65
  3861   001C3A  6E0C               	movwf	(___flge@ff1+3)^0,c
  3862   001C3C  EE20 F01C          	lfsr	2,28
  3863   001C40  5021               	movf	motor_response@temp^0,w,c
  3864   001C42  26D9               	addwf	fsr2l,f,c
  3865   001C44  5022               	movf	(motor_response@temp+1)^0,w,c
  3866   001C46  22DA               	addwfc	fsr2h,f,c
  3867   001C48  CFDE F00D          	movff	postinc2,___flge@ff2
  3868   001C4C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3869   001C50  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3870   001C54  CFDE F010          	movff	postinc2,___flge@ff2+3
  3871   001C58  EC45  F017         	call	___flge	;wreg free
  3872   001C5C  B0D8               	btfsc	status,0,c
  3873   001C5E  EF33  F00E         	goto	u3381
  3874   001C62  EF35  F00E         	goto	u3380
  3875   001C66                     u3381:
  3876   001C66  EFB8  F00E         	goto	l136
  3877   001C6A                     u3380:
  3878   001C6A                     
  3879                           ;color.c: 219:         motor_return = 1;
  3880   001C6A  0E01               	movlw	1
  3881   001C6C  0100               	movlb	0	; () banked
  3882   001C6E  6FA2               	movwf	_motor_return& (0+255),b
  3883   001C70                     
  3884                           ; BSR set to: 0
  3885                           ;color.c: 220:         reverse(mL, mR);
  3886   001C70  C023  F01C         	movff	motor_response@mL,reverse@mL
  3887   001C74  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  3888   001C78  C025  F01E         	movff	motor_response@mR,reverse@mR
  3889   001C7C  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  3890   001C80  ECC7  F017         	call	_reverse	;wreg free
  3891   001C84                     
  3892                           ;color.c: 221:         _delay((unsigned long)((400)*(64000000/4000.0)));
  3893   001C84  0E21               	movlw	33
  3894   001C86  6E28               	movwf	(??_motor_response+1)^0,c
  3895   001C88  0E78               	movlw	120
  3896   001C8A  6E27               	movwf	??_motor_response^0,c
  3897   001C8C  0E98               	movlw	152
  3898   001C8E                     u4217:
  3899   001C8E  2EE8               	decfsz	wreg,f,c
  3900   001C90  D7FE               	bra	u4217
  3901   001C92  2E27               	decfsz	??_motor_response^0,f,c
  3902   001C94  D7FC               	bra	u4217
  3903   001C96  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3904   001C98  D7FA               	bra	u4217
  3905   001C9A  D000               	nop2	
  3906   001C9C                     
  3907                           ;color.c: 222:         norm_stop(mL, mR);
  3908   001C9C  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3909   001CA0  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3910   001CA4  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3911   001CA8  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3912   001CAC  EC6D  F01B         	call	_norm_stop	;wreg free
  3913   001CB0                     
  3914                           ;color.c: 223:         _delay((unsigned long)((80)*(64000000/4000.0)));
  3915   001CB0  0E07               	movlw	7
  3916   001CB2  6E28               	movwf	(??_motor_response+1)^0,c
  3917   001CB4  0E7F               	movlw	127
  3918   001CB6  6E27               	movwf	??_motor_response^0,c
  3919   001CB8  0E50               	movlw	80
  3920   001CBA                     u4227:
  3921   001CBA  2EE8               	decfsz	wreg,f,c
  3922   001CBC  D7FE               	bra	u4227
  3923   001CBE  2E27               	decfsz	??_motor_response^0,f,c
  3924   001CC0  D7FC               	bra	u4227
  3925   001CC2  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3926   001CC4  D7FA               	bra	u4227
  3927                           
  3928                           ;color.c: 224:         for (int j = 0; j <= 45; j++) {
  3929   001CC6  0E00               	movlw	0
  3930   001CC8  0100               	movlb	0	; () banked
  3931   001CCA  6FC1               	movwf	(motor_response@j_558+1)& (0+255),b
  3932   001CCC  0E00               	movlw	0
  3933   001CCE  6FC0               	movwf	motor_response@j_558& (0+255),b
  3934   001CD0                     
  3935                           ; BSR set to: 0
  3936   001CD0  BFC1               	btfsc	(motor_response@j_558+1)& (0+255),7,b
  3937   001CD2  EF74  F00E         	goto	u3391
  3938   001CD6  51C1               	movf	(motor_response@j_558+1)& (0+255),w,b
  3939   001CD8  E109               	bnz	u3390
  3940   001CDA  0E2E               	movlw	46
  3941   001CDC  5DC0               	subwf	motor_response@j_558& (0+255),w,b
  3942   001CDE  A0D8               	btfss	status,0,c
  3943   001CE0  EF74  F00E         	goto	u3391
  3944   001CE4  EF76  F00E         	goto	u3390
  3945   001CE8                     u3391:
  3946   001CE8  EF78  F00E         	goto	l3958
  3947   001CEC                     u3390:
  3948   001CEC  EFB5  F00E         	goto	l3966
  3949   001CF0                     l3958:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;color.c: 225:             turnLeft(mL, mR);
  3953   001CF0  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  3954   001CF4  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3955   001CF8  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  3956   001CFC  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3957   001D00  ECCE  F019         	call	_turnLeft	;wreg free
  3958   001D04                     
  3959                           ;color.c: 226:             _delay((unsigned long)((24)*(64000000/4000.0)));
  3960   001D04  0E02               	movlw	2
  3961   001D06  6E28               	movwf	(??_motor_response+1)^0,c
  3962   001D08  0EF3               	movlw	243
  3963   001D0A  6E27               	movwf	??_motor_response^0,c
  3964   001D0C  0EB0               	movlw	176
  3965   001D0E                     u4237:
  3966   001D0E  2EE8               	decfsz	wreg,f,c
  3967   001D10  D7FE               	bra	u4237
  3968   001D12  2E27               	decfsz	??_motor_response^0,f,c
  3969   001D14  D7FC               	bra	u4237
  3970   001D16  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3971   001D18  D7FA               	bra	u4237
  3972   001D1A  D000               	nop2	
  3973   001D1C                     
  3974                           ;color.c: 227:             norm_stop(mL, mR);
  3975   001D1C  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  3976   001D20  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3977   001D24  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  3978   001D28  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3979   001D2C  EC6D  F01B         	call	_norm_stop	;wreg free
  3980                           
  3981                           ;color.c: 228:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3982   001D30  0E03               	movlw	3
  3983   001D32  6E28               	movwf	(??_motor_response+1)^0,c
  3984   001D34  0E70               	movlw	112
  3985   001D36  6E27               	movwf	??_motor_response^0,c
  3986   001D38  0E5C               	movlw	92
  3987   001D3A                     u4247:
  3988   001D3A  2EE8               	decfsz	wreg,f,c
  3989   001D3C  D7FE               	bra	u4247
  3990   001D3E  2E27               	decfsz	??_motor_response^0,f,c
  3991   001D40  D7FC               	bra	u4247
  3992   001D42  2E28               	decfsz	(??_motor_response+1)^0,f,c
  3993   001D44  D7FA               	bra	u4247
  3994   001D46  D000               	nop2	
  3995   001D48                     
  3996                           ;color.c: 229:         }
  3997   001D48  0100               	movlb	0	; () banked
  3998   001D4A  4BC0               	infsnz	motor_response@j_558& (0+255),f,b
  3999   001D4C  2BC1               	incf	(motor_response@j_558+1)& (0+255),f,b
  4000   001D4E  BFC1               	btfsc	(motor_response@j_558+1)& (0+255),7,b
  4001   001D50  EFB3  F00E         	goto	u3401
  4002   001D54  51C1               	movf	(motor_response@j_558+1)& (0+255),w,b
  4003   001D56  E109               	bnz	u3400
  4004   001D58  0E2E               	movlw	46
  4005   001D5A  5DC0               	subwf	motor_response@j_558& (0+255),w,b
  4006   001D5C  A0D8               	btfss	status,0,c
  4007   001D5E  EFB3  F00E         	goto	u3401
  4008   001D62  EFB5  F00E         	goto	u3400
  4009   001D66                     u3401:
  4010   001D66  EF78  F00E         	goto	l3958
  4011   001D6A                     u3400:
  4012   001D6A                     l3966:
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;color.c: 232:         return 8;
  4016   001D6A  0E08               	movlw	8
  4017   001D6C  EFB8  F00E         	goto	l119
  4018   001D70                     l136:
  4019   001D70                     l119:
  4020   001D70  0012               	return		;funcret
  4021   001D72                     __end_of_motor_response:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _turnRight *****************
  4025 ;; Defined at:
  4026 ;;		line 144 in file "dc_motor.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4029 ;;		 -> main@mL(9), 
  4030 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4031 ;;		 -> main@mR(9), 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4043 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4047 ;;Total ram usage:        4 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 8
  4050 ;; This function calls:
  4051 ;;		_setMotorPWM
  4052 ;; This function is called by:
  4053 ;;		_motor_response
  4054 ;;		_motor_retrace
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text5
  4059   00332A                     __ptext5:
  4060                           	callstack 0
  4061   00332A                     _turnRight:
  4062                           	callstack 21
  4063   00332A                     
  4064                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  4065   00332A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  4066   00332E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  4067   003332  0E3C               	movlw	60
  4068   003334  6EDF               	movwf	indf2,c
  4069                           
  4070                           ;dc_motor.c: 147:     mR->power = 60;
  4071   003336  C01E  FFD9         	movff	turnRight@mR,fsr2l
  4072   00333A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  4073   00333E  0E3C               	movlw	60
  4074   003340  6EDF               	movwf	indf2,c
  4075   003342                     
  4076                           ;dc_motor.c: 148:     mL->brakemode = 1;
  4077   003342  EE20 F002          	lfsr	2,2
  4078   003346  501C               	movf	turnRight@mL^0,w,c
  4079   003348  26D9               	addwf	fsr2l,f,c
  4080   00334A  501D               	movf	(turnRight@mL+1)^0,w,c
  4081   00334C  22DA               	addwfc	fsr2h,f,c
  4082   00334E  0E01               	movlw	1
  4083   003350  6EDF               	movwf	indf2,c
  4084   003352                     
  4085                           ;dc_motor.c: 149:     mR->brakemode = 1;
  4086   003352  EE20 F002          	lfsr	2,2
  4087   003356  501E               	movf	turnRight@mR^0,w,c
  4088   003358  26D9               	addwf	fsr2l,f,c
  4089   00335A  501F               	movf	(turnRight@mR+1)^0,w,c
  4090   00335C  22DA               	addwfc	fsr2h,f,c
  4091   00335E  0E01               	movlw	1
  4092   003360  6EDF               	movwf	indf2,c
  4093   003362                     
  4094                           ;dc_motor.c: 150:     mR->direction = 0;
  4095   003362  EE20 F001          	lfsr	2,1
  4096   003366  501E               	movf	turnRight@mR^0,w,c
  4097   003368  26D9               	addwf	fsr2l,f,c
  4098   00336A  501F               	movf	(turnRight@mR+1)^0,w,c
  4099   00336C  22DA               	addwfc	fsr2h,f,c
  4100   00336E  0E00               	movlw	0
  4101   003370  6EDF               	movwf	indf2,c
  4102   003372                     
  4103                           ;dc_motor.c: 151:     mL->direction = 1;
  4104   003372  EE20 F001          	lfsr	2,1
  4105   003376  501C               	movf	turnRight@mL^0,w,c
  4106   003378  26D9               	addwf	fsr2l,f,c
  4107   00337A  501D               	movf	(turnRight@mL+1)^0,w,c
  4108   00337C  22DA               	addwfc	fsr2h,f,c
  4109   00337E  0E01               	movlw	1
  4110   003380  6EDF               	movwf	indf2,c
  4111   003382                     
  4112                           ;dc_motor.c: 152:     setMotorPWM(mL);
  4113   003382  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  4114   003386  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  4115   00338A  ECE6  F015         	call	_setMotorPWM	;wreg free
  4116   00338E                     
  4117                           ;dc_motor.c: 153:     setMotorPWM(mR);
  4118   00338E  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  4119   003392  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  4120   003396  ECE6  F015         	call	_setMotorPWM	;wreg free
  4121   00339A  0012               	return		;funcret
  4122   00339C                     __end_of_turnRight:
  4123                           	callstack 0
  4124                           
  4125 ;; *************** function _turnLeft *****************
  4126 ;; Defined at:
  4127 ;;		line 131 in file "dc_motor.c"
  4128 ;; Parameters:    Size  Location     Type
  4129 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4130 ;;		 -> main@mL(9), 
  4131 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4132 ;;		 -> main@mR(9), 
  4133 ;; Auto vars:     Size  Location     Type
  4134 ;;		None
  4135 ;; Return value:  Size  Location     Type
  4136 ;;                  1    wreg      void 
  4137 ;; Registers used:
  4138 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4139 ;; Tracked objects:
  4140 ;;		On entry : 0/0
  4141 ;;		On exit  : 0/0
  4142 ;;		Unchanged: 0/0
  4143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4144 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4148 ;;Total ram usage:        4 bytes
  4149 ;; Hardware stack levels used: 1
  4150 ;; Hardware stack levels required when called: 8
  4151 ;; This function calls:
  4152 ;;		_setMotorPWM
  4153 ;; This function is called by:
  4154 ;;		_motor_response
  4155 ;;		_motor_retrace
  4156 ;;		_main
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text6
  4161   00339C                     __ptext6:
  4162                           	callstack 0
  4163   00339C                     _turnLeft:
  4164                           	callstack 22
  4165   00339C                     
  4166                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  4167   00339C  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  4168   0033A0  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  4169   0033A4  0E3C               	movlw	60
  4170   0033A6  6EDF               	movwf	indf2,c
  4171                           
  4172                           ;dc_motor.c: 134:     mR->power = 60;
  4173   0033A8  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  4174   0033AC  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  4175   0033B0  0E3C               	movlw	60
  4176   0033B2  6EDF               	movwf	indf2,c
  4177   0033B4                     
  4178                           ;dc_motor.c: 135:     mL->brakemode = 1;
  4179   0033B4  EE20 F002          	lfsr	2,2
  4180   0033B8  501C               	movf	turnLeft@mL^0,w,c
  4181   0033BA  26D9               	addwf	fsr2l,f,c
  4182   0033BC  501D               	movf	(turnLeft@mL+1)^0,w,c
  4183   0033BE  22DA               	addwfc	fsr2h,f,c
  4184   0033C0  0E01               	movlw	1
  4185   0033C2  6EDF               	movwf	indf2,c
  4186   0033C4                     
  4187                           ;dc_motor.c: 136:     mR->brakemode = 1;
  4188   0033C4  EE20 F002          	lfsr	2,2
  4189   0033C8  501E               	movf	turnLeft@mR^0,w,c
  4190   0033CA  26D9               	addwf	fsr2l,f,c
  4191   0033CC  501F               	movf	(turnLeft@mR+1)^0,w,c
  4192   0033CE  22DA               	addwfc	fsr2h,f,c
  4193   0033D0  0E01               	movlw	1
  4194   0033D2  6EDF               	movwf	indf2,c
  4195   0033D4                     
  4196                           ;dc_motor.c: 137:     mL->direction = 0;
  4197   0033D4  EE20 F001          	lfsr	2,1
  4198   0033D8  501C               	movf	turnLeft@mL^0,w,c
  4199   0033DA  26D9               	addwf	fsr2l,f,c
  4200   0033DC  501D               	movf	(turnLeft@mL+1)^0,w,c
  4201   0033DE  22DA               	addwfc	fsr2h,f,c
  4202   0033E0  0E00               	movlw	0
  4203   0033E2  6EDF               	movwf	indf2,c
  4204   0033E4                     
  4205                           ;dc_motor.c: 138:     mR->direction = 1;
  4206   0033E4  EE20 F001          	lfsr	2,1
  4207   0033E8  501E               	movf	turnLeft@mR^0,w,c
  4208   0033EA  26D9               	addwf	fsr2l,f,c
  4209   0033EC  501F               	movf	(turnLeft@mR+1)^0,w,c
  4210   0033EE  22DA               	addwfc	fsr2h,f,c
  4211   0033F0  0E01               	movlw	1
  4212   0033F2  6EDF               	movwf	indf2,c
  4213   0033F4                     
  4214                           ;dc_motor.c: 139:     setMotorPWM(mL);
  4215   0033F4  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  4216   0033F8  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4217   0033FC  ECE6  F015         	call	_setMotorPWM	;wreg free
  4218   003400                     
  4219                           ;dc_motor.c: 140:     setMotorPWM(mR);
  4220   003400  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  4221   003404  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4222   003408  ECE6  F015         	call	_setMotorPWM	;wreg free
  4223   00340C  0012               	return		;funcret
  4224   00340E                     __end_of_turnLeft:
  4225                           	callstack 0
  4226                           
  4227 ;; *************** function _reverse *****************
  4228 ;; Defined at:
  4229 ;;		line 189 in file "dc_motor.c"
  4230 ;; Parameters:    Size  Location     Type
  4231 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4232 ;;		 -> main@mL(9), 
  4233 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4234 ;;		 -> main@mR(9), 
  4235 ;; Auto vars:     Size  Location     Type
  4236 ;;		None
  4237 ;; Return value:  Size  Location     Type
  4238 ;;                  1    wreg      void 
  4239 ;; Registers used:
  4240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4241 ;; Tracked objects:
  4242 ;;		On entry : 0/0
  4243 ;;		On exit  : 0/0
  4244 ;;		Unchanged: 0/0
  4245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4246 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4249 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4250 ;;Total ram usage:        5 bytes
  4251 ;; Hardware stack levels used: 1
  4252 ;; Hardware stack levels required when called: 8
  4253 ;; This function calls:
  4254 ;;		_setMotorPWM
  4255 ;; This function is called by:
  4256 ;;		_motor_response
  4257 ;;		_motor_retrace
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text7
  4262   002F8E                     __ptext7:
  4263                           	callstack 0
  4264   002F8E                     _reverse:
  4265                           	callstack 21
  4266   002F8E                     
  4267                           ;dc_motor.c: 189: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 190: {;dc_motor.c
      +                          : 191:     mL->power = 5;
  4268   002F8E  C01C  FFD9         	movff	reverse@mL,fsr2l
  4269   002F92  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  4270   002F96  0E05               	movlw	5
  4271   002F98  6EDF               	movwf	indf2,c
  4272                           
  4273                           ;dc_motor.c: 192:     mR->power = 5;
  4274   002F9A  C01E  FFD9         	movff	reverse@mR,fsr2l
  4275   002F9E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  4276   002FA2  0E05               	movlw	5
  4277   002FA4  6EDF               	movwf	indf2,c
  4278   002FA6                     
  4279                           ;dc_motor.c: 193:     mR->direction = 0;
  4280   002FA6  EE20 F001          	lfsr	2,1
  4281   002FAA  501E               	movf	reverse@mR^0,w,c
  4282   002FAC  26D9               	addwf	fsr2l,f,c
  4283   002FAE  501F               	movf	(reverse@mR+1)^0,w,c
  4284   002FB0  22DA               	addwfc	fsr2h,f,c
  4285   002FB2  0E00               	movlw	0
  4286   002FB4  6EDF               	movwf	indf2,c
  4287   002FB6                     
  4288                           ;dc_motor.c: 194:     mL->direction = 0;
  4289   002FB6  EE20 F001          	lfsr	2,1
  4290   002FBA  501C               	movf	reverse@mL^0,w,c
  4291   002FBC  26D9               	addwf	fsr2l,f,c
  4292   002FBE  501D               	movf	(reverse@mL+1)^0,w,c
  4293   002FC0  22DA               	addwfc	fsr2h,f,c
  4294   002FC2  0E00               	movlw	0
  4295   002FC4  6EDF               	movwf	indf2,c
  4296   002FC6                     
  4297                           ;dc_motor.c: 195:     mL->brakemode = 1;
  4298   002FC6  EE20 F002          	lfsr	2,2
  4299   002FCA  501C               	movf	reverse@mL^0,w,c
  4300   002FCC  26D9               	addwf	fsr2l,f,c
  4301   002FCE  501D               	movf	(reverse@mL+1)^0,w,c
  4302   002FD0  22DA               	addwfc	fsr2h,f,c
  4303   002FD2  0E01               	movlw	1
  4304   002FD4  6EDF               	movwf	indf2,c
  4305   002FD6                     
  4306                           ;dc_motor.c: 196:     mR->brakemode = 1;
  4307   002FD6  EE20 F002          	lfsr	2,2
  4308   002FDA  501E               	movf	reverse@mR^0,w,c
  4309   002FDC  26D9               	addwf	fsr2l,f,c
  4310   002FDE  501F               	movf	(reverse@mR+1)^0,w,c
  4311   002FE0  22DA               	addwfc	fsr2h,f,c
  4312   002FE2  0E01               	movlw	1
  4313   002FE4  6EDF               	movwf	indf2,c
  4314                           
  4315                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  4316   002FE6  EF12  F018         	goto	l634
  4317   002FEA                     l3632:
  4318                           
  4319                           ;dc_motor.c: 198:     {;dc_motor.c: 199:         mL->power++;
  4320   002FEA  C01C  FFD9         	movff	reverse@mL,fsr2l
  4321   002FEE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  4322   002FF2  2ADF               	incf	indf2,f,c
  4323                           
  4324                           ;dc_motor.c: 200:         mR->power++;
  4325   002FF4  C01E  FFD9         	movff	reverse@mR,fsr2l
  4326   002FF8  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  4327   002FFC  2ADF               	incf	indf2,f,c
  4328   002FFE                     
  4329                           ;dc_motor.c: 201:         _delay((unsigned long)((10)*(64000000/4000.0)));
  4330   002FFE  0ED0               	movlw	208
  4331   003000  6E20               	movwf	??_reverse^0,c
  4332   003002  0ECA               	movlw	202
  4333   003004                     u4257:
  4334   003004  2EE8               	decfsz	wreg,f,c
  4335   003006  D7FE               	bra	u4257
  4336   003008  2E20               	decfsz	??_reverse^0,f,c
  4337   00300A  D7FC               	bra	u4257
  4338   00300C                     
  4339                           ;dc_motor.c: 202:         setMotorPWM(mL);
  4340   00300C  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  4341   003010  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  4342   003014  ECE6  F015         	call	_setMotorPWM	;wreg free
  4343   003018                     
  4344                           ;dc_motor.c: 203:         setMotorPWM(mR);
  4345   003018  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  4346   00301C  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  4347   003020  ECE6  F015         	call	_setMotorPWM	;wreg free
  4348   003024                     l634:
  4349                           
  4350                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  4351   003024  C01C  FFD9         	movff	reverse@mL,fsr2l
  4352   003028  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  4353   00302C  0E15               	movlw	21
  4354   00302E  60DF               	cpfslt	indf2,c
  4355   003030  EF1C  F018         	goto	u2841
  4356   003034  EF1E  F018         	goto	u2840
  4357   003038                     u2841:
  4358   003038  EF2A  F018         	goto	l3642
  4359   00303C                     u2840:
  4360   00303C  C01E  FFD9         	movff	reverse@mR,fsr2l
  4361   003040  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  4362   003044  0E14               	movlw	20
  4363   003046  64DF               	cpfsgt	indf2,c
  4364   003048  EF28  F018         	goto	u2851
  4365   00304C  EF2A  F018         	goto	u2850
  4366   003050                     u2851:
  4367   003050  EFF5  F017         	goto	l3632
  4368   003054                     u2850:
  4369   003054                     l3642:
  4370                           
  4371                           ;dc_motor.c: 205:     mL->power = 20;
  4372   003054  C01C  FFD9         	movff	reverse@mL,fsr2l
  4373   003058  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  4374   00305C  0E14               	movlw	20
  4375   00305E  6EDF               	movwf	indf2,c
  4376                           
  4377                           ;dc_motor.c: 206:     mR->power = 20;
  4378   003060  C01E  FFD9         	movff	reverse@mR,fsr2l
  4379   003064  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  4380   003068  0E14               	movlw	20
  4381   00306A  6EDF               	movwf	indf2,c
  4382   00306C                     
  4383                           ;dc_motor.c: 207:     setMotorPWM(mL);
  4384   00306C  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  4385   003070  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  4386   003074  ECE6  F015         	call	_setMotorPWM	;wreg free
  4387   003078                     
  4388                           ;dc_motor.c: 208:     setMotorPWM(mR);
  4389   003078  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  4390   00307C  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  4391   003080  ECE6  F015         	call	_setMotorPWM	;wreg free
  4392   003084  0012               	return		;funcret
  4393   003086                     __end_of_reverse:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _norm_stop *****************
  4397 ;; Defined at:
  4398 ;;		line 118 in file "dc_motor.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4401 ;;		 -> main@mL(9), 
  4402 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4403 ;;		 -> main@mR(9), 
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4415 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4419 ;;Total ram usage:        4 bytes
  4420 ;; Hardware stack levels used: 1
  4421 ;; Hardware stack levels required when called: 8
  4422 ;; This function calls:
  4423 ;;		_setMotorPWM
  4424 ;; This function is called by:
  4425 ;;		_motor_response
  4426 ;;		_motor_retrace
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text8
  4432   0036DA                     __ptext8:
  4433                           	callstack 0
  4434   0036DA                     _norm_stop:
  4435                           	callstack 22
  4436   0036DA                     
  4437                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  4438   0036DA  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  4439   0036DE  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  4440   0036E2  0E00               	movlw	0
  4441   0036E4  6EDF               	movwf	indf2,c
  4442                           
  4443                           ;dc_motor.c: 125:     mR->power = 0;
  4444   0036E6  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  4445   0036EA  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  4446   0036EE  0E00               	movlw	0
  4447   0036F0  6EDF               	movwf	indf2,c
  4448   0036F2                     
  4449                           ;dc_motor.c: 126:     setMotorPWM(mL);
  4450   0036F2  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  4451   0036F6  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  4452   0036FA  ECE6  F015         	call	_setMotorPWM	;wreg free
  4453   0036FE                     
  4454                           ;dc_motor.c: 127:     setMotorPWM(mR);
  4455   0036FE  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  4456   003702  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  4457   003706  ECE6  F015         	call	_setMotorPWM	;wreg free
  4458   00370A  0012               	return		;funcret
  4459   00370C                     __end_of_norm_stop:
  4460                           	callstack 0
  4461                           
  4462 ;; *************** function ___flge *****************
  4463 ;; Defined at:
  4464 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  ff1             4    8[COMRAM] void 
  4467 ;;  ff2             4   12[COMRAM] void 
  4468 ;; Auto vars:     Size  Location     Type
  4469 ;;		None
  4470 ;; Return value:  Size  Location     Type
  4471 ;;		None               void
  4472 ;; Registers used:
  4473 ;;		wreg, status,2, status,0
  4474 ;; Tracked objects:
  4475 ;;		On entry : 0/0
  4476 ;;		On exit  : 0/0
  4477 ;;		Unchanged: 0/0
  4478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4481 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4482 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4483 ;;Total ram usage:       12 bytes
  4484 ;; Hardware stack levels used: 1
  4485 ;; Hardware stack levels required when called: 6
  4486 ;; This function calls:
  4487 ;;		Nothing
  4488 ;; This function is called by:
  4489 ;;		_motor_response
  4490 ;; This function uses a non-reentrant model
  4491 ;;
  4492                           
  4493                           	psect	text9
  4494   002E8A                     __ptext9:
  4495                           	callstack 0
  4496   002E8A                     ___flge:
  4497                           	callstack 23
  4498   002E8A  0E00               	movlw	0
  4499   002E8C  1409               	andwf	___flge@ff1^0,w,c
  4500   002E8E  6E11               	movwf	??___flge^0,c
  4501   002E90  0E00               	movlw	0
  4502   002E92  140A               	andwf	(___flge@ff1+1)^0,w,c
  4503   002E94  6E12               	movwf	(??___flge+1)^0,c
  4504   002E96  0E80               	movlw	128
  4505   002E98  140B               	andwf	(___flge@ff1+2)^0,w,c
  4506   002E9A  6E13               	movwf	(??___flge+2)^0,c
  4507   002E9C  0E7F               	movlw	127
  4508   002E9E  140C               	andwf	(___flge@ff1+3)^0,w,c
  4509   002EA0  6E14               	movwf	(??___flge+3)^0,c
  4510   002EA2  5011               	movf	??___flge^0,w,c
  4511   002EA4  1012               	iorwf	(??___flge+1)^0,w,c
  4512   002EA6  1013               	iorwf	(??___flge+2)^0,w,c
  4513   002EA8  1014               	iorwf	(??___flge+3)^0,w,c
  4514   002EAA  A4D8               	btfss	status,2,c
  4515   002EAC  EF5A  F017         	goto	u2861
  4516   002EB0  EF5C  F017         	goto	u2860
  4517   002EB4                     u2861:
  4518   002EB4  EF64  F017         	goto	l3686
  4519   002EB8                     u2860:
  4520   002EB8  0E00               	movlw	0
  4521   002EBA  6E09               	movwf	___flge@ff1^0,c
  4522   002EBC  0E00               	movlw	0
  4523   002EBE  6E0A               	movwf	(___flge@ff1+1)^0,c
  4524   002EC0  0E00               	movlw	0
  4525   002EC2  6E0B               	movwf	(___flge@ff1+2)^0,c
  4526   002EC4  0E00               	movlw	0
  4527   002EC6  6E0C               	movwf	(___flge@ff1+3)^0,c
  4528   002EC8                     l3686:
  4529   002EC8  0E00               	movlw	0
  4530   002ECA  140D               	andwf	___flge@ff2^0,w,c
  4531   002ECC  6E11               	movwf	??___flge^0,c
  4532   002ECE  0E00               	movlw	0
  4533   002ED0  140E               	andwf	(___flge@ff2+1)^0,w,c
  4534   002ED2  6E12               	movwf	(??___flge+1)^0,c
  4535   002ED4  0E80               	movlw	128
  4536   002ED6  140F               	andwf	(___flge@ff2+2)^0,w,c
  4537   002ED8  6E13               	movwf	(??___flge+2)^0,c
  4538   002EDA  0E7F               	movlw	127
  4539   002EDC  1410               	andwf	(___flge@ff2+3)^0,w,c
  4540   002EDE  6E14               	movwf	(??___flge+3)^0,c
  4541   002EE0  5011               	movf	??___flge^0,w,c
  4542   002EE2  1012               	iorwf	(??___flge+1)^0,w,c
  4543   002EE4  1013               	iorwf	(??___flge+2)^0,w,c
  4544   002EE6  1014               	iorwf	(??___flge+3)^0,w,c
  4545   002EE8  A4D8               	btfss	status,2,c
  4546   002EEA  EF79  F017         	goto	u2871
  4547   002EEE  EF7B  F017         	goto	u2870
  4548   002EF2                     u2871:
  4549   002EF2  EF83  F017         	goto	l3690
  4550   002EF6                     u2870:
  4551   002EF6  0E00               	movlw	0
  4552   002EF8  6E0D               	movwf	___flge@ff2^0,c
  4553   002EFA  0E00               	movlw	0
  4554   002EFC  6E0E               	movwf	(___flge@ff2+1)^0,c
  4555   002EFE  0E00               	movlw	0
  4556   002F00  6E0F               	movwf	(___flge@ff2+2)^0,c
  4557   002F02  0E00               	movlw	0
  4558   002F04  6E10               	movwf	(___flge@ff2+3)^0,c
  4559   002F06                     l3690:
  4560   002F06  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  4561   002F08  EF88  F017         	goto	u2881
  4562   002F0C  EF8A  F017         	goto	u2880
  4563   002F10                     u2881:
  4564   002F10  EF93  F017         	goto	l3694
  4565   002F14                     u2880:
  4566   002F14  6C09               	negf	___flge@ff1^0,c
  4567   002F16  1E0A               	comf	(___flge@ff1+1)^0,f,c
  4568   002F18  B0D8               	btfsc	status,0,c
  4569   002F1A  2A0A               	incf	(___flge@ff1+1)^0,f,c
  4570   002F1C  1E0B               	comf	(___flge@ff1+2)^0,f,c
  4571   002F1E  B0D8               	btfsc	status,0,c
  4572   002F20  2A0B               	incf	(___flge@ff1+2)^0,f,c
  4573   002F22  0E80               	movlw	128
  4574   002F24  560C               	subfwb	(___flge@ff1+3)^0,f,c
  4575   002F26                     l3694:
  4576   002F26  AE10               	btfss	(___flge@ff2+3)^0,7,c
  4577   002F28  EF98  F017         	goto	u2891
  4578   002F2C  EF9A  F017         	goto	u2890
  4579   002F30                     u2891:
  4580   002F30  EFA3  F017         	goto	l907
  4581   002F34                     u2890:
  4582   002F34  6C0D               	negf	___flge@ff2^0,c
  4583   002F36  1E0E               	comf	(___flge@ff2+1)^0,f,c
  4584   002F38  B0D8               	btfsc	status,0,c
  4585   002F3A  2A0E               	incf	(___flge@ff2+1)^0,f,c
  4586   002F3C  1E0F               	comf	(___flge@ff2+2)^0,f,c
  4587   002F3E  B0D8               	btfsc	status,0,c
  4588   002F40  2A0F               	incf	(___flge@ff2+2)^0,f,c
  4589   002F42  0E80               	movlw	128
  4590   002F44  5610               	subfwb	(___flge@ff2+3)^0,f,c
  4591   002F46                     l907:
  4592   002F46  0E00               	movlw	0
  4593   002F48  1A09               	xorwf	___flge@ff1^0,f,c
  4594   002F4A  0E00               	movlw	0
  4595   002F4C  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  4596   002F4E  0E00               	movlw	0
  4597   002F50  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  4598   002F52  0E80               	movlw	128
  4599   002F54  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  4600   002F56  0E00               	movlw	0
  4601   002F58  1A0D               	xorwf	___flge@ff2^0,f,c
  4602   002F5A  0E00               	movlw	0
  4603   002F5C  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  4604   002F5E  0E00               	movlw	0
  4605   002F60  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  4606   002F62  0E80               	movlw	128
  4607   002F64  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  4608   002F66  500D               	movf	___flge@ff2^0,w,c
  4609   002F68  5C09               	subwf	___flge@ff1^0,w,c
  4610   002F6A  500E               	movf	(___flge@ff2+1)^0,w,c
  4611   002F6C  580A               	subwfb	(___flge@ff1+1)^0,w,c
  4612   002F6E  500F               	movf	(___flge@ff2+2)^0,w,c
  4613   002F70  580B               	subwfb	(___flge@ff1+2)^0,w,c
  4614   002F72  5010               	movf	(___flge@ff2+3)^0,w,c
  4615   002F74  580C               	subwfb	(___flge@ff1+3)^0,w,c
  4616   002F76  B0D8               	btfsc	status,0,c
  4617   002F78  EFC0  F017         	goto	u2901
  4618   002F7C  EFC2  F017         	goto	u2900
  4619   002F80                     u2901:
  4620   002F80  EFC5  F017         	goto	l3700
  4621   002F84                     u2900:
  4622   002F84  90D8               	bcf	status,0,c
  4623   002F86  EFC6  F017         	goto	l912
  4624   002F8A                     l3700:
  4625   002F8A  80D8               	bsf	status,0,c
  4626   002F8C                     l912:
  4627   002F8C  0012               	return		;funcret
  4628   002F8E                     __end_of___flge:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _motorRinit *****************
  4632 ;; Defined at:
  4633 ;;		line 88 in file "dc_motor.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  4636 ;;		 -> main@mR(9), 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4651 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4652 ;;Total ram usage:        2 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 6
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_main
  4659 ;; This function uses a non-reentrant model
  4660 ;;
  4661                           
  4662                           	psect	text10
  4663   00340E                     __ptext10:
  4664                           	callstack 0
  4665   00340E                     _motorRinit:
  4666                           	callstack 24
  4667   00340E                     
  4668                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  4669   00340E  C009  FFD9         	movff	motorRinit@mR,fsr2l
  4670   003412  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  4671   003416  0E32               	movlw	50
  4672   003418  6EDF               	movwf	indf2,c
  4673   00341A                     
  4674                           ;dc_motor.c: 91:     mR->direction = 1;
  4675   00341A  EE20 F001          	lfsr	2,1
  4676   00341E  5009               	movf	motorRinit@mR^0,w,c
  4677   003420  26D9               	addwf	fsr2l,f,c
  4678   003422  500A               	movf	(motorRinit@mR+1)^0,w,c
  4679   003424  22DA               	addwfc	fsr2h,f,c
  4680   003426  0E01               	movlw	1
  4681   003428  6EDF               	movwf	indf2,c
  4682   00342A                     
  4683                           ;dc_motor.c: 92:     mR->brakemode = 1;
  4684   00342A  EE20 F002          	lfsr	2,2
  4685   00342E  5009               	movf	motorRinit@mR^0,w,c
  4686   003430  26D9               	addwf	fsr2l,f,c
  4687   003432  500A               	movf	(motorRinit@mR+1)^0,w,c
  4688   003434  22DA               	addwfc	fsr2h,f,c
  4689   003436  0E01               	movlw	1
  4690   003438  6EDF               	movwf	indf2,c
  4691   00343A                     
  4692                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  4693   00343A  EE20 F005          	lfsr	2,5
  4694   00343E  5009               	movf	motorRinit@mR^0,w,c
  4695   003440  26D9               	addwf	fsr2l,f,c
  4696   003442  500A               	movf	(motorRinit@mR+1)^0,w,c
  4697   003444  22DA               	addwfc	fsr2h,f,c
  4698   003446  0E25               	movlw	37
  4699   003448  6EDE               	movwf	postinc2,c
  4700   00344A  0E0F               	movlw	15
  4701   00344C  6EDD               	movwf	postdec2,c
  4702   00344E                     
  4703                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  4704   00344E  EE20 F007          	lfsr	2,7
  4705   003452  5009               	movf	motorRinit@mR^0,w,c
  4706   003454  26D9               	addwf	fsr2l,f,c
  4707   003456  500A               	movf	(motorRinit@mR+1)^0,w,c
  4708   003458  22DA               	addwfc	fsr2h,f,c
  4709   00345A  0E21               	movlw	33
  4710   00345C  6EDE               	movwf	postinc2,c
  4711   00345E  0E0F               	movlw	15
  4712   003460  6EDD               	movwf	postdec2,c
  4713   003462                     
  4714                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  4715   003462  EE20 F003          	lfsr	2,3
  4716   003466  5009               	movf	motorRinit@mR^0,w,c
  4717   003468  26D9               	addwf	fsr2l,f,c
  4718   00346A  500A               	movf	(motorRinit@mR+1)^0,w,c
  4719   00346C  22DA               	addwfc	fsr2h,f,c
  4720   00346E  0EC8               	movlw	200
  4721   003470  6EDE               	movwf	postinc2,c
  4722   003472  0E00               	movlw	0
  4723   003474  6EDD               	movwf	postdec2,c
  4724   003476  0012               	return		;funcret
  4725   003478                     __end_of_motorRinit:
  4726                           	callstack 0
  4727                           
  4728 ;; *************** function _motorLinit *****************
  4729 ;; Defined at:
  4730 ;;		line 78 in file "dc_motor.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  4733 ;;		 -> main@mL(9), 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;		None
  4736 ;; Return value:  Size  Location     Type
  4737 ;;                  1    wreg      void 
  4738 ;; Registers used:
  4739 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4740 ;; Tracked objects:
  4741 ;;		On entry : 0/0
  4742 ;;		On exit  : 0/0
  4743 ;;		Unchanged: 0/0
  4744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4748 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4749 ;;Total ram usage:        2 bytes
  4750 ;; Hardware stack levels used: 1
  4751 ;; Hardware stack levels required when called: 6
  4752 ;; This function calls:
  4753 ;;		Nothing
  4754 ;; This function is called by:
  4755 ;;		_main
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text11
  4760   003478                     __ptext11:
  4761                           	callstack 0
  4762   003478                     _motorLinit:
  4763                           	callstack 24
  4764   003478                     
  4765                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  4766   003478  C009  FFD9         	movff	motorLinit@mL,fsr2l
  4767   00347C  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  4768   003480  0E32               	movlw	50
  4769   003482  6EDF               	movwf	indf2,c
  4770   003484                     
  4771                           ;dc_motor.c: 81:     mL->direction = 1;
  4772   003484  EE20 F001          	lfsr	2,1
  4773   003488  5009               	movf	motorLinit@mL^0,w,c
  4774   00348A  26D9               	addwf	fsr2l,f,c
  4775   00348C  500A               	movf	(motorLinit@mL+1)^0,w,c
  4776   00348E  22DA               	addwfc	fsr2h,f,c
  4777   003490  0E01               	movlw	1
  4778   003492  6EDF               	movwf	indf2,c
  4779   003494                     
  4780                           ;dc_motor.c: 82:     mL->brakemode = 1;
  4781   003494  EE20 F002          	lfsr	2,2
  4782   003498  5009               	movf	motorLinit@mL^0,w,c
  4783   00349A  26D9               	addwf	fsr2l,f,c
  4784   00349C  500A               	movf	(motorLinit@mL+1)^0,w,c
  4785   00349E  22DA               	addwfc	fsr2h,f,c
  4786   0034A0  0E01               	movlw	1
  4787   0034A2  6EDF               	movwf	indf2,c
  4788   0034A4                     
  4789                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  4790   0034A4  EE20 F005          	lfsr	2,5
  4791   0034A8  5009               	movf	motorLinit@mL^0,w,c
  4792   0034AA  26D9               	addwf	fsr2l,f,c
  4793   0034AC  500A               	movf	(motorLinit@mL+1)^0,w,c
  4794   0034AE  22DA               	addwfc	fsr2h,f,c
  4795   0034B0  0EAA               	movlw	170
  4796   0034B2  6EDE               	movwf	postinc2,c
  4797   0034B4  0E0F               	movlw	15
  4798   0034B6  6EDD               	movwf	postdec2,c
  4799   0034B8                     
  4800                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  4801   0034B8  EE20 F007          	lfsr	2,7
  4802   0034BC  5009               	movf	motorLinit@mL^0,w,c
  4803   0034BE  26D9               	addwf	fsr2l,f,c
  4804   0034C0  500A               	movf	(motorLinit@mL+1)^0,w,c
  4805   0034C2  22DA               	addwfc	fsr2h,f,c
  4806   0034C4  0EA6               	movlw	166
  4807   0034C6  6EDE               	movwf	postinc2,c
  4808   0034C8  0E0F               	movlw	15
  4809   0034CA  6EDD               	movwf	postdec2,c
  4810   0034CC                     
  4811                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  4812   0034CC  EE20 F003          	lfsr	2,3
  4813   0034D0  5009               	movf	motorLinit@mL^0,w,c
  4814   0034D2  26D9               	addwf	fsr2l,f,c
  4815   0034D4  500A               	movf	(motorLinit@mL+1)^0,w,c
  4816   0034D6  22DA               	addwfc	fsr2h,f,c
  4817   0034D8  0EC8               	movlw	200
  4818   0034DA  6EDE               	movwf	postinc2,c
  4819   0034DC  0E00               	movlw	0
  4820   0034DE  6EDD               	movwf	postdec2,c
  4821   0034E0  0012               	return		;funcret
  4822   0034E2                     __end_of_motorLinit:
  4823                           	callstack 0
  4824                           
  4825 ;; *************** function _initDCmotorsPWM *****************
  4826 ;; Defined at:
  4827 ;;		line 5 in file "dc_motor.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  4830 ;; Auto vars:     Size  Location     Type
  4831 ;;		None
  4832 ;; Return value:  Size  Location     Type
  4833 ;;                  1    wreg      void 
  4834 ;; Registers used:
  4835 ;;		wreg, status,2
  4836 ;; Tracked objects:
  4837 ;;		On entry : 0/0
  4838 ;;		On exit  : 0/0
  4839 ;;		Unchanged: 0/0
  4840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4841 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4845 ;;Total ram usage:        2 bytes
  4846 ;; Hardware stack levels used: 1
  4847 ;; Hardware stack levels required when called: 6
  4848 ;; This function calls:
  4849 ;;		Nothing
  4850 ;; This function is called by:
  4851 ;;		_main
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text12
  4856   003236                     __ptext12:
  4857                           	callstack 0
  4858   003236                     _initDCmotorsPWM:
  4859                           	callstack 24
  4860   003236                     
  4861                           ;dc_motor.c: 9:     RE2PPS=0x05;
  4862   003236  0E05               	movlw	5
  4863   003238  010E               	movlb	14	; () banked
  4864   00323A  6F74               	movwf	116,b	;volatile
  4865                           
  4866                           ;dc_motor.c: 10:     RE4PPS=0x06;
  4867   00323C  0E06               	movlw	6
  4868   00323E  6F76               	movwf	118,b	;volatile
  4869                           
  4870                           ;dc_motor.c: 11:     RC7PPS=0x07;
  4871   003240  0E07               	movlw	7
  4872   003242  6F69               	movwf	105,b	;volatile
  4873                           
  4874                           ;dc_motor.c: 12:     RG6PPS=0x08;
  4875   003244  0E08               	movlw	8
  4876   003246  6F88               	movwf	136,b	;volatile
  4877                           
  4878                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  4879   003248  50BD               	movf	189,w,c	;volatile
  4880   00324A  0B8F               	andlw	-113
  4881   00324C  0930               	iorlw	48
  4882   00324E  6EBD               	movwf	189,c	;volatile
  4883                           
  4884                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  4885   003250  0EE0               	movlw	-32
  4886   003252  16BE               	andwf	190,f,c	;volatile
  4887                           
  4888                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  4889   003254  50BF               	movf	191,w,c	;volatile
  4890   003256  0BF0               	andlw	-16
  4891   003258  0901               	iorlw	1
  4892   00325A  6EBF               	movwf	191,c	;volatile
  4893                           
  4894                           ;dc_motor.c: 21:     T2PR=200;
  4895   00325C  0EC8               	movlw	200
  4896   00325E  6EBC               	movwf	188,c	;volatile
  4897   003260                     
  4898                           ; BSR set to: 14
  4899                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  4900   003260  8EBD               	bsf	189,7,c	;volatile
  4901                           
  4902                           ;dc_motor.c: 26:     CCPR1H=0;
  4903   003262  0E00               	movlw	0
  4904   003264  6EAA               	movwf	170,c	;volatile
  4905                           
  4906                           ;dc_motor.c: 27:     CCPR2H=0;
  4907   003266  0E00               	movlw	0
  4908   003268  6EA6               	movwf	166,c	;volatile
  4909                           
  4910                           ;dc_motor.c: 28:     CCPR3H=0;
  4911   00326A  0E00               	movlw	0
  4912   00326C  010F               	movlb	15	; () banked
  4913   00326E  6F25               	movwf	37,b	;volatile
  4914                           
  4915                           ;dc_motor.c: 29:     CCPR4H=0;
  4916   003270  0E00               	movlw	0
  4917   003272  6F21               	movwf	33,b	;volatile
  4918                           
  4919                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  4920   003274  0EFC               	movlw	-4
  4921   003276  16AD               	andwf	173,f,c	;volatile
  4922                           
  4923                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  4924   003278  0EF3               	movlw	-13
  4925   00327A  16AD               	andwf	173,f,c	;volatile
  4926                           
  4927                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  4928   00327C  0ECF               	movlw	-49
  4929   00327E  16AD               	andwf	173,f,c	;volatile
  4930                           
  4931                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  4932   003280  0E3F               	movlw	-193
  4933   003282  16AD               	andwf	173,f,c	;volatile
  4934   003284                     
  4935                           ; BSR set to: 15
  4936                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  4937   003284  88AB               	bsf	171,4,c	;volatile
  4938                           
  4939                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  4940   003286  50AB               	movf	171,w,c	;volatile
  4941   003288  0BF0               	andlw	-16
  4942   00328A  090C               	iorlw	12
  4943   00328C  6EAB               	movwf	171,c	;volatile
  4944   00328E                     
  4945                           ; BSR set to: 15
  4946                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  4947   00328E  8EAB               	bsf	171,7,c	;volatile
  4948   003290                     
  4949                           ; BSR set to: 15
  4950                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  4951   003290  88A7               	bsf	167,4,c	;volatile
  4952                           
  4953                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  4954   003292  50A7               	movf	167,w,c	;volatile
  4955   003294  0BF0               	andlw	-16
  4956   003296  090C               	iorlw	12
  4957   003298  6EA7               	movwf	167,c	;volatile
  4958   00329A                     
  4959                           ; BSR set to: 15
  4960                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  4961   00329A  8EA7               	bsf	167,7,c	;volatile
  4962   00329C                     
  4963                           ; BSR set to: 15
  4964                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  4965   00329C  8926               	bsf	38,4,b	;volatile
  4966                           
  4967                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  4968   00329E  5126               	movf	38,w,b	;volatile
  4969   0032A0  0BF0               	andlw	-16
  4970   0032A2  090C               	iorlw	12
  4971   0032A4  6F26               	movwf	38,b	;volatile
  4972   0032A6                     
  4973                           ; BSR set to: 15
  4974                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  4975   0032A6  8F26               	bsf	38,7,b	;volatile
  4976   0032A8                     
  4977                           ; BSR set to: 15
  4978                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  4979   0032A8  8922               	bsf	34,4,b	;volatile
  4980                           
  4981                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  4982   0032AA  5122               	movf	34,w,b	;volatile
  4983   0032AC  0BF0               	andlw	-16
  4984   0032AE  090C               	iorlw	12
  4985   0032B0  6F22               	movwf	34,b	;volatile
  4986   0032B2                     
  4987                           ; BSR set to: 15
  4988                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  4989   0032B2  8F22               	bsf	34,7,b	;volatile
  4990   0032B4                     
  4991                           ; BSR set to: 15
  4992   0032B4  0012               	return		;funcret
  4993   0032B6                     __end_of_initDCmotorsPWM:
  4994                           	callstack 0
  4995                           
  4996 ;; *************** function _fullSpeedAhead *****************
  4997 ;; Defined at:
  4998 ;;		line 167 in file "dc_motor.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5001 ;;		 -> main@mL(9), 
  5002 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5003 ;;		 -> main@mR(9), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;		None
  5006 ;; Return value:  Size  Location     Type
  5007 ;;                  1    wreg      void 
  5008 ;; Registers used:
  5009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5010 ;; Tracked objects:
  5011 ;;		On entry : 0/0
  5012 ;;		On exit  : 0/0
  5013 ;;		Unchanged: 0/0
  5014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5015 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5018 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5019 ;;Total ram usage:        5 bytes
  5020 ;; Hardware stack levels used: 1
  5021 ;; Hardware stack levels required when called: 8
  5022 ;; This function calls:
  5023 ;;		_setMotorPWM
  5024 ;; This function is called by:
  5025 ;;		_main
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text13
  5030   003086                     __ptext13:
  5031                           	callstack 0
  5032   003086                     _fullSpeedAhead:
  5033                           	callstack 22
  5034   003086                     
  5035                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power =5;
  5036   003086  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5037   00308A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5038   00308E  0E05               	movlw	5
  5039   003090  6EDF               	movwf	indf2,c
  5040                           
  5041                           ;dc_motor.c: 170:     mR->power = 5;
  5042   003092  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5043   003096  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5044   00309A  0E05               	movlw	5
  5045   00309C  6EDF               	movwf	indf2,c
  5046   00309E                     
  5047                           ;dc_motor.c: 171:     mR->direction = 1;
  5048   00309E  EE20 F001          	lfsr	2,1
  5049   0030A2  501E               	movf	fullSpeedAhead@mR^0,w,c
  5050   0030A4  26D9               	addwf	fsr2l,f,c
  5051   0030A6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5052   0030A8  22DA               	addwfc	fsr2h,f,c
  5053   0030AA  0E01               	movlw	1
  5054   0030AC  6EDF               	movwf	indf2,c
  5055   0030AE                     
  5056                           ;dc_motor.c: 172:     mL->direction = 1;
  5057   0030AE  EE20 F001          	lfsr	2,1
  5058   0030B2  501C               	movf	fullSpeedAhead@mL^0,w,c
  5059   0030B4  26D9               	addwf	fsr2l,f,c
  5060   0030B6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5061   0030B8  22DA               	addwfc	fsr2h,f,c
  5062   0030BA  0E01               	movlw	1
  5063   0030BC  6EDF               	movwf	indf2,c
  5064   0030BE                     
  5065                           ;dc_motor.c: 173:     mL->brakemode = 1;
  5066   0030BE  EE20 F002          	lfsr	2,2
  5067   0030C2  501C               	movf	fullSpeedAhead@mL^0,w,c
  5068   0030C4  26D9               	addwf	fsr2l,f,c
  5069   0030C6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  5070   0030C8  22DA               	addwfc	fsr2h,f,c
  5071   0030CA  0E01               	movlw	1
  5072   0030CC  6EDF               	movwf	indf2,c
  5073   0030CE                     
  5074                           ;dc_motor.c: 174:     mR->brakemode = 1;
  5075   0030CE  EE20 F002          	lfsr	2,2
  5076   0030D2  501E               	movf	fullSpeedAhead@mR^0,w,c
  5077   0030D4  26D9               	addwf	fsr2l,f,c
  5078   0030D6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  5079   0030D8  22DA               	addwfc	fsr2h,f,c
  5080   0030DA  0E01               	movlw	1
  5081   0030DC  6EDF               	movwf	indf2,c
  5082                           
  5083                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  5084   0030DE  EF87  F018         	goto	l4122
  5085   0030E2                     l4116:
  5086                           
  5087                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  5088   0030E2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5089   0030E6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5090   0030EA  2ADF               	incf	indf2,f,c
  5091                           
  5092                           ;dc_motor.c: 178:         mR->power++;
  5093   0030EC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5094   0030F0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5095   0030F4  2ADF               	incf	indf2,f,c
  5096   0030F6                     
  5097                           ;dc_motor.c: 180:         setMotorPWM(mL);
  5098   0030F6  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5099   0030FA  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5100   0030FE  ECE6  F015         	call	_setMotorPWM	;wreg free
  5101   003102                     
  5102                           ;dc_motor.c: 181:         setMotorPWM(mR);
  5103   003102  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5104   003106  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5105   00310A  ECE6  F015         	call	_setMotorPWM	;wreg free
  5106   00310E                     l4122:
  5107                           
  5108                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  5109   00310E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5110   003112  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5111   003116  0E2E               	movlw	46
  5112   003118  60DF               	cpfslt	indf2,c
  5113   00311A  EF91  F018         	goto	u3551
  5114   00311E  EF93  F018         	goto	u3550
  5115   003122                     u3551:
  5116   003122  EF9F  F018         	goto	l4126
  5117   003126                     u3550:
  5118   003126  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5119   00312A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5120   00312E  0E2D               	movlw	45
  5121   003130  64DF               	cpfsgt	indf2,c
  5122   003132  EF9D  F018         	goto	u3561
  5123   003136  EF9F  F018         	goto	u3560
  5124   00313A                     u3561:
  5125   00313A  EF71  F018         	goto	l4116
  5126   00313E                     u3560:
  5127   00313E                     l4126:
  5128                           
  5129                           ;dc_motor.c: 183:     mL->power = 45;
  5130   00313E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  5131   003142  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  5132   003146  0E2D               	movlw	45
  5133   003148  6EDF               	movwf	indf2,c
  5134                           
  5135                           ;dc_motor.c: 184:     mR->power = 45;
  5136   00314A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  5137   00314E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  5138   003152  0E2D               	movlw	45
  5139   003154  6EDF               	movwf	indf2,c
  5140   003156                     
  5141                           ;dc_motor.c: 185:     setMotorPWM(mL);
  5142   003156  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  5143   00315A  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  5144   00315E  ECE6  F015         	call	_setMotorPWM	;wreg free
  5145   003162                     
  5146                           ;dc_motor.c: 186:     setMotorPWM(mR);
  5147   003162  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  5148   003166  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  5149   00316A  ECE6  F015         	call	_setMotorPWM	;wreg free
  5150   00316E  0012               	return		;funcret
  5151   003170                     __end_of_fullSpeedAhead:
  5152                           	callstack 0
  5153                           
  5154 ;; *************** function _setMotorPWM *****************
  5155 ;; Defined at:
  5156 ;;		line 56 in file "dc_motor.c"
  5157 ;; Parameters:    Size  Location     Type
  5158 ;;  m               2   21[COMRAM] PTR struct DC_motor
  5159 ;;		 -> main@mR(9), main@mL(9), 
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  negDuty         1   26[COMRAM] unsigned char 
  5162 ;;  posDuty         1   25[COMRAM] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  1    wreg      void 
  5165 ;; Registers used:
  5166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5176 ;;Total ram usage:        6 bytes
  5177 ;; Hardware stack levels used: 1
  5178 ;; Hardware stack levels required when called: 7
  5179 ;; This function calls:
  5180 ;;		___lwdiv
  5181 ;;		___wmul
  5182 ;; This function is called by:
  5183 ;;		_norm_stop
  5184 ;;		_turnLeft
  5185 ;;		_turnRight
  5186 ;;		_fullSpeedAhead
  5187 ;;		_reverse
  5188 ;;		_stop
  5189 ;;		_uturn
  5190 ;; This function uses a non-reentrant model
  5191 ;;
  5192                           
  5193                           	psect	text14
  5194   002BCC                     __ptext14:
  5195                           	callstack 0
  5196   002BCC                     _setMotorPWM:
  5197                           	callstack 22
  5198   002BCC                     
  5199                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  5200   002BCC  EE20 F002          	lfsr	2,2
  5201   002BD0  5016               	movf	setMotorPWM@m^0,w,c
  5202   002BD2  26D9               	addwf	fsr2l,f,c
  5203   002BD4  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5204   002BD6  22DA               	addwfc	fsr2h,f,c
  5205   002BD8  50DF               	movf	indf2,w,c
  5206   002BDA  B4D8               	btfsc	status,2,c
  5207   002BDC  EFF2  F015         	goto	u2821
  5208   002BE0  EFF4  F015         	goto	u2820
  5209   002BE4                     u2821:
  5210   002BE4  EF28  F016         	goto	l3612
  5211   002BE8                     u2820:
  5212   002BE8                     
  5213                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  5214   002BE8  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  5215   002BEC  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5216   002BF0  50DF               	movf	indf2,w,c
  5217   002BF2  6E18               	movwf	??_setMotorPWM^0,c
  5218   002BF4  5018               	movf	??_setMotorPWM^0,w,c
  5219   002BF6  6E09               	movwf	___wmul@multiplier^0,c
  5220   002BF8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  5221   002BFA  EE20 F003          	lfsr	2,3
  5222   002BFE  5016               	movf	setMotorPWM@m^0,w,c
  5223   002C00  26D9               	addwf	fsr2l,f,c
  5224   002C02  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5225   002C04  22DA               	addwfc	fsr2h,f,c
  5226   002C06  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  5227   002C0A  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  5228   002C0E  EC06  F01C         	call	___wmul	;wreg free
  5229   002C12  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  5230   002C16  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  5231   002C1A  0E00               	movlw	0
  5232   002C1C  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  5233   002C1E  0E64               	movlw	100
  5234   002C20  6E11               	movwf	___lwdiv@divisor^0,c
  5235   002C22  EC5B  F019         	call	___lwdiv	;wreg free
  5236   002C26  EE20 F003          	lfsr	2,3
  5237   002C2A  5016               	movf	setMotorPWM@m^0,w,c
  5238   002C2C  26D9               	addwf	fsr2l,f,c
  5239   002C2E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5240   002C30  22DA               	addwfc	fsr2h,f,c
  5241   002C32  50DF               	movf	indf2,w,c
  5242   002C34  6E19               	movwf	(??_setMotorPWM+1)^0,c
  5243   002C36  500F               	movf	?___lwdiv^0,w,c
  5244   002C38  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  5245   002C3A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  5246   002C3C                     
  5247                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  5248   002C3C  EE20 F003          	lfsr	2,3
  5249   002C40  5016               	movf	setMotorPWM@m^0,w,c
  5250   002C42  26D9               	addwf	fsr2l,f,c
  5251   002C44  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5252   002C46  22DA               	addwfc	fsr2h,f,c
  5253   002C48  50DF               	movf	indf2,w,c
  5254   002C4A  6E1B               	movwf	setMotorPWM@negDuty^0,c
  5255                           
  5256                           ;dc_motor.c: 63:     }
  5257   002C4C  EF4B  F016         	goto	l3616
  5258   002C50                     l3612:
  5259                           
  5260                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  5261   002C50  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  5262   002C54  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  5263   002C58  50DF               	movf	indf2,w,c
  5264   002C5A  6E18               	movwf	??_setMotorPWM^0,c
  5265   002C5C  5018               	movf	??_setMotorPWM^0,w,c
  5266   002C5E  6E09               	movwf	___wmul@multiplier^0,c
  5267   002C60  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  5268   002C62  EE20 F003          	lfsr	2,3
  5269   002C66  5016               	movf	setMotorPWM@m^0,w,c
  5270   002C68  26D9               	addwf	fsr2l,f,c
  5271   002C6A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5272   002C6C  22DA               	addwfc	fsr2h,f,c
  5273   002C6E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  5274   002C72  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  5275   002C76  EC06  F01C         	call	___wmul	;wreg free
  5276   002C7A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  5277   002C7E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  5278   002C82  0E00               	movlw	0
  5279   002C84  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  5280   002C86  0E64               	movlw	100
  5281   002C88  6E11               	movwf	___lwdiv@divisor^0,c
  5282   002C8A  EC5B  F019         	call	___lwdiv	;wreg free
  5283   002C8E  500F               	movf	?___lwdiv^0,w,c
  5284   002C90  6E1A               	movwf	setMotorPWM@posDuty^0,c
  5285   002C92                     
  5286                           ;dc_motor.c: 66:         negDuty=0;
  5287   002C92  0E00               	movlw	0
  5288   002C94  6E1B               	movwf	setMotorPWM@negDuty^0,c
  5289   002C96                     l3616:
  5290                           
  5291                           ;dc_motor.c: 69:     if (m->direction) {
  5292   002C96  EE20 F001          	lfsr	2,1
  5293   002C9A  5016               	movf	setMotorPWM@m^0,w,c
  5294   002C9C  26D9               	addwf	fsr2l,f,c
  5295   002C9E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5296   002CA0  22DA               	addwfc	fsr2h,f,c
  5297   002CA2  50DF               	movf	indf2,w,c
  5298   002CA4  B4D8               	btfsc	status,2,c
  5299   002CA6  EF57  F016         	goto	u2831
  5300   002CAA  EF59  F016         	goto	u2830
  5301   002CAE                     u2831:
  5302   002CAE  EF7B  F016         	goto	l3620
  5303   002CB2                     u2830:
  5304   002CB2                     
  5305                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  5306   002CB2  EE20 F005          	lfsr	2,5
  5307   002CB6  5016               	movf	setMotorPWM@m^0,w,c
  5308   002CB8  26D9               	addwf	fsr2l,f,c
  5309   002CBA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5310   002CBC  22DA               	addwfc	fsr2h,f,c
  5311   002CBE  CFDE F018          	movff	postinc2,??_setMotorPWM
  5312   002CC2  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  5313   002CC6  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  5314   002CCA  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5315   002CCE  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  5316                           
  5317                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  5318   002CD2  EE20 F007          	lfsr	2,7
  5319   002CD6  5016               	movf	setMotorPWM@m^0,w,c
  5320   002CD8  26D9               	addwf	fsr2l,f,c
  5321   002CDA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5322   002CDC  22DA               	addwfc	fsr2h,f,c
  5323   002CDE  CFDE F018          	movff	postinc2,??_setMotorPWM
  5324   002CE2  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  5325   002CE6  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  5326   002CEA  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5327   002CEE  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  5328                           
  5329                           ;dc_motor.c: 72:     } else {
  5330   002CF2  EF9B  F016         	goto	l597
  5331   002CF6                     l3620:
  5332                           
  5333                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  5334   002CF6  EE20 F005          	lfsr	2,5
  5335   002CFA  5016               	movf	setMotorPWM@m^0,w,c
  5336   002CFC  26D9               	addwf	fsr2l,f,c
  5337   002CFE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5338   002D00  22DA               	addwfc	fsr2h,f,c
  5339   002D02  CFDE F018          	movff	postinc2,??_setMotorPWM
  5340   002D06  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  5341   002D0A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  5342   002D0E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5343   002D12  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  5344                           
  5345                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  5346   002D16  EE20 F007          	lfsr	2,7
  5347   002D1A  5016               	movf	setMotorPWM@m^0,w,c
  5348   002D1C  26D9               	addwf	fsr2l,f,c
  5349   002D1E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  5350   002D20  22DA               	addwfc	fsr2h,f,c
  5351   002D22  CFDE F018          	movff	postinc2,??_setMotorPWM
  5352   002D26  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  5353   002D2A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  5354   002D2E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  5355   002D32  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  5356   002D36                     l597:
  5357   002D36  0012               	return		;funcret
  5358   002D38                     __end_of_setMotorPWM:
  5359                           	callstack 0
  5360                           
  5361 ;; *************** function ___wmul *****************
  5362 ;; Defined at:
  5363 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  multiplier      2    8[COMRAM] unsigned int 
  5366 ;;  multiplicand    2   10[COMRAM] unsigned int 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  product         2   12[COMRAM] unsigned int 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  2    8[COMRAM] unsigned int 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0, prodl, prodh
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5378 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5382 ;;Total ram usage:        6 bytes
  5383 ;; Hardware stack levels used: 1
  5384 ;; Hardware stack levels required when called: 6
  5385 ;; This function calls:
  5386 ;;		Nothing
  5387 ;; This function is called by:
  5388 ;;		_setMotorPWM
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text15
  5393   00380C                     __ptext15:
  5394                           	callstack 0
  5395   00380C                     ___wmul:
  5396                           	callstack 22
  5397   00380C  5009               	movf	___wmul@multiplier^0,w,c
  5398   00380E  020B               	mulwf	___wmul@multiplicand^0,c
  5399   003810  CFF3 F00D          	movff	prodl,___wmul@product
  5400   003814  CFF4 F00E          	movff	prodh,___wmul@product+1
  5401   003818  5009               	movf	___wmul@multiplier^0,w,c
  5402   00381A  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  5403   00381C  50F3               	movf	243,w,c
  5404   00381E  260E               	addwf	(___wmul@product+1)^0,f,c
  5405   003820  500A               	movf	(___wmul@multiplier+1)^0,w,c
  5406   003822  020B               	mulwf	___wmul@multiplicand^0,c
  5407   003824  50F3               	movf	243,w,c
  5408   003826  260E               	addwf	(___wmul@product+1)^0,f,c
  5409   003828  C00D  F009         	movff	___wmul@product,?___wmul
  5410   00382C  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  5411   003830  0012               	return		;funcret
  5412   003832                     __end_of___wmul:
  5413                           	callstack 0
  5414                           
  5415 ;; *************** function ___lwdiv *****************
  5416 ;; Defined at:
  5417 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  5418 ;; Parameters:    Size  Location     Type
  5419 ;;  dividend        2   14[COMRAM] unsigned int 
  5420 ;;  divisor         2   16[COMRAM] unsigned int 
  5421 ;; Auto vars:     Size  Location     Type
  5422 ;;  quotient        2   19[COMRAM] unsigned int 
  5423 ;;  counter         1   18[COMRAM] unsigned char 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  2   14[COMRAM] unsigned int 
  5426 ;; Registers used:
  5427 ;;		wreg, status,2, status,0
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5436 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5437 ;;Total ram usage:        7 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 6
  5440 ;; This function calls:
  5441 ;;		Nothing
  5442 ;; This function is called by:
  5443 ;;		_setMotorPWM
  5444 ;; This function uses a non-reentrant model
  5445 ;;
  5446                           
  5447                           	psect	text16
  5448   0032B6                     __ptext16:
  5449                           	callstack 0
  5450   0032B6                     ___lwdiv:
  5451                           	callstack 22
  5452   0032B6  0E00               	movlw	0
  5453   0032B8  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  5454   0032BA  0E00               	movlw	0
  5455   0032BC  6E14               	movwf	___lwdiv@quotient^0,c
  5456   0032BE  5011               	movf	___lwdiv@divisor^0,w,c
  5457   0032C0  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  5458   0032C2  B4D8               	btfsc	status,2,c
  5459   0032C4  EF66  F019         	goto	u2791
  5460   0032C8  EF68  F019         	goto	u2790
  5461   0032CC                     u2791:
  5462   0032CC  EF90  F019         	goto	l1133
  5463   0032D0                     u2790:
  5464   0032D0  0E01               	movlw	1
  5465   0032D2  6E13               	movwf	___lwdiv@counter^0,c
  5466   0032D4  EF70  F019         	goto	l3592
  5467   0032D8                     l3590:
  5468   0032D8  90D8               	bcf	status,0,c
  5469   0032DA  3611               	rlcf	___lwdiv@divisor^0,f,c
  5470   0032DC  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  5471   0032DE  2A13               	incf	___lwdiv@counter^0,f,c
  5472   0032E0                     l3592:
  5473   0032E0  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  5474   0032E2  EF75  F019         	goto	u2801
  5475   0032E6  EF77  F019         	goto	u2800
  5476   0032EA                     u2801:
  5477   0032EA  EF6C  F019         	goto	l3590
  5478   0032EE                     u2800:
  5479   0032EE                     l3594:
  5480   0032EE  90D8               	bcf	status,0,c
  5481   0032F0  3614               	rlcf	___lwdiv@quotient^0,f,c
  5482   0032F2  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  5483   0032F4  5011               	movf	___lwdiv@divisor^0,w,c
  5484   0032F6  5C0F               	subwf	___lwdiv@dividend^0,w,c
  5485   0032F8  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  5486   0032FA  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  5487   0032FC  A0D8               	btfss	status,0,c
  5488   0032FE  EF83  F019         	goto	u2811
  5489   003302  EF85  F019         	goto	u2810
  5490   003306                     u2811:
  5491   003306  EF8A  F019         	goto	l3602
  5492   00330A                     u2810:
  5493   00330A  5011               	movf	___lwdiv@divisor^0,w,c
  5494   00330C  5E0F               	subwf	___lwdiv@dividend^0,f,c
  5495   00330E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  5496   003310  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  5497   003312  8014               	bsf	___lwdiv@quotient^0,0,c
  5498   003314                     l3602:
  5499   003314  90D8               	bcf	status,0,c
  5500   003316  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  5501   003318  3211               	rrcf	___lwdiv@divisor^0,f,c
  5502   00331A  2E13               	decfsz	___lwdiv@counter^0,f,c
  5503   00331C  EF77  F019         	goto	l3594
  5504   003320                     l1133:
  5505   003320  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  5506   003324  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  5507   003328  0012               	return		;funcret
  5508   00332A                     __end_of___lwdiv:
  5509                           	callstack 0
  5510                           
  5511 ;; *************** function _color_read_RGBC *****************
  5512 ;; Defined at:
  5513 ;;		line 94 in file "color.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  5516 ;;		 -> main@RGBC(32), 
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5528 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;Total ram usage:        2 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; Hardware stack levels required when called: 9
  5535 ;; This function calls:
  5536 ;;		___xxtofl
  5537 ;;		_color_read_Blue
  5538 ;;		_color_read_Clear
  5539 ;;		_color_read_Green
  5540 ;;		_color_read_Red
  5541 ;; This function is called by:
  5542 ;;		_main
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text17
  5547   003170                     __ptext17:
  5548                           	callstack 0
  5549   003170                     _color_read_RGBC:
  5550                           	callstack 21
  5551   003170                     
  5552                           ;color.c: 95:     temp->R = color_read_Red();
  5553   003170  EC71  F01A         	call	_color_read_Red	;wreg free
  5554   003174  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  5555   003178  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  5556   00317C  6A16               	clrf	(___xxtofl@val+2)^0,c
  5557   00317E  6A17               	clrf	(___xxtofl@val+3)^0,c
  5558   003180  0E00               	movlw	0
  5559   003182  EC0C  F015         	call	___xxtofl
  5560   003186  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  5561   00318A  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  5562   00318E  C014  FFDE         	movff	?___xxtofl,postinc2
  5563   003192  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5564   003196  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5565   00319A  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5566                           
  5567                           ;color.c: 96:     temp->B = color_read_Blue();
  5568   00319E  ECE9  F01A         	call	_color_read_Blue	;wreg free
  5569   0031A2  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  5570   0031A6  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  5571   0031AA  6A16               	clrf	(___xxtofl@val+2)^0,c
  5572   0031AC  6A17               	clrf	(___xxtofl@val+3)^0,c
  5573   0031AE  0E00               	movlw	0
  5574   0031B0  EC0C  F015         	call	___xxtofl
  5575   0031B4  EE20 F008          	lfsr	2,8
  5576   0031B8  5022               	movf	color_read_RGBC@temp^0,w,c
  5577   0031BA  26D9               	addwf	fsr2l,f,c
  5578   0031BC  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5579   0031BE  22DA               	addwfc	fsr2h,f,c
  5580   0031C0  C014  FFDE         	movff	?___xxtofl,postinc2
  5581   0031C4  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5582   0031C8  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5583   0031CC  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5584                           
  5585                           ;color.c: 97:     temp->G = color_read_Green();
  5586   0031D0  EC99  F01A         	call	_color_read_Green	;wreg free
  5587   0031D4  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  5588   0031D8  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  5589   0031DC  6A16               	clrf	(___xxtofl@val+2)^0,c
  5590   0031DE  6A17               	clrf	(___xxtofl@val+3)^0,c
  5591   0031E0  0E00               	movlw	0
  5592   0031E2  EC0C  F015         	call	___xxtofl
  5593   0031E6  EE20 F004          	lfsr	2,4
  5594   0031EA  5022               	movf	color_read_RGBC@temp^0,w,c
  5595   0031EC  26D9               	addwf	fsr2l,f,c
  5596   0031EE  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5597   0031F0  22DA               	addwfc	fsr2h,f,c
  5598   0031F2  C014  FFDE         	movff	?___xxtofl,postinc2
  5599   0031F6  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5600   0031FA  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5601   0031FE  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5602                           
  5603                           ;color.c: 98:     temp->C = color_read_Clear();
  5604   003202  ECC1  F01A         	call	_color_read_Clear	;wreg free
  5605   003206  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  5606   00320A  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  5607   00320E  6A16               	clrf	(___xxtofl@val+2)^0,c
  5608   003210  6A17               	clrf	(___xxtofl@val+3)^0,c
  5609   003212  0E00               	movlw	0
  5610   003214  EC0C  F015         	call	___xxtofl
  5611   003218  EE20 F00C          	lfsr	2,12
  5612   00321C  5022               	movf	color_read_RGBC@temp^0,w,c
  5613   00321E  26D9               	addwf	fsr2l,f,c
  5614   003220  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5615   003222  22DA               	addwfc	fsr2h,f,c
  5616   003224  C014  FFDE         	movff	?___xxtofl,postinc2
  5617   003228  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5618   00322C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5619   003230  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5620   003234  0012               	return		;funcret
  5621   003236                     __end_of_color_read_RGBC:
  5622                           	callstack 0
  5623                           
  5624 ;; *************** function _color_read_Red *****************
  5625 ;; Defined at:
  5626 ;;		line 35 in file "color.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;		None
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  tmp             2   17[COMRAM] unsigned int 
  5631 ;; Return value:  Size  Location     Type
  5632 ;;                  2   12[COMRAM] unsigned int 
  5633 ;; Registers used:
  5634 ;;		wreg, status,2, status,0, cstack
  5635 ;; Tracked objects:
  5636 ;;		On entry : 0/0
  5637 ;;		On exit  : 0/0
  5638 ;;		Unchanged: 0/0
  5639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;Total ram usage:        7 bytes
  5645 ;; Hardware stack levels used: 1
  5646 ;; Hardware stack levels required when called: 8
  5647 ;; This function calls:
  5648 ;;		_I2C_2_Master_Read
  5649 ;;		_I2C_2_Master_RepStart
  5650 ;;		_I2C_2_Master_Start
  5651 ;;		_I2C_2_Master_Stop
  5652 ;;		_I2C_2_Master_Write
  5653 ;; This function is called by:
  5654 ;;		_color_read_RGBC
  5655 ;;		_main
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text18
  5660   0034E2                     __ptext18:
  5661                           	callstack 0
  5662   0034E2                     _color_read_Red:
  5663                           	callstack 22
  5664   0034E2                     
  5665                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  5666   0034E2  EC8B  F01C         	call	_I2C_2_Master_Start	;wreg free
  5667                           
  5668                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  5669   0034E6  0E52               	movlw	82
  5670   0034E8  EC6F  F01C         	call	_I2C_2_Master_Write
  5671                           
  5672                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  5673   0034EC  0EB6               	movlw	182
  5674   0034EE  EC6F  F01C         	call	_I2C_2_Master_Write
  5675                           
  5676                           ;color.c: 41:  I2C_2_Master_RepStart();
  5677   0034F2  EC81  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  5678                           
  5679                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  5680   0034F6  0E53               	movlw	83
  5681   0034F8  EC6F  F01C         	call	_I2C_2_Master_Write
  5682                           
  5683                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  5684   0034FC  0E01               	movlw	1
  5685   0034FE  EC32  F01B         	call	_I2C_2_Master_Read
  5686   003502  6E0F               	movwf	??_color_read_Red^0,c
  5687   003504  500F               	movf	??_color_read_Red^0,w,c
  5688   003506  6E12               	movwf	color_read_Red@tmp^0,c
  5689   003508  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  5690                           
  5691                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5692   00350A  0E00               	movlw	0
  5693   00350C  EC32  F01B         	call	_I2C_2_Master_Read
  5694   003510  6E0F               	movwf	??_color_read_Red^0,c
  5695   003512  500F               	movf	??_color_read_Red^0,w,c
  5696   003514  6E11               	movwf	(??_color_read_Red+2)^0,c
  5697   003516  6A10               	clrf	(??_color_read_Red+1)^0,c
  5698   003518  5012               	movf	color_read_Red@tmp^0,w,c
  5699   00351A  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  5700   00351C  6E12               	movwf	color_read_Red@tmp^0,c
  5701   00351E  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  5702   003520  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  5703   003522  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  5704                           
  5705                           ;color.c: 45:  I2C_2_Master_Stop();
  5706   003524  EC86  F01C         	call	_I2C_2_Master_Stop	;wreg free
  5707   003528                     
  5708                           ;color.c: 46:  return tmp;
  5709   003528  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  5710   00352C  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5711   003530  0012               	return		;funcret
  5712   003532                     __end_of_color_read_Red:
  5713                           	callstack 0
  5714                           
  5715 ;; *************** function _color_read_Green *****************
  5716 ;; Defined at:
  5717 ;;		line 49 in file "color.c"
  5718 ;; Parameters:    Size  Location     Type
  5719 ;;		None
  5720 ;; Auto vars:     Size  Location     Type
  5721 ;;  tmp             2   17[COMRAM] unsigned int 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  2   12[COMRAM] unsigned int 
  5724 ;; Registers used:
  5725 ;;		wreg, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5732 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5733 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5734 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;Total ram usage:        7 bytes
  5736 ;; Hardware stack levels used: 1
  5737 ;; Hardware stack levels required when called: 8
  5738 ;; This function calls:
  5739 ;;		_I2C_2_Master_Read
  5740 ;;		_I2C_2_Master_RepStart
  5741 ;;		_I2C_2_Master_Start
  5742 ;;		_I2C_2_Master_Stop
  5743 ;;		_I2C_2_Master_Write
  5744 ;; This function is called by:
  5745 ;;		_color_read_RGBC
  5746 ;;		_main
  5747 ;; This function uses a non-reentrant model
  5748 ;;
  5749                           
  5750                           	psect	text19
  5751   003532                     __ptext19:
  5752                           	callstack 0
  5753   003532                     _color_read_Green:
  5754                           	callstack 21
  5755   003532                     
  5756                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  5757   003532  EC8B  F01C         	call	_I2C_2_Master_Start	;wreg free
  5758                           
  5759                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  5760   003536  0E52               	movlw	82
  5761   003538  EC6F  F01C         	call	_I2C_2_Master_Write
  5762                           
  5763                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  5764   00353C  0EB8               	movlw	184
  5765   00353E  EC6F  F01C         	call	_I2C_2_Master_Write
  5766                           
  5767                           ;color.c: 55:  I2C_2_Master_RepStart();
  5768   003542  EC81  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  5769                           
  5770                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  5771   003546  0E53               	movlw	83
  5772   003548  EC6F  F01C         	call	_I2C_2_Master_Write
  5773                           
  5774                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  5775   00354C  0E01               	movlw	1
  5776   00354E  EC32  F01B         	call	_I2C_2_Master_Read
  5777   003552  6E0F               	movwf	??_color_read_Green^0,c
  5778   003554  500F               	movf	??_color_read_Green^0,w,c
  5779   003556  6E12               	movwf	color_read_Green@tmp^0,c
  5780   003558  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  5781                           
  5782                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5783   00355A  0E00               	movlw	0
  5784   00355C  EC32  F01B         	call	_I2C_2_Master_Read
  5785   003560  6E0F               	movwf	??_color_read_Green^0,c
  5786   003562  500F               	movf	??_color_read_Green^0,w,c
  5787   003564  6E11               	movwf	(??_color_read_Green+2)^0,c
  5788   003566  6A10               	clrf	(??_color_read_Green+1)^0,c
  5789   003568  5012               	movf	color_read_Green@tmp^0,w,c
  5790   00356A  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  5791   00356C  6E12               	movwf	color_read_Green@tmp^0,c
  5792   00356E  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  5793   003570  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  5794   003572  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  5795                           
  5796                           ;color.c: 59:  I2C_2_Master_Stop();
  5797   003574  EC86  F01C         	call	_I2C_2_Master_Stop	;wreg free
  5798   003578                     
  5799                           ;color.c: 60:  return tmp;
  5800   003578  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  5801   00357C  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5802   003580  0012               	return		;funcret
  5803   003582                     __end_of_color_read_Green:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _color_read_Clear *****************
  5807 ;; Defined at:
  5808 ;;		line 77 in file "color.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;		None
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;  tmp             2   17[COMRAM] unsigned int 
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  2   12[COMRAM] unsigned int 
  5815 ;; Registers used:
  5816 ;;		wreg, status,2, status,0, cstack
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5824 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5825 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5826 ;;Total ram usage:        7 bytes
  5827 ;; Hardware stack levels used: 1
  5828 ;; Hardware stack levels required when called: 8
  5829 ;; This function calls:
  5830 ;;		_I2C_2_Master_Read
  5831 ;;		_I2C_2_Master_RepStart
  5832 ;;		_I2C_2_Master_Start
  5833 ;;		_I2C_2_Master_Stop
  5834 ;;		_I2C_2_Master_Write
  5835 ;; This function is called by:
  5836 ;;		_color_read_RGBC
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text20
  5842   003582                     __ptext20:
  5843                           	callstack 0
  5844   003582                     _color_read_Clear:
  5845                           	callstack 21
  5846   003582                     
  5847                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  5848   003582  EC8B  F01C         	call	_I2C_2_Master_Start	;wreg free
  5849                           
  5850                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  5851   003586  0E52               	movlw	82
  5852   003588  EC6F  F01C         	call	_I2C_2_Master_Write
  5853                           
  5854                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  5855   00358C  0EB4               	movlw	180
  5856   00358E  EC6F  F01C         	call	_I2C_2_Master_Write
  5857                           
  5858                           ;color.c: 83:  I2C_2_Master_RepStart();
  5859   003592  EC81  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  5860                           
  5861                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  5862   003596  0E53               	movlw	83
  5863   003598  EC6F  F01C         	call	_I2C_2_Master_Write
  5864                           
  5865                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  5866   00359C  0E01               	movlw	1
  5867   00359E  EC32  F01B         	call	_I2C_2_Master_Read
  5868   0035A2  6E0F               	movwf	??_color_read_Clear^0,c
  5869   0035A4  500F               	movf	??_color_read_Clear^0,w,c
  5870   0035A6  6E12               	movwf	color_read_Clear@tmp^0,c
  5871   0035A8  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  5872                           
  5873                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5874   0035AA  0E00               	movlw	0
  5875   0035AC  EC32  F01B         	call	_I2C_2_Master_Read
  5876   0035B0  6E0F               	movwf	??_color_read_Clear^0,c
  5877   0035B2  500F               	movf	??_color_read_Clear^0,w,c
  5878   0035B4  6E11               	movwf	(??_color_read_Clear+2)^0,c
  5879   0035B6  6A10               	clrf	(??_color_read_Clear+1)^0,c
  5880   0035B8  5012               	movf	color_read_Clear@tmp^0,w,c
  5881   0035BA  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  5882   0035BC  6E12               	movwf	color_read_Clear@tmp^0,c
  5883   0035BE  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  5884   0035C0  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  5885   0035C2  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  5886                           
  5887                           ;color.c: 87:  I2C_2_Master_Stop();
  5888   0035C4  EC86  F01C         	call	_I2C_2_Master_Stop	;wreg free
  5889   0035C8                     
  5890                           ;color.c: 88:  return tmp;
  5891   0035C8  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  5892   0035CC  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5893   0035D0  0012               	return		;funcret
  5894   0035D2                     __end_of_color_read_Clear:
  5895                           	callstack 0
  5896                           
  5897 ;; *************** function _color_read_Blue *****************
  5898 ;; Defined at:
  5899 ;;		line 63 in file "color.c"
  5900 ;; Parameters:    Size  Location     Type
  5901 ;;		None
  5902 ;; Auto vars:     Size  Location     Type
  5903 ;;  tmp             2   17[COMRAM] unsigned int 
  5904 ;; Return value:  Size  Location     Type
  5905 ;;                  2   12[COMRAM] unsigned int 
  5906 ;; Registers used:
  5907 ;;		wreg, status,2, status,0, cstack
  5908 ;; Tracked objects:
  5909 ;;		On entry : 0/0
  5910 ;;		On exit  : 0/0
  5911 ;;		Unchanged: 0/0
  5912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5914 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5915 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5916 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5917 ;;Total ram usage:        7 bytes
  5918 ;; Hardware stack levels used: 1
  5919 ;; Hardware stack levels required when called: 8
  5920 ;; This function calls:
  5921 ;;		_I2C_2_Master_Read
  5922 ;;		_I2C_2_Master_RepStart
  5923 ;;		_I2C_2_Master_Start
  5924 ;;		_I2C_2_Master_Stop
  5925 ;;		_I2C_2_Master_Write
  5926 ;; This function is called by:
  5927 ;;		_color_read_RGBC
  5928 ;;		_main
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           	psect	text21
  5933   0035D2                     __ptext21:
  5934                           	callstack 0
  5935   0035D2                     _color_read_Blue:
  5936                           	callstack 21
  5937   0035D2                     
  5938                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  5939   0035D2  EC8B  F01C         	call	_I2C_2_Master_Start	;wreg free
  5940                           
  5941                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  5942   0035D6  0E52               	movlw	82
  5943   0035D8  EC6F  F01C         	call	_I2C_2_Master_Write
  5944                           
  5945                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  5946   0035DC  0EBA               	movlw	186
  5947   0035DE  EC6F  F01C         	call	_I2C_2_Master_Write
  5948                           
  5949                           ;color.c: 69:  I2C_2_Master_RepStart();
  5950   0035E2  EC81  F01C         	call	_I2C_2_Master_RepStart	;wreg free
  5951                           
  5952                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  5953   0035E6  0E53               	movlw	83
  5954   0035E8  EC6F  F01C         	call	_I2C_2_Master_Write
  5955                           
  5956                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  5957   0035EC  0E01               	movlw	1
  5958   0035EE  EC32  F01B         	call	_I2C_2_Master_Read
  5959   0035F2  6E0F               	movwf	??_color_read_Blue^0,c
  5960   0035F4  500F               	movf	??_color_read_Blue^0,w,c
  5961   0035F6  6E12               	movwf	color_read_Blue@tmp^0,c
  5962   0035F8  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  5963                           
  5964                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  5965   0035FA  0E00               	movlw	0
  5966   0035FC  EC32  F01B         	call	_I2C_2_Master_Read
  5967   003600  6E0F               	movwf	??_color_read_Blue^0,c
  5968   003602  500F               	movf	??_color_read_Blue^0,w,c
  5969   003604  6E11               	movwf	(??_color_read_Blue+2)^0,c
  5970   003606  6A10               	clrf	(??_color_read_Blue+1)^0,c
  5971   003608  5012               	movf	color_read_Blue@tmp^0,w,c
  5972   00360A  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  5973   00360C  6E12               	movwf	color_read_Blue@tmp^0,c
  5974   00360E  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  5975   003610  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  5976   003612  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  5977                           
  5978                           ;color.c: 73:  I2C_2_Master_Stop();
  5979   003614  EC86  F01C         	call	_I2C_2_Master_Stop	;wreg free
  5980   003618                     
  5981                           ;color.c: 74:  return tmp;
  5982   003618  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  5983   00361C  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5984   003620  0012               	return		;funcret
  5985   003622                     __end_of_color_read_Blue:
  5986                           	callstack 0
  5987                           
  5988 ;; *************** function _I2C_2_Master_RepStart *****************
  5989 ;; Defined at:
  5990 ;;		line 33 in file "i2c.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;		None
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  1    wreg      void 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0, cstack
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used: 1
  6010 ;; Hardware stack levels required when called: 7
  6011 ;; This function calls:
  6012 ;;		_I2C_2_Master_Idle
  6013 ;; This function is called by:
  6014 ;;		_color_read_Red
  6015 ;;		_color_read_Green
  6016 ;;		_color_read_Blue
  6017 ;;		_color_read_Clear
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           	psect	text22
  6022   003902                     __ptext22:
  6023                           	callstack 0
  6024   003902                     _I2C_2_Master_RepStart:
  6025                           	callstack 22
  6026   003902                     
  6027                           ;i2c.c: 35:   I2C_2_Master_Idle();
  6028   003902  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6029   003906                     
  6030                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  6031   003906  010E               	movlb	14	; () banked
  6032   003908  83DA               	bsf	218,1,b	;volatile
  6033   00390A                     
  6034                           ; BSR set to: 14
  6035   00390A  0012               	return		;funcret
  6036   00390C                     __end_of_I2C_2_Master_RepStart:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _I2C_2_Master_Read *****************
  6040 ;; Defined at:
  6041 ;;		line 51 in file "i2c.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  ack             1    wreg     unsigned char 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;  ack             1   10[COMRAM] unsigned char 
  6046 ;;  tmp             1   11[COMRAM] unsigned char 
  6047 ;; Return value:  Size  Location     Type
  6048 ;;                  1    wreg      unsigned char 
  6049 ;; Registers used:
  6050 ;;		wreg, status,2, status,0, cstack
  6051 ;; Tracked objects:
  6052 ;;		On entry : 0/0
  6053 ;;		On exit  : 0/0
  6054 ;;		Unchanged: 0/0
  6055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6059 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6060 ;;Total ram usage:        3 bytes
  6061 ;; Hardware stack levels used: 1
  6062 ;; Hardware stack levels required when called: 7
  6063 ;; This function calls:
  6064 ;;		_I2C_2_Master_Idle
  6065 ;; This function is called by:
  6066 ;;		_color_read_Red
  6067 ;;		_color_read_Green
  6068 ;;		_color_read_Blue
  6069 ;;		_color_read_Clear
  6070 ;; This function uses a non-reentrant model
  6071 ;;
  6072                           
  6073                           	psect	text23
  6074   003664                     __ptext23:
  6075                           	callstack 0
  6076   003664                     _I2C_2_Master_Read:
  6077                           	callstack 22
  6078                           
  6079                           ; BSR set to: 14
  6080                           ;incstack = 0
  6081                           ;I2C_2_Master_Read@ack stored from wreg
  6082   003664  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  6083   003666                     
  6084                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  6085   003666  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6086   00366A                     
  6087                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  6088   00366A  010E               	movlb	14	; () banked
  6089   00366C  87DA               	bsf	218,3,b	;volatile
  6090                           
  6091                           ;i2c.c: 56:   I2C_2_Master_Idle();
  6092   00366E  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6093   003672                     
  6094                           ;i2c.c: 57:   tmp = SSP2BUF;
  6095   003672  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  6096                           
  6097                           ;i2c.c: 58:   I2C_2_Master_Idle();
  6098   003676  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  6099   00367A                     
  6100                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  6101   00367A  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  6102   00367C  B4D8               	btfsc	status,2,c
  6103   00367E  EF43  F01B         	goto	u1511
  6104   003682  EF47  F01B         	goto	u1510
  6105   003686                     u1511:
  6106   003686  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  6107   003688  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  6108   00368A  EF48  F01B         	goto	u1528
  6109   00368E                     u1510:
  6110   00368E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  6111   003690                     u1528:
  6112   003690  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  6113   003692  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  6114   003694  010E               	movlb	14	; () banked
  6115   003696  51DA               	movf	218,w,b	;volatile
  6116   003698  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  6117   00369A  0BDF               	andlw	-33
  6118   00369C  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  6119   00369E  6FDA               	movwf	218,b	;volatile
  6120   0036A0                     
  6121                           ; BSR set to: 14
  6122                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  6123   0036A0  89DA               	bsf	218,4,b	;volatile
  6124   0036A2                     
  6125                           ; BSR set to: 14
  6126                           ;i2c.c: 61:   return tmp;
  6127   0036A2  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  6128   0036A4                     
  6129                           ; BSR set to: 14
  6130   0036A4  0012               	return		;funcret
  6131   0036A6                     __end_of_I2C_2_Master_Read:
  6132                           	callstack 0
  6133                           
  6134 ;; *************** function ___xxtofl *****************
  6135 ;; Defined at:
  6136 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  6137 ;; Parameters:    Size  Location     Type
  6138 ;;  sign            1    wreg     unsigned char 
  6139 ;;  val             4   19[COMRAM] long 
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;  sign            1   27[COMRAM] unsigned char 
  6142 ;;  arg             4   29[COMRAM] unsigned long 
  6143 ;;  exp             1   28[COMRAM] unsigned char 
  6144 ;; Return value:  Size  Location     Type
  6145 ;;                  4   19[COMRAM] unsigned char 
  6146 ;; Registers used:
  6147 ;;		wreg, status,2, status,0
  6148 ;; Tracked objects:
  6149 ;;		On entry : 0/0
  6150 ;;		On exit  : 0/0
  6151 ;;		Unchanged: 0/0
  6152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6154 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6155 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6156 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6157 ;;Total ram usage:       14 bytes
  6158 ;; Hardware stack levels used: 1
  6159 ;; Hardware stack levels required when called: 6
  6160 ;; This function calls:
  6161 ;;		Nothing
  6162 ;; This function is called by:
  6163 ;;		_color_read_RGBC
  6164 ;;		_color_normalise
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           	psect	text24
  6169   002A18                     __ptext24:
  6170                           	callstack 0
  6171   002A18                     ___xxtofl:
  6172                           	callstack 23
  6173                           
  6174                           ; BSR set to: 14
  6175                           ;incstack = 0
  6176                           ;___xxtofl@sign stored from wreg
  6177   002A18  6E1C               	movwf	___xxtofl@sign^0,c
  6178   002A1A  501C               	movf	___xxtofl@sign^0,w,c
  6179   002A1C  B4D8               	btfsc	status,2,c
  6180   002A1E  EF13  F015         	goto	u1851
  6181   002A22  EF15  F015         	goto	u1850
  6182   002A26                     u1851:
  6183   002A26  EF37  F015         	goto	l1297
  6184   002A2A                     u1850:
  6185   002A2A  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  6186   002A2C  EF1C  F015         	goto	u1860
  6187   002A30  EF1A  F015         	goto	u1861
  6188   002A34                     u1861:
  6189   002A34  EF37  F015         	goto	l1297
  6190   002A38                     u1860:
  6191   002A38  C014  F018         	movff	___xxtofl@val,??___xxtofl
  6192   002A3C  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  6193   002A40  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  6194   002A44  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  6195   002A48  1E18               	comf	??___xxtofl^0,f,c
  6196   002A4A  1E19               	comf	(??___xxtofl+1)^0,f,c
  6197   002A4C  1E1A               	comf	(??___xxtofl+2)^0,f,c
  6198   002A4E  1E1B               	comf	(??___xxtofl+3)^0,f,c
  6199   002A50  2A18               	incf	??___xxtofl^0,f,c
  6200   002A52  0E00               	movlw	0
  6201   002A54  2219               	addwfc	(??___xxtofl+1)^0,f,c
  6202   002A56  221A               	addwfc	(??___xxtofl+2)^0,f,c
  6203   002A58  221B               	addwfc	(??___xxtofl+3)^0,f,c
  6204   002A5A  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  6205   002A5E  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  6206   002A62  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  6207   002A66  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  6208   002A6A  EF3F  F015         	goto	l2850
  6209   002A6E                     l1297:
  6210   002A6E  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  6211   002A72  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6212   002A76  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6213   002A7A  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6214   002A7E                     l2850:
  6215   002A7E  5014               	movf	___xxtofl@val^0,w,c
  6216   002A80  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  6217   002A82  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  6218   002A84  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  6219   002A86  A4D8               	btfss	status,2,c
  6220   002A88  EF48  F015         	goto	u1871
  6221   002A8C  EF4A  F015         	goto	u1870
  6222   002A90                     u1871:
  6223   002A90  EF54  F015         	goto	l2856
  6224   002A94                     u1870:
  6225   002A94  0E00               	movlw	0
  6226   002A96  6E14               	movwf	?___xxtofl^0,c
  6227   002A98  0E00               	movlw	0
  6228   002A9A  6E15               	movwf	(?___xxtofl+1)^0,c
  6229   002A9C  0E00               	movlw	0
  6230   002A9E  6E16               	movwf	(?___xxtofl+2)^0,c
  6231   002AA0  0E00               	movlw	0
  6232   002AA2  6E17               	movwf	(?___xxtofl+3)^0,c
  6233   002AA4  EFE5  F015         	goto	l1300
  6234   002AA8                     l2856:
  6235   002AA8  0E96               	movlw	150
  6236   002AAA  6E1D               	movwf	___xxtofl@exp^0,c
  6237   002AAC  EF5E  F015         	goto	l2860
  6238   002AB0                     l2858:
  6239   002AB0  2A1D               	incf	___xxtofl@exp^0,f,c
  6240   002AB2  90D8               	bcf	status,0,c
  6241   002AB4  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  6242   002AB6  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  6243   002AB8  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6244   002ABA  321E               	rrcf	___xxtofl@arg^0,f,c
  6245   002ABC                     l2860:
  6246   002ABC  0E00               	movlw	0
  6247   002ABE  141E               	andwf	___xxtofl@arg^0,w,c
  6248   002AC0  6E18               	movwf	??___xxtofl^0,c
  6249   002AC2  0E00               	movlw	0
  6250   002AC4  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  6251   002AC6  6E19               	movwf	(??___xxtofl+1)^0,c
  6252   002AC8  0E00               	movlw	0
  6253   002ACA  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  6254   002ACC  6E1A               	movwf	(??___xxtofl+2)^0,c
  6255   002ACE  0EFE               	movlw	254
  6256   002AD0  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  6257   002AD2  6E1B               	movwf	(??___xxtofl+3)^0,c
  6258   002AD4  5018               	movf	??___xxtofl^0,w,c
  6259   002AD6  1019               	iorwf	(??___xxtofl+1)^0,w,c
  6260   002AD8  101A               	iorwf	(??___xxtofl+2)^0,w,c
  6261   002ADA  101B               	iorwf	(??___xxtofl+3)^0,w,c
  6262   002ADC  A4D8               	btfss	status,2,c
  6263   002ADE  EF73  F015         	goto	u1881
  6264   002AE2  EF75  F015         	goto	u1880
  6265   002AE6                     u1881:
  6266   002AE6  EF58  F015         	goto	l2858
  6267   002AEA                     u1880:
  6268   002AEA  EF83  F015         	goto	l1304
  6269   002AEE                     l2862:
  6270   002AEE  2A1D               	incf	___xxtofl@exp^0,f,c
  6271   002AF0  0E01               	movlw	1
  6272   002AF2  261E               	addwf	___xxtofl@arg^0,f,c
  6273   002AF4  0E00               	movlw	0
  6274   002AF6  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  6275   002AF8  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  6276   002AFA  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  6277   002AFC  90D8               	bcf	status,0,c
  6278   002AFE  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  6279   002B00  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  6280   002B02  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6281   002B04  321E               	rrcf	___xxtofl@arg^0,f,c
  6282   002B06                     l1304:
  6283   002B06  0E00               	movlw	0
  6284   002B08  141E               	andwf	___xxtofl@arg^0,w,c
  6285   002B0A  6E18               	movwf	??___xxtofl^0,c
  6286   002B0C  0E00               	movlw	0
  6287   002B0E  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  6288   002B10  6E19               	movwf	(??___xxtofl+1)^0,c
  6289   002B12  0E00               	movlw	0
  6290   002B14  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  6291   002B16  6E1A               	movwf	(??___xxtofl+2)^0,c
  6292   002B18  0EFF               	movlw	255
  6293   002B1A  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  6294   002B1C  6E1B               	movwf	(??___xxtofl+3)^0,c
  6295   002B1E  5018               	movf	??___xxtofl^0,w,c
  6296   002B20  1019               	iorwf	(??___xxtofl+1)^0,w,c
  6297   002B22  101A               	iorwf	(??___xxtofl+2)^0,w,c
  6298   002B24  101B               	iorwf	(??___xxtofl+3)^0,w,c
  6299   002B26  A4D8               	btfss	status,2,c
  6300   002B28  EF98  F015         	goto	u1891
  6301   002B2C  EF9A  F015         	goto	u1890
  6302   002B30                     u1891:
  6303   002B30  EF77  F015         	goto	l2862
  6304   002B34                     u1890:
  6305   002B34  EFA2  F015         	goto	l2870
  6306   002B38                     l2868:
  6307   002B38  061D               	decf	___xxtofl@exp^0,f,c
  6308   002B3A  90D8               	bcf	status,0,c
  6309   002B3C  361E               	rlcf	___xxtofl@arg^0,f,c
  6310   002B3E  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  6311   002B40  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  6312   002B42  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  6313   002B44                     l2870:
  6314   002B44  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  6315   002B46  EFA7  F015         	goto	u1901
  6316   002B4A  EFA9  F015         	goto	u1900
  6317   002B4E                     u1901:
  6318   002B4E  EFB1  F015         	goto	l1311
  6319   002B52                     u1900:
  6320   002B52  0E02               	movlw	2
  6321   002B54  601D               	cpfslt	___xxtofl@exp^0,c
  6322   002B56  EFAF  F015         	goto	u1911
  6323   002B5A  EFB1  F015         	goto	u1910
  6324   002B5E                     u1911:
  6325   002B5E  EF9C  F015         	goto	l2868
  6326   002B62                     u1910:
  6327   002B62                     l1311:
  6328   002B62  B01D               	btfsc	___xxtofl@exp^0,0,c
  6329   002B64  EFB6  F015         	goto	u1921
  6330   002B68  EFB8  F015         	goto	u1920
  6331   002B6C                     u1921:
  6332   002B6C  EFB9  F015         	goto	l2876
  6333   002B70                     u1920:
  6334   002B70  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  6335   002B72                     l2876:
  6336   002B72  90D8               	bcf	status,0,c
  6337   002B74  321D               	rrcf	___xxtofl@exp^0,f,c
  6338   002B76  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  6339   002B7A  6A19               	clrf	(??___xxtofl+1)^0,c
  6340   002B7C  6A1A               	clrf	(??___xxtofl+2)^0,c
  6341   002B7E  6A1B               	clrf	(??___xxtofl+3)^0,c
  6342   002B80  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  6343   002B84  6A1A               	clrf	(??___xxtofl+2)^0,c
  6344   002B86  6A19               	clrf	(??___xxtofl+1)^0,c
  6345   002B88  6A18               	clrf	??___xxtofl^0,c
  6346   002B8A  5018               	movf	??___xxtofl^0,w,c
  6347   002B8C  121E               	iorwf	___xxtofl@arg^0,f,c
  6348   002B8E  5019               	movf	(??___xxtofl+1)^0,w,c
  6349   002B90  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  6350   002B92  501A               	movf	(??___xxtofl+2)^0,w,c
  6351   002B94  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  6352   002B96  501B               	movf	(??___xxtofl+3)^0,w,c
  6353   002B98  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  6354   002B9A  501C               	movf	___xxtofl@sign^0,w,c
  6355   002B9C  B4D8               	btfsc	status,2,c
  6356   002B9E  EFD3  F015         	goto	u1931
  6357   002BA2  EFD5  F015         	goto	u1930
  6358   002BA6                     u1931:
  6359   002BA6  EFDD  F015         	goto	l2886
  6360   002BAA                     u1930:
  6361   002BAA  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  6362   002BAC  EFDC  F015         	goto	u1940
  6363   002BB0  EFDA  F015         	goto	u1941
  6364   002BB4                     u1941:
  6365   002BB4  EFDD  F015         	goto	l2886
  6366   002BB8                     u1940:
  6367   002BB8  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  6368   002BBA                     l2886:
  6369   002BBA  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  6370   002BBE  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  6371   002BC2  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  6372   002BC6  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  6373   002BCA                     l1300:
  6374   002BCA  0012               	return		;funcret
  6375   002BCC                     __end_of___xxtofl:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _color_normalise *****************
  6379 ;; Defined at:
  6380 ;;		line 100 in file "color.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  6383 ;;		 -> main@RGBC(32), 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;		None
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  1    wreg      void 
  6388 ;; Registers used:
  6389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;Total ram usage:        2 bytes
  6400 ;; Hardware stack levels used: 1
  6401 ;; Hardware stack levels required when called: 7
  6402 ;; This function calls:
  6403 ;;		___fldiv
  6404 ;; This function is called by:
  6405 ;;		_main
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           	psect	text25
  6410   002D38                     __ptext25:
  6411                           	callstack 0
  6412   002D38                     _color_normalise:
  6413                           	callstack 23
  6414   002D38                     
  6415                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  6416   002D38  EE20 F00C          	lfsr	2,12
  6417   002D3C  5022               	movf	color_normalise@RGBC^0,w,c
  6418   002D3E  26D9               	addwf	fsr2l,f,c
  6419   002D40  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6420   002D42  22DA               	addwfc	fsr2h,f,c
  6421   002D44  CFDE F009          	movff	postinc2,___fldiv@b
  6422   002D48  CFDE F00A          	movff	postinc2,___fldiv@b+1
  6423   002D4C  CFDE F00B          	movff	postinc2,___fldiv@b+2
  6424   002D50  CFDE F00C          	movff	postinc2,___fldiv@b+3
  6425   002D54  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  6426   002D58  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  6427   002D5C  CFDE F00D          	movff	postinc2,___fldiv@a
  6428   002D60  CFDE F00E          	movff	postinc2,___fldiv@a+1
  6429   002D64  CFDE F00F          	movff	postinc2,___fldiv@a+2
  6430   002D68  CFDE F010          	movff	postinc2,___fldiv@a+3
  6431   002D6C  ECB1  F011         	call	___fldiv	;wreg free
  6432   002D70  EE20 F010          	lfsr	2,16
  6433   002D74  5022               	movf	color_normalise@RGBC^0,w,c
  6434   002D76  26D9               	addwf	fsr2l,f,c
  6435   002D78  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6436   002D7A  22DA               	addwfc	fsr2h,f,c
  6437   002D7C  C009  FFDE         	movff	?___fldiv,postinc2
  6438   002D80  C00A  FFDE         	movff	?___fldiv+1,postinc2
  6439   002D84  C00B  FFDE         	movff	?___fldiv+2,postinc2
  6440   002D88  C00C  FFDE         	movff	?___fldiv+3,postinc2
  6441                           
  6442                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  6443   002D8C  EE20 F00C          	lfsr	2,12
  6444   002D90  5022               	movf	color_normalise@RGBC^0,w,c
  6445   002D92  26D9               	addwf	fsr2l,f,c
  6446   002D94  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6447   002D96  22DA               	addwfc	fsr2h,f,c
  6448   002D98  CFDE F009          	movff	postinc2,___fldiv@b
  6449   002D9C  CFDE F00A          	movff	postinc2,___fldiv@b+1
  6450   002DA0  CFDE F00B          	movff	postinc2,___fldiv@b+2
  6451   002DA4  CFDE F00C          	movff	postinc2,___fldiv@b+3
  6452   002DA8  EE20 F004          	lfsr	2,4
  6453   002DAC  5022               	movf	color_normalise@RGBC^0,w,c
  6454   002DAE  26D9               	addwf	fsr2l,f,c
  6455   002DB0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6456   002DB2  22DA               	addwfc	fsr2h,f,c
  6457   002DB4  CFDE F00D          	movff	postinc2,___fldiv@a
  6458   002DB8  CFDE F00E          	movff	postinc2,___fldiv@a+1
  6459   002DBC  CFDE F00F          	movff	postinc2,___fldiv@a+2
  6460   002DC0  CFDE F010          	movff	postinc2,___fldiv@a+3
  6461   002DC4  ECB1  F011         	call	___fldiv	;wreg free
  6462   002DC8  EE20 F014          	lfsr	2,20
  6463   002DCC  5022               	movf	color_normalise@RGBC^0,w,c
  6464   002DCE  26D9               	addwf	fsr2l,f,c
  6465   002DD0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6466   002DD2  22DA               	addwfc	fsr2h,f,c
  6467   002DD4  C009  FFDE         	movff	?___fldiv,postinc2
  6468   002DD8  C00A  FFDE         	movff	?___fldiv+1,postinc2
  6469   002DDC  C00B  FFDE         	movff	?___fldiv+2,postinc2
  6470   002DE0  C00C  FFDE         	movff	?___fldiv+3,postinc2
  6471                           
  6472                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  6473   002DE4  EE20 F00C          	lfsr	2,12
  6474   002DE8  5022               	movf	color_normalise@RGBC^0,w,c
  6475   002DEA  26D9               	addwf	fsr2l,f,c
  6476   002DEC  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6477   002DEE  22DA               	addwfc	fsr2h,f,c
  6478   002DF0  CFDE F009          	movff	postinc2,___fldiv@b
  6479   002DF4  CFDE F00A          	movff	postinc2,___fldiv@b+1
  6480   002DF8  CFDE F00B          	movff	postinc2,___fldiv@b+2
  6481   002DFC  CFDE F00C          	movff	postinc2,___fldiv@b+3
  6482   002E00  EE20 F008          	lfsr	2,8
  6483   002E04  5022               	movf	color_normalise@RGBC^0,w,c
  6484   002E06  26D9               	addwf	fsr2l,f,c
  6485   002E08  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6486   002E0A  22DA               	addwfc	fsr2h,f,c
  6487   002E0C  CFDE F00D          	movff	postinc2,___fldiv@a
  6488   002E10  CFDE F00E          	movff	postinc2,___fldiv@a+1
  6489   002E14  CFDE F00F          	movff	postinc2,___fldiv@a+2
  6490   002E18  CFDE F010          	movff	postinc2,___fldiv@a+3
  6491   002E1C  ECB1  F011         	call	___fldiv	;wreg free
  6492   002E20  EE20 F018          	lfsr	2,24
  6493   002E24  5022               	movf	color_normalise@RGBC^0,w,c
  6494   002E26  26D9               	addwf	fsr2l,f,c
  6495   002E28  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6496   002E2A  22DA               	addwfc	fsr2h,f,c
  6497   002E2C  C009  FFDE         	movff	?___fldiv,postinc2
  6498   002E30  C00A  FFDE         	movff	?___fldiv+1,postinc2
  6499   002E34  C00B  FFDE         	movff	?___fldiv+2,postinc2
  6500   002E38  C00C  FFDE         	movff	?___fldiv+3,postinc2
  6501                           
  6502                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  6503   002E3C  EE20 F00C          	lfsr	2,12
  6504   002E40  5022               	movf	color_normalise@RGBC^0,w,c
  6505   002E42  26D9               	addwf	fsr2l,f,c
  6506   002E44  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6507   002E46  22DA               	addwfc	fsr2h,f,c
  6508   002E48  CFDE F009          	movff	postinc2,___fldiv@b
  6509   002E4C  CFDE F00A          	movff	postinc2,___fldiv@b+1
  6510   002E50  CFDE F00B          	movff	postinc2,___fldiv@b+2
  6511   002E54  CFDE F00C          	movff	postinc2,___fldiv@b+3
  6512   002E58  0E00               	movlw	0
  6513   002E5A  6E0D               	movwf	___fldiv@a^0,c
  6514   002E5C  0E00               	movlw	0
  6515   002E5E  6E0E               	movwf	(___fldiv@a+1)^0,c
  6516   002E60  0E00               	movlw	0
  6517   002E62  6E0F               	movwf	(___fldiv@a+2)^0,c
  6518   002E64  0E00               	movlw	0
  6519   002E66  6E10               	movwf	(___fldiv@a+3)^0,c
  6520   002E68  ECB1  F011         	call	___fldiv	;wreg free
  6521   002E6C  EE20 F01C          	lfsr	2,28
  6522   002E70  5022               	movf	color_normalise@RGBC^0,w,c
  6523   002E72  26D9               	addwf	fsr2l,f,c
  6524   002E74  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  6525   002E76  22DA               	addwfc	fsr2h,f,c
  6526   002E78  C009  FFDE         	movff	?___fldiv,postinc2
  6527   002E7C  C00A  FFDE         	movff	?___fldiv+1,postinc2
  6528   002E80  C00B  FFDE         	movff	?___fldiv+2,postinc2
  6529   002E84  C00C  FFDE         	movff	?___fldiv+3,postinc2
  6530   002E88  0012               	return		;funcret
  6531   002E8A                     __end_of_color_normalise:
  6532                           	callstack 0
  6533                           
  6534 ;; *************** function ___fldiv *****************
  6535 ;; Defined at:
  6536 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6537 ;; Parameters:    Size  Location     Type
  6538 ;;  b               4    8[COMRAM] void 
  6539 ;;  a               4   12[COMRAM] void 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  grs             4   27[COMRAM] unsigned long 
  6542 ;;  rem             4   20[COMRAM] unsigned long 
  6543 ;;  new_exp         2   25[COMRAM] short 
  6544 ;;  aexp            1   32[COMRAM] unsigned char 
  6545 ;;  bexp            1   31[COMRAM] unsigned char 
  6546 ;;  sign            1   24[COMRAM] unsigned char 
  6547 ;; Return value:  Size  Location     Type
  6548 ;;                  4    8[COMRAM] unsigned char 
  6549 ;; Registers used:
  6550 ;;		wreg, status,2, status,0
  6551 ;; Tracked objects:
  6552 ;;		On entry : 0/0
  6553 ;;		On exit  : 0/0
  6554 ;;		Unchanged: 0/0
  6555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6556 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6557 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6558 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;Total ram usage:       25 bytes
  6561 ;; Hardware stack levels used: 1
  6562 ;; Hardware stack levels required when called: 6
  6563 ;; This function calls:
  6564 ;;		Nothing
  6565 ;; This function is called by:
  6566 ;;		_color_normalise
  6567 ;; This function uses a non-reentrant model
  6568 ;;
  6569                           
  6570                           	psect	text26
  6571   002362                     __ptext26:
  6572                           	callstack 0
  6573   002362                     ___fldiv:
  6574                           	callstack 23
  6575   002362  500C               	movf	(___fldiv@b+3)^0,w,c
  6576   002364  0B80               	andlw	128
  6577   002366  6E19               	movwf	___fldiv@sign^0,c
  6578   002368  500C               	movf	(___fldiv@b+3)^0,w,c
  6579   00236A  240C               	addwf	(___fldiv@b+3)^0,w,c
  6580   00236C  6E20               	movwf	___fldiv@bexp^0,c
  6581   00236E  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  6582   002370  EFBC  F011         	goto	u1571
  6583   002374  EFBE  F011         	goto	u1570
  6584   002378                     u1571:
  6585   002378  EFBF  F011         	goto	l2690
  6586   00237C                     u1570:
  6587   00237C  8020               	bsf	___fldiv@bexp^0,0,c
  6588   00237E                     l2690:
  6589   00237E  5020               	movf	___fldiv@bexp^0,w,c
  6590   002380  B4D8               	btfsc	status,2,c
  6591   002382  EFC5  F011         	goto	u1581
  6592   002386  EFC7  F011         	goto	u1580
  6593   00238A                     u1581:
  6594   00238A  EFDC  F011         	goto	l2700
  6595   00238E                     u1580:
  6596   00238E  2820               	incf	___fldiv@bexp^0,w,c
  6597   002390  A4D8               	btfss	status,2,c
  6598   002392  EFCD  F011         	goto	u1591
  6599   002396  EFCF  F011         	goto	u1590
  6600   00239A                     u1591:
  6601   00239A  EFD7  F011         	goto	l2696
  6602   00239E                     u1590:
  6603   00239E  0E00               	movlw	0
  6604   0023A0  6E09               	movwf	___fldiv@b^0,c
  6605   0023A2  0E00               	movlw	0
  6606   0023A4  6E0A               	movwf	(___fldiv@b+1)^0,c
  6607   0023A6  0E00               	movlw	0
  6608   0023A8  6E0B               	movwf	(___fldiv@b+2)^0,c
  6609   0023AA  0E00               	movlw	0
  6610   0023AC  6E0C               	movwf	(___fldiv@b+3)^0,c
  6611   0023AE                     l2696:
  6612   0023AE  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  6613   0023B0  0E00               	movlw	0
  6614   0023B2  6E0C               	movwf	(___fldiv@b+3)^0,c
  6615   0023B4  EFE4  F011         	goto	l2702
  6616   0023B8                     l2700:
  6617   0023B8  0E00               	movlw	0
  6618   0023BA  6E09               	movwf	___fldiv@b^0,c
  6619   0023BC  0E00               	movlw	0
  6620   0023BE  6E0A               	movwf	(___fldiv@b+1)^0,c
  6621   0023C0  0E00               	movlw	0
  6622   0023C2  6E0B               	movwf	(___fldiv@b+2)^0,c
  6623   0023C4  0E00               	movlw	0
  6624   0023C6  6E0C               	movwf	(___fldiv@b+3)^0,c
  6625   0023C8                     l2702:
  6626   0023C8  5010               	movf	(___fldiv@a+3)^0,w,c
  6627   0023CA  0B80               	andlw	128
  6628   0023CC  1A19               	xorwf	___fldiv@sign^0,f,c
  6629   0023CE  5010               	movf	(___fldiv@a+3)^0,w,c
  6630   0023D0  2410               	addwf	(___fldiv@a+3)^0,w,c
  6631   0023D2  6E21               	movwf	___fldiv@aexp^0,c
  6632   0023D4  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  6633   0023D6  EFEF  F011         	goto	u1601
  6634   0023DA  EFF1  F011         	goto	u1600
  6635   0023DE                     u1601:
  6636   0023DE  EFF2  F011         	goto	l2710
  6637   0023E2                     u1600:
  6638   0023E2  8021               	bsf	___fldiv@aexp^0,0,c
  6639   0023E4                     l2710:
  6640   0023E4  5021               	movf	___fldiv@aexp^0,w,c
  6641   0023E6  B4D8               	btfsc	status,2,c
  6642   0023E8  EFF8  F011         	goto	u1611
  6643   0023EC  EFFA  F011         	goto	u1610
  6644   0023F0                     u1611:
  6645   0023F0  EF0F  F012         	goto	l2720
  6646   0023F4                     u1610:
  6647   0023F4  2821               	incf	___fldiv@aexp^0,w,c
  6648   0023F6  A4D8               	btfss	status,2,c
  6649   0023F8  EF00  F012         	goto	u1621
  6650   0023FC  EF02  F012         	goto	u1620
  6651   002400                     u1621:
  6652   002400  EF0A  F012         	goto	l2716
  6653   002404                     u1620:
  6654   002404  0E00               	movlw	0
  6655   002406  6E0D               	movwf	___fldiv@a^0,c
  6656   002408  0E00               	movlw	0
  6657   00240A  6E0E               	movwf	(___fldiv@a+1)^0,c
  6658   00240C  0E00               	movlw	0
  6659   00240E  6E0F               	movwf	(___fldiv@a+2)^0,c
  6660   002410  0E00               	movlw	0
  6661   002412  6E10               	movwf	(___fldiv@a+3)^0,c
  6662   002414                     l2716:
  6663   002414  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  6664   002416  0E00               	movlw	0
  6665   002418  6E10               	movwf	(___fldiv@a+3)^0,c
  6666   00241A  EF17  F012         	goto	l2722
  6667   00241E                     l2720:
  6668   00241E  0E00               	movlw	0
  6669   002420  6E0D               	movwf	___fldiv@a^0,c
  6670   002422  0E00               	movlw	0
  6671   002424  6E0E               	movwf	(___fldiv@a+1)^0,c
  6672   002426  0E00               	movlw	0
  6673   002428  6E0F               	movwf	(___fldiv@a+2)^0,c
  6674   00242A  0E00               	movlw	0
  6675   00242C  6E10               	movwf	(___fldiv@a+3)^0,c
  6676   00242E                     l2722:
  6677   00242E  500D               	movf	___fldiv@a^0,w,c
  6678   002430  100E               	iorwf	(___fldiv@a+1)^0,w,c
  6679   002432  100F               	iorwf	(___fldiv@a+2)^0,w,c
  6680   002434  1010               	iorwf	(___fldiv@a+3)^0,w,c
  6681   002436  A4D8               	btfss	status,2,c
  6682   002438  EF20  F012         	goto	u1631
  6683   00243C  EF22  F012         	goto	u1630
  6684   002440                     u1631:
  6685   002440  EF3A  F012         	goto	l2734
  6686   002444                     u1630:
  6687   002444  0E00               	movlw	0
  6688   002446  6E09               	movwf	___fldiv@b^0,c
  6689   002448  0E00               	movlw	0
  6690   00244A  6E0A               	movwf	(___fldiv@b+1)^0,c
  6691   00244C  0E00               	movlw	0
  6692   00244E  6E0B               	movwf	(___fldiv@b+2)^0,c
  6693   002450  0E00               	movlw	0
  6694   002452  6E0C               	movwf	(___fldiv@b+3)^0,c
  6695   002454  0E80               	movlw	128
  6696   002456  120B               	iorwf	(___fldiv@b+2)^0,f,c
  6697   002458  0E7F               	movlw	127
  6698   00245A  120C               	iorwf	(___fldiv@b+3)^0,f,c
  6699   00245C                     l2728:
  6700   00245C  5019               	movf	___fldiv@sign^0,w,c
  6701   00245E  120C               	iorwf	(___fldiv@b+3)^0,f,c
  6702   002460  C009  F009         	movff	___fldiv@b,?___fldiv
  6703   002464  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  6704   002468  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  6705   00246C  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  6706   002470  EF7D  F013         	goto	l1224
  6707   002474                     l2734:
  6708   002474  5020               	movf	___fldiv@bexp^0,w,c
  6709   002476  A4D8               	btfss	status,2,c
  6710   002478  EF40  F012         	goto	u1641
  6711   00247C  EF42  F012         	goto	u1640
  6712   002480                     u1641:
  6713   002480  EF4C  F012         	goto	l2742
  6714   002484                     u1640:
  6715   002484  0E00               	movlw	0
  6716   002486  6E09               	movwf	?___fldiv^0,c
  6717   002488  0E00               	movlw	0
  6718   00248A  6E0A               	movwf	(?___fldiv+1)^0,c
  6719   00248C  0E00               	movlw	0
  6720   00248E  6E0B               	movwf	(?___fldiv+2)^0,c
  6721   002490  0E00               	movlw	0
  6722   002492  6E0C               	movwf	(?___fldiv+3)^0,c
  6723   002494  EF7D  F013         	goto	l1224
  6724   002498                     l2742:
  6725   002498  5021               	movf	___fldiv@aexp^0,w,c
  6726   00249A  C020  F011         	movff	___fldiv@bexp,??___fldiv
  6727   00249E  6A12               	clrf	(??___fldiv+1)^0,c
  6728   0024A0  5E11               	subwf	??___fldiv^0,f,c
  6729   0024A2  0E00               	movlw	0
  6730   0024A4  5A12               	subwfb	(??___fldiv+1)^0,f,c
  6731   0024A6  0E7F               	movlw	127
  6732   0024A8  2411               	addwf	??___fldiv^0,w,c
  6733   0024AA  6E1A               	movwf	___fldiv@new_exp^0,c
  6734   0024AC  0E00               	movlw	0
  6735   0024AE  2012               	addwfc	(??___fldiv+1)^0,w,c
  6736   0024B0  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  6737   0024B2  C009  F015         	movff	___fldiv@b,___fldiv@rem
  6738   0024B6  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  6739   0024BA  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  6740   0024BE  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  6741   0024C2  0E00               	movlw	0
  6742   0024C4  6E09               	movwf	___fldiv@b^0,c
  6743   0024C6  0E00               	movlw	0
  6744   0024C8  6E0A               	movwf	(___fldiv@b+1)^0,c
  6745   0024CA  0E00               	movlw	0
  6746   0024CC  6E0B               	movwf	(___fldiv@b+2)^0,c
  6747   0024CE  0E00               	movlw	0
  6748   0024D0  6E0C               	movwf	(___fldiv@b+3)^0,c
  6749   0024D2  0E00               	movlw	0
  6750   0024D4  6E1C               	movwf	___fldiv@grs^0,c
  6751   0024D6  0E00               	movlw	0
  6752   0024D8  6E1D               	movwf	(___fldiv@grs+1)^0,c
  6753   0024DA  0E00               	movlw	0
  6754   0024DC  6E1E               	movwf	(___fldiv@grs+2)^0,c
  6755   0024DE  0E00               	movlw	0
  6756   0024E0  6E1F               	movwf	(___fldiv@grs+3)^0,c
  6757   0024E2  0E00               	movlw	0
  6758   0024E4  6E21               	movwf	___fldiv@aexp^0,c
  6759   0024E6  EFAD  F012         	goto	l1226
  6760   0024EA                     l2752:
  6761   0024EA  5021               	movf	___fldiv@aexp^0,w,c
  6762   0024EC  B4D8               	btfsc	status,2,c
  6763   0024EE  EF7B  F012         	goto	u1651
  6764   0024F2  EF7D  F012         	goto	u1650
  6765   0024F6                     u1651:
  6766   0024F6  EF94  F012         	goto	l2760
  6767   0024FA                     u1650:
  6768   0024FA  90D8               	bcf	status,0,c
  6769   0024FC  3615               	rlcf	___fldiv@rem^0,f,c
  6770   0024FE  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  6771   002500  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  6772   002502  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  6773   002504  90D8               	bcf	status,0,c
  6774   002506  3609               	rlcf	___fldiv@b^0,f,c
  6775   002508  360A               	rlcf	(___fldiv@b+1)^0,f,c
  6776   00250A  360B               	rlcf	(___fldiv@b+2)^0,f,c
  6777   00250C  360C               	rlcf	(___fldiv@b+3)^0,f,c
  6778   00250E  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  6779   002510  EF8C  F012         	goto	u1661
  6780   002514  EF8E  F012         	goto	u1660
  6781   002518                     u1661:
  6782   002518  EF8F  F012         	goto	l1229
  6783   00251C                     u1660:
  6784   00251C  8009               	bsf	___fldiv@b^0,0,c
  6785   00251E                     l1229:
  6786   00251E  90D8               	bcf	status,0,c
  6787   002520  361C               	rlcf	___fldiv@grs^0,f,c
  6788   002522  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  6789   002524  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  6790   002526  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  6791   002528                     l2760:
  6792   002528  500D               	movf	___fldiv@a^0,w,c
  6793   00252A  5C15               	subwf	___fldiv@rem^0,w,c
  6794   00252C  500E               	movf	(___fldiv@a+1)^0,w,c
  6795   00252E  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  6796   002530  500F               	movf	(___fldiv@a+2)^0,w,c
  6797   002532  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  6798   002534  5010               	movf	(___fldiv@a+3)^0,w,c
  6799   002536  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  6800   002538  A0D8               	btfss	status,0,c
  6801   00253A  EFA1  F012         	goto	u1671
  6802   00253E  EFA3  F012         	goto	u1670
  6803   002542                     u1671:
  6804   002542  EFAC  F012         	goto	l2766
  6805   002546                     u1670:
  6806   002546  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  6807   002548  500D               	movf	___fldiv@a^0,w,c
  6808   00254A  5E15               	subwf	___fldiv@rem^0,f,c
  6809   00254C  500E               	movf	(___fldiv@a+1)^0,w,c
  6810   00254E  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  6811   002550  500F               	movf	(___fldiv@a+2)^0,w,c
  6812   002552  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  6813   002554  5010               	movf	(___fldiv@a+3)^0,w,c
  6814   002556  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  6815   002558                     l2766:
  6816   002558  2A21               	incf	___fldiv@aexp^0,f,c
  6817   00255A                     l1226:
  6818   00255A  0E19               	movlw	25
  6819   00255C  6421               	cpfsgt	___fldiv@aexp^0,c
  6820   00255E  EFB3  F012         	goto	u1681
  6821   002562  EFB5  F012         	goto	u1680
  6822   002566                     u1681:
  6823   002566  EF75  F012         	goto	l2752
  6824   00256A                     u1680:
  6825   00256A  5015               	movf	___fldiv@rem^0,w,c
  6826   00256C  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  6827   00256E  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  6828   002570  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  6829   002572  B4D8               	btfsc	status,2,c
  6830   002574  EFBE  F012         	goto	u1691
  6831   002578  EFC0  F012         	goto	u1690
  6832   00257C                     u1691:
  6833   00257C  EFD8  F012         	goto	l2778
  6834   002580                     u1690:
  6835   002580  801C               	bsf	___fldiv@grs^0,0,c
  6836   002582  EFD8  F012         	goto	l2778
  6837   002586                     l2772:
  6838   002586  90D8               	bcf	status,0,c
  6839   002588  3609               	rlcf	___fldiv@b^0,f,c
  6840   00258A  360A               	rlcf	(___fldiv@b+1)^0,f,c
  6841   00258C  360B               	rlcf	(___fldiv@b+2)^0,f,c
  6842   00258E  360C               	rlcf	(___fldiv@b+3)^0,f,c
  6843   002590  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  6844   002592  EFCD  F012         	goto	u1701
  6845   002596  EFCF  F012         	goto	u1700
  6846   00259A                     u1701:
  6847   00259A  EFD0  F012         	goto	l1235
  6848   00259E                     u1700:
  6849   00259E  8009               	bsf	___fldiv@b^0,0,c
  6850   0025A0                     l1235:
  6851   0025A0  90D8               	bcf	status,0,c
  6852   0025A2  361C               	rlcf	___fldiv@grs^0,f,c
  6853   0025A4  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  6854   0025A6  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  6855   0025A8  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  6856   0025AA  061A               	decf	___fldiv@new_exp^0,f,c
  6857   0025AC  A0D8               	btfss	status,0,c
  6858   0025AE  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  6859   0025B0                     l2778:
  6860   0025B0  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  6861   0025B2  EFDD  F012         	goto	u1711
  6862   0025B6  EFDF  F012         	goto	u1710
  6863   0025BA                     u1711:
  6864   0025BA  EFC3  F012         	goto	l2772
  6865   0025BE                     u1710:
  6866   0025BE  0E00               	movlw	0
  6867   0025C0  6E21               	movwf	___fldiv@aexp^0,c
  6868   0025C2  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  6869   0025C4  EFE6  F012         	goto	u1721
  6870   0025C8  EFE8  F012         	goto	u1720
  6871   0025CC                     u1721:
  6872   0025CC  EF0C  F013         	goto	l1237
  6873   0025D0                     u1720:
  6874   0025D0  0EFF               	movlw	255
  6875   0025D2  141C               	andwf	___fldiv@grs^0,w,c
  6876   0025D4  6E11               	movwf	??___fldiv^0,c
  6877   0025D6  0EFF               	movlw	255
  6878   0025D8  141D               	andwf	(___fldiv@grs+1)^0,w,c
  6879   0025DA  6E12               	movwf	(??___fldiv+1)^0,c
  6880   0025DC  0EFF               	movlw	255
  6881   0025DE  141E               	andwf	(___fldiv@grs+2)^0,w,c
  6882   0025E0  6E13               	movwf	(??___fldiv+2)^0,c
  6883   0025E2  0E7F               	movlw	127
  6884   0025E4  141F               	andwf	(___fldiv@grs+3)^0,w,c
  6885   0025E6  6E14               	movwf	(??___fldiv+3)^0,c
  6886   0025E8  5011               	movf	??___fldiv^0,w,c
  6887   0025EA  1012               	iorwf	(??___fldiv+1)^0,w,c
  6888   0025EC  1013               	iorwf	(??___fldiv+2)^0,w,c
  6889   0025EE  1014               	iorwf	(??___fldiv+3)^0,w,c
  6890   0025F0  B4D8               	btfsc	status,2,c
  6891   0025F2  EFFD  F012         	goto	u1731
  6892   0025F6  EFFF  F012         	goto	u1730
  6893   0025FA                     u1731:
  6894   0025FA  EF03  F013         	goto	l1238
  6895   0025FE                     u1730:
  6896   0025FE                     l2786:
  6897   0025FE  0E01               	movlw	1
  6898   002600  6E21               	movwf	___fldiv@aexp^0,c
  6899   002602  EF0C  F013         	goto	l1237
  6900   002606                     l1238:
  6901   002606  A009               	btfss	___fldiv@b^0,0,c
  6902   002608  EF08  F013         	goto	u1741
  6903   00260C  EF0A  F013         	goto	u1740
  6904   002610                     u1741:
  6905   002610  EF0C  F013         	goto	l1237
  6906   002614                     u1740:
  6907   002614  EFFF  F012         	goto	l2786
  6908   002618                     l1237:
  6909   002618  5021               	movf	___fldiv@aexp^0,w,c
  6910   00261A  B4D8               	btfsc	status,2,c
  6911   00261C  EF12  F013         	goto	u1751
  6912   002620  EF14  F013         	goto	u1750
  6913   002624                     u1751:
  6914   002624  EF38  F013         	goto	l2798
  6915   002628                     u1750:
  6916   002628  0E01               	movlw	1
  6917   00262A  2609               	addwf	___fldiv@b^0,f,c
  6918   00262C  0E00               	movlw	0
  6919   00262E  220A               	addwfc	(___fldiv@b+1)^0,f,c
  6920   002630  220B               	addwfc	(___fldiv@b+2)^0,f,c
  6921   002632  220C               	addwfc	(___fldiv@b+3)^0,f,c
  6922   002634  A00C               	btfss	(___fldiv@b+3)^0,0,c
  6923   002636  EF1F  F013         	goto	u1761
  6924   00263A  EF21  F013         	goto	u1760
  6925   00263E                     u1761:
  6926   00263E  EF38  F013         	goto	l2798
  6927   002642                     u1760:
  6928   002642  C009  F011         	movff	___fldiv@b,??___fldiv
  6929   002646  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  6930   00264A  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  6931   00264E  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  6932   002652  3414               	rlcf	(??___fldiv+3)^0,w,c
  6933   002654  3214               	rrcf	(??___fldiv+3)^0,f,c
  6934   002656  3213               	rrcf	(??___fldiv+2)^0,f,c
  6935   002658  3212               	rrcf	(??___fldiv+1)^0,f,c
  6936   00265A  3211               	rrcf	??___fldiv^0,f,c
  6937   00265C  C011  F009         	movff	??___fldiv,___fldiv@b
  6938   002660  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  6939   002664  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  6940   002668  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  6941   00266C  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  6942   00266E  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  6943   002670                     l2798:
  6944   002670  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6945   002672  EF43  F013         	goto	u1771
  6946   002676  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  6947   002678  E108               	bnz	u1770
  6948   00267A  281A               	incf	___fldiv@new_exp^0,w,c
  6949   00267C  A0D8               	btfss	status,0,c
  6950   00267E  EF43  F013         	goto	u1771
  6951   002682  EF45  F013         	goto	u1770
  6952   002686                     u1771:
  6953   002686  EF50  F013         	goto	l2802
  6954   00268A                     u1770:
  6955   00268A  0E00               	movlw	0
  6956   00268C  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  6957   00268E  681A               	setf	___fldiv@new_exp^0,c
  6958   002690  0E00               	movlw	0
  6959   002692  6E09               	movwf	___fldiv@b^0,c
  6960   002694  0E00               	movlw	0
  6961   002696  6E0A               	movwf	(___fldiv@b+1)^0,c
  6962   002698  0E00               	movlw	0
  6963   00269A  6E0B               	movwf	(___fldiv@b+2)^0,c
  6964   00269C  0E00               	movlw	0
  6965   00269E  6E0C               	movwf	(___fldiv@b+3)^0,c
  6966   0026A0                     l2802:
  6967   0026A0  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6968   0026A2  EF5D  F013         	goto	u1780
  6969   0026A6  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  6970   0026A8  E106               	bnz	u1781
  6971   0026AA  041A               	decf	___fldiv@new_exp^0,w,c
  6972   0026AC  B0D8               	btfsc	status,0,c
  6973   0026AE  EF5B  F013         	goto	u1781
  6974   0026B2  EF5D  F013         	goto	u1780
  6975   0026B6                     u1781:
  6976   0026B6  EF6B  F013         	goto	l2806
  6977   0026BA                     u1780:
  6978   0026BA  0E00               	movlw	0
  6979   0026BC  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  6980   0026BE  0E00               	movlw	0
  6981   0026C0  6E1A               	movwf	___fldiv@new_exp^0,c
  6982   0026C2  0E00               	movlw	0
  6983   0026C4  6E09               	movwf	___fldiv@b^0,c
  6984   0026C6  0E00               	movlw	0
  6985   0026C8  6E0A               	movwf	(___fldiv@b+1)^0,c
  6986   0026CA  0E00               	movlw	0
  6987   0026CC  6E0B               	movwf	(___fldiv@b+2)^0,c
  6988   0026CE  0E00               	movlw	0
  6989   0026D0  6E0C               	movwf	(___fldiv@b+3)^0,c
  6990   0026D2  0E00               	movlw	0
  6991   0026D4  6E19               	movwf	___fldiv@sign^0,c
  6992   0026D6                     l2806:
  6993   0026D6  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  6994   0026DA  A020               	btfss	___fldiv@bexp^0,0,c
  6995   0026DC  EF72  F013         	goto	u1791
  6996   0026E0  EF74  F013         	goto	u1790
  6997   0026E4                     u1791:
  6998   0026E4  EF77  F013         	goto	l2812
  6999   0026E8                     u1790:
  7000   0026E8  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  7001   0026EA  EF78  F013         	goto	l2814
  7002   0026EE                     l2812:
  7003   0026EE  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  7004   0026F0                     l2814:
  7005   0026F0  90D8               	bcf	status,0,c
  7006   0026F2  3020               	rrcf	___fldiv@bexp^0,w,c
  7007   0026F4  6E0C               	movwf	(___fldiv@b+3)^0,c
  7008   0026F6  EF2E  F012         	goto	l2728
  7009   0026FA                     l1224:
  7010   0026FA  0012               	return		;funcret
  7011   0026FC                     __end_of___fldiv:
  7012                           	callstack 0
  7013                           
  7014 ;; *************** function _color_click_init *****************
  7015 ;; Defined at:
  7016 ;;		line 11 in file "color.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;		None
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;		None
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;Total ram usage:        1 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 9
  7037 ;; This function calls:
  7038 ;;		_I2C_2_Master_Init
  7039 ;;		_color_writetoaddr
  7040 ;; This function is called by:
  7041 ;;		_main
  7042 ;; This function uses a non-reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text27
  7046   0036A6                     __ptext27:
  7047                           	callstack 0
  7048   0036A6                     _color_click_init:
  7049                           	callstack 21
  7050   0036A6                     
  7051                           ;color.c: 14:     I2C_2_Master_Init();
  7052   0036A6  EC9F  F01B         	call	_I2C_2_Master_Init	;wreg free
  7053   0036AA                     
  7054                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  7055   0036AA  0E01               	movlw	1
  7056   0036AC  6E0B               	movwf	color_writetoaddr@value^0,c
  7057   0036AE  0E00               	movlw	0
  7058   0036B0  EC19  F01C         	call	_color_writetoaddr
  7059   0036B4                     
  7060                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7061   0036B4  0E3F               	movlw	63
  7062   0036B6  6E0D               	movwf	??_color_click_init^0,c
  7063   0036B8  0E55               	movlw	85
  7064   0036BA                     u4267:
  7065   0036BA  2EE8               	decfsz	wreg,f,c
  7066   0036BC  D7FE               	bra	u4267
  7067   0036BE  2E0D               	decfsz	??_color_click_init^0,f,c
  7068   0036C0  D7FC               	bra	u4267
  7069   0036C2  F000               	nop	
  7070   0036C4                     
  7071                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  7072   0036C4  0E03               	movlw	3
  7073   0036C6  6E0B               	movwf	color_writetoaddr@value^0,c
  7074   0036C8  0E00               	movlw	0
  7075   0036CA  EC19  F01C         	call	_color_writetoaddr
  7076   0036CE                     
  7077                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  7078   0036CE  0ED5               	movlw	213
  7079   0036D0  6E0B               	movwf	color_writetoaddr@value^0,c
  7080   0036D2  0E01               	movlw	1
  7081   0036D4  EC19  F01C         	call	_color_writetoaddr
  7082   0036D8  0012               	return		;funcret
  7083   0036DA                     __end_of_color_click_init:
  7084                           	callstack 0
  7085                           
  7086 ;; *************** function _I2C_2_Master_Init *****************
  7087 ;; Defined at:
  7088 ;;		line 4 in file "i2c.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;		None
  7093 ;; Return value:  Size  Location     Type
  7094 ;;                  1    wreg      void 
  7095 ;; Registers used:
  7096 ;;		wreg, status,2
  7097 ;; Tracked objects:
  7098 ;;		On entry : 0/0
  7099 ;;		On exit  : 0/0
  7100 ;;		Unchanged: 0/0
  7101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7106 ;;Total ram usage:        0 bytes
  7107 ;; Hardware stack levels used: 1
  7108 ;; Hardware stack levels required when called: 6
  7109 ;; This function calls:
  7110 ;;		Nothing
  7111 ;; This function is called by:
  7112 ;;		_color_click_init
  7113 ;; This function uses a non-reentrant model
  7114 ;;
  7115                           
  7116                           	psect	text28
  7117   00373E                     __ptext28:
  7118                           	callstack 0
  7119   00373E                     _I2C_2_Master_Init:
  7120                           	callstack 23
  7121   00373E                     
  7122                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7123   00373E  010E               	movlb	14	; () banked
  7124   003740  51D9               	movf	217,w,b	;volatile
  7125   003742  0BF0               	andlw	-16
  7126   003744  0908               	iorlw	8
  7127   003746  6FD9               	movwf	217,b	;volatile
  7128   003748                     
  7129                           ; BSR set to: 14
  7130                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7131   003748  8BD9               	bsf	217,5,b	;volatile
  7132                           
  7133                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7134   00374A  0E9F               	movlw	159
  7135   00374C  6FD6               	movwf	214,b	;volatile
  7136   00374E                     
  7137                           ; BSR set to: 14
  7138                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7139   00374E  8A84               	bsf	132,5,c	;volatile
  7140   003750                     
  7141                           ; BSR set to: 14
  7142                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7143   003750  8C84               	bsf	132,6,c	;volatile
  7144   003752                     
  7145                           ; BSR set to: 14
  7146                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7147   003752  9BA7               	bcf	167,5,b	;volatile
  7148   003754                     
  7149                           ; BSR set to: 14
  7150                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7151   003754  9DA7               	bcf	167,6,b	;volatile
  7152                           
  7153                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7154   003756  0E1D               	movlw	29
  7155   003758  6F1D               	movwf	29,b	;volatile
  7156                           
  7157                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7158   00375A  0E1E               	movlw	30
  7159   00375C  6F1C               	movwf	28,b	;volatile
  7160                           
  7161                           ;i2c.c: 18:   RD5PPS=0x1C;
  7162   00375E  0E1C               	movlw	28
  7163   003760  6F6F               	movwf	111,b	;volatile
  7164                           
  7165                           ;i2c.c: 19:   RD6PPS=0x1B;
  7166   003762  0E1B               	movlw	27
  7167   003764  6F70               	movwf	112,b	;volatile
  7168   003766                     
  7169                           ; BSR set to: 14
  7170   003766  0012               	return		;funcret
  7171   003768                     __end_of_I2C_2_Master_Init:
  7172                           	callstack 0
  7173                           
  7174 ;; *************** function _Interrupts_init *****************
  7175 ;; Defined at:
  7176 ;;		line 10 in file "interrupts.c"
  7177 ;; Parameters:    Size  Location     Type
  7178 ;;		None
  7179 ;; Auto vars:     Size  Location     Type
  7180 ;;		None
  7181 ;; Return value:  Size  Location     Type
  7182 ;;                  1    wreg      void 
  7183 ;; Registers used:
  7184 ;;		None
  7185 ;; Tracked objects:
  7186 ;;		On entry : 0/0
  7187 ;;		On exit  : 0/0
  7188 ;;		Unchanged: 0/0
  7189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7194 ;;Total ram usage:        0 bytes
  7195 ;; Hardware stack levels used: 1
  7196 ;; Hardware stack levels required when called: 6
  7197 ;; This function calls:
  7198 ;;		Nothing
  7199 ;; This function is called by:
  7200 ;;		_main
  7201 ;; This function uses a non-reentrant model
  7202 ;;
  7203                           
  7204                           	psect	text29
  7205   0038BC                     __ptext29:
  7206                           	callstack 0
  7207   0038BC                     _Interrupts_init:
  7208                           	callstack 24
  7209   0038BC                     
  7210                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7211   0038BC  8082               	bsf	130,0,c	;volatile
  7212                           
  7213                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  7214   0038BE  010E               	movlb	14	; () banked
  7215   0038C0  919A               	bcf	154,0,b	;volatile
  7216                           
  7217                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  7218   0038C2  9133               	bcf	51,0,b	;volatile
  7219                           
  7220                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  7221   0038C4  8129               	bsf	41,0,b	;volatile
  7222                           
  7223                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  7224   0038C6  811F               	bsf	31,0,b	;volatile
  7225                           
  7226                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  7227   0038C8  90F2               	bcf	242,0,c	;volatile
  7228                           
  7229                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  7230   0038CA  8AF2               	bsf	242,5,c	;volatile
  7231                           
  7232                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  7233   0038CC  8CF2               	bsf	242,6,c	;volatile
  7234                           
  7235                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  7236   0038CE  8EF2               	bsf	242,7,c	;volatile
  7237   0038D0                     
  7238                           ; BSR set to: 14
  7239   0038D0  0012               	return		;funcret
  7240   0038D2                     __end_of_Interrupts_init:
  7241                           	callstack 0
  7242                           
  7243 ;; *************** function _Color_Interrupts_threshold *****************
  7244 ;; Defined at:
  7245 ;;		line 38 in file "interrupts.c"
  7246 ;; Parameters:    Size  Location     Type
  7247 ;;  upperThresho    2   12[COMRAM] unsigned int 
  7248 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  7249 ;; Auto vars:     Size  Location     Type
  7250 ;;		None
  7251 ;; Return value:  Size  Location     Type
  7252 ;;                  1    wreg      void 
  7253 ;; Registers used:
  7254 ;;		wreg, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7264 ;;Total ram usage:        4 bytes
  7265 ;; Hardware stack levels used: 1
  7266 ;; Hardware stack levels required when called: 9
  7267 ;; This function calls:
  7268 ;;		_color_writetoaddr
  7269 ;; This function is called by:
  7270 ;;		_main
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text30
  7275   003768                     __ptext30:
  7276                           	callstack 0
  7277   003768                     _Color_Interrupts_threshold:
  7278                           	callstack 21
  7279   003768                     
  7280                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7281   003768  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  7282   00376C  0E04               	movlw	4
  7283   00376E  EC19  F01C         	call	_color_writetoaddr
  7284                           
  7285                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7286   003772  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7287   003774  6E0B               	movwf	color_writetoaddr@value^0,c
  7288   003776  0E05               	movlw	5
  7289   003778  EC19  F01C         	call	_color_writetoaddr
  7290                           
  7291                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7292   00377C  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  7293   003780  0E06               	movlw	6
  7294   003782  EC19  F01C         	call	_color_writetoaddr
  7295                           
  7296                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7297   003786  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7298   003788  6E0B               	movwf	color_writetoaddr@value^0,c
  7299   00378A  0E07               	movlw	7
  7300   00378C  EC19  F01C         	call	_color_writetoaddr
  7301   003790  0012               	return		;funcret
  7302   003792                     __end_of_Color_Interrupts_threshold:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function _Color_Interrupts_init *****************
  7306 ;; Defined at:
  7307 ;;		line 29 in file "interrupts.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		wreg, status,2, status,0, cstack
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7324 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7325 ;;Total ram usage:        1 bytes
  7326 ;; Hardware stack levels used: 1
  7327 ;; Hardware stack levels required when called: 9
  7328 ;; This function calls:
  7329 ;;		_color_writetoaddr
  7330 ;; This function is called by:
  7331 ;;		_main
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text31
  7336   003872                     __ptext31:
  7337                           	callstack 0
  7338   003872                     _Color_Interrupts_init:
  7339                           	callstack 21
  7340   003872                     
  7341                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7342   003872  0E13               	movlw	19
  7343   003874  6E0B               	movwf	color_writetoaddr@value^0,c
  7344   003876  0E00               	movlw	0
  7345   003878  EC19  F01C         	call	_color_writetoaddr
  7346   00387C                     
  7347                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7348   00387C  0ED0               	movlw	208
  7349   00387E  6E0D               	movwf	??_Color_Interrupts_init^0,c
  7350   003880  0ECA               	movlw	202
  7351   003882                     u4277:
  7352   003882  2EE8               	decfsz	wreg,f,c
  7353   003884  D7FE               	bra	u4277
  7354   003886  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  7355   003888  D7FC               	bra	u4277
  7356   00388A  0012               	return		;funcret
  7357   00388C                     __end_of_Color_Interrupts_init:
  7358                           	callstack 0
  7359                           
  7360 ;; *************** function _color_writetoaddr *****************
  7361 ;; Defined at:
  7362 ;;		line 27 in file "color.c"
  7363 ;; Parameters:    Size  Location     Type
  7364 ;;  address         1    wreg     unsigned char 
  7365 ;;  value           1   10[COMRAM] unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  address         1   11[COMRAM] unsigned char 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  1    wreg      void 
  7370 ;; Registers used:
  7371 ;;		wreg, status,2, status,0, cstack
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/0
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7378 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7381 ;;Total ram usage:        2 bytes
  7382 ;; Hardware stack levels used: 1
  7383 ;; Hardware stack levels required when called: 8
  7384 ;; This function calls:
  7385 ;;		_I2C_2_Master_Start
  7386 ;;		_I2C_2_Master_Stop
  7387 ;;		_I2C_2_Master_Write
  7388 ;; This function is called by:
  7389 ;;		_color_click_init
  7390 ;;		_Color_Interrupts_init
  7391 ;;		_Color_Interrupts_threshold
  7392 ;;		_persistence_register
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text32
  7397   003832                     __ptext32:
  7398                           	callstack 0
  7399   003832                     _color_writetoaddr:
  7400                           	callstack 21
  7401                           
  7402                           ;incstack = 0
  7403                           ;color_writetoaddr@address stored from wreg
  7404   003832  6E0C               	movwf	color_writetoaddr@address^0,c
  7405   003834                     
  7406                           ;color.c: 28:     I2C_2_Master_Start();
  7407   003834  EC8B  F01C         	call	_I2C_2_Master_Start	;wreg free
  7408                           
  7409                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  7410   003838  0E52               	movlw	82
  7411   00383A  EC6F  F01C         	call	_I2C_2_Master_Write
  7412                           
  7413                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  7414   00383E  500C               	movf	color_writetoaddr@address^0,w,c
  7415   003840  0980               	iorlw	128
  7416   003842  EC6F  F01C         	call	_I2C_2_Master_Write
  7417                           
  7418                           ;color.c: 31:     I2C_2_Master_Write(value);
  7419   003846  500B               	movf	color_writetoaddr@value^0,w,c
  7420   003848  EC6F  F01C         	call	_I2C_2_Master_Write
  7421                           
  7422                           ;color.c: 32:     I2C_2_Master_Stop();
  7423   00384C  EC86  F01C         	call	_I2C_2_Master_Stop	;wreg free
  7424   003850  0012               	return		;funcret
  7425   003852                     __end_of_color_writetoaddr:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function _I2C_2_Master_Write *****************
  7429 ;; Defined at:
  7430 ;;		line 45 in file "i2c.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  data_byte       1    wreg     unsigned char 
  7433 ;; Auto vars:     Size  Location     Type
  7434 ;;  data_byte       1    9[COMRAM] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  1    wreg      void 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0, cstack
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7447 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7448 ;;Total ram usage:        1 bytes
  7449 ;; Hardware stack levels used: 1
  7450 ;; Hardware stack levels required when called: 7
  7451 ;; This function calls:
  7452 ;;		_I2C_2_Master_Idle
  7453 ;; This function is called by:
  7454 ;;		_color_writetoaddr
  7455 ;;		_color_read_Red
  7456 ;;		_color_read_Green
  7457 ;;		_color_read_Blue
  7458 ;;		_color_read_Clear
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text33
  7463   0038DE                     __ptext33:
  7464                           	callstack 0
  7465   0038DE                     _I2C_2_Master_Write:
  7466                           	callstack 21
  7467                           
  7468                           ;incstack = 0
  7469                           ;I2C_2_Master_Write@data_byte stored from wreg
  7470   0038DE  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7471   0038E0                     
  7472                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7473   0038E0  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7474   0038E4                     
  7475                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7476   0038E4  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7477   0038E8  0012               	return		;funcret
  7478   0038EA                     __end_of_I2C_2_Master_Write:
  7479                           	callstack 0
  7480                           
  7481 ;; *************** function _I2C_2_Master_Stop *****************
  7482 ;; Defined at:
  7483 ;;		line 39 in file "i2c.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;		None
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;		None
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;Total ram usage:        0 bytes
  7502 ;; Hardware stack levels used: 1
  7503 ;; Hardware stack levels required when called: 7
  7504 ;; This function calls:
  7505 ;;		_I2C_2_Master_Idle
  7506 ;; This function is called by:
  7507 ;;		_color_writetoaddr
  7508 ;;		_color_read_Red
  7509 ;;		_color_read_Green
  7510 ;;		_color_read_Blue
  7511 ;;		_color_read_Clear
  7512 ;; This function uses a non-reentrant model
  7513 ;;
  7514                           
  7515                           	psect	text34
  7516   00390C                     __ptext34:
  7517                           	callstack 0
  7518   00390C                     _I2C_2_Master_Stop:
  7519                           	callstack 21
  7520   00390C                     
  7521                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7522   00390C  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7523   003910                     
  7524                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7525   003910  010E               	movlb	14	; () banked
  7526   003912  85DA               	bsf	218,2,b	;volatile
  7527   003914                     
  7528                           ; BSR set to: 14
  7529   003914  0012               	return		;funcret
  7530   003916                     __end_of_I2C_2_Master_Stop:
  7531                           	callstack 0
  7532                           
  7533 ;; *************** function _I2C_2_Master_Start *****************
  7534 ;; Defined at:
  7535 ;;		line 27 in file "i2c.c"
  7536 ;; Parameters:    Size  Location     Type
  7537 ;;		None
  7538 ;; Auto vars:     Size  Location     Type
  7539 ;;		None
  7540 ;; Return value:  Size  Location     Type
  7541 ;;                  1    wreg      void 
  7542 ;; Registers used:
  7543 ;;		wreg, status,2, status,0, cstack
  7544 ;; Tracked objects:
  7545 ;;		On entry : 0/0
  7546 ;;		On exit  : 0/0
  7547 ;;		Unchanged: 0/0
  7548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7553 ;;Total ram usage:        0 bytes
  7554 ;; Hardware stack levels used: 1
  7555 ;; Hardware stack levels required when called: 7
  7556 ;; This function calls:
  7557 ;;		_I2C_2_Master_Idle
  7558 ;; This function is called by:
  7559 ;;		_color_writetoaddr
  7560 ;;		_color_read_Red
  7561 ;;		_color_read_Green
  7562 ;;		_color_read_Blue
  7563 ;;		_color_read_Clear
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text35
  7568   003916                     __ptext35:
  7569                           	callstack 0
  7570   003916                     _I2C_2_Master_Start:
  7571                           	callstack 21
  7572   003916                     
  7573                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7574   003916  ECDE  F01B         	call	_I2C_2_Master_Idle	;wreg free
  7575   00391A                     
  7576                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7577   00391A  010E               	movlb	14	; () banked
  7578   00391C  81DA               	bsf	218,0,b	;volatile
  7579   00391E                     
  7580                           ; BSR set to: 14
  7581   00391E  0012               	return		;funcret
  7582   003920                     __end_of_I2C_2_Master_Start:
  7583                           	callstack 0
  7584                           
  7585 ;; *************** function _I2C_2_Master_Idle *****************
  7586 ;; Defined at:
  7587 ;;		line 22 in file "i2c.c"
  7588 ;; Parameters:    Size  Location     Type
  7589 ;;		None
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7605 ;;Total ram usage:        1 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 6
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_I2C_2_Master_Start
  7612 ;;		_I2C_2_Master_RepStart
  7613 ;;		_I2C_2_Master_Stop
  7614 ;;		_I2C_2_Master_Write
  7615 ;;		_I2C_2_Master_Read
  7616 ;; This function uses a non-reentrant model
  7617 ;;
  7618                           
  7619                           	psect	text36
  7620   0037BC                     __ptext36:
  7621                           	callstack 0
  7622   0037BC                     _I2C_2_Master_Idle:
  7623                           	callstack 21
  7624   0037BC                     l207:
  7625   0037BC  010E               	movlb	14	; () banked
  7626   0037BE  B5D8               	btfsc	216,2,b	;volatile
  7627   0037C0  EFE4  F01B         	goto	u1461
  7628   0037C4  EFE6  F01B         	goto	u1460
  7629   0037C8                     u1461:
  7630   0037C8  EFDE  F01B         	goto	l207
  7631   0037CC                     u1460:
  7632   0037CC                     
  7633                           ; BSR set to: 14
  7634   0037CC  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7635   0037D0  0E1F               	movlw	31
  7636   0037D2  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7637   0037D4  A4D8               	btfss	status,2,c
  7638   0037D6  EFEF  F01B         	goto	u1471
  7639   0037DA  EFF1  F01B         	goto	u1470
  7640   0037DE                     u1471:
  7641   0037DE  EFDE  F01B         	goto	l207
  7642   0037E2                     u1470:
  7643   0037E2                     
  7644                           ; BSR set to: 14
  7645   0037E2  0012               	return		;funcret
  7646   0037E4                     __end_of_I2C_2_Master_Idle:
  7647                           	callstack 0
  7648                           
  7649 ;; *************** function _HighISR *****************
  7650 ;; Defined at:
  7651 ;;		line 71 in file "interrupts.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used: 1
  7671 ;; Hardware stack levels required when called: 5
  7672 ;; This function calls:
  7673 ;;		_Color_Interrupts_clear
  7674 ;; This function is called by:
  7675 ;;		Interrupt level 2
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	intcode
  7680   000008                     __pintcode:
  7681                           	callstack 0
  7682   000008                     _HighISR:
  7683                           	callstack 21
  7684                           
  7685                           ; BSR set to: 14
  7686                           ;incstack = 0
  7687   000008  824E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7688   00000A                     
  7689                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  7690   00000A  010E               	movlb	14	; () banked
  7691   00000C  A133               	btfss	51,0,b	;volatile
  7692   00000E  EF0B  F000         	goto	i2u276_41
  7693   000012  EF0D  F000         	goto	i2u276_40
  7694   000016                     i2u276_41:
  7695   000016  EF19  F000         	goto	i2l503
  7696   00001A                     i2u276_40:
  7697   00001A                     
  7698                           ; BSR set to: 14
  7699                           ;interrupts.c: 77:         LATDbits.LATD7 = 1;
  7700   00001A  8E7C               	bsf	124,7,c	;volatile
  7701   00001C                     
  7702                           ; BSR set to: 14
  7703                           ;interrupts.c: 78:         interrupt_flag = 1;
  7704   00001C  0E00               	movlw	0
  7705   00001E  0100               	movlb	0	; () banked
  7706   000020  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  7707   000022  0E01               	movlw	1
  7708   000024  6FA0               	movwf	_interrupt_flag& (0+255),b
  7709   000026                     
  7710                           ; BSR set to: 0
  7711                           ;interrupts.c: 79:         interrupt_ctr++;
  7712   000026  4B9E               	infsnz	_interrupt_ctr& (0+255),f,b
  7713   000028  2B9F               	incf	(_interrupt_ctr+1)& (0+255),f,b
  7714   00002A                     
  7715                           ; BSR set to: 0
  7716                           ;interrupts.c: 80:         Color_Interrupts_clear();
  7717   00002A  EC86  F01B         	call	_Color_Interrupts_clear	;wreg free
  7718   00002E                     
  7719                           ;interrupts.c: 81:         PIR0bits.INT0IF = 0;
  7720   00002E  010E               	movlb	14	; () banked
  7721   000030  9133               	bcf	51,0,b	;volatile
  7722   000032                     i2l503:
  7723                           
  7724                           ; BSR set to: 14
  7725   000032  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7726   000034  0011               	retfie		f
  7727   000036                     __end_of_HighISR:
  7728                           	callstack 0
  7729                           
  7730 ;; *************** function _Color_Interrupts_clear *****************
  7731 ;; Defined at:
  7732 ;;		line 51 in file "interrupts.c"
  7733 ;; Parameters:    Size  Location     Type
  7734 ;;		None
  7735 ;; Auto vars:     Size  Location     Type
  7736 ;;		None
  7737 ;; Return value:  Size  Location     Type
  7738 ;;                  1    wreg      void 
  7739 ;; Registers used:
  7740 ;;		wreg, status,2, status,0, cstack
  7741 ;; Tracked objects:
  7742 ;;		On entry : 0/0
  7743 ;;		On exit  : 0/0
  7744 ;;		Unchanged: 0/0
  7745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7750 ;;Total ram usage:        0 bytes
  7751 ;; Hardware stack levels used: 1
  7752 ;; Hardware stack levels required when called: 4
  7753 ;; This function calls:
  7754 ;;		i2_Color_Interrupts_init
  7755 ;;		i2_Color_Interrupts_threshold
  7756 ;;		i2_I2C_2_Master_Start
  7757 ;;		i2_I2C_2_Master_Stop
  7758 ;;		i2_I2C_2_Master_Write
  7759 ;;		i2_persistence_register
  7760 ;; This function is called by:
  7761 ;;		_HighISR
  7762 ;; This function uses a non-reentrant model
  7763 ;;
  7764                           
  7765                           	psect	text38
  7766   00370C                     __ptext38:
  7767                           	callstack 0
  7768   00370C                     _Color_Interrupts_clear:
  7769                           	callstack 21
  7770   00370C                     
  7771                           ;interrupts.c: 55:     I2C_2_Master_Start();
  7772   00370C  EC95  F01C         	call	i2_I2C_2_Master_Start	;wreg free
  7773                           
  7774                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  7775   003710  0E52               	movlw	82
  7776   003712  EC7B  F01C         	call	i2_I2C_2_Master_Write
  7777                           
  7778                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  7779   003716  0EE6               	movlw	230
  7780   003718  EC7B  F01C         	call	i2_I2C_2_Master_Write
  7781                           
  7782                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  7783   00371C  EC90  F01C         	call	i2_I2C_2_Master_Stop	;wreg free
  7784                           
  7785                           ;interrupts.c: 61:     Color_Interrupts_init();
  7786   003720  EC46  F01C         	call	i2_Color_Interrupts_init	;wreg free
  7787                           
  7788                           ;interrupts.c: 62:     persistence_register();
  7789   003724  EC75  F01C         	call	i2_persistence_register	;wreg free
  7790                           
  7791                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  7792   003728  C0F8  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  7793   00372C  C0F9  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  7794   003730  C09C  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  7795   003734  C09D  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  7796   003738  ECC9  F01B         	call	i2_Color_Interrupts_threshold	;wreg free
  7797   00373C  0012               	return		;funcret
  7798   00373E                     __end_of_Color_Interrupts_clear:
  7799                           	callstack 0
  7800                           
  7801 ;; *************** function i2_persistence_register *****************
  7802 ;; Defined at:
  7803 ;;		line 46 in file "interrupts.c"
  7804 ;; Parameters:    Size  Location     Type
  7805 ;;		None
  7806 ;; Auto vars:     Size  Location     Type
  7807 ;;		None
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  1    wreg      void 
  7810 ;; Registers used:
  7811 ;;		wreg, status,2, status,0, cstack
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;Total ram usage:        0 bytes
  7822 ;; Hardware stack levels used: 1
  7823 ;; Hardware stack levels required when called: 3
  7824 ;; This function calls:
  7825 ;;		i2_color_writetoaddr
  7826 ;; This function is called by:
  7827 ;;		_Color_Interrupts_clear
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text39
  7832   0038EA                     __ptext39:
  7833                           	callstack 0
  7834   0038EA                     i2_persistence_register:
  7835                           	callstack 21
  7836   0038EA                     
  7837                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  7838   0038EA  0E02               	movlw	2
  7839   0038EC  6E03               	movwf	i2color_writetoaddr@value^0,c
  7840   0038EE  0E0C               	movlw	12
  7841   0038F0  EC29  F01C         	call	i2_color_writetoaddr
  7842   0038F4  0012               	return		;funcret
  7843   0038F6                     __end_ofi2_persistence_register:
  7844                           	callstack 0
  7845                           
  7846 ;; *************** function i2_Color_Interrupts_threshold *****************
  7847 ;; Defined at:
  7848 ;;		line 38 in file "interrupts.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  upperThresho    2    4[COMRAM] unsigned int 
  7851 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;		None
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  1    wreg      void 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0, cstack
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7867 ;;Total ram usage:        4 bytes
  7868 ;; Hardware stack levels used: 1
  7869 ;; Hardware stack levels required when called: 3
  7870 ;; This function calls:
  7871 ;;		i2_color_writetoaddr
  7872 ;; This function is called by:
  7873 ;;		_Color_Interrupts_clear
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           	psect	text40
  7878   003792                     __ptext40:
  7879                           	callstack 0
  7880   003792                     i2_Color_Interrupts_threshold:
  7881                           	callstack 21
  7882   003792                     
  7883                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7884   003792  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  7885   003796  0E04               	movlw	4
  7886   003798  EC29  F01C         	call	i2_color_writetoaddr
  7887                           
  7888                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7889   00379C  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7890   00379E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7891   0037A0  0E05               	movlw	5
  7892   0037A2  EC29  F01C         	call	i2_color_writetoaddr
  7893                           
  7894                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7895   0037A6  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  7896   0037AA  0E06               	movlw	6
  7897   0037AC  EC29  F01C         	call	i2_color_writetoaddr
  7898                           
  7899                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7900   0037B0  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7901   0037B2  6E03               	movwf	i2color_writetoaddr@value^0,c
  7902   0037B4  0E07               	movlw	7
  7903   0037B6  EC29  F01C         	call	i2_color_writetoaddr
  7904   0037BA  0012               	return		;funcret
  7905   0037BC                     __end_ofi2_Color_Interrupts_threshold:
  7906                           	callstack 0
  7907                           
  7908 ;; *************** function i2_Color_Interrupts_init *****************
  7909 ;; Defined at:
  7910 ;;		line 29 in file "interrupts.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;		None
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;		None
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg, status,2, status,0, cstack
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;Total ram usage:        1 bytes
  7929 ;; Hardware stack levels used: 1
  7930 ;; Hardware stack levels required when called: 3
  7931 ;; This function calls:
  7932 ;;		i2_color_writetoaddr
  7933 ;; This function is called by:
  7934 ;;		_Color_Interrupts_clear
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text41
  7939   00388C                     __ptext41:
  7940                           	callstack 0
  7941   00388C                     i2_Color_Interrupts_init:
  7942                           	callstack 21
  7943   00388C                     
  7944                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7945   00388C  0E13               	movlw	19
  7946   00388E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7947   003890  0E00               	movlw	0
  7948   003892  EC29  F01C         	call	i2_color_writetoaddr
  7949   003896                     
  7950                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7951   003896  0ED0               	movlw	208
  7952   003898  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  7953   00389A  0ECA               	movlw	202
  7954   00389C                     i2u428_47:
  7955   00389C  2EE8               	decfsz	wreg,f,c
  7956   00389E  D7FE               	bra	i2u428_47
  7957   0038A0  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  7958   0038A2  D7FC               	bra	i2u428_47
  7959   0038A4  0012               	return		;funcret
  7960   0038A6                     __end_ofi2_Color_Interrupts_init:
  7961                           	callstack 0
  7962                           
  7963 ;; *************** function i2_color_writetoaddr *****************
  7964 ;; Defined at:
  7965 ;;		line 27 in file "color.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  address         1    wreg     unsigned char 
  7968 ;;  value           1    2[COMRAM] unsigned char 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  address         1    3[COMRAM] unsigned char 
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, status,2, status,0, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7980 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7981 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7984 ;;Total ram usage:        2 bytes
  7985 ;; Hardware stack levels used: 1
  7986 ;; Hardware stack levels required when called: 2
  7987 ;; This function calls:
  7988 ;;		i2_I2C_2_Master_Start
  7989 ;;		i2_I2C_2_Master_Stop
  7990 ;;		i2_I2C_2_Master_Write
  7991 ;; This function is called by:
  7992 ;;		i2_Color_Interrupts_init
  7993 ;;		i2_Color_Interrupts_threshold
  7994 ;;		i2_persistence_register
  7995 ;; This function uses a non-reentrant model
  7996 ;;
  7997                           
  7998                           	psect	text42
  7999   003852                     __ptext42:
  8000                           	callstack 0
  8001   003852                     i2_color_writetoaddr:
  8002                           	callstack 21
  8003                           
  8004                           ;incstack = 0
  8005                           ;i2color_writetoaddr@address stored from wreg
  8006   003852  6E04               	movwf	i2color_writetoaddr@address^0,c
  8007   003854                     
  8008                           ;color.c: 28:     I2C_2_Master_Start();
  8009   003854  EC95  F01C         	call	i2_I2C_2_Master_Start	;wreg free
  8010                           
  8011                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  8012   003858  0E52               	movlw	82
  8013   00385A  EC7B  F01C         	call	i2_I2C_2_Master_Write
  8014                           
  8015                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  8016   00385E  5004               	movf	i2color_writetoaddr@address^0,w,c
  8017   003860  0980               	iorlw	128
  8018   003862  EC7B  F01C         	call	i2_I2C_2_Master_Write
  8019                           
  8020                           ;color.c: 31:     I2C_2_Master_Write(value);
  8021   003866  5003               	movf	i2color_writetoaddr@value^0,w,c
  8022   003868  EC7B  F01C         	call	i2_I2C_2_Master_Write
  8023                           
  8024                           ;color.c: 32:     I2C_2_Master_Stop();
  8025   00386C  EC90  F01C         	call	i2_I2C_2_Master_Stop	;wreg free
  8026   003870  0012               	return		;funcret
  8027   003872                     __end_ofi2_color_writetoaddr:
  8028                           	callstack 0
  8029                           
  8030 ;; *************** function i2_I2C_2_Master_Write *****************
  8031 ;; Defined at:
  8032 ;;		line 45 in file "i2c.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  data_byte       1    wreg     unsigned char 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  data_byte       1    1[COMRAM] unsigned char 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  1    wreg      void 
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8050 ;;Total ram usage:        1 bytes
  8051 ;; Hardware stack levels used: 1
  8052 ;; Hardware stack levels required when called: 1
  8053 ;; This function calls:
  8054 ;;		i2_I2C_2_Master_Idle
  8055 ;; This function is called by:
  8056 ;;		_Color_Interrupts_clear
  8057 ;;		i2_color_writetoaddr
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text43
  8062   0038F6                     __ptext43:
  8063                           	callstack 0
  8064   0038F6                     i2_I2C_2_Master_Write:
  8065                           	callstack 21
  8066                           
  8067                           ;incstack = 0
  8068                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8069   0038F6  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8070   0038F8                     
  8071                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8072   0038F8  ECF2  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8073   0038FC                     
  8074                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8075   0038FC  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8076   003900  0012               	return		;funcret
  8077   003902                     __end_ofi2_I2C_2_Master_Write:
  8078                           	callstack 0
  8079                           
  8080 ;; *************** function i2_I2C_2_Master_Stop *****************
  8081 ;; Defined at:
  8082 ;;		line 39 in file "i2c.c"
  8083 ;; Parameters:    Size  Location     Type
  8084 ;;		None
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;		None
  8087 ;; Return value:  Size  Location     Type
  8088 ;;                  1    wreg      void 
  8089 ;; Registers used:
  8090 ;;		wreg, status,2, status,0, cstack
  8091 ;; Tracked objects:
  8092 ;;		On entry : 0/0
  8093 ;;		On exit  : 0/0
  8094 ;;		Unchanged: 0/0
  8095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;Total ram usage:        0 bytes
  8101 ;; Hardware stack levels used: 1
  8102 ;; Hardware stack levels required when called: 1
  8103 ;; This function calls:
  8104 ;;		i2_I2C_2_Master_Idle
  8105 ;; This function is called by:
  8106 ;;		_Color_Interrupts_clear
  8107 ;;		i2_color_writetoaddr
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text44
  8112   003920                     __ptext44:
  8113                           	callstack 0
  8114   003920                     i2_I2C_2_Master_Stop:
  8115                           	callstack 21
  8116   003920                     
  8117                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8118   003920  ECF2  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8119   003924                     
  8120                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8121   003924  010E               	movlb	14	; () banked
  8122   003926  85DA               	bsf	218,2,b	;volatile
  8123   003928                     
  8124                           ; BSR set to: 14
  8125   003928  0012               	return		;funcret
  8126   00392A                     __end_ofi2_I2C_2_Master_Stop:
  8127                           	callstack 0
  8128                           
  8129 ;; *************** function i2_I2C_2_Master_Start *****************
  8130 ;; Defined at:
  8131 ;;		line 27 in file "i2c.c"
  8132 ;; Parameters:    Size  Location     Type
  8133 ;;		None
  8134 ;; Auto vars:     Size  Location     Type
  8135 ;;		None
  8136 ;; Return value:  Size  Location     Type
  8137 ;;                  1    wreg      void 
  8138 ;; Registers used:
  8139 ;;		wreg, status,2, status,0, cstack
  8140 ;; Tracked objects:
  8141 ;;		On entry : 0/0
  8142 ;;		On exit  : 0/0
  8143 ;;		Unchanged: 0/0
  8144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8149 ;;Total ram usage:        0 bytes
  8150 ;; Hardware stack levels used: 1
  8151 ;; Hardware stack levels required when called: 1
  8152 ;; This function calls:
  8153 ;;		i2_I2C_2_Master_Idle
  8154 ;; This function is called by:
  8155 ;;		_Color_Interrupts_clear
  8156 ;;		i2_color_writetoaddr
  8157 ;; This function uses a non-reentrant model
  8158 ;;
  8159                           
  8160                           	psect	text45
  8161   00392A                     __ptext45:
  8162                           	callstack 0
  8163   00392A                     i2_I2C_2_Master_Start:
  8164                           	callstack 21
  8165   00392A                     
  8166                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8167   00392A  ECF2  F01B         	call	i2_I2C_2_Master_Idle	;wreg free
  8168   00392E                     
  8169                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8170   00392E  010E               	movlb	14	; () banked
  8171   003930  81DA               	bsf	218,0,b	;volatile
  8172   003932                     
  8173                           ; BSR set to: 14
  8174   003932  0012               	return		;funcret
  8175   003934                     __end_ofi2_I2C_2_Master_Start:
  8176                           	callstack 0
  8177                           
  8178 ;; *************** function i2_I2C_2_Master_Idle *****************
  8179 ;; Defined at:
  8180 ;;		line 22 in file "i2c.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;		None
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;		None
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  1    wreg      void 
  8187 ;; Registers used:
  8188 ;;		wreg, status,2, status,0
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8198 ;;Total ram usage:        1 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; This function calls:
  8201 ;;		Nothing
  8202 ;; This function is called by:
  8203 ;;		i2_I2C_2_Master_Start
  8204 ;;		i2_I2C_2_Master_Stop
  8205 ;;		i2_I2C_2_Master_Write
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text46
  8210   0037E4                     __ptext46:
  8211                           	callstack 0
  8212   0037E4                     i2_I2C_2_Master_Idle:
  8213                           	callstack 21
  8214   0037E4                     i2l207:
  8215   0037E4  010E               	movlb	14	; () banked
  8216   0037E6  B5D8               	btfsc	216,2,b	;volatile
  8217   0037E8  EFF8  F01B         	goto	i2u144_41
  8218   0037EC  EFFA  F01B         	goto	i2u144_40
  8219   0037F0                     i2u144_41:
  8220   0037F0  EFF2  F01B         	goto	i2l207
  8221   0037F4                     i2u144_40:
  8222   0037F4                     
  8223                           ; BSR set to: 14
  8224   0037F4  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8225   0037F8  0E1F               	movlw	31
  8226   0037FA  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8227   0037FC  A4D8               	btfss	status,2,c
  8228   0037FE  EF03  F01C         	goto	i2u145_41
  8229   003802  EF05  F01C         	goto	i2u145_40
  8230   003806                     i2u145_41:
  8231   003806  EFF2  F01B         	goto	i2l207
  8232   00380A                     i2u145_40:
  8233   00380A                     
  8234                           ; BSR set to: 14
  8235   00380A  0012               	return		;funcret
  8236   00380C                     __end_ofi2_I2C_2_Master_Idle:
  8237                           	callstack 0
  8238                           
  8239                           	psect	rparam
  8240   000000                     
  8241                           	psect	temp
  8242   00004E                     btemp:
  8243                           	callstack 0
  8244   00004E                     	ds	1
  8245   000000                     int$flags	set	btemp
  8246   000000                     wtemp8	set	btemp+1
  8247   000000                     ttemp5	set	btemp+1
  8248   000000                     ttemp6	set	btemp+4
  8249   000000                     ttemp7	set	btemp+8
  8250                           
  8251                           	psect	idloc
  8252                           
  8253                           ;Config register IDLOC0 @ 0x200000
  8254                           ;	unspecified, using default values
  8255   200000                     	org	2097152
  8256   200000  0FFF               	dw	4095
  8257                           
  8258                           ;Config register IDLOC1 @ 0x200002
  8259                           ;	unspecified, using default values
  8260   200002                     	org	2097154
  8261   200002  0FFF               	dw	4095
  8262                           
  8263                           ;Config register IDLOC2 @ 0x200004
  8264                           ;	unspecified, using default values
  8265   200004                     	org	2097156
  8266   200004  0FFF               	dw	4095
  8267                           
  8268                           ;Config register IDLOC3 @ 0x200006
  8269                           ;	unspecified, using default values
  8270   200006                     	org	2097158
  8271   200006  0FFF               	dw	4095
  8272                           
  8273                           ;Config register IDLOC4 @ 0x200008
  8274                           ;	unspecified, using default values
  8275   200008                     	org	2097160
  8276   200008  0FFF               	dw	4095
  8277                           
  8278                           ;Config register IDLOC5 @ 0x20000A
  8279                           ;	unspecified, using default values
  8280   20000A                     	org	2097162
  8281   20000A  0FFF               	dw	4095
  8282                           
  8283                           ;Config register IDLOC6 @ 0x20000C
  8284                           ;	unspecified, using default values
  8285   20000C                     	org	2097164
  8286   20000C  0FFF               	dw	4095
  8287                           
  8288                           ;Config register IDLOC7 @ 0x20000E
  8289                           ;	unspecified, using default values
  8290   20000E                     	org	2097166
  8291   20000E  0FFF               	dw	4095
  8292                           
  8293                           	psect	config
  8294                           
  8295                           ;Config register CONFIG1L @ 0x300000
  8296                           ;	External Oscillator mode Selection bits
  8297                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8298                           ;	Power-up default value for COSC bits
  8299                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8300   300000                     	org	3145728
  8301   300000  AA                 	db	170
  8302                           
  8303                           ;Config register CONFIG1H @ 0x300001
  8304                           ;	unspecified, using default values
  8305                           ;	Clock Out Enable bit
  8306                           ;	CLKOUTEN = 0x1, unprogrammed default
  8307                           ;	Clock Switch Enable bit
  8308                           ;	CSWEN = 0x1, unprogrammed default
  8309                           ;	Fail-Safe Clock Monitor Enable bit
  8310                           ;	FCMEN = 0x1, unprogrammed default
  8311   300001                     	org	3145729
  8312   300001  FF                 	db	255
  8313                           
  8314                           ;Config register CONFIG2L @ 0x300002
  8315                           ;	unspecified, using default values
  8316                           ;	Master Clear Enable bit
  8317                           ;	MCLRE = 0x1, unprogrammed default
  8318                           ;	Power-up Timer Enable bit
  8319                           ;	PWRTE = 0x1, unprogrammed default
  8320                           ;	Low-power BOR enable bit
  8321                           ;	LPBOREN = 0x1, unprogrammed default
  8322                           ;	Brown-out Reset Enable bits
  8323                           ;	BOREN = 0x3, unprogrammed default
  8324   300002                     	org	3145730
  8325   300002  FF                 	db	255
  8326                           
  8327                           ;Config register CONFIG2H @ 0x300003
  8328                           ;	unspecified, using default values
  8329                           ;	Brown Out Reset Voltage selection bits
  8330                           ;	BORV = 0x3, unprogrammed default
  8331                           ;	ZCD Disable bit
  8332                           ;	ZCD = 0x1, unprogrammed default
  8333                           ;	PPSLOCK bit One-Way Set Enable bit
  8334                           ;	PPS1WAY = 0x1, unprogrammed default
  8335                           ;	Stack Full/Underflow Reset Enable bit
  8336                           ;	STVREN = 0x1, unprogrammed default
  8337                           ;	Debugger Enable bit
  8338                           ;	DEBUG = 0x1, unprogrammed default
  8339                           ;	Extended Instruction Set Enable bit
  8340                           ;	XINST = 0x1, unprogrammed default
  8341   300003                     	org	3145731
  8342   300003  FF                 	db	255
  8343                           
  8344                           ;Config register CONFIG3L @ 0x300004
  8345                           ;	WDT Period Select bits
  8346                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8347                           ;	WDT operating mode
  8348                           ;	WDTE = OFF, WDT Disabled
  8349   300004                     	org	3145732
  8350   300004  9F                 	db	159
  8351                           
  8352                           ;Config register CONFIG3H @ 0x300005
  8353                           ;	unspecified, using default values
  8354                           ;	WDT Window Select bits
  8355                           ;	WDTCWS = 0x7, unprogrammed default
  8356                           ;	WDT input clock selector
  8357                           ;	WDTCCS = 0x7, unprogrammed default
  8358   300005                     	org	3145733
  8359   300005  FF                 	db	255
  8360                           
  8361                           ;Config register CONFIG4L @ 0x300006
  8362                           ;	unspecified, using default values
  8363                           ;	Write Protection Block 0
  8364                           ;	WRT0 = 0x1, unprogrammed default
  8365                           ;	Write Protection Block 1
  8366                           ;	WRT1 = 0x1, unprogrammed default
  8367                           ;	Write Protection Block 2
  8368                           ;	WRT2 = 0x1, unprogrammed default
  8369                           ;	Write Protection Block 3
  8370                           ;	WRT3 = 0x1, unprogrammed default
  8371                           ;	Write Protection Block 3
  8372                           ;	WRT4 = 0x1, unprogrammed default
  8373                           ;	Write Protection Block 3
  8374                           ;	WRT5 = 0x1, unprogrammed default
  8375                           ;	Write Protection Block 3
  8376                           ;	WRT6 = 0x1, unprogrammed default
  8377                           ;	Write Protection Block 3
  8378                           ;	WRT7 = 0x1, unprogrammed default
  8379   300006                     	org	3145734
  8380   300006  FF                 	db	255
  8381                           
  8382                           ;Config register CONFIG4H @ 0x300007
  8383                           ;	unspecified, using default values
  8384                           ;	Configuration Register Write Protection bit
  8385                           ;	WRTC = 0x1, unprogrammed default
  8386                           ;	Boot Block Write Protection bit
  8387                           ;	WRTB = 0x1, unprogrammed default
  8388                           ;	Data EEPROM Write Protection bit
  8389                           ;	WRTD = 0x1, unprogrammed default
  8390                           ;	Scanner Enable bit
  8391                           ;	SCANE = 0x1, unprogrammed default
  8392                           ;	Low Voltage Programming Enable bit
  8393                           ;	LVP = 0x1, unprogrammed default
  8394   300007                     	org	3145735
  8395   300007  FF                 	db	255
  8396                           
  8397                           ;Config register CONFIG5L @ 0x300008
  8398                           ;	unspecified, using default values
  8399                           ;	UserNVM Program Memory Code Protection bit
  8400                           ;	CP = 0x1, unprogrammed default
  8401                           ;	DataNVM Memory Code Protection bit
  8402                           ;	CPD = 0x1, unprogrammed default
  8403   300008                     	org	3145736
  8404   300008  FF                 	db	255
  8405                           
  8406                           ;Config register CONFIG5H @ 0x300009
  8407                           ;	unspecified, using default values
  8408   300009                     	org	3145737
  8409   300009  FF                 	db	255
  8410                           
  8411                           ;Config register CONFIG6L @ 0x30000A
  8412                           ;	unspecified, using default values
  8413                           ;	Table Read Protection Block 0
  8414                           ;	EBTR0 = 0x1, unprogrammed default
  8415                           ;	Table Read Protection Block 1
  8416                           ;	EBTR1 = 0x1, unprogrammed default
  8417                           ;	Table Read Protection Block 2
  8418                           ;	EBTR2 = 0x1, unprogrammed default
  8419                           ;	Table Read Protection Block 3
  8420                           ;	EBTR3 = 0x1, unprogrammed default
  8421                           ;	Table Read Protection Block 4
  8422                           ;	EBTR4 = 0x1, unprogrammed default
  8423                           ;	Table Read Protection Block 5
  8424                           ;	EBTR5 = 0x1, unprogrammed default
  8425                           ;	Table Read Protection Block 6
  8426                           ;	EBTR6 = 0x1, unprogrammed default
  8427                           ;	Table Read Protection Block 7
  8428                           ;	EBTR7 = 0x1, unprogrammed default
  8429   30000A                     	org	3145738
  8430   30000A  FF                 	db	255
  8431                           
  8432                           ;Config register CONFIG6H @ 0x30000B
  8433                           ;	unspecified, using default values
  8434                           ;	Boot Block Table Read Protection bit
  8435                           ;	EBTRB = 0x1, unprogrammed default
  8436   30000B                     	org	3145739
  8437   30000B  FF                 	db	255
  8438                           tosu	equ	0xFFF
  8439                           tosh	equ	0xFFE
  8440                           tosl	equ	0xFFD
  8441                           stkptr	equ	0xFFC
  8442                           pclatu	equ	0xFFB
  8443                           pclath	equ	0xFFA
  8444                           pcl	equ	0xFF9
  8445                           tblptru	equ	0xFF8
  8446                           tblptrh	equ	0xFF7
  8447                           tblptrl	equ	0xFF6
  8448                           tablat	equ	0xFF5
  8449                           prodh	equ	0xFF4
  8450                           prodl	equ	0xFF3
  8451                           indf0	equ	0xFEF
  8452                           postinc0	equ	0xFEE
  8453                           postdec0	equ	0xFED
  8454                           preinc0	equ	0xFEC
  8455                           plusw0	equ	0xFEB
  8456                           fsr0h	equ	0xFEA
  8457                           fsr0l	equ	0xFE9
  8458                           wreg	equ	0xFE8
  8459                           indf1	equ	0xFE7
  8460                           postinc1	equ	0xFE6
  8461                           postdec1	equ	0xFE5
  8462                           preinc1	equ	0xFE4
  8463                           plusw1	equ	0xFE3
  8464                           fsr1h	equ	0xFE2
  8465                           fsr1l	equ	0xFE1
  8466                           bsr	equ	0xFE0
  8467                           indf2	equ	0xFDF
  8468                           postinc2	equ	0xFDE
  8469                           postdec2	equ	0xFDD
  8470                           preinc2	equ	0xFDC
  8471                           plusw2	equ	0xFDB
  8472                           fsr2h	equ	0xFDA
  8473                           fsr2l	equ	0xFD9
  8474                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      77
    BANK0           160     70     154
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2630$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2630$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_retrace
    _persistence_register->_color_writetoaddr
    _motor_retrace->_reverse
    _motor_response->_reverse
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_motor_response

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               164   164      0   84227
                                             41 COMRAM     2     2      0
                                             16 BANK0     54    54      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
                           _turnLeft
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                       23    17      6   26207
                                             32 COMRAM     9     3      6
                                              0 BANK0     14    14      0
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      24    18      6   31679
                                             32 COMRAM     8     2      6
                                              0 BANK0     16    16      0
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4769
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    5129
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    5557
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    8425
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    4226
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3937
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3261
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _motor_retrace
     _norm_stop
     _reverse
     _turnLeft
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED
   _turnLeft

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     46      9A       5       96.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4D       1       81.9%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7      61        0.0%
DATA                 0      0      E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 21:21:13 2022

                            _color_read_Red 34E2                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 3170  
                              ___fldiv@sign 0019                             _color_read_Blue 35D2  
                                        l83 36D8                                          l92 3580  
                                        l86 3850                                          l95 3620  
                                        l89 3530                                          l98 35D0  
                           ??_motor_retrace 0027                         ___wmul@multiplicand 000B  
                          _color_read_Clear 3582                            _color_read_Green 3532  
                         ??_Interrupts_init 0009                                         l104 3234  
                                       l113 38BA                                         l210 37E2  
                                       l107 2E88                                         l204 3766  
                                       l213 391E                                         l222 38E8  
                                       l207 37BC                                         l119 1D70  
                                       l216 390A                                         l136 1D70  
                                       l225 36A4                                         l219 3914  
                                       l327 27EC                                         l600 34E0  
                                       l177 2360                                         l603 3476  
                                       l620 339A                                         l614 370A  
                                       l631 316E                                         l617 340C  
                                       l642 3830                                         l634 3024  
                                       l491 3790                                         l485 38D0  
                                       l590 32B4                                         l494 38DC  
                                       l639 3084                                         l488 388A  
                                       l912 2F8C                                         l907 2F46  
                                       l597 2D36                            ??_motor_response 0027  
                                       _ctr 0048              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 38A6                         i2_color_writetoaddr 3852  
                                       wreg 000FE8                             _color_normalise 2D38  
                                      l1300 2BCA                                        l1140 3328  
                                      l1133 3320                                        l1311 2B62  
                                      l1224 26FA                                        l1304 2B06  
                                      l1226 255A                                        l1235 25A0  
                                      l1237 2618                                        l1229 251E  
                                      l1238 2606                                        l4000 1EAC  
                                      l4010 1F54                                        l4002 1EC0  
                                      l4100 22FA                                        l4012 1F68  
                                      l4004 1ED8                                        l4110 30AE  
                                      l4102 2312                                        l4022 1FB4  
                                      l4014 1F80                                        l4030 2032  
                                      l4006 1F04                                        l3320 387C  
                                      l2600 34E2                                        l4120 3102  
                                      l4112 30BE                                        l4104 233E  
                                      l4032 2050                                        l4024 1FC8  
                                      l4016 1FAA                                        l4008 1F2A  
                                      l4200 27C0                                        l1297 2A6E  
                                      l3322 3768                                        l2602 3528  
                                      l4130 3162                                        l4122 310E  
                                      l4114 30CE                                        l4106 3086  
                                      l3330 3284                                        l4050 2100  
                                      l4034 2064                                        l4026 1FE0  
                                      l4210 281E                                        l4202 27D4  
                                      l2540 391A                                        l3316 38BC  
                                      l2700 23B8                                        l2612 35D2  
                                      l2620 35C8                                        l4124 3126  
                                      l4116 30E2                                        l4108 309E  
                                      l3340 32A6                                        l3332 328E  
                                      l4060 2190                                        l4044 20A8  
                                      l4036 2072                                        l4052 2126  
                                      l4028 200C                                        l3324 38D2  
                                      l4220 2876                                        l4212 2832  
                                      l4204 27E6                                        l4140 2716  
                                      l4132 26FC                                        l2542 38E0  
                                      l3318 3872                                        l2710 23E4  
                                      l2702 23C8                                        l2550 3902  
                                      l2614 3618                                        l2606 3532  
                                      l4126 313E                                        l4118 30F6  
                                      l3342 32A8                                        l3334 3290  
                                      l3326 3236                                        l3350 3494  
                                      l4070 21C6                                        l4054 2144  
                                      l4046 20BC                                        l4038 209E  
                                      l4230 28F2                                        l4222 289A  
                                      l4214 284A                                        l4206 27EE  
                                      l4150 2732                                        l4142 2716  
                                      l4134 2700                                        l2544 38E4  
                                      l2800 268A                                        l2712 23F4  
                                      l2720 241E                                        l2704 23CE  
                                      l2560 367A                                        l2552 3906  
                                      l2608 3578                                        l3600 3312  
                                      l4128 3156                                        l3344 32B2  
                                      l3336 329A                                        l3328 3260  
                                      l3352 34A4                                        l3360 341A  
                                      l4072 21F2                                        l4056 2158  
                                      l4048 20D4                                        l4240 294E  
                                      l4232 2910                                        l4224 28C8  
                                      l4216 284C                                        l4208 2802  
                                      l4160 276E                                        l4152 274E  
                                      l4136 2704                                        l2538 3916  
                                      l2546 390C                                        l2810 26E8  
                                      l2802 26A0                                        l2730 2460  
                                      l2722 242E                                        l2714 2404  
                                      l2706 23D4                                        l2562 36A0  
                                      l2554 3666                                        l2618 3582  
                                      l3602 3314                                        l3610 2C3C  
                                      l3338 329C                                        l3354 34B8  
                                      l3346 3478                                        l3362 342A  
                                      l4082 2240                                        l4090 22BE  
                                      l4066 219A                                        l4058 2166  
                                      l4074 2218                                        l4250 29D8  
                                      l4242 2966                                        l4234 291A  
                                      l4218 285E                                        l4226 28D0  
                                      l4170 2796                                        l4162 277A  
                                      l4154 2752                                        l4146 271E  
                                      l4138 270C                                        l2548 3910  
                                      l2900 36AA                                        l2812 26EE  
                                      l2804 26BA                                        l2724 2444  
                                      l2716 2414                                        l2708 23E2  
                                      l2564 36A2                                        l2556 366A  
                                      l3604 331A                                        l3620 2CF6  
                                      l3612 2C50                                        l3356 34CC  
                                      l3348 3484                                        l3364 343A  
                                      l3700 2F8A                                        l4092 22DC  
                                      l4084 2254                                        l4076 2236  
                                      l4068 21AE                                        l4252 29EC  
                                      l4244 2992                                        l4228 28EC  
                                      l4180 27A0                                        l4172 2798  
                                      l4164 2786                                        l4156 2756  
                                      l4148 272E                                        l2494 37BC  
                                      l2590 374E                                        l2902 36B4  
                                      l2814 26F0                                        l2806 26D6  
                                      l2750 24E2                                        l2742 2498  
                                      l2726 2454                                        l2734 2474  
                                      l2718 2416                                        l2910 2D38  
                                      l2558 3672                                        l3614 2C92  
                                      l3606 2BCC                                        l3366 344E  
                                      l3358 340E                                        l3630 2FD6  
                                      l3622 2F8E                                        l3710 0E82  
                                      l4086 226C                                        l4246 29B4  
                                      l4238 293A                                        l4254 2A04  
                                      l4190 27AA                                        l4182 27A2  
                                      l4174 279A                                        l4166 2792  
                                      l4158 276A                                        l2496 37CC  
                                      l2592 3750                                        l2904 36C4  
                                      l2808 26DA                                        l2760 2528  
                                      l2752 24EA                                        l2744 24B2  
                                      l2736 2484                                        l2728 245C  
                                      l3616 2C96                                        l3608 2BE8  
                                      l3368 3462                                        l3640 303C  
                                      l3632 2FEA                                        l3624 2FA6  
                                      l3800 1326                                        l3720 0ECA  
                                      l3712 0EAC                                        l3704 0E18  
                                      l4088 2298                                        l2912 38A6  
                                      l4256 2A06                                        l4248 29D2  
                                      l4192 27AE                                        l4184 27A4  
                                      l4176 279C                                        l4168 2794  
                                      l2594 3752                                        l2586 373E  
                                      l2906 36CE                                        l2770 2580  
                                      l2762 2546                                        l2754 24FA  
                                      l2746 24C2                                        l2738 2484  
                                      l2690 237E                                        l2850 2A7E  
                                      l3618 2CB2                                        l3650 36F2  
                                      l3642 3054                                        l3634 2FFE  
                                      l3626 2FB6                                        l3810 145C  
                                      l3802 1364                                        l3722 0EE2  
                                      l3706 0E56                                        l4098 22E6  
                                      l4194 27B2                                        l4186 27A6  
                                      l4178 279E                                        l2596 3754  
                                      l2588 3748                                        l2780 25BE  
                                      l2772 2586                                        l2764 2548  
                                      l2756 250E                                        l2748 24D2  
                                      l2692 238E                                        l2684 2362  
                                      l2860 2ABC                                        l2852 2A94  
                                      l2844 2A1A                                        l2908 3170  
                                      l3580 3828                                        l3652 36FE  
                                      l3644 306C                                        l3636 300C  
                                      l3628 2FC6                                        l3660 3362  
                                      l3900 19BA                                        l3820 14FC  
                                      l3812 149A                                        l3804 13A2  
                                      l3740 0FDE                                        l3724 0F0E  
                                      l3708 0E6A                                        l3732 0F36  
                                      l4196 27B6                                        l4188 27A8  
                                      l2598 3834                                        l2790 2628  
                                      l2782 25C2                                        l2774 2590  
                                      l2766 2558                                        l2758 251C  
                                      l2694 239E                                        l2686 236E  
                                      l2870 2B44                                        l2862 2AEE  
                                      l2846 2A2A                                        l3590 32D8  
                                      l3646 3078                                        l3638 3018  
                                      l3670 33B4                                        l3662 3372  
                                      l3654 332A                                        l3902 19E6  
                                      l3910 1A0E                                        l3830 1574  
                                      l3814 14AE                                        l3806 13E0  
                                      l3750 1046                                        l3742 1008  
                                      l3734 0F74                                        l3726 0F30  
                                      l3718 0EB6                                        l4198 27BA  
                                      l2792 2634                                        l2784 25D0  
                                      l2776 259E                                        l2768 256A  
                                      l2696 23AE                                        l2688 237C  
                                      l2880 2B9A                                        l2872 2B52  
                                      l2864 2AF0                                        l2856 2AA8  
                                      l2848 2A38                                        l3592 32E0  
                                      l3584 32B6                                        l3648 36DA  
                                      l3680 3400                                        l3672 33C4  
                                      l3664 3382                                        l3656 3342  
                                      l3920 1B44                                        l3912 1A4C  
                                      l3904 1A08                                        l3840 15DA  
                                      l3832 1596                                        l3824 151C  
                                      l3816 14C6                                        l3808 141E  
                                      l3752 105E                                        l3744 1012  
                                      l3736 0FB2                                        l2794 2642  
                                      l2786 25FE                                        l2778 25B0  
                                      l2698 23B0                                        l2882 2BAA  
                                      l2874 2B70                                        l2866 2AFC  
                                      l2858 2AB0                                        l3594 32EE  
                                      l3586 32BE                                        l3578 380C  
                                      l3690 2F06                                        l3682 2E8A  
                                      l3674 33D4                                        l3666 338E  
                                      l3658 3352                                        l3930 1BC0  
                                      l3922 1B82                                        l3914 1A8A  
                                      l3850 16F0                                        l3842 1618  
                                      l3826 1530                                        l3818 14F2  
                                      l3770 11AA                                        l3754 108A  
                                      l3738 0FC6                                        l3762 10B2  
                                      l2796 266C                                        l2884 2BB8  
                                      l2876 2B72                                        l2868 2B38  
                                      l3596 32F4                                        l3588 32D0  
                                      l3692 2F14                                        l3684 2EB8  
                                      l3676 33E4                                        l3668 339C  
                                      l3932 1BD8                                        l3924 1B8C  
                                      l3916 1AC8                                        l3860 1750  
                                      l3852 1704                                        l3844 1656  
                                      l3828 1548                                        l3780 127C  
                                      l3772 11E8                                        l3764 10F0  
                                      l3756 10AC                                        l3748 1032  
                                      l2798 2670                                        l2886 2BBA  
                                      l2878 2B76                                        l3598 330A  
                                      l3694 2F26                                        l3686 2EC8  
                                      l3678 33F4                                        l3950 1C9C  
                                      l3934 1C04                                        l3918 1B06  
                                      l3942 1C2C                                        l3870 17C8  
                                      l3854 171C                                        l3846 1694  
                                      l3838 159C                                        l3790 12D2  
                                      l3782 1286                                        l3774 1226  
                                      l3766 112E                                        l3696 2F34  
                                      l3688 2EF6                                        l3960 1D04  
                                      l3952 1CB0                                        l3944 1C6A  
                                      l3936 1C26                                        l3928 1BAC  
                                      l3880 182E                                        l3872 17EA  
                                      l3864 1770                                        l3856 1730  
                                      l3848 16D2                                        l3792 12FE  
                                      l3776 123A                                        l3768 116C  
                                      l2898 36A6                                        l3698 2F84  
                                      l3962 1D1C                                        l3954 1CD0  
                                      l3946 1C70                                        l3890 1964  
                                      l3882 186C                                        l3866 1784  
                                      l3858 1746                                        l3794 1320  
                                      l3786 12A6                                        l3778 1252  
                                      l3970 1D72                                        l3964 1D48  
                                      l3948 1C84                                        l3892 196E  
                                      l3884 18AA                                        l3868 179C  
                                      l3788 12BA                                        l3972 1D9A  
                                      l3966 1D6A                                        l3958 1CF0  
                                      l3886 18E8                                        l3878 17F0  
                                      l3990 1E52                                        l3974 1DAE  
                                      l3896 198E                                        l3888 1926  
                                      l3984 1DFA                                        l3976 1DC6  
                                      l3992 1E78                                        l3898 19A2  
                                      l3994 1EA2                                        l3986 1E0E  
                                      l3978 1DF0                                        l3988 1E26  
                                      STR_1 0E01                                        u3000 11AA  
                                      u3001 11A6                                        u3010 11E8  
                                      u3011 11E4                                        u3100 149A  
                                      u3020 1226                                        u3101 1496  
                                      u3021 1222                                        u1510 368E  
                                      u3110 1518                                        u3030 12A2  
                                      u1511 3686                                        u3111 1514  
                                      u3031 129E                                        u1600 23E2  
                                      u3200 176C                                        u3120 1596  
                                      u3040 1320                                _BAUD4CONbits 000EE9  
                                      u1601 23DE                                        u3201 1768  
                                      u3121 1592                                        u3041 131C  
                                      u1610 23F4                                        u3210 17EA  
                                      u3130 15DA                                        u3050 1364  
                                      u1611 23F0                                        u3211 17E6  
                                      u3131 15D6                                        u3051 1360  
                                      u1460 37CC                                        u1700 259E  
                                      u1620 2404                                        u3300 1A4C  
                                      u3220 182E                                        u3140 1618  
                                      u3060 13A2                                        u1461 37C8  
                                      u1701 259A                                        u1621 2400  
                                      u3301 1A48                                        u3221 182A  
                                      u3141 1614                                        u3061 139E  
                                      u1470 37E2                                        u1710 25BE  
                                      u1630 2444                                        u3310 1A8A  
                                      u3230 186C                                        u3150 1656  
                                      u3070 13E0                                        u1471 37DE  
                                      u1711 25BA                                        u1631 2440  
                                      u3311 1A86                                        u3231 1868  
                                      u3151 1652                                        u3071 13DC  
                                      u4007 0F00                                        u1720 25D0  
                                      u1640 2484                                        u1528 3690  
                                      u3400 1D6A                                        u3320 1AC8  
                                      u3240 18AA                                        u3160 1694  
                                      u3080 141E                                        u1721 25CC  
                                      u1641 2480                                        u3401 1D66  
                                      u3321 1AC4                                        u3241 18A6  
                                      u3161 1690                                        u3081 141A  
                                      u4017 0FD0                                        u1730 25FE  
                                      u1650 24FA                                        u1570 237C  
                                      u3330 1B06                                        u3250 18E8  
                                      u3170 16D2                                        u3090 145C  
                                      u3410 1D9A                                        _T2PR 000FBC  
                                      u1731 25FA                                        u1651 24F6  
                                      u1571 2378                                        u3331 1B02  
                                      u3251 18E4                                        u3171 16CE  
                                      u4107 14E4                                        u3091 1458  
                                      u4027 0FFC                                        u3411 1D96  
                                      u1740 2614                                        u1660 251C  
                                      u1580 238E                                        u1900 2B52  
                                      u3340 1B44                                        u3260 1926  
                                      u3180 16E4                                        u3500 2214  
                                      u3420 1E74                                        u1741 2610  
                                      u1661 2518                                        u1581 238A  
                                      u1901 2B4E                                        u3341 1B40  
                                      u3261 1922                                        u3181 16DC  
                                      u4117 153A                                        u4037 1050  
                                      u3501 2210                                        u3421 1E70  
                                      u1750 2628                                        u1670 2546  
                                      u1590 239E                                        u1910 2B62  
                                      u3350 1B82                                        u3270 1964  
                                      u3510 2236                                        u3430 1EA2  
                                      u1751 2624                                        u1671 2542  
                                      u1591 239A                                        u1911 2B5E  
                                      u4207 1BF6                                        u3351 1B7E  
                                      u3271 1960                                        u4127 1566  
                                      u4047 107C                                        u3511 2232  
                                      u3431 1E9E                                        u1760 2642  
                                      u1680 256A                                        u1920 2B70  
                                      u2800 32EE                                        u3360 1BA8  
                                      u3280 198A                                        u3520 22BA  
                                      u3440 1F26                                        u3600 281E  
                                      u1761 263E                                        u1681 2566  
                                      u1921 2B6C                                        u2801 32EA  
                                      u4217 1C8E                                        u3361 1BA4  
                                      u3281 1986                                        u4137 170E  
                                      u4057 1244                                        u3521 22B6  
                                      u3441 1F22                                        u3601 281A  
                                      u1770 268A                                        u1690 2580  
                                      u1930 2BAA                                        u1850 2A2A  
                                      u2810 330A                                        u3370 1C26  
                                      u3290 1A08                                        u3530 22DC  
                                      u3450 1F54                                        u3610 285E  
                                      u1771 2686                                        u1691 257C  
                                      u1931 2BA6                                        u1851 2A26  
                                      u2811 3306                                        u4227 1CBA  
                                      u3371 1C22                                        u3291 1A04  
                                      u4147 173A                                        u4067 1270  
                                      u3531 22D8                                        u3451 1F50  
                                      u3611 285A                                        u1780 26BA  
                                      u1940 2BB8                                        u1860 2A38  
                                      u2820 2BE8                                        u2900 2F84  
                                      u3380 1C6A                                        u3540 2360  
                                      u3460 202E                                        u3620 2888  
                                      u1781 26B6                                        u1941 2BB4  
                                      u1861 2A34                                        u2821 2BE4  
                                      u2901 2F80                                        u4237 1D0E  
                                      u3381 1C66                                        u4157 178E  
                                      u4077 12C4                                        u3541 235C  
                                      u3461 202A                                        u3621 2880  
                                      u1790 26E8                                        u1870 2A94  
                                      u2830 2CB2                                        u3550 3126  
                                      u3390 1CEC                                        u3198 16E6  
                                      u2910 0E56                                        u3470 2050  
                                      u1791 26E4                                        u1871 2A90  
                                      u2831 2CAE                                        u3551 3122  
                                      u4247 1D3A                                        u3391 1CE8  
                                      u4167 17BA                                        u4087 12F0  
                                      u2911 0E52                                        u3471 204C  
                                      u1880 2AEA                                        u3560 313E  
                                      u2840 303C                                        u2920 0F30  
                                      u3480 2122                                        u3640 2910  
                                      u1881 2AE6                                        u3561 313A  
                                      u2841 3038                                        u4257 3004  
                                      u4177 19AC                                        u4097 14B8  
                                      u2921 0F2C                                        u3481 211E  
                                      u3641 290C                                        u1890 2B34  
                                      u2850 3054                                        u2930 0F74  
                                      u3490 2144                                        u3650 2936  
                                      u3570 274E                                        u4267 36BA  
                                      u1891 2B30                                        u2851 3050  
                                      u4187 19D8                                        u2931 0F70  
                                      u3491 2140                                        u3651 2932  
                                      u3571 274A                                        u2860 2EB8  
                                      u2940 0FB2                                        u3660 29B4  
                                      u3580 27E6                                        u4277 3882  
                                      u2861 2EB4                                        u4197 1BCA  
                                      u2941 0FAE                                        u3661 29B0  
                                      u3717 283C                                        u3581 27E2  
                                      u2790 32D0                                        u2870 2EF6  
                                      u2950 102E                                        u3670 29C6  
                                      u3638 288A                                        u3590 2802  
                                      u2791 32CC                                        u2871 2EF2  
                                      u2951 102A                                        u3807 1EF6  
                                      u3671 29BE                                        u3727 2958  
                                      u3591 27FE                                        u2880 2F14  
                                      u2960 10AC                                        u2881 2F10  
                                      u2961 10A8                                        u3817 1F72  
                                      u3737 2984                                        u2890 2F34  
                                      u2970 10F0                                        u2891 2F30  
                                      u2971 10EC                                        u3907 2184  
                                      u3827 1F9E                                        u3747 29F6  
                                      u2980 112E                                        u2981 112A  
                                      u3917 21B8                                        u3837 1FD2  
                                      u3757 1DB8                                        u2990 116C  
                                      u2991 1168                                        u3927 21E4  
                                      u3847 1FFE                                        u3767 1DE4  
                                      u3688 29C8                                        u3937 225E  
                                      u3857 206A                                        u3777 1E18  
                                      u3947 228A                                        u3867 2090  
                                      u3787 1E44                                        u3957 2304  
                                      u3877 20C6                                        u3797 1ECA  
                                      u3967 2330                                        u3887 20F2  
                                      u3977 0E74                                        u3897 215E  
                                      u3987 0EA0                                        u3997 0ED4  
                                      i2l86 3870                                 main@pathSet 00C4  
                                      _main 26FC                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 004E                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0036  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 001A  
                    __end_of_color_read_Red 3532                             __end_of_HighISR 0036  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___fldiv 26FC                             __end_of___lwdiv 332A  
                                     i2l210 380A                                       i2l213 3932  
                                     i2l222 3900                                       i2l207 37E4  
                                     i2l219 3928                                       i2l503 0032  
                                     i2l491 37BA                                       i2l494 38F4  
                                     i2l488 38A4                                       i2l497 373C  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 3920                  __end_of_I2C_2_Master_Write 38EA  
                                     main@j 00C2                                       tablat 000FF5  
                     _Color_Interrupts_init 3872                             __end_of_reverse 3086  
                                     ttemp5 004F                                       ttemp6 0052  
                                     ttemp7 0056                                       status 000FD8  
                                     wtemp8 004F                     __end_of_color_read_RGBC 3236  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 3622  
                     _I2C_2_Master_RepStart 3902                             ?_color_read_Red 000D  
                           __initialization 3622                                __end_of_main 2A18  
               ?_Color_Interrupts_threshold 000D                                      ??_main 002A  
                             __activetblptr 000001                     __end_of_color_normalise 2E8A  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2530 3920                                      i2l2532 3924  
                                    i2l3404 370C                                      i2l2526 392A  
                                    i2l2534 38F8                                      i2l2528 392E  
                                    i2l2536 38FC                                      i2l2490 37E4  
                                    i2l2492 37F4                                      i2l3550 000A  
                                    i2l2584 3854                                      i2l3560 002E  
                                    i2l3552 001A                                      i2l3554 001C  
                                    i2l3556 0026                                      i2l3558 002A  
                                    i2l2890 388C                                      _RG6PPS 000E88  
                                    i2l2892 3896                                      i2l2894 3792  
                                    i2l2896 38EA                                   ??_HighISR 0009  
                  __end_of_color_click_init 36DA                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 2BCC  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 38DE                                _CCPTMRS0bits 000FAD  
                                    ___flge 2E8A                                      ___wmul 380C  
                                 ??___fldiv 0011                                   ??___lwdiv 0013  
                                    clear_0 3640                                      clear_1 364C  
                                    isa$std 000001                                      main@mL 00E6  
                                    main@mR 00EF                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 370C                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 340E  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 3652                    __end_of_color_read_Clear 35D2  
                  __end_of_color_read_Green 3582                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 38BC  
                        motor_retrace@j_564 00B4                          motor_retrace@j_565 00B6  
                        motor_retrace@j_566 00B8                          motor_retrace@j_567 00BA  
                        motor_retrace@j_568 00BC                          motor_retrace@j_569 00BE  
                            __pcstackCOMRAM 0001                                __pidataBANK0 3934  
            __end_ofi2_persistence_register 38F6                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 388C  
                                __pbssBANK0 0060                           _color_writetoaddr 3832  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0023  
                          motor_response@mR 0025                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0021                       __end_of_motor_retrace 2362  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 38D2                                  _buggy_path 00A3  
                   __end_of_Interrupts_init 38D2                              _lowerThreshold 009C  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 3852  
                        _I2C_2_Master_Start 3916                         i2_I2C_2_Master_Idle 37E4  
                        _I2C_2_Master_Write 38DE                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 3920                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fldiv 2362  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 32B6  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 0046                                     __pcinit 3622  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                   __ptext0 26FC                                     __ptext1 38A6  
                                   __ptext2 38D2                                     __ptext3 1D72  
                                   __ptext4 0E18                                     __ptext5 332A  
                                   __ptext6 339C                                     __ptext7 2F8E  
                                   __ptext8 36DA                                     __ptext9 2E8A  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00F8                                     _reverse 2F8E  
                             _RxBufWriteCnt 004D                       ?_persistence_register 0001  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 3652                 __end_ofi2_color_writetoaddr 3872  
                         ?_color_click_init 0001                           __end_of_norm_stop 370C  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 3478                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 340E  
                             _interrupt_ctr 009E                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 3236                                  ??_turnLeft 0020  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 339C  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 002C  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 373E  
                            __end_of___flge 2F8E                              _fullSpeedAhead 3086  
                            __end_of___wmul 3832                         color_read_Clear@tmp 0012  
                       start_initialization 3622                      ??_persistence_register 000D  
                             _TxBufWriteCnt 004B                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 32B6                      __end_of_fullSpeedAhead 3170  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022                                 __pdataBANK0 00F8  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 3934  
              __end_ofi2_I2C_2_Master_Write 3902                                   ___fldiv@a 000D  
                                 ___fldiv@b 0009                                 __pbssCOMRAM 002C  
                             __pcstackBANK0 00B2                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 0040  
                                 _amb_green 0044                             motor_retrace@mL 0023  
                           motor_retrace@mR 0025                            ___lwdiv@dividend 000F  
                           motor_response@j 00B2                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fldiv 0009  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                         motor_response@j_550 00B8  
                       motor_response@j_555 00BA                         motor_response@j_556 00BC  
                       motor_response@j_548 00B4                         motor_response@j_557 00BE  
                       motor_response@j_549 00B6                         motor_response@j_558 00C0  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 37BC                           _I2C_2_Master_Init 373E  
                         _I2C_2_Master_Read 3664                           _I2C_2_Master_Stop 390C  
                              _RxBufReadCnt 004C                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0014  
                    __end_of_motor_response 1D72                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u144_40 37F4                                    i2u144_41 37F0  
                                  i2u145_40 380A                                    i2u145_41 3806  
                                  _PIR0bits 000E33                                    i2u276_40 001A  
                                  i2u276_41 0016                                    i2u428_47 389C  
                                  _PIR4bits 000E37                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 36DA  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 37E4                   __end_of_I2C_2_Master_Init 3768  
                 __end_of_I2C_2_Master_Read 36A6                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3916                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 004A  
                  i2color_writetoaddr@value 0003                                   _turnRight 332A  
             __end_of_Color_Interrupts_init 388C                             ?_motor_response 0021  
             __end_of_I2C_2_Master_RepStart 390C                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 2D38                        i2_I2C_2_Master_Start 392A  
                      i2_I2C_2_Master_Write 38F6                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0021                           ??_color_normalise 0024  
                                  __Lrparam 0000                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 37BC  
              i2_Color_Interrupts_threshold 3792                 __end_ofi2_I2C_2_Master_Idle 380C  
               __end_ofi2_I2C_2_Master_Stop 392A                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 1D72                               ??_tricolorLED 0009  
                                  _amb_blue 0042                                    ___xxtofl 2A18  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                            motor_retrace@j 00B2                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0013                                  ?_turnRight 001C  
                                  __ptext10 340E                                    __ptext11 3478  
                                  __ptext20 3582                                    __ptext12 3236  
                                  __ptext21 35D2                                    __ptext13 3086  
                                  __ptext30 3768                                    __ptext22 3902  
                                  __ptext14 2BCC                                    __ptext31 3872  
                                  __ptext23 3664                                    __ptext15 380C  
                                  __ptext40 3792                                    __ptext32 3832  
                                  __ptext24 2A18                                    __ptext16 32B6  
                                  __ptext41 388C                                    __ptext33 38DE  
                                  __ptext25 2D38                                    __ptext17 3170  
                                  __ptext42 3852                                    __ptext34 390C  
                                  __ptext26 2362                                    __ptext18 34E2  
                                  __ptext43 38F6                                    __ptext35 3916  
                                  __ptext27 36A6                                    __ptext19 3532  
                                  __ptext44 3920                                    __ptext36 37BC  
                                  __ptext28 373E                                    __ptext45 392A  
                                  __ptext29 38BC                                    __ptext46 37E4  
                                  __ptext38 370C                                    __ptext39 38EA  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 00C6                                    int$flags 004E  
        __end_of_Color_Interrupts_threshold 3792               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 3768                                    _turnLeft 339C  
                            ?_motor_retrace 0021                                  _INTCONbits 000FF2  
                               _setMotorPWM 2BCC                                motorLinit@mL 0009  
                       __end_of_tricolorLED 38BC                                    intlevel2 0000  
                              _motor_return 00A2                          __end_of_motorLinit 34E2  
                        __end_of_motorRinit 3478                                motorRinit@mR 0009  
                          ??_fullSpeedAhead 0020                                 ??_norm_stop 0020  
           __end_ofi2_Color_Interrupts_init 38A6                            _color_click_init 36A6  
                                _SSP2DATPPS 000E1D                                  _SSP2CLKPPS 000E1C  
                            _interrupt_flag 00A0                      i2_persistence_register 38EA  
                               ??_turnRight 0020                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                      ??i2_I2C_2_Master_Write 0002  
                  ??_Color_Interrupts_clear 0009  
