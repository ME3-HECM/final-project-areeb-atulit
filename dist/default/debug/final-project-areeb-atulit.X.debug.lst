

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 20:17:14 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 06/04/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     _TRISBbits	set	3970
    96   000000                     _TX4REG	set	3812
    97   000000                     _RC4STAbits	set	3815
    98   000000                     _SP4BRGH	set	3814
    99   000000                     _LATHbits	set	3968
   100   000000                     _TRISCbits	set	3971
   101   000000                     _TRISDbits	set	3972
   102   000000                     _TRISEbits	set	3973
   103   000000                     _TRISFbits	set	3974
   104   000000                     _TRISAbits	set	3969
   105   000000                     _SSP2CON2bits	set	3802
   106   000000                     _RX4PPS	set	3605
   107   000000                     _SSP2CLKPPS	set	3612
   108   000000                     _SSP2DATPPS	set	3613
   109   000000                     _ANSELDbits	set	3751
   110   000000                     _SSP2ADD	set	3798
   111   000000                     _SSP2CON1bits	set	3801
   112   000000                     _LATAbits	set	3961
   113   000000                     _LATGbits	set	3967
   114   000000                     _TRISGbits	set	3975
   115   000000                     _T2PR	set	4028
   116   000000                     _T2CONbits	set	4029
   117   000000                     _TMR0L	set	4051
   118   000000                     _TMR0H	set	4052
   119   000000                     _T0CON0bits	set	4053
   120   000000                     _T0CON1bits	set	4054
   121   000000                     _INTCONbits	set	4082
   122   000000                     _TRISHbits	set	3976
   123   000000                     _CCPR2H	set	4006
   124   000000                     _CCPR1H	set	4010
   125   000000                     _LATDbits	set	3964
   126   000000                     _LATEbits	set	3965
   127   000000                     _LATFbits	set	3966
   128   000000                     _RC4REG	set	3811
   129   000000                     _SP4BRGL	set	3813
   130   000000                     _TX4STAbits	set	3816
   131   000000                     _BAUD4CONbits	set	3817
   132   000000                     _SSP2CON2	set	3802
   133   000000                     _SSP2STAT	set	3800
   134   000000                     _SSP2BUF	set	3797
   135   000000                     _IPR0bits	set	3615
   136   000000                     _PIE0bits	set	3625
   137   000000                     _PIE4bits	set	3629
   138   000000                     _RC0PPS	set	3682
   139   000000                     _RD5PPS	set	3695
   140   000000                     _RE2PPS	set	3700
   141   000000                     _ANSELBbits	set	3738
   142   000000                     _RD6PPS	set	3696
   143   000000                     _RC7PPS	set	3689
   144   000000                     _CCPR4H	set	3873
   145   000000                     _CCPR3H	set	3877
   146   000000                     _PIR0bits	set	3635
   147   000000                     _PIR4bits	set	3639
   148   000000                     _RE4PPS	set	3702
   149   000000                     _RG6PPS	set	3720
   150   000000                     _T2CLKCONbits	set	4031
   151   000000                     _T2HLTbits	set	4030
   152   000000                     _CCP1CONbits	set	4011
   153   000000                     _CCPTMRS0bits	set	4013
   154   000000                     _CCP2CONbits	set	4007
   155   000000                     _CCP3CONbits	set	3878
   156   000000                     _CCP4CONbits	set	3874
   157                           
   158                           	psect	smallconst
   159   000E00                     __psmallconst:
   160                           	callstack 0
   161   000E00  00                 	db	0
   162   000E01                     
   163                           ; BSR set to: 14
   164   000E01  52                 	db	82	;'R'
   165   000E02  47                 	db	71	;'G'
   166   000E03  42                 	db	66	;'B'
   167   000E04  43                 	db	67	;'C'
   168   000E05  3A                 	db	58	;':'
   169   000E06  25                 	db	37
   170   000E07  69                 	db	105	;'i'
   171   000E08  20                 	db	32
   172   000E09  25                 	db	37
   173   000E0A  69                 	db	105	;'i'
   174   000E0B  20                 	db	32
   175   000E0C  25                 	db	37
   176   000E0D  69                 	db	105	;'i'
   177   000E0E  20                 	db	32
   178   000E0F  25                 	db	37
   179   000E10  69                 	db	105	;'i'
   180   000E11  20                 	db	32
   181   000E12  25                 	db	37
   182   000E13  69                 	db	105	;'i'
   183   000E14  0A                 	db	10
   184   000E15  00                 	db	0
   185   000E16  00                 	db	0	; dummy byte at the end
   186   000000                     
   187                           ; #config settings
   188                           
   189                           	psect	cinit
   190   001F10                     __pcinit:
   191                           	callstack 0
   192   001F10                     start_initialization:
   193                           	callstack 0
   194   001F10                     __initialization:
   195                           	callstack 0
   196                           
   197                           ; Clear objects allocated to BANK0 (79 bytes)
   198   001F10  EE00  F060         	lfsr	0,__pbssBANK0
   199   001F14  0E4F               	movlw	79
   200   001F16                     clear_0:
   201   001F16  6AEE               	clrf	postinc0,c
   202   001F18  06E8               	decf	wreg,f,c
   203   001F1A  E1FD               	bnz	clear_0
   204                           
   205                           ; Clear objects allocated to COMRAM (35 bytes)
   206   001F1C  EE00  F02C         	lfsr	0,__pbssCOMRAM
   207   001F20  0E23               	movlw	35
   208   001F22                     clear_1:
   209   001F22  6AEE               	clrf	postinc0,c
   210   001F24  06E8               	decf	wreg,f,c
   211   001F26  E1FD               	bnz	clear_1
   212   001F28                     end_of_initialization:
   213                           	callstack 0
   214   001F28                     __end_of__initialization:
   215                           	callstack 0
   216   001F28  904F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   217   001F2A  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   218   001F2C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   219   001F2E  6EF8               	movwf	tblptru,c
   220   001F30  0E0E               	movlw	high __Lsmallconst
   221   001F32  6EF7               	movwf	tblptrh,c
   222   001F34  0100               	movlb	0
   223   001F36  EF12  F00B         	goto	_main	;jump to C main() function
   224                           
   225                           	psect	bssCOMRAM
   226   00002C                     __pbssCOMRAM:
   227                           	callstack 0
   228   00002C                     _EUSART4RXbuf:
   229                           	callstack 0
   230   00002C                     	ds	20
   231   000040                     _amb_clear:
   232                           	callstack 0
   233   000040                     	ds	2
   234   000042                     _amb_blue:
   235                           	callstack 0
   236   000042                     	ds	2
   237   000044                     _amb_green:
   238                           	callstack 0
   239   000044                     	ds	2
   240   000046                     _amb_red:
   241                           	callstack 0
   242   000046                     	ds	2
   243   000048                     _interrupt_ctr:
   244                           	callstack 0
   245   000048                     	ds	2
   246   00004A                     _motor_return:
   247                           	callstack 0
   248   00004A                     	ds	1
   249   00004B                     _TxBufReadCnt:
   250                           	callstack 0
   251   00004B                     	ds	1
   252   00004C                     _TxBufWriteCnt:
   253                           	callstack 0
   254   00004C                     	ds	1
   255   00004D                     _RxBufReadCnt:
   256                           	callstack 0
   257   00004D                     	ds	1
   258   00004E                     _RxBufWriteCnt:
   259                           	callstack 0
   260   00004E                     	ds	1
   261                           
   262                           	psect	bssBANK0
   263   000060                     __pbssBANK0:
   264                           	callstack 0
   265   000060                     _EUSART4TXbuf:
   266                           	callstack 0
   267   000060                     	ds	60
   268   00009C                     _buggy_path:
   269                           	callstack 0
   270   00009C                     	ds	15
   271   0000AB                     _ctr:
   272                           	callstack 0
   273   0000AB                     	ds	2
   274   0000AD                     _interrupt_flag:
   275                           	callstack 0
   276   0000AD                     	ds	2
   277                           
   278                           	psect	cstackBANK0
   279   0000AF                     __pcstackBANK0:
   280                           	callstack 0
   281   0000AF                     main@RGBC:
   282                           	callstack 0
   283                           
   284                           ; 36 bytes @ 0x0
   285   0000AF                     	ds	36
   286   0000D3                     main@mL:
   287                           	callstack 0
   288                           
   289                           ; 9 bytes @ 0x24
   290   0000D3                     	ds	9
   291   0000DC                     main@mR:
   292                           	callstack 0
   293                           
   294                           ; 9 bytes @ 0x2D
   295   0000DC                     	ds	9
   296                           
   297                           	psect	cstackCOMRAM
   298   000001                     __pcstackCOMRAM:
   299                           	callstack 0
   300   000001                     ??i2_I2C_2_Master_Idle:
   301   000001                     
   302                           ; 1 bytes @ 0x0
   303   000001                     	ds	1
   304   000002                     i2I2C_2_Master_Write@data_byte:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x1
   308   000002                     	ds	1
   309   000003                     i2color_writetoaddr@value:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x2
   313   000003                     	ds	1
   314   000004                     i2color_writetoaddr@address:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x3
   318   000004                     	ds	1
   319   000005                     ??i2_Color_Interrupts_init:
   320   000005                     i2Color_Interrupts_threshold@upperThreshold:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0x4
   324   000005                     	ds	2
   325   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x6
   329   000007                     	ds	2
   330   000009                     ??_I2C_2_Master_Idle:
   331   000009                     ?___wmul:
   332                           	callstack 0
   333   000009                     ?___fldiv:
   334                           	callstack 0
   335   000009                     initDCmotorsPWM@PWMperiod:
   336                           	callstack 0
   337   000009                     motorLinit@mL:
   338                           	callstack 0
   339   000009                     motorRinit@mR:
   340                           	callstack 0
   341   000009                     ___wmul@multiplier:
   342                           	callstack 0
   343   000009                     ___flge@ff1:
   344                           	callstack 0
   345   000009                     ___fldiv@b:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x8
   349   000009                     	ds	1
   350   00000A                     ??_I2C_2_Master_Read:
   351   00000A                     I2C_2_Master_Write@data_byte:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x9
   355   00000A                     	ds	1
   356   00000B                     color_writetoaddr@value:
   357                           	callstack 0
   358   00000B                     I2C_2_Master_Read@ack:
   359                           	callstack 0
   360   00000B                     ___wmul@multiplicand:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0xA
   364   00000B                     	ds	1
   365   00000C                     color_writetoaddr@address:
   366                           	callstack 0
   367   00000C                     I2C_2_Master_Read@tmp:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0xB
   371   00000C                     	ds	1
   372   00000D                     ??_Color_Interrupts_init:
   373   00000D                     ??_color_click_init:
   374   00000D                     ?_color_read_Red:
   375                           	callstack 0
   376   00000D                     ?_color_read_Green:
   377                           	callstack 0
   378   00000D                     ?_color_read_Blue:
   379                           	callstack 0
   380   00000D                     ?_color_read_Clear:
   381                           	callstack 0
   382   00000D                     Color_Interrupts_threshold@upperThreshold:
   383                           	callstack 0
   384   00000D                     ___wmul@product:
   385                           	callstack 0
   386   00000D                     ___flge@ff2:
   387                           	callstack 0
   388   00000D                     ___fldiv@a:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0xC
   392   00000D                     	ds	2
   393   00000F                     ??_color_read_Red:
   394   00000F                     ??_color_read_Green:
   395   00000F                     ??_color_read_Blue:
   396   00000F                     ??_color_read_Clear:
   397   00000F                     ?___lwdiv:
   398                           	callstack 0
   399   00000F                     Color_Interrupts_threshold@lowerThreshold:
   400                           	callstack 0
   401   00000F                     ___lwdiv@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0xE
   405   00000F                     	ds	2
   406   000011                     ??___fldiv:
   407   000011                     ??___flge:
   408   000011                     ___lwdiv@divisor:
   409                           	callstack 0
   410                           
   411                           ; 2 bytes @ 0x10
   412   000011                     	ds	1
   413   000012                     color_read_Red@tmp:
   414                           	callstack 0
   415   000012                     color_read_Green@tmp:
   416                           	callstack 0
   417   000012                     color_read_Blue@tmp:
   418                           	callstack 0
   419   000012                     color_read_Clear@tmp:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x11
   423   000012                     	ds	1
   424   000013                     ___lwdiv@quotient:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x12
   428   000013                     	ds	1
   429   000014                     ?___xxtofl:
   430                           	callstack 0
   431   000014                     ___xxtofl@val:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x13
   435   000014                     	ds	1
   436   000015                     ___lwdiv@counter:
   437                           	callstack 0
   438   000015                     ___fldiv@rem:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0x14
   442   000015                     	ds	1
   443   000016                     setMotorPWM@m:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x15
   447   000016                     	ds	2
   448   000018                     ??_setMotorPWM:
   449   000018                     ??___xxtofl:
   450                           
   451                           ; 1 bytes @ 0x17
   452   000018                     	ds	1
   453   000019                     ___fldiv@sign:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x18
   457   000019                     	ds	1
   458   00001A                     setMotorPWM@posDuty:
   459                           	callstack 0
   460   00001A                     ___fldiv@new_exp:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x19
   464   00001A                     	ds	1
   465   00001B                     setMotorPWM@negDuty:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x1A
   469   00001B                     	ds	1
   470   00001C                     ___xxtofl@sign:
   471                           	callstack 0
   472   00001C                     norm_stop@mL:
   473                           	callstack 0
   474   00001C                     turnRight@mL:
   475                           	callstack 0
   476   00001C                     fullSpeedAhead@mL:
   477                           	callstack 0
   478   00001C                     ___fldiv@grs:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x1B
   482   00001C                     	ds	1
   483   00001D                     ___xxtofl@exp:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x1C
   487   00001D                     	ds	1
   488   00001E                     norm_stop@mR:
   489                           	callstack 0
   490   00001E                     turnRight@mR:
   491                           	callstack 0
   492   00001E                     fullSpeedAhead@mR:
   493                           	callstack 0
   494   00001E                     ___xxtofl@arg:
   495                           	callstack 0
   496                           
   497                           ; 4 bytes @ 0x1D
   498   00001E                     	ds	2
   499   000020                     ___fldiv@bexp:
   500                           	callstack 0
   501   000020                     motor_response@temp:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x1F
   505   000020                     	ds	1
   506   000021                     ___fldiv@aexp:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x20
   510   000021                     	ds	1
   511   000022                     color_read_RGBC@temp:
   512                           	callstack 0
   513   000022                     color_normalise@RGBC:
   514                           	callstack 0
   515   000022                     motor_response@mL:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0x21
   519   000022                     	ds	2
   520   000024                     motor_response@mR:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x23
   524   000024                     	ds	2
   525   000026                     ??_motor_response:
   526                           
   527                           ; 1 bytes @ 0x25
   528   000026                     	ds	2
   529   000028                     motor_response@j:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x27
   533   000028                     	ds	2
   534   00002A                     ??_main:
   535                           
   536                           ; 1 bytes @ 0x29
   537   00002A                     	ds	2
   538                           
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 22 in file "main.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  buf           100    0        unsigned char [100]
   549 ;;  RGBC           36    0[BANK0 ] struct RGBC_val
   550 ;;  mR              9   45[BANK0 ] struct DC_motor
   551 ;;  mL              9   36[BANK0 ] struct DC_motor
   552 ;;  lowerThresho    2    0        int 
   553 ;;  upperThresho    2    0        int 
   554 ;;  amb_clear       2    0        int 
   555 ;;  amb_blue        2    0        int 
   556 ;;  amb_green       2    0        int 
   557 ;;  amb_red         2    0        int 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   568 ;;      Locals:         0      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   570 ;;      Totals:         2      54       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   571 ;;Total ram usage:       56 bytes
   572 ;; Hardware stack levels required when called: 10
   573 ;; This function calls:
   574 ;;		_Color_Interrupts_init
   575 ;;		_Color_Interrupts_threshold
   576 ;;		_Interrupts_init
   577 ;;		_color_click_init
   578 ;;		_color_normalise
   579 ;;		_color_read_Blue
   580 ;;		_color_read_Clear
   581 ;;		_color_read_Green
   582 ;;		_color_read_RGBC
   583 ;;		_color_read_Red
   584 ;;		_fullSpeedAhead
   585 ;;		_initDCmotorsPWM
   586 ;;		_motorLinit
   587 ;;		_motorRinit
   588 ;;		_motor_response
   589 ;;		_norm_stop
   590 ;;		_persistence_register
   591 ;;		_tricolorLED
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text0
   598   001624                     __ptext0:
   599                           	callstack 0
   600   001624                     _main:
   601                           	callstack 21
   602   001624                     
   603                           ;main.c: 24:     tricolorLED();
   604   001624  EC51  F010         	call	_tricolorLED	;wreg free
   605   001628                     
   606                           ;main.c: 30:     color_click_init();
   607   001628  EC3C  F00F         	call	_color_click_init	;wreg free
   608   00162C                     
   609                           ;main.c: 32:     Interrupts_init();
   610   00162C  EC5C  F010         	call	_Interrupts_init	;wreg free
   611                           
   612                           ;main.c: 33:     Color_Interrupts_init();
   613   001630  EC37  F010         	call	_Color_Interrupts_init	;wreg free
   614                           
   615                           ;main.c: 34:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   616   001634  0E1F               	movlw	31
   617   001636  6E0E               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
   618   001638  0E40               	movlw	64
   619   00163A  6E0D               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
   620   00163C  0E00               	movlw	0
   621   00163E  6E10               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
   622   001640  0E00               	movlw	0
   623   001642  6E0F               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
   624   001644  ECB2  F00F         	call	_Color_Interrupts_threshold	;wreg free
   625                           
   626                           ;main.c: 35:     persistence_register();
   627   001648  EC67  F010         	call	_persistence_register	;wreg free
   628   00164C                     
   629                           ;main.c: 37:     initDCmotorsPWM(200);
   630   00164C  0E00               	movlw	0
   631   00164E  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   632   001650  0EC8               	movlw	200
   633   001652  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   634   001654  EC5E  F00D         	call	_initDCmotorsPWM	;wreg free
   635   001658                     
   636                           ;main.c: 38:     DC_motor mL, mR;;main.c: 39:     motorLinit(&mL);
   637   001658  0ED3               	movlw	low main@mL
   638   00165A  6E09               	movwf	motorLinit@mL^0,c
   639   00165C  0E00               	movlw	high main@mL
   640   00165E  6E0A               	movwf	(motorLinit@mL+1)^0,c
   641   001660  EC46  F00E         	call	_motorLinit	;wreg free
   642   001664                     
   643                           ;main.c: 40:     motorRinit(&mR);
   644   001664  0EDC               	movlw	low main@mR
   645   001666  6E09               	movwf	motorRinit@mR^0,c
   646   001668  0E00               	movlw	high main@mR
   647   00166A  6E0A               	movwf	(motorRinit@mR+1)^0,c
   648   00166C  EC11  F00E         	call	_motorRinit	;wreg free
   649   001670                     
   650                           ;main.c: 42:     TRISEbits.TRISE2 = 0;
   651   001670  9485               	bcf	133,2,c	;volatile
   652   001672                     
   653                           ;main.c: 43:     TRISEbits.TRISE4 = 0;
   654   001672  9885               	bcf	133,4,c	;volatile
   655   001674                     
   656                           ;main.c: 44:     TRISCbits.TRISC7 = 0;
   657   001674  9E83               	bcf	131,7,c	;volatile
   658   001676                     
   659                           ;main.c: 45:     TRISGbits.TRISG6 = 0;
   660   001676  9C87               	bcf	135,6,c	;volatile
   661   001678                     
   662                           ;main.c: 46:     TRISDbits.TRISD7 = 0;
   663   001678  9E84               	bcf	132,7,c	;volatile
   664   00167A                     
   665                           ;main.c: 47:     LATDbits.LATD7 = 0;
   666   00167A  9E7C               	bcf	124,7,c	;volatile
   667   00167C                     
   668                           ;main.c: 48:     TRISHbits.TRISH3 = 0;
   669   00167C  9688               	bcf	136,3,c	;volatile
   670   00167E                     
   671                           ;main.c: 49:     LATHbits.LATH3 = 0;
   672   00167E  9680               	bcf	128,3,c	;volatile
   673   001680  EC7B  F00E         	call	_color_read_Red	;wreg free
   674   001684  ECF3  F00E         	call	_color_read_Blue	;wreg free
   675   001688  ECA3  F00E         	call	_color_read_Green	;wreg free
   676   00168C  ECCB  F00E         	call	_color_read_Clear	;wreg free
   677   001690                     l2780:
   678                           
   679                           ;main.c: 58:         fullSpeedAhead(&mL, &mR);
   680   001690  0ED3               	movlw	low main@mL
   681   001692  6E1C               	movwf	fullSpeedAhead@mL^0,c
   682   001694  0E00               	movlw	high main@mL
   683   001696  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   684   001698  0EDC               	movlw	low main@mR
   685   00169A  6E1E               	movwf	fullSpeedAhead@mR^0,c
   686   00169C  0E00               	movlw	high main@mR
   687   00169E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   688   0016A0  EC25  F00C         	call	_fullSpeedAhead	;wreg free
   689   0016A4                     
   690                           ;main.c: 60:         LATHbits.LATH3 = 1;
   691   0016A4  8680               	bsf	128,3,c	;volatile
   692   0016A6                     
   693                           ;main.c: 61:         if (interrupt_flag == 1 ) {
   694   0016A6  0100               	movlb	0	; () banked
   695   0016A8  05AD               	decf	_interrupt_flag& (0+255),w,b
   696   0016AA  11AE               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   697   0016AC  A4D8               	btfss	status,2,c
   698   0016AE  EF5B  F00B         	goto	u1571
   699   0016B2  EF5D  F00B         	goto	u1570
   700   0016B6                     u1571:
   701   0016B6  EF48  F00B         	goto	l2780
   702   0016BA                     u1570:
   703   0016BA                     
   704                           ; BSR set to: 0
   705                           ;main.c: 63:             norm_stop(&mL, &mR);
   706   0016BA  0ED3               	movlw	low main@mL
   707   0016BC  6E1C               	movwf	norm_stop@mL^0,c
   708   0016BE  0E00               	movlw	high main@mL
   709   0016C0  6E1D               	movwf	(norm_stop@mL+1)^0,c
   710   0016C2  0EDC               	movlw	low main@mR
   711   0016C4  6E1E               	movwf	norm_stop@mR^0,c
   712   0016C6  0E00               	movlw	high main@mR
   713   0016C8  6E1F               	movwf	(norm_stop@mR+1)^0,c
   714   0016CA  EC56  F00F         	call	_norm_stop	;wreg free
   715   0016CE                     
   716                           ;main.c: 64:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   717   0016CE  0E52               	movlw	82
   718   0016D0  6E2B               	movwf	(??_main+1)^0,c
   719   0016D2  0E2B               	movlw	43
   720   0016D4  6E2A               	movwf	??_main^0,c
   721   0016D6  0E00               	movlw	0
   722   0016D8                     u1637:
   723   0016D8  2EE8               	decfsz	wreg,f,c
   724   0016DA  D7FE               	bra	u1637
   725   0016DC  2E2A               	decfsz	??_main^0,f,c
   726   0016DE  D7FC               	bra	u1637
   727   0016E0  2E2B               	decfsz	(??_main+1)^0,f,c
   728   0016E2  D7FA               	bra	u1637
   729   0016E4  D000               	nop2	
   730   0016E6                     
   731                           ;main.c: 65:             LATDbits.LATD7 = 0;
   732   0016E6  9E7C               	bcf	124,7,c	;volatile
   733   0016E8                     
   734                           ;main.c: 66:             color_read_RGBC(&RGBC);
   735   0016E8  0EAF               	movlw	low main@RGBC
   736   0016EA  6E22               	movwf	color_read_RGBC@temp^0,c
   737   0016EC  0E00               	movlw	high main@RGBC
   738   0016EE  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   739   0016F0  EC9A  F00C         	call	_color_read_RGBC	;wreg free
   740   0016F4                     
   741                           ;main.c: 67:             color_normalise(&RGBC);
   742   0016F4  0EAF               	movlw	low main@RGBC
   743   0016F6  6E22               	movwf	color_normalise@RGBC^0,c
   744   0016F8  0E00               	movlw	high main@RGBC
   745   0016FA  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   746   0016FC  EC69  F00A         	call	_color_normalise	;wreg free
   747   001700                     
   748                           ;main.c: 68:             buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   749   001700  0EAF               	movlw	low main@RGBC
   750   001702  6E20               	movwf	motor_response@temp^0,c
   751   001704  0E00               	movlw	high main@RGBC
   752   001706  6E21               	movwf	(motor_response@temp+1)^0,c
   753   001708  0ED3               	movlw	low main@mL
   754   00170A  6E22               	movwf	motor_response@mL^0,c
   755   00170C  0E00               	movlw	high main@mL
   756   00170E  6E23               	movwf	(motor_response@mL+1)^0,c
   757   001710  0EDC               	movlw	low main@mR
   758   001712  6E24               	movwf	motor_response@mR^0,c
   759   001714  0E00               	movlw	high main@mR
   760   001716  6E25               	movwf	(motor_response@mR+1)^0,c
   761   001718  ECFD  F00C         	call	_motor_response	;wreg free
   762   00171C  6E2A               	movwf	??_main^0,c
   763   00171E  0E9C               	movlw	low _buggy_path
   764   001720  0100               	movlb	0	; () banked
   765   001722  25AB               	addwf	_ctr& (0+255),w,b
   766   001724  6ED9               	movwf	fsr2l,c
   767   001726  0E00               	movlw	high _buggy_path
   768   001728  21AC               	addwfc	(_ctr+1)& (0+255),w,b
   769   00172A  6EDA               	movwf	fsr2h,c
   770   00172C  C02A  FFDF         	movff	??_main,indf2
   771   001730                     
   772                           ; BSR set to: 0
   773                           ;main.c: 69:             ctr++;
   774   001730  4BAB               	infsnz	_ctr& (0+255),f,b
   775   001732  2BAC               	incf	(_ctr+1)& (0+255),f,b
   776   001734                     
   777                           ; BSR set to: 0
   778                           ;main.c: 77:             LATHbits.LATH3 = 0;
   779   001734  9680               	bcf	128,3,c	;volatile
   780   001736                     
   781                           ; BSR set to: 0
   782                           ;main.c: 78:             interrupt_flag = 0;
   783   001736  0E00               	movlw	0
   784   001738  6FAE               	movwf	(_interrupt_flag+1)& (0+255),b
   785   00173A  0E00               	movlw	0
   786   00173C  6FAD               	movwf	_interrupt_flag& (0+255),b
   787   00173E  EF48  F00B         	goto	l2780
   788   001742  EF19  F000         	goto	start
   789   001746                     __end_of_main:
   790                           	callstack 0
   791                           
   792 ;; *************** function _tricolorLED *****************
   793 ;; Defined at:
   794 ;;		line 113 in file "color.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		None
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used: 1
   814 ;; Hardware stack levels required when called: 6
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           
   822                           	psect	text1
   823   0020A2                     __ptext1:
   824                           	callstack 0
   825   0020A2                     _tricolorLED:
   826                           	callstack 24
   827   0020A2                     
   828                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
   829   0020A2  9087               	bcf	135,0,c	;volatile
   830                           
   831                           ;color.c: 116:     LATGbits.LATG0 = 1;
   832   0020A4  807F               	bsf	127,0,c	;volatile
   833                           
   834                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
   835   0020A6  9881               	bcf	129,4,c	;volatile
   836                           
   837                           ;color.c: 118:     LATAbits.LATA4 = 1;
   838   0020A8  8879               	bsf	121,4,c	;volatile
   839                           
   840                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
   841   0020AA  9E86               	bcf	134,7,c	;volatile
   842                           
   843                           ;color.c: 120:     LATFbits.LATF7 = 1;
   844   0020AC  8E7E               	bsf	126,7,c	;volatile
   845                           
   846                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
   847   0020AE  9681               	bcf	129,3,c	;volatile
   848                           
   849                           ;color.c: 122:     LATAbits.LATA3 = 1;
   850   0020B0  8679               	bsf	121,3,c	;volatile
   851                           
   852                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
   853   0020B2  9E85               	bcf	133,7,c	;volatile
   854                           
   855                           ;color.c: 124:     LATEbits.LATE7 = 1;
   856   0020B4  8E7D               	bsf	125,7,c	;volatile
   857   0020B6  0012               	return		;funcret
   858   0020B8                     __end_of_tricolorLED:
   859                           	callstack 0
   860                           
   861 ;; *************** function _persistence_register *****************
   862 ;; Defined at:
   863 ;;		line 46 in file "interrupts.c"
   864 ;; Parameters:    Size  Location     Type
   865 ;;		None
   866 ;; Auto vars:     Size  Location     Type
   867 ;;		None
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   881 ;;Total ram usage:        0 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 9
   884 ;; This function calls:
   885 ;;		_color_writetoaddr
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           	psect	text2
   892   0020CE                     __ptext2:
   893                           	callstack 0
   894   0020CE                     _persistence_register:
   895                           	callstack 21
   896   0020CE                     
   897                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   898   0020CE  0E02               	movlw	2
   899   0020D0  6E0B               	movwf	color_writetoaddr@value^0,c
   900   0020D2  0E0C               	movlw	12
   901   0020D4  EC17  F010         	call	_color_writetoaddr
   902   0020D8  0012               	return		;funcret
   903   0020DA                     __end_of_persistence_register:
   904                           	callstack 0
   905                           
   906 ;; *************** function _motor_response *****************
   907 ;; Defined at:
   908 ;;		line 127 in file "color.c"
   909 ;; Parameters:    Size  Location     Type
   910 ;;  temp            2   31[COMRAM] PTR struct RGBC_val
   911 ;;		 -> main@RGBC(36), 
   912 ;;  mL              2   33[COMRAM] PTR struct DC_motor
   913 ;;		 -> main@mL(9), 
   914 ;;  mR              2   35[COMRAM] PTR struct DC_motor
   915 ;;		 -> main@mR(9), 
   916 ;; Auto vars:     Size  Location     Type
   917 ;;  j               2   39[COMRAM] int 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      unsigned char 
   920 ;; Registers used:
   921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   927 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   930 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   931 ;;Total ram usage:       10 bytes
   932 ;; Hardware stack levels used: 1
   933 ;; Hardware stack levels required when called: 9
   934 ;; This function calls:
   935 ;;		___flge
   936 ;;		_norm_stop
   937 ;;		_turnRight
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text3
   944   0019FA                     __ptext3:
   945                           	callstack 0
   946   0019FA                     _motor_response:
   947                           	callstack 21
   948   0019FA                     
   949                           ;color.c: 128:     if (temp->norm_G >8) {
   950   0019FA  0E00               	movlw	0
   951   0019FC  6E09               	movwf	___flge@ff1^0,c
   952   0019FE  0E00               	movlw	0
   953   001A00  6E0A               	movwf	(___flge@ff1+1)^0,c
   954   001A02  0E00               	movlw	0
   955   001A04  6E0B               	movwf	(___flge@ff1+2)^0,c
   956   001A06  0E41               	movlw	65
   957   001A08  6E0C               	movwf	(___flge@ff1+3)^0,c
   958   001A0A  EE20 F018          	lfsr	2,24
   959   001A0E  5020               	movf	motor_response@temp^0,w,c
   960   001A10  26D9               	addwf	fsr2l,f,c
   961   001A12  5021               	movf	(motor_response@temp+1)^0,w,c
   962   001A14  22DA               	addwfc	fsr2h,f,c
   963   001A16  CFDE F00D          	movff	postinc2,___flge@ff2
   964   001A1A  CFDE F00E          	movff	postinc2,___flge@ff2+1
   965   001A1E  CFDE F00F          	movff	postinc2,___flge@ff2+2
   966   001A22  CFDE F010          	movff	postinc2,___flge@ff2+3
   967   001A26  ECA3  F00B         	call	___flge	;wreg free
   968   001A2A  B0D8               	btfsc	status,0,c
   969   001A2C  EF1A  F00D         	goto	u1351
   970   001A30  EF1C  F00D         	goto	u1350
   971   001A34                     u1351:
   972   001A34  EF5D  F00D         	goto	l113
   973   001A38                     u1350:
   974   001A38                     
   975                           ;color.c: 129:         for (int j = 0; j <= 15; j++) {
   976   001A38  0E00               	movlw	0
   977   001A3A  6E29               	movwf	(motor_response@j+1)^0,c
   978   001A3C  0E00               	movlw	0
   979   001A3E  6E28               	movwf	motor_response@j^0,c
   980   001A40                     l2492:
   981                           
   982                           ;color.c: 130:             turnRight(mL, mR);
   983   001A40  C022  F01C         	movff	motor_response@mL,turnRight@mL
   984   001A44  C023  F01D         	movff	motor_response@mL+1,turnRight@mL+1
   985   001A48  C024  F01E         	movff	motor_response@mR,turnRight@mR
   986   001A4C  C025  F01F         	movff	motor_response@mR+1,turnRight@mR+1
   987   001A50  ECD8  F00D         	call	_turnRight	;wreg free
   988   001A54                     
   989                           ;color.c: 131:             _delay((unsigned long)((30)*(64000000/4000.0)));
   990   001A54  0E03               	movlw	3
   991   001A56  6E27               	movwf	(??_motor_response+1)^0,c
   992   001A58  0E70               	movlw	112
   993   001A5A  6E26               	movwf	??_motor_response^0,c
   994   001A5C  0E5C               	movlw	92
   995   001A5E                     u1647:
   996   001A5E  2EE8               	decfsz	wreg,f,c
   997   001A60  D7FE               	bra	u1647
   998   001A62  2E26               	decfsz	??_motor_response^0,f,c
   999   001A64  D7FC               	bra	u1647
  1000   001A66  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1001   001A68  D7FA               	bra	u1647
  1002   001A6A  D000               	nop2	
  1003   001A6C                     
  1004                           ;color.c: 132:             norm_stop(mL, mR);
  1005   001A6C  C022  F01C         	movff	motor_response@mL,norm_stop@mL
  1006   001A70  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1007   001A74  C024  F01E         	movff	motor_response@mR,norm_stop@mR
  1008   001A78  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1009   001A7C  EC56  F00F         	call	_norm_stop	;wreg free
  1010                           
  1011                           ;color.c: 133:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1012   001A80  0E03               	movlw	3
  1013   001A82  6E27               	movwf	(??_motor_response+1)^0,c
  1014   001A84  0E70               	movlw	112
  1015   001A86  6E26               	movwf	??_motor_response^0,c
  1016   001A88  0E5C               	movlw	92
  1017   001A8A                     u1657:
  1018   001A8A  2EE8               	decfsz	wreg,f,c
  1019   001A8C  D7FE               	bra	u1657
  1020   001A8E  2E26               	decfsz	??_motor_response^0,f,c
  1021   001A90  D7FC               	bra	u1657
  1022   001A92  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1023   001A94  D7FA               	bra	u1657
  1024   001A96  D000               	nop2	
  1025   001A98                     
  1026                           ;color.c: 134:         }
  1027   001A98  4A28               	infsnz	motor_response@j^0,f,c
  1028   001A9A  2A29               	incf	(motor_response@j+1)^0,f,c
  1029   001A9C  BE29               	btfsc	(motor_response@j+1)^0,7,c
  1030   001A9E  EF5A  F00D         	goto	u1361
  1031   001AA2  5029               	movf	(motor_response@j+1)^0,w,c
  1032   001AA4  E109               	bnz	u1360
  1033   001AA6  0E10               	movlw	16
  1034   001AA8  5C28               	subwf	motor_response@j^0,w,c
  1035   001AAA  A0D8               	btfss	status,0,c
  1036   001AAC  EF5A  F00D         	goto	u1361
  1037   001AB0  EF5C  F00D         	goto	u1360
  1038   001AB4                     u1361:
  1039   001AB4  EF20  F00D         	goto	l2492
  1040   001AB8                     u1360:
  1041   001AB8                     
  1042                           ;color.c: 135:         return 1;
  1043   001AB8  0E01               	movlw	1
  1044   001ABA                     l113:
  1045   001ABA  0012               	return		;funcret
  1046   001ABC                     __end_of_motor_response:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _turnRight *****************
  1050 ;; Defined at:
  1051 ;;		line 144 in file "dc_motor.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1054 ;;		 -> main@mL(9), 
  1055 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1056 ;;		 -> main@mR(9), 
  1057 ;; Auto vars:     Size  Location     Type
  1058 ;;		None
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      void 
  1061 ;; Registers used:
  1062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1068 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1071 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1072 ;;Total ram usage:        4 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 8
  1075 ;; This function calls:
  1076 ;;		_setMotorPWM
  1077 ;; This function is called by:
  1078 ;;		_motor_response
  1079 ;;		_motor_retrace
  1080 ;; This function uses a non-reentrant model
  1081 ;;
  1082                           
  1083                           	psect	text4
  1084   001BB0                     __ptext4:
  1085                           	callstack 0
  1086   001BB0                     _turnRight:
  1087                           	callstack 21
  1088   001BB0                     
  1089                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
  1090   001BB0  C01C  FFD9         	movff	turnRight@mL,fsr2l
  1091   001BB4  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  1092   001BB8  0E32               	movlw	50
  1093   001BBA  6EDF               	movwf	indf2,c
  1094                           
  1095                           ;dc_motor.c: 147:     mR->power = 50;
  1096   001BBC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  1097   001BC0  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  1098   001BC4  0E32               	movlw	50
  1099   001BC6  6EDF               	movwf	indf2,c
  1100   001BC8                     
  1101                           ;dc_motor.c: 148:     mL->brakemode = 1;
  1102   001BC8  EE20 F002          	lfsr	2,2
  1103   001BCC  501C               	movf	turnRight@mL^0,w,c
  1104   001BCE  26D9               	addwf	fsr2l,f,c
  1105   001BD0  501D               	movf	(turnRight@mL+1)^0,w,c
  1106   001BD2  22DA               	addwfc	fsr2h,f,c
  1107   001BD4  0E01               	movlw	1
  1108   001BD6  6EDF               	movwf	indf2,c
  1109   001BD8                     
  1110                           ;dc_motor.c: 149:     mR->brakemode = 1;
  1111   001BD8  EE20 F002          	lfsr	2,2
  1112   001BDC  501E               	movf	turnRight@mR^0,w,c
  1113   001BDE  26D9               	addwf	fsr2l,f,c
  1114   001BE0  501F               	movf	(turnRight@mR+1)^0,w,c
  1115   001BE2  22DA               	addwfc	fsr2h,f,c
  1116   001BE4  0E01               	movlw	1
  1117   001BE6  6EDF               	movwf	indf2,c
  1118   001BE8                     
  1119                           ;dc_motor.c: 150:     mR->direction = 0;
  1120   001BE8  EE20 F001          	lfsr	2,1
  1121   001BEC  501E               	movf	turnRight@mR^0,w,c
  1122   001BEE  26D9               	addwf	fsr2l,f,c
  1123   001BF0  501F               	movf	(turnRight@mR+1)^0,w,c
  1124   001BF2  22DA               	addwfc	fsr2h,f,c
  1125   001BF4  0E00               	movlw	0
  1126   001BF6  6EDF               	movwf	indf2,c
  1127   001BF8                     
  1128                           ;dc_motor.c: 151:     mL->direction = 1;
  1129   001BF8  EE20 F001          	lfsr	2,1
  1130   001BFC  501C               	movf	turnRight@mL^0,w,c
  1131   001BFE  26D9               	addwf	fsr2l,f,c
  1132   001C00  501D               	movf	(turnRight@mL+1)^0,w,c
  1133   001C02  22DA               	addwfc	fsr2h,f,c
  1134   001C04  0E01               	movlw	1
  1135   001C06  6EDF               	movwf	indf2,c
  1136   001C08                     
  1137                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1138   001C08  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  1139   001C0C  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  1140   001C10  ECB3  F009         	call	_setMotorPWM	;wreg free
  1141   001C14                     
  1142                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1143   001C14  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  1144   001C18  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  1145   001C1C  ECB3  F009         	call	_setMotorPWM	;wreg free
  1146   001C20  0012               	return		;funcret
  1147   001C22                     __end_of_turnRight:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _norm_stop *****************
  1151 ;; Defined at:
  1152 ;;		line 118 in file "dc_motor.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1155 ;;		 -> main@mL(9), 
  1156 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1157 ;;		 -> main@mR(9), 
  1158 ;; Auto vars:     Size  Location     Type
  1159 ;;		None
  1160 ;; Return value:  Size  Location     Type
  1161 ;;                  1    wreg      void 
  1162 ;; Registers used:
  1163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1164 ;; Tracked objects:
  1165 ;;		On entry : 0/0
  1166 ;;		On exit  : 0/0
  1167 ;;		Unchanged: 0/0
  1168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1169 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1173 ;;Total ram usage:        4 bytes
  1174 ;; Hardware stack levels used: 1
  1175 ;; Hardware stack levels required when called: 8
  1176 ;; This function calls:
  1177 ;;		_setMotorPWM
  1178 ;; This function is called by:
  1179 ;;		_motor_response
  1180 ;;		_main
  1181 ;;		_motor_retrace
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           	psect	text5
  1186   001EAC                     __ptext5:
  1187                           	callstack 0
  1188   001EAC                     _norm_stop:
  1189                           	callstack 22
  1190   001EAC                     
  1191                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1192   001EAC  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  1193   001EB0  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  1194   001EB4  0E00               	movlw	0
  1195   001EB6  6EDF               	movwf	indf2,c
  1196                           
  1197                           ;dc_motor.c: 125:     mR->power = 0;
  1198   001EB8  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  1199   001EBC  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  1200   001EC0  0E00               	movlw	0
  1201   001EC2  6EDF               	movwf	indf2,c
  1202   001EC4                     
  1203                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1204   001EC4  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  1205   001EC8  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1206   001ECC  ECB3  F009         	call	_setMotorPWM	;wreg free
  1207   001ED0                     
  1208                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1209   001ED0  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  1210   001ED4  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1211   001ED8  ECB3  F009         	call	_setMotorPWM	;wreg free
  1212   001EDC  0012               	return		;funcret
  1213   001EDE                     __end_of_norm_stop:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function ___flge *****************
  1217 ;; Defined at:
  1218 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;  ff1             4    8[COMRAM] void 
  1221 ;;  ff2             4   12[COMRAM] void 
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;		None
  1224 ;; Return value:  Size  Location     Type
  1225 ;;		None               void
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1233 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;Total ram usage:       12 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 6
  1240 ;; This function calls:
  1241 ;;		Nothing
  1242 ;; This function is called by:
  1243 ;;		_motor_response
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           	psect	text6
  1248   001746                     __ptext6:
  1249                           	callstack 0
  1250   001746                     ___flge:
  1251                           	callstack 23
  1252   001746  0E00               	movlw	0
  1253   001748  1409               	andwf	___flge@ff1^0,w,c
  1254   00174A  6E11               	movwf	??___flge^0,c
  1255   00174C  0E00               	movlw	0
  1256   00174E  140A               	andwf	(___flge@ff1+1)^0,w,c
  1257   001750  6E12               	movwf	(??___flge+1)^0,c
  1258   001752  0E80               	movlw	128
  1259   001754  140B               	andwf	(___flge@ff1+2)^0,w,c
  1260   001756  6E13               	movwf	(??___flge+2)^0,c
  1261   001758  0E7F               	movlw	127
  1262   00175A  140C               	andwf	(___flge@ff1+3)^0,w,c
  1263   00175C  6E14               	movwf	(??___flge+3)^0,c
  1264   00175E  5011               	movf	??___flge^0,w,c
  1265   001760  1012               	iorwf	(??___flge+1)^0,w,c
  1266   001762  1013               	iorwf	(??___flge+2)^0,w,c
  1267   001764  1014               	iorwf	(??___flge+3)^0,w,c
  1268   001766  A4D8               	btfss	status,2,c
  1269   001768  EFB8  F00B         	goto	u1201
  1270   00176C  EFBA  F00B         	goto	u1200
  1271   001770                     u1201:
  1272   001770  EFC2  F00B         	goto	l2396
  1273   001774                     u1200:
  1274   001774  0E00               	movlw	0
  1275   001776  6E09               	movwf	___flge@ff1^0,c
  1276   001778  0E00               	movlw	0
  1277   00177A  6E0A               	movwf	(___flge@ff1+1)^0,c
  1278   00177C  0E00               	movlw	0
  1279   00177E  6E0B               	movwf	(___flge@ff1+2)^0,c
  1280   001780  0E00               	movlw	0
  1281   001782  6E0C               	movwf	(___flge@ff1+3)^0,c
  1282   001784                     l2396:
  1283   001784  0E00               	movlw	0
  1284   001786  140D               	andwf	___flge@ff2^0,w,c
  1285   001788  6E11               	movwf	??___flge^0,c
  1286   00178A  0E00               	movlw	0
  1287   00178C  140E               	andwf	(___flge@ff2+1)^0,w,c
  1288   00178E  6E12               	movwf	(??___flge+1)^0,c
  1289   001790  0E80               	movlw	128
  1290   001792  140F               	andwf	(___flge@ff2+2)^0,w,c
  1291   001794  6E13               	movwf	(??___flge+2)^0,c
  1292   001796  0E7F               	movlw	127
  1293   001798  1410               	andwf	(___flge@ff2+3)^0,w,c
  1294   00179A  6E14               	movwf	(??___flge+3)^0,c
  1295   00179C  5011               	movf	??___flge^0,w,c
  1296   00179E  1012               	iorwf	(??___flge+1)^0,w,c
  1297   0017A0  1013               	iorwf	(??___flge+2)^0,w,c
  1298   0017A2  1014               	iorwf	(??___flge+3)^0,w,c
  1299   0017A4  A4D8               	btfss	status,2,c
  1300   0017A6  EFD7  F00B         	goto	u1211
  1301   0017AA  EFD9  F00B         	goto	u1210
  1302   0017AE                     u1211:
  1303   0017AE  EFE1  F00B         	goto	l2400
  1304   0017B2                     u1210:
  1305   0017B2  0E00               	movlw	0
  1306   0017B4  6E0D               	movwf	___flge@ff2^0,c
  1307   0017B6  0E00               	movlw	0
  1308   0017B8  6E0E               	movwf	(___flge@ff2+1)^0,c
  1309   0017BA  0E00               	movlw	0
  1310   0017BC  6E0F               	movwf	(___flge@ff2+2)^0,c
  1311   0017BE  0E00               	movlw	0
  1312   0017C0  6E10               	movwf	(___flge@ff2+3)^0,c
  1313   0017C2                     l2400:
  1314   0017C2  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  1315   0017C4  EFE6  F00B         	goto	u1221
  1316   0017C8  EFE8  F00B         	goto	u1220
  1317   0017CC                     u1221:
  1318   0017CC  EFF1  F00B         	goto	l2404
  1319   0017D0                     u1220:
  1320   0017D0  6C09               	negf	___flge@ff1^0,c
  1321   0017D2  1E0A               	comf	(___flge@ff1+1)^0,f,c
  1322   0017D4  B0D8               	btfsc	status,0,c
  1323   0017D6  2A0A               	incf	(___flge@ff1+1)^0,f,c
  1324   0017D8  1E0B               	comf	(___flge@ff1+2)^0,f,c
  1325   0017DA  B0D8               	btfsc	status,0,c
  1326   0017DC  2A0B               	incf	(___flge@ff1+2)^0,f,c
  1327   0017DE  0E80               	movlw	128
  1328   0017E0  560C               	subfwb	(___flge@ff1+3)^0,f,c
  1329   0017E2                     l2404:
  1330   0017E2  AE10               	btfss	(___flge@ff2+3)^0,7,c
  1331   0017E4  EFF6  F00B         	goto	u1231
  1332   0017E8  EFF8  F00B         	goto	u1230
  1333   0017EC                     u1231:
  1334   0017EC  EF01  F00C         	goto	l845
  1335   0017F0                     u1230:
  1336   0017F0  6C0D               	negf	___flge@ff2^0,c
  1337   0017F2  1E0E               	comf	(___flge@ff2+1)^0,f,c
  1338   0017F4  B0D8               	btfsc	status,0,c
  1339   0017F6  2A0E               	incf	(___flge@ff2+1)^0,f,c
  1340   0017F8  1E0F               	comf	(___flge@ff2+2)^0,f,c
  1341   0017FA  B0D8               	btfsc	status,0,c
  1342   0017FC  2A0F               	incf	(___flge@ff2+2)^0,f,c
  1343   0017FE  0E80               	movlw	128
  1344   001800  5610               	subfwb	(___flge@ff2+3)^0,f,c
  1345   001802                     l845:
  1346   001802  0E00               	movlw	0
  1347   001804  1A09               	xorwf	___flge@ff1^0,f,c
  1348   001806  0E00               	movlw	0
  1349   001808  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  1350   00180A  0E00               	movlw	0
  1351   00180C  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  1352   00180E  0E80               	movlw	128
  1353   001810  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  1354   001812  0E00               	movlw	0
  1355   001814  1A0D               	xorwf	___flge@ff2^0,f,c
  1356   001816  0E00               	movlw	0
  1357   001818  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  1358   00181A  0E00               	movlw	0
  1359   00181C  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  1360   00181E  0E80               	movlw	128
  1361   001820  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  1362   001822  500D               	movf	___flge@ff2^0,w,c
  1363   001824  5C09               	subwf	___flge@ff1^0,w,c
  1364   001826  500E               	movf	(___flge@ff2+1)^0,w,c
  1365   001828  580A               	subwfb	(___flge@ff1+1)^0,w,c
  1366   00182A  500F               	movf	(___flge@ff2+2)^0,w,c
  1367   00182C  580B               	subwfb	(___flge@ff1+2)^0,w,c
  1368   00182E  5010               	movf	(___flge@ff2+3)^0,w,c
  1369   001830  580C               	subwfb	(___flge@ff1+3)^0,w,c
  1370   001832  B0D8               	btfsc	status,0,c
  1371   001834  EF1E  F00C         	goto	u1241
  1372   001838  EF20  F00C         	goto	u1240
  1373   00183C                     u1241:
  1374   00183C  EF23  F00C         	goto	l2410
  1375   001840                     u1240:
  1376   001840  90D8               	bcf	status,0,c
  1377   001842  EF24  F00C         	goto	l850
  1378   001846                     l2410:
  1379   001846  80D8               	bsf	status,0,c
  1380   001848                     l850:
  1381   001848  0012               	return		;funcret
  1382   00184A                     __end_of___flge:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _motorRinit *****************
  1386 ;; Defined at:
  1387 ;;		line 88 in file "dc_motor.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  1390 ;;		 -> main@mR(9), 
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1402 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1406 ;;Total ram usage:        2 bytes
  1407 ;; Hardware stack levels used: 1
  1408 ;; Hardware stack levels required when called: 6
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text7
  1417   001C22                     __ptext7:
  1418                           	callstack 0
  1419   001C22                     _motorRinit:
  1420                           	callstack 24
  1421   001C22                     
  1422                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1423   001C22  C009  FFD9         	movff	motorRinit@mR,fsr2l
  1424   001C26  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  1425   001C2A  0E32               	movlw	50
  1426   001C2C  6EDF               	movwf	indf2,c
  1427   001C2E                     
  1428                           ;dc_motor.c: 91:     mR->direction = 1;
  1429   001C2E  EE20 F001          	lfsr	2,1
  1430   001C32  5009               	movf	motorRinit@mR^0,w,c
  1431   001C34  26D9               	addwf	fsr2l,f,c
  1432   001C36  500A               	movf	(motorRinit@mR+1)^0,w,c
  1433   001C38  22DA               	addwfc	fsr2h,f,c
  1434   001C3A  0E01               	movlw	1
  1435   001C3C  6EDF               	movwf	indf2,c
  1436   001C3E                     
  1437                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1438   001C3E  EE20 F002          	lfsr	2,2
  1439   001C42  5009               	movf	motorRinit@mR^0,w,c
  1440   001C44  26D9               	addwf	fsr2l,f,c
  1441   001C46  500A               	movf	(motorRinit@mR+1)^0,w,c
  1442   001C48  22DA               	addwfc	fsr2h,f,c
  1443   001C4A  0E01               	movlw	1
  1444   001C4C  6EDF               	movwf	indf2,c
  1445   001C4E                     
  1446                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1447   001C4E  EE20 F005          	lfsr	2,5
  1448   001C52  5009               	movf	motorRinit@mR^0,w,c
  1449   001C54  26D9               	addwf	fsr2l,f,c
  1450   001C56  500A               	movf	(motorRinit@mR+1)^0,w,c
  1451   001C58  22DA               	addwfc	fsr2h,f,c
  1452   001C5A  0E25               	movlw	37
  1453   001C5C  6EDE               	movwf	postinc2,c
  1454   001C5E  0E0F               	movlw	15
  1455   001C60  6EDD               	movwf	postdec2,c
  1456   001C62                     
  1457                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1458   001C62  EE20 F007          	lfsr	2,7
  1459   001C66  5009               	movf	motorRinit@mR^0,w,c
  1460   001C68  26D9               	addwf	fsr2l,f,c
  1461   001C6A  500A               	movf	(motorRinit@mR+1)^0,w,c
  1462   001C6C  22DA               	addwfc	fsr2h,f,c
  1463   001C6E  0E21               	movlw	33
  1464   001C70  6EDE               	movwf	postinc2,c
  1465   001C72  0E0F               	movlw	15
  1466   001C74  6EDD               	movwf	postdec2,c
  1467   001C76                     
  1468                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1469   001C76  EE20 F003          	lfsr	2,3
  1470   001C7A  5009               	movf	motorRinit@mR^0,w,c
  1471   001C7C  26D9               	addwf	fsr2l,f,c
  1472   001C7E  500A               	movf	(motorRinit@mR+1)^0,w,c
  1473   001C80  22DA               	addwfc	fsr2h,f,c
  1474   001C82  0EC8               	movlw	200
  1475   001C84  6EDE               	movwf	postinc2,c
  1476   001C86  0E00               	movlw	0
  1477   001C88  6EDD               	movwf	postdec2,c
  1478   001C8A  0012               	return		;funcret
  1479   001C8C                     __end_of_motorRinit:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _motorLinit *****************
  1483 ;; Defined at:
  1484 ;;		line 78 in file "dc_motor.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  1487 ;;		 -> main@mL(9), 
  1488 ;; Auto vars:     Size  Location     Type
  1489 ;;		None
  1490 ;; Return value:  Size  Location     Type
  1491 ;;                  1    wreg      void 
  1492 ;; Registers used:
  1493 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1494 ;; Tracked objects:
  1495 ;;		On entry : 0/0
  1496 ;;		On exit  : 0/0
  1497 ;;		Unchanged: 0/0
  1498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1503 ;;Total ram usage:        2 bytes
  1504 ;; Hardware stack levels used: 1
  1505 ;; Hardware stack levels required when called: 6
  1506 ;; This function calls:
  1507 ;;		Nothing
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text8
  1514   001C8C                     __ptext8:
  1515                           	callstack 0
  1516   001C8C                     _motorLinit:
  1517                           	callstack 24
  1518   001C8C                     
  1519                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  1520   001C8C  C009  FFD9         	movff	motorLinit@mL,fsr2l
  1521   001C90  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  1522   001C94  0E32               	movlw	50
  1523   001C96  6EDF               	movwf	indf2,c
  1524   001C98                     
  1525                           ;dc_motor.c: 81:     mL->direction = 1;
  1526   001C98  EE20 F001          	lfsr	2,1
  1527   001C9C  5009               	movf	motorLinit@mL^0,w,c
  1528   001C9E  26D9               	addwf	fsr2l,f,c
  1529   001CA0  500A               	movf	(motorLinit@mL+1)^0,w,c
  1530   001CA2  22DA               	addwfc	fsr2h,f,c
  1531   001CA4  0E01               	movlw	1
  1532   001CA6  6EDF               	movwf	indf2,c
  1533   001CA8                     
  1534                           ;dc_motor.c: 82:     mL->brakemode = 1;
  1535   001CA8  EE20 F002          	lfsr	2,2
  1536   001CAC  5009               	movf	motorLinit@mL^0,w,c
  1537   001CAE  26D9               	addwf	fsr2l,f,c
  1538   001CB0  500A               	movf	(motorLinit@mL+1)^0,w,c
  1539   001CB2  22DA               	addwfc	fsr2h,f,c
  1540   001CB4  0E01               	movlw	1
  1541   001CB6  6EDF               	movwf	indf2,c
  1542   001CB8                     
  1543                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  1544   001CB8  EE20 F005          	lfsr	2,5
  1545   001CBC  5009               	movf	motorLinit@mL^0,w,c
  1546   001CBE  26D9               	addwf	fsr2l,f,c
  1547   001CC0  500A               	movf	(motorLinit@mL+1)^0,w,c
  1548   001CC2  22DA               	addwfc	fsr2h,f,c
  1549   001CC4  0EAA               	movlw	170
  1550   001CC6  6EDE               	movwf	postinc2,c
  1551   001CC8  0E0F               	movlw	15
  1552   001CCA  6EDD               	movwf	postdec2,c
  1553   001CCC                     
  1554                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  1555   001CCC  EE20 F007          	lfsr	2,7
  1556   001CD0  5009               	movf	motorLinit@mL^0,w,c
  1557   001CD2  26D9               	addwf	fsr2l,f,c
  1558   001CD4  500A               	movf	(motorLinit@mL+1)^0,w,c
  1559   001CD6  22DA               	addwfc	fsr2h,f,c
  1560   001CD8  0EA6               	movlw	166
  1561   001CDA  6EDE               	movwf	postinc2,c
  1562   001CDC  0E0F               	movlw	15
  1563   001CDE  6EDD               	movwf	postdec2,c
  1564   001CE0                     
  1565                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  1566   001CE0  EE20 F003          	lfsr	2,3
  1567   001CE4  5009               	movf	motorLinit@mL^0,w,c
  1568   001CE6  26D9               	addwf	fsr2l,f,c
  1569   001CE8  500A               	movf	(motorLinit@mL+1)^0,w,c
  1570   001CEA  22DA               	addwfc	fsr2h,f,c
  1571   001CEC  0EC8               	movlw	200
  1572   001CEE  6EDE               	movwf	postinc2,c
  1573   001CF0  0E00               	movlw	0
  1574   001CF2  6EDD               	movwf	postdec2,c
  1575   001CF4  0012               	return		;funcret
  1576   001CF6                     __end_of_motorLinit:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _initDCmotorsPWM *****************
  1580 ;; Defined at:
  1581 ;;		line 5 in file "dc_motor.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1595 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1598 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 6
  1602 ;; This function calls:
  1603 ;;		Nothing
  1604 ;; This function is called by:
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           	psect	text9
  1610   001ABC                     __ptext9:
  1611                           	callstack 0
  1612   001ABC                     _initDCmotorsPWM:
  1613                           	callstack 24
  1614   001ABC                     
  1615                           ;dc_motor.c: 9:     RE2PPS=0x05;
  1616   001ABC  0E05               	movlw	5
  1617   001ABE  010E               	movlb	14	; () banked
  1618   001AC0  6F74               	movwf	116,b	;volatile
  1619                           
  1620                           ;dc_motor.c: 10:     RE4PPS=0x06;
  1621   001AC2  0E06               	movlw	6
  1622   001AC4  6F76               	movwf	118,b	;volatile
  1623                           
  1624                           ;dc_motor.c: 11:     RC7PPS=0x07;
  1625   001AC6  0E07               	movlw	7
  1626   001AC8  6F69               	movwf	105,b	;volatile
  1627                           
  1628                           ;dc_motor.c: 12:     RG6PPS=0x08;
  1629   001ACA  0E08               	movlw	8
  1630   001ACC  6F88               	movwf	136,b	;volatile
  1631                           
  1632                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  1633   001ACE  50BD               	movf	189,w,c	;volatile
  1634   001AD0  0B8F               	andlw	-113
  1635   001AD2  0930               	iorlw	48
  1636   001AD4  6EBD               	movwf	189,c	;volatile
  1637                           
  1638                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  1639   001AD6  0EE0               	movlw	-32
  1640   001AD8  16BE               	andwf	190,f,c	;volatile
  1641                           
  1642                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  1643   001ADA  50BF               	movf	191,w,c	;volatile
  1644   001ADC  0BF0               	andlw	-16
  1645   001ADE  0901               	iorlw	1
  1646   001AE0  6EBF               	movwf	191,c	;volatile
  1647                           
  1648                           ;dc_motor.c: 21:     T2PR=200;
  1649   001AE2  0EC8               	movlw	200
  1650   001AE4  6EBC               	movwf	188,c	;volatile
  1651   001AE6                     
  1652                           ; BSR set to: 14
  1653                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  1654   001AE6  8EBD               	bsf	189,7,c	;volatile
  1655                           
  1656                           ;dc_motor.c: 26:     CCPR1H=0;
  1657   001AE8  0E00               	movlw	0
  1658   001AEA  6EAA               	movwf	170,c	;volatile
  1659                           
  1660                           ;dc_motor.c: 27:     CCPR2H=0;
  1661   001AEC  0E00               	movlw	0
  1662   001AEE  6EA6               	movwf	166,c	;volatile
  1663                           
  1664                           ;dc_motor.c: 28:     CCPR3H=0;
  1665   001AF0  0E00               	movlw	0
  1666   001AF2  010F               	movlb	15	; () banked
  1667   001AF4  6F25               	movwf	37,b	;volatile
  1668                           
  1669                           ;dc_motor.c: 29:     CCPR4H=0;
  1670   001AF6  0E00               	movlw	0
  1671   001AF8  6F21               	movwf	33,b	;volatile
  1672                           
  1673                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  1674   001AFA  0EFC               	movlw	-4
  1675   001AFC  16AD               	andwf	173,f,c	;volatile
  1676                           
  1677                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  1678   001AFE  0EF3               	movlw	-13
  1679   001B00  16AD               	andwf	173,f,c	;volatile
  1680                           
  1681                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  1682   001B02  0ECF               	movlw	-49
  1683   001B04  16AD               	andwf	173,f,c	;volatile
  1684                           
  1685                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  1686   001B06  0E3F               	movlw	-193
  1687   001B08  16AD               	andwf	173,f,c	;volatile
  1688   001B0A                     
  1689                           ; BSR set to: 15
  1690                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  1691   001B0A  88AB               	bsf	171,4,c	;volatile
  1692                           
  1693                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  1694   001B0C  50AB               	movf	171,w,c	;volatile
  1695   001B0E  0BF0               	andlw	-16
  1696   001B10  090C               	iorlw	12
  1697   001B12  6EAB               	movwf	171,c	;volatile
  1698   001B14                     
  1699                           ; BSR set to: 15
  1700                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  1701   001B14  8EAB               	bsf	171,7,c	;volatile
  1702   001B16                     
  1703                           ; BSR set to: 15
  1704                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  1705   001B16  88A7               	bsf	167,4,c	;volatile
  1706                           
  1707                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  1708   001B18  50A7               	movf	167,w,c	;volatile
  1709   001B1A  0BF0               	andlw	-16
  1710   001B1C  090C               	iorlw	12
  1711   001B1E  6EA7               	movwf	167,c	;volatile
  1712   001B20                     
  1713                           ; BSR set to: 15
  1714                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  1715   001B20  8EA7               	bsf	167,7,c	;volatile
  1716   001B22                     
  1717                           ; BSR set to: 15
  1718                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  1719   001B22  8926               	bsf	38,4,b	;volatile
  1720                           
  1721                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  1722   001B24  5126               	movf	38,w,b	;volatile
  1723   001B26  0BF0               	andlw	-16
  1724   001B28  090C               	iorlw	12
  1725   001B2A  6F26               	movwf	38,b	;volatile
  1726   001B2C                     
  1727                           ; BSR set to: 15
  1728                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  1729   001B2C  8F26               	bsf	38,7,b	;volatile
  1730   001B2E                     
  1731                           ; BSR set to: 15
  1732                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  1733   001B2E  8922               	bsf	34,4,b	;volatile
  1734                           
  1735                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  1736   001B30  5122               	movf	34,w,b	;volatile
  1737   001B32  0BF0               	andlw	-16
  1738   001B34  090C               	iorlw	12
  1739   001B36  6F22               	movwf	34,b	;volatile
  1740   001B38                     
  1741                           ; BSR set to: 15
  1742                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  1743   001B38  8F22               	bsf	34,7,b	;volatile
  1744   001B3A                     
  1745                           ; BSR set to: 15
  1746   001B3A  0012               	return		;funcret
  1747   001B3C                     __end_of_initDCmotorsPWM:
  1748                           	callstack 0
  1749                           
  1750 ;; *************** function _fullSpeedAhead *****************
  1751 ;; Defined at:
  1752 ;;		line 167 in file "dc_motor.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1755 ;;		 -> main@mL(9), 
  1756 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1757 ;;		 -> main@mR(9), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  1    wreg      void 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1769 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;Total ram usage:        5 bytes
  1774 ;; Hardware stack levels used: 1
  1775 ;; Hardware stack levels required when called: 8
  1776 ;; This function calls:
  1777 ;;		_setMotorPWM
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text10
  1784   00184A                     __ptext10:
  1785                           	callstack 0
  1786   00184A                     _fullSpeedAhead:
  1787                           	callstack 22
  1788   00184A                     
  1789                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  1790   00184A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1791   00184E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1792   001852  0E05               	movlw	5
  1793   001854  6EDF               	movwf	indf2,c
  1794                           
  1795                           ;dc_motor.c: 170:     mR->power = 5;
  1796   001856  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1797   00185A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1798   00185E  0E05               	movlw	5
  1799   001860  6EDF               	movwf	indf2,c
  1800   001862                     
  1801                           ;dc_motor.c: 171:     mR->direction = 1;
  1802   001862  EE20 F001          	lfsr	2,1
  1803   001866  501E               	movf	fullSpeedAhead@mR^0,w,c
  1804   001868  26D9               	addwf	fsr2l,f,c
  1805   00186A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1806   00186C  22DA               	addwfc	fsr2h,f,c
  1807   00186E  0E01               	movlw	1
  1808   001870  6EDF               	movwf	indf2,c
  1809   001872                     
  1810                           ;dc_motor.c: 172:     mL->direction = 1;
  1811   001872  EE20 F001          	lfsr	2,1
  1812   001876  501C               	movf	fullSpeedAhead@mL^0,w,c
  1813   001878  26D9               	addwf	fsr2l,f,c
  1814   00187A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1815   00187C  22DA               	addwfc	fsr2h,f,c
  1816   00187E  0E01               	movlw	1
  1817   001880  6EDF               	movwf	indf2,c
  1818   001882                     
  1819                           ;dc_motor.c: 173:     mL->brakemode = 1;
  1820   001882  EE20 F002          	lfsr	2,2
  1821   001886  501C               	movf	fullSpeedAhead@mL^0,w,c
  1822   001888  26D9               	addwf	fsr2l,f,c
  1823   00188A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1824   00188C  22DA               	addwfc	fsr2h,f,c
  1825   00188E  0E01               	movlw	1
  1826   001890  6EDF               	movwf	indf2,c
  1827   001892                     
  1828                           ;dc_motor.c: 174:     mR->brakemode = 1;
  1829   001892  EE20 F002          	lfsr	2,2
  1830   001896  501E               	movf	fullSpeedAhead@mR^0,w,c
  1831   001898  26D9               	addwf	fsr2l,f,c
  1832   00189A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1833   00189C  22DA               	addwfc	fsr2h,f,c
  1834   00189E  0E01               	movlw	1
  1835   0018A0  6EDF               	movwf	indf2,c
  1836                           
  1837                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1838   0018A2  EF69  F00C         	goto	l2574
  1839   0018A6                     l2568:
  1840                           
  1841                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  1842   0018A6  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1843   0018AA  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1844   0018AE  2ADF               	incf	indf2,f,c
  1845                           
  1846                           ;dc_motor.c: 178:         mR->power++;
  1847   0018B0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1848   0018B4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1849   0018B8  2ADF               	incf	indf2,f,c
  1850   0018BA                     
  1851                           ;dc_motor.c: 180:         setMotorPWM(mL);
  1852   0018BA  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1853   0018BE  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1854   0018C2  ECB3  F009         	call	_setMotorPWM	;wreg free
  1855   0018C6                     
  1856                           ;dc_motor.c: 181:         setMotorPWM(mR);
  1857   0018C6  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1858   0018CA  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1859   0018CE  ECB3  F009         	call	_setMotorPWM	;wreg free
  1860   0018D2                     l2574:
  1861                           
  1862                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1863   0018D2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1864   0018D6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1865   0018DA  0E15               	movlw	21
  1866   0018DC  60DF               	cpfslt	indf2,c
  1867   0018DE  EF73  F00C         	goto	u1371
  1868   0018E2  EF75  F00C         	goto	u1370
  1869   0018E6                     u1371:
  1870   0018E6  EF81  F00C         	goto	l2578
  1871   0018EA                     u1370:
  1872   0018EA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1873   0018EE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1874   0018F2  0E14               	movlw	20
  1875   0018F4  64DF               	cpfsgt	indf2,c
  1876   0018F6  EF7F  F00C         	goto	u1381
  1877   0018FA  EF81  F00C         	goto	u1380
  1878   0018FE                     u1381:
  1879   0018FE  EF53  F00C         	goto	l2568
  1880   001902                     u1380:
  1881   001902                     l2578:
  1882                           
  1883                           ;dc_motor.c: 183:     mL->power = 20;
  1884   001902  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1885   001906  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1886   00190A  0E14               	movlw	20
  1887   00190C  6EDF               	movwf	indf2,c
  1888                           
  1889                           ;dc_motor.c: 184:     mR->power = 20;
  1890   00190E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1891   001912  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1892   001916  0E14               	movlw	20
  1893   001918  6EDF               	movwf	indf2,c
  1894   00191A                     
  1895                           ;dc_motor.c: 185:     setMotorPWM(mL);
  1896   00191A  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1897   00191E  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1898   001922  ECB3  F009         	call	_setMotorPWM	;wreg free
  1899   001926                     
  1900                           ;dc_motor.c: 186:     setMotorPWM(mR);
  1901   001926  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1902   00192A  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1903   00192E  ECB3  F009         	call	_setMotorPWM	;wreg free
  1904   001932  0012               	return		;funcret
  1905   001934                     __end_of_fullSpeedAhead:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _setMotorPWM *****************
  1909 ;; Defined at:
  1910 ;;		line 56 in file "dc_motor.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  m               2   21[COMRAM] PTR struct DC_motor
  1913 ;;		 -> main@mR(9), main@mL(9), 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  negDuty         1   26[COMRAM] unsigned char 
  1916 ;;  posDuty         1   25[COMRAM] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1927 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1928 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1929 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1930 ;;Total ram usage:        6 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; Hardware stack levels required when called: 7
  1933 ;; This function calls:
  1934 ;;		___lwdiv
  1935 ;;		___wmul
  1936 ;; This function is called by:
  1937 ;;		_norm_stop
  1938 ;;		_turnRight
  1939 ;;		_fullSpeedAhead
  1940 ;;		_stop
  1941 ;;		_turnLeft
  1942 ;;		_uturn
  1943 ;;		_reverse
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           
  1947                           	psect	text11
  1948   001366                     __ptext11:
  1949                           	callstack 0
  1950   001366                     _setMotorPWM:
  1951                           	callstack 22
  1952   001366                     
  1953                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  1954   001366  EE20 F002          	lfsr	2,2
  1955   00136A  5016               	movf	setMotorPWM@m^0,w,c
  1956   00136C  26D9               	addwf	fsr2l,f,c
  1957   00136E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1958   001370  22DA               	addwfc	fsr2h,f,c
  1959   001372  50DF               	movf	indf2,w,c
  1960   001374  B4D8               	btfsc	status,2,c
  1961   001376  EFBF  F009         	goto	u951
  1962   00137A  EFC1  F009         	goto	u950
  1963   00137E                     u951:
  1964   00137E  EFF5  F009         	goto	l2184
  1965   001382                     u950:
  1966   001382                     
  1967                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1968   001382  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1969   001386  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1970   00138A  50DF               	movf	indf2,w,c
  1971   00138C  6E18               	movwf	??_setMotorPWM^0,c
  1972   00138E  5018               	movf	??_setMotorPWM^0,w,c
  1973   001390  6E09               	movwf	___wmul@multiplier^0,c
  1974   001392  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1975   001394  EE20 F003          	lfsr	2,3
  1976   001398  5016               	movf	setMotorPWM@m^0,w,c
  1977   00139A  26D9               	addwf	fsr2l,f,c
  1978   00139C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1979   00139E  22DA               	addwfc	fsr2h,f,c
  1980   0013A0  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1981   0013A4  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1982   0013A8  EC04  F010         	call	___wmul	;wreg free
  1983   0013AC  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1984   0013B0  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1985   0013B4  0E00               	movlw	0
  1986   0013B6  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1987   0013B8  0E64               	movlw	100
  1988   0013BA  6E11               	movwf	___lwdiv@divisor^0,c
  1989   0013BC  EC9E  F00D         	call	___lwdiv	;wreg free
  1990   0013C0  EE20 F003          	lfsr	2,3
  1991   0013C4  5016               	movf	setMotorPWM@m^0,w,c
  1992   0013C6  26D9               	addwf	fsr2l,f,c
  1993   0013C8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1994   0013CA  22DA               	addwfc	fsr2h,f,c
  1995   0013CC  50DF               	movf	indf2,w,c
  1996   0013CE  6E19               	movwf	(??_setMotorPWM+1)^0,c
  1997   0013D0  500F               	movf	?___lwdiv^0,w,c
  1998   0013D2  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  1999   0013D4  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2000   0013D6                     
  2001                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  2002   0013D6  EE20 F003          	lfsr	2,3
  2003   0013DA  5016               	movf	setMotorPWM@m^0,w,c
  2004   0013DC  26D9               	addwf	fsr2l,f,c
  2005   0013DE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2006   0013E0  22DA               	addwfc	fsr2h,f,c
  2007   0013E2  50DF               	movf	indf2,w,c
  2008   0013E4  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2009                           
  2010                           ;dc_motor.c: 63:     }
  2011   0013E6  EF18  F00A         	goto	l2188
  2012   0013EA                     l2184:
  2013                           
  2014                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2015   0013EA  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2016   0013EE  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2017   0013F2  50DF               	movf	indf2,w,c
  2018   0013F4  6E18               	movwf	??_setMotorPWM^0,c
  2019   0013F6  5018               	movf	??_setMotorPWM^0,w,c
  2020   0013F8  6E09               	movwf	___wmul@multiplier^0,c
  2021   0013FA  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2022   0013FC  EE20 F003          	lfsr	2,3
  2023   001400  5016               	movf	setMotorPWM@m^0,w,c
  2024   001402  26D9               	addwf	fsr2l,f,c
  2025   001404  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2026   001406  22DA               	addwfc	fsr2h,f,c
  2027   001408  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2028   00140C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2029   001410  EC04  F010         	call	___wmul	;wreg free
  2030   001414  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2031   001418  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2032   00141C  0E00               	movlw	0
  2033   00141E  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2034   001420  0E64               	movlw	100
  2035   001422  6E11               	movwf	___lwdiv@divisor^0,c
  2036   001424  EC9E  F00D         	call	___lwdiv	;wreg free
  2037   001428  500F               	movf	?___lwdiv^0,w,c
  2038   00142A  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2039   00142C                     
  2040                           ;dc_motor.c: 66:         negDuty=0;
  2041   00142C  0E00               	movlw	0
  2042   00142E  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2043   001430                     l2188:
  2044                           
  2045                           ;dc_motor.c: 69:     if (m->direction) {
  2046   001430  EE20 F001          	lfsr	2,1
  2047   001434  5016               	movf	setMotorPWM@m^0,w,c
  2048   001436  26D9               	addwf	fsr2l,f,c
  2049   001438  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2050   00143A  22DA               	addwfc	fsr2h,f,c
  2051   00143C  50DF               	movf	indf2,w,c
  2052   00143E  B4D8               	btfsc	status,2,c
  2053   001440  EF24  F00A         	goto	u961
  2054   001444  EF26  F00A         	goto	u960
  2055   001448                     u961:
  2056   001448  EF48  F00A         	goto	l2192
  2057   00144C                     u960:
  2058   00144C                     
  2059                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  2060   00144C  EE20 F005          	lfsr	2,5
  2061   001450  5016               	movf	setMotorPWM@m^0,w,c
  2062   001452  26D9               	addwf	fsr2l,f,c
  2063   001454  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2064   001456  22DA               	addwfc	fsr2h,f,c
  2065   001458  CFDE F018          	movff	postinc2,??_setMotorPWM
  2066   00145C  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2067   001460  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2068   001464  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2069   001468  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2070                           
  2071                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  2072   00146C  EE20 F007          	lfsr	2,7
  2073   001470  5016               	movf	setMotorPWM@m^0,w,c
  2074   001472  26D9               	addwf	fsr2l,f,c
  2075   001474  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2076   001476  22DA               	addwfc	fsr2h,f,c
  2077   001478  CFDE F018          	movff	postinc2,??_setMotorPWM
  2078   00147C  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2079   001480  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2080   001484  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2081   001488  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2082                           
  2083                           ;dc_motor.c: 72:     } else {
  2084   00148C  EF68  F00A         	goto	l535
  2085   001490                     l2192:
  2086                           
  2087                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  2088   001490  EE20 F005          	lfsr	2,5
  2089   001494  5016               	movf	setMotorPWM@m^0,w,c
  2090   001496  26D9               	addwf	fsr2l,f,c
  2091   001498  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2092   00149A  22DA               	addwfc	fsr2h,f,c
  2093   00149C  CFDE F018          	movff	postinc2,??_setMotorPWM
  2094   0014A0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2095   0014A4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2096   0014A8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2097   0014AC  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2098                           
  2099                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  2100   0014B0  EE20 F007          	lfsr	2,7
  2101   0014B4  5016               	movf	setMotorPWM@m^0,w,c
  2102   0014B6  26D9               	addwf	fsr2l,f,c
  2103   0014B8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2104   0014BA  22DA               	addwfc	fsr2h,f,c
  2105   0014BC  CFDE F018          	movff	postinc2,??_setMotorPWM
  2106   0014C0  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2107   0014C4  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2108   0014C8  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2109   0014CC  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2110   0014D0                     l535:
  2111   0014D0  0012               	return		;funcret
  2112   0014D2                     __end_of_setMotorPWM:
  2113                           	callstack 0
  2114                           
  2115 ;; *************** function ___wmul *****************
  2116 ;; Defined at:
  2117 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;  multiplier      2    8[COMRAM] unsigned int 
  2120 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  product         2   12[COMRAM] unsigned int 
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  2    8[COMRAM] unsigned int 
  2125 ;; Registers used:
  2126 ;;		wreg, status,2, status,0, prodl, prodh
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;Total ram usage:        6 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 6
  2139 ;; This function calls:
  2140 ;;		Nothing
  2141 ;; This function is called by:
  2142 ;;		_setMotorPWM
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text12
  2147   002008                     __ptext12:
  2148                           	callstack 0
  2149   002008                     ___wmul:
  2150                           	callstack 22
  2151   002008  5009               	movf	___wmul@multiplier^0,w,c
  2152   00200A  020B               	mulwf	___wmul@multiplicand^0,c
  2153   00200C  CFF3 F00D          	movff	prodl,___wmul@product
  2154   002010  CFF4 F00E          	movff	prodh,___wmul@product+1
  2155   002014  5009               	movf	___wmul@multiplier^0,w,c
  2156   002016  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  2157   002018  50F3               	movf	243,w,c
  2158   00201A  260E               	addwf	(___wmul@product+1)^0,f,c
  2159   00201C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  2160   00201E  020B               	mulwf	___wmul@multiplicand^0,c
  2161   002020  50F3               	movf	243,w,c
  2162   002022  260E               	addwf	(___wmul@product+1)^0,f,c
  2163   002024  C00D  F009         	movff	___wmul@product,?___wmul
  2164   002028  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  2165   00202C  0012               	return		;funcret
  2166   00202E                     __end_of___wmul:
  2167                           	callstack 0
  2168                           
  2169 ;; *************** function ___lwdiv *****************
  2170 ;; Defined at:
  2171 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  dividend        2   14[COMRAM] unsigned int 
  2174 ;;  divisor         2   16[COMRAM] unsigned int 
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;  quotient        2   18[COMRAM] unsigned int 
  2177 ;;  counter         1   20[COMRAM] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  2   14[COMRAM] unsigned int 
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2187 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2190 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2191 ;;Total ram usage:        7 bytes
  2192 ;; Hardware stack levels used: 1
  2193 ;; Hardware stack levels required when called: 6
  2194 ;; This function calls:
  2195 ;;		Nothing
  2196 ;; This function is called by:
  2197 ;;		_setMotorPWM
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text13
  2202   001B3C                     __ptext13:
  2203                           	callstack 0
  2204   001B3C                     ___lwdiv:
  2205                           	callstack 22
  2206   001B3C  0E00               	movlw	0
  2207   001B3E  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  2208   001B40  0E00               	movlw	0
  2209   001B42  6E13               	movwf	___lwdiv@quotient^0,c
  2210   001B44  5011               	movf	___lwdiv@divisor^0,w,c
  2211   001B46  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2212   001B48  B4D8               	btfsc	status,2,c
  2213   001B4A  EFA9  F00D         	goto	u901
  2214   001B4E  EFAB  F00D         	goto	u900
  2215   001B52                     u901:
  2216   001B52  EFD3  F00D         	goto	l1071
  2217   001B56                     u900:
  2218   001B56  0E01               	movlw	1
  2219   001B58  6E15               	movwf	___lwdiv@counter^0,c
  2220   001B5A  EFB3  F00D         	goto	l2122
  2221   001B5E                     l2120:
  2222   001B5E  90D8               	bcf	status,0,c
  2223   001B60  3611               	rlcf	___lwdiv@divisor^0,f,c
  2224   001B62  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2225   001B64  2A15               	incf	___lwdiv@counter^0,f,c
  2226   001B66                     l2122:
  2227   001B66  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  2228   001B68  EFB8  F00D         	goto	u911
  2229   001B6C  EFBA  F00D         	goto	u910
  2230   001B70                     u911:
  2231   001B70  EFAF  F00D         	goto	l2120
  2232   001B74                     u910:
  2233   001B74                     l2124:
  2234   001B74  90D8               	bcf	status,0,c
  2235   001B76  3613               	rlcf	___lwdiv@quotient^0,f,c
  2236   001B78  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2237   001B7A  5011               	movf	___lwdiv@divisor^0,w,c
  2238   001B7C  5C0F               	subwf	___lwdiv@dividend^0,w,c
  2239   001B7E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2240   001B80  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2241   001B82  A0D8               	btfss	status,0,c
  2242   001B84  EFC6  F00D         	goto	u921
  2243   001B88  EFC8  F00D         	goto	u920
  2244   001B8C                     u921:
  2245   001B8C  EFCD  F00D         	goto	l2132
  2246   001B90                     u920:
  2247   001B90  5011               	movf	___lwdiv@divisor^0,w,c
  2248   001B92  5E0F               	subwf	___lwdiv@dividend^0,f,c
  2249   001B94  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2250   001B96  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2251   001B98  8013               	bsf	___lwdiv@quotient^0,0,c
  2252   001B9A                     l2132:
  2253   001B9A  90D8               	bcf	status,0,c
  2254   001B9C  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2255   001B9E  3211               	rrcf	___lwdiv@divisor^0,f,c
  2256   001BA0  2E15               	decfsz	___lwdiv@counter^0,f,c
  2257   001BA2  EFBA  F00D         	goto	l2124
  2258   001BA6                     l1071:
  2259   001BA6  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2260   001BAA  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2261   001BAE  0012               	return		;funcret
  2262   001BB0                     __end_of___lwdiv:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function _color_read_RGBC *****************
  2266 ;; Defined at:
  2267 ;;		line 94 in file "color.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  2270 ;;		 -> main@RGBC(36), 
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2282 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2286 ;;Total ram usage:        2 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 9
  2289 ;; This function calls:
  2290 ;;		___xxtofl
  2291 ;;		_color_read_Blue
  2292 ;;		_color_read_Clear
  2293 ;;		_color_read_Green
  2294 ;;		_color_read_Red
  2295 ;; This function is called by:
  2296 ;;		_main
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           	psect	text14
  2301   001934                     __ptext14:
  2302                           	callstack 0
  2303   001934                     _color_read_RGBC:
  2304                           	callstack 21
  2305   001934                     
  2306                           ;color.c: 95:     temp->R = color_read_Red();
  2307   001934  EC7B  F00E         	call	_color_read_Red	;wreg free
  2308   001938  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2309   00193C  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2310   001940  6A16               	clrf	(___xxtofl@val+2)^0,c
  2311   001942  6A17               	clrf	(___xxtofl@val+3)^0,c
  2312   001944  0E00               	movlw	0
  2313   001946  ECD9  F008         	call	___xxtofl
  2314   00194A  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2315   00194E  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2316   001952  C014  FFDE         	movff	?___xxtofl,postinc2
  2317   001956  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2318   00195A  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2319   00195E  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2320                           
  2321                           ;color.c: 96:     temp->B = color_read_Blue();
  2322   001962  ECF3  F00E         	call	_color_read_Blue	;wreg free
  2323   001966  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2324   00196A  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2325   00196E  6A16               	clrf	(___xxtofl@val+2)^0,c
  2326   001970  6A17               	clrf	(___xxtofl@val+3)^0,c
  2327   001972  0E00               	movlw	0
  2328   001974  ECD9  F008         	call	___xxtofl
  2329   001978  EE20 F008          	lfsr	2,8
  2330   00197C  5022               	movf	color_read_RGBC@temp^0,w,c
  2331   00197E  26D9               	addwf	fsr2l,f,c
  2332   001980  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2333   001982  22DA               	addwfc	fsr2h,f,c
  2334   001984  C014  FFDE         	movff	?___xxtofl,postinc2
  2335   001988  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2336   00198C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2337   001990  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2338                           
  2339                           ;color.c: 97:     temp->G = color_read_Green();
  2340   001994  ECA3  F00E         	call	_color_read_Green	;wreg free
  2341   001998  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2342   00199C  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2343   0019A0  6A16               	clrf	(___xxtofl@val+2)^0,c
  2344   0019A2  6A17               	clrf	(___xxtofl@val+3)^0,c
  2345   0019A4  0E00               	movlw	0
  2346   0019A6  ECD9  F008         	call	___xxtofl
  2347   0019AA  EE20 F004          	lfsr	2,4
  2348   0019AE  5022               	movf	color_read_RGBC@temp^0,w,c
  2349   0019B0  26D9               	addwf	fsr2l,f,c
  2350   0019B2  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2351   0019B4  22DA               	addwfc	fsr2h,f,c
  2352   0019B6  C014  FFDE         	movff	?___xxtofl,postinc2
  2353   0019BA  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2354   0019BE  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2355   0019C2  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2356                           
  2357                           ;color.c: 98:     temp->C = color_read_Clear();
  2358   0019C6  ECCB  F00E         	call	_color_read_Clear	;wreg free
  2359   0019CA  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2360   0019CE  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2361   0019D2  6A16               	clrf	(___xxtofl@val+2)^0,c
  2362   0019D4  6A17               	clrf	(___xxtofl@val+3)^0,c
  2363   0019D6  0E00               	movlw	0
  2364   0019D8  ECD9  F008         	call	___xxtofl
  2365   0019DC  EE20 F00C          	lfsr	2,12
  2366   0019E0  5022               	movf	color_read_RGBC@temp^0,w,c
  2367   0019E2  26D9               	addwf	fsr2l,f,c
  2368   0019E4  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2369   0019E6  22DA               	addwfc	fsr2h,f,c
  2370   0019E8  C014  FFDE         	movff	?___xxtofl,postinc2
  2371   0019EC  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2372   0019F0  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2373   0019F4  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2374   0019F8  0012               	return		;funcret
  2375   0019FA                     __end_of_color_read_RGBC:
  2376                           	callstack 0
  2377                           
  2378 ;; *************** function _color_read_Red *****************
  2379 ;; Defined at:
  2380 ;;		line 35 in file "color.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;		None
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  tmp             2   17[COMRAM] unsigned int 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  2   12[COMRAM] unsigned int 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2398 ;;Total ram usage:        7 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 8
  2401 ;; This function calls:
  2402 ;;		_I2C_2_Master_Read
  2403 ;;		_I2C_2_Master_RepStart
  2404 ;;		_I2C_2_Master_Start
  2405 ;;		_I2C_2_Master_Stop
  2406 ;;		_I2C_2_Master_Write
  2407 ;; This function is called by:
  2408 ;;		_color_read_RGBC
  2409 ;;		_main
  2410 ;; This function uses a non-reentrant model
  2411 ;;
  2412                           
  2413                           	psect	text15
  2414   001CF6                     __ptext15:
  2415                           	callstack 0
  2416   001CF6                     _color_read_Red:
  2417                           	callstack 22
  2418   001CF6                     
  2419                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  2420   001CF6  EC89  F010         	call	_I2C_2_Master_Start	;wreg free
  2421                           
  2422                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  2423   001CFA  0E52               	movlw	82
  2424   001CFC  EC6D  F010         	call	_I2C_2_Master_Write
  2425                           
  2426                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  2427   001D00  0EB6               	movlw	182
  2428   001D02  EC6D  F010         	call	_I2C_2_Master_Write
  2429                           
  2430                           ;color.c: 41:  I2C_2_Master_RepStart();
  2431   001D06  EC7F  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2432                           
  2433                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  2434   001D0A  0E53               	movlw	83
  2435   001D0C  EC6D  F010         	call	_I2C_2_Master_Write
  2436                           
  2437                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  2438   001D10  0E01               	movlw	1
  2439   001D12  EC1B  F00F         	call	_I2C_2_Master_Read
  2440   001D16  6E0F               	movwf	??_color_read_Red^0,c
  2441   001D18  500F               	movf	??_color_read_Red^0,w,c
  2442   001D1A  6E12               	movwf	color_read_Red@tmp^0,c
  2443   001D1C  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2444                           
  2445                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2446   001D1E  0E00               	movlw	0
  2447   001D20  EC1B  F00F         	call	_I2C_2_Master_Read
  2448   001D24  6E0F               	movwf	??_color_read_Red^0,c
  2449   001D26  500F               	movf	??_color_read_Red^0,w,c
  2450   001D28  6E11               	movwf	(??_color_read_Red+2)^0,c
  2451   001D2A  6A10               	clrf	(??_color_read_Red+1)^0,c
  2452   001D2C  5012               	movf	color_read_Red@tmp^0,w,c
  2453   001D2E  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2454   001D30  6E12               	movwf	color_read_Red@tmp^0,c
  2455   001D32  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2456   001D34  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2457   001D36  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2458                           
  2459                           ;color.c: 45:  I2C_2_Master_Stop();
  2460   001D38  EC84  F010         	call	_I2C_2_Master_Stop	;wreg free
  2461   001D3C                     
  2462                           ;color.c: 46:  return tmp;
  2463   001D3C  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2464   001D40  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2465   001D44  0012               	return		;funcret
  2466   001D46                     __end_of_color_read_Red:
  2467                           	callstack 0
  2468                           
  2469 ;; *************** function _color_read_Green *****************
  2470 ;; Defined at:
  2471 ;;		line 49 in file "color.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;		None
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  tmp             2   17[COMRAM] unsigned int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2   12[COMRAM] unsigned int 
  2478 ;; Registers used:
  2479 ;;		wreg, status,2, status,0, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2486 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2487 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;Total ram usage:        7 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 8
  2492 ;; This function calls:
  2493 ;;		_I2C_2_Master_Read
  2494 ;;		_I2C_2_Master_RepStart
  2495 ;;		_I2C_2_Master_Start
  2496 ;;		_I2C_2_Master_Stop
  2497 ;;		_I2C_2_Master_Write
  2498 ;; This function is called by:
  2499 ;;		_color_read_RGBC
  2500 ;;		_main
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text16
  2505   001D46                     __ptext16:
  2506                           	callstack 0
  2507   001D46                     _color_read_Green:
  2508                           	callstack 21
  2509   001D46                     
  2510                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  2511   001D46  EC89  F010         	call	_I2C_2_Master_Start	;wreg free
  2512                           
  2513                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  2514   001D4A  0E52               	movlw	82
  2515   001D4C  EC6D  F010         	call	_I2C_2_Master_Write
  2516                           
  2517                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  2518   001D50  0EB8               	movlw	184
  2519   001D52  EC6D  F010         	call	_I2C_2_Master_Write
  2520                           
  2521                           ;color.c: 55:  I2C_2_Master_RepStart();
  2522   001D56  EC7F  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2523                           
  2524                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  2525   001D5A  0E53               	movlw	83
  2526   001D5C  EC6D  F010         	call	_I2C_2_Master_Write
  2527                           
  2528                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  2529   001D60  0E01               	movlw	1
  2530   001D62  EC1B  F00F         	call	_I2C_2_Master_Read
  2531   001D66  6E0F               	movwf	??_color_read_Green^0,c
  2532   001D68  500F               	movf	??_color_read_Green^0,w,c
  2533   001D6A  6E12               	movwf	color_read_Green@tmp^0,c
  2534   001D6C  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2535                           
  2536                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2537   001D6E  0E00               	movlw	0
  2538   001D70  EC1B  F00F         	call	_I2C_2_Master_Read
  2539   001D74  6E0F               	movwf	??_color_read_Green^0,c
  2540   001D76  500F               	movf	??_color_read_Green^0,w,c
  2541   001D78  6E11               	movwf	(??_color_read_Green+2)^0,c
  2542   001D7A  6A10               	clrf	(??_color_read_Green+1)^0,c
  2543   001D7C  5012               	movf	color_read_Green@tmp^0,w,c
  2544   001D7E  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2545   001D80  6E12               	movwf	color_read_Green@tmp^0,c
  2546   001D82  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2547   001D84  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2548   001D86  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2549                           
  2550                           ;color.c: 59:  I2C_2_Master_Stop();
  2551   001D88  EC84  F010         	call	_I2C_2_Master_Stop	;wreg free
  2552   001D8C                     
  2553                           ;color.c: 60:  return tmp;
  2554   001D8C  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2555   001D90  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2556   001D94  0012               	return		;funcret
  2557   001D96                     __end_of_color_read_Green:
  2558                           	callstack 0
  2559                           
  2560 ;; *************** function _color_read_Clear *****************
  2561 ;; Defined at:
  2562 ;;		line 77 in file "color.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;		None
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  tmp             2   17[COMRAM] unsigned int 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2   12[COMRAM] unsigned int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2578 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2579 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2580 ;;Total ram usage:        7 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 8
  2583 ;; This function calls:
  2584 ;;		_I2C_2_Master_Read
  2585 ;;		_I2C_2_Master_RepStart
  2586 ;;		_I2C_2_Master_Start
  2587 ;;		_I2C_2_Master_Stop
  2588 ;;		_I2C_2_Master_Write
  2589 ;; This function is called by:
  2590 ;;		_color_read_RGBC
  2591 ;;		_main
  2592 ;; This function uses a non-reentrant model
  2593 ;;
  2594                           
  2595                           	psect	text17
  2596   001D96                     __ptext17:
  2597                           	callstack 0
  2598   001D96                     _color_read_Clear:
  2599                           	callstack 21
  2600   001D96                     
  2601                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  2602   001D96  EC89  F010         	call	_I2C_2_Master_Start	;wreg free
  2603                           
  2604                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  2605   001D9A  0E52               	movlw	82
  2606   001D9C  EC6D  F010         	call	_I2C_2_Master_Write
  2607                           
  2608                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  2609   001DA0  0EB4               	movlw	180
  2610   001DA2  EC6D  F010         	call	_I2C_2_Master_Write
  2611                           
  2612                           ;color.c: 83:  I2C_2_Master_RepStart();
  2613   001DA6  EC7F  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2614                           
  2615                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  2616   001DAA  0E53               	movlw	83
  2617   001DAC  EC6D  F010         	call	_I2C_2_Master_Write
  2618                           
  2619                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  2620   001DB0  0E01               	movlw	1
  2621   001DB2  EC1B  F00F         	call	_I2C_2_Master_Read
  2622   001DB6  6E0F               	movwf	??_color_read_Clear^0,c
  2623   001DB8  500F               	movf	??_color_read_Clear^0,w,c
  2624   001DBA  6E12               	movwf	color_read_Clear@tmp^0,c
  2625   001DBC  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2626                           
  2627                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2628   001DBE  0E00               	movlw	0
  2629   001DC0  EC1B  F00F         	call	_I2C_2_Master_Read
  2630   001DC4  6E0F               	movwf	??_color_read_Clear^0,c
  2631   001DC6  500F               	movf	??_color_read_Clear^0,w,c
  2632   001DC8  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2633   001DCA  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2634   001DCC  5012               	movf	color_read_Clear@tmp^0,w,c
  2635   001DCE  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2636   001DD0  6E12               	movwf	color_read_Clear@tmp^0,c
  2637   001DD2  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2638   001DD4  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2639   001DD6  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2640                           
  2641                           ;color.c: 87:  I2C_2_Master_Stop();
  2642   001DD8  EC84  F010         	call	_I2C_2_Master_Stop	;wreg free
  2643   001DDC                     
  2644                           ;color.c: 88:  return tmp;
  2645   001DDC  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2646   001DE0  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2647   001DE4  0012               	return		;funcret
  2648   001DE6                     __end_of_color_read_Clear:
  2649                           	callstack 0
  2650                           
  2651 ;; *************** function _color_read_Blue *****************
  2652 ;; Defined at:
  2653 ;;		line 63 in file "color.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;		None
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  tmp             2   17[COMRAM] unsigned int 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  2   12[COMRAM] unsigned int 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2668 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;Total ram usage:        7 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; Hardware stack levels required when called: 8
  2674 ;; This function calls:
  2675 ;;		_I2C_2_Master_Read
  2676 ;;		_I2C_2_Master_RepStart
  2677 ;;		_I2C_2_Master_Start
  2678 ;;		_I2C_2_Master_Stop
  2679 ;;		_I2C_2_Master_Write
  2680 ;; This function is called by:
  2681 ;;		_color_read_RGBC
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           	psect	text18
  2687   001DE6                     __ptext18:
  2688                           	callstack 0
  2689   001DE6                     _color_read_Blue:
  2690                           	callstack 21
  2691   001DE6                     
  2692                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  2693   001DE6  EC89  F010         	call	_I2C_2_Master_Start	;wreg free
  2694                           
  2695                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  2696   001DEA  0E52               	movlw	82
  2697   001DEC  EC6D  F010         	call	_I2C_2_Master_Write
  2698                           
  2699                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  2700   001DF0  0EBA               	movlw	186
  2701   001DF2  EC6D  F010         	call	_I2C_2_Master_Write
  2702                           
  2703                           ;color.c: 69:  I2C_2_Master_RepStart();
  2704   001DF6  EC7F  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2705                           
  2706                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  2707   001DFA  0E53               	movlw	83
  2708   001DFC  EC6D  F010         	call	_I2C_2_Master_Write
  2709                           
  2710                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  2711   001E00  0E01               	movlw	1
  2712   001E02  EC1B  F00F         	call	_I2C_2_Master_Read
  2713   001E06  6E0F               	movwf	??_color_read_Blue^0,c
  2714   001E08  500F               	movf	??_color_read_Blue^0,w,c
  2715   001E0A  6E12               	movwf	color_read_Blue@tmp^0,c
  2716   001E0C  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2717                           
  2718                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2719   001E0E  0E00               	movlw	0
  2720   001E10  EC1B  F00F         	call	_I2C_2_Master_Read
  2721   001E14  6E0F               	movwf	??_color_read_Blue^0,c
  2722   001E16  500F               	movf	??_color_read_Blue^0,w,c
  2723   001E18  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2724   001E1A  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2725   001E1C  5012               	movf	color_read_Blue@tmp^0,w,c
  2726   001E1E  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2727   001E20  6E12               	movwf	color_read_Blue@tmp^0,c
  2728   001E22  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2729   001E24  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2730   001E26  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2731                           
  2732                           ;color.c: 73:  I2C_2_Master_Stop();
  2733   001E28  EC84  F010         	call	_I2C_2_Master_Stop	;wreg free
  2734   001E2C                     
  2735                           ;color.c: 74:  return tmp;
  2736   001E2C  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2737   001E30  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2738   001E34  0012               	return		;funcret
  2739   001E36                     __end_of_color_read_Blue:
  2740                           	callstack 0
  2741                           
  2742 ;; *************** function _I2C_2_Master_RepStart *****************
  2743 ;; Defined at:
  2744 ;;		line 33 in file "i2c.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2762 ;;Total ram usage:        0 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 7
  2765 ;; This function calls:
  2766 ;;		_I2C_2_Master_Idle
  2767 ;; This function is called by:
  2768 ;;		_color_read_Red
  2769 ;;		_color_read_Green
  2770 ;;		_color_read_Blue
  2771 ;;		_color_read_Clear
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           	psect	text19
  2776   0020FE                     __ptext19:
  2777                           	callstack 0
  2778   0020FE                     _I2C_2_Master_RepStart:
  2779                           	callstack 22
  2780   0020FE                     
  2781                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2782   0020FE  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2783   002102                     
  2784                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2785   002102  010E               	movlb	14	; () banked
  2786   002104  83DA               	bsf	218,1,b	;volatile
  2787   002106                     
  2788                           ; BSR set to: 14
  2789   002106  0012               	return		;funcret
  2790   002108                     __end_of_I2C_2_Master_RepStart:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _I2C_2_Master_Read *****************
  2794 ;; Defined at:
  2795 ;;		line 51 in file "i2c.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  ack             1    wreg     unsigned char 
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;  ack             1   10[COMRAM] unsigned char 
  2800 ;;  tmp             1   11[COMRAM] unsigned char 
  2801 ;; Return value:  Size  Location     Type
  2802 ;;                  1    wreg      unsigned char 
  2803 ;; Registers used:
  2804 ;;		wreg, status,2, status,0, cstack
  2805 ;; Tracked objects:
  2806 ;;		On entry : 0/0
  2807 ;;		On exit  : 0/0
  2808 ;;		Unchanged: 0/0
  2809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2813 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2814 ;;Total ram usage:        3 bytes
  2815 ;; Hardware stack levels used: 1
  2816 ;; Hardware stack levels required when called: 7
  2817 ;; This function calls:
  2818 ;;		_I2C_2_Master_Idle
  2819 ;; This function is called by:
  2820 ;;		_color_read_Red
  2821 ;;		_color_read_Green
  2822 ;;		_color_read_Blue
  2823 ;;		_color_read_Clear
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text20
  2828   001E36                     __ptext20:
  2829                           	callstack 0
  2830   001E36                     _I2C_2_Master_Read:
  2831                           	callstack 22
  2832                           
  2833                           ; BSR set to: 14
  2834                           ;incstack = 0
  2835                           ;I2C_2_Master_Read@ack stored from wreg
  2836   001E36  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2837   001E38                     
  2838                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2839   001E38  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2840   001E3C                     
  2841                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2842   001E3C  010E               	movlb	14	; () banked
  2843   001E3E  87DA               	bsf	218,3,b	;volatile
  2844                           
  2845                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2846   001E40  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2847   001E44                     
  2848                           ;i2c.c: 57:   tmp = SSP2BUF;
  2849   001E44  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2850                           
  2851                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2852   001E48  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2853   001E4C                     
  2854                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2855   001E4C  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2856   001E4E  B4D8               	btfsc	status,2,c
  2857   001E50  EF2C  F00F         	goto	u931
  2858   001E54  EF30  F00F         	goto	u930
  2859   001E58                     u931:
  2860   001E58  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2861   001E5A  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2862   001E5C  EF31  F00F         	goto	u948
  2863   001E60                     u930:
  2864   001E60  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2865   001E62                     u948:
  2866   001E62  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2867   001E64  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2868   001E66  010E               	movlb	14	; () banked
  2869   001E68  51DA               	movf	218,w,b	;volatile
  2870   001E6A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2871   001E6C  0BDF               	andlw	-33
  2872   001E6E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2873   001E70  6FDA               	movwf	218,b	;volatile
  2874   001E72                     
  2875                           ; BSR set to: 14
  2876                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2877   001E72  89DA               	bsf	218,4,b	;volatile
  2878   001E74                     
  2879                           ; BSR set to: 14
  2880                           ;i2c.c: 61:   return tmp;
  2881   001E74  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2882   001E76                     
  2883                           ; BSR set to: 14
  2884   001E76  0012               	return		;funcret
  2885   001E78                     __end_of_I2C_2_Master_Read:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function ___xxtofl *****************
  2889 ;; Defined at:
  2890 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  sign            1    wreg     unsigned char 
  2893 ;;  val             4   19[COMRAM] long 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  sign            1   27[COMRAM] unsigned char 
  2896 ;;  arg             4   29[COMRAM] unsigned long 
  2897 ;;  exp             1   28[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  4   19[COMRAM] unsigned char 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:       14 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 6
  2914 ;; This function calls:
  2915 ;;		Nothing
  2916 ;; This function is called by:
  2917 ;;		_color_read_RGBC
  2918 ;;		_color_normalise
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text21
  2923   0011B2                     __ptext21:
  2924                           	callstack 0
  2925   0011B2                     ___xxtofl:
  2926                           	callstack 23
  2927                           
  2928                           ; BSR set to: 14
  2929                           ;incstack = 0
  2930                           ;___xxtofl@sign stored from wreg
  2931   0011B2  6E1C               	movwf	___xxtofl@sign^0,c
  2932   0011B4  501C               	movf	___xxtofl@sign^0,w,c
  2933   0011B6  B4D8               	btfsc	status,2,c
  2934   0011B8  EFE0  F008         	goto	u1251
  2935   0011BC  EFE2  F008         	goto	u1250
  2936   0011C0                     u1251:
  2937   0011C0  EF04  F009         	goto	l1235
  2938   0011C4                     u1250:
  2939   0011C4  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2940   0011C6  EFE9  F008         	goto	u1260
  2941   0011CA  EFE7  F008         	goto	u1261
  2942   0011CE                     u1261:
  2943   0011CE  EF04  F009         	goto	l1235
  2944   0011D2                     u1260:
  2945   0011D2  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2946   0011D6  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2947   0011DA  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2948   0011DE  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2949   0011E2  1E18               	comf	??___xxtofl^0,f,c
  2950   0011E4  1E19               	comf	(??___xxtofl+1)^0,f,c
  2951   0011E6  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2952   0011E8  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2953   0011EA  2A18               	incf	??___xxtofl^0,f,c
  2954   0011EC  0E00               	movlw	0
  2955   0011EE  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2956   0011F0  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2957   0011F2  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2958   0011F4  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2959   0011F8  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2960   0011FC  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2961   001200  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2962   001204  EF0C  F009         	goto	l2420
  2963   001208                     l1235:
  2964   001208  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2965   00120C  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2966   001210  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2967   001214  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2968   001218                     l2420:
  2969   001218  5014               	movf	___xxtofl@val^0,w,c
  2970   00121A  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2971   00121C  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2972   00121E  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2973   001220  A4D8               	btfss	status,2,c
  2974   001222  EF15  F009         	goto	u1271
  2975   001226  EF17  F009         	goto	u1270
  2976   00122A                     u1271:
  2977   00122A  EF21  F009         	goto	l2426
  2978   00122E                     u1270:
  2979   00122E  0E00               	movlw	0
  2980   001230  6E14               	movwf	?___xxtofl^0,c
  2981   001232  0E00               	movlw	0
  2982   001234  6E15               	movwf	(?___xxtofl+1)^0,c
  2983   001236  0E00               	movlw	0
  2984   001238  6E16               	movwf	(?___xxtofl+2)^0,c
  2985   00123A  0E00               	movlw	0
  2986   00123C  6E17               	movwf	(?___xxtofl+3)^0,c
  2987   00123E  EFB2  F009         	goto	l1238
  2988   001242                     l2426:
  2989   001242  0E96               	movlw	150
  2990   001244  6E1D               	movwf	___xxtofl@exp^0,c
  2991   001246  EF2B  F009         	goto	l2430
  2992   00124A                     l2428:
  2993   00124A  2A1D               	incf	___xxtofl@exp^0,f,c
  2994   00124C  90D8               	bcf	status,0,c
  2995   00124E  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2996   001250  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2997   001252  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2998   001254  321E               	rrcf	___xxtofl@arg^0,f,c
  2999   001256                     l2430:
  3000   001256  0E00               	movlw	0
  3001   001258  141E               	andwf	___xxtofl@arg^0,w,c
  3002   00125A  6E18               	movwf	??___xxtofl^0,c
  3003   00125C  0E00               	movlw	0
  3004   00125E  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  3005   001260  6E19               	movwf	(??___xxtofl+1)^0,c
  3006   001262  0E00               	movlw	0
  3007   001264  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  3008   001266  6E1A               	movwf	(??___xxtofl+2)^0,c
  3009   001268  0EFE               	movlw	254
  3010   00126A  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  3011   00126C  6E1B               	movwf	(??___xxtofl+3)^0,c
  3012   00126E  5018               	movf	??___xxtofl^0,w,c
  3013   001270  1019               	iorwf	(??___xxtofl+1)^0,w,c
  3014   001272  101A               	iorwf	(??___xxtofl+2)^0,w,c
  3015   001274  101B               	iorwf	(??___xxtofl+3)^0,w,c
  3016   001276  A4D8               	btfss	status,2,c
  3017   001278  EF40  F009         	goto	u1281
  3018   00127C  EF42  F009         	goto	u1280
  3019   001280                     u1281:
  3020   001280  EF25  F009         	goto	l2428
  3021   001284                     u1280:
  3022   001284  EF50  F009         	goto	l1242
  3023   001288                     l2432:
  3024   001288  2A1D               	incf	___xxtofl@exp^0,f,c
  3025   00128A  0E01               	movlw	1
  3026   00128C  261E               	addwf	___xxtofl@arg^0,f,c
  3027   00128E  0E00               	movlw	0
  3028   001290  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  3029   001292  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  3030   001294  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  3031   001296  90D8               	bcf	status,0,c
  3032   001298  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  3033   00129A  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  3034   00129C  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  3035   00129E  321E               	rrcf	___xxtofl@arg^0,f,c
  3036   0012A0                     l1242:
  3037   0012A0  0E00               	movlw	0
  3038   0012A2  141E               	andwf	___xxtofl@arg^0,w,c
  3039   0012A4  6E18               	movwf	??___xxtofl^0,c
  3040   0012A6  0E00               	movlw	0
  3041   0012A8  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  3042   0012AA  6E19               	movwf	(??___xxtofl+1)^0,c
  3043   0012AC  0E00               	movlw	0
  3044   0012AE  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  3045   0012B0  6E1A               	movwf	(??___xxtofl+2)^0,c
  3046   0012B2  0EFF               	movlw	255
  3047   0012B4  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  3048   0012B6  6E1B               	movwf	(??___xxtofl+3)^0,c
  3049   0012B8  5018               	movf	??___xxtofl^0,w,c
  3050   0012BA  1019               	iorwf	(??___xxtofl+1)^0,w,c
  3051   0012BC  101A               	iorwf	(??___xxtofl+2)^0,w,c
  3052   0012BE  101B               	iorwf	(??___xxtofl+3)^0,w,c
  3053   0012C0  A4D8               	btfss	status,2,c
  3054   0012C2  EF65  F009         	goto	u1291
  3055   0012C6  EF67  F009         	goto	u1290
  3056   0012CA                     u1291:
  3057   0012CA  EF44  F009         	goto	l2432
  3058   0012CE                     u1290:
  3059   0012CE  EF6F  F009         	goto	l2440
  3060   0012D2                     l2438:
  3061   0012D2  061D               	decf	___xxtofl@exp^0,f,c
  3062   0012D4  90D8               	bcf	status,0,c
  3063   0012D6  361E               	rlcf	___xxtofl@arg^0,f,c
  3064   0012D8  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  3065   0012DA  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  3066   0012DC  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  3067   0012DE                     l2440:
  3068   0012DE  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  3069   0012E0  EF74  F009         	goto	u1301
  3070   0012E4  EF76  F009         	goto	u1300
  3071   0012E8                     u1301:
  3072   0012E8  EF7E  F009         	goto	l1249
  3073   0012EC                     u1300:
  3074   0012EC  0E02               	movlw	2
  3075   0012EE  601D               	cpfslt	___xxtofl@exp^0,c
  3076   0012F0  EF7C  F009         	goto	u1311
  3077   0012F4  EF7E  F009         	goto	u1310
  3078   0012F8                     u1311:
  3079   0012F8  EF69  F009         	goto	l2438
  3080   0012FC                     u1310:
  3081   0012FC                     l1249:
  3082   0012FC  B01D               	btfsc	___xxtofl@exp^0,0,c
  3083   0012FE  EF83  F009         	goto	u1321
  3084   001302  EF85  F009         	goto	u1320
  3085   001306                     u1321:
  3086   001306  EF86  F009         	goto	l2446
  3087   00130A                     u1320:
  3088   00130A  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  3089   00130C                     l2446:
  3090   00130C  90D8               	bcf	status,0,c
  3091   00130E  321D               	rrcf	___xxtofl@exp^0,f,c
  3092   001310  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  3093   001314  6A19               	clrf	(??___xxtofl+1)^0,c
  3094   001316  6A1A               	clrf	(??___xxtofl+2)^0,c
  3095   001318  6A1B               	clrf	(??___xxtofl+3)^0,c
  3096   00131A  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  3097   00131E  6A1A               	clrf	(??___xxtofl+2)^0,c
  3098   001320  6A19               	clrf	(??___xxtofl+1)^0,c
  3099   001322  6A18               	clrf	??___xxtofl^0,c
  3100   001324  5018               	movf	??___xxtofl^0,w,c
  3101   001326  121E               	iorwf	___xxtofl@arg^0,f,c
  3102   001328  5019               	movf	(??___xxtofl+1)^0,w,c
  3103   00132A  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  3104   00132C  501A               	movf	(??___xxtofl+2)^0,w,c
  3105   00132E  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  3106   001330  501B               	movf	(??___xxtofl+3)^0,w,c
  3107   001332  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  3108   001334  501C               	movf	___xxtofl@sign^0,w,c
  3109   001336  B4D8               	btfsc	status,2,c
  3110   001338  EFA0  F009         	goto	u1331
  3111   00133C  EFA2  F009         	goto	u1330
  3112   001340                     u1331:
  3113   001340  EFAA  F009         	goto	l2456
  3114   001344                     u1330:
  3115   001344  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  3116   001346  EFA9  F009         	goto	u1340
  3117   00134A  EFA7  F009         	goto	u1341
  3118   00134E                     u1341:
  3119   00134E  EFAA  F009         	goto	l2456
  3120   001352                     u1340:
  3121   001352  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3122   001354                     l2456:
  3123   001354  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3124   001358  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3125   00135C  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3126   001360  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3127   001364                     l1238:
  3128   001364  0012               	return		;funcret
  3129   001366                     __end_of___xxtofl:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _color_normalise *****************
  3133 ;; Defined at:
  3134 ;;		line 100 in file "color.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  3137 ;;		 -> main@RGBC(36), 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:        2 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 7
  3156 ;; This function calls:
  3157 ;;		___fldiv
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text22
  3164   0014D2                     __ptext22:
  3165                           	callstack 0
  3166   0014D2                     _color_normalise:
  3167                           	callstack 23
  3168   0014D2                     
  3169                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  3170   0014D2  EE20 F00C          	lfsr	2,12
  3171   0014D6  5022               	movf	color_normalise@RGBC^0,w,c
  3172   0014D8  26D9               	addwf	fsr2l,f,c
  3173   0014DA  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3174   0014DC  22DA               	addwfc	fsr2h,f,c
  3175   0014DE  CFDE F009          	movff	postinc2,___fldiv@b
  3176   0014E2  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3177   0014E6  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3178   0014EA  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3179   0014EE  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  3180   0014F2  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  3181   0014F6  CFDE F00D          	movff	postinc2,___fldiv@a
  3182   0014FA  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3183   0014FE  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3184   001502  CFDE F010          	movff	postinc2,___fldiv@a+3
  3185   001506  EC0C  F007         	call	___fldiv	;wreg free
  3186   00150A  EE20 F010          	lfsr	2,16
  3187   00150E  5022               	movf	color_normalise@RGBC^0,w,c
  3188   001510  26D9               	addwf	fsr2l,f,c
  3189   001512  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3190   001514  22DA               	addwfc	fsr2h,f,c
  3191   001516  C009  FFDE         	movff	?___fldiv,postinc2
  3192   00151A  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3193   00151E  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3194   001522  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3195                           
  3196                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  3197   001526  EE20 F00C          	lfsr	2,12
  3198   00152A  5022               	movf	color_normalise@RGBC^0,w,c
  3199   00152C  26D9               	addwf	fsr2l,f,c
  3200   00152E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3201   001530  22DA               	addwfc	fsr2h,f,c
  3202   001532  CFDE F009          	movff	postinc2,___fldiv@b
  3203   001536  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3204   00153A  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3205   00153E  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3206   001542  EE20 F004          	lfsr	2,4
  3207   001546  5022               	movf	color_normalise@RGBC^0,w,c
  3208   001548  26D9               	addwf	fsr2l,f,c
  3209   00154A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3210   00154C  22DA               	addwfc	fsr2h,f,c
  3211   00154E  CFDE F00D          	movff	postinc2,___fldiv@a
  3212   001552  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3213   001556  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3214   00155A  CFDE F010          	movff	postinc2,___fldiv@a+3
  3215   00155E  EC0C  F007         	call	___fldiv	;wreg free
  3216   001562  EE20 F018          	lfsr	2,24
  3217   001566  5022               	movf	color_normalise@RGBC^0,w,c
  3218   001568  26D9               	addwf	fsr2l,f,c
  3219   00156A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3220   00156C  22DA               	addwfc	fsr2h,f,c
  3221   00156E  C009  FFDE         	movff	?___fldiv,postinc2
  3222   001572  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3223   001576  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3224   00157A  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3225                           
  3226                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  3227   00157E  EE20 F00C          	lfsr	2,12
  3228   001582  5022               	movf	color_normalise@RGBC^0,w,c
  3229   001584  26D9               	addwf	fsr2l,f,c
  3230   001586  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3231   001588  22DA               	addwfc	fsr2h,f,c
  3232   00158A  CFDE F009          	movff	postinc2,___fldiv@b
  3233   00158E  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3234   001592  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3235   001596  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3236   00159A  EE20 F008          	lfsr	2,8
  3237   00159E  5022               	movf	color_normalise@RGBC^0,w,c
  3238   0015A0  26D9               	addwf	fsr2l,f,c
  3239   0015A2  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3240   0015A4  22DA               	addwfc	fsr2h,f,c
  3241   0015A6  CFDE F00D          	movff	postinc2,___fldiv@a
  3242   0015AA  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3243   0015AE  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3244   0015B2  CFDE F010          	movff	postinc2,___fldiv@a+3
  3245   0015B6  EC0C  F007         	call	___fldiv	;wreg free
  3246   0015BA  EE20 F01C          	lfsr	2,28
  3247   0015BE  5022               	movf	color_normalise@RGBC^0,w,c
  3248   0015C0  26D9               	addwf	fsr2l,f,c
  3249   0015C2  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3250   0015C4  22DA               	addwfc	fsr2h,f,c
  3251   0015C6  C009  FFDE         	movff	?___fldiv,postinc2
  3252   0015CA  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3253   0015CE  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3254   0015D2  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3255                           
  3256                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  3257   0015D6  EE20 F00C          	lfsr	2,12
  3258   0015DA  5022               	movf	color_normalise@RGBC^0,w,c
  3259   0015DC  26D9               	addwf	fsr2l,f,c
  3260   0015DE  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3261   0015E0  22DA               	addwfc	fsr2h,f,c
  3262   0015E2  CFDE F009          	movff	postinc2,___fldiv@b
  3263   0015E6  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3264   0015EA  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3265   0015EE  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3266   0015F2  0E00               	movlw	0
  3267   0015F4  6E0D               	movwf	___fldiv@a^0,c
  3268   0015F6  0E00               	movlw	0
  3269   0015F8  6E0E               	movwf	(___fldiv@a+1)^0,c
  3270   0015FA  0E00               	movlw	0
  3271   0015FC  6E0F               	movwf	(___fldiv@a+2)^0,c
  3272   0015FE  0E00               	movlw	0
  3273   001600  6E10               	movwf	(___fldiv@a+3)^0,c
  3274   001602  EC0C  F007         	call	___fldiv	;wreg free
  3275   001606  EE20 F020          	lfsr	2,32
  3276   00160A  5022               	movf	color_normalise@RGBC^0,w,c
  3277   00160C  26D9               	addwf	fsr2l,f,c
  3278   00160E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3279   001610  22DA               	addwfc	fsr2h,f,c
  3280   001612  C009  FFDE         	movff	?___fldiv,postinc2
  3281   001616  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3282   00161A  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3283   00161E  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3284   001622  0012               	return		;funcret
  3285   001624                     __end_of_color_normalise:
  3286                           	callstack 0
  3287                           
  3288 ;; *************** function ___fldiv *****************
  3289 ;; Defined at:
  3290 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3291 ;; Parameters:    Size  Location     Type
  3292 ;;  b               4    8[COMRAM] void 
  3293 ;;  a               4   12[COMRAM] void 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;  grs             4   27[COMRAM] unsigned long 
  3296 ;;  rem             4   20[COMRAM] unsigned long 
  3297 ;;  new_exp         2   25[COMRAM] short 
  3298 ;;  aexp            1   32[COMRAM] unsigned char 
  3299 ;;  bexp            1   31[COMRAM] unsigned char 
  3300 ;;  sign            1   24[COMRAM] unsigned char 
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  4    8[COMRAM] unsigned char 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3311 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3313 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3314 ;;Total ram usage:       25 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 6
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_color_normalise
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text23
  3325   000E18                     __ptext23:
  3326                           	callstack 0
  3327   000E18                     ___fldiv:
  3328                           	callstack 23
  3329   000E18  500C               	movf	(___fldiv@b+3)^0,w,c
  3330   000E1A  0B80               	andlw	128
  3331   000E1C  6E19               	movwf	___fldiv@sign^0,c
  3332   000E1E  500C               	movf	(___fldiv@b+3)^0,w,c
  3333   000E20  240C               	addwf	(___fldiv@b+3)^0,w,c
  3334   000E22  6E20               	movwf	___fldiv@bexp^0,c
  3335   000E24  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  3336   000E26  EF17  F007         	goto	u971
  3337   000E2A  EF19  F007         	goto	u970
  3338   000E2E                     u971:
  3339   000E2E  EF1A  F007         	goto	l2260
  3340   000E32                     u970:
  3341   000E32  8020               	bsf	___fldiv@bexp^0,0,c
  3342   000E34                     l2260:
  3343   000E34  5020               	movf	___fldiv@bexp^0,w,c
  3344   000E36  B4D8               	btfsc	status,2,c
  3345   000E38  EF20  F007         	goto	u981
  3346   000E3C  EF22  F007         	goto	u980
  3347   000E40                     u981:
  3348   000E40  EF37  F007         	goto	l2270
  3349   000E44                     u980:
  3350   000E44  2820               	incf	___fldiv@bexp^0,w,c
  3351   000E46  A4D8               	btfss	status,2,c
  3352   000E48  EF28  F007         	goto	u991
  3353   000E4C  EF2A  F007         	goto	u990
  3354   000E50                     u991:
  3355   000E50  EF32  F007         	goto	l2266
  3356   000E54                     u990:
  3357   000E54  0E00               	movlw	0
  3358   000E56  6E09               	movwf	___fldiv@b^0,c
  3359   000E58  0E00               	movlw	0
  3360   000E5A  6E0A               	movwf	(___fldiv@b+1)^0,c
  3361   000E5C  0E00               	movlw	0
  3362   000E5E  6E0B               	movwf	(___fldiv@b+2)^0,c
  3363   000E60  0E00               	movlw	0
  3364   000E62  6E0C               	movwf	(___fldiv@b+3)^0,c
  3365   000E64                     l2266:
  3366   000E64  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  3367   000E66  0E00               	movlw	0
  3368   000E68  6E0C               	movwf	(___fldiv@b+3)^0,c
  3369   000E6A  EF3F  F007         	goto	l2272
  3370   000E6E                     l2270:
  3371   000E6E  0E00               	movlw	0
  3372   000E70  6E09               	movwf	___fldiv@b^0,c
  3373   000E72  0E00               	movlw	0
  3374   000E74  6E0A               	movwf	(___fldiv@b+1)^0,c
  3375   000E76  0E00               	movlw	0
  3376   000E78  6E0B               	movwf	(___fldiv@b+2)^0,c
  3377   000E7A  0E00               	movlw	0
  3378   000E7C  6E0C               	movwf	(___fldiv@b+3)^0,c
  3379   000E7E                     l2272:
  3380   000E7E  5010               	movf	(___fldiv@a+3)^0,w,c
  3381   000E80  0B80               	andlw	128
  3382   000E82  1A19               	xorwf	___fldiv@sign^0,f,c
  3383   000E84  5010               	movf	(___fldiv@a+3)^0,w,c
  3384   000E86  2410               	addwf	(___fldiv@a+3)^0,w,c
  3385   000E88  6E21               	movwf	___fldiv@aexp^0,c
  3386   000E8A  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  3387   000E8C  EF4A  F007         	goto	u1001
  3388   000E90  EF4C  F007         	goto	u1000
  3389   000E94                     u1001:
  3390   000E94  EF4D  F007         	goto	l2280
  3391   000E98                     u1000:
  3392   000E98  8021               	bsf	___fldiv@aexp^0,0,c
  3393   000E9A                     l2280:
  3394   000E9A  5021               	movf	___fldiv@aexp^0,w,c
  3395   000E9C  B4D8               	btfsc	status,2,c
  3396   000E9E  EF53  F007         	goto	u1011
  3397   000EA2  EF55  F007         	goto	u1010
  3398   000EA6                     u1011:
  3399   000EA6  EF6A  F007         	goto	l2290
  3400   000EAA                     u1010:
  3401   000EAA  2821               	incf	___fldiv@aexp^0,w,c
  3402   000EAC  A4D8               	btfss	status,2,c
  3403   000EAE  EF5B  F007         	goto	u1021
  3404   000EB2  EF5D  F007         	goto	u1020
  3405   000EB6                     u1021:
  3406   000EB6  EF65  F007         	goto	l2286
  3407   000EBA                     u1020:
  3408   000EBA  0E00               	movlw	0
  3409   000EBC  6E0D               	movwf	___fldiv@a^0,c
  3410   000EBE  0E00               	movlw	0
  3411   000EC0  6E0E               	movwf	(___fldiv@a+1)^0,c
  3412   000EC2  0E00               	movlw	0
  3413   000EC4  6E0F               	movwf	(___fldiv@a+2)^0,c
  3414   000EC6  0E00               	movlw	0
  3415   000EC8  6E10               	movwf	(___fldiv@a+3)^0,c
  3416   000ECA                     l2286:
  3417   000ECA  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  3418   000ECC  0E00               	movlw	0
  3419   000ECE  6E10               	movwf	(___fldiv@a+3)^0,c
  3420   000ED0  EF72  F007         	goto	l2292
  3421   000ED4                     l2290:
  3422   000ED4  0E00               	movlw	0
  3423   000ED6  6E0D               	movwf	___fldiv@a^0,c
  3424   000ED8  0E00               	movlw	0
  3425   000EDA  6E0E               	movwf	(___fldiv@a+1)^0,c
  3426   000EDC  0E00               	movlw	0
  3427   000EDE  6E0F               	movwf	(___fldiv@a+2)^0,c
  3428   000EE0  0E00               	movlw	0
  3429   000EE2  6E10               	movwf	(___fldiv@a+3)^0,c
  3430   000EE4                     l2292:
  3431   000EE4  500D               	movf	___fldiv@a^0,w,c
  3432   000EE6  100E               	iorwf	(___fldiv@a+1)^0,w,c
  3433   000EE8  100F               	iorwf	(___fldiv@a+2)^0,w,c
  3434   000EEA  1010               	iorwf	(___fldiv@a+3)^0,w,c
  3435   000EEC  A4D8               	btfss	status,2,c
  3436   000EEE  EF7B  F007         	goto	u1031
  3437   000EF2  EF7D  F007         	goto	u1030
  3438   000EF6                     u1031:
  3439   000EF6  EF95  F007         	goto	l2304
  3440   000EFA                     u1030:
  3441   000EFA  0E00               	movlw	0
  3442   000EFC  6E09               	movwf	___fldiv@b^0,c
  3443   000EFE  0E00               	movlw	0
  3444   000F00  6E0A               	movwf	(___fldiv@b+1)^0,c
  3445   000F02  0E00               	movlw	0
  3446   000F04  6E0B               	movwf	(___fldiv@b+2)^0,c
  3447   000F06  0E00               	movlw	0
  3448   000F08  6E0C               	movwf	(___fldiv@b+3)^0,c
  3449   000F0A  0E80               	movlw	128
  3450   000F0C  120B               	iorwf	(___fldiv@b+2)^0,f,c
  3451   000F0E  0E7F               	movlw	127
  3452   000F10  120C               	iorwf	(___fldiv@b+3)^0,f,c
  3453   000F12                     l2298:
  3454   000F12  5019               	movf	___fldiv@sign^0,w,c
  3455   000F14  120C               	iorwf	(___fldiv@b+3)^0,f,c
  3456   000F16  C009  F009         	movff	___fldiv@b,?___fldiv
  3457   000F1A  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  3458   000F1E  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  3459   000F22  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  3460   000F26  EFD8  F008         	goto	l1162
  3461   000F2A                     l2304:
  3462   000F2A  5020               	movf	___fldiv@bexp^0,w,c
  3463   000F2C  A4D8               	btfss	status,2,c
  3464   000F2E  EF9B  F007         	goto	u1041
  3465   000F32  EF9D  F007         	goto	u1040
  3466   000F36                     u1041:
  3467   000F36  EFA7  F007         	goto	l2312
  3468   000F3A                     u1040:
  3469   000F3A  0E00               	movlw	0
  3470   000F3C  6E09               	movwf	?___fldiv^0,c
  3471   000F3E  0E00               	movlw	0
  3472   000F40  6E0A               	movwf	(?___fldiv+1)^0,c
  3473   000F42  0E00               	movlw	0
  3474   000F44  6E0B               	movwf	(?___fldiv+2)^0,c
  3475   000F46  0E00               	movlw	0
  3476   000F48  6E0C               	movwf	(?___fldiv+3)^0,c
  3477   000F4A  EFD8  F008         	goto	l1162
  3478   000F4E                     l2312:
  3479   000F4E  5021               	movf	___fldiv@aexp^0,w,c
  3480   000F50  C020  F011         	movff	___fldiv@bexp,??___fldiv
  3481   000F54  6A12               	clrf	(??___fldiv+1)^0,c
  3482   000F56  5E11               	subwf	??___fldiv^0,f,c
  3483   000F58  0E00               	movlw	0
  3484   000F5A  5A12               	subwfb	(??___fldiv+1)^0,f,c
  3485   000F5C  0E7F               	movlw	127
  3486   000F5E  2411               	addwf	??___fldiv^0,w,c
  3487   000F60  6E1A               	movwf	___fldiv@new_exp^0,c
  3488   000F62  0E00               	movlw	0
  3489   000F64  2012               	addwfc	(??___fldiv+1)^0,w,c
  3490   000F66  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  3491   000F68  C009  F015         	movff	___fldiv@b,___fldiv@rem
  3492   000F6C  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  3493   000F70  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  3494   000F74  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  3495   000F78  0E00               	movlw	0
  3496   000F7A  6E09               	movwf	___fldiv@b^0,c
  3497   000F7C  0E00               	movlw	0
  3498   000F7E  6E0A               	movwf	(___fldiv@b+1)^0,c
  3499   000F80  0E00               	movlw	0
  3500   000F82  6E0B               	movwf	(___fldiv@b+2)^0,c
  3501   000F84  0E00               	movlw	0
  3502   000F86  6E0C               	movwf	(___fldiv@b+3)^0,c
  3503   000F88  0E00               	movlw	0
  3504   000F8A  6E1C               	movwf	___fldiv@grs^0,c
  3505   000F8C  0E00               	movlw	0
  3506   000F8E  6E1D               	movwf	(___fldiv@grs+1)^0,c
  3507   000F90  0E00               	movlw	0
  3508   000F92  6E1E               	movwf	(___fldiv@grs+2)^0,c
  3509   000F94  0E00               	movlw	0
  3510   000F96  6E1F               	movwf	(___fldiv@grs+3)^0,c
  3511   000F98  0E00               	movlw	0
  3512   000F9A  6E21               	movwf	___fldiv@aexp^0,c
  3513   000F9C  EF08  F008         	goto	l1164
  3514   000FA0                     l2322:
  3515   000FA0  5021               	movf	___fldiv@aexp^0,w,c
  3516   000FA2  B4D8               	btfsc	status,2,c
  3517   000FA4  EFD6  F007         	goto	u1051
  3518   000FA8  EFD8  F007         	goto	u1050
  3519   000FAC                     u1051:
  3520   000FAC  EFEF  F007         	goto	l2330
  3521   000FB0                     u1050:
  3522   000FB0  90D8               	bcf	status,0,c
  3523   000FB2  3615               	rlcf	___fldiv@rem^0,f,c
  3524   000FB4  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  3525   000FB6  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  3526   000FB8  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  3527   000FBA  90D8               	bcf	status,0,c
  3528   000FBC  3609               	rlcf	___fldiv@b^0,f,c
  3529   000FBE  360A               	rlcf	(___fldiv@b+1)^0,f,c
  3530   000FC0  360B               	rlcf	(___fldiv@b+2)^0,f,c
  3531   000FC2  360C               	rlcf	(___fldiv@b+3)^0,f,c
  3532   000FC4  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  3533   000FC6  EFE7  F007         	goto	u1061
  3534   000FCA  EFE9  F007         	goto	u1060
  3535   000FCE                     u1061:
  3536   000FCE  EFEA  F007         	goto	l1167
  3537   000FD2                     u1060:
  3538   000FD2  8009               	bsf	___fldiv@b^0,0,c
  3539   000FD4                     l1167:
  3540   000FD4  90D8               	bcf	status,0,c
  3541   000FD6  361C               	rlcf	___fldiv@grs^0,f,c
  3542   000FD8  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  3543   000FDA  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  3544   000FDC  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  3545   000FDE                     l2330:
  3546   000FDE  500D               	movf	___fldiv@a^0,w,c
  3547   000FE0  5C15               	subwf	___fldiv@rem^0,w,c
  3548   000FE2  500E               	movf	(___fldiv@a+1)^0,w,c
  3549   000FE4  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  3550   000FE6  500F               	movf	(___fldiv@a+2)^0,w,c
  3551   000FE8  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  3552   000FEA  5010               	movf	(___fldiv@a+3)^0,w,c
  3553   000FEC  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  3554   000FEE  A0D8               	btfss	status,0,c
  3555   000FF0  EFFC  F007         	goto	u1071
  3556   000FF4  EFFE  F007         	goto	u1070
  3557   000FF8                     u1071:
  3558   000FF8  EF07  F008         	goto	l2336
  3559   000FFC                     u1070:
  3560   000FFC  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  3561   000FFE  500D               	movf	___fldiv@a^0,w,c
  3562   001000  5E15               	subwf	___fldiv@rem^0,f,c
  3563   001002  500E               	movf	(___fldiv@a+1)^0,w,c
  3564   001004  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  3565   001006  500F               	movf	(___fldiv@a+2)^0,w,c
  3566   001008  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  3567   00100A  5010               	movf	(___fldiv@a+3)^0,w,c
  3568   00100C  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  3569   00100E                     l2336:
  3570   00100E  2A21               	incf	___fldiv@aexp^0,f,c
  3571   001010                     l1164:
  3572   001010  0E19               	movlw	25
  3573   001012  6421               	cpfsgt	___fldiv@aexp^0,c
  3574   001014  EF0E  F008         	goto	u1081
  3575   001018  EF10  F008         	goto	u1080
  3576   00101C                     u1081:
  3577   00101C  EFD0  F007         	goto	l2322
  3578   001020                     u1080:
  3579   001020  5015               	movf	___fldiv@rem^0,w,c
  3580   001022  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  3581   001024  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  3582   001026  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  3583   001028  B4D8               	btfsc	status,2,c
  3584   00102A  EF19  F008         	goto	u1091
  3585   00102E  EF1B  F008         	goto	u1090
  3586   001032                     u1091:
  3587   001032  EF33  F008         	goto	l2348
  3588   001036                     u1090:
  3589   001036  801C               	bsf	___fldiv@grs^0,0,c
  3590   001038  EF33  F008         	goto	l2348
  3591   00103C                     l2342:
  3592   00103C  90D8               	bcf	status,0,c
  3593   00103E  3609               	rlcf	___fldiv@b^0,f,c
  3594   001040  360A               	rlcf	(___fldiv@b+1)^0,f,c
  3595   001042  360B               	rlcf	(___fldiv@b+2)^0,f,c
  3596   001044  360C               	rlcf	(___fldiv@b+3)^0,f,c
  3597   001046  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  3598   001048  EF28  F008         	goto	u1101
  3599   00104C  EF2A  F008         	goto	u1100
  3600   001050                     u1101:
  3601   001050  EF2B  F008         	goto	l1173
  3602   001054                     u1100:
  3603   001054  8009               	bsf	___fldiv@b^0,0,c
  3604   001056                     l1173:
  3605   001056  90D8               	bcf	status,0,c
  3606   001058  361C               	rlcf	___fldiv@grs^0,f,c
  3607   00105A  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  3608   00105C  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  3609   00105E  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  3610   001060  061A               	decf	___fldiv@new_exp^0,f,c
  3611   001062  A0D8               	btfss	status,0,c
  3612   001064  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  3613   001066                     l2348:
  3614   001066  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  3615   001068  EF38  F008         	goto	u1111
  3616   00106C  EF3A  F008         	goto	u1110
  3617   001070                     u1111:
  3618   001070  EF1E  F008         	goto	l2342
  3619   001074                     u1110:
  3620   001074  0E00               	movlw	0
  3621   001076  6E21               	movwf	___fldiv@aexp^0,c
  3622   001078  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  3623   00107A  EF41  F008         	goto	u1121
  3624   00107E  EF43  F008         	goto	u1120
  3625   001082                     u1121:
  3626   001082  EF67  F008         	goto	l1175
  3627   001086                     u1120:
  3628   001086  0EFF               	movlw	255
  3629   001088  141C               	andwf	___fldiv@grs^0,w,c
  3630   00108A  6E11               	movwf	??___fldiv^0,c
  3631   00108C  0EFF               	movlw	255
  3632   00108E  141D               	andwf	(___fldiv@grs+1)^0,w,c
  3633   001090  6E12               	movwf	(??___fldiv+1)^0,c
  3634   001092  0EFF               	movlw	255
  3635   001094  141E               	andwf	(___fldiv@grs+2)^0,w,c
  3636   001096  6E13               	movwf	(??___fldiv+2)^0,c
  3637   001098  0E7F               	movlw	127
  3638   00109A  141F               	andwf	(___fldiv@grs+3)^0,w,c
  3639   00109C  6E14               	movwf	(??___fldiv+3)^0,c
  3640   00109E  5011               	movf	??___fldiv^0,w,c
  3641   0010A0  1012               	iorwf	(??___fldiv+1)^0,w,c
  3642   0010A2  1013               	iorwf	(??___fldiv+2)^0,w,c
  3643   0010A4  1014               	iorwf	(??___fldiv+3)^0,w,c
  3644   0010A6  B4D8               	btfsc	status,2,c
  3645   0010A8  EF58  F008         	goto	u1131
  3646   0010AC  EF5A  F008         	goto	u1130
  3647   0010B0                     u1131:
  3648   0010B0  EF5E  F008         	goto	l1176
  3649   0010B4                     u1130:
  3650   0010B4                     l2356:
  3651   0010B4  0E01               	movlw	1
  3652   0010B6  6E21               	movwf	___fldiv@aexp^0,c
  3653   0010B8  EF67  F008         	goto	l1175
  3654   0010BC                     l1176:
  3655   0010BC  A009               	btfss	___fldiv@b^0,0,c
  3656   0010BE  EF63  F008         	goto	u1141
  3657   0010C2  EF65  F008         	goto	u1140
  3658   0010C6                     u1141:
  3659   0010C6  EF67  F008         	goto	l1175
  3660   0010CA                     u1140:
  3661   0010CA  EF5A  F008         	goto	l2356
  3662   0010CE                     l1175:
  3663   0010CE  5021               	movf	___fldiv@aexp^0,w,c
  3664   0010D0  B4D8               	btfsc	status,2,c
  3665   0010D2  EF6D  F008         	goto	u1151
  3666   0010D6  EF6F  F008         	goto	u1150
  3667   0010DA                     u1151:
  3668   0010DA  EF93  F008         	goto	l2368
  3669   0010DE                     u1150:
  3670   0010DE  0E01               	movlw	1
  3671   0010E0  2609               	addwf	___fldiv@b^0,f,c
  3672   0010E2  0E00               	movlw	0
  3673   0010E4  220A               	addwfc	(___fldiv@b+1)^0,f,c
  3674   0010E6  220B               	addwfc	(___fldiv@b+2)^0,f,c
  3675   0010E8  220C               	addwfc	(___fldiv@b+3)^0,f,c
  3676   0010EA  A00C               	btfss	(___fldiv@b+3)^0,0,c
  3677   0010EC  EF7A  F008         	goto	u1161
  3678   0010F0  EF7C  F008         	goto	u1160
  3679   0010F4                     u1161:
  3680   0010F4  EF93  F008         	goto	l2368
  3681   0010F8                     u1160:
  3682   0010F8  C009  F011         	movff	___fldiv@b,??___fldiv
  3683   0010FC  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  3684   001100  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  3685   001104  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  3686   001108  3414               	rlcf	(??___fldiv+3)^0,w,c
  3687   00110A  3214               	rrcf	(??___fldiv+3)^0,f,c
  3688   00110C  3213               	rrcf	(??___fldiv+2)^0,f,c
  3689   00110E  3212               	rrcf	(??___fldiv+1)^0,f,c
  3690   001110  3211               	rrcf	??___fldiv^0,f,c
  3691   001112  C011  F009         	movff	??___fldiv,___fldiv@b
  3692   001116  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  3693   00111A  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  3694   00111E  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  3695   001122  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  3696   001124  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  3697   001126                     l2368:
  3698   001126  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3699   001128  EF9E  F008         	goto	u1171
  3700   00112C  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  3701   00112E  E108               	bnz	u1170
  3702   001130  281A               	incf	___fldiv@new_exp^0,w,c
  3703   001132  A0D8               	btfss	status,0,c
  3704   001134  EF9E  F008         	goto	u1171
  3705   001138  EFA0  F008         	goto	u1170
  3706   00113C                     u1171:
  3707   00113C  EFAB  F008         	goto	l2372
  3708   001140                     u1170:
  3709   001140  0E00               	movlw	0
  3710   001142  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  3711   001144  681A               	setf	___fldiv@new_exp^0,c
  3712   001146  0E00               	movlw	0
  3713   001148  6E09               	movwf	___fldiv@b^0,c
  3714   00114A  0E00               	movlw	0
  3715   00114C  6E0A               	movwf	(___fldiv@b+1)^0,c
  3716   00114E  0E00               	movlw	0
  3717   001150  6E0B               	movwf	(___fldiv@b+2)^0,c
  3718   001152  0E00               	movlw	0
  3719   001154  6E0C               	movwf	(___fldiv@b+3)^0,c
  3720   001156                     l2372:
  3721   001156  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3722   001158  EFB8  F008         	goto	u1180
  3723   00115C  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  3724   00115E  E106               	bnz	u1181
  3725   001160  041A               	decf	___fldiv@new_exp^0,w,c
  3726   001162  B0D8               	btfsc	status,0,c
  3727   001164  EFB6  F008         	goto	u1181
  3728   001168  EFB8  F008         	goto	u1180
  3729   00116C                     u1181:
  3730   00116C  EFC6  F008         	goto	l2376
  3731   001170                     u1180:
  3732   001170  0E00               	movlw	0
  3733   001172  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  3734   001174  0E00               	movlw	0
  3735   001176  6E1A               	movwf	___fldiv@new_exp^0,c
  3736   001178  0E00               	movlw	0
  3737   00117A  6E09               	movwf	___fldiv@b^0,c
  3738   00117C  0E00               	movlw	0
  3739   00117E  6E0A               	movwf	(___fldiv@b+1)^0,c
  3740   001180  0E00               	movlw	0
  3741   001182  6E0B               	movwf	(___fldiv@b+2)^0,c
  3742   001184  0E00               	movlw	0
  3743   001186  6E0C               	movwf	(___fldiv@b+3)^0,c
  3744   001188  0E00               	movlw	0
  3745   00118A  6E19               	movwf	___fldiv@sign^0,c
  3746   00118C                     l2376:
  3747   00118C  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  3748   001190  A020               	btfss	___fldiv@bexp^0,0,c
  3749   001192  EFCD  F008         	goto	u1191
  3750   001196  EFCF  F008         	goto	u1190
  3751   00119A                     u1191:
  3752   00119A  EFD2  F008         	goto	l2382
  3753   00119E                     u1190:
  3754   00119E  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  3755   0011A0  EFD3  F008         	goto	l2384
  3756   0011A4                     l2382:
  3757   0011A4  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  3758   0011A6                     l2384:
  3759   0011A6  90D8               	bcf	status,0,c
  3760   0011A8  3020               	rrcf	___fldiv@bexp^0,w,c
  3761   0011AA  6E0C               	movwf	(___fldiv@b+3)^0,c
  3762   0011AC  EF89  F007         	goto	l2298
  3763   0011B0                     l1162:
  3764   0011B0  0012               	return		;funcret
  3765   0011B2                     __end_of___fldiv:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _color_click_init *****************
  3769 ;; Defined at:
  3770 ;;		line 11 in file "color.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;		None
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;		None
  3775 ;; Return value:  Size  Location     Type
  3776 ;;                  1    wreg      void 
  3777 ;; Registers used:
  3778 ;;		wreg, status,2, status,0, cstack
  3779 ;; Tracked objects:
  3780 ;;		On entry : 0/0
  3781 ;;		On exit  : 0/0
  3782 ;;		Unchanged: 0/0
  3783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3788 ;;Total ram usage:        1 bytes
  3789 ;; Hardware stack levels used: 1
  3790 ;; Hardware stack levels required when called: 9
  3791 ;; This function calls:
  3792 ;;		_I2C_2_Master_Init
  3793 ;;		_color_writetoaddr
  3794 ;; This function is called by:
  3795 ;;		_main
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text24
  3800   001E78                     __ptext24:
  3801                           	callstack 0
  3802   001E78                     _color_click_init:
  3803                           	callstack 21
  3804   001E78                     
  3805                           ;color.c: 14:     I2C_2_Master_Init();
  3806   001E78  EC9D  F00F         	call	_I2C_2_Master_Init	;wreg free
  3807   001E7C                     
  3808                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  3809   001E7C  0E01               	movlw	1
  3810   001E7E  6E0B               	movwf	color_writetoaddr@value^0,c
  3811   001E80  0E00               	movlw	0
  3812   001E82  EC17  F010         	call	_color_writetoaddr
  3813   001E86                     
  3814                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  3815   001E86  0E3F               	movlw	63
  3816   001E88  6E0D               	movwf	??_color_click_init^0,c
  3817   001E8A  0E55               	movlw	85
  3818   001E8C                     u1667:
  3819   001E8C  2EE8               	decfsz	wreg,f,c
  3820   001E8E  D7FE               	bra	u1667
  3821   001E90  2E0D               	decfsz	??_color_click_init^0,f,c
  3822   001E92  D7FC               	bra	u1667
  3823   001E94  F000               	nop	
  3824   001E96                     
  3825                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  3826   001E96  0E03               	movlw	3
  3827   001E98  6E0B               	movwf	color_writetoaddr@value^0,c
  3828   001E9A  0E00               	movlw	0
  3829   001E9C  EC17  F010         	call	_color_writetoaddr
  3830   001EA0                     
  3831                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  3832   001EA0  0ED5               	movlw	213
  3833   001EA2  6E0B               	movwf	color_writetoaddr@value^0,c
  3834   001EA4  0E01               	movlw	1
  3835   001EA6  EC17  F010         	call	_color_writetoaddr
  3836   001EAA  0012               	return		;funcret
  3837   001EAC                     __end_of_color_click_init:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _I2C_2_Master_Init *****************
  3841 ;; Defined at:
  3842 ;;		line 4 in file "i2c.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;		None
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;Total ram usage:        0 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; Hardware stack levels required when called: 6
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_color_click_init
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text25
  3871   001F3A                     __ptext25:
  3872                           	callstack 0
  3873   001F3A                     _I2C_2_Master_Init:
  3874                           	callstack 23
  3875   001F3A                     
  3876                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  3877   001F3A  010E               	movlb	14	; () banked
  3878   001F3C  51D9               	movf	217,w,b	;volatile
  3879   001F3E  0BF0               	andlw	-16
  3880   001F40  0908               	iorlw	8
  3881   001F42  6FD9               	movwf	217,b	;volatile
  3882   001F44                     
  3883                           ; BSR set to: 14
  3884                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  3885   001F44  8BD9               	bsf	217,5,b	;volatile
  3886                           
  3887                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  3888   001F46  0E9F               	movlw	159
  3889   001F48  6FD6               	movwf	214,b	;volatile
  3890   001F4A                     
  3891                           ; BSR set to: 14
  3892                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  3893   001F4A  8A84               	bsf	132,5,c	;volatile
  3894   001F4C                     
  3895                           ; BSR set to: 14
  3896                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  3897   001F4C  8C84               	bsf	132,6,c	;volatile
  3898   001F4E                     
  3899                           ; BSR set to: 14
  3900                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  3901   001F4E  9BA7               	bcf	167,5,b	;volatile
  3902   001F50                     
  3903                           ; BSR set to: 14
  3904                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  3905   001F50  9DA7               	bcf	167,6,b	;volatile
  3906                           
  3907                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  3908   001F52  0E1D               	movlw	29
  3909   001F54  6F1D               	movwf	29,b	;volatile
  3910                           
  3911                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  3912   001F56  0E1E               	movlw	30
  3913   001F58  6F1C               	movwf	28,b	;volatile
  3914                           
  3915                           ;i2c.c: 18:   RD5PPS=0x1C;
  3916   001F5A  0E1C               	movlw	28
  3917   001F5C  6F6F               	movwf	111,b	;volatile
  3918                           
  3919                           ;i2c.c: 19:   RD6PPS=0x1B;
  3920   001F5E  0E1B               	movlw	27
  3921   001F60  6F70               	movwf	112,b	;volatile
  3922   001F62                     
  3923                           ; BSR set to: 14
  3924   001F62  0012               	return		;funcret
  3925   001F64                     __end_of_I2C_2_Master_Init:
  3926                           	callstack 0
  3927                           
  3928 ;; *************** function _Interrupts_init *****************
  3929 ;; Defined at:
  3930 ;;		line 10 in file "interrupts.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		None
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 6
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text26
  3959   0020B8                     __ptext26:
  3960                           	callstack 0
  3961   0020B8                     _Interrupts_init:
  3962                           	callstack 24
  3963   0020B8                     
  3964                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  3965   0020B8  8082               	bsf	130,0,c	;volatile
  3966                           
  3967                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  3968   0020BA  010E               	movlb	14	; () banked
  3969   0020BC  919A               	bcf	154,0,b	;volatile
  3970                           
  3971                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  3972   0020BE  9133               	bcf	51,0,b	;volatile
  3973                           
  3974                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  3975   0020C0  8129               	bsf	41,0,b	;volatile
  3976                           
  3977                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  3978   0020C2  811F               	bsf	31,0,b	;volatile
  3979                           
  3980                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  3981   0020C4  90F2               	bcf	242,0,c	;volatile
  3982                           
  3983                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  3984   0020C6  8AF2               	bsf	242,5,c	;volatile
  3985                           
  3986                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  3987   0020C8  8CF2               	bsf	242,6,c	;volatile
  3988                           
  3989                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  3990   0020CA  8EF2               	bsf	242,7,c	;volatile
  3991   0020CC                     
  3992                           ; BSR set to: 14
  3993   0020CC  0012               	return		;funcret
  3994   0020CE                     __end_of_Interrupts_init:
  3995                           	callstack 0
  3996                           
  3997 ;; *************** function _Color_Interrupts_threshold *****************
  3998 ;; Defined at:
  3999 ;;		line 38 in file "interrupts.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  upperThresho    2   12[COMRAM] unsigned int 
  4002 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;		None
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4017 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4018 ;;Total ram usage:        4 bytes
  4019 ;; Hardware stack levels used: 1
  4020 ;; Hardware stack levels required when called: 9
  4021 ;; This function calls:
  4022 ;;		_color_writetoaddr
  4023 ;; This function is called by:
  4024 ;;		_main
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text27
  4029   001F64                     __ptext27:
  4030                           	callstack 0
  4031   001F64                     _Color_Interrupts_threshold:
  4032                           	callstack 21
  4033   001F64                     
  4034                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  4035   001F64  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  4036   001F68  0E04               	movlw	4
  4037   001F6A  EC17  F010         	call	_color_writetoaddr
  4038                           
  4039                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  4040   001F6E  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  4041   001F70  6E0B               	movwf	color_writetoaddr@value^0,c
  4042   001F72  0E05               	movlw	5
  4043   001F74  EC17  F010         	call	_color_writetoaddr
  4044                           
  4045                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  4046   001F78  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  4047   001F7C  0E06               	movlw	6
  4048   001F7E  EC17  F010         	call	_color_writetoaddr
  4049                           
  4050                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  4051   001F82  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  4052   001F84  6E0B               	movwf	color_writetoaddr@value^0,c
  4053   001F86  0E07               	movlw	7
  4054   001F88  EC17  F010         	call	_color_writetoaddr
  4055   001F8C  0012               	return		;funcret
  4056   001F8E                     __end_of_Color_Interrupts_threshold:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _Color_Interrupts_init *****************
  4060 ;; Defined at:
  4061 ;;		line 29 in file "interrupts.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;		None
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;		None
  4066 ;; Return value:  Size  Location     Type
  4067 ;;                  1    wreg      void 
  4068 ;; Registers used:
  4069 ;;		wreg, status,2, status,0, cstack
  4070 ;; Tracked objects:
  4071 ;;		On entry : 0/0
  4072 ;;		On exit  : 0/0
  4073 ;;		Unchanged: 0/0
  4074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4077 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4078 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;Total ram usage:        1 bytes
  4080 ;; Hardware stack levels used: 1
  4081 ;; Hardware stack levels required when called: 9
  4082 ;; This function calls:
  4083 ;;		_color_writetoaddr
  4084 ;; This function is called by:
  4085 ;;		_main
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text28
  4090   00206E                     __ptext28:
  4091                           	callstack 0
  4092   00206E                     _Color_Interrupts_init:
  4093                           	callstack 21
  4094   00206E                     
  4095                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  4096   00206E  0E13               	movlw	19
  4097   002070  6E0B               	movwf	color_writetoaddr@value^0,c
  4098   002072  0E00               	movlw	0
  4099   002074  EC17  F010         	call	_color_writetoaddr
  4100   002078                     
  4101                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  4102   002078  0ED0               	movlw	208
  4103   00207A  6E0D               	movwf	??_Color_Interrupts_init^0,c
  4104   00207C  0ECA               	movlw	202
  4105   00207E                     u1677:
  4106   00207E  2EE8               	decfsz	wreg,f,c
  4107   002080  D7FE               	bra	u1677
  4108   002082  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  4109   002084  D7FC               	bra	u1677
  4110   002086  0012               	return		;funcret
  4111   002088                     __end_of_Color_Interrupts_init:
  4112                           	callstack 0
  4113                           
  4114 ;; *************** function _color_writetoaddr *****************
  4115 ;; Defined at:
  4116 ;;		line 27 in file "color.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;  address         1    wreg     unsigned char 
  4119 ;;  value           1   10[COMRAM] unsigned char 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  address         1   11[COMRAM] unsigned char 
  4122 ;; Return value:  Size  Location     Type
  4123 ;;                  1    wreg      void 
  4124 ;; Registers used:
  4125 ;;		wreg, status,2, status,0, cstack
  4126 ;; Tracked objects:
  4127 ;;		On entry : 0/0
  4128 ;;		On exit  : 0/0
  4129 ;;		Unchanged: 0/0
  4130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4131 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;Total ram usage:        2 bytes
  4136 ;; Hardware stack levels used: 1
  4137 ;; Hardware stack levels required when called: 8
  4138 ;; This function calls:
  4139 ;;		_I2C_2_Master_Start
  4140 ;;		_I2C_2_Master_Stop
  4141 ;;		_I2C_2_Master_Write
  4142 ;; This function is called by:
  4143 ;;		_color_click_init
  4144 ;;		_Color_Interrupts_init
  4145 ;;		_Color_Interrupts_threshold
  4146 ;;		_persistence_register
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text29
  4151   00202E                     __ptext29:
  4152                           	callstack 0
  4153   00202E                     _color_writetoaddr:
  4154                           	callstack 21
  4155                           
  4156                           ;incstack = 0
  4157                           ;color_writetoaddr@address stored from wreg
  4158   00202E  6E0C               	movwf	color_writetoaddr@address^0,c
  4159   002030                     
  4160                           ;color.c: 28:     I2C_2_Master_Start();
  4161   002030  EC89  F010         	call	_I2C_2_Master_Start	;wreg free
  4162                           
  4163                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  4164   002034  0E52               	movlw	82
  4165   002036  EC6D  F010         	call	_I2C_2_Master_Write
  4166                           
  4167                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  4168   00203A  500C               	movf	color_writetoaddr@address^0,w,c
  4169   00203C  0980               	iorlw	128
  4170   00203E  EC6D  F010         	call	_I2C_2_Master_Write
  4171                           
  4172                           ;color.c: 31:     I2C_2_Master_Write(value);
  4173   002042  500B               	movf	color_writetoaddr@value^0,w,c
  4174   002044  EC6D  F010         	call	_I2C_2_Master_Write
  4175                           
  4176                           ;color.c: 32:     I2C_2_Master_Stop();
  4177   002048  EC84  F010         	call	_I2C_2_Master_Stop	;wreg free
  4178   00204C  0012               	return		;funcret
  4179   00204E                     __end_of_color_writetoaddr:
  4180                           	callstack 0
  4181                           
  4182 ;; *************** function _I2C_2_Master_Write *****************
  4183 ;; Defined at:
  4184 ;;		line 45 in file "i2c.c"
  4185 ;; Parameters:    Size  Location     Type
  4186 ;;  data_byte       1    wreg     unsigned char 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  data_byte       1    9[COMRAM] unsigned char 
  4189 ;; Return value:  Size  Location     Type
  4190 ;;                  1    wreg      void 
  4191 ;; Registers used:
  4192 ;;		wreg, status,2, status,0, cstack
  4193 ;; Tracked objects:
  4194 ;;		On entry : 0/0
  4195 ;;		On exit  : 0/0
  4196 ;;		Unchanged: 0/0
  4197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4202 ;;Total ram usage:        1 bytes
  4203 ;; Hardware stack levels used: 1
  4204 ;; Hardware stack levels required when called: 7
  4205 ;; This function calls:
  4206 ;;		_I2C_2_Master_Idle
  4207 ;; This function is called by:
  4208 ;;		_color_writetoaddr
  4209 ;;		_color_read_Red
  4210 ;;		_color_read_Green
  4211 ;;		_color_read_Blue
  4212 ;;		_color_read_Clear
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text30
  4217   0020DA                     __ptext30:
  4218                           	callstack 0
  4219   0020DA                     _I2C_2_Master_Write:
  4220                           	callstack 21
  4221                           
  4222                           ;incstack = 0
  4223                           ;I2C_2_Master_Write@data_byte stored from wreg
  4224   0020DA  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  4225   0020DC                     
  4226                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4227   0020DC  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4228   0020E0                     
  4229                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4230   0020E0  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4231   0020E4  0012               	return		;funcret
  4232   0020E6                     __end_of_I2C_2_Master_Write:
  4233                           	callstack 0
  4234                           
  4235 ;; *************** function _I2C_2_Master_Stop *****************
  4236 ;; Defined at:
  4237 ;;		line 39 in file "i2c.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, status,2, status,0, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;Total ram usage:        0 bytes
  4256 ;; Hardware stack levels used: 1
  4257 ;; Hardware stack levels required when called: 7
  4258 ;; This function calls:
  4259 ;;		_I2C_2_Master_Idle
  4260 ;; This function is called by:
  4261 ;;		_color_writetoaddr
  4262 ;;		_color_read_Red
  4263 ;;		_color_read_Green
  4264 ;;		_color_read_Blue
  4265 ;;		_color_read_Clear
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text31
  4270   002108                     __ptext31:
  4271                           	callstack 0
  4272   002108                     _I2C_2_Master_Stop:
  4273                           	callstack 21
  4274   002108                     
  4275                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4276   002108  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4277   00210C                     
  4278                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4279   00210C  010E               	movlb	14	; () banked
  4280   00210E  85DA               	bsf	218,2,b	;volatile
  4281   002110                     
  4282                           ; BSR set to: 14
  4283   002110  0012               	return		;funcret
  4284   002112                     __end_of_I2C_2_Master_Stop:
  4285                           	callstack 0
  4286                           
  4287 ;; *************** function _I2C_2_Master_Start *****************
  4288 ;; Defined at:
  4289 ;;		line 27 in file "i2c.c"
  4290 ;; Parameters:    Size  Location     Type
  4291 ;;		None
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;		None
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  1    wreg      void 
  4296 ;; Registers used:
  4297 ;;		wreg, status,2, status,0, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4307 ;;Total ram usage:        0 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 7
  4310 ;; This function calls:
  4311 ;;		_I2C_2_Master_Idle
  4312 ;; This function is called by:
  4313 ;;		_color_writetoaddr
  4314 ;;		_color_read_Red
  4315 ;;		_color_read_Green
  4316 ;;		_color_read_Blue
  4317 ;;		_color_read_Clear
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text32
  4322   002112                     __ptext32:
  4323                           	callstack 0
  4324   002112                     _I2C_2_Master_Start:
  4325                           	callstack 21
  4326   002112                     
  4327                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4328   002112  ECDC  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4329   002116                     
  4330                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4331   002116  010E               	movlb	14	; () banked
  4332   002118  81DA               	bsf	218,0,b	;volatile
  4333   00211A                     
  4334                           ; BSR set to: 14
  4335   00211A  0012               	return		;funcret
  4336   00211C                     __end_of_I2C_2_Master_Start:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _I2C_2_Master_Idle *****************
  4340 ;; Defined at:
  4341 ;;		line 22 in file "i2c.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;		None
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2, status,0
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4358 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4359 ;;Total ram usage:        1 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 6
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_I2C_2_Master_Start
  4366 ;;		_I2C_2_Master_RepStart
  4367 ;;		_I2C_2_Master_Stop
  4368 ;;		_I2C_2_Master_Write
  4369 ;;		_I2C_2_Master_Read
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text33
  4374   001FB8                     __ptext33:
  4375                           	callstack 0
  4376   001FB8                     _I2C_2_Master_Idle:
  4377                           	callstack 21
  4378   001FB8                     l174:
  4379   001FB8  010E               	movlb	14	; () banked
  4380   001FBA  B5D8               	btfsc	216,2,b	;volatile
  4381   001FBC  EFE2  F00F         	goto	u881
  4382   001FC0  EFE4  F00F         	goto	u880
  4383   001FC4                     u881:
  4384   001FC4  EFDC  F00F         	goto	l174
  4385   001FC8                     u880:
  4386   001FC8                     
  4387                           ; BSR set to: 14
  4388   001FC8  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4389   001FCC  0E1F               	movlw	31
  4390   001FCE  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  4391   001FD0  A4D8               	btfss	status,2,c
  4392   001FD2  EFED  F00F         	goto	u891
  4393   001FD6  EFEF  F00F         	goto	u890
  4394   001FDA                     u891:
  4395   001FDA  EFDC  F00F         	goto	l174
  4396   001FDE                     u890:
  4397   001FDE                     
  4398                           ; BSR set to: 14
  4399   001FDE  0012               	return		;funcret
  4400   001FE0                     __end_of_I2C_2_Master_Idle:
  4401                           	callstack 0
  4402                           
  4403 ;; *************** function _HighISR *****************
  4404 ;; Defined at:
  4405 ;;		line 71 in file "interrupts.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;		None
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1    wreg      void 
  4412 ;; Registers used:
  4413 ;;		wreg, status,2, status,0, cstack
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 0/0
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used: 1
  4425 ;; Hardware stack levels required when called: 5
  4426 ;; This function calls:
  4427 ;;		_Color_Interrupts_clear
  4428 ;; This function is called by:
  4429 ;;		Interrupt level 2
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433                           	psect	intcode
  4434   000008                     __pintcode:
  4435                           	callstack 0
  4436   000008                     _HighISR:
  4437                           	callstack 21
  4438                           
  4439                           ; BSR set to: 14
  4440                           ;incstack = 0
  4441   000008  824F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4442   00000A                     
  4443                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  4444   00000A  010E               	movlb	14	; () banked
  4445   00000C  A133               	btfss	51,0,b	;volatile
  4446   00000E  EF0B  F000         	goto	i2u160_41
  4447   000012  EF0D  F000         	goto	i2u160_40
  4448   000016                     i2u160_41:
  4449   000016  EF17  F000         	goto	i2l445
  4450   00001A                     i2u160_40:
  4451   00001A                     
  4452                           ; BSR set to: 14
  4453                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  4454   00001A  8E7C               	bsf	124,7,c	;volatile
  4455   00001C                     
  4456                           ; BSR set to: 14
  4457                           ;interrupts.c: 76:         interrupt_flag = 1;
  4458   00001C  0E00               	movlw	0
  4459   00001E  0100               	movlb	0	; () banked
  4460   000020  6FAE               	movwf	(_interrupt_flag+1)& (0+255),b
  4461   000022  0E01               	movlw	1
  4462   000024  6FAD               	movwf	_interrupt_flag& (0+255),b
  4463   000026                     
  4464                           ; BSR set to: 0
  4465                           ;interrupts.c: 78:         Color_Interrupts_clear();
  4466   000026  EC6F  F00F         	call	_Color_Interrupts_clear	;wreg free
  4467   00002A                     
  4468                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  4469   00002A  010E               	movlb	14	; () banked
  4470   00002C  9133               	bcf	51,0,b	;volatile
  4471   00002E                     i2l445:
  4472                           
  4473                           ; BSR set to: 14
  4474   00002E  924F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4475   000030  0011               	retfie		f
  4476   000032                     __end_of_HighISR:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _Color_Interrupts_clear *****************
  4480 ;; Defined at:
  4481 ;;		line 51 in file "interrupts.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;		None
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;Total ram usage:        0 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 4
  4502 ;; This function calls:
  4503 ;;		i2_Color_Interrupts_init
  4504 ;;		i2_Color_Interrupts_threshold
  4505 ;;		i2_I2C_2_Master_Start
  4506 ;;		i2_I2C_2_Master_Stop
  4507 ;;		i2_I2C_2_Master_Write
  4508 ;;		i2_persistence_register
  4509 ;; This function is called by:
  4510 ;;		_HighISR
  4511 ;; This function uses a non-reentrant model
  4512 ;;
  4513                           
  4514                           	psect	text35
  4515   001EDE                     __ptext35:
  4516                           	callstack 0
  4517   001EDE                     _Color_Interrupts_clear:
  4518                           	callstack 21
  4519   001EDE                     
  4520                           ;interrupts.c: 55:     I2C_2_Master_Start();
  4521   001EDE  EC93  F010         	call	i2_I2C_2_Master_Start	;wreg free
  4522                           
  4523                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  4524   001EE2  0E52               	movlw	82
  4525   001EE4  EC79  F010         	call	i2_I2C_2_Master_Write
  4526                           
  4527                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  4528   001EE8  0EE6               	movlw	230
  4529   001EEA  EC79  F010         	call	i2_I2C_2_Master_Write
  4530                           
  4531                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  4532   001EEE  EC8E  F010         	call	i2_I2C_2_Master_Stop	;wreg free
  4533                           
  4534                           ;interrupts.c: 61:     Color_Interrupts_init();
  4535   001EF2  EC44  F010         	call	i2_Color_Interrupts_init	;wreg free
  4536                           
  4537                           ;interrupts.c: 62:     persistence_register();
  4538   001EF6  EC73  F010         	call	i2_persistence_register	;wreg free
  4539                           
  4540                           ;interrupts.c: 63:     Color_Interrupts_threshold(5000, 0);
  4541   001EFA  0E13               	movlw	19
  4542   001EFC  6E06               	movwf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,c
  4543   001EFE  0E88               	movlw	136
  4544   001F00  6E05               	movwf	i2Color_Interrupts_threshold@upperThreshold^0,c
  4545   001F02  0E00               	movlw	0
  4546   001F04  6E08               	movwf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,c
  4547   001F06  0E00               	movlw	0
  4548   001F08  6E07               	movwf	i2Color_Interrupts_threshold@lowerThreshold^0,c
  4549   001F0A  ECC7  F00F         	call	i2_Color_Interrupts_threshold	;wreg free
  4550   001F0E  0012               	return		;funcret
  4551   001F10                     __end_of_Color_Interrupts_clear:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function i2_persistence_register *****************
  4555 ;; Defined at:
  4556 ;;		line 46 in file "interrupts.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  1    wreg      void 
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used: 1
  4576 ;; Hardware stack levels required when called: 3
  4577 ;; This function calls:
  4578 ;;		i2_color_writetoaddr
  4579 ;; This function is called by:
  4580 ;;		_Color_Interrupts_clear
  4581 ;; This function uses a non-reentrant model
  4582 ;;
  4583                           
  4584                           	psect	text36
  4585   0020E6                     __ptext36:
  4586                           	callstack 0
  4587   0020E6                     i2_persistence_register:
  4588                           	callstack 21
  4589   0020E6                     
  4590                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  4591   0020E6  0E02               	movlw	2
  4592   0020E8  6E03               	movwf	i2color_writetoaddr@value^0,c
  4593   0020EA  0E0C               	movlw	12
  4594   0020EC  EC27  F010         	call	i2_color_writetoaddr
  4595   0020F0  0012               	return		;funcret
  4596   0020F2                     __end_ofi2_persistence_register:
  4597                           	callstack 0
  4598                           
  4599 ;; *************** function i2_Color_Interrupts_threshold *****************
  4600 ;; Defined at:
  4601 ;;		line 38 in file "interrupts.c"
  4602 ;; Parameters:    Size  Location     Type
  4603 ;;  upperThresho    2    4[COMRAM] unsigned int 
  4604 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  4605 ;; Auto vars:     Size  Location     Type
  4606 ;;		None
  4607 ;; Return value:  Size  Location     Type
  4608 ;;                  1    wreg      void 
  4609 ;; Registers used:
  4610 ;;		wreg, status,2, status,0, cstack
  4611 ;; Tracked objects:
  4612 ;;		On entry : 0/0
  4613 ;;		On exit  : 0/0
  4614 ;;		Unchanged: 0/0
  4615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4620 ;;Total ram usage:        4 bytes
  4621 ;; Hardware stack levels used: 1
  4622 ;; Hardware stack levels required when called: 3
  4623 ;; This function calls:
  4624 ;;		i2_color_writetoaddr
  4625 ;; This function is called by:
  4626 ;;		_Color_Interrupts_clear
  4627 ;; This function uses a non-reentrant model
  4628 ;;
  4629                           
  4630                           	psect	text37
  4631   001F8E                     __ptext37:
  4632                           	callstack 0
  4633   001F8E                     i2_Color_Interrupts_threshold:
  4634                           	callstack 21
  4635   001F8E                     
  4636                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  4637   001F8E  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  4638   001F92  0E04               	movlw	4
  4639   001F94  EC27  F010         	call	i2_color_writetoaddr
  4640                           
  4641                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  4642   001F98  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  4643   001F9A  6E03               	movwf	i2color_writetoaddr@value^0,c
  4644   001F9C  0E05               	movlw	5
  4645   001F9E  EC27  F010         	call	i2_color_writetoaddr
  4646                           
  4647                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  4648   001FA2  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  4649   001FA6  0E06               	movlw	6
  4650   001FA8  EC27  F010         	call	i2_color_writetoaddr
  4651                           
  4652                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  4653   001FAC  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  4654   001FAE  6E03               	movwf	i2color_writetoaddr@value^0,c
  4655   001FB0  0E07               	movlw	7
  4656   001FB2  EC27  F010         	call	i2_color_writetoaddr
  4657   001FB6  0012               	return		;funcret
  4658   001FB8                     __end_ofi2_Color_Interrupts_threshold:
  4659                           	callstack 0
  4660                           
  4661 ;; *************** function i2_Color_Interrupts_init *****************
  4662 ;; Defined at:
  4663 ;;		line 29 in file "interrupts.c"
  4664 ;; Parameters:    Size  Location     Type
  4665 ;;		None
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;		None
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      void 
  4670 ;; Registers used:
  4671 ;;		wreg, status,2, status,0, cstack
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4679 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;Total ram usage:        1 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 3
  4684 ;; This function calls:
  4685 ;;		i2_color_writetoaddr
  4686 ;; This function is called by:
  4687 ;;		_Color_Interrupts_clear
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text38
  4692   002088                     __ptext38:
  4693                           	callstack 0
  4694   002088                     i2_Color_Interrupts_init:
  4695                           	callstack 21
  4696   002088                     
  4697                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  4698   002088  0E13               	movlw	19
  4699   00208A  6E03               	movwf	i2color_writetoaddr@value^0,c
  4700   00208C  0E00               	movlw	0
  4701   00208E  EC27  F010         	call	i2_color_writetoaddr
  4702   002092                     
  4703                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  4704   002092  0ED0               	movlw	208
  4705   002094  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  4706   002096  0ECA               	movlw	202
  4707   002098                     i2u168_47:
  4708   002098  2EE8               	decfsz	wreg,f,c
  4709   00209A  D7FE               	bra	i2u168_47
  4710   00209C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  4711   00209E  D7FC               	bra	i2u168_47
  4712   0020A0  0012               	return		;funcret
  4713   0020A2                     __end_ofi2_Color_Interrupts_init:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function i2_color_writetoaddr *****************
  4717 ;; Defined at:
  4718 ;;		line 27 in file "color.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;  address         1    wreg     unsigned char 
  4721 ;;  value           1    2[COMRAM] unsigned char 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  address         1    3[COMRAM] unsigned char 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4737 ;;Total ram usage:        2 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 2
  4740 ;; This function calls:
  4741 ;;		i2_I2C_2_Master_Start
  4742 ;;		i2_I2C_2_Master_Stop
  4743 ;;		i2_I2C_2_Master_Write
  4744 ;; This function is called by:
  4745 ;;		i2_Color_Interrupts_init
  4746 ;;		i2_Color_Interrupts_threshold
  4747 ;;		i2_persistence_register
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text39
  4752   00204E                     __ptext39:
  4753                           	callstack 0
  4754   00204E                     i2_color_writetoaddr:
  4755                           	callstack 21
  4756                           
  4757                           ;incstack = 0
  4758                           ;i2color_writetoaddr@address stored from wreg
  4759   00204E  6E04               	movwf	i2color_writetoaddr@address^0,c
  4760   002050                     
  4761                           ;color.c: 28:     I2C_2_Master_Start();
  4762   002050  EC93  F010         	call	i2_I2C_2_Master_Start	;wreg free
  4763                           
  4764                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  4765   002054  0E52               	movlw	82
  4766   002056  EC79  F010         	call	i2_I2C_2_Master_Write
  4767                           
  4768                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  4769   00205A  5004               	movf	i2color_writetoaddr@address^0,w,c
  4770   00205C  0980               	iorlw	128
  4771   00205E  EC79  F010         	call	i2_I2C_2_Master_Write
  4772                           
  4773                           ;color.c: 31:     I2C_2_Master_Write(value);
  4774   002062  5003               	movf	i2color_writetoaddr@value^0,w,c
  4775   002064  EC79  F010         	call	i2_I2C_2_Master_Write
  4776                           
  4777                           ;color.c: 32:     I2C_2_Master_Stop();
  4778   002068  EC8E  F010         	call	i2_I2C_2_Master_Stop	;wreg free
  4779   00206C  0012               	return		;funcret
  4780   00206E                     __end_ofi2_color_writetoaddr:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function i2_I2C_2_Master_Write *****************
  4784 ;; Defined at:
  4785 ;;		line 45 in file "i2c.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  data_byte       1    wreg     unsigned char 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  data_byte       1    1[COMRAM] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;Total ram usage:        1 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 1
  4806 ;; This function calls:
  4807 ;;		i2_I2C_2_Master_Idle
  4808 ;; This function is called by:
  4809 ;;		_Color_Interrupts_clear
  4810 ;;		i2_color_writetoaddr
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text40
  4815   0020F2                     __ptext40:
  4816                           	callstack 0
  4817   0020F2                     i2_I2C_2_Master_Write:
  4818                           	callstack 21
  4819                           
  4820                           ;incstack = 0
  4821                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4822   0020F2  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4823   0020F4                     
  4824                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4825   0020F4  ECF0  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4826   0020F8                     
  4827                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4828   0020F8  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4829   0020FC  0012               	return		;funcret
  4830   0020FE                     __end_ofi2_I2C_2_Master_Write:
  4831                           	callstack 0
  4832                           
  4833 ;; *************** function i2_I2C_2_Master_Stop *****************
  4834 ;; Defined at:
  4835 ;;		line 39 in file "i2c.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;		None
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;		None
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      void 
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;Total ram usage:        0 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 1
  4856 ;; This function calls:
  4857 ;;		i2_I2C_2_Master_Idle
  4858 ;; This function is called by:
  4859 ;;		_Color_Interrupts_clear
  4860 ;;		i2_color_writetoaddr
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           	psect	text41
  4865   00211C                     __ptext41:
  4866                           	callstack 0
  4867   00211C                     i2_I2C_2_Master_Stop:
  4868                           	callstack 21
  4869   00211C                     
  4870                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4871   00211C  ECF0  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4872   002120                     
  4873                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4874   002120  010E               	movlb	14	; () banked
  4875   002122  85DA               	bsf	218,2,b	;volatile
  4876   002124                     
  4877                           ; BSR set to: 14
  4878   002124  0012               	return		;funcret
  4879   002126                     __end_ofi2_I2C_2_Master_Stop:
  4880                           	callstack 0
  4881                           
  4882 ;; *************** function i2_I2C_2_Master_Start *****************
  4883 ;; Defined at:
  4884 ;;		line 27 in file "i2c.c"
  4885 ;; Parameters:    Size  Location     Type
  4886 ;;		None
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, status,2, status,0, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:        0 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 1
  4905 ;; This function calls:
  4906 ;;		i2_I2C_2_Master_Idle
  4907 ;; This function is called by:
  4908 ;;		_Color_Interrupts_clear
  4909 ;;		i2_color_writetoaddr
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913                           	psect	text42
  4914   002126                     __ptext42:
  4915                           	callstack 0
  4916   002126                     i2_I2C_2_Master_Start:
  4917                           	callstack 21
  4918   002126                     
  4919                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4920   002126  ECF0  F00F         	call	i2_I2C_2_Master_Idle	;wreg free
  4921   00212A                     
  4922                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4923   00212A  010E               	movlb	14	; () banked
  4924   00212C  81DA               	bsf	218,0,b	;volatile
  4925   00212E                     
  4926                           ; BSR set to: 14
  4927   00212E  0012               	return		;funcret
  4928   002130                     __end_ofi2_I2C_2_Master_Start:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function i2_I2C_2_Master_Idle *****************
  4932 ;; Defined at:
  4933 ;;		line 22 in file "i2c.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4949 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4950 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4951 ;;Total ram usage:        1 bytes
  4952 ;; Hardware stack levels used: 1
  4953 ;; This function calls:
  4954 ;;		Nothing
  4955 ;; This function is called by:
  4956 ;;		i2_I2C_2_Master_Start
  4957 ;;		i2_I2C_2_Master_Stop
  4958 ;;		i2_I2C_2_Master_Write
  4959 ;; This function uses a non-reentrant model
  4960 ;;
  4961                           
  4962                           	psect	text43
  4963   001FE0                     __ptext43:
  4964                           	callstack 0
  4965   001FE0                     i2_I2C_2_Master_Idle:
  4966                           	callstack 21
  4967   001FE0                     i2l174:
  4968   001FE0  010E               	movlb	14	; () banked
  4969   001FE2  B5D8               	btfsc	216,2,b	;volatile
  4970   001FE4  EFF6  F00F         	goto	i2u86_41
  4971   001FE8  EFF8  F00F         	goto	i2u86_40
  4972   001FEC                     i2u86_41:
  4973   001FEC  EFF0  F00F         	goto	i2l174
  4974   001FF0                     i2u86_40:
  4975   001FF0                     
  4976                           ; BSR set to: 14
  4977   001FF0  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4978   001FF4  0E1F               	movlw	31
  4979   001FF6  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4980   001FF8  A4D8               	btfss	status,2,c
  4981   001FFA  EF01  F010         	goto	i2u87_41
  4982   001FFE  EF03  F010         	goto	i2u87_40
  4983   002002                     i2u87_41:
  4984   002002  EFF0  F00F         	goto	i2l174
  4985   002006                     i2u87_40:
  4986   002006                     
  4987                           ; BSR set to: 14
  4988   002006  0012               	return		;funcret
  4989   002008                     __end_ofi2_I2C_2_Master_Idle:
  4990                           	callstack 0
  4991                           
  4992                           	psect	rparam
  4993   000000                     
  4994                           	psect	temp
  4995   00004F                     btemp:
  4996                           	callstack 0
  4997   00004F                     	ds	1
  4998   000000                     int$flags	set	btemp
  4999   000000                     wtemp8	set	btemp+1
  5000   000000                     ttemp5	set	btemp+1
  5001   000000                     ttemp6	set	btemp+4
  5002   000000                     ttemp7	set	btemp+8
  5003                           
  5004                           	psect	idloc
  5005                           
  5006                           ;Config register IDLOC0 @ 0x200000
  5007                           ;	unspecified, using default values
  5008   200000                     	org	2097152
  5009   200000  0FFF               	dw	4095
  5010                           
  5011                           ;Config register IDLOC1 @ 0x200002
  5012                           ;	unspecified, using default values
  5013   200002                     	org	2097154
  5014   200002  0FFF               	dw	4095
  5015                           
  5016                           ;Config register IDLOC2 @ 0x200004
  5017                           ;	unspecified, using default values
  5018   200004                     	org	2097156
  5019   200004  0FFF               	dw	4095
  5020                           
  5021                           ;Config register IDLOC3 @ 0x200006
  5022                           ;	unspecified, using default values
  5023   200006                     	org	2097158
  5024   200006  0FFF               	dw	4095
  5025                           
  5026                           ;Config register IDLOC4 @ 0x200008
  5027                           ;	unspecified, using default values
  5028   200008                     	org	2097160
  5029   200008  0FFF               	dw	4095
  5030                           
  5031                           ;Config register IDLOC5 @ 0x20000A
  5032                           ;	unspecified, using default values
  5033   20000A                     	org	2097162
  5034   20000A  0FFF               	dw	4095
  5035                           
  5036                           ;Config register IDLOC6 @ 0x20000C
  5037                           ;	unspecified, using default values
  5038   20000C                     	org	2097164
  5039   20000C  0FFF               	dw	4095
  5040                           
  5041                           ;Config register IDLOC7 @ 0x20000E
  5042                           ;	unspecified, using default values
  5043   20000E                     	org	2097166
  5044   20000E  0FFF               	dw	4095
  5045                           
  5046                           	psect	config
  5047                           
  5048                           ;Config register CONFIG1L @ 0x300000
  5049                           ;	External Oscillator mode Selection bits
  5050                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5051                           ;	Power-up default value for COSC bits
  5052                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5053   300000                     	org	3145728
  5054   300000  AA                 	db	170
  5055                           
  5056                           ;Config register CONFIG1H @ 0x300001
  5057                           ;	unspecified, using default values
  5058                           ;	Clock Out Enable bit
  5059                           ;	CLKOUTEN = 0x1, unprogrammed default
  5060                           ;	Clock Switch Enable bit
  5061                           ;	CSWEN = 0x1, unprogrammed default
  5062                           ;	Fail-Safe Clock Monitor Enable bit
  5063                           ;	FCMEN = 0x1, unprogrammed default
  5064   300001                     	org	3145729
  5065   300001  FF                 	db	255
  5066                           
  5067                           ;Config register CONFIG2L @ 0x300002
  5068                           ;	unspecified, using default values
  5069                           ;	Master Clear Enable bit
  5070                           ;	MCLRE = 0x1, unprogrammed default
  5071                           ;	Power-up Timer Enable bit
  5072                           ;	PWRTE = 0x1, unprogrammed default
  5073                           ;	Low-power BOR enable bit
  5074                           ;	LPBOREN = 0x1, unprogrammed default
  5075                           ;	Brown-out Reset Enable bits
  5076                           ;	BOREN = 0x3, unprogrammed default
  5077   300002                     	org	3145730
  5078   300002  FF                 	db	255
  5079                           
  5080                           ;Config register CONFIG2H @ 0x300003
  5081                           ;	unspecified, using default values
  5082                           ;	Brown Out Reset Voltage selection bits
  5083                           ;	BORV = 0x3, unprogrammed default
  5084                           ;	ZCD Disable bit
  5085                           ;	ZCD = 0x1, unprogrammed default
  5086                           ;	PPSLOCK bit One-Way Set Enable bit
  5087                           ;	PPS1WAY = 0x1, unprogrammed default
  5088                           ;	Stack Full/Underflow Reset Enable bit
  5089                           ;	STVREN = 0x1, unprogrammed default
  5090                           ;	Debugger Enable bit
  5091                           ;	DEBUG = 0x1, unprogrammed default
  5092                           ;	Extended Instruction Set Enable bit
  5093                           ;	XINST = 0x1, unprogrammed default
  5094   300003                     	org	3145731
  5095   300003  FF                 	db	255
  5096                           
  5097                           ;Config register CONFIG3L @ 0x300004
  5098                           ;	WDT Period Select bits
  5099                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5100                           ;	WDT operating mode
  5101                           ;	WDTE = OFF, WDT Disabled
  5102   300004                     	org	3145732
  5103   300004  9F                 	db	159
  5104                           
  5105                           ;Config register CONFIG3H @ 0x300005
  5106                           ;	unspecified, using default values
  5107                           ;	WDT Window Select bits
  5108                           ;	WDTCWS = 0x7, unprogrammed default
  5109                           ;	WDT input clock selector
  5110                           ;	WDTCCS = 0x7, unprogrammed default
  5111   300005                     	org	3145733
  5112   300005  FF                 	db	255
  5113                           
  5114                           ;Config register CONFIG4L @ 0x300006
  5115                           ;	unspecified, using default values
  5116                           ;	Write Protection Block 0
  5117                           ;	WRT0 = 0x1, unprogrammed default
  5118                           ;	Write Protection Block 1
  5119                           ;	WRT1 = 0x1, unprogrammed default
  5120                           ;	Write Protection Block 2
  5121                           ;	WRT2 = 0x1, unprogrammed default
  5122                           ;	Write Protection Block 3
  5123                           ;	WRT3 = 0x1, unprogrammed default
  5124                           ;	Write Protection Block 3
  5125                           ;	WRT4 = 0x1, unprogrammed default
  5126                           ;	Write Protection Block 3
  5127                           ;	WRT5 = 0x1, unprogrammed default
  5128                           ;	Write Protection Block 3
  5129                           ;	WRT6 = 0x1, unprogrammed default
  5130                           ;	Write Protection Block 3
  5131                           ;	WRT7 = 0x1, unprogrammed default
  5132   300006                     	org	3145734
  5133   300006  FF                 	db	255
  5134                           
  5135                           ;Config register CONFIG4H @ 0x300007
  5136                           ;	unspecified, using default values
  5137                           ;	Configuration Register Write Protection bit
  5138                           ;	WRTC = 0x1, unprogrammed default
  5139                           ;	Boot Block Write Protection bit
  5140                           ;	WRTB = 0x1, unprogrammed default
  5141                           ;	Data EEPROM Write Protection bit
  5142                           ;	WRTD = 0x1, unprogrammed default
  5143                           ;	Scanner Enable bit
  5144                           ;	SCANE = 0x1, unprogrammed default
  5145                           ;	Low Voltage Programming Enable bit
  5146                           ;	LVP = 0x1, unprogrammed default
  5147   300007                     	org	3145735
  5148   300007  FF                 	db	255
  5149                           
  5150                           ;Config register CONFIG5L @ 0x300008
  5151                           ;	unspecified, using default values
  5152                           ;	UserNVM Program Memory Code Protection bit
  5153                           ;	CP = 0x1, unprogrammed default
  5154                           ;	DataNVM Memory Code Protection bit
  5155                           ;	CPD = 0x1, unprogrammed default
  5156   300008                     	org	3145736
  5157   300008  FF                 	db	255
  5158                           
  5159                           ;Config register CONFIG5H @ 0x300009
  5160                           ;	unspecified, using default values
  5161   300009                     	org	3145737
  5162   300009  FF                 	db	255
  5163                           
  5164                           ;Config register CONFIG6L @ 0x30000A
  5165                           ;	unspecified, using default values
  5166                           ;	Table Read Protection Block 0
  5167                           ;	EBTR0 = 0x1, unprogrammed default
  5168                           ;	Table Read Protection Block 1
  5169                           ;	EBTR1 = 0x1, unprogrammed default
  5170                           ;	Table Read Protection Block 2
  5171                           ;	EBTR2 = 0x1, unprogrammed default
  5172                           ;	Table Read Protection Block 3
  5173                           ;	EBTR3 = 0x1, unprogrammed default
  5174                           ;	Table Read Protection Block 4
  5175                           ;	EBTR4 = 0x1, unprogrammed default
  5176                           ;	Table Read Protection Block 5
  5177                           ;	EBTR5 = 0x1, unprogrammed default
  5178                           ;	Table Read Protection Block 6
  5179                           ;	EBTR6 = 0x1, unprogrammed default
  5180                           ;	Table Read Protection Block 7
  5181                           ;	EBTR7 = 0x1, unprogrammed default
  5182   30000A                     	org	3145738
  5183   30000A  FF                 	db	255
  5184                           
  5185                           ;Config register CONFIG6H @ 0x30000B
  5186                           ;	unspecified, using default values
  5187                           ;	Boot Block Table Read Protection bit
  5188                           ;	EBTRB = 0x1, unprogrammed default
  5189   30000B                     	org	3145739
  5190   30000B  FF                 	db	255
  5191                           tosu	equ	0xFFF
  5192                           tosh	equ	0xFFE
  5193                           tosl	equ	0xFFD
  5194                           stkptr	equ	0xFFC
  5195                           pclatu	equ	0xFFB
  5196                           pclath	equ	0xFFA
  5197                           pcl	equ	0xFF9
  5198                           tblptru	equ	0xFF8
  5199                           tblptrh	equ	0xFF7
  5200                           tblptrl	equ	0xFF6
  5201                           tablat	equ	0xFF5
  5202                           prodh	equ	0xFF4
  5203                           prodl	equ	0xFF3
  5204                           indf0	equ	0xFEF
  5205                           postinc0	equ	0xFEE
  5206                           postdec0	equ	0xFED
  5207                           preinc0	equ	0xFEC
  5208                           plusw0	equ	0xFEB
  5209                           fsr0h	equ	0xFEA
  5210                           fsr0l	equ	0xFE9
  5211                           wreg	equ	0xFE8
  5212                           indf1	equ	0xFE7
  5213                           postinc1	equ	0xFE6
  5214                           postdec1	equ	0xFE5
  5215                           preinc1	equ	0xFE4
  5216                           plusw1	equ	0xFE3
  5217                           fsr1h	equ	0xFE2
  5218                           fsr1l	equ	0xFE1
  5219                           bsr	equ	0xFE0
  5220                           indf2	equ	0xFDF
  5221                           postinc2	equ	0xFDE
  5222                           postdec2	equ	0xFDD
  5223                           preinc2	equ	0xFDC
  5224                           plusw2	equ	0xFDB
  5225                           fsr2h	equ	0xFDA
  5226                           fsr2l	equ	0xFD9
  5227                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         114
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      78
    BANK0           160     54     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2554$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2554$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S321DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S321DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 36
		 -> main@RGBC(BANK0[36]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 36
		 -> main@RGBC(BANK0[36]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 36
		 -> main@RGBC(BANK0[36]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_response->_norm_stop
    _motor_response->_turnRight
    _turnRight->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               168   168      0   24085
                                             41 COMRAM     2     2      0
                                              0 BANK0     54    54      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6    8690
                                             31 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    3677
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    4349
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     280
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3093
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     36      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      4E       1       83.0%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D3      61        0.0%
DATA                 0      0      D3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 20:17:14 2022

                            _color_read_Red 1CF6                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 1934  
                              ___fldiv@sign 0019                             _color_read_Blue 1DE6  
                                        l80 204C                                          l83 1D44  
                                        l92 1DE4                                          l77 1EAA  
                                        l86 1D94                                          l89 1E34  
                                        l98 19F8                         ___wmul@multiplicand 000B  
                          _color_read_Clear 1D96                            _color_read_Green 1D46  
                         ??_Interrupts_init 0009                                         l101 1622  
                                       l113 1ABA                                         l107 20B6  
                                       l171 1F62                                         l180 211A  
                                       l174 1FB8                                         l430 2086  
                                       l183 2106                                         l192 1E76  
                                       l177 1FDE                                         l433 1F8C  
                                       l186 2110                                         l427 20CC  
                                       l436 20D8                                         l189 20E4  
                                       l541 1C8A                                         l535 14D0  
                                       l528 1B3A                                         l552 1EDC  
                                       l538 1CF4                                         l580 202C  
                                       l558 1C20                                         l569 1932  
                                       l850 1848                                         l845 1802  
                                       u900 1B56                                         u901 1B52  
                                       u910 1B74                                         u911 1B70  
                                       u920 1B90                                         u921 1B8C  
                                       u930 1E60                                         u931 1E58  
                                       u950 1382                                         u951 137E  
                                       u880 1FC8                                         u960 144C  
                                       u881 1FC4                                         u961 1448  
                                       u890 1FDE                                         u970 0E32  
                                       u891 1FDA                                         u971 0E2E  
                                       u980 0E44                                         u948 1E62  
                                       u981 0E40                                         u990 0E54  
                                       u991 0E50                            ??_motor_response 0026  
                                       _ctr 00AB              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 20A2                         i2_color_writetoaddr 204E  
                                       wreg 000FE8                             _color_normalise 14D2  
                                      l2110 2024                                        l1071 1BA6  
                                      l2104 1FB8                                        l2200 1F4A  
                                      l2120 1B5E                                        l2106 1FC8  
                                      l2202 1F4C                                        l1162 11B0  
                                      l1242 12A0                                        l2210 1CF6  
                                      l2130 1B98                                        l2122 1B66  
                                      l2114 1B3C                                        l1235 1208  
                                      l2204 1F4E                                        l1164 1010  
                                      l2300 0F16                                        l2212 1D3C  
                                      l2132 1B9A                                        l2124 1B74  
                                      l2116 1B44                                        l2108 2008  
                                      l1173 1056                                        l2150 2116  
                                      l2206 1F50                                        l1238 1364  
                                      l2222 1DE6                                        l2230 1DDC  
                                      l1078 1BAE                                        l2134 1BA0  
                                      l2126 1B7A                                        l2118 1B56  
                                      l1175 10CE                                        l1167 0FD4  
                                      l2152 20DC                                        l2208 2030  
                                      l1176 10BC                                        l2320 0F98  
                                      l2312 0F4E                                        l2304 0F2A  
                                      l2160 20FE                                        l2224 1E2C  
                                      l2216 1D46                                        l2128 1B90  
                                      l2400 17C2                                        l2240 1BE8  
                                      l1249 12FC                                        l2154 20E0  
                                      l2330 0FDE                                        l2322 0FA0  
                                      l2314 0F68                                        l2306 0F3A  
                                      l2170 1E4C                                        l2162 2102  
                                      l2218 1D8C                                        l2410 1846  
                                      l2402 17D0                                        l2250 1EC4  
                                      l2242 1BF8                                        l2234 1BB0  
                                      l2148 2112                                        l2156 2108  
                                      l2340 1036                                        l2332 0FFC  
                                      l2324 0FB0                                        l2316 0F78  
                                      l2308 0F3A                                        l2260 0E34  
                                      l2420 1218                                        l2172 1E72  
                                      l2164 1E38                                        l2228 1D96  
                                      l2180 1382                                        l2404 17E2  
                                      l2252 1ED0                                        l2244 1C08  
                                      l2236 1BC8                                        l2500 1AB8  
                                      l2158 210C                                        l2510 1F64  
                                      l2350 1074                                        l2342 103C  
                                      l2334 0FFE                                        l2326 0FC4  
                                      l2318 0F88                                        l2262 0E44  
                                      l2270 0E6E                                        l2254 0E18  
                                      l2430 1256                                        l2422 122E  
                                      l2414 11B4                                        l2174 1E74  
                                      l2166 1E3C                                        l2190 144C  
                                      l2182 13D6                                        l2406 17F0  
                                      l2246 1C14                                        l2238 1BD8  
                                      l2504 20B8                                        l2360 10DE  
                                      l2352 1078                                        l2344 1046  
                                      l2336 100E                                        l2328 0FD2  
                                      l2280 0E9A                                        l2272 0E7E  
                                      l2264 0E54                                        l2256 0E24  
                                      l2440 12DE                                        l2432 1288  
                                      l2416 11C4                                        l2168 1E44  
                                      l2192 1490                                        l2184 13EA  
                                      l2520 1B14                                        l2408 1840  
                                      l2248 1EAC                                        l2512 20CE  
                                      l2506 206E                                        l2370 1140  
                                      l2362 10EA                                        l2354 1086  
                                      l2346 1054                                        l2338 1020  
                                      l2282 0EAA                                        l2290 0ED4  
                                      l2274 0E84                                        l2266 0E64  
                                      l2258 0E32                                        l2450 1334  
                                      l2442 12EC                                        l2434 128A  
                                      l2426 1242                                        l2418 11D2  
                                      l2186 142C                                        l2178 1366  
                                      l2530 1B2E                                        l2522 1B16  
                                      l2514 1ABC                                        l2508 2078  
                                      l2196 1F3A                                        l2380 119E  
                                      l2372 1156                                        l2364 10F8  
                                      l2356 10B4                                        l2348 1066  
                                      l2292 0EE4                                        l2284 0EBA  
                                      l2276 0E8A                                        l2268 0E66  
                                      l2452 1344                                        l2444 130A  
                                      l2436 1296                                        l2428 124A  
                                      l2188 1430                                        l2532 1B38  
                                      l2524 1B20                                        l2516 1AE6  
                                      l2540 1CB8                                        l2198 1F44  
                                      l2470 1E7C                                        l2382 11A4  
                                      l2374 1170                                        l2366 1122  
                                      l2294 0EFA                                        l2286 0ECA  
                                      l2278 0E98                                        l2454 1352  
                                      l2446 130C                                        l2438 12D2  
                                      l2526 1B22                                        l2518 1B0A  
                                      l2542 1CCC                                        l2534 1C8C  
                                      l2550 1C3E                                        l2472 1E86  
                                      l2384 11A6                                        l2376 118C  
                                      l2368 1126                                        l2296 0F0A  
                                      l2288 0ECC                                        l2480 14D2  
                                      l2456 1354                                        l2448 1310  
                                      l2560 1862                                        l2528 1B2C  
                                      l2544 1CE0                                        l2536 1C98  
                                      l2552 1C4E                                        l2392 1746  
                                      l2800 1734                                        l2474 1E96  
                                      l2378 1190                                        l2298 0F12  
                                      l2570 18BA                                        l2562 1872  
                                      l2538 1CA8                                        l2554 1C62  
                                      l2546 1C22                                        l2394 1774  
                                      l2482 20A2                                        l2802 1736  
                                      l2476 1EA0                                        l2468 1E78  
                                      l2580 191A                                        l2572 18C6  
                                      l2564 1882                                        l2556 1C76  
                                      l2548 1C2E                                        l2396 1784  
                                      l2492 1A40                                        l2484 19FA  
                                      l2740 1624                                        l2478 1934  
                                      l2582 1926                                        l2574 18D2  
                                      l2566 1892                                        l2558 184A  
                                      l2398 17B2                                        l2494 1A54  
                                      l2486 1A38                                        l2750 164C  
                                      l2742 1628                                        l2576 18EA  
                                      l2568 18A6                                        l2496 1A6C  
                                      l2760 1674                                        l2752 1658  
                                      l2744 1628                                        l2578 1902  
                                      l2498 1A98                                        l2770 167E  
                                      l2762 1676                                        l2754 1664  
                                      l2746 1628                                        l2780 1690  
                                      l2772 1680                                        l2764 1678  
                                      l2756 1670                                        l2748 162C  
                                      l2790 16E6                                        l2782 16A4  
                                      l2774 1684                                        l2766 167A  
                                      l2758 1672                                        l2792 16E8  
                                      l2784 16A6                                        l2776 1688  
                                      l2768 167C                                        l2794 16F4  
                                      l2786 16BA                                        l2778 168C  
                                      l2796 1700                                        l2788 16CE  
                                      l2798 1730                                        STR_1 0E01  
                                      u1000 0E98                                        u1001 0E94  
                                      u1010 0EAA                                        u1011 0EA6  
                                      u1100 1054                                        u1020 0EBA  
                                      u1101 1050                                        u1021 0EB6  
                                      u1110 1074                                        u1030 0EFA  
                                      u1111 1070                                        u1031 0EF6  
                                      u1120 1086                                        u1040 0F3A  
                                      u1200 1774                                        u1121 1082  
                                      u1041 0F36                                        u1201 1770  
                                      u1130 10B4                                        u1050 0FB0  
                                      u1210 17B2                                        u1131 10B0  
                                      u1051 0FAC                                        u1211 17AE  
                                      u1140 10CA                                        u1060 0FD2  
                                      u1300 12EC                                        u1220 17D0  
                                      u1141 10C6                                        u1061 0FCE  
                                      u1301 12E8                                        u1221 17CC  
                                      u1150 10DE                                        u1070 0FFC  
                                      u1310 12FC                                        u1230 17F0  
                                      u1151 10DA                                        u1071 0FF8  
                                      u1311 12F8                                        u1231 17EC  
                                      u1160 10F8                                        u1080 1020  
                                      u1320 130A                                        u1240 1840  
                                      u1161 10F4                                        u1081 101C  
                                      u1321 1306                                        u1241 183C  
                                      u1170 1140                                        u1090 1036  
                                      u1330 1344                                        u1250 11C4  
                                      u1171 113C                                        u1091 1032  
                                      u1331 1340                                        u1251 11C0  
                                      u1180 1170                                        u1340 1352  
                                      u1260 11D2                                        u1181 116C  
                                      u1341 134E                                        u1261 11CE  
                                      u1190 119E                                        u1270 122E  
                                      u1350 1A38                                        u1191 119A  
                                      u1271 122A                                        u1351 1A34  
                                      u1280 1284                                        u1360 1AB8  
                              _BAUD4CONbits 000EE9                                        u1281 1280  
                                      u1361 1AB4                                        u1290 12CE  
                                      u1370 18EA                                        u1291 12CA  
                                      u1371 18E6                                        u1380 1902  
                                      u1381 18FE                                        u1570 16BA  
                                      _T2PR 000FBC                                        u1571 16B6  
                                      u1637 16D8                                        u1647 1A5E  
                                      u1657 1A8A                                        u1667 1E8C  
                                      u1677 207E                                        i2l80 206C  
                                      _main 1624                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 004F                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0032  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 001A  
                    __end_of_color_read_Red 1D46                             __end_of_HighISR 0032  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___fldiv 11B2                             __end_of___lwdiv 1BB0  
                                     i2l180 212E                                       i2l174 1FE0  
                                     i2l430 20A0                                       i2l177 2006  
                                     i2l433 1FB6                                       i2l186 2124  
                                     i2l436 20F0                                       i2l189 20FC  
                                     i2l445 002E                                       i2l439 1F0E  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 211C                  __end_of_I2C_2_Master_Write 20E6  
                     _Color_Interrupts_init 206E                                       ttemp5 0050  
                                     ttemp6 0053                                       ttemp7 0057  
                                     status 000FD8                                       wtemp8 0050  
                   __end_of_color_read_RGBC 19FA                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 1E36                       _I2C_2_Master_RepStart 20FE  
                           ?_color_read_Red 000D                             __initialization 1F10  
                              __end_of_main 1746                 ?_Color_Interrupts_threshold 000D  
                                    ??_main 002A                               __activetblptr 000001  
                   __end_of_color_normalise 1624                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l2100 1FE0  
                                    i2l2102 1FF0                                      i2l2140 211C  
                                    i2l2142 2120                                      i2l2136 2126  
                                    i2l2144 20F4                                      i2l2138 212A  
                                    i2l2146 20F8                                      i2l2194 2050  
                                    i2l2460 2088                                      i2l2462 2092  
                                    i2l2464 1F8E                                      i2l2466 20E6  
                                    i2l2830 002A                                      i2l2822 000A  
                                    i2l2592 1EDE                                      i2l2824 001A  
                                    i2l2826 001C                                      i2l2828 0026  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 1EAC                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 1366  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 20DA                                _CCPTMRS0bits 000FAD  
                                    ___flge 1746                                      ___wmul 2008  
                                 ??___fldiv 0011                                   ??___lwdiv 0013  
                                    clear_0 1F16                                      clear_1 1F22  
                                    isa$std 000001                                      main@mL 00D3  
                                    main@mR 00DC                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 1EDE                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptru 000FF8  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                                  ___flge@ff1 0009  
                                ___flge@ff2 000D                                ___xxtofl@arg 001E  
                              ___xxtofl@exp 001D                                ___xxtofl@val 0014  
                                __accesstop 0060                     __end_of__initialization 1F28  
                  __end_of_color_read_Clear 1DE6                    __end_of_color_read_Green 1D96  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0022                            ?_color_read_Blue 000D  
                           _Interrupts_init 20B8                              __pcstackCOMRAM 0001  
            __end_ofi2_persistence_register 20F2                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 2088  
                                __pbssBANK0 0060                           _color_writetoaddr 202E  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0022  
                          motor_response@mR 0024                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0020                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     i2u86_40 1FF0  
                                   i2u86_41 1FEC                                     i2u87_40 2006  
                                   i2u87_41 2002                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 20CE  
                                _buggy_path 009C                     __end_of_Interrupts_init 20CE  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 204E  
                        _I2C_2_Master_Start 2112                         i2_I2C_2_Master_Idle 1FE0  
                        _I2C_2_Master_Write 20DA                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 211C                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fldiv 0E18  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 1B3C  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 0046                                     __pcinit 1F10  
                                   __ramtop 0E00                                     __ptext0 1624  
                                   __ptext1 20A2                                     __ptext2 20CE  
                                   __ptext3 19FA                                     __ptext4 1BB0  
                                   __ptext5 1EAC                                     __ptext6 1746  
                                   __ptext7 1C22                                     __ptext8 1C8C  
                                   __ptext9 1ABC                        ?i2_I2C_2_Master_Idle 0001  
                                 _T2CONbits 000FBD                                  ??___xxtofl 0018  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                               _RxBufWriteCnt 004E  
                     ?_persistence_register 0001                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 1F28  
               __end_ofi2_color_writetoaddr 206E                           ?_color_click_init 0001  
                         __end_of_norm_stop 1EDE                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 1C8C  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 1C22                               _interrupt_ctr 0048  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 1ABC  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 1C22  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 002C  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 1F10  
                            __end_of___flge 184A                              _fullSpeedAhead 184A  
                            __end_of___wmul 202E                         color_read_Clear@tmp 0012  
                       start_initialization 1F10                      ??_persistence_register 000D  
                             _TxBufWriteCnt 004C                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 1B3C                      __end_of_fullSpeedAhead 1934  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 2130                __end_ofi2_I2C_2_Master_Write 20FE  
                                 ___fldiv@a 000D                                   ___fldiv@b 0009  
                               __pbssCOMRAM 002C                               __pcstackBANK0 00AF  
                            _motor_response 19FA                                    ?_HighISR 0001  
                                 _amb_clear 0040                                   _amb_green 0044  
                          ___lwdiv@dividend 000F                             motor_response@j 0028  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fldiv 0009                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 1FB8                           _I2C_2_Master_Init 1F3A  
                         _I2C_2_Master_Read 1E36                           _I2C_2_Master_Stop 2108  
                              _RxBufReadCnt 004D                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0013                      __end_of_motor_response 1ABC  
                  initDCmotorsPWM@PWMperiod 0009                         ??_I2C_2_Master_Idle 0009  
                       ??_I2C_2_Master_Init 0009                         ??_I2C_2_Master_Read 000A  
                            ___wmul@product 000D                                    _LATAbits 000F79  
                       ??_I2C_2_Master_Stop 000A                                    _LATDbits 000F7C  
                                  _LATEbits 000F7D                                    _LATFbits 000F7E  
                                  _LATGbits 000F7F                                    _LATHbits 000F80  
                                  _IPR0bits 000E1F                                    _PIE0bits 000E29  
                                  _PIE4bits 000E2D                                 turnRight@mL 001C  
                               turnRight@mR 001E                                    i2u160_40 001A  
                                  i2u160_41 0016                                    _PIR0bits 000E33  
                                  i2u168_47 2098                                    _PIR4bits 000E37  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 1EAC                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 1FE0  
                 __end_of_I2C_2_Master_Init 1F64                   __end_of_I2C_2_Master_Read 1E78  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 2112  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0024                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 004B                    i2color_writetoaddr@value 0003  
                                 _turnRight 1BB0               __end_of_Color_Interrupts_init 2088  
                           ?_motor_response 0020               __end_of_I2C_2_Master_RepStart 2108  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 14D2  
                      i2_I2C_2_Master_Start 2126                        i2_I2C_2_Master_Write 20F2  
                                  __Hrparam 0000                           ??_color_normalise 0024  
                                  __Lrparam 0000                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 1FB8  
              i2_Color_Interrupts_threshold 1F8E                 __end_ofi2_I2C_2_Master_Idle 2008  
               __end_ofi2_I2C_2_Master_Stop 2126                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             ??_tricolorLED 0009                                    _amb_blue 0042  
                                  ___xxtofl 11B2                                  _T0CON0bits 000FD5  
                                _T0CON1bits 000FD6                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 184A                                    __ptext11 1366  
                                  __ptext20 1E36                                    __ptext12 2008  
                                  __ptext21 11B2                                    __ptext13 1B3C  
                                  __ptext30 20DA                                    __ptext22 14D2  
                                  __ptext14 1934                                    __ptext31 2108  
                                  __ptext23 0E18                                    __ptext15 1CF6  
                                  __ptext40 20F2                                    __ptext32 2112  
                                  __ptext24 1E78                                    __ptext16 1D46  
                                  __ptext41 211C                                    __ptext33 1FB8  
                                  __ptext25 1F3A                                    __ptext17 1D96  
                                  __ptext42 2126                                    __ptext26 20B8  
                                  __ptext18 1DE6                                    __ptext43 1FE0  
                                  __ptext35 1EDE                                    __ptext27 1F64  
                                  __ptext19 20FE                                    __ptext36 20E6  
                                  __ptext28 206E                                    __ptext37 1F8E  
                                  __ptext29 202E                                    __ptext38 2088  
                                  __ptext39 204E                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 00AF  
                                  int$flags 004F          __end_of_Color_Interrupts_threshold 1F8E  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 1F64  
                                _INTCONbits 000FF2                                 _setMotorPWM 1366  
                              motorLinit@mL 0009                         __end_of_tricolorLED 20B8  
                                  intlevel2 0000                                _motor_return 004A  
                        __end_of_motorLinit 1CF6                          __end_of_motorRinit 1C8C  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 20A2  
                          _color_click_init 1E78                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00AD  
                    i2_persistence_register 20E6                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
