

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 19:44:04 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   00298A                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _upperThreshold
   106   00298A  0BB8               	dw	3000
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _TRISCbits	set	3971
   112   000000                     _TRISDbits	set	3972
   113   000000                     _LATHbits	set	3968
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISAbits	set	3969
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _SSP2ADD	set	3798
   123   000000                     _SSP2CON1bits	set	3801
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _TMR0L	set	4051
   130   000000                     _TMR0H	set	4052
   131   000000                     _T0CON0bits	set	4053
   132   000000                     _T0CON1bits	set	4054
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISHbits	set	3976
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATFbits	set	3966
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _PIE4bits	set	3629
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _ANSELBbits	set	3738
   154   000000                     _RD6PPS	set	3696
   155   000000                     _RC7PPS	set	3689
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _PIR0bits	set	3635
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RE4PPS	set	3702
   161   000000                     _RG6PPS	set	3720
   162   000000                     _T2CLKCONbits	set	4031
   163   000000                     _T2HLTbits	set	4030
   164   000000                     _CCP1CONbits	set	4011
   165   000000                     _CCPTMRS0bits	set	4013
   166   000000                     _CCP2CONbits	set	4007
   167   000000                     _CCP3CONbits	set	3878
   168   000000                     _CCP4CONbits	set	3874
   169                           
   170                           	psect	smallconst
   171   000E00                     __psmallconst:
   172                           	callstack 0
   173   000E00  00                 	db	0
   174   000E01                     
   175                           ; BSR set to: 14
   176   000E01  52                 	db	82	;'R'
   177   000E02  47                 	db	71	;'G'
   178   000E03  42                 	db	66	;'B'
   179   000E04  43                 	db	67	;'C'
   180   000E05  3A                 	db	58	;':'
   181   000E06  25                 	db	37
   182   000E07  69                 	db	105	;'i'
   183   000E08  20                 	db	32
   184   000E09  25                 	db	37
   185   000E0A  69                 	db	105	;'i'
   186   000E0B  20                 	db	32
   187   000E0C  25                 	db	37
   188   000E0D  69                 	db	105	;'i'
   189   000E0E  20                 	db	32
   190   000E0F  25                 	db	37
   191   000E10  69                 	db	105	;'i'
   192   000E11  20                 	db	32
   193   000E12  25                 	db	37
   194   000E13  69                 	db	105	;'i'
   195   000E14  0A                 	db	10
   196   000E15  00                 	db	0
   197   000E16  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   002678                     __pcinit:
   203                           	callstack 0
   204   002678                     start_initialization:
   205                           	callstack 0
   206   002678                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (2 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   002678  0E8A               	movlw	low __pidataBANK0
   212   00267A  6EF6               	movwf	tblptrl,c
   213   00267C  0E29               	movlw	high __pidataBANK0
   214   00267E  6EF7               	movwf	tblptrh,c
   215   002680  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   002682  6EF8               	movwf	tblptru,c
   217   002684  0009               	tblrd		*+	;fetch initializer
   218   002686  CFF5 F0E6          	movff	tablat,__pdataBANK0
   219   00268A  0009               	tblrd		*+	;fetch initializer
   220   00268C  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   221                           
   222                           ; Clear objects allocated to BANK0 (82 bytes)
   223   002690  EE00  F060         	lfsr	0,__pbssBANK0
   224   002694  0E52               	movlw	82
   225   002696                     clear_0:
   226   002696  6AEE               	clrf	postinc0,c
   227   002698  06E8               	decf	wreg,f,c
   228   00269A  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (34 bytes)
   231   00269C  EE00  F033         	lfsr	0,__pbssCOMRAM
   232   0026A0  0E22               	movlw	34
   233   0026A2                     clear_1:
   234   0026A2  6AEE               	clrf	postinc0,c
   235   0026A4  06E8               	decf	wreg,f,c
   236   0026A6  E1FD               	bnz	clear_1
   237   0026A8                     end_of_initialization:
   238                           	callstack 0
   239   0026A8                     __end_of__initialization:
   240                           	callstack 0
   241   0026A8  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   0026AA  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   0026AC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   244   0026AE  6EF8               	movwf	tblptru,c
   245   0026B0  0E0E               	movlw	high __Lsmallconst
   246   0026B2  6EF7               	movwf	tblptrh,c
   247   0026B4  0100               	movlb	0
   248   0026B6  EFB5  F00B         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   000033                     __pbssCOMRAM:
   252                           	callstack 0
   253   000033                     _EUSART4RXbuf:
   254                           	callstack 0
   255   000033                     	ds	20
   256   000047                     _amb_clear:
   257                           	callstack 0
   258   000047                     	ds	2
   259   000049                     _amb_blue:
   260                           	callstack 0
   261   000049                     	ds	2
   262   00004B                     _amb_green:
   263                           	callstack 0
   264   00004B                     	ds	2
   265   00004D                     _amb_red:
   266                           	callstack 0
   267   00004D                     	ds	2
   268   00004F                     _ctr:
   269                           	callstack 0
   270   00004F                     	ds	2
   271   000051                     _TxBufReadCnt:
   272                           	callstack 0
   273   000051                     	ds	1
   274   000052                     _TxBufWriteCnt:
   275                           	callstack 0
   276   000052                     	ds	1
   277   000053                     _RxBufReadCnt:
   278                           	callstack 0
   279   000053                     	ds	1
   280   000054                     _RxBufWriteCnt:
   281                           	callstack 0
   282   000054                     	ds	1
   283                           
   284                           	psect	bssBANK0
   285   000060                     __pbssBANK0:
   286                           	callstack 0
   287   000060                     _EUSART4TXbuf:
   288                           	callstack 0
   289   000060                     	ds	60
   290   00009C                     _lowerThreshold:
   291                           	callstack 0
   292   00009C                     	ds	2
   293   00009E                     _interrupt_ctr:
   294                           	callstack 0
   295   00009E                     	ds	2
   296   0000A0                     _interrupt_flag:
   297                           	callstack 0
   298   0000A0                     	ds	2
   299   0000A2                     _motor_return:
   300                           	callstack 0
   301   0000A2                     	ds	1
   302   0000A3                     _buggy_path:
   303                           	callstack 0
   304   0000A3                     	ds	15
   305                           
   306                           	psect	dataBANK0
   307   0000E6                     __pdataBANK0:
   308                           	callstack 0
   309   0000E6                     _upperThreshold:
   310                           	callstack 0
   311   0000E6                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314   0000B2                     __pcstackBANK0:
   315                           	callstack 0
   316   0000B2                     main@pathSet:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320   0000B2                     	ds	2
   321   0000B4                     main@RGBC:
   322                           	callstack 0
   323                           
   324                           ; 32 bytes @ 0x2
   325   0000B4                     	ds	32
   326   0000D4                     main@mL:
   327                           	callstack 0
   328                           
   329                           ; 9 bytes @ 0x22
   330   0000D4                     	ds	9
   331   0000DD                     main@mR:
   332                           	callstack 0
   333                           
   334                           ; 9 bytes @ 0x2B
   335   0000DD                     	ds	9
   336                           
   337                           	psect	cstackCOMRAM
   338   000001                     __pcstackCOMRAM:
   339                           	callstack 0
   340   000001                     ??i2_I2C_2_Master_Idle:
   341   000001                     
   342                           ; 1 bytes @ 0x0
   343   000001                     	ds	1
   344   000002                     i2I2C_2_Master_Write@data_byte:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x1
   348   000002                     	ds	1
   349   000003                     i2color_writetoaddr@value:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x2
   353   000003                     	ds	1
   354   000004                     i2color_writetoaddr@address:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x3
   358   000004                     	ds	1
   359   000005                     ??i2_Color_Interrupts_init:
   360   000005                     i2Color_Interrupts_threshold@upperThreshold:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x4
   364   000005                     	ds	2
   365   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369   000007                     	ds	2
   370   000009                     ??_I2C_2_Master_Idle:
   371   000009                     ?___wmul:
   372                           	callstack 0
   373   000009                     ?___fldiv:
   374                           	callstack 0
   375   000009                     initDCmotorsPWM@PWMperiod:
   376                           	callstack 0
   377   000009                     motorLinit@mL:
   378                           	callstack 0
   379   000009                     motorRinit@mR:
   380                           	callstack 0
   381   000009                     ___wmul@multiplier:
   382                           	callstack 0
   383   000009                     ___flge@ff1:
   384                           	callstack 0
   385   000009                     ___fldiv@b:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x8
   389   000009                     	ds	1
   390   00000A                     ??_I2C_2_Master_Read:
   391   00000A                     I2C_2_Master_Write@data_byte:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x9
   395   00000A                     	ds	1
   396   00000B                     color_writetoaddr@value:
   397                           	callstack 0
   398   00000B                     I2C_2_Master_Read@ack:
   399                           	callstack 0
   400   00000B                     ___wmul@multiplicand:
   401                           	callstack 0
   402                           
   403                           ; 2 bytes @ 0xA
   404   00000B                     	ds	1
   405   00000C                     color_writetoaddr@address:
   406                           	callstack 0
   407   00000C                     I2C_2_Master_Read@tmp:
   408                           	callstack 0
   409                           
   410                           ; 1 bytes @ 0xB
   411   00000C                     	ds	1
   412   00000D                     ??_Color_Interrupts_init:
   413   00000D                     ??_color_click_init:
   414   00000D                     ?_color_read_Red:
   415                           	callstack 0
   416   00000D                     ?_color_read_Green:
   417                           	callstack 0
   418   00000D                     ?_color_read_Blue:
   419                           	callstack 0
   420   00000D                     ?_color_read_Clear:
   421                           	callstack 0
   422   00000D                     Color_Interrupts_threshold@upperThreshold:
   423                           	callstack 0
   424   00000D                     ___wmul@product:
   425                           	callstack 0
   426   00000D                     ___flge@ff2:
   427                           	callstack 0
   428   00000D                     ___fldiv@a:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0xC
   432   00000D                     	ds	2
   433   00000F                     ??_color_read_Red:
   434   00000F                     ??_color_read_Green:
   435   00000F                     ??_color_read_Blue:
   436   00000F                     ??_color_read_Clear:
   437   00000F                     ?___lwdiv:
   438                           	callstack 0
   439   00000F                     Color_Interrupts_threshold@lowerThreshold:
   440                           	callstack 0
   441   00000F                     ___lwdiv@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xE
   445   00000F                     	ds	2
   446   000011                     ??___fldiv:
   447   000011                     ??___flge:
   448   000011                     ___lwdiv@divisor:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x10
   452   000011                     	ds	1
   453   000012                     color_read_Red@tmp:
   454                           	callstack 0
   455   000012                     color_read_Green@tmp:
   456                           	callstack 0
   457   000012                     color_read_Blue@tmp:
   458                           	callstack 0
   459   000012                     color_read_Clear@tmp:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x11
   463   000012                     	ds	1
   464   000013                     ___lwdiv@quotient:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x12
   468   000013                     	ds	1
   469   000014                     ?___xxtofl:
   470                           	callstack 0
   471   000014                     ___xxtofl@val:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x13
   475   000014                     	ds	1
   476   000015                     ___lwdiv@counter:
   477                           	callstack 0
   478   000015                     ___fldiv@rem:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x14
   482   000015                     	ds	1
   483   000016                     setMotorPWM@m:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x15
   487   000016                     	ds	2
   488   000018                     ??_setMotorPWM:
   489   000018                     ??___xxtofl:
   490                           
   491                           ; 1 bytes @ 0x17
   492   000018                     	ds	1
   493   000019                     ___fldiv@sign:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x18
   497   000019                     	ds	1
   498   00001A                     setMotorPWM@posDuty:
   499                           	callstack 0
   500   00001A                     ___fldiv@new_exp:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x19
   504   00001A                     	ds	1
   505   00001B                     setMotorPWM@negDuty:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x1A
   509   00001B                     	ds	1
   510   00001C                     ___xxtofl@sign:
   511                           	callstack 0
   512   00001C                     norm_stop@mL:
   513                           	callstack 0
   514   00001C                     turnLeft@mL:
   515                           	callstack 0
   516   00001C                     turnRight@mL:
   517                           	callstack 0
   518   00001C                     fullSpeedAhead@mL:
   519                           	callstack 0
   520   00001C                     reverse@mL:
   521                           	callstack 0
   522   00001C                     ___fldiv@grs:
   523                           	callstack 0
   524                           
   525                           ; 4 bytes @ 0x1B
   526   00001C                     	ds	1
   527   00001D                     ___xxtofl@exp:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x1C
   531   00001D                     	ds	1
   532   00001E                     norm_stop@mR:
   533                           	callstack 0
   534   00001E                     turnLeft@mR:
   535                           	callstack 0
   536   00001E                     turnRight@mR:
   537                           	callstack 0
   538   00001E                     fullSpeedAhead@mR:
   539                           	callstack 0
   540   00001E                     reverse@mR:
   541                           	callstack 0
   542   00001E                     ___xxtofl@arg:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x1D
   546   00001E                     	ds	2
   547   000020                     ??_reverse:
   548   000020                     ___fldiv@bexp:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x1F
   552   000020                     	ds	1
   553   000021                     ___fldiv@aexp:
   554                           	callstack 0
   555   000021                     motor_response@temp:
   556                           	callstack 0
   557   000021                     motor_retrace@buggy_path:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x20
   561   000021                     	ds	1
   562   000022                     color_read_RGBC@temp:
   563                           	callstack 0
   564   000022                     color_normalise@RGBC:
   565                           	callstack 0
   566                           
   567                           ; 2 bytes @ 0x21
   568   000022                     	ds	1
   569   000023                     motor_response@mL:
   570                           	callstack 0
   571   000023                     motor_retrace@mL:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x22
   575   000023                     	ds	1
   576   000024                     
   577                           ; 1 bytes @ 0x23
   578   000024                     	ds	1
   579   000025                     motor_response@mR:
   580                           	callstack 0
   581   000025                     motor_retrace@mR:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x24
   585   000025                     	ds	2
   586   000027                     ??_motor_response:
   587   000027                     ??_motor_retrace:
   588                           
   589                           ; 1 bytes @ 0x26
   590   000027                     	ds	2
   591   000029                     motor_response@j:
   592                           	callstack 0
   593   000029                     motor_retrace@j:
   594                           	callstack 0
   595                           
   596                           ; 2 bytes @ 0x28
   597   000029                     	ds	2
   598   00002B                     motor_response@j_554:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x2A
   602   00002B                     	ds	2
   603   00002D                     motor_response@j_555:
   604                           	callstack 0
   605                           
   606                           ; 2 bytes @ 0x2C
   607   00002D                     	ds	2
   608   00002F                     motor_response@j_560:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x2E
   612   00002F                     	ds	2
   613   000031                     ??_main:
   614                           
   615                           ; 1 bytes @ 0x30
   616   000031                     	ds	2
   617                           
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 22 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  buf           100    0        unsigned char [100]
   628 ;;  RGBC           32    2[BANK0 ] struct RGBC_val
   629 ;;  mR              9   43[BANK0 ] struct DC_motor
   630 ;;  mL              9   34[BANK0 ] struct DC_motor
   631 ;;  pathSet         2    0[BANK0 ] int 
   632 ;;  amb_clear       2    0        int 
   633 ;;  amb_blue        2    0        int 
   634 ;;  amb_green       2    0        int 
   635 ;;  amb_red         2    0        int 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   646 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   647 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   648 ;;      Totals:         2      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   649 ;;Total ram usage:       54 bytes
   650 ;; Hardware stack levels required when called: 10
   651 ;; This function calls:
   652 ;;		_Color_Interrupts_init
   653 ;;		_Color_Interrupts_threshold
   654 ;;		_Interrupts_init
   655 ;;		_color_click_init
   656 ;;		_color_normalise
   657 ;;		_color_read_Blue
   658 ;;		_color_read_Clear
   659 ;;		_color_read_Green
   660 ;;		_color_read_RGBC
   661 ;;		_color_read_Red
   662 ;;		_fullSpeedAhead
   663 ;;		_initDCmotorsPWM
   664 ;;		_motorLinit
   665 ;;		_motorRinit
   666 ;;		_motor_response
   667 ;;		_motor_retrace
   668 ;;		_norm_stop
   669 ;;		_persistence_register
   670 ;;		_tricolorLED
   671 ;; This function is called by:
   672 ;;		Startup code after reset
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text0
   677   00176A                     __ptext0:
   678                           	callstack 0
   679   00176A                     _main:
   680                           	callstack 21
   681   00176A                     
   682                           ;main.c: 24:     tricolorLED();
   683   00176A  EC7E  F014         	call	_tricolorLED	;wreg free
   684   00176E                     
   685                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   686   00176E  EC7E  F013         	call	_color_click_init	;wreg free
   687   001772                     
   688                           ;main.c: 29:     ctr=0;
   689   001772  0E00               	movlw	0
   690   001774  6E50               	movwf	(_ctr+1)^0,c
   691   001776  0E00               	movlw	0
   692   001778  6E4F               	movwf	_ctr^0,c
   693   00177A                     
   694                           ;main.c: 30:     interrupt_ctr=0;
   695   00177A  0E00               	movlw	0
   696   00177C  0100               	movlb	0	; () banked
   697   00177E  6F9F               	movwf	(_interrupt_ctr+1)& (0+255),b
   698   001780  0E00               	movlw	0
   699   001782  6F9E               	movwf	_interrupt_ctr& (0+255),b
   700   001784                     
   701                           ; BSR set to: 0
   702                           ;main.c: 32:     for(pathSet=0;pathSet<15;pathSet++)
   703   001784  0E00               	movlw	0
   704   001786  6FB3               	movwf	(main@pathSet+1)& (0+255),b
   705   001788  0E00               	movlw	0
   706   00178A  6FB2               	movwf	main@pathSet& (0+255),b
   707   00178C                     l2849:
   708                           
   709                           ; BSR set to: 0
   710                           ;main.c: 33:     {;main.c: 34:         buggy_path[pathSet]=0;
   711   00178C  0EA3               	movlw	low _buggy_path
   712   00178E  25B2               	addwf	main@pathSet& (0+255),w,b
   713   001790  6ED9               	movwf	fsr2l,c
   714   001792  0E00               	movlw	high _buggy_path
   715   001794  21B3               	addwfc	(main@pathSet+1)& (0+255),w,b
   716   001796  6EDA               	movwf	fsr2h,c
   717   001798  0E00               	movlw	0
   718   00179A  6EDF               	movwf	indf2,c
   719   00179C                     
   720                           ; BSR set to: 0
   721                           ;main.c: 35:     }
   722   00179C  4BB2               	infsnz	main@pathSet& (0+255),f,b
   723   00179E  2BB3               	incf	(main@pathSet+1)& (0+255),f,b
   724   0017A0                     
   725                           ; BSR set to: 0
   726   0017A0  BFB3               	btfsc	(main@pathSet+1)& (0+255),7,b
   727   0017A2  EFDC  F00B         	goto	u1651
   728   0017A6  51B3               	movf	(main@pathSet+1)& (0+255),w,b
   729   0017A8  E109               	bnz	u1650
   730   0017AA  0E0F               	movlw	15
   731   0017AC  5DB2               	subwf	main@pathSet& (0+255),w,b
   732   0017AE  A0D8               	btfss	status,0,c
   733   0017B0  EFDC  F00B         	goto	u1651
   734   0017B4  EFDE  F00B         	goto	u1650
   735   0017B8                     u1651:
   736   0017B8  EFC6  F00B         	goto	l2849
   737   0017BC                     u1650:
   738   0017BC                     
   739                           ; BSR set to: 0
   740                           ;main.c: 37:     Interrupts_init();
   741   0017BC  EC89  F014         	call	_Interrupts_init	;wreg free
   742   0017C0                     
   743                           ;main.c: 38:     Color_Interrupts_init();
   744   0017C0  EC64  F014         	call	_Color_Interrupts_init	;wreg free
   745   0017C4                     
   746                           ;main.c: 39:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   747   0017C4  C0E6  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   748   0017C8  C0E7  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   749   0017CC  C09C  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   750   0017D0  C09D  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   751   0017D4  ECDF  F013         	call	_Color_Interrupts_threshold	;wreg free
   752   0017D8                     
   753                           ;main.c: 40:     persistence_register();
   754   0017D8  EC94  F014         	call	_persistence_register	;wreg free
   755   0017DC                     
   756                           ;main.c: 42:     initDCmotorsPWM(200);
   757   0017DC  0E00               	movlw	0
   758   0017DE  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   759   0017E0  0EC8               	movlw	200
   760   0017E2  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   761   0017E4  EC46  F011         	call	_initDCmotorsPWM	;wreg free
   762   0017E8                     
   763                           ;main.c: 43:     DC_motor mL, mR;;main.c: 44:     motorLinit(&mL);
   764   0017E8  0ED4               	movlw	low main@mL
   765   0017EA  6E09               	movwf	motorLinit@mL^0,c
   766   0017EC  0E00               	movlw	high main@mL
   767   0017EE  6E0A               	movwf	(motorLinit@mL+1)^0,c
   768   0017F0  EC67  F012         	call	_motorLinit	;wreg free
   769   0017F4                     
   770                           ;main.c: 45:     motorRinit(&mR);
   771   0017F4  0EDD               	movlw	low main@mR
   772   0017F6  6E09               	movwf	motorRinit@mR^0,c
   773   0017F8  0E00               	movlw	high main@mR
   774   0017FA  6E0A               	movwf	(motorRinit@mR+1)^0,c
   775   0017FC  EC32  F012         	call	_motorRinit	;wreg free
   776   001800                     
   777                           ;main.c: 47:     TRISEbits.TRISE2 = 0;
   778   001800  9485               	bcf	133,2,c	;volatile
   779   001802                     
   780                           ;main.c: 48:     TRISEbits.TRISE4 = 0;
   781   001802  9885               	bcf	133,4,c	;volatile
   782   001804                     
   783                           ;main.c: 49:     TRISCbits.TRISC7 = 0;
   784   001804  9E83               	bcf	131,7,c	;volatile
   785   001806                     
   786                           ;main.c: 50:     TRISGbits.TRISG6 = 0;
   787   001806  9C87               	bcf	135,6,c	;volatile
   788   001808                     
   789                           ;main.c: 51:     TRISDbits.TRISD7 = 0;
   790   001808  9E84               	bcf	132,7,c	;volatile
   791   00180A                     
   792                           ;main.c: 52:     LATDbits.LATD7 = 0;
   793   00180A  9E7C               	bcf	124,7,c	;volatile
   794   00180C                     
   795                           ;main.c: 53:     TRISHbits.TRISH3 = 0;
   796   00180C  9688               	bcf	136,3,c	;volatile
   797   00180E                     
   798                           ;main.c: 54:     LATHbits.LATH3 = 0;
   799   00180E  9680               	bcf	128,3,c	;volatile
   800   001810                     
   801                           ;main.c: 55:     TRISHbits.TRISH0 = 0;
   802   001810  9088               	bcf	136,0,c	;volatile
   803   001812                     
   804                           ;main.c: 56:     LATHbits.LATH0 = 0;
   805   001812  9080               	bcf	128,0,c	;volatile
   806   001814                     
   807                           ;main.c: 58:     TRISFbits.TRISF0 = 0;
   808   001814  9086               	bcf	134,0,c	;volatile
   809   001816                     
   810                           ;main.c: 59:     LATFbits.LATF0 = 0;
   811   001816  907E               	bcf	126,0,c	;volatile
   812   001818  EC9C  F012         	call	_color_read_Red	;wreg free
   813   00181C  EC14  F013         	call	_color_read_Blue	;wreg free
   814   001820  ECC4  F012         	call	_color_read_Green	;wreg free
   815   001824  ECEC  F012         	call	_color_read_Clear	;wreg free
   816   001828                     
   817                           ;main.c: 65:     motor_return = 0;
   818   001828  0E00               	movlw	0
   819   00182A  0100               	movlb	0	; () banked
   820   00182C  6FA2               	movwf	_motor_return& (0+255),b
   821   00182E                     l2903:
   822                           
   823                           ; BSR set to: 0
   824                           ;main.c: 69:         fullSpeedAhead(&mL, &mR);
   825   00182E  0ED4               	movlw	low main@mL
   826   001830  6E1C               	movwf	fullSpeedAhead@mL^0,c
   827   001832  0E00               	movlw	high main@mL
   828   001834  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   829   001836  0EDD               	movlw	low main@mR
   830   001838  6E1E               	movwf	fullSpeedAhead@mR^0,c
   831   00183A  0E00               	movlw	high main@mR
   832   00183C  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   833   00183E  EC6E  F010         	call	_fullSpeedAhead	;wreg free
   834   001842                     
   835                           ;main.c: 70:         if(ctr==1){
   836   001842  044F               	decf	_ctr^0,w,c
   837   001844  1050               	iorwf	(_ctr+1)^0,w,c
   838   001846  A4D8               	btfss	status,2,c
   839   001848  EF28  F00C         	goto	u1661
   840   00184C  EF2A  F00C         	goto	u1660
   841   001850                     u1661:
   842   001850  EF2D  F00C         	goto	l287
   843   001854                     u1660:
   844   001854                     
   845                           ;main.c: 71:             LATFbits.LATF0=1;
   846   001854  807E               	bsf	126,0,c	;volatile
   847                           
   848                           ;main.c: 72:         }
   849   001856  EF2E  F00C         	goto	l2909
   850   00185A                     l287:
   851                           
   852                           ;main.c: 74:             {;main.c: 75:             LATFbits.LATF0=0;
   853   00185A  907E               	bcf	126,0,c	;volatile
   854   00185C                     l2909:
   855                           
   856                           ;main.c: 78:         if (interrupt_flag == 1 && interrupt_ctr>1) {
   857   00185C  0100               	movlb	0	; () banked
   858   00185E  05A0               	decf	_interrupt_flag& (0+255),w,b
   859   001860  11A1               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   860   001862  A4D8               	btfss	status,2,c
   861   001864  EF36  F00C         	goto	u1671
   862   001868  EF38  F00C         	goto	u1670
   863   00186C                     u1671:
   864   00186C  EF17  F00C         	goto	l2903
   865   001870                     u1670:
   866   001870                     
   867                           ; BSR set to: 0
   868   001870  BF9F               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   869   001872  EF44  F00C         	goto	u1681
   870   001876  519F               	movf	(_interrupt_ctr+1)& (0+255),w,b
   871   001878  E109               	bnz	u1680
   872   00187A  0E02               	movlw	2
   873   00187C  5D9E               	subwf	_interrupt_ctr& (0+255),w,b
   874   00187E  A0D8               	btfss	status,0,c
   875   001880  EF44  F00C         	goto	u1681
   876   001884  EF46  F00C         	goto	u1680
   877   001888                     u1681:
   878   001888  EF17  F00C         	goto	l2903
   879   00188C                     u1680:
   880   00188C                     
   881                           ; BSR set to: 0
   882                           ;main.c: 83:             norm_stop(&mL, &mR);
   883   00188C  0ED4               	movlw	low main@mL
   884   00188E  6E1C               	movwf	norm_stop@mL^0,c
   885   001890  0E00               	movlw	high main@mL
   886   001892  6E1D               	movwf	(norm_stop@mL+1)^0,c
   887   001894  0EDD               	movlw	low main@mR
   888   001896  6E1E               	movwf	norm_stop@mR^0,c
   889   001898  0E00               	movlw	high main@mR
   890   00189A  6E1F               	movwf	(norm_stop@mR+1)^0,c
   891   00189C  EC98  F013         	call	_norm_stop	;wreg free
   892   0018A0                     
   893                           ;main.c: 84:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   894   0018A0  0E52               	movlw	82
   895   0018A2  6E32               	movwf	(??_main+1)^0,c
   896   0018A4  0E2B               	movlw	43
   897   0018A6  6E31               	movwf	??_main^0,c
   898   0018A8  0E00               	movlw	0
   899   0018AA                     u1777:
   900   0018AA  2EE8               	decfsz	wreg,f,c
   901   0018AC  D7FE               	bra	u1777
   902   0018AE  2E31               	decfsz	??_main^0,f,c
   903   0018B0  D7FC               	bra	u1777
   904   0018B2  2E32               	decfsz	(??_main+1)^0,f,c
   905   0018B4  D7FA               	bra	u1777
   906   0018B6  D000               	nop2	
   907   0018B8                     
   908                           ;main.c: 85:             LATDbits.LATD7 = 0;
   909   0018B8  9E7C               	bcf	124,7,c	;volatile
   910   0018BA                     
   911                           ;main.c: 89:             if(motor_return == 0){
   912   0018BA  0100               	movlb	0	; () banked
   913   0018BC  51A2               	movf	_motor_return& (0+255),w,b
   914   0018BE  A4D8               	btfss	status,2,c
   915   0018C0  EF64  F00C         	goto	u1691
   916   0018C4  EF66  F00C         	goto	u1690
   917   0018C8                     u1691:
   918   0018C8  EF9F  F00C         	goto	l2929
   919   0018CC                     u1690:
   920   0018CC                     
   921                           ; BSR set to: 0
   922                           ;main.c: 90:                 color_read_RGBC(&RGBC);
   923   0018CC  0EB4               	movlw	low main@RGBC
   924   0018CE  6E22               	movwf	color_read_RGBC@temp^0,c
   925   0018D0  0E00               	movlw	high main@RGBC
   926   0018D2  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   927   0018D4  ECE3  F010         	call	_color_read_RGBC	;wreg free
   928                           
   929                           ;main.c: 91:                 color_normalise(&RGBC);
   930   0018D8  0EB4               	movlw	low main@RGBC
   931   0018DA  6E22               	movwf	color_normalise@RGBC^0,c
   932   0018DC  0E00               	movlw	high main@RGBC
   933   0018DE  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   934   0018E0  EC4A  F00E         	call	_color_normalise	;wreg free
   935   0018E4                     
   936                           ;main.c: 92:                 LATHbits.LATH3 = !LATHbits.LATH3;
   937   0018E4  A680               	btfss	128,3,c	;volatile
   938   0018E6  EF77  F00C         	goto	u1701
   939   0018EA  EF7B  F00C         	goto	u1700
   940   0018EE                     u1701:
   941   0018EE  6A31               	clrf	??_main^0,c
   942   0018F0  2A31               	incf	??_main^0,f,c
   943   0018F2  EF7C  F00C         	goto	u1718
   944   0018F6                     u1700:
   945   0018F6  6A31               	clrf	??_main^0,c
   946   0018F8                     u1718:
   947   0018F8  4631               	rlncf	??_main^0,f,c
   948   0018FA  4631               	rlncf	??_main^0,f,c
   949   0018FC  4631               	rlncf	??_main^0,f,c
   950   0018FE  5080               	movf	128,w,c	;volatile
   951   001900  1831               	xorwf	??_main^0,w,c
   952   001902  0BF7               	andlw	-9
   953   001904  1831               	xorwf	??_main^0,w,c
   954   001906  6E80               	movwf	128,c	;volatile
   955   001908                     
   956                           ;main.c: 93:                 buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   957   001908  0EB4               	movlw	low main@RGBC
   958   00190A  6E21               	movwf	motor_response@temp^0,c
   959   00190C  0E00               	movlw	high main@RGBC
   960   00190E  6E22               	movwf	(motor_response@temp+1)^0,c
   961   001910  0ED4               	movlw	low main@mL
   962   001912  6E23               	movwf	motor_response@mL^0,c
   963   001914  0E00               	movlw	high main@mL
   964   001916  6E24               	movwf	(motor_response@mL+1)^0,c
   965   001918  0EDD               	movlw	low main@mR
   966   00191A  6E25               	movwf	motor_response@mR^0,c
   967   00191C  0E00               	movlw	high main@mR
   968   00191E  6E26               	movwf	(motor_response@mR+1)^0,c
   969   001920  EC0C  F007         	call	_motor_response	;wreg free
   970   001924  6E31               	movwf	??_main^0,c
   971   001926  0EA3               	movlw	low _buggy_path
   972   001928  244F               	addwf	_ctr^0,w,c
   973   00192A  6ED9               	movwf	fsr2l,c
   974   00192C  0E00               	movlw	high _buggy_path
   975   00192E  2050               	addwfc	(_ctr+1)^0,w,c
   976   001930  6EDA               	movwf	fsr2h,c
   977   001932  C031  FFDF         	movff	??_main,indf2
   978   001936                     
   979                           ;main.c: 94:                 ctr++;
   980   001936  4A4F               	infsnz	_ctr^0,f,c
   981   001938  2A50               	incf	(_ctr+1)^0,f,c
   982                           
   983                           ;main.c: 95:             }
   984   00193A  EFB0  F00C         	goto	l2933
   985   00193E                     l2929:
   986                           
   987                           ; BSR set to: 0
   988                           ;main.c: 97:                 motor_retrace(&buggy_path, &mL, &mR);
   989   00193E  0EA3               	movlw	low _buggy_path
   990   001940  6E21               	movwf	motor_retrace@buggy_path^0,c
   991   001942  0E00               	movlw	high _buggy_path
   992   001944  6E22               	movwf	(motor_retrace@buggy_path+1)^0,c
   993   001946  0ED4               	movlw	low main@mL
   994   001948  6E23               	movwf	motor_retrace@mL^0,c
   995   00194A  0E00               	movlw	high main@mL
   996   00194C  6E24               	movwf	(motor_retrace@mL+1)^0,c
   997   00194E  0EDD               	movlw	low main@mR
   998   001950  6E25               	movwf	motor_retrace@mR^0,c
   999   001952  0E00               	movlw	high main@mR
  1000   001954  6E26               	movwf	(motor_retrace@mR+1)^0,c
  1001   001956  EC75  F00F         	call	_motor_retrace	;wreg free
  1002   00195A                     
  1003                           ;main.c: 98:                 ctr--;
  1004   00195A  064F               	decf	_ctr^0,f,c
  1005   00195C  A0D8               	btfss	status,0,c
  1006   00195E  0650               	decf	(_ctr+1)^0,f,c
  1007   001960                     l2933:
  1008                           
  1009                           ;main.c: 102:             LATHbits.LATH3 = 0;
  1010   001960  9680               	bcf	128,3,c	;volatile
  1011   001962                     
  1012                           ;main.c: 103:             interrupt_flag = 0;
  1013   001962  0E00               	movlw	0
  1014   001964  0100               	movlb	0	; () banked
  1015   001966  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  1016   001968  0E00               	movlw	0
  1017   00196A  6FA0               	movwf	_interrupt_flag& (0+255),b
  1018   00196C  EF17  F00C         	goto	l2903
  1019   001970  EF1B  F000         	goto	start
  1020   001974                     __end_of_main:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _tricolorLED *****************
  1024 ;; Defined at:
  1025 ;;		line 113 in file "color.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		None
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 6
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text1
  1054   0028FC                     __ptext1:
  1055                           	callstack 0
  1056   0028FC                     _tricolorLED:
  1057                           	callstack 24
  1058   0028FC                     
  1059                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
  1060   0028FC  9087               	bcf	135,0,c	;volatile
  1061                           
  1062                           ;color.c: 116:     LATGbits.LATG0 = 1;
  1063   0028FE  807F               	bsf	127,0,c	;volatile
  1064                           
  1065                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
  1066   002900  9881               	bcf	129,4,c	;volatile
  1067                           
  1068                           ;color.c: 118:     LATAbits.LATA4 = 1;
  1069   002902  8879               	bsf	121,4,c	;volatile
  1070                           
  1071                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
  1072   002904  9E86               	bcf	134,7,c	;volatile
  1073                           
  1074                           ;color.c: 120:     LATFbits.LATF7 = 1;
  1075   002906  8E7E               	bsf	126,7,c	;volatile
  1076                           
  1077                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
  1078   002908  9681               	bcf	129,3,c	;volatile
  1079                           
  1080                           ;color.c: 122:     LATAbits.LATA3 = 1;
  1081   00290A  8679               	bsf	121,3,c	;volatile
  1082                           
  1083                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
  1084   00290C  9E85               	bcf	133,7,c	;volatile
  1085                           
  1086                           ;color.c: 124:     LATEbits.LATE7 = 1;
  1087   00290E  8E7D               	bsf	125,7,c	;volatile
  1088   002910  0012               	return		;funcret
  1089   002912                     __end_of_tricolorLED:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _persistence_register *****************
  1093 ;; Defined at:
  1094 ;;		line 46 in file "interrupts.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0, cstack
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1112 ;;Total ram usage:        0 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; Hardware stack levels required when called: 9
  1115 ;; This function calls:
  1116 ;;		_color_writetoaddr
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;; This function uses a non-reentrant model
  1120 ;;
  1121                           
  1122                           	psect	text2
  1123   002928                     __ptext2:
  1124                           	callstack 0
  1125   002928                     _persistence_register:
  1126                           	callstack 21
  1127   002928                     
  1128                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  1129   002928  0E02               	movlw	2
  1130   00292A  6E0B               	movwf	color_writetoaddr@value^0,c
  1131   00292C  0E0C               	movlw	12
  1132   00292E  EC44  F014         	call	_color_writetoaddr
  1133   002932  0012               	return		;funcret
  1134   002934                     __end_of_persistence_register:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _motor_retrace *****************
  1138 ;; Defined at:
  1139 ;;		line 239 in file "color.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  buggy_path      2   32[COMRAM] PTR unsigned char 
  1142 ;;		 -> buggy_path(15), 
  1143 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1144 ;;		 -> main@mL(9), 
  1145 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1146 ;;		 -> main@mR(9), 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  j               2   40[COMRAM] int 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  1    wreg      void 
  1151 ;; Registers used:
  1152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1158 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1161 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1162 ;;Total ram usage:       10 bytes
  1163 ;; Hardware stack levels used: 1
  1164 ;; Hardware stack levels required when called: 9
  1165 ;; This function calls:
  1166 ;;		_norm_stop
  1167 ;;		_reverse
  1168 ;;		_turnLeft
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text3
  1175   001EEA                     __ptext3:
  1176                           	callstack 0
  1177   001EEA                     _motor_retrace:
  1178                           	callstack 21
  1179   001EEA                     
  1180                           ;color.c: 240:     if (buggy_path[ctr]==1) {
  1181   001EEA  504F               	movf	_ctr^0,w,c
  1182   001EEC  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1183   001EEE  6ED9               	movwf	fsr2l,c
  1184   001EF0  5050               	movf	(_ctr+1)^0,w,c
  1185   001EF2  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1186   001EF4  6EDA               	movwf	fsr2h,c
  1187   001EF6  04DE               	decf	postinc2,w,c
  1188   001EF8  A4D8               	btfss	status,2,c
  1189   001EFA  EF81  F00F         	goto	u1621
  1190   001EFE  EF83  F00F         	goto	u1620
  1191   001F02                     u1621:
  1192   001F02  EFF1  F00F         	goto	l139
  1193   001F06                     u1620:
  1194   001F06                     
  1195                           ;color.c: 241:         reverse(mL, mR);
  1196   001F06  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1197   001F0A  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1198   001F0E  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1199   001F12  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1200   001F16  ECF2  F00F         	call	_reverse	;wreg free
  1201   001F1A                     
  1202                           ;color.c: 242:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1203   001F1A  0E21               	movlw	33
  1204   001F1C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1205   001F1E  0E78               	movlw	120
  1206   001F20  6E27               	movwf	??_motor_retrace^0,c
  1207   001F22  0E98               	movlw	152
  1208   001F24                     u1787:
  1209   001F24  2EE8               	decfsz	wreg,f,c
  1210   001F26  D7FE               	bra	u1787
  1211   001F28  2E27               	decfsz	??_motor_retrace^0,f,c
  1212   001F2A  D7FC               	bra	u1787
  1213   001F2C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1214   001F2E  D7FA               	bra	u1787
  1215   001F30  D000               	nop2	
  1216   001F32                     
  1217                           ;color.c: 243:         norm_stop(mL, mR);
  1218   001F32  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1219   001F36  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1220   001F3A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1221   001F3E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1222   001F42  EC98  F013         	call	_norm_stop	;wreg free
  1223                           
  1224                           ;color.c: 244:         _delay((unsigned long)((80)*(64000000/4000.0)));
  1225   001F46  0E07               	movlw	7
  1226   001F48  6E28               	movwf	(??_motor_retrace+1)^0,c
  1227   001F4A  0E7F               	movlw	127
  1228   001F4C  6E27               	movwf	??_motor_retrace^0,c
  1229   001F4E  0E50               	movlw	80
  1230   001F50                     u1797:
  1231   001F50  2EE8               	decfsz	wreg,f,c
  1232   001F52  D7FE               	bra	u1797
  1233   001F54  2E27               	decfsz	??_motor_retrace^0,f,c
  1234   001F56  D7FC               	bra	u1797
  1235   001F58  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1236   001F5A  D7FA               	bra	u1797
  1237   001F5C                     
  1238                           ;color.c: 245:         for (int j = 0; j <= 23; j++) {
  1239   001F5C  0E00               	movlw	0
  1240   001F5E  6E2A               	movwf	(motor_retrace@j+1)^0,c
  1241   001F60  0E00               	movlw	0
  1242   001F62  6E29               	movwf	motor_retrace@j^0,c
  1243   001F64                     l2761:
  1244                           
  1245                           ;color.c: 246:             turnLeft(mL, mR);
  1246   001F64  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1247   001F68  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1248   001F6C  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1249   001F70  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1250   001F74  ECF9  F011         	call	_turnLeft	;wreg free
  1251   001F78                     
  1252                           ;color.c: 247:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1253   001F78  0E02               	movlw	2
  1254   001F7A  6E28               	movwf	(??_motor_retrace+1)^0,c
  1255   001F7C  0EF3               	movlw	243
  1256   001F7E  6E27               	movwf	??_motor_retrace^0,c
  1257   001F80  0EB0               	movlw	176
  1258   001F82                     u1807:
  1259   001F82  2EE8               	decfsz	wreg,f,c
  1260   001F84  D7FE               	bra	u1807
  1261   001F86  2E27               	decfsz	??_motor_retrace^0,f,c
  1262   001F88  D7FC               	bra	u1807
  1263   001F8A  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1264   001F8C  D7FA               	bra	u1807
  1265   001F8E  D000               	nop2	
  1266   001F90                     
  1267                           ;color.c: 248:             norm_stop(mL, mR);
  1268   001F90  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1269   001F94  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1270   001F98  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1271   001F9C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1272   001FA0  EC98  F013         	call	_norm_stop	;wreg free
  1273                           
  1274                           ;color.c: 249:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1275   001FA4  0E03               	movlw	3
  1276   001FA6  6E28               	movwf	(??_motor_retrace+1)^0,c
  1277   001FA8  0E70               	movlw	112
  1278   001FAA  6E27               	movwf	??_motor_retrace^0,c
  1279   001FAC  0E5C               	movlw	92
  1280   001FAE                     u1817:
  1281   001FAE  2EE8               	decfsz	wreg,f,c
  1282   001FB0  D7FE               	bra	u1817
  1283   001FB2  2E27               	decfsz	??_motor_retrace^0,f,c
  1284   001FB4  D7FC               	bra	u1817
  1285   001FB6  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1286   001FB8  D7FA               	bra	u1817
  1287   001FBA  D000               	nop2	
  1288   001FBC                     
  1289                           ;color.c: 250:         }
  1290   001FBC  4A29               	infsnz	motor_retrace@j^0,f,c
  1291   001FBE  2A2A               	incf	(motor_retrace@j+1)^0,f,c
  1292   001FC0  BE2A               	btfsc	(motor_retrace@j+1)^0,7,c
  1293   001FC2  EFEC  F00F         	goto	u1631
  1294   001FC6  502A               	movf	(motor_retrace@j+1)^0,w,c
  1295   001FC8  E109               	bnz	u1630
  1296   001FCA  0E18               	movlw	24
  1297   001FCC  5C29               	subwf	motor_retrace@j^0,w,c
  1298   001FCE  A0D8               	btfss	status,0,c
  1299   001FD0  EFEC  F00F         	goto	u1631
  1300   001FD4  EFEE  F00F         	goto	u1630
  1301   001FD8                     u1631:
  1302   001FD8  EFB2  F00F         	goto	l2761
  1303   001FDC                     u1630:
  1304   001FDC                     
  1305                           ;color.c: 251:         ctr--;
  1306   001FDC  064F               	decf	_ctr^0,f,c
  1307   001FDE  A0D8               	btfss	status,0,c
  1308   001FE0  0650               	decf	(_ctr+1)^0,f,c
  1309   001FE2                     l139:
  1310   001FE2  0012               	return		;funcret
  1311   001FE4                     __end_of_motor_retrace:
  1312                           	callstack 0
  1313                           
  1314 ;; *************** function _motor_response *****************
  1315 ;; Defined at:
  1316 ;;		line 127 in file "color.c"
  1317 ;; Parameters:    Size  Location     Type
  1318 ;;  temp            2   32[COMRAM] PTR struct RGBC_val
  1319 ;;		 -> main@RGBC(32), 
  1320 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1321 ;;		 -> main@mR(9), main@mL(9), 
  1322 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1323 ;;		 -> main@mR(9), main@mL(9), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  j               2   46[COMRAM] int 
  1326 ;;  j               2   44[COMRAM] int 
  1327 ;;  j               2   42[COMRAM] int 
  1328 ;;  j               2   40[COMRAM] int 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  1    wreg      unsigned char 
  1331 ;; Registers used:
  1332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1338 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1339 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1341 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1342 ;;Total ram usage:       16 bytes
  1343 ;; Hardware stack levels used: 1
  1344 ;; Hardware stack levels required when called: 9
  1345 ;; This function calls:
  1346 ;;		___flge
  1347 ;;		_fullSpeedAhead
  1348 ;;		_norm_stop
  1349 ;;		_reverse
  1350 ;;		_turnLeft
  1351 ;;		_turnRight
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text4
  1358   000E18                     __ptext4:
  1359                           	callstack 0
  1360   000E18                     _motor_response:
  1361                           	callstack 21
  1362   000E18                     
  1363                           ;color.c: 129:     if (temp->norm_G >8) {
  1364   000E18  0E00               	movlw	0
  1365   000E1A  6E09               	movwf	___flge@ff1^0,c
  1366   000E1C  0E00               	movlw	0
  1367   000E1E  6E0A               	movwf	(___flge@ff1+1)^0,c
  1368   000E20  0E00               	movlw	0
  1369   000E22  6E0B               	movwf	(___flge@ff1+2)^0,c
  1370   000E24  0E41               	movlw	65
  1371   000E26  6E0C               	movwf	(___flge@ff1+3)^0,c
  1372   000E28  EE20 F014          	lfsr	2,20
  1373   000E2C  5021               	movf	motor_response@temp^0,w,c
  1374   000E2E  26D9               	addwf	fsr2l,f,c
  1375   000E30  5022               	movf	(motor_response@temp+1)^0,w,c
  1376   000E32  22DA               	addwfc	fsr2h,f,c
  1377   000E34  CFDE F00D          	movff	postinc2,___flge@ff2
  1378   000E38  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1379   000E3C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1380   000E40  CFDE F010          	movff	postinc2,___flge@ff2+3
  1381   000E44  ECF3  F00E         	call	___flge	;wreg free
  1382   000E48  B0D8               	btfsc	status,0,c
  1383   000E4A  EF29  F007         	goto	u1461
  1384   000E4E  EF2B  F007         	goto	u1460
  1385   000E52                     u1461:
  1386   000E52  EF9B  F007         	goto	l2649
  1387   000E56                     u1460:
  1388   000E56                     
  1389                           ;color.c: 130:         reverse(mL,mR);
  1390   000E56  C023  F01C         	movff	motor_response@mL,reverse@mL
  1391   000E5A  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  1392   000E5E  C025  F01E         	movff	motor_response@mR,reverse@mR
  1393   000E62  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  1394   000E66  ECF2  F00F         	call	_reverse	;wreg free
  1395   000E6A                     
  1396                           ;color.c: 131:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1397   000E6A  0E21               	movlw	33
  1398   000E6C  6E28               	movwf	(??_motor_response+1)^0,c
  1399   000E6E  0E78               	movlw	120
  1400   000E70  6E27               	movwf	??_motor_response^0,c
  1401   000E72  0E98               	movlw	152
  1402   000E74                     u1827:
  1403   000E74  2EE8               	decfsz	wreg,f,c
  1404   000E76  D7FE               	bra	u1827
  1405   000E78  2E27               	decfsz	??_motor_response^0,f,c
  1406   000E7A  D7FC               	bra	u1827
  1407   000E7C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1408   000E7E  D7FA               	bra	u1827
  1409   000E80  D000               	nop2	
  1410   000E82                     
  1411                           ;color.c: 132:         norm_stop(mL, mR);
  1412   000E82  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1413   000E86  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1414   000E8A  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1415   000E8E  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1416   000E92  EC98  F013         	call	_norm_stop	;wreg free
  1417                           
  1418                           ;color.c: 133:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1419   000E96  0E07               	movlw	7
  1420   000E98  6E28               	movwf	(??_motor_response+1)^0,c
  1421   000E9A  0E7F               	movlw	127
  1422   000E9C  6E27               	movwf	??_motor_response^0,c
  1423   000E9E  0E50               	movlw	80
  1424   000EA0                     u1837:
  1425   000EA0  2EE8               	decfsz	wreg,f,c
  1426   000EA2  D7FE               	bra	u1837
  1427   000EA4  2E27               	decfsz	??_motor_response^0,f,c
  1428   000EA6  D7FC               	bra	u1837
  1429   000EA8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1430   000EAA  D7FA               	bra	u1837
  1431   000EAC                     
  1432                           ;color.c: 134:         for (int j = 0; j <= 23; j++) {
  1433   000EAC  0E00               	movlw	0
  1434   000EAE  6E2A               	movwf	(motor_response@j+1)^0,c
  1435   000EB0  0E00               	movlw	0
  1436   000EB2  6E29               	movwf	motor_response@j^0,c
  1437   000EB4                     l2635:
  1438                           
  1439                           ;color.c: 135:             turnRight(mL, mR);
  1440   000EB4  C023  F01C         	movff	motor_response@mL,turnRight@mL
  1441   000EB8  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  1442   000EBC  C025  F01E         	movff	motor_response@mR,turnRight@mR
  1443   000EC0  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  1444   000EC4  ECC0  F011         	call	_turnRight	;wreg free
  1445   000EC8                     
  1446                           ;color.c: 136:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1447   000EC8  0E02               	movlw	2
  1448   000ECA  6E28               	movwf	(??_motor_response+1)^0,c
  1449   000ECC  0EF3               	movlw	243
  1450   000ECE  6E27               	movwf	??_motor_response^0,c
  1451   000ED0  0EB0               	movlw	176
  1452   000ED2                     u1847:
  1453   000ED2  2EE8               	decfsz	wreg,f,c
  1454   000ED4  D7FE               	bra	u1847
  1455   000ED6  2E27               	decfsz	??_motor_response^0,f,c
  1456   000ED8  D7FC               	bra	u1847
  1457   000EDA  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1458   000EDC  D7FA               	bra	u1847
  1459   000EDE  D000               	nop2	
  1460   000EE0                     
  1461                           ;color.c: 137:             norm_stop(mL, mR);
  1462   000EE0  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1463   000EE4  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1464   000EE8  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1465   000EEC  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1466   000EF0  EC98  F013         	call	_norm_stop	;wreg free
  1467                           
  1468                           ;color.c: 138:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1469   000EF4  0E03               	movlw	3
  1470   000EF6  6E28               	movwf	(??_motor_response+1)^0,c
  1471   000EF8  0E70               	movlw	112
  1472   000EFA  6E27               	movwf	??_motor_response^0,c
  1473   000EFC  0E5C               	movlw	92
  1474   000EFE                     u1857:
  1475   000EFE  2EE8               	decfsz	wreg,f,c
  1476   000F00  D7FE               	bra	u1857
  1477   000F02  2E27               	decfsz	??_motor_response^0,f,c
  1478   000F04  D7FC               	bra	u1857
  1479   000F06  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1480   000F08  D7FA               	bra	u1857
  1481   000F0A  D000               	nop2	
  1482   000F0C                     
  1483                           ;color.c: 139:         }
  1484   000F0C  4A29               	infsnz	motor_response@j^0,f,c
  1485   000F0E  2A2A               	incf	(motor_response@j+1)^0,f,c
  1486   000F10  BE2A               	btfsc	(motor_response@j+1)^0,7,c
  1487   000F12  EF94  F007         	goto	u1471
  1488   000F16  502A               	movf	(motor_response@j+1)^0,w,c
  1489   000F18  E109               	bnz	u1470
  1490   000F1A  0E18               	movlw	24
  1491   000F1C  5C29               	subwf	motor_response@j^0,w,c
  1492   000F1E  A0D8               	btfss	status,0,c
  1493   000F20  EF94  F007         	goto	u1471
  1494   000F24  EF96  F007         	goto	u1470
  1495   000F28                     u1471:
  1496   000F28  EF5A  F007         	goto	l2635
  1497   000F2C                     u1470:
  1498   000F2C                     
  1499                           ;color.c: 140:         return 1;
  1500   000F2C  0E01               	movlw	1
  1501   000F2E  EFE7  F009         	goto	l121
  1502   000F32                     l2645:
  1503   000F32  EFE7  F009         	goto	l121
  1504   000F36                     l2649:
  1505   000F36  0E00               	movlw	0
  1506   000F38  6E09               	movwf	___flge@ff1^0,c
  1507   000F3A  0E00               	movlw	0
  1508   000F3C  6E0A               	movwf	(___flge@ff1+1)^0,c
  1509   000F3E  0E90               	movlw	144
  1510   000F40  6E0B               	movwf	(___flge@ff1+2)^0,c
  1511   000F42  0E40               	movlw	64
  1512   000F44  6E0C               	movwf	(___flge@ff1+3)^0,c
  1513   000F46  EE20 F018          	lfsr	2,24
  1514   000F4A  5021               	movf	motor_response@temp^0,w,c
  1515   000F4C  26D9               	addwf	fsr2l,f,c
  1516   000F4E  5022               	movf	(motor_response@temp+1)^0,w,c
  1517   000F50  22DA               	addwfc	fsr2h,f,c
  1518   000F52  CFDE F00D          	movff	postinc2,___flge@ff2
  1519   000F56  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1520   000F5A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1521   000F5E  CFDE F010          	movff	postinc2,___flge@ff2+3
  1522   000F62  ECF3  F00E         	call	___flge	;wreg free
  1523   000F66  B0D8               	btfsc	status,0,c
  1524   000F68  EFB8  F007         	goto	u1481
  1525   000F6C  EFBA  F007         	goto	u1480
  1526   000F70                     u1481:
  1527   000F70  EF12  F008         	goto	l2675
  1528   000F74                     u1480:
  1529   000F74  EE20 F018          	lfsr	2,24
  1530   000F78  5021               	movf	motor_response@temp^0,w,c
  1531   000F7A  26D9               	addwf	fsr2l,f,c
  1532   000F7C  5022               	movf	(motor_response@temp+1)^0,w,c
  1533   000F7E  22DA               	addwfc	fsr2h,f,c
  1534   000F80  CFDE F009          	movff	postinc2,___flge@ff1
  1535   000F84  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1536   000F88  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1537   000F8C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1538   000F90  0E66               	movlw	102
  1539   000F92  6E0D               	movwf	___flge@ff2^0,c
  1540   000F94  0E66               	movlw	102
  1541   000F96  6E0E               	movwf	(___flge@ff2+1)^0,c
  1542   000F98  0EA6               	movlw	166
  1543   000F9A  6E0F               	movwf	(___flge@ff2+2)^0,c
  1544   000F9C  0E40               	movlw	64
  1545   000F9E  6E10               	movwf	(___flge@ff2+3)^0,c
  1546   000FA0  ECF3  F00E         	call	___flge	;wreg free
  1547   000FA4  B0D8               	btfsc	status,0,c
  1548   000FA6  EFD7  F007         	goto	u1491
  1549   000FAA  EFD9  F007         	goto	u1490
  1550   000FAE                     u1491:
  1551   000FAE  EF12  F008         	goto	l2675
  1552   000FB2                     u1490:
  1553   000FB2                     
  1554                           ;color.c: 144:         for (int j = 0; j <= 15; j++) {
  1555   000FB2  0E00               	movlw	0
  1556   000FB4  6E2C               	movwf	(motor_response@j_554+1)^0,c
  1557   000FB6  0E00               	movlw	0
  1558   000FB8  6E2B               	movwf	motor_response@j_554^0,c
  1559   000FBA                     l2659:
  1560                           
  1561                           ;color.c: 145:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1562   000FBA  0E03               	movlw	3
  1563   000FBC  6E28               	movwf	(??_motor_response+1)^0,c
  1564   000FBE  0E70               	movlw	112
  1565   000FC0  6E27               	movwf	??_motor_response^0,c
  1566   000FC2  0E5C               	movlw	92
  1567   000FC4                     u1867:
  1568   000FC4  2EE8               	decfsz	wreg,f,c
  1569   000FC6  D7FE               	bra	u1867
  1570   000FC8  2E27               	decfsz	??_motor_response^0,f,c
  1571   000FCA  D7FC               	bra	u1867
  1572   000FCC  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1573   000FCE  D7FA               	bra	u1867
  1574   000FD0  D000               	nop2	
  1575   000FD2                     
  1576                           ;color.c: 146:             norm_stop(mL, mR);
  1577   000FD2  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1578   000FD6  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1579   000FDA  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1580   000FDE  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1581   000FE2  EC98  F013         	call	_norm_stop	;wreg free
  1582   000FE6                     
  1583                           ;color.c: 147:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1584   000FE6  0E03               	movlw	3
  1585   000FE8  6E28               	movwf	(??_motor_response+1)^0,c
  1586   000FEA  0E70               	movlw	112
  1587   000FEC  6E27               	movwf	??_motor_response^0,c
  1588   000FEE  0E5C               	movlw	92
  1589   000FF0                     u1877:
  1590   000FF0  2EE8               	decfsz	wreg,f,c
  1591   000FF2  D7FE               	bra	u1877
  1592   000FF4  2E27               	decfsz	??_motor_response^0,f,c
  1593   000FF6  D7FC               	bra	u1877
  1594   000FF8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1595   000FFA  D7FA               	bra	u1877
  1596   000FFC  D000               	nop2	
  1597   000FFE                     
  1598                           ;color.c: 148:         }
  1599   000FFE  4A2B               	infsnz	motor_response@j_554^0,f,c
  1600   001000  2A2C               	incf	(motor_response@j_554+1)^0,f,c
  1601   001002  BE2C               	btfsc	(motor_response@j_554+1)^0,7,c
  1602   001004  EF0D  F008         	goto	u1501
  1603   001008  502C               	movf	(motor_response@j_554+1)^0,w,c
  1604   00100A  E109               	bnz	u1500
  1605   00100C  0E10               	movlw	16
  1606   00100E  5C2B               	subwf	motor_response@j_554^0,w,c
  1607   001010  A0D8               	btfss	status,0,c
  1608   001012  EF0D  F008         	goto	u1501
  1609   001016  EF0F  F008         	goto	u1500
  1610   00101A                     u1501:
  1611   00101A  EFDD  F007         	goto	l2659
  1612   00101E                     u1500:
  1613   00101E                     
  1614                           ;color.c: 149:         return 2;
  1615   00101E  0E02               	movlw	2
  1616   001020  EFE7  F009         	goto	l121
  1617   001024                     l2675:
  1618   001024  0E33               	movlw	51
  1619   001026  6E09               	movwf	___flge@ff1^0,c
  1620   001028  0E33               	movlw	51
  1621   00102A  6E0A               	movwf	(___flge@ff1+1)^0,c
  1622   00102C  0E33               	movlw	51
  1623   00102E  6E0B               	movwf	(___flge@ff1+2)^0,c
  1624   001030  0E40               	movlw	64
  1625   001032  6E0C               	movwf	(___flge@ff1+3)^0,c
  1626   001034  EE20 F018          	lfsr	2,24
  1627   001038  5021               	movf	motor_response@temp^0,w,c
  1628   00103A  26D9               	addwf	fsr2l,f,c
  1629   00103C  5022               	movf	(motor_response@temp+1)^0,w,c
  1630   00103E  22DA               	addwfc	fsr2h,f,c
  1631   001040  CFDE F00D          	movff	postinc2,___flge@ff2
  1632   001044  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1633   001048  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1634   00104C  CFDE F010          	movff	postinc2,___flge@ff2+3
  1635   001050  ECF3  F00E         	call	___flge	;wreg free
  1636   001054  B0D8               	btfsc	status,0,c
  1637   001056  EF2F  F008         	goto	u1511
  1638   00105A  EF31  F008         	goto	u1510
  1639   00105E                     u1511:
  1640   00105E  EF3A  F009         	goto	l2713
  1641   001062                     u1510:
  1642   001062  EE20 F018          	lfsr	2,24
  1643   001066  5021               	movf	motor_response@temp^0,w,c
  1644   001068  26D9               	addwf	fsr2l,f,c
  1645   00106A  5022               	movf	(motor_response@temp+1)^0,w,c
  1646   00106C  22DA               	addwfc	fsr2h,f,c
  1647   00106E  CFDE F009          	movff	postinc2,___flge@ff1
  1648   001072  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1649   001076  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1650   00107A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1651   00107E  0ECD               	movlw	205
  1652   001080  6E0D               	movwf	___flge@ff2^0,c
  1653   001082  0ECC               	movlw	204
  1654   001084  6E0E               	movwf	(___flge@ff2+1)^0,c
  1655   001086  0E4C               	movlw	76
  1656   001088  6E0F               	movwf	(___flge@ff2+2)^0,c
  1657   00108A  0E40               	movlw	64
  1658   00108C  6E10               	movwf	(___flge@ff2+3)^0,c
  1659   00108E  ECF3  F00E         	call	___flge	;wreg free
  1660   001092  B0D8               	btfsc	status,0,c
  1661   001094  EF4E  F008         	goto	u1521
  1662   001098  EF50  F008         	goto	u1520
  1663   00109C                     u1521:
  1664   00109C  EF3A  F009         	goto	l2713
  1665   0010A0                     u1520:
  1666   0010A0  0E33               	movlw	51
  1667   0010A2  6E09               	movwf	___flge@ff1^0,c
  1668   0010A4  0E33               	movlw	51
  1669   0010A6  6E0A               	movwf	(___flge@ff1+1)^0,c
  1670   0010A8  0E33               	movlw	51
  1671   0010AA  6E0B               	movwf	(___flge@ff1+2)^0,c
  1672   0010AC  0E40               	movlw	64
  1673   0010AE  6E0C               	movwf	(___flge@ff1+3)^0,c
  1674   0010B0  EE20 F010          	lfsr	2,16
  1675   0010B4  5021               	movf	motor_response@temp^0,w,c
  1676   0010B6  26D9               	addwf	fsr2l,f,c
  1677   0010B8  5022               	movf	(motor_response@temp+1)^0,w,c
  1678   0010BA  22DA               	addwfc	fsr2h,f,c
  1679   0010BC  CFDE F00D          	movff	postinc2,___flge@ff2
  1680   0010C0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1681   0010C4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1682   0010C8  CFDE F010          	movff	postinc2,___flge@ff2+3
  1683   0010CC  ECF3  F00E         	call	___flge	;wreg free
  1684   0010D0  B0D8               	btfsc	status,0,c
  1685   0010D2  EF6D  F008         	goto	u1531
  1686   0010D6  EF6F  F008         	goto	u1530
  1687   0010DA                     u1531:
  1688   0010DA  EF3A  F009         	goto	l2713
  1689   0010DE                     u1530:
  1690   0010DE  EE20 F010          	lfsr	2,16
  1691   0010E2  5021               	movf	motor_response@temp^0,w,c
  1692   0010E4  26D9               	addwf	fsr2l,f,c
  1693   0010E6  5022               	movf	(motor_response@temp+1)^0,w,c
  1694   0010E8  22DA               	addwfc	fsr2h,f,c
  1695   0010EA  CFDE F009          	movff	postinc2,___flge@ff1
  1696   0010EE  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1697   0010F2  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1698   0010F6  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1699   0010FA  0ECD               	movlw	205
  1700   0010FC  6E0D               	movwf	___flge@ff2^0,c
  1701   0010FE  0ECC               	movlw	204
  1702   001100  6E0E               	movwf	(___flge@ff2+1)^0,c
  1703   001102  0E4C               	movlw	76
  1704   001104  6E0F               	movwf	(___flge@ff2+2)^0,c
  1705   001106  0E40               	movlw	64
  1706   001108  6E10               	movwf	(___flge@ff2+3)^0,c
  1707   00110A  ECF3  F00E         	call	___flge	;wreg free
  1708   00110E  B0D8               	btfsc	status,0,c
  1709   001110  EF8C  F008         	goto	u1541
  1710   001114  EF8E  F008         	goto	u1540
  1711   001118                     u1541:
  1712   001118  EF3A  F009         	goto	l2713
  1713   00111C                     u1540:
  1714   00111C  0E33               	movlw	51
  1715   00111E  6E09               	movwf	___flge@ff1^0,c
  1716   001120  0E33               	movlw	51
  1717   001122  6E0A               	movwf	(___flge@ff1+1)^0,c
  1718   001124  0E33               	movlw	51
  1719   001126  6E0B               	movwf	(___flge@ff1+2)^0,c
  1720   001128  0E40               	movlw	64
  1721   00112A  6E0C               	movwf	(___flge@ff1+3)^0,c
  1722   00112C  EE20 F014          	lfsr	2,20
  1723   001130  5021               	movf	motor_response@temp^0,w,c
  1724   001132  26D9               	addwf	fsr2l,f,c
  1725   001134  5022               	movf	(motor_response@temp+1)^0,w,c
  1726   001136  22DA               	addwfc	fsr2h,f,c
  1727   001138  CFDE F00D          	movff	postinc2,___flge@ff2
  1728   00113C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1729   001140  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1730   001144  CFDE F010          	movff	postinc2,___flge@ff2+3
  1731   001148  ECF3  F00E         	call	___flge	;wreg free
  1732   00114C  B0D8               	btfsc	status,0,c
  1733   00114E  EFAB  F008         	goto	u1551
  1734   001152  EFAD  F008         	goto	u1550
  1735   001156                     u1551:
  1736   001156  EF3A  F009         	goto	l2713
  1737   00115A                     u1550:
  1738   00115A  EE20 F014          	lfsr	2,20
  1739   00115E  5021               	movf	motor_response@temp^0,w,c
  1740   001160  26D9               	addwf	fsr2l,f,c
  1741   001162  5022               	movf	(motor_response@temp+1)^0,w,c
  1742   001164  22DA               	addwfc	fsr2h,f,c
  1743   001166  CFDE F009          	movff	postinc2,___flge@ff1
  1744   00116A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1745   00116E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1746   001172  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1747   001176  0ECD               	movlw	205
  1748   001178  6E0D               	movwf	___flge@ff2^0,c
  1749   00117A  0ECC               	movlw	204
  1750   00117C  6E0E               	movwf	(___flge@ff2+1)^0,c
  1751   00117E  0E4C               	movlw	76
  1752   001180  6E0F               	movwf	(___flge@ff2+2)^0,c
  1753   001182  0E40               	movlw	64
  1754   001184  6E10               	movwf	(___flge@ff2+3)^0,c
  1755   001186  ECF3  F00E         	call	___flge	;wreg free
  1756   00118A  B0D8               	btfsc	status,0,c
  1757   00118C  EFCA  F008         	goto	u1561
  1758   001190  EFCC  F008         	goto	u1560
  1759   001194                     u1561:
  1760   001194  EF3A  F009         	goto	l2713
  1761   001198                     u1560:
  1762   001198                     
  1763                           ;color.c: 152:         reverse(mL,mR);
  1764   001198  C023  F01C         	movff	motor_response@mL,reverse@mL
  1765   00119C  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  1766   0011A0  C025  F01E         	movff	motor_response@mR,reverse@mR
  1767   0011A4  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  1768   0011A8  ECF2  F00F         	call	_reverse	;wreg free
  1769   0011AC                     
  1770                           ;color.c: 153:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1771   0011AC  0E21               	movlw	33
  1772   0011AE  6E28               	movwf	(??_motor_response+1)^0,c
  1773   0011B0  0E78               	movlw	120
  1774   0011B2  6E27               	movwf	??_motor_response^0,c
  1775   0011B4  0E98               	movlw	152
  1776   0011B6                     u1887:
  1777   0011B6  2EE8               	decfsz	wreg,f,c
  1778   0011B8  D7FE               	bra	u1887
  1779   0011BA  2E27               	decfsz	??_motor_response^0,f,c
  1780   0011BC  D7FC               	bra	u1887
  1781   0011BE  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1782   0011C0  D7FA               	bra	u1887
  1783   0011C2  D000               	nop2	
  1784   0011C4                     
  1785                           ;color.c: 154:         norm_stop(mL, mR);
  1786   0011C4  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1787   0011C8  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1788   0011CC  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1789   0011D0  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1790   0011D4  EC98  F013         	call	_norm_stop	;wreg free
  1791                           
  1792                           ;color.c: 155:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1793   0011D8  0E07               	movlw	7
  1794   0011DA  6E28               	movwf	(??_motor_response+1)^0,c
  1795   0011DC  0E7F               	movlw	127
  1796   0011DE  6E27               	movwf	??_motor_response^0,c
  1797   0011E0  0E50               	movlw	80
  1798   0011E2                     u1897:
  1799   0011E2  2EE8               	decfsz	wreg,f,c
  1800   0011E4  D7FE               	bra	u1897
  1801   0011E6  2E27               	decfsz	??_motor_response^0,f,c
  1802   0011E8  D7FC               	bra	u1897
  1803   0011EA  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1804   0011EC  D7FA               	bra	u1897
  1805   0011EE                     
  1806                           ;color.c: 156:         for (int j = 0; j <= 45; j++) {
  1807   0011EE  0E00               	movlw	0
  1808   0011F0  6E2E               	movwf	(motor_response@j_555+1)^0,c
  1809   0011F2  0E00               	movlw	0
  1810   0011F4  6E2D               	movwf	motor_response@j_555^0,c
  1811   0011F6                     l2699:
  1812                           
  1813                           ;color.c: 157:             turnLeft(mL, mR);
  1814   0011F6  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  1815   0011FA  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  1816   0011FE  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  1817   001202  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  1818   001206  ECF9  F011         	call	_turnLeft	;wreg free
  1819   00120A                     
  1820                           ;color.c: 158:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1821   00120A  0E02               	movlw	2
  1822   00120C  6E28               	movwf	(??_motor_response+1)^0,c
  1823   00120E  0EF3               	movlw	243
  1824   001210  6E27               	movwf	??_motor_response^0,c
  1825   001212  0EB0               	movlw	176
  1826   001214                     u1907:
  1827   001214  2EE8               	decfsz	wreg,f,c
  1828   001216  D7FE               	bra	u1907
  1829   001218  2E27               	decfsz	??_motor_response^0,f,c
  1830   00121A  D7FC               	bra	u1907
  1831   00121C  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1832   00121E  D7FA               	bra	u1907
  1833   001220  D000               	nop2	
  1834   001222                     
  1835                           ;color.c: 159:             norm_stop(mL, mR);
  1836   001222  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1837   001226  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1838   00122A  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1839   00122E  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1840   001232  EC98  F013         	call	_norm_stop	;wreg free
  1841                           
  1842                           ;color.c: 160:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1843   001236  0E03               	movlw	3
  1844   001238  6E28               	movwf	(??_motor_response+1)^0,c
  1845   00123A  0E70               	movlw	112
  1846   00123C  6E27               	movwf	??_motor_response^0,c
  1847   00123E  0E5C               	movlw	92
  1848   001240                     u1917:
  1849   001240  2EE8               	decfsz	wreg,f,c
  1850   001242  D7FE               	bra	u1917
  1851   001244  2E27               	decfsz	??_motor_response^0,f,c
  1852   001246  D7FC               	bra	u1917
  1853   001248  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1854   00124A  D7FA               	bra	u1917
  1855   00124C  D000               	nop2	
  1856   00124E                     
  1857                           ;color.c: 161:         }
  1858   00124E  4A2D               	infsnz	motor_response@j_555^0,f,c
  1859   001250  2A2E               	incf	(motor_response@j_555+1)^0,f,c
  1860   001252  BE2E               	btfsc	(motor_response@j_555+1)^0,7,c
  1861   001254  EF35  F009         	goto	u1571
  1862   001258  502E               	movf	(motor_response@j_555+1)^0,w,c
  1863   00125A  E109               	bnz	u1570
  1864   00125C  0E2E               	movlw	46
  1865   00125E  5C2D               	subwf	motor_response@j_555^0,w,c
  1866   001260  A0D8               	btfss	status,0,c
  1867   001262  EF35  F009         	goto	u1571
  1868   001266  EF37  F009         	goto	u1570
  1869   00126A                     u1571:
  1870   00126A  EFFB  F008         	goto	l2699
  1871   00126E                     u1570:
  1872   00126E                     
  1873                           ;color.c: 162:         return 3;
  1874   00126E  0E03               	movlw	3
  1875   001270  EFE7  F009         	goto	l121
  1876   001274                     l2713:
  1877   001274  0E00               	movlw	0
  1878   001276  6E09               	movwf	___flge@ff1^0,c
  1879   001278  0E00               	movlw	0
  1880   00127A  6E0A               	movwf	(___flge@ff1+1)^0,c
  1881   00127C  0E40               	movlw	64
  1882   00127E  6E0B               	movwf	(___flge@ff1+2)^0,c
  1883   001280  0E41               	movlw	65
  1884   001282  6E0C               	movwf	(___flge@ff1+3)^0,c
  1885   001284  EE20 F01C          	lfsr	2,28
  1886   001288  5021               	movf	motor_response@temp^0,w,c
  1887   00128A  26D9               	addwf	fsr2l,f,c
  1888   00128C  5022               	movf	(motor_response@temp+1)^0,w,c
  1889   00128E  22DA               	addwfc	fsr2h,f,c
  1890   001290  CFDE F00D          	movff	postinc2,___flge@ff2
  1891   001294  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1892   001298  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1893   00129C  CFDE F010          	movff	postinc2,___flge@ff2+3
  1894   0012A0  ECF3  F00E         	call	___flge	;wreg free
  1895   0012A4  B0D8               	btfsc	status,0,c
  1896   0012A6  EF57  F009         	goto	u1581
  1897   0012AA  EF59  F009         	goto	u1580
  1898   0012AE                     u1581:
  1899   0012AE  EF99  F007         	goto	l2645
  1900   0012B2                     u1580:
  1901   0012B2                     
  1902                           ;color.c: 218:         motor_return = 1;
  1903   0012B2  0E01               	movlw	1
  1904   0012B4  0100               	movlb	0	; () banked
  1905   0012B6  6FA2               	movwf	_motor_return& (0+255),b
  1906   0012B8                     
  1907                           ; BSR set to: 0
  1908                           ;color.c: 219:         LATHbits.LATH0 = !LATHbits.LATH0;
  1909   0012B8  A080               	btfss	128,0,c	;volatile
  1910   0012BA  EF61  F009         	goto	u1591
  1911   0012BE  EF65  F009         	goto	u1590
  1912   0012C2                     u1591:
  1913   0012C2  6A27               	clrf	??_motor_response^0,c
  1914   0012C4  2A27               	incf	??_motor_response^0,f,c
  1915   0012C6  EF66  F009         	goto	u1608
  1916   0012CA                     u1590:
  1917   0012CA  6A27               	clrf	??_motor_response^0,c
  1918   0012CC                     u1608:
  1919   0012CC  5080               	movf	128,w,c	;volatile
  1920   0012CE  1827               	xorwf	??_motor_response^0,w,c
  1921   0012D0  0BFE               	andlw	-2
  1922   0012D2  1827               	xorwf	??_motor_response^0,w,c
  1923   0012D4  6E80               	movwf	128,c	;volatile
  1924   0012D6                     
  1925                           ;color.c: 220:         reverse(mL,mR);
  1926   0012D6  C023  F01C         	movff	motor_response@mL,reverse@mL
  1927   0012DA  C024  F01D         	movff	motor_response@mL+1,reverse@mL+1
  1928   0012DE  C025  F01E         	movff	motor_response@mR,reverse@mR
  1929   0012E2  C026  F01F         	movff	motor_response@mR+1,reverse@mR+1
  1930   0012E6  ECF2  F00F         	call	_reverse	;wreg free
  1931   0012EA                     
  1932                           ;color.c: 221:         _delay((unsigned long)((400)*(64000000/4000.0)));
  1933   0012EA  0E21               	movlw	33
  1934   0012EC  6E28               	movwf	(??_motor_response+1)^0,c
  1935   0012EE  0E78               	movlw	120
  1936   0012F0  6E27               	movwf	??_motor_response^0,c
  1937   0012F2  0E98               	movlw	152
  1938   0012F4                     u1927:
  1939   0012F4  2EE8               	decfsz	wreg,f,c
  1940   0012F6  D7FE               	bra	u1927
  1941   0012F8  2E27               	decfsz	??_motor_response^0,f,c
  1942   0012FA  D7FC               	bra	u1927
  1943   0012FC  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1944   0012FE  D7FA               	bra	u1927
  1945   001300  D000               	nop2	
  1946   001302                     
  1947                           ;color.c: 222:         norm_stop(mL, mR);
  1948   001302  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1949   001306  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1950   00130A  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  1951   00130E  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1952   001312  EC98  F013         	call	_norm_stop	;wreg free
  1953   001316                     
  1954                           ;color.c: 223:             _delay((unsigned long)((80)*(64000000/4000.0)));
  1955   001316  0E07               	movlw	7
  1956   001318  6E28               	movwf	(??_motor_response+1)^0,c
  1957   00131A  0E7F               	movlw	127
  1958   00131C  6E27               	movwf	??_motor_response^0,c
  1959   00131E  0E50               	movlw	80
  1960   001320                     u1937:
  1961   001320  2EE8               	decfsz	wreg,f,c
  1962   001322  D7FE               	bra	u1937
  1963   001324  2E27               	decfsz	??_motor_response^0,f,c
  1964   001326  D7FC               	bra	u1937
  1965   001328  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1966   00132A  D7FA               	bra	u1937
  1967   00132C                     
  1968                           ;color.c: 224:         for (int j = 0; j <= 45; j++) {
  1969   00132C  0E00               	movlw	0
  1970   00132E  6E30               	movwf	(motor_response@j_560+1)^0,c
  1971   001330  0E00               	movlw	0
  1972   001332  6E2F               	movwf	motor_response@j_560^0,c
  1973   001334                     l2731:
  1974                           
  1975                           ;color.c: 225:             turnLeft(mL, mR);
  1976   001334  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  1977   001338  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  1978   00133C  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  1979   001340  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  1980   001344  ECF9  F011         	call	_turnLeft	;wreg free
  1981   001348                     
  1982                           ;color.c: 226:             _delay((unsigned long)((24)*(64000000/4000.0)));
  1983   001348  0E02               	movlw	2
  1984   00134A  6E28               	movwf	(??_motor_response+1)^0,c
  1985   00134C  0EF3               	movlw	243
  1986   00134E  6E27               	movwf	??_motor_response^0,c
  1987   001350  0EB0               	movlw	176
  1988   001352                     u1947:
  1989   001352  2EE8               	decfsz	wreg,f,c
  1990   001354  D7FE               	bra	u1947
  1991   001356  2E27               	decfsz	??_motor_response^0,f,c
  1992   001358  D7FC               	bra	u1947
  1993   00135A  2E28               	decfsz	(??_motor_response+1)^0,f,c
  1994   00135C  D7FA               	bra	u1947
  1995   00135E  D000               	nop2	
  1996   001360                     
  1997                           ;color.c: 227:             norm_stop(mL, mR);
  1998   001360  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  1999   001364  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2000   001368  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2001   00136C  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2002   001370  EC98  F013         	call	_norm_stop	;wreg free
  2003                           
  2004                           ;color.c: 228:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2005   001374  0E03               	movlw	3
  2006   001376  6E28               	movwf	(??_motor_response+1)^0,c
  2007   001378  0E70               	movlw	112
  2008   00137A  6E27               	movwf	??_motor_response^0,c
  2009   00137C  0E5C               	movlw	92
  2010   00137E                     u1957:
  2011   00137E  2EE8               	decfsz	wreg,f,c
  2012   001380  D7FE               	bra	u1957
  2013   001382  2E27               	decfsz	??_motor_response^0,f,c
  2014   001384  D7FC               	bra	u1957
  2015   001386  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2016   001388  D7FA               	bra	u1957
  2017   00138A  D000               	nop2	
  2018   00138C                     
  2019                           ;color.c: 229:         }
  2020   00138C  4A2F               	infsnz	motor_response@j_560^0,f,c
  2021   00138E  2A30               	incf	(motor_response@j_560+1)^0,f,c
  2022   001390  BE30               	btfsc	(motor_response@j_560+1)^0,7,c
  2023   001392  EFD4  F009         	goto	u1611
  2024   001396  5030               	movf	(motor_response@j_560+1)^0,w,c
  2025   001398  E109               	bnz	u1610
  2026   00139A  0E2E               	movlw	46
  2027   00139C  5C2F               	subwf	motor_response@j_560^0,w,c
  2028   00139E  A0D8               	btfss	status,0,c
  2029   0013A0  EFD4  F009         	goto	u1611
  2030   0013A4  EFD6  F009         	goto	u1610
  2031   0013A8                     u1611:
  2032   0013A8  EF9A  F009         	goto	l2731
  2033   0013AC                     u1610:
  2034   0013AC                     
  2035                           ;color.c: 230:         fullSpeedAhead(&mL, &mR);
  2036   0013AC  0E23               	movlw	low motor_response@mL
  2037   0013AE  6E1C               	movwf	fullSpeedAhead@mL^0,c
  2038   0013B0  0E00               	movlw	high motor_response@mL
  2039   0013B2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  2040   0013B4  0E25               	movlw	low motor_response@mR
  2041   0013B6  6E1E               	movwf	fullSpeedAhead@mR^0,c
  2042   0013B8  0E00               	movlw	high motor_response@mR
  2043   0013BA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  2044   0013BC  EC6E  F010         	call	_fullSpeedAhead	;wreg free
  2045   0013C0                     
  2046                           ;color.c: 231:         ctr=ctr-1;
  2047   0013C0  0EFF               	movlw	255
  2048   0013C2  244F               	addwf	_ctr^0,w,c
  2049   0013C4  6E4F               	movwf	_ctr^0,c
  2050   0013C6  0EFF               	movlw	255
  2051   0013C8  2050               	addwfc	(_ctr+1)^0,w,c
  2052   0013CA  6E50               	movwf	(_ctr+1)^0,c
  2053   0013CC                     
  2054                           ;color.c: 232:         return 8;
  2055   0013CC  0E08               	movlw	8
  2056   0013CE                     l121:
  2057   0013CE  0012               	return		;funcret
  2058   0013D0                     __end_of_motor_response:
  2059                           	callstack 0
  2060                           
  2061 ;; *************** function _turnRight *****************
  2062 ;; Defined at:
  2063 ;;		line 144 in file "dc_motor.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2066 ;;		 -> main@mR(9), main@mL(9), 
  2067 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2068 ;;		 -> main@mR(9), main@mL(9), 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;		None
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2083 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2084 ;;Total ram usage:        4 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; Hardware stack levels required when called: 8
  2087 ;; This function calls:
  2088 ;;		_setMotorPWM
  2089 ;; This function is called by:
  2090 ;;		_motor_response
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           	psect	text5
  2095   002380                     __ptext5:
  2096                           	callstack 0
  2097   002380                     _turnRight:
  2098                           	callstack 21
  2099   002380                     
  2100                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  2101   002380  C01C  FFD9         	movff	turnRight@mL,fsr2l
  2102   002384  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  2103   002388  0E3C               	movlw	60
  2104   00238A  6EDF               	movwf	indf2,c
  2105                           
  2106                           ;dc_motor.c: 147:     mR->power = 60;
  2107   00238C  C01E  FFD9         	movff	turnRight@mR,fsr2l
  2108   002390  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  2109   002394  0E3C               	movlw	60
  2110   002396  6EDF               	movwf	indf2,c
  2111   002398                     
  2112                           ;dc_motor.c: 148:     mL->brakemode = 1;
  2113   002398  EE20 F002          	lfsr	2,2
  2114   00239C  501C               	movf	turnRight@mL^0,w,c
  2115   00239E  26D9               	addwf	fsr2l,f,c
  2116   0023A0  501D               	movf	(turnRight@mL+1)^0,w,c
  2117   0023A2  22DA               	addwfc	fsr2h,f,c
  2118   0023A4  0E01               	movlw	1
  2119   0023A6  6EDF               	movwf	indf2,c
  2120   0023A8                     
  2121                           ;dc_motor.c: 149:     mR->brakemode = 1;
  2122   0023A8  EE20 F002          	lfsr	2,2
  2123   0023AC  501E               	movf	turnRight@mR^0,w,c
  2124   0023AE  26D9               	addwf	fsr2l,f,c
  2125   0023B0  501F               	movf	(turnRight@mR+1)^0,w,c
  2126   0023B2  22DA               	addwfc	fsr2h,f,c
  2127   0023B4  0E01               	movlw	1
  2128   0023B6  6EDF               	movwf	indf2,c
  2129   0023B8                     
  2130                           ;dc_motor.c: 150:     mR->direction = 0;
  2131   0023B8  EE20 F001          	lfsr	2,1
  2132   0023BC  501E               	movf	turnRight@mR^0,w,c
  2133   0023BE  26D9               	addwf	fsr2l,f,c
  2134   0023C0  501F               	movf	(turnRight@mR+1)^0,w,c
  2135   0023C2  22DA               	addwfc	fsr2h,f,c
  2136   0023C4  0E00               	movlw	0
  2137   0023C6  6EDF               	movwf	indf2,c
  2138   0023C8                     
  2139                           ;dc_motor.c: 151:     mL->direction = 1;
  2140   0023C8  EE20 F001          	lfsr	2,1
  2141   0023CC  501C               	movf	turnRight@mL^0,w,c
  2142   0023CE  26D9               	addwf	fsr2l,f,c
  2143   0023D0  501D               	movf	(turnRight@mL+1)^0,w,c
  2144   0023D2  22DA               	addwfc	fsr2h,f,c
  2145   0023D4  0E01               	movlw	1
  2146   0023D6  6EDF               	movwf	indf2,c
  2147   0023D8                     
  2148                           ;dc_motor.c: 152:     setMotorPWM(mL);
  2149   0023D8  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  2150   0023DC  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  2151   0023E0  EC94  F00D         	call	_setMotorPWM	;wreg free
  2152   0023E4                     
  2153                           ;dc_motor.c: 153:     setMotorPWM(mR);
  2154   0023E4  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  2155   0023E8  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  2156   0023EC  EC94  F00D         	call	_setMotorPWM	;wreg free
  2157   0023F0  0012               	return		;funcret
  2158   0023F2                     __end_of_turnRight:
  2159                           	callstack 0
  2160                           
  2161 ;; *************** function _turnLeft *****************
  2162 ;; Defined at:
  2163 ;;		line 131 in file "dc_motor.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2166 ;;		 -> main@mR(9), main@mL(9), 
  2167 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2168 ;;		 -> main@mR(9), main@mL(9), 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2180 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2184 ;;Total ram usage:        4 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 8
  2187 ;; This function calls:
  2188 ;;		_setMotorPWM
  2189 ;; This function is called by:
  2190 ;;		_motor_response
  2191 ;;		_motor_retrace
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text6
  2196   0023F2                     __ptext6:
  2197                           	callstack 0
  2198   0023F2                     _turnLeft:
  2199                           	callstack 21
  2200   0023F2                     
  2201                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  2202   0023F2  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  2203   0023F6  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  2204   0023FA  0E3C               	movlw	60
  2205   0023FC  6EDF               	movwf	indf2,c
  2206                           
  2207                           ;dc_motor.c: 134:     mR->power = 60;
  2208   0023FE  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  2209   002402  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  2210   002406  0E3C               	movlw	60
  2211   002408  6EDF               	movwf	indf2,c
  2212   00240A                     
  2213                           ;dc_motor.c: 135:     mL->brakemode = 1;
  2214   00240A  EE20 F002          	lfsr	2,2
  2215   00240E  501C               	movf	turnLeft@mL^0,w,c
  2216   002410  26D9               	addwf	fsr2l,f,c
  2217   002412  501D               	movf	(turnLeft@mL+1)^0,w,c
  2218   002414  22DA               	addwfc	fsr2h,f,c
  2219   002416  0E01               	movlw	1
  2220   002418  6EDF               	movwf	indf2,c
  2221   00241A                     
  2222                           ;dc_motor.c: 136:     mR->brakemode = 1;
  2223   00241A  EE20 F002          	lfsr	2,2
  2224   00241E  501E               	movf	turnLeft@mR^0,w,c
  2225   002420  26D9               	addwf	fsr2l,f,c
  2226   002422  501F               	movf	(turnLeft@mR+1)^0,w,c
  2227   002424  22DA               	addwfc	fsr2h,f,c
  2228   002426  0E01               	movlw	1
  2229   002428  6EDF               	movwf	indf2,c
  2230   00242A                     
  2231                           ;dc_motor.c: 137:     mL->direction = 0;
  2232   00242A  EE20 F001          	lfsr	2,1
  2233   00242E  501C               	movf	turnLeft@mL^0,w,c
  2234   002430  26D9               	addwf	fsr2l,f,c
  2235   002432  501D               	movf	(turnLeft@mL+1)^0,w,c
  2236   002434  22DA               	addwfc	fsr2h,f,c
  2237   002436  0E00               	movlw	0
  2238   002438  6EDF               	movwf	indf2,c
  2239   00243A                     
  2240                           ;dc_motor.c: 138:     mR->direction = 1;
  2241   00243A  EE20 F001          	lfsr	2,1
  2242   00243E  501E               	movf	turnLeft@mR^0,w,c
  2243   002440  26D9               	addwf	fsr2l,f,c
  2244   002442  501F               	movf	(turnLeft@mR+1)^0,w,c
  2245   002444  22DA               	addwfc	fsr2h,f,c
  2246   002446  0E01               	movlw	1
  2247   002448  6EDF               	movwf	indf2,c
  2248   00244A                     
  2249                           ;dc_motor.c: 139:     setMotorPWM(mL);
  2250   00244A  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  2251   00244E  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2252   002452  EC94  F00D         	call	_setMotorPWM	;wreg free
  2253   002456                     
  2254                           ;dc_motor.c: 140:     setMotorPWM(mR);
  2255   002456  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  2256   00245A  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2257   00245E  EC94  F00D         	call	_setMotorPWM	;wreg free
  2258   002462  0012               	return		;funcret
  2259   002464                     __end_of_turnLeft:
  2260                           	callstack 0
  2261                           
  2262 ;; *************** function _reverse *****************
  2263 ;; Defined at:
  2264 ;;		line 189 in file "dc_motor.c"
  2265 ;; Parameters:    Size  Location     Type
  2266 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2267 ;;		 -> main@mR(9), main@mL(9), 
  2268 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2269 ;;		 -> main@mR(9), main@mL(9), 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2281 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2283 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2285 ;;Total ram usage:        5 bytes
  2286 ;; Hardware stack levels used: 1
  2287 ;; Hardware stack levels required when called: 8
  2288 ;; This function calls:
  2289 ;;		_setMotorPWM
  2290 ;; This function is called by:
  2291 ;;		_motor_response
  2292 ;;		_motor_retrace
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text7
  2297   001FE4                     __ptext7:
  2298                           	callstack 0
  2299   001FE4                     _reverse:
  2300                           	callstack 21
  2301   001FE4                     
  2302                           ;dc_motor.c: 189: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 190: {;dc_motor.c
      +                          : 191:     mL->power = 5;
  2303   001FE4  C01C  FFD9         	movff	reverse@mL,fsr2l
  2304   001FE8  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  2305   001FEC  0E05               	movlw	5
  2306   001FEE  6EDF               	movwf	indf2,c
  2307                           
  2308                           ;dc_motor.c: 192:     mR->power = 5;
  2309   001FF0  C01E  FFD9         	movff	reverse@mR,fsr2l
  2310   001FF4  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  2311   001FF8  0E05               	movlw	5
  2312   001FFA  6EDF               	movwf	indf2,c
  2313   001FFC                     
  2314                           ;dc_motor.c: 193:     mR->direction = 0;
  2315   001FFC  EE20 F001          	lfsr	2,1
  2316   002000  501E               	movf	reverse@mR^0,w,c
  2317   002002  26D9               	addwf	fsr2l,f,c
  2318   002004  501F               	movf	(reverse@mR+1)^0,w,c
  2319   002006  22DA               	addwfc	fsr2h,f,c
  2320   002008  0E00               	movlw	0
  2321   00200A  6EDF               	movwf	indf2,c
  2322   00200C                     
  2323                           ;dc_motor.c: 194:     mL->direction = 0;
  2324   00200C  EE20 F001          	lfsr	2,1
  2325   002010  501C               	movf	reverse@mL^0,w,c
  2326   002012  26D9               	addwf	fsr2l,f,c
  2327   002014  501D               	movf	(reverse@mL+1)^0,w,c
  2328   002016  22DA               	addwfc	fsr2h,f,c
  2329   002018  0E00               	movlw	0
  2330   00201A  6EDF               	movwf	indf2,c
  2331   00201C                     
  2332                           ;dc_motor.c: 195:     mL->brakemode = 1;
  2333   00201C  EE20 F002          	lfsr	2,2
  2334   002020  501C               	movf	reverse@mL^0,w,c
  2335   002022  26D9               	addwf	fsr2l,f,c
  2336   002024  501D               	movf	(reverse@mL+1)^0,w,c
  2337   002026  22DA               	addwfc	fsr2h,f,c
  2338   002028  0E01               	movlw	1
  2339   00202A  6EDF               	movwf	indf2,c
  2340   00202C                     
  2341                           ;dc_motor.c: 196:     mR->brakemode = 1;
  2342   00202C  EE20 F002          	lfsr	2,2
  2343   002030  501E               	movf	reverse@mR^0,w,c
  2344   002032  26D9               	addwf	fsr2l,f,c
  2345   002034  501F               	movf	(reverse@mR+1)^0,w,c
  2346   002036  22DA               	addwfc	fsr2h,f,c
  2347   002038  0E01               	movlw	1
  2348   00203A  6EDF               	movwf	indf2,c
  2349                           
  2350                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  2351   00203C  EF3D  F010         	goto	l591
  2352   002040                     l2315:
  2353                           
  2354                           ;dc_motor.c: 198:     {;dc_motor.c: 199:         mL->power++;
  2355   002040  C01C  FFD9         	movff	reverse@mL,fsr2l
  2356   002044  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  2357   002048  2ADF               	incf	indf2,f,c
  2358                           
  2359                           ;dc_motor.c: 200:         mR->power++;
  2360   00204A  C01E  FFD9         	movff	reverse@mR,fsr2l
  2361   00204E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  2362   002052  2ADF               	incf	indf2,f,c
  2363   002054                     
  2364                           ;dc_motor.c: 201:         _delay((unsigned long)((10)*(64000000/4000.0)));
  2365   002054  0ED0               	movlw	208
  2366   002056  6E20               	movwf	??_reverse^0,c
  2367   002058  0ECA               	movlw	202
  2368   00205A                     u1967:
  2369   00205A  2EE8               	decfsz	wreg,f,c
  2370   00205C  D7FE               	bra	u1967
  2371   00205E  2E20               	decfsz	??_reverse^0,f,c
  2372   002060  D7FC               	bra	u1967
  2373   002062                     
  2374                           ;dc_motor.c: 202:         setMotorPWM(mL);
  2375   002062  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  2376   002066  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  2377   00206A  EC94  F00D         	call	_setMotorPWM	;wreg free
  2378   00206E                     
  2379                           ;dc_motor.c: 203:         setMotorPWM(mR);
  2380   00206E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  2381   002072  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  2382   002076  EC94  F00D         	call	_setMotorPWM	;wreg free
  2383   00207A                     l591:
  2384                           
  2385                           ;dc_motor.c: 197:     while (mL->power <= 20 && mR->power <=20)
  2386   00207A  C01C  FFD9         	movff	reverse@mL,fsr2l
  2387   00207E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  2388   002082  0E15               	movlw	21
  2389   002084  60DF               	cpfslt	indf2,c
  2390   002086  EF47  F010         	goto	u1041
  2391   00208A  EF49  F010         	goto	u1040
  2392   00208E                     u1041:
  2393   00208E  EF55  F010         	goto	l2325
  2394   002092                     u1040:
  2395   002092  C01E  FFD9         	movff	reverse@mR,fsr2l
  2396   002096  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  2397   00209A  0E14               	movlw	20
  2398   00209C  64DF               	cpfsgt	indf2,c
  2399   00209E  EF53  F010         	goto	u1051
  2400   0020A2  EF55  F010         	goto	u1050
  2401   0020A6                     u1051:
  2402   0020A6  EF20  F010         	goto	l2315
  2403   0020AA                     u1050:
  2404   0020AA                     l2325:
  2405                           
  2406                           ;dc_motor.c: 205:     mL->power = 20;
  2407   0020AA  C01C  FFD9         	movff	reverse@mL,fsr2l
  2408   0020AE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  2409   0020B2  0E14               	movlw	20
  2410   0020B4  6EDF               	movwf	indf2,c
  2411                           
  2412                           ;dc_motor.c: 206:     mR->power = 20;
  2413   0020B6  C01E  FFD9         	movff	reverse@mR,fsr2l
  2414   0020BA  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  2415   0020BE  0E14               	movlw	20
  2416   0020C0  6EDF               	movwf	indf2,c
  2417   0020C2                     
  2418                           ;dc_motor.c: 207:     setMotorPWM(mL);
  2419   0020C2  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  2420   0020C6  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  2421   0020CA  EC94  F00D         	call	_setMotorPWM	;wreg free
  2422   0020CE                     
  2423                           ;dc_motor.c: 208:     setMotorPWM(mR);
  2424   0020CE  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  2425   0020D2  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  2426   0020D6  EC94  F00D         	call	_setMotorPWM	;wreg free
  2427   0020DA  0012               	return		;funcret
  2428   0020DC                     __end_of_reverse:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _norm_stop *****************
  2432 ;; Defined at:
  2433 ;;		line 118 in file "dc_motor.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2436 ;;		 -> main@mR(9), main@mL(9), 
  2437 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2438 ;;		 -> main@mR(9), main@mL(9), 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;		None
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2453 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2454 ;;Total ram usage:        4 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; Hardware stack levels required when called: 8
  2457 ;; This function calls:
  2458 ;;		_setMotorPWM
  2459 ;; This function is called by:
  2460 ;;		_motor_response
  2461 ;;		_motor_retrace
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text8
  2467   002730                     __ptext8:
  2468                           	callstack 0
  2469   002730                     _norm_stop:
  2470                           	callstack 22
  2471   002730                     
  2472                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  2473   002730  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  2474   002734  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  2475   002738  0E00               	movlw	0
  2476   00273A  6EDF               	movwf	indf2,c
  2477                           
  2478                           ;dc_motor.c: 125:     mR->power = 0;
  2479   00273C  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  2480   002740  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  2481   002744  0E00               	movlw	0
  2482   002746  6EDF               	movwf	indf2,c
  2483   002748                     
  2484                           ;dc_motor.c: 126:     setMotorPWM(mL);
  2485   002748  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  2486   00274C  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  2487   002750  EC94  F00D         	call	_setMotorPWM	;wreg free
  2488   002754                     
  2489                           ;dc_motor.c: 127:     setMotorPWM(mR);
  2490   002754  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  2491   002758  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  2492   00275C  EC94  F00D         	call	_setMotorPWM	;wreg free
  2493   002760  0012               	return		;funcret
  2494   002762                     __end_of_norm_stop:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _fullSpeedAhead *****************
  2498 ;; Defined at:
  2499 ;;		line 167 in file "dc_motor.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2502 ;;		 -> main@mL(9), motor_response@mL(2), 
  2503 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2504 ;;		 -> main@mR(9), motor_response@mR(2), 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;		None
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  1    wreg      void 
  2509 ;; Registers used:
  2510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2516 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2518 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2519 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2520 ;;Total ram usage:        5 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 8
  2523 ;; This function calls:
  2524 ;;		_setMotorPWM
  2525 ;; This function is called by:
  2526 ;;		_motor_response
  2527 ;;		_main
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text9
  2532   0020DC                     __ptext9:
  2533                           	callstack 0
  2534   0020DC                     _fullSpeedAhead:
  2535                           	callstack 21
  2536   0020DC                     
  2537                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power =5;
  2538   0020DC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2539   0020E0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2540   0020E4  0E05               	movlw	5
  2541   0020E6  6EDF               	movwf	indf2,c
  2542                           
  2543                           ;dc_motor.c: 170:     mR->power = 5;
  2544   0020E8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2545   0020EC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2546   0020F0  0E05               	movlw	5
  2547   0020F2  6EDF               	movwf	indf2,c
  2548   0020F4                     
  2549                           ;dc_motor.c: 171:     mR->direction = 1;
  2550   0020F4  EE20 F001          	lfsr	2,1
  2551   0020F8  501E               	movf	fullSpeedAhead@mR^0,w,c
  2552   0020FA  26D9               	addwf	fsr2l,f,c
  2553   0020FC  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2554   0020FE  22DA               	addwfc	fsr2h,f,c
  2555   002100  0E01               	movlw	1
  2556   002102  6EDF               	movwf	indf2,c
  2557   002104                     
  2558                           ;dc_motor.c: 172:     mL->direction = 1;
  2559   002104  EE20 F001          	lfsr	2,1
  2560   002108  501C               	movf	fullSpeedAhead@mL^0,w,c
  2561   00210A  26D9               	addwf	fsr2l,f,c
  2562   00210C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2563   00210E  22DA               	addwfc	fsr2h,f,c
  2564   002110  0E01               	movlw	1
  2565   002112  6EDF               	movwf	indf2,c
  2566   002114                     
  2567                           ;dc_motor.c: 173:     mL->brakemode = 1;
  2568   002114  EE20 F002          	lfsr	2,2
  2569   002118  501C               	movf	fullSpeedAhead@mL^0,w,c
  2570   00211A  26D9               	addwf	fsr2l,f,c
  2571   00211C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2572   00211E  22DA               	addwfc	fsr2h,f,c
  2573   002120  0E01               	movlw	1
  2574   002122  6EDF               	movwf	indf2,c
  2575   002124                     
  2576                           ;dc_motor.c: 174:     mR->brakemode = 1;
  2577   002124  EE20 F002          	lfsr	2,2
  2578   002128  501E               	movf	fullSpeedAhead@mR^0,w,c
  2579   00212A  26D9               	addwf	fsr2l,f,c
  2580   00212C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2581   00212E  22DA               	addwfc	fsr2h,f,c
  2582   002130  0E01               	movlw	1
  2583   002132  6EDF               	movwf	indf2,c
  2584                           
  2585                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  2586   002134  EFB2  F010         	goto	l2381
  2587   002138                     l2375:
  2588                           
  2589                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  2590   002138  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2591   00213C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2592   002140  2ADF               	incf	indf2,f,c
  2593                           
  2594                           ;dc_motor.c: 178:         mR->power++;
  2595   002142  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2596   002146  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2597   00214A  2ADF               	incf	indf2,f,c
  2598   00214C                     
  2599                           ;dc_motor.c: 180:         setMotorPWM(mL);
  2600   00214C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2601   002150  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2602   002154  EC94  F00D         	call	_setMotorPWM	;wreg free
  2603   002158                     
  2604                           ;dc_motor.c: 181:         setMotorPWM(mR);
  2605   002158  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2606   00215C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2607   002160  EC94  F00D         	call	_setMotorPWM	;wreg free
  2608   002164                     l2381:
  2609                           
  2610                           ;dc_motor.c: 175:     while (mL->power <= 45 && mR->power <=45)
  2611   002164  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2612   002168  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2613   00216C  0E2E               	movlw	46
  2614   00216E  60DF               	cpfslt	indf2,c
  2615   002170  EFBC  F010         	goto	u1061
  2616   002174  EFBE  F010         	goto	u1060
  2617   002178                     u1061:
  2618   002178  EFCA  F010         	goto	l2385
  2619   00217C                     u1060:
  2620   00217C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2621   002180  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2622   002184  0E2D               	movlw	45
  2623   002186  64DF               	cpfsgt	indf2,c
  2624   002188  EFC8  F010         	goto	u1071
  2625   00218C  EFCA  F010         	goto	u1070
  2626   002190                     u1071:
  2627   002190  EF9C  F010         	goto	l2375
  2628   002194                     u1070:
  2629   002194                     l2385:
  2630                           
  2631                           ;dc_motor.c: 183:     mL->power = 45;
  2632   002194  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2633   002198  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2634   00219C  0E2D               	movlw	45
  2635   00219E  6EDF               	movwf	indf2,c
  2636                           
  2637                           ;dc_motor.c: 184:     mR->power = 45;
  2638   0021A0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2639   0021A4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2640   0021A8  0E2D               	movlw	45
  2641   0021AA  6EDF               	movwf	indf2,c
  2642   0021AC                     
  2643                           ;dc_motor.c: 185:     setMotorPWM(mL);
  2644   0021AC  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2645   0021B0  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2646   0021B4  EC94  F00D         	call	_setMotorPWM	;wreg free
  2647   0021B8                     
  2648                           ;dc_motor.c: 186:     setMotorPWM(mR);
  2649   0021B8  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2650   0021BC  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2651   0021C0  EC94  F00D         	call	_setMotorPWM	;wreg free
  2652   0021C4  0012               	return		;funcret
  2653   0021C6                     __end_of_fullSpeedAhead:
  2654                           	callstack 0
  2655                           
  2656 ;; *************** function _setMotorPWM *****************
  2657 ;; Defined at:
  2658 ;;		line 56 in file "dc_motor.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  m               2   21[COMRAM] PTR struct DC_motor
  2661 ;;		 -> main@mR(9), main@mL(9), motor_response@mR(2), motor_response@mL(2), 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  negDuty         1   26[COMRAM] unsigned char 
  2664 ;;  posDuty         1   25[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2674 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2675 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2676 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2677 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2678 ;;Total ram usage:        6 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 7
  2681 ;; This function calls:
  2682 ;;		___lwdiv
  2683 ;;		___wmul
  2684 ;; This function is called by:
  2685 ;;		_norm_stop
  2686 ;;		_turnLeft
  2687 ;;		_turnRight
  2688 ;;		_fullSpeedAhead
  2689 ;;		_reverse
  2690 ;;		_stop
  2691 ;;		_uturn
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           	psect	text10
  2696   001B28                     __ptext10:
  2697                           	callstack 0
  2698   001B28                     _setMotorPWM:
  2699                           	callstack 22
  2700   001B28                     
  2701                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  2702   001B28  EE20 F002          	lfsr	2,2
  2703   001B2C  5016               	movf	setMotorPWM@m^0,w,c
  2704   001B2E  26D9               	addwf	fsr2l,f,c
  2705   001B30  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2706   001B32  22DA               	addwfc	fsr2h,f,c
  2707   001B34  50DF               	movf	indf2,w,c
  2708   001B36  B4D8               	btfsc	status,2,c
  2709   001B38  EFA0  F00D         	goto	u1021
  2710   001B3C  EFA2  F00D         	goto	u1020
  2711   001B40                     u1021:
  2712   001B40  EFD6  F00D         	goto	l2255
  2713   001B44                     u1020:
  2714   001B44                     
  2715                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2716   001B44  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2717   001B48  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2718   001B4C  50DF               	movf	indf2,w,c
  2719   001B4E  6E18               	movwf	??_setMotorPWM^0,c
  2720   001B50  5018               	movf	??_setMotorPWM^0,w,c
  2721   001B52  6E09               	movwf	___wmul@multiplier^0,c
  2722   001B54  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2723   001B56  EE20 F003          	lfsr	2,3
  2724   001B5A  5016               	movf	setMotorPWM@m^0,w,c
  2725   001B5C  26D9               	addwf	fsr2l,f,c
  2726   001B5E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2727   001B60  22DA               	addwfc	fsr2h,f,c
  2728   001B62  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2729   001B66  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2730   001B6A  EC31  F014         	call	___wmul	;wreg free
  2731   001B6E  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2732   001B72  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2733   001B76  0E00               	movlw	0
  2734   001B78  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2735   001B7A  0E64               	movlw	100
  2736   001B7C  6E11               	movwf	___lwdiv@divisor^0,c
  2737   001B7E  EC86  F011         	call	___lwdiv	;wreg free
  2738   001B82  EE20 F003          	lfsr	2,3
  2739   001B86  5016               	movf	setMotorPWM@m^0,w,c
  2740   001B88  26D9               	addwf	fsr2l,f,c
  2741   001B8A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2742   001B8C  22DA               	addwfc	fsr2h,f,c
  2743   001B8E  50DF               	movf	indf2,w,c
  2744   001B90  6E19               	movwf	(??_setMotorPWM+1)^0,c
  2745   001B92  500F               	movf	?___lwdiv^0,w,c
  2746   001B94  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  2747   001B96  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2748   001B98                     
  2749                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  2750   001B98  EE20 F003          	lfsr	2,3
  2751   001B9C  5016               	movf	setMotorPWM@m^0,w,c
  2752   001B9E  26D9               	addwf	fsr2l,f,c
  2753   001BA0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2754   001BA2  22DA               	addwfc	fsr2h,f,c
  2755   001BA4  50DF               	movf	indf2,w,c
  2756   001BA6  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2757                           
  2758                           ;dc_motor.c: 63:     }
  2759   001BA8  EFF9  F00D         	goto	l2259
  2760   001BAC                     l2255:
  2761                           
  2762                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2763   001BAC  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2764   001BB0  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2765   001BB4  50DF               	movf	indf2,w,c
  2766   001BB6  6E18               	movwf	??_setMotorPWM^0,c
  2767   001BB8  5018               	movf	??_setMotorPWM^0,w,c
  2768   001BBA  6E09               	movwf	___wmul@multiplier^0,c
  2769   001BBC  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2770   001BBE  EE20 F003          	lfsr	2,3
  2771   001BC2  5016               	movf	setMotorPWM@m^0,w,c
  2772   001BC4  26D9               	addwf	fsr2l,f,c
  2773   001BC6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2774   001BC8  22DA               	addwfc	fsr2h,f,c
  2775   001BCA  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2776   001BCE  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2777   001BD2  EC31  F014         	call	___wmul	;wreg free
  2778   001BD6  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2779   001BDA  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2780   001BDE  0E00               	movlw	0
  2781   001BE0  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2782   001BE2  0E64               	movlw	100
  2783   001BE4  6E11               	movwf	___lwdiv@divisor^0,c
  2784   001BE6  EC86  F011         	call	___lwdiv	;wreg free
  2785   001BEA  500F               	movf	?___lwdiv^0,w,c
  2786   001BEC  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2787   001BEE                     
  2788                           ;dc_motor.c: 66:         negDuty=0;
  2789   001BEE  0E00               	movlw	0
  2790   001BF0  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2791   001BF2                     l2259:
  2792                           
  2793                           ;dc_motor.c: 69:     if (m->direction) {
  2794   001BF2  EE20 F001          	lfsr	2,1
  2795   001BF6  5016               	movf	setMotorPWM@m^0,w,c
  2796   001BF8  26D9               	addwf	fsr2l,f,c
  2797   001BFA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2798   001BFC  22DA               	addwfc	fsr2h,f,c
  2799   001BFE  50DF               	movf	indf2,w,c
  2800   001C00  B4D8               	btfsc	status,2,c
  2801   001C02  EF05  F00E         	goto	u1031
  2802   001C06  EF07  F00E         	goto	u1030
  2803   001C0A                     u1031:
  2804   001C0A  EF29  F00E         	goto	l2263
  2805   001C0E                     u1030:
  2806   001C0E                     
  2807                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  2808   001C0E  EE20 F005          	lfsr	2,5
  2809   001C12  5016               	movf	setMotorPWM@m^0,w,c
  2810   001C14  26D9               	addwf	fsr2l,f,c
  2811   001C16  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2812   001C18  22DA               	addwfc	fsr2h,f,c
  2813   001C1A  CFDE F018          	movff	postinc2,??_setMotorPWM
  2814   001C1E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2815   001C22  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2816   001C26  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2817   001C2A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2818                           
  2819                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  2820   001C2E  EE20 F007          	lfsr	2,7
  2821   001C32  5016               	movf	setMotorPWM@m^0,w,c
  2822   001C34  26D9               	addwf	fsr2l,f,c
  2823   001C36  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2824   001C38  22DA               	addwfc	fsr2h,f,c
  2825   001C3A  CFDE F018          	movff	postinc2,??_setMotorPWM
  2826   001C3E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2827   001C42  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2828   001C46  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2829   001C4A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2830                           
  2831                           ;dc_motor.c: 72:     } else {
  2832   001C4E  EF49  F00E         	goto	l554
  2833   001C52                     l2263:
  2834                           
  2835                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  2836   001C52  EE20 F005          	lfsr	2,5
  2837   001C56  5016               	movf	setMotorPWM@m^0,w,c
  2838   001C58  26D9               	addwf	fsr2l,f,c
  2839   001C5A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2840   001C5C  22DA               	addwfc	fsr2h,f,c
  2841   001C5E  CFDE F018          	movff	postinc2,??_setMotorPWM
  2842   001C62  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2843   001C66  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2844   001C6A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2845   001C6E  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2846                           
  2847                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  2848   001C72  EE20 F007          	lfsr	2,7
  2849   001C76  5016               	movf	setMotorPWM@m^0,w,c
  2850   001C78  26D9               	addwf	fsr2l,f,c
  2851   001C7A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2852   001C7C  22DA               	addwfc	fsr2h,f,c
  2853   001C7E  CFDE F018          	movff	postinc2,??_setMotorPWM
  2854   001C82  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2855   001C86  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2856   001C8A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2857   001C8E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2858   001C92                     l554:
  2859   001C92  0012               	return		;funcret
  2860   001C94                     __end_of_setMotorPWM:
  2861                           	callstack 0
  2862                           
  2863 ;; *************** function ___wmul *****************
  2864 ;; Defined at:
  2865 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2866 ;; Parameters:    Size  Location     Type
  2867 ;;  multiplier      2    8[COMRAM] unsigned int 
  2868 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  product         2   12[COMRAM] unsigned int 
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  2    8[COMRAM] unsigned int 
  2873 ;; Registers used:
  2874 ;;		wreg, status,2, status,0, prodl, prodh
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2884 ;;Total ram usage:        6 bytes
  2885 ;; Hardware stack levels used: 1
  2886 ;; Hardware stack levels required when called: 6
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		_setMotorPWM
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text11
  2895   002862                     __ptext11:
  2896                           	callstack 0
  2897   002862                     ___wmul:
  2898                           	callstack 22
  2899   002862  5009               	movf	___wmul@multiplier^0,w,c
  2900   002864  020B               	mulwf	___wmul@multiplicand^0,c
  2901   002866  CFF3 F00D          	movff	prodl,___wmul@product
  2902   00286A  CFF4 F00E          	movff	prodh,___wmul@product+1
  2903   00286E  5009               	movf	___wmul@multiplier^0,w,c
  2904   002870  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  2905   002872  50F3               	movf	243,w,c
  2906   002874  260E               	addwf	(___wmul@product+1)^0,f,c
  2907   002876  500A               	movf	(___wmul@multiplier+1)^0,w,c
  2908   002878  020B               	mulwf	___wmul@multiplicand^0,c
  2909   00287A  50F3               	movf	243,w,c
  2910   00287C  260E               	addwf	(___wmul@product+1)^0,f,c
  2911   00287E  C00D  F009         	movff	___wmul@product,?___wmul
  2912   002882  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  2913   002886  0012               	return		;funcret
  2914   002888                     __end_of___wmul:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function ___lwdiv *****************
  2918 ;; Defined at:
  2919 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  dividend        2   14[COMRAM] unsigned int 
  2922 ;;  divisor         2   16[COMRAM] unsigned int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  quotient        2   18[COMRAM] unsigned int 
  2925 ;;  counter         1   20[COMRAM] unsigned char 
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2   14[COMRAM] unsigned int 
  2928 ;; Registers used:
  2929 ;;		wreg, status,2, status,0
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        7 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 6
  2942 ;; This function calls:
  2943 ;;		Nothing
  2944 ;; This function is called by:
  2945 ;;		_setMotorPWM
  2946 ;; This function uses a non-reentrant model
  2947 ;;
  2948                           
  2949                           	psect	text12
  2950   00230C                     __ptext12:
  2951                           	callstack 0
  2952   00230C                     ___lwdiv:
  2953                           	callstack 22
  2954   00230C  0E00               	movlw	0
  2955   00230E  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  2956   002310  0E00               	movlw	0
  2957   002312  6E13               	movwf	___lwdiv@quotient^0,c
  2958   002314  5011               	movf	___lwdiv@divisor^0,w,c
  2959   002316  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2960   002318  B4D8               	btfsc	status,2,c
  2961   00231A  EF91  F011         	goto	u971
  2962   00231E  EF93  F011         	goto	u970
  2963   002322                     u971:
  2964   002322  EFBB  F011         	goto	l1090
  2965   002326                     u970:
  2966   002326  0E01               	movlw	1
  2967   002328  6E15               	movwf	___lwdiv@counter^0,c
  2968   00232A  EF9B  F011         	goto	l2193
  2969   00232E                     l2191:
  2970   00232E  90D8               	bcf	status,0,c
  2971   002330  3611               	rlcf	___lwdiv@divisor^0,f,c
  2972   002332  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2973   002334  2A15               	incf	___lwdiv@counter^0,f,c
  2974   002336                     l2193:
  2975   002336  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  2976   002338  EFA0  F011         	goto	u981
  2977   00233C  EFA2  F011         	goto	u980
  2978   002340                     u981:
  2979   002340  EF97  F011         	goto	l2191
  2980   002344                     u980:
  2981   002344                     l2195:
  2982   002344  90D8               	bcf	status,0,c
  2983   002346  3613               	rlcf	___lwdiv@quotient^0,f,c
  2984   002348  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2985   00234A  5011               	movf	___lwdiv@divisor^0,w,c
  2986   00234C  5C0F               	subwf	___lwdiv@dividend^0,w,c
  2987   00234E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2988   002350  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2989   002352  A0D8               	btfss	status,0,c
  2990   002354  EFAE  F011         	goto	u991
  2991   002358  EFB0  F011         	goto	u990
  2992   00235C                     u991:
  2993   00235C  EFB5  F011         	goto	l2203
  2994   002360                     u990:
  2995   002360  5011               	movf	___lwdiv@divisor^0,w,c
  2996   002362  5E0F               	subwf	___lwdiv@dividend^0,f,c
  2997   002364  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2998   002366  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2999   002368  8013               	bsf	___lwdiv@quotient^0,0,c
  3000   00236A                     l2203:
  3001   00236A  90D8               	bcf	status,0,c
  3002   00236C  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3003   00236E  3211               	rrcf	___lwdiv@divisor^0,f,c
  3004   002370  2E15               	decfsz	___lwdiv@counter^0,f,c
  3005   002372  EFA2  F011         	goto	l2195
  3006   002376                     l1090:
  3007   002376  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3008   00237A  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3009   00237E  0012               	return		;funcret
  3010   002380                     __end_of___lwdiv:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function ___flge *****************
  3014 ;; Defined at:
  3015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  ff1             4    8[COMRAM] unsigned int 
  3018 ;;  ff2             4   12[COMRAM] unsigned int 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;		None
  3021 ;; Return value:  Size  Location     Type
  3022 ;;		None               void
  3023 ;; Registers used:
  3024 ;;		wreg, status,2, status,0
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3030 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3032 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3033 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3034 ;;Total ram usage:       12 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 6
  3037 ;; This function calls:
  3038 ;;		Nothing
  3039 ;; This function is called by:
  3040 ;;		_motor_response
  3041 ;; This function uses a non-reentrant model
  3042 ;;
  3043                           
  3044                           	psect	text13
  3045   001DE6                     __ptext13:
  3046                           	callstack 0
  3047   001DE6                     ___flge:
  3048                           	callstack 23
  3049   001DE6  0E00               	movlw	0
  3050   001DE8  1409               	andwf	___flge@ff1^0,w,c
  3051   001DEA  6E11               	movwf	??___flge^0,c
  3052   001DEC  0E00               	movlw	0
  3053   001DEE  140A               	andwf	(___flge@ff1+1)^0,w,c
  3054   001DF0  6E12               	movwf	(??___flge+1)^0,c
  3055   001DF2  0E80               	movlw	128
  3056   001DF4  140B               	andwf	(___flge@ff1+2)^0,w,c
  3057   001DF6  6E13               	movwf	(??___flge+2)^0,c
  3058   001DF8  0E7F               	movlw	127
  3059   001DFA  140C               	andwf	(___flge@ff1+3)^0,w,c
  3060   001DFC  6E14               	movwf	(??___flge+3)^0,c
  3061   001DFE  5011               	movf	??___flge^0,w,c
  3062   001E00  1012               	iorwf	(??___flge+1)^0,w,c
  3063   001E02  1013               	iorwf	(??___flge+2)^0,w,c
  3064   001E04  1014               	iorwf	(??___flge+3)^0,w,c
  3065   001E06  A4D8               	btfss	status,2,c
  3066   001E08  EF08  F00F         	goto	u1311
  3067   001E0C  EF0A  F00F         	goto	u1310
  3068   001E10                     u1311:
  3069   001E10  EF12  F00F         	goto	l2533
  3070   001E14                     u1310:
  3071   001E14  0E00               	movlw	0
  3072   001E16  6E09               	movwf	___flge@ff1^0,c
  3073   001E18  0E00               	movlw	0
  3074   001E1A  6E0A               	movwf	(___flge@ff1+1)^0,c
  3075   001E1C  0E00               	movlw	0
  3076   001E1E  6E0B               	movwf	(___flge@ff1+2)^0,c
  3077   001E20  0E00               	movlw	0
  3078   001E22  6E0C               	movwf	(___flge@ff1+3)^0,c
  3079   001E24                     l2533:
  3080   001E24  0E00               	movlw	0
  3081   001E26  140D               	andwf	___flge@ff2^0,w,c
  3082   001E28  6E11               	movwf	??___flge^0,c
  3083   001E2A  0E00               	movlw	0
  3084   001E2C  140E               	andwf	(___flge@ff2+1)^0,w,c
  3085   001E2E  6E12               	movwf	(??___flge+1)^0,c
  3086   001E30  0E80               	movlw	128
  3087   001E32  140F               	andwf	(___flge@ff2+2)^0,w,c
  3088   001E34  6E13               	movwf	(??___flge+2)^0,c
  3089   001E36  0E7F               	movlw	127
  3090   001E38  1410               	andwf	(___flge@ff2+3)^0,w,c
  3091   001E3A  6E14               	movwf	(??___flge+3)^0,c
  3092   001E3C  5011               	movf	??___flge^0,w,c
  3093   001E3E  1012               	iorwf	(??___flge+1)^0,w,c
  3094   001E40  1013               	iorwf	(??___flge+2)^0,w,c
  3095   001E42  1014               	iorwf	(??___flge+3)^0,w,c
  3096   001E44  A4D8               	btfss	status,2,c
  3097   001E46  EF27  F00F         	goto	u1321
  3098   001E4A  EF29  F00F         	goto	u1320
  3099   001E4E                     u1321:
  3100   001E4E  EF31  F00F         	goto	l2537
  3101   001E52                     u1320:
  3102   001E52  0E00               	movlw	0
  3103   001E54  6E0D               	movwf	___flge@ff2^0,c
  3104   001E56  0E00               	movlw	0
  3105   001E58  6E0E               	movwf	(___flge@ff2+1)^0,c
  3106   001E5A  0E00               	movlw	0
  3107   001E5C  6E0F               	movwf	(___flge@ff2+2)^0,c
  3108   001E5E  0E00               	movlw	0
  3109   001E60  6E10               	movwf	(___flge@ff2+3)^0,c
  3110   001E62                     l2537:
  3111   001E62  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  3112   001E64  EF36  F00F         	goto	u1331
  3113   001E68  EF38  F00F         	goto	u1330
  3114   001E6C                     u1331:
  3115   001E6C  EF41  F00F         	goto	l2541
  3116   001E70                     u1330:
  3117   001E70  6C09               	negf	___flge@ff1^0,c
  3118   001E72  1E0A               	comf	(___flge@ff1+1)^0,f,c
  3119   001E74  B0D8               	btfsc	status,0,c
  3120   001E76  2A0A               	incf	(___flge@ff1+1)^0,f,c
  3121   001E78  1E0B               	comf	(___flge@ff1+2)^0,f,c
  3122   001E7A  B0D8               	btfsc	status,0,c
  3123   001E7C  2A0B               	incf	(___flge@ff1+2)^0,f,c
  3124   001E7E  0E80               	movlw	128
  3125   001E80  560C               	subfwb	(___flge@ff1+3)^0,f,c
  3126   001E82                     l2541:
  3127   001E82  AE10               	btfss	(___flge@ff2+3)^0,7,c
  3128   001E84  EF46  F00F         	goto	u1341
  3129   001E88  EF48  F00F         	goto	u1340
  3130   001E8C                     u1341:
  3131   001E8C  EF51  F00F         	goto	l864
  3132   001E90                     u1340:
  3133   001E90  6C0D               	negf	___flge@ff2^0,c
  3134   001E92  1E0E               	comf	(___flge@ff2+1)^0,f,c
  3135   001E94  B0D8               	btfsc	status,0,c
  3136   001E96  2A0E               	incf	(___flge@ff2+1)^0,f,c
  3137   001E98  1E0F               	comf	(___flge@ff2+2)^0,f,c
  3138   001E9A  B0D8               	btfsc	status,0,c
  3139   001E9C  2A0F               	incf	(___flge@ff2+2)^0,f,c
  3140   001E9E  0E80               	movlw	128
  3141   001EA0  5610               	subfwb	(___flge@ff2+3)^0,f,c
  3142   001EA2                     l864:
  3143   001EA2  0E00               	movlw	0
  3144   001EA4  1A09               	xorwf	___flge@ff1^0,f,c
  3145   001EA6  0E00               	movlw	0
  3146   001EA8  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  3147   001EAA  0E00               	movlw	0
  3148   001EAC  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  3149   001EAE  0E80               	movlw	128
  3150   001EB0  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  3151   001EB2  0E00               	movlw	0
  3152   001EB4  1A0D               	xorwf	___flge@ff2^0,f,c
  3153   001EB6  0E00               	movlw	0
  3154   001EB8  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  3155   001EBA  0E00               	movlw	0
  3156   001EBC  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  3157   001EBE  0E80               	movlw	128
  3158   001EC0  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  3159   001EC2  500D               	movf	___flge@ff2^0,w,c
  3160   001EC4  5C09               	subwf	___flge@ff1^0,w,c
  3161   001EC6  500E               	movf	(___flge@ff2+1)^0,w,c
  3162   001EC8  580A               	subwfb	(___flge@ff1+1)^0,w,c
  3163   001ECA  500F               	movf	(___flge@ff2+2)^0,w,c
  3164   001ECC  580B               	subwfb	(___flge@ff1+2)^0,w,c
  3165   001ECE  5010               	movf	(___flge@ff2+3)^0,w,c
  3166   001ED0  580C               	subwfb	(___flge@ff1+3)^0,w,c
  3167   001ED2  B0D8               	btfsc	status,0,c
  3168   001ED4  EF6E  F00F         	goto	u1351
  3169   001ED8  EF70  F00F         	goto	u1350
  3170   001EDC                     u1351:
  3171   001EDC  EF73  F00F         	goto	l2547
  3172   001EE0                     u1350:
  3173   001EE0  90D8               	bcf	status,0,c
  3174   001EE2  EF74  F00F         	goto	l869
  3175   001EE6                     l2547:
  3176   001EE6  80D8               	bsf	status,0,c
  3177   001EE8                     l869:
  3178   001EE8  0012               	return		;funcret
  3179   001EEA                     __end_of___flge:
  3180                           	callstack 0
  3181                           
  3182 ;; *************** function _motorRinit *****************
  3183 ;; Defined at:
  3184 ;;		line 88 in file "dc_motor.c"
  3185 ;; Parameters:    Size  Location     Type
  3186 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  3187 ;;		 -> main@mR(9), 
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;		None
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;Total ram usage:        2 bytes
  3204 ;; Hardware stack levels used: 1
  3205 ;; Hardware stack levels required when called: 6
  3206 ;; This function calls:
  3207 ;;		Nothing
  3208 ;; This function is called by:
  3209 ;;		_main
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text14
  3214   002464                     __ptext14:
  3215                           	callstack 0
  3216   002464                     _motorRinit:
  3217                           	callstack 24
  3218   002464                     
  3219                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  3220   002464  C009  FFD9         	movff	motorRinit@mR,fsr2l
  3221   002468  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  3222   00246C  0E32               	movlw	50
  3223   00246E  6EDF               	movwf	indf2,c
  3224   002470                     
  3225                           ;dc_motor.c: 91:     mR->direction = 1;
  3226   002470  EE20 F001          	lfsr	2,1
  3227   002474  5009               	movf	motorRinit@mR^0,w,c
  3228   002476  26D9               	addwf	fsr2l,f,c
  3229   002478  500A               	movf	(motorRinit@mR+1)^0,w,c
  3230   00247A  22DA               	addwfc	fsr2h,f,c
  3231   00247C  0E01               	movlw	1
  3232   00247E  6EDF               	movwf	indf2,c
  3233   002480                     
  3234                           ;dc_motor.c: 92:     mR->brakemode = 1;
  3235   002480  EE20 F002          	lfsr	2,2
  3236   002484  5009               	movf	motorRinit@mR^0,w,c
  3237   002486  26D9               	addwf	fsr2l,f,c
  3238   002488  500A               	movf	(motorRinit@mR+1)^0,w,c
  3239   00248A  22DA               	addwfc	fsr2h,f,c
  3240   00248C  0E01               	movlw	1
  3241   00248E  6EDF               	movwf	indf2,c
  3242   002490                     
  3243                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  3244   002490  EE20 F005          	lfsr	2,5
  3245   002494  5009               	movf	motorRinit@mR^0,w,c
  3246   002496  26D9               	addwf	fsr2l,f,c
  3247   002498  500A               	movf	(motorRinit@mR+1)^0,w,c
  3248   00249A  22DA               	addwfc	fsr2h,f,c
  3249   00249C  0E25               	movlw	37
  3250   00249E  6EDE               	movwf	postinc2,c
  3251   0024A0  0E0F               	movlw	15
  3252   0024A2  6EDD               	movwf	postdec2,c
  3253   0024A4                     
  3254                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  3255   0024A4  EE20 F007          	lfsr	2,7
  3256   0024A8  5009               	movf	motorRinit@mR^0,w,c
  3257   0024AA  26D9               	addwf	fsr2l,f,c
  3258   0024AC  500A               	movf	(motorRinit@mR+1)^0,w,c
  3259   0024AE  22DA               	addwfc	fsr2h,f,c
  3260   0024B0  0E21               	movlw	33
  3261   0024B2  6EDE               	movwf	postinc2,c
  3262   0024B4  0E0F               	movlw	15
  3263   0024B6  6EDD               	movwf	postdec2,c
  3264   0024B8                     
  3265                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  3266   0024B8  EE20 F003          	lfsr	2,3
  3267   0024BC  5009               	movf	motorRinit@mR^0,w,c
  3268   0024BE  26D9               	addwf	fsr2l,f,c
  3269   0024C0  500A               	movf	(motorRinit@mR+1)^0,w,c
  3270   0024C2  22DA               	addwfc	fsr2h,f,c
  3271   0024C4  0EC8               	movlw	200
  3272   0024C6  6EDE               	movwf	postinc2,c
  3273   0024C8  0E00               	movlw	0
  3274   0024CA  6EDD               	movwf	postdec2,c
  3275   0024CC  0012               	return		;funcret
  3276   0024CE                     __end_of_motorRinit:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function _motorLinit *****************
  3280 ;; Defined at:
  3281 ;;		line 78 in file "dc_motor.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  3284 ;;		 -> main@mL(9), 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;		None
  3287 ;; Return value:  Size  Location     Type
  3288 ;;                  1    wreg      void 
  3289 ;; Registers used:
  3290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3291 ;; Tracked objects:
  3292 ;;		On entry : 0/0
  3293 ;;		On exit  : 0/0
  3294 ;;		Unchanged: 0/0
  3295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3296 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3299 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3300 ;;Total ram usage:        2 bytes
  3301 ;; Hardware stack levels used: 1
  3302 ;; Hardware stack levels required when called: 6
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_main
  3307 ;; This function uses a non-reentrant model
  3308 ;;
  3309                           
  3310                           	psect	text15
  3311   0024CE                     __ptext15:
  3312                           	callstack 0
  3313   0024CE                     _motorLinit:
  3314                           	callstack 24
  3315   0024CE                     
  3316                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  3317   0024CE  C009  FFD9         	movff	motorLinit@mL,fsr2l
  3318   0024D2  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  3319   0024D6  0E32               	movlw	50
  3320   0024D8  6EDF               	movwf	indf2,c
  3321   0024DA                     
  3322                           ;dc_motor.c: 81:     mL->direction = 1;
  3323   0024DA  EE20 F001          	lfsr	2,1
  3324   0024DE  5009               	movf	motorLinit@mL^0,w,c
  3325   0024E0  26D9               	addwf	fsr2l,f,c
  3326   0024E2  500A               	movf	(motorLinit@mL+1)^0,w,c
  3327   0024E4  22DA               	addwfc	fsr2h,f,c
  3328   0024E6  0E01               	movlw	1
  3329   0024E8  6EDF               	movwf	indf2,c
  3330   0024EA                     
  3331                           ;dc_motor.c: 82:     mL->brakemode = 1;
  3332   0024EA  EE20 F002          	lfsr	2,2
  3333   0024EE  5009               	movf	motorLinit@mL^0,w,c
  3334   0024F0  26D9               	addwf	fsr2l,f,c
  3335   0024F2  500A               	movf	(motorLinit@mL+1)^0,w,c
  3336   0024F4  22DA               	addwfc	fsr2h,f,c
  3337   0024F6  0E01               	movlw	1
  3338   0024F8  6EDF               	movwf	indf2,c
  3339   0024FA                     
  3340                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  3341   0024FA  EE20 F005          	lfsr	2,5
  3342   0024FE  5009               	movf	motorLinit@mL^0,w,c
  3343   002500  26D9               	addwf	fsr2l,f,c
  3344   002502  500A               	movf	(motorLinit@mL+1)^0,w,c
  3345   002504  22DA               	addwfc	fsr2h,f,c
  3346   002506  0EAA               	movlw	170
  3347   002508  6EDE               	movwf	postinc2,c
  3348   00250A  0E0F               	movlw	15
  3349   00250C  6EDD               	movwf	postdec2,c
  3350   00250E                     
  3351                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  3352   00250E  EE20 F007          	lfsr	2,7
  3353   002512  5009               	movf	motorLinit@mL^0,w,c
  3354   002514  26D9               	addwf	fsr2l,f,c
  3355   002516  500A               	movf	(motorLinit@mL+1)^0,w,c
  3356   002518  22DA               	addwfc	fsr2h,f,c
  3357   00251A  0EA6               	movlw	166
  3358   00251C  6EDE               	movwf	postinc2,c
  3359   00251E  0E0F               	movlw	15
  3360   002520  6EDD               	movwf	postdec2,c
  3361   002522                     
  3362                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  3363   002522  EE20 F003          	lfsr	2,3
  3364   002526  5009               	movf	motorLinit@mL^0,w,c
  3365   002528  26D9               	addwf	fsr2l,f,c
  3366   00252A  500A               	movf	(motorLinit@mL+1)^0,w,c
  3367   00252C  22DA               	addwfc	fsr2h,f,c
  3368   00252E  0EC8               	movlw	200
  3369   002530  6EDE               	movwf	postinc2,c
  3370   002532  0E00               	movlw	0
  3371   002534  6EDD               	movwf	postdec2,c
  3372   002536  0012               	return		;funcret
  3373   002538                     __end_of_motorLinit:
  3374                           	callstack 0
  3375                           
  3376 ;; *************** function _initDCmotorsPWM *****************
  3377 ;; Defined at:
  3378 ;;		line 5 in file "dc_motor.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;		None
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3392 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3396 ;;Total ram usage:        2 bytes
  3397 ;; Hardware stack levels used: 1
  3398 ;; Hardware stack levels required when called: 6
  3399 ;; This function calls:
  3400 ;;		Nothing
  3401 ;; This function is called by:
  3402 ;;		_main
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           	psect	text16
  3407   00228C                     __ptext16:
  3408                           	callstack 0
  3409   00228C                     _initDCmotorsPWM:
  3410                           	callstack 24
  3411   00228C                     
  3412                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3413   00228C  0E05               	movlw	5
  3414   00228E  010E               	movlb	14	; () banked
  3415   002290  6F74               	movwf	116,b	;volatile
  3416                           
  3417                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3418   002292  0E06               	movlw	6
  3419   002294  6F76               	movwf	118,b	;volatile
  3420                           
  3421                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3422   002296  0E07               	movlw	7
  3423   002298  6F69               	movwf	105,b	;volatile
  3424                           
  3425                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3426   00229A  0E08               	movlw	8
  3427   00229C  6F88               	movwf	136,b	;volatile
  3428                           
  3429                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  3430   00229E  50BD               	movf	189,w,c	;volatile
  3431   0022A0  0B8F               	andlw	-113
  3432   0022A2  0930               	iorlw	48
  3433   0022A4  6EBD               	movwf	189,c	;volatile
  3434                           
  3435                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  3436   0022A6  0EE0               	movlw	-32
  3437   0022A8  16BE               	andwf	190,f,c	;volatile
  3438                           
  3439                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  3440   0022AA  50BF               	movf	191,w,c	;volatile
  3441   0022AC  0BF0               	andlw	-16
  3442   0022AE  0901               	iorlw	1
  3443   0022B0  6EBF               	movwf	191,c	;volatile
  3444                           
  3445                           ;dc_motor.c: 21:     T2PR=200;
  3446   0022B2  0EC8               	movlw	200
  3447   0022B4  6EBC               	movwf	188,c	;volatile
  3448   0022B6                     
  3449                           ; BSR set to: 14
  3450                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  3451   0022B6  8EBD               	bsf	189,7,c	;volatile
  3452                           
  3453                           ;dc_motor.c: 26:     CCPR1H=0;
  3454   0022B8  0E00               	movlw	0
  3455   0022BA  6EAA               	movwf	170,c	;volatile
  3456                           
  3457                           ;dc_motor.c: 27:     CCPR2H=0;
  3458   0022BC  0E00               	movlw	0
  3459   0022BE  6EA6               	movwf	166,c	;volatile
  3460                           
  3461                           ;dc_motor.c: 28:     CCPR3H=0;
  3462   0022C0  0E00               	movlw	0
  3463   0022C2  010F               	movlb	15	; () banked
  3464   0022C4  6F25               	movwf	37,b	;volatile
  3465                           
  3466                           ;dc_motor.c: 29:     CCPR4H=0;
  3467   0022C6  0E00               	movlw	0
  3468   0022C8  6F21               	movwf	33,b	;volatile
  3469                           
  3470                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  3471   0022CA  0EFC               	movlw	-4
  3472   0022CC  16AD               	andwf	173,f,c	;volatile
  3473                           
  3474                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  3475   0022CE  0EF3               	movlw	-13
  3476   0022D0  16AD               	andwf	173,f,c	;volatile
  3477                           
  3478                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  3479   0022D2  0ECF               	movlw	-49
  3480   0022D4  16AD               	andwf	173,f,c	;volatile
  3481                           
  3482                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  3483   0022D6  0E3F               	movlw	-193
  3484   0022D8  16AD               	andwf	173,f,c	;volatile
  3485   0022DA                     
  3486                           ; BSR set to: 15
  3487                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  3488   0022DA  88AB               	bsf	171,4,c	;volatile
  3489                           
  3490                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  3491   0022DC  50AB               	movf	171,w,c	;volatile
  3492   0022DE  0BF0               	andlw	-16
  3493   0022E0  090C               	iorlw	12
  3494   0022E2  6EAB               	movwf	171,c	;volatile
  3495   0022E4                     
  3496                           ; BSR set to: 15
  3497                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  3498   0022E4  8EAB               	bsf	171,7,c	;volatile
  3499   0022E6                     
  3500                           ; BSR set to: 15
  3501                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  3502   0022E6  88A7               	bsf	167,4,c	;volatile
  3503                           
  3504                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  3505   0022E8  50A7               	movf	167,w,c	;volatile
  3506   0022EA  0BF0               	andlw	-16
  3507   0022EC  090C               	iorlw	12
  3508   0022EE  6EA7               	movwf	167,c	;volatile
  3509   0022F0                     
  3510                           ; BSR set to: 15
  3511                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  3512   0022F0  8EA7               	bsf	167,7,c	;volatile
  3513   0022F2                     
  3514                           ; BSR set to: 15
  3515                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  3516   0022F2  8926               	bsf	38,4,b	;volatile
  3517                           
  3518                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  3519   0022F4  5126               	movf	38,w,b	;volatile
  3520   0022F6  0BF0               	andlw	-16
  3521   0022F8  090C               	iorlw	12
  3522   0022FA  6F26               	movwf	38,b	;volatile
  3523   0022FC                     
  3524                           ; BSR set to: 15
  3525                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  3526   0022FC  8F26               	bsf	38,7,b	;volatile
  3527   0022FE                     
  3528                           ; BSR set to: 15
  3529                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  3530   0022FE  8922               	bsf	34,4,b	;volatile
  3531                           
  3532                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  3533   002300  5122               	movf	34,w,b	;volatile
  3534   002302  0BF0               	andlw	-16
  3535   002304  090C               	iorlw	12
  3536   002306  6F22               	movwf	34,b	;volatile
  3537   002308                     
  3538                           ; BSR set to: 15
  3539                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  3540   002308  8F22               	bsf	34,7,b	;volatile
  3541   00230A                     
  3542                           ; BSR set to: 15
  3543   00230A  0012               	return		;funcret
  3544   00230C                     __end_of_initDCmotorsPWM:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _color_read_RGBC *****************
  3548 ;; Defined at:
  3549 ;;		line 94 in file "color.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  3552 ;;		 -> main@RGBC(32), 
  3553 ;; Auto vars:     Size  Location     Type
  3554 ;;		None
  3555 ;; Return value:  Size  Location     Type
  3556 ;;                  1    wreg      void 
  3557 ;; Registers used:
  3558 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3559 ;; Tracked objects:
  3560 ;;		On entry : 0/0
  3561 ;;		On exit  : 0/0
  3562 ;;		Unchanged: 0/0
  3563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3568 ;;Total ram usage:        2 bytes
  3569 ;; Hardware stack levels used: 1
  3570 ;; Hardware stack levels required when called: 9
  3571 ;; This function calls:
  3572 ;;		___xxtofl
  3573 ;;		_color_read_Blue
  3574 ;;		_color_read_Clear
  3575 ;;		_color_read_Green
  3576 ;;		_color_read_Red
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text17
  3583   0021C6                     __ptext17:
  3584                           	callstack 0
  3585   0021C6                     _color_read_RGBC:
  3586                           	callstack 21
  3587   0021C6                     
  3588                           ;color.c: 95:     temp->R = color_read_Red();
  3589   0021C6  EC9C  F012         	call	_color_read_Red	;wreg free
  3590   0021CA  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  3591   0021CE  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  3592   0021D2  6A16               	clrf	(___xxtofl@val+2)^0,c
  3593   0021D4  6A17               	clrf	(___xxtofl@val+3)^0,c
  3594   0021D6  0E00               	movlw	0
  3595   0021D8  ECBA  F00C         	call	___xxtofl
  3596   0021DC  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  3597   0021E0  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  3598   0021E4  C014  FFDE         	movff	?___xxtofl,postinc2
  3599   0021E8  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3600   0021EC  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3601   0021F0  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3602                           
  3603                           ;color.c: 96:     temp->B = color_read_Blue();
  3604   0021F4  EC14  F013         	call	_color_read_Blue	;wreg free
  3605   0021F8  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  3606   0021FC  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  3607   002200  6A16               	clrf	(___xxtofl@val+2)^0,c
  3608   002202  6A17               	clrf	(___xxtofl@val+3)^0,c
  3609   002204  0E00               	movlw	0
  3610   002206  ECBA  F00C         	call	___xxtofl
  3611   00220A  EE20 F008          	lfsr	2,8
  3612   00220E  5022               	movf	color_read_RGBC@temp^0,w,c
  3613   002210  26D9               	addwf	fsr2l,f,c
  3614   002212  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3615   002214  22DA               	addwfc	fsr2h,f,c
  3616   002216  C014  FFDE         	movff	?___xxtofl,postinc2
  3617   00221A  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3618   00221E  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3619   002222  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3620                           
  3621                           ;color.c: 97:     temp->G = color_read_Green();
  3622   002226  ECC4  F012         	call	_color_read_Green	;wreg free
  3623   00222A  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  3624   00222E  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  3625   002232  6A16               	clrf	(___xxtofl@val+2)^0,c
  3626   002234  6A17               	clrf	(___xxtofl@val+3)^0,c
  3627   002236  0E00               	movlw	0
  3628   002238  ECBA  F00C         	call	___xxtofl
  3629   00223C  EE20 F004          	lfsr	2,4
  3630   002240  5022               	movf	color_read_RGBC@temp^0,w,c
  3631   002242  26D9               	addwf	fsr2l,f,c
  3632   002244  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3633   002246  22DA               	addwfc	fsr2h,f,c
  3634   002248  C014  FFDE         	movff	?___xxtofl,postinc2
  3635   00224C  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3636   002250  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3637   002254  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3638                           
  3639                           ;color.c: 98:     temp->C = color_read_Clear();
  3640   002258  ECEC  F012         	call	_color_read_Clear	;wreg free
  3641   00225C  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  3642   002260  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  3643   002264  6A16               	clrf	(___xxtofl@val+2)^0,c
  3644   002266  6A17               	clrf	(___xxtofl@val+3)^0,c
  3645   002268  0E00               	movlw	0
  3646   00226A  ECBA  F00C         	call	___xxtofl
  3647   00226E  EE20 F00C          	lfsr	2,12
  3648   002272  5022               	movf	color_read_RGBC@temp^0,w,c
  3649   002274  26D9               	addwf	fsr2l,f,c
  3650   002276  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3651   002278  22DA               	addwfc	fsr2h,f,c
  3652   00227A  C014  FFDE         	movff	?___xxtofl,postinc2
  3653   00227E  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3654   002282  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3655   002286  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3656   00228A  0012               	return		;funcret
  3657   00228C                     __end_of_color_read_RGBC:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _color_read_Red *****************
  3661 ;; Defined at:
  3662 ;;		line 35 in file "color.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;  tmp             2   17[COMRAM] unsigned int 
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  2   12[COMRAM] unsigned int 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;Total ram usage:        7 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 8
  3683 ;; This function calls:
  3684 ;;		_I2C_2_Master_Read
  3685 ;;		_I2C_2_Master_RepStart
  3686 ;;		_I2C_2_Master_Start
  3687 ;;		_I2C_2_Master_Stop
  3688 ;;		_I2C_2_Master_Write
  3689 ;; This function is called by:
  3690 ;;		_color_read_RGBC
  3691 ;;		_main
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text18
  3696   002538                     __ptext18:
  3697                           	callstack 0
  3698   002538                     _color_read_Red:
  3699                           	callstack 22
  3700   002538                     
  3701                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  3702   002538  ECB6  F014         	call	_I2C_2_Master_Start	;wreg free
  3703                           
  3704                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  3705   00253C  0E52               	movlw	82
  3706   00253E  EC9A  F014         	call	_I2C_2_Master_Write
  3707                           
  3708                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  3709   002542  0EB6               	movlw	182
  3710   002544  EC9A  F014         	call	_I2C_2_Master_Write
  3711                           
  3712                           ;color.c: 41:  I2C_2_Master_RepStart();
  3713   002548  ECAC  F014         	call	_I2C_2_Master_RepStart	;wreg free
  3714                           
  3715                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  3716   00254C  0E53               	movlw	83
  3717   00254E  EC9A  F014         	call	_I2C_2_Master_Write
  3718                           
  3719                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  3720   002552  0E01               	movlw	1
  3721   002554  EC5D  F013         	call	_I2C_2_Master_Read
  3722   002558  6E0F               	movwf	??_color_read_Red^0,c
  3723   00255A  500F               	movf	??_color_read_Red^0,w,c
  3724   00255C  6E12               	movwf	color_read_Red@tmp^0,c
  3725   00255E  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  3726                           
  3727                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3728   002560  0E00               	movlw	0
  3729   002562  EC5D  F013         	call	_I2C_2_Master_Read
  3730   002566  6E0F               	movwf	??_color_read_Red^0,c
  3731   002568  500F               	movf	??_color_read_Red^0,w,c
  3732   00256A  6E11               	movwf	(??_color_read_Red+2)^0,c
  3733   00256C  6A10               	clrf	(??_color_read_Red+1)^0,c
  3734   00256E  5012               	movf	color_read_Red@tmp^0,w,c
  3735   002570  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  3736   002572  6E12               	movwf	color_read_Red@tmp^0,c
  3737   002574  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  3738   002576  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  3739   002578  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  3740                           
  3741                           ;color.c: 45:  I2C_2_Master_Stop();
  3742   00257A  ECB1  F014         	call	_I2C_2_Master_Stop	;wreg free
  3743   00257E                     
  3744                           ;color.c: 46:  return tmp;
  3745   00257E  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  3746   002582  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  3747   002586  0012               	return		;funcret
  3748   002588                     __end_of_color_read_Red:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _color_read_Green *****************
  3752 ;; Defined at:
  3753 ;;		line 49 in file "color.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;  tmp             2   17[COMRAM] unsigned int 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2   12[COMRAM] unsigned int 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3769 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3770 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3771 ;;Total ram usage:        7 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; Hardware stack levels required when called: 8
  3774 ;; This function calls:
  3775 ;;		_I2C_2_Master_Read
  3776 ;;		_I2C_2_Master_RepStart
  3777 ;;		_I2C_2_Master_Start
  3778 ;;		_I2C_2_Master_Stop
  3779 ;;		_I2C_2_Master_Write
  3780 ;; This function is called by:
  3781 ;;		_color_read_RGBC
  3782 ;;		_main
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text19
  3787   002588                     __ptext19:
  3788                           	callstack 0
  3789   002588                     _color_read_Green:
  3790                           	callstack 21
  3791   002588                     
  3792                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  3793   002588  ECB6  F014         	call	_I2C_2_Master_Start	;wreg free
  3794                           
  3795                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  3796   00258C  0E52               	movlw	82
  3797   00258E  EC9A  F014         	call	_I2C_2_Master_Write
  3798                           
  3799                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  3800   002592  0EB8               	movlw	184
  3801   002594  EC9A  F014         	call	_I2C_2_Master_Write
  3802                           
  3803                           ;color.c: 55:  I2C_2_Master_RepStart();
  3804   002598  ECAC  F014         	call	_I2C_2_Master_RepStart	;wreg free
  3805                           
  3806                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3807   00259C  0E53               	movlw	83
  3808   00259E  EC9A  F014         	call	_I2C_2_Master_Write
  3809                           
  3810                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3811   0025A2  0E01               	movlw	1
  3812   0025A4  EC5D  F013         	call	_I2C_2_Master_Read
  3813   0025A8  6E0F               	movwf	??_color_read_Green^0,c
  3814   0025AA  500F               	movf	??_color_read_Green^0,w,c
  3815   0025AC  6E12               	movwf	color_read_Green@tmp^0,c
  3816   0025AE  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  3817                           
  3818                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3819   0025B0  0E00               	movlw	0
  3820   0025B2  EC5D  F013         	call	_I2C_2_Master_Read
  3821   0025B6  6E0F               	movwf	??_color_read_Green^0,c
  3822   0025B8  500F               	movf	??_color_read_Green^0,w,c
  3823   0025BA  6E11               	movwf	(??_color_read_Green+2)^0,c
  3824   0025BC  6A10               	clrf	(??_color_read_Green+1)^0,c
  3825   0025BE  5012               	movf	color_read_Green@tmp^0,w,c
  3826   0025C0  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  3827   0025C2  6E12               	movwf	color_read_Green@tmp^0,c
  3828   0025C4  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  3829   0025C6  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  3830   0025C8  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  3831                           
  3832                           ;color.c: 59:  I2C_2_Master_Stop();
  3833   0025CA  ECB1  F014         	call	_I2C_2_Master_Stop	;wreg free
  3834   0025CE                     
  3835                           ;color.c: 60:  return tmp;
  3836   0025CE  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  3837   0025D2  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3838   0025D6  0012               	return		;funcret
  3839   0025D8                     __end_of_color_read_Green:
  3840                           	callstack 0
  3841                           
  3842 ;; *************** function _color_read_Clear *****************
  3843 ;; Defined at:
  3844 ;;		line 77 in file "color.c"
  3845 ;; Parameters:    Size  Location     Type
  3846 ;;		None
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  tmp             2   17[COMRAM] unsigned int 
  3849 ;; Return value:  Size  Location     Type
  3850 ;;                  2   12[COMRAM] unsigned int 
  3851 ;; Registers used:
  3852 ;;		wreg, status,2, status,0, cstack
  3853 ;; Tracked objects:
  3854 ;;		On entry : 0/0
  3855 ;;		On exit  : 0/0
  3856 ;;		Unchanged: 0/0
  3857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3860 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3861 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3862 ;;Total ram usage:        7 bytes
  3863 ;; Hardware stack levels used: 1
  3864 ;; Hardware stack levels required when called: 8
  3865 ;; This function calls:
  3866 ;;		_I2C_2_Master_Read
  3867 ;;		_I2C_2_Master_RepStart
  3868 ;;		_I2C_2_Master_Start
  3869 ;;		_I2C_2_Master_Stop
  3870 ;;		_I2C_2_Master_Write
  3871 ;; This function is called by:
  3872 ;;		_color_read_RGBC
  3873 ;;		_main
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text20
  3878   0025D8                     __ptext20:
  3879                           	callstack 0
  3880   0025D8                     _color_read_Clear:
  3881                           	callstack 21
  3882   0025D8                     
  3883                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  3884   0025D8  ECB6  F014         	call	_I2C_2_Master_Start	;wreg free
  3885                           
  3886                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  3887   0025DC  0E52               	movlw	82
  3888   0025DE  EC9A  F014         	call	_I2C_2_Master_Write
  3889                           
  3890                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  3891   0025E2  0EB4               	movlw	180
  3892   0025E4  EC9A  F014         	call	_I2C_2_Master_Write
  3893                           
  3894                           ;color.c: 83:  I2C_2_Master_RepStart();
  3895   0025E8  ECAC  F014         	call	_I2C_2_Master_RepStart	;wreg free
  3896                           
  3897                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  3898   0025EC  0E53               	movlw	83
  3899   0025EE  EC9A  F014         	call	_I2C_2_Master_Write
  3900                           
  3901                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  3902   0025F2  0E01               	movlw	1
  3903   0025F4  EC5D  F013         	call	_I2C_2_Master_Read
  3904   0025F8  6E0F               	movwf	??_color_read_Clear^0,c
  3905   0025FA  500F               	movf	??_color_read_Clear^0,w,c
  3906   0025FC  6E12               	movwf	color_read_Clear@tmp^0,c
  3907   0025FE  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  3908                           
  3909                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3910   002600  0E00               	movlw	0
  3911   002602  EC5D  F013         	call	_I2C_2_Master_Read
  3912   002606  6E0F               	movwf	??_color_read_Clear^0,c
  3913   002608  500F               	movf	??_color_read_Clear^0,w,c
  3914   00260A  6E11               	movwf	(??_color_read_Clear+2)^0,c
  3915   00260C  6A10               	clrf	(??_color_read_Clear+1)^0,c
  3916   00260E  5012               	movf	color_read_Clear@tmp^0,w,c
  3917   002610  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  3918   002612  6E12               	movwf	color_read_Clear@tmp^0,c
  3919   002614  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  3920   002616  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  3921   002618  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  3922                           
  3923                           ;color.c: 87:  I2C_2_Master_Stop();
  3924   00261A  ECB1  F014         	call	_I2C_2_Master_Stop	;wreg free
  3925   00261E                     
  3926                           ;color.c: 88:  return tmp;
  3927   00261E  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  3928   002622  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3929   002626  0012               	return		;funcret
  3930   002628                     __end_of_color_read_Clear:
  3931                           	callstack 0
  3932                           
  3933 ;; *************** function _color_read_Blue *****************
  3934 ;; Defined at:
  3935 ;;		line 63 in file "color.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  tmp             2   17[COMRAM] unsigned int 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  2   12[COMRAM] unsigned int 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3950 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3952 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3953 ;;Total ram usage:        7 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 8
  3956 ;; This function calls:
  3957 ;;		_I2C_2_Master_Read
  3958 ;;		_I2C_2_Master_RepStart
  3959 ;;		_I2C_2_Master_Start
  3960 ;;		_I2C_2_Master_Stop
  3961 ;;		_I2C_2_Master_Write
  3962 ;; This function is called by:
  3963 ;;		_color_read_RGBC
  3964 ;;		_main
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text21
  3969   002628                     __ptext21:
  3970                           	callstack 0
  3971   002628                     _color_read_Blue:
  3972                           	callstack 21
  3973   002628                     
  3974                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3975   002628  ECB6  F014         	call	_I2C_2_Master_Start	;wreg free
  3976                           
  3977                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3978   00262C  0E52               	movlw	82
  3979   00262E  EC9A  F014         	call	_I2C_2_Master_Write
  3980                           
  3981                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  3982   002632  0EBA               	movlw	186
  3983   002634  EC9A  F014         	call	_I2C_2_Master_Write
  3984                           
  3985                           ;color.c: 69:  I2C_2_Master_RepStart();
  3986   002638  ECAC  F014         	call	_I2C_2_Master_RepStart	;wreg free
  3987                           
  3988                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3989   00263C  0E53               	movlw	83
  3990   00263E  EC9A  F014         	call	_I2C_2_Master_Write
  3991                           
  3992                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3993   002642  0E01               	movlw	1
  3994   002644  EC5D  F013         	call	_I2C_2_Master_Read
  3995   002648  6E0F               	movwf	??_color_read_Blue^0,c
  3996   00264A  500F               	movf	??_color_read_Blue^0,w,c
  3997   00264C  6E12               	movwf	color_read_Blue@tmp^0,c
  3998   00264E  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  3999                           
  4000                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4001   002650  0E00               	movlw	0
  4002   002652  EC5D  F013         	call	_I2C_2_Master_Read
  4003   002656  6E0F               	movwf	??_color_read_Blue^0,c
  4004   002658  500F               	movf	??_color_read_Blue^0,w,c
  4005   00265A  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4006   00265C  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4007   00265E  5012               	movf	color_read_Blue@tmp^0,w,c
  4008   002660  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4009   002662  6E12               	movwf	color_read_Blue@tmp^0,c
  4010   002664  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4011   002666  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4012   002668  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4013                           
  4014                           ;color.c: 73:  I2C_2_Master_Stop();
  4015   00266A  ECB1  F014         	call	_I2C_2_Master_Stop	;wreg free
  4016   00266E                     
  4017                           ;color.c: 74:  return tmp;
  4018   00266E  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4019   002672  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4020   002676  0012               	return		;funcret
  4021   002678                     __end_of_color_read_Blue:
  4022                           	callstack 0
  4023                           
  4024 ;; *************** function _I2C_2_Master_RepStart *****************
  4025 ;; Defined at:
  4026 ;;		line 33 in file "i2c.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;		None
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;		None
  4031 ;; Return value:  Size  Location     Type
  4032 ;;                  1    wreg      void 
  4033 ;; Registers used:
  4034 ;;		wreg, status,2, status,0, cstack
  4035 ;; Tracked objects:
  4036 ;;		On entry : 0/0
  4037 ;;		On exit  : 0/0
  4038 ;;		Unchanged: 0/0
  4039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4044 ;;Total ram usage:        0 bytes
  4045 ;; Hardware stack levels used: 1
  4046 ;; Hardware stack levels required when called: 7
  4047 ;; This function calls:
  4048 ;;		_I2C_2_Master_Idle
  4049 ;; This function is called by:
  4050 ;;		_color_read_Red
  4051 ;;		_color_read_Green
  4052 ;;		_color_read_Blue
  4053 ;;		_color_read_Clear
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           	psect	text22
  4058   002958                     __ptext22:
  4059                           	callstack 0
  4060   002958                     _I2C_2_Master_RepStart:
  4061                           	callstack 22
  4062   002958                     
  4063                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4064   002958  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  4065   00295C                     
  4066                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4067   00295C  010E               	movlb	14	; () banked
  4068   00295E  83DA               	bsf	218,1,b	;volatile
  4069   002960                     
  4070                           ; BSR set to: 14
  4071   002960  0012               	return		;funcret
  4072   002962                     __end_of_I2C_2_Master_RepStart:
  4073                           	callstack 0
  4074                           
  4075 ;; *************** function _I2C_2_Master_Read *****************
  4076 ;; Defined at:
  4077 ;;		line 51 in file "i2c.c"
  4078 ;; Parameters:    Size  Location     Type
  4079 ;;  ack             1    wreg     unsigned char 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  ack             1   10[COMRAM] unsigned char 
  4082 ;;  tmp             1   11[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  1    wreg      unsigned char 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0, cstack
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4094 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4095 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4096 ;;Total ram usage:        3 bytes
  4097 ;; Hardware stack levels used: 1
  4098 ;; Hardware stack levels required when called: 7
  4099 ;; This function calls:
  4100 ;;		_I2C_2_Master_Idle
  4101 ;; This function is called by:
  4102 ;;		_color_read_Red
  4103 ;;		_color_read_Green
  4104 ;;		_color_read_Blue
  4105 ;;		_color_read_Clear
  4106 ;; This function uses a non-reentrant model
  4107 ;;
  4108                           
  4109                           	psect	text23
  4110   0026BA                     __ptext23:
  4111                           	callstack 0
  4112   0026BA                     _I2C_2_Master_Read:
  4113                           	callstack 22
  4114                           
  4115                           ; BSR set to: 14
  4116                           ;incstack = 0
  4117                           ;I2C_2_Master_Read@ack stored from wreg
  4118   0026BA  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4119   0026BC                     
  4120                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4121   0026BC  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  4122   0026C0                     
  4123                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4124   0026C0  010E               	movlb	14	; () banked
  4125   0026C2  87DA               	bsf	218,3,b	;volatile
  4126                           
  4127                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4128   0026C4  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  4129   0026C8                     
  4130                           ;i2c.c: 57:   tmp = SSP2BUF;
  4131   0026C8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4132                           
  4133                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4134   0026CC  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  4135   0026D0                     
  4136                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4137   0026D0  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4138   0026D2  B4D8               	btfsc	status,2,c
  4139   0026D4  EF6E  F013         	goto	u1001
  4140   0026D8  EF72  F013         	goto	u1000
  4141   0026DC                     u1001:
  4142   0026DC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4143   0026DE  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4144   0026E0  EF73  F013         	goto	u1018
  4145   0026E4                     u1000:
  4146   0026E4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4147   0026E6                     u1018:
  4148   0026E6  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4149   0026E8  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4150   0026EA  010E               	movlb	14	; () banked
  4151   0026EC  51DA               	movf	218,w,b	;volatile
  4152   0026EE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4153   0026F0  0BDF               	andlw	-33
  4154   0026F2  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4155   0026F4  6FDA               	movwf	218,b	;volatile
  4156   0026F6                     
  4157                           ; BSR set to: 14
  4158                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4159   0026F6  89DA               	bsf	218,4,b	;volatile
  4160   0026F8                     
  4161                           ; BSR set to: 14
  4162                           ;i2c.c: 61:   return tmp;
  4163   0026F8  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4164   0026FA                     
  4165                           ; BSR set to: 14
  4166   0026FA  0012               	return		;funcret
  4167   0026FC                     __end_of_I2C_2_Master_Read:
  4168                           	callstack 0
  4169                           
  4170 ;; *************** function ___xxtofl *****************
  4171 ;; Defined at:
  4172 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4173 ;; Parameters:    Size  Location     Type
  4174 ;;  sign            1    wreg     unsigned char 
  4175 ;;  val             4   19[COMRAM] long 
  4176 ;; Auto vars:     Size  Location     Type
  4177 ;;  sign            1   27[COMRAM] unsigned char 
  4178 ;;  arg             4   29[COMRAM] unsigned long 
  4179 ;;  exp             1   28[COMRAM] unsigned char 
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  4   19[COMRAM] unsigned char 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4190 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4192 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4193 ;;Total ram usage:       14 bytes
  4194 ;; Hardware stack levels used: 1
  4195 ;; Hardware stack levels required when called: 6
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_color_read_RGBC
  4200 ;;		_color_normalise
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text24
  4205   001974                     __ptext24:
  4206                           	callstack 0
  4207   001974                     ___xxtofl:
  4208                           	callstack 23
  4209                           
  4210                           ; BSR set to: 14
  4211                           ;incstack = 0
  4212                           ;___xxtofl@sign stored from wreg
  4213   001974  6E1C               	movwf	___xxtofl@sign^0,c
  4214   001976  501C               	movf	___xxtofl@sign^0,w,c
  4215   001978  B4D8               	btfsc	status,2,c
  4216   00197A  EFC1  F00C         	goto	u1361
  4217   00197E  EFC3  F00C         	goto	u1360
  4218   001982                     u1361:
  4219   001982  EFE5  F00C         	goto	l1254
  4220   001986                     u1360:
  4221   001986  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4222   001988  EFCA  F00C         	goto	u1370
  4223   00198C  EFC8  F00C         	goto	u1371
  4224   001990                     u1371:
  4225   001990  EFE5  F00C         	goto	l1254
  4226   001994                     u1370:
  4227   001994  C014  F018         	movff	___xxtofl@val,??___xxtofl
  4228   001998  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  4229   00199C  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  4230   0019A0  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  4231   0019A4  1E18               	comf	??___xxtofl^0,f,c
  4232   0019A6  1E19               	comf	(??___xxtofl+1)^0,f,c
  4233   0019A8  1E1A               	comf	(??___xxtofl+2)^0,f,c
  4234   0019AA  1E1B               	comf	(??___xxtofl+3)^0,f,c
  4235   0019AC  2A18               	incf	??___xxtofl^0,f,c
  4236   0019AE  0E00               	movlw	0
  4237   0019B0  2219               	addwfc	(??___xxtofl+1)^0,f,c
  4238   0019B2  221A               	addwfc	(??___xxtofl+2)^0,f,c
  4239   0019B4  221B               	addwfc	(??___xxtofl+3)^0,f,c
  4240   0019B6  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  4241   0019BA  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  4242   0019BE  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  4243   0019C2  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  4244   0019C6  EFED  F00C         	goto	l2557
  4245   0019CA                     l1254:
  4246   0019CA  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  4247   0019CE  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4248   0019D2  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4249   0019D6  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4250   0019DA                     l2557:
  4251   0019DA  5014               	movf	___xxtofl@val^0,w,c
  4252   0019DC  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  4253   0019DE  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  4254   0019E0  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  4255   0019E2  A4D8               	btfss	status,2,c
  4256   0019E4  EFF6  F00C         	goto	u1381
  4257   0019E8  EFF8  F00C         	goto	u1380
  4258   0019EC                     u1381:
  4259   0019EC  EF02  F00D         	goto	l2563
  4260   0019F0                     u1380:
  4261   0019F0  0E00               	movlw	0
  4262   0019F2  6E14               	movwf	?___xxtofl^0,c
  4263   0019F4  0E00               	movlw	0
  4264   0019F6  6E15               	movwf	(?___xxtofl+1)^0,c
  4265   0019F8  0E00               	movlw	0
  4266   0019FA  6E16               	movwf	(?___xxtofl+2)^0,c
  4267   0019FC  0E00               	movlw	0
  4268   0019FE  6E17               	movwf	(?___xxtofl+3)^0,c
  4269   001A00  EF93  F00D         	goto	l1257
  4270   001A04                     l2563:
  4271   001A04  0E96               	movlw	150
  4272   001A06  6E1D               	movwf	___xxtofl@exp^0,c
  4273   001A08  EF0C  F00D         	goto	l2567
  4274   001A0C                     l2565:
  4275   001A0C  2A1D               	incf	___xxtofl@exp^0,f,c
  4276   001A0E  90D8               	bcf	status,0,c
  4277   001A10  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4278   001A12  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4279   001A14  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4280   001A16  321E               	rrcf	___xxtofl@arg^0,f,c
  4281   001A18                     l2567:
  4282   001A18  0E00               	movlw	0
  4283   001A1A  141E               	andwf	___xxtofl@arg^0,w,c
  4284   001A1C  6E18               	movwf	??___xxtofl^0,c
  4285   001A1E  0E00               	movlw	0
  4286   001A20  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4287   001A22  6E19               	movwf	(??___xxtofl+1)^0,c
  4288   001A24  0E00               	movlw	0
  4289   001A26  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4290   001A28  6E1A               	movwf	(??___xxtofl+2)^0,c
  4291   001A2A  0EFE               	movlw	254
  4292   001A2C  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4293   001A2E  6E1B               	movwf	(??___xxtofl+3)^0,c
  4294   001A30  5018               	movf	??___xxtofl^0,w,c
  4295   001A32  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4296   001A34  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4297   001A36  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4298   001A38  A4D8               	btfss	status,2,c
  4299   001A3A  EF21  F00D         	goto	u1391
  4300   001A3E  EF23  F00D         	goto	u1390
  4301   001A42                     u1391:
  4302   001A42  EF06  F00D         	goto	l2565
  4303   001A46                     u1390:
  4304   001A46  EF31  F00D         	goto	l1261
  4305   001A4A                     l2569:
  4306   001A4A  2A1D               	incf	___xxtofl@exp^0,f,c
  4307   001A4C  0E01               	movlw	1
  4308   001A4E  261E               	addwf	___xxtofl@arg^0,f,c
  4309   001A50  0E00               	movlw	0
  4310   001A52  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  4311   001A54  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  4312   001A56  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  4313   001A58  90D8               	bcf	status,0,c
  4314   001A5A  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4315   001A5C  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4316   001A5E  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4317   001A60  321E               	rrcf	___xxtofl@arg^0,f,c
  4318   001A62                     l1261:
  4319   001A62  0E00               	movlw	0
  4320   001A64  141E               	andwf	___xxtofl@arg^0,w,c
  4321   001A66  6E18               	movwf	??___xxtofl^0,c
  4322   001A68  0E00               	movlw	0
  4323   001A6A  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4324   001A6C  6E19               	movwf	(??___xxtofl+1)^0,c
  4325   001A6E  0E00               	movlw	0
  4326   001A70  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4327   001A72  6E1A               	movwf	(??___xxtofl+2)^0,c
  4328   001A74  0EFF               	movlw	255
  4329   001A76  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4330   001A78  6E1B               	movwf	(??___xxtofl+3)^0,c
  4331   001A7A  5018               	movf	??___xxtofl^0,w,c
  4332   001A7C  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4333   001A7E  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4334   001A80  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4335   001A82  A4D8               	btfss	status,2,c
  4336   001A84  EF46  F00D         	goto	u1401
  4337   001A88  EF48  F00D         	goto	u1400
  4338   001A8C                     u1401:
  4339   001A8C  EF25  F00D         	goto	l2569
  4340   001A90                     u1400:
  4341   001A90  EF50  F00D         	goto	l2577
  4342   001A94                     l2575:
  4343   001A94  061D               	decf	___xxtofl@exp^0,f,c
  4344   001A96  90D8               	bcf	status,0,c
  4345   001A98  361E               	rlcf	___xxtofl@arg^0,f,c
  4346   001A9A  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  4347   001A9C  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  4348   001A9E  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  4349   001AA0                     l2577:
  4350   001AA0  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  4351   001AA2  EF55  F00D         	goto	u1411
  4352   001AA6  EF57  F00D         	goto	u1410
  4353   001AAA                     u1411:
  4354   001AAA  EF5F  F00D         	goto	l1268
  4355   001AAE                     u1410:
  4356   001AAE  0E02               	movlw	2
  4357   001AB0  601D               	cpfslt	___xxtofl@exp^0,c
  4358   001AB2  EF5D  F00D         	goto	u1421
  4359   001AB6  EF5F  F00D         	goto	u1420
  4360   001ABA                     u1421:
  4361   001ABA  EF4A  F00D         	goto	l2575
  4362   001ABE                     u1420:
  4363   001ABE                     l1268:
  4364   001ABE  B01D               	btfsc	___xxtofl@exp^0,0,c
  4365   001AC0  EF64  F00D         	goto	u1431
  4366   001AC4  EF66  F00D         	goto	u1430
  4367   001AC8                     u1431:
  4368   001AC8  EF67  F00D         	goto	l2583
  4369   001ACC                     u1430:
  4370   001ACC  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  4371   001ACE                     l2583:
  4372   001ACE  90D8               	bcf	status,0,c
  4373   001AD0  321D               	rrcf	___xxtofl@exp^0,f,c
  4374   001AD2  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  4375   001AD6  6A19               	clrf	(??___xxtofl+1)^0,c
  4376   001AD8  6A1A               	clrf	(??___xxtofl+2)^0,c
  4377   001ADA  6A1B               	clrf	(??___xxtofl+3)^0,c
  4378   001ADC  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  4379   001AE0  6A1A               	clrf	(??___xxtofl+2)^0,c
  4380   001AE2  6A19               	clrf	(??___xxtofl+1)^0,c
  4381   001AE4  6A18               	clrf	??___xxtofl^0,c
  4382   001AE6  5018               	movf	??___xxtofl^0,w,c
  4383   001AE8  121E               	iorwf	___xxtofl@arg^0,f,c
  4384   001AEA  5019               	movf	(??___xxtofl+1)^0,w,c
  4385   001AEC  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  4386   001AEE  501A               	movf	(??___xxtofl+2)^0,w,c
  4387   001AF0  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  4388   001AF2  501B               	movf	(??___xxtofl+3)^0,w,c
  4389   001AF4  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  4390   001AF6  501C               	movf	___xxtofl@sign^0,w,c
  4391   001AF8  B4D8               	btfsc	status,2,c
  4392   001AFA  EF81  F00D         	goto	u1441
  4393   001AFE  EF83  F00D         	goto	u1440
  4394   001B02                     u1441:
  4395   001B02  EF8B  F00D         	goto	l2593
  4396   001B06                     u1440:
  4397   001B06  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4398   001B08  EF8A  F00D         	goto	u1450
  4399   001B0C  EF88  F00D         	goto	u1451
  4400   001B10                     u1451:
  4401   001B10  EF8B  F00D         	goto	l2593
  4402   001B14                     u1450:
  4403   001B14  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  4404   001B16                     l2593:
  4405   001B16  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  4406   001B1A  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  4407   001B1E  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  4408   001B22  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  4409   001B26                     l1257:
  4410   001B26  0012               	return		;funcret
  4411   001B28                     __end_of___xxtofl:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _color_normalise *****************
  4415 ;; Defined at:
  4416 ;;		line 100 in file "color.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  4419 ;;		 -> main@RGBC(32), 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1    wreg      void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4435 ;;Total ram usage:        2 bytes
  4436 ;; Hardware stack levels used: 1
  4437 ;; Hardware stack levels required when called: 7
  4438 ;; This function calls:
  4439 ;;		___fldiv
  4440 ;; This function is called by:
  4441 ;;		_main
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text25
  4446   001C94                     __ptext25:
  4447                           	callstack 0
  4448   001C94                     _color_normalise:
  4449                           	callstack 23
  4450   001C94                     
  4451                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  4452   001C94  EE20 F00C          	lfsr	2,12
  4453   001C98  5022               	movf	color_normalise@RGBC^0,w,c
  4454   001C9A  26D9               	addwf	fsr2l,f,c
  4455   001C9C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4456   001C9E  22DA               	addwfc	fsr2h,f,c
  4457   001CA0  CFDE F009          	movff	postinc2,___fldiv@b
  4458   001CA4  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4459   001CA8  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4460   001CAC  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4461   001CB0  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  4462   001CB4  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  4463   001CB8  CFDE F00D          	movff	postinc2,___fldiv@a
  4464   001CBC  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4465   001CC0  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4466   001CC4  CFDE F010          	movff	postinc2,___fldiv@a+3
  4467   001CC8  ECE8  F009         	call	___fldiv	;wreg free
  4468   001CCC  EE20 F010          	lfsr	2,16
  4469   001CD0  5022               	movf	color_normalise@RGBC^0,w,c
  4470   001CD2  26D9               	addwf	fsr2l,f,c
  4471   001CD4  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4472   001CD6  22DA               	addwfc	fsr2h,f,c
  4473   001CD8  C009  FFDE         	movff	?___fldiv,postinc2
  4474   001CDC  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4475   001CE0  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4476   001CE4  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4477                           
  4478                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  4479   001CE8  EE20 F00C          	lfsr	2,12
  4480   001CEC  5022               	movf	color_normalise@RGBC^0,w,c
  4481   001CEE  26D9               	addwf	fsr2l,f,c
  4482   001CF0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4483   001CF2  22DA               	addwfc	fsr2h,f,c
  4484   001CF4  CFDE F009          	movff	postinc2,___fldiv@b
  4485   001CF8  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4486   001CFC  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4487   001D00  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4488   001D04  EE20 F004          	lfsr	2,4
  4489   001D08  5022               	movf	color_normalise@RGBC^0,w,c
  4490   001D0A  26D9               	addwf	fsr2l,f,c
  4491   001D0C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4492   001D0E  22DA               	addwfc	fsr2h,f,c
  4493   001D10  CFDE F00D          	movff	postinc2,___fldiv@a
  4494   001D14  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4495   001D18  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4496   001D1C  CFDE F010          	movff	postinc2,___fldiv@a+3
  4497   001D20  ECE8  F009         	call	___fldiv	;wreg free
  4498   001D24  EE20 F014          	lfsr	2,20
  4499   001D28  5022               	movf	color_normalise@RGBC^0,w,c
  4500   001D2A  26D9               	addwf	fsr2l,f,c
  4501   001D2C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4502   001D2E  22DA               	addwfc	fsr2h,f,c
  4503   001D30  C009  FFDE         	movff	?___fldiv,postinc2
  4504   001D34  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4505   001D38  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4506   001D3C  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4507                           
  4508                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  4509   001D40  EE20 F00C          	lfsr	2,12
  4510   001D44  5022               	movf	color_normalise@RGBC^0,w,c
  4511   001D46  26D9               	addwf	fsr2l,f,c
  4512   001D48  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4513   001D4A  22DA               	addwfc	fsr2h,f,c
  4514   001D4C  CFDE F009          	movff	postinc2,___fldiv@b
  4515   001D50  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4516   001D54  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4517   001D58  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4518   001D5C  EE20 F008          	lfsr	2,8
  4519   001D60  5022               	movf	color_normalise@RGBC^0,w,c
  4520   001D62  26D9               	addwf	fsr2l,f,c
  4521   001D64  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4522   001D66  22DA               	addwfc	fsr2h,f,c
  4523   001D68  CFDE F00D          	movff	postinc2,___fldiv@a
  4524   001D6C  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4525   001D70  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4526   001D74  CFDE F010          	movff	postinc2,___fldiv@a+3
  4527   001D78  ECE8  F009         	call	___fldiv	;wreg free
  4528   001D7C  EE20 F018          	lfsr	2,24
  4529   001D80  5022               	movf	color_normalise@RGBC^0,w,c
  4530   001D82  26D9               	addwf	fsr2l,f,c
  4531   001D84  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4532   001D86  22DA               	addwfc	fsr2h,f,c
  4533   001D88  C009  FFDE         	movff	?___fldiv,postinc2
  4534   001D8C  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4535   001D90  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4536   001D94  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4537                           
  4538                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  4539   001D98  EE20 F00C          	lfsr	2,12
  4540   001D9C  5022               	movf	color_normalise@RGBC^0,w,c
  4541   001D9E  26D9               	addwf	fsr2l,f,c
  4542   001DA0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4543   001DA2  22DA               	addwfc	fsr2h,f,c
  4544   001DA4  CFDE F009          	movff	postinc2,___fldiv@b
  4545   001DA8  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4546   001DAC  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4547   001DB0  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4548   001DB4  0E00               	movlw	0
  4549   001DB6  6E0D               	movwf	___fldiv@a^0,c
  4550   001DB8  0E00               	movlw	0
  4551   001DBA  6E0E               	movwf	(___fldiv@a+1)^0,c
  4552   001DBC  0E00               	movlw	0
  4553   001DBE  6E0F               	movwf	(___fldiv@a+2)^0,c
  4554   001DC0  0E00               	movlw	0
  4555   001DC2  6E10               	movwf	(___fldiv@a+3)^0,c
  4556   001DC4  ECE8  F009         	call	___fldiv	;wreg free
  4557   001DC8  EE20 F01C          	lfsr	2,28
  4558   001DCC  5022               	movf	color_normalise@RGBC^0,w,c
  4559   001DCE  26D9               	addwf	fsr2l,f,c
  4560   001DD0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4561   001DD2  22DA               	addwfc	fsr2h,f,c
  4562   001DD4  C009  FFDE         	movff	?___fldiv,postinc2
  4563   001DD8  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4564   001DDC  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4565   001DE0  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4566   001DE4  0012               	return		;funcret
  4567   001DE6                     __end_of_color_normalise:
  4568                           	callstack 0
  4569                           
  4570 ;; *************** function ___fldiv *****************
  4571 ;; Defined at:
  4572 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;  b               4    8[COMRAM] void 
  4575 ;;  a               4   12[COMRAM] void 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  grs             4   27[COMRAM] unsigned long 
  4578 ;;  rem             4   20[COMRAM] unsigned long 
  4579 ;;  new_exp         2   25[COMRAM] short 
  4580 ;;  aexp            1   32[COMRAM] unsigned char 
  4581 ;;  bexp            1   31[COMRAM] unsigned char 
  4582 ;;  sign            1   24[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  4    8[COMRAM] unsigned char 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4593 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4594 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4595 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4596 ;;Total ram usage:       25 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; Hardware stack levels required when called: 6
  4599 ;; This function calls:
  4600 ;;		Nothing
  4601 ;; This function is called by:
  4602 ;;		_color_normalise
  4603 ;; This function uses a non-reentrant model
  4604 ;;
  4605                           
  4606                           	psect	text26
  4607   0013D0                     __ptext26:
  4608                           	callstack 0
  4609   0013D0                     ___fldiv:
  4610                           	callstack 23
  4611   0013D0  500C               	movf	(___fldiv@b+3)^0,w,c
  4612   0013D2  0B80               	andlw	128
  4613   0013D4  6E19               	movwf	___fldiv@sign^0,c
  4614   0013D6  500C               	movf	(___fldiv@b+3)^0,w,c
  4615   0013D8  240C               	addwf	(___fldiv@b+3)^0,w,c
  4616   0013DA  6E20               	movwf	___fldiv@bexp^0,c
  4617   0013DC  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  4618   0013DE  EFF3  F009         	goto	u1081
  4619   0013E2  EFF5  F009         	goto	u1080
  4620   0013E6                     u1081:
  4621   0013E6  EFF6  F009         	goto	l2397
  4622   0013EA                     u1080:
  4623   0013EA  8020               	bsf	___fldiv@bexp^0,0,c
  4624   0013EC                     l2397:
  4625   0013EC  5020               	movf	___fldiv@bexp^0,w,c
  4626   0013EE  B4D8               	btfsc	status,2,c
  4627   0013F0  EFFC  F009         	goto	u1091
  4628   0013F4  EFFE  F009         	goto	u1090
  4629   0013F8                     u1091:
  4630   0013F8  EF13  F00A         	goto	l2407
  4631   0013FC                     u1090:
  4632   0013FC  2820               	incf	___fldiv@bexp^0,w,c
  4633   0013FE  A4D8               	btfss	status,2,c
  4634   001400  EF04  F00A         	goto	u1101
  4635   001404  EF06  F00A         	goto	u1100
  4636   001408                     u1101:
  4637   001408  EF0E  F00A         	goto	l2403
  4638   00140C                     u1100:
  4639   00140C  0E00               	movlw	0
  4640   00140E  6E09               	movwf	___fldiv@b^0,c
  4641   001410  0E00               	movlw	0
  4642   001412  6E0A               	movwf	(___fldiv@b+1)^0,c
  4643   001414  0E00               	movlw	0
  4644   001416  6E0B               	movwf	(___fldiv@b+2)^0,c
  4645   001418  0E00               	movlw	0
  4646   00141A  6E0C               	movwf	(___fldiv@b+3)^0,c
  4647   00141C                     l2403:
  4648   00141C  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  4649   00141E  0E00               	movlw	0
  4650   001420  6E0C               	movwf	(___fldiv@b+3)^0,c
  4651   001422  EF1B  F00A         	goto	l2409
  4652   001426                     l2407:
  4653   001426  0E00               	movlw	0
  4654   001428  6E09               	movwf	___fldiv@b^0,c
  4655   00142A  0E00               	movlw	0
  4656   00142C  6E0A               	movwf	(___fldiv@b+1)^0,c
  4657   00142E  0E00               	movlw	0
  4658   001430  6E0B               	movwf	(___fldiv@b+2)^0,c
  4659   001432  0E00               	movlw	0
  4660   001434  6E0C               	movwf	(___fldiv@b+3)^0,c
  4661   001436                     l2409:
  4662   001436  5010               	movf	(___fldiv@a+3)^0,w,c
  4663   001438  0B80               	andlw	128
  4664   00143A  1A19               	xorwf	___fldiv@sign^0,f,c
  4665   00143C  5010               	movf	(___fldiv@a+3)^0,w,c
  4666   00143E  2410               	addwf	(___fldiv@a+3)^0,w,c
  4667   001440  6E21               	movwf	___fldiv@aexp^0,c
  4668   001442  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  4669   001444  EF26  F00A         	goto	u1111
  4670   001448  EF28  F00A         	goto	u1110
  4671   00144C                     u1111:
  4672   00144C  EF29  F00A         	goto	l2417
  4673   001450                     u1110:
  4674   001450  8021               	bsf	___fldiv@aexp^0,0,c
  4675   001452                     l2417:
  4676   001452  5021               	movf	___fldiv@aexp^0,w,c
  4677   001454  B4D8               	btfsc	status,2,c
  4678   001456  EF2F  F00A         	goto	u1121
  4679   00145A  EF31  F00A         	goto	u1120
  4680   00145E                     u1121:
  4681   00145E  EF46  F00A         	goto	l2427
  4682   001462                     u1120:
  4683   001462  2821               	incf	___fldiv@aexp^0,w,c
  4684   001464  A4D8               	btfss	status,2,c
  4685   001466  EF37  F00A         	goto	u1131
  4686   00146A  EF39  F00A         	goto	u1130
  4687   00146E                     u1131:
  4688   00146E  EF41  F00A         	goto	l2423
  4689   001472                     u1130:
  4690   001472  0E00               	movlw	0
  4691   001474  6E0D               	movwf	___fldiv@a^0,c
  4692   001476  0E00               	movlw	0
  4693   001478  6E0E               	movwf	(___fldiv@a+1)^0,c
  4694   00147A  0E00               	movlw	0
  4695   00147C  6E0F               	movwf	(___fldiv@a+2)^0,c
  4696   00147E  0E00               	movlw	0
  4697   001480  6E10               	movwf	(___fldiv@a+3)^0,c
  4698   001482                     l2423:
  4699   001482  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  4700   001484  0E00               	movlw	0
  4701   001486  6E10               	movwf	(___fldiv@a+3)^0,c
  4702   001488  EF4E  F00A         	goto	l2429
  4703   00148C                     l2427:
  4704   00148C  0E00               	movlw	0
  4705   00148E  6E0D               	movwf	___fldiv@a^0,c
  4706   001490  0E00               	movlw	0
  4707   001492  6E0E               	movwf	(___fldiv@a+1)^0,c
  4708   001494  0E00               	movlw	0
  4709   001496  6E0F               	movwf	(___fldiv@a+2)^0,c
  4710   001498  0E00               	movlw	0
  4711   00149A  6E10               	movwf	(___fldiv@a+3)^0,c
  4712   00149C                     l2429:
  4713   00149C  500D               	movf	___fldiv@a^0,w,c
  4714   00149E  100E               	iorwf	(___fldiv@a+1)^0,w,c
  4715   0014A0  100F               	iorwf	(___fldiv@a+2)^0,w,c
  4716   0014A2  1010               	iorwf	(___fldiv@a+3)^0,w,c
  4717   0014A4  A4D8               	btfss	status,2,c
  4718   0014A6  EF57  F00A         	goto	u1141
  4719   0014AA  EF59  F00A         	goto	u1140
  4720   0014AE                     u1141:
  4721   0014AE  EF71  F00A         	goto	l2441
  4722   0014B2                     u1140:
  4723   0014B2  0E00               	movlw	0
  4724   0014B4  6E09               	movwf	___fldiv@b^0,c
  4725   0014B6  0E00               	movlw	0
  4726   0014B8  6E0A               	movwf	(___fldiv@b+1)^0,c
  4727   0014BA  0E00               	movlw	0
  4728   0014BC  6E0B               	movwf	(___fldiv@b+2)^0,c
  4729   0014BE  0E00               	movlw	0
  4730   0014C0  6E0C               	movwf	(___fldiv@b+3)^0,c
  4731   0014C2  0E80               	movlw	128
  4732   0014C4  120B               	iorwf	(___fldiv@b+2)^0,f,c
  4733   0014C6  0E7F               	movlw	127
  4734   0014C8  120C               	iorwf	(___fldiv@b+3)^0,f,c
  4735   0014CA                     l2435:
  4736   0014CA  5019               	movf	___fldiv@sign^0,w,c
  4737   0014CC  120C               	iorwf	(___fldiv@b+3)^0,f,c
  4738   0014CE  C009  F009         	movff	___fldiv@b,?___fldiv
  4739   0014D2  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  4740   0014D6  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  4741   0014DA  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  4742   0014DE  EFB4  F00B         	goto	l1181
  4743   0014E2                     l2441:
  4744   0014E2  5020               	movf	___fldiv@bexp^0,w,c
  4745   0014E4  A4D8               	btfss	status,2,c
  4746   0014E6  EF77  F00A         	goto	u1151
  4747   0014EA  EF79  F00A         	goto	u1150
  4748   0014EE                     u1151:
  4749   0014EE  EF83  F00A         	goto	l2449
  4750   0014F2                     u1150:
  4751   0014F2  0E00               	movlw	0
  4752   0014F4  6E09               	movwf	?___fldiv^0,c
  4753   0014F6  0E00               	movlw	0
  4754   0014F8  6E0A               	movwf	(?___fldiv+1)^0,c
  4755   0014FA  0E00               	movlw	0
  4756   0014FC  6E0B               	movwf	(?___fldiv+2)^0,c
  4757   0014FE  0E00               	movlw	0
  4758   001500  6E0C               	movwf	(?___fldiv+3)^0,c
  4759   001502  EFB4  F00B         	goto	l1181
  4760   001506                     l2449:
  4761   001506  5021               	movf	___fldiv@aexp^0,w,c
  4762   001508  C020  F011         	movff	___fldiv@bexp,??___fldiv
  4763   00150C  6A12               	clrf	(??___fldiv+1)^0,c
  4764   00150E  5E11               	subwf	??___fldiv^0,f,c
  4765   001510  0E00               	movlw	0
  4766   001512  5A12               	subwfb	(??___fldiv+1)^0,f,c
  4767   001514  0E7F               	movlw	127
  4768   001516  2411               	addwf	??___fldiv^0,w,c
  4769   001518  6E1A               	movwf	___fldiv@new_exp^0,c
  4770   00151A  0E00               	movlw	0
  4771   00151C  2012               	addwfc	(??___fldiv+1)^0,w,c
  4772   00151E  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  4773   001520  C009  F015         	movff	___fldiv@b,___fldiv@rem
  4774   001524  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  4775   001528  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  4776   00152C  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  4777   001530  0E00               	movlw	0
  4778   001532  6E09               	movwf	___fldiv@b^0,c
  4779   001534  0E00               	movlw	0
  4780   001536  6E0A               	movwf	(___fldiv@b+1)^0,c
  4781   001538  0E00               	movlw	0
  4782   00153A  6E0B               	movwf	(___fldiv@b+2)^0,c
  4783   00153C  0E00               	movlw	0
  4784   00153E  6E0C               	movwf	(___fldiv@b+3)^0,c
  4785   001540  0E00               	movlw	0
  4786   001542  6E1C               	movwf	___fldiv@grs^0,c
  4787   001544  0E00               	movlw	0
  4788   001546  6E1D               	movwf	(___fldiv@grs+1)^0,c
  4789   001548  0E00               	movlw	0
  4790   00154A  6E1E               	movwf	(___fldiv@grs+2)^0,c
  4791   00154C  0E00               	movlw	0
  4792   00154E  6E1F               	movwf	(___fldiv@grs+3)^0,c
  4793   001550  0E00               	movlw	0
  4794   001552  6E21               	movwf	___fldiv@aexp^0,c
  4795   001554  EFE4  F00A         	goto	l1183
  4796   001558                     l2459:
  4797   001558  5021               	movf	___fldiv@aexp^0,w,c
  4798   00155A  B4D8               	btfsc	status,2,c
  4799   00155C  EFB2  F00A         	goto	u1161
  4800   001560  EFB4  F00A         	goto	u1160
  4801   001564                     u1161:
  4802   001564  EFCB  F00A         	goto	l2467
  4803   001568                     u1160:
  4804   001568  90D8               	bcf	status,0,c
  4805   00156A  3615               	rlcf	___fldiv@rem^0,f,c
  4806   00156C  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  4807   00156E  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  4808   001570  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  4809   001572  90D8               	bcf	status,0,c
  4810   001574  3609               	rlcf	___fldiv@b^0,f,c
  4811   001576  360A               	rlcf	(___fldiv@b+1)^0,f,c
  4812   001578  360B               	rlcf	(___fldiv@b+2)^0,f,c
  4813   00157A  360C               	rlcf	(___fldiv@b+3)^0,f,c
  4814   00157C  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4815   00157E  EFC3  F00A         	goto	u1171
  4816   001582  EFC5  F00A         	goto	u1170
  4817   001586                     u1171:
  4818   001586  EFC6  F00A         	goto	l1186
  4819   00158A                     u1170:
  4820   00158A  8009               	bsf	___fldiv@b^0,0,c
  4821   00158C                     l1186:
  4822   00158C  90D8               	bcf	status,0,c
  4823   00158E  361C               	rlcf	___fldiv@grs^0,f,c
  4824   001590  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  4825   001592  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  4826   001594  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  4827   001596                     l2467:
  4828   001596  500D               	movf	___fldiv@a^0,w,c
  4829   001598  5C15               	subwf	___fldiv@rem^0,w,c
  4830   00159A  500E               	movf	(___fldiv@a+1)^0,w,c
  4831   00159C  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  4832   00159E  500F               	movf	(___fldiv@a+2)^0,w,c
  4833   0015A0  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  4834   0015A2  5010               	movf	(___fldiv@a+3)^0,w,c
  4835   0015A4  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  4836   0015A6  A0D8               	btfss	status,0,c
  4837   0015A8  EFD8  F00A         	goto	u1181
  4838   0015AC  EFDA  F00A         	goto	u1180
  4839   0015B0                     u1181:
  4840   0015B0  EFE3  F00A         	goto	l2473
  4841   0015B4                     u1180:
  4842   0015B4  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  4843   0015B6  500D               	movf	___fldiv@a^0,w,c
  4844   0015B8  5E15               	subwf	___fldiv@rem^0,f,c
  4845   0015BA  500E               	movf	(___fldiv@a+1)^0,w,c
  4846   0015BC  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  4847   0015BE  500F               	movf	(___fldiv@a+2)^0,w,c
  4848   0015C0  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  4849   0015C2  5010               	movf	(___fldiv@a+3)^0,w,c
  4850   0015C4  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  4851   0015C6                     l2473:
  4852   0015C6  2A21               	incf	___fldiv@aexp^0,f,c
  4853   0015C8                     l1183:
  4854   0015C8  0E19               	movlw	25
  4855   0015CA  6421               	cpfsgt	___fldiv@aexp^0,c
  4856   0015CC  EFEA  F00A         	goto	u1191
  4857   0015D0  EFEC  F00A         	goto	u1190
  4858   0015D4                     u1191:
  4859   0015D4  EFAC  F00A         	goto	l2459
  4860   0015D8                     u1190:
  4861   0015D8  5015               	movf	___fldiv@rem^0,w,c
  4862   0015DA  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  4863   0015DC  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  4864   0015DE  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  4865   0015E0  B4D8               	btfsc	status,2,c
  4866   0015E2  EFF5  F00A         	goto	u1201
  4867   0015E6  EFF7  F00A         	goto	u1200
  4868   0015EA                     u1201:
  4869   0015EA  EF0F  F00B         	goto	l2485
  4870   0015EE                     u1200:
  4871   0015EE  801C               	bsf	___fldiv@grs^0,0,c
  4872   0015F0  EF0F  F00B         	goto	l2485
  4873   0015F4                     l2479:
  4874   0015F4  90D8               	bcf	status,0,c
  4875   0015F6  3609               	rlcf	___fldiv@b^0,f,c
  4876   0015F8  360A               	rlcf	(___fldiv@b+1)^0,f,c
  4877   0015FA  360B               	rlcf	(___fldiv@b+2)^0,f,c
  4878   0015FC  360C               	rlcf	(___fldiv@b+3)^0,f,c
  4879   0015FE  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4880   001600  EF04  F00B         	goto	u1211
  4881   001604  EF06  F00B         	goto	u1210
  4882   001608                     u1211:
  4883   001608  EF07  F00B         	goto	l1192
  4884   00160C                     u1210:
  4885   00160C  8009               	bsf	___fldiv@b^0,0,c
  4886   00160E                     l1192:
  4887   00160E  90D8               	bcf	status,0,c
  4888   001610  361C               	rlcf	___fldiv@grs^0,f,c
  4889   001612  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  4890   001614  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  4891   001616  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  4892   001618  061A               	decf	___fldiv@new_exp^0,f,c
  4893   00161A  A0D8               	btfss	status,0,c
  4894   00161C  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  4895   00161E                     l2485:
  4896   00161E  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  4897   001620  EF14  F00B         	goto	u1221
  4898   001624  EF16  F00B         	goto	u1220
  4899   001628                     u1221:
  4900   001628  EFFA  F00A         	goto	l2479
  4901   00162C                     u1220:
  4902   00162C  0E00               	movlw	0
  4903   00162E  6E21               	movwf	___fldiv@aexp^0,c
  4904   001630  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4905   001632  EF1D  F00B         	goto	u1231
  4906   001636  EF1F  F00B         	goto	u1230
  4907   00163A                     u1231:
  4908   00163A  EF43  F00B         	goto	l1194
  4909   00163E                     u1230:
  4910   00163E  0EFF               	movlw	255
  4911   001640  141C               	andwf	___fldiv@grs^0,w,c
  4912   001642  6E11               	movwf	??___fldiv^0,c
  4913   001644  0EFF               	movlw	255
  4914   001646  141D               	andwf	(___fldiv@grs+1)^0,w,c
  4915   001648  6E12               	movwf	(??___fldiv+1)^0,c
  4916   00164A  0EFF               	movlw	255
  4917   00164C  141E               	andwf	(___fldiv@grs+2)^0,w,c
  4918   00164E  6E13               	movwf	(??___fldiv+2)^0,c
  4919   001650  0E7F               	movlw	127
  4920   001652  141F               	andwf	(___fldiv@grs+3)^0,w,c
  4921   001654  6E14               	movwf	(??___fldiv+3)^0,c
  4922   001656  5011               	movf	??___fldiv^0,w,c
  4923   001658  1012               	iorwf	(??___fldiv+1)^0,w,c
  4924   00165A  1013               	iorwf	(??___fldiv+2)^0,w,c
  4925   00165C  1014               	iorwf	(??___fldiv+3)^0,w,c
  4926   00165E  B4D8               	btfsc	status,2,c
  4927   001660  EF34  F00B         	goto	u1241
  4928   001664  EF36  F00B         	goto	u1240
  4929   001668                     u1241:
  4930   001668  EF3A  F00B         	goto	l1195
  4931   00166C                     u1240:
  4932   00166C                     l2493:
  4933   00166C  0E01               	movlw	1
  4934   00166E  6E21               	movwf	___fldiv@aexp^0,c
  4935   001670  EF43  F00B         	goto	l1194
  4936   001674                     l1195:
  4937   001674  A009               	btfss	___fldiv@b^0,0,c
  4938   001676  EF3F  F00B         	goto	u1251
  4939   00167A  EF41  F00B         	goto	u1250
  4940   00167E                     u1251:
  4941   00167E  EF43  F00B         	goto	l1194
  4942   001682                     u1250:
  4943   001682  EF36  F00B         	goto	l2493
  4944   001686                     l1194:
  4945   001686  5021               	movf	___fldiv@aexp^0,w,c
  4946   001688  B4D8               	btfsc	status,2,c
  4947   00168A  EF49  F00B         	goto	u1261
  4948   00168E  EF4B  F00B         	goto	u1260
  4949   001692                     u1261:
  4950   001692  EF6F  F00B         	goto	l2505
  4951   001696                     u1260:
  4952   001696  0E01               	movlw	1
  4953   001698  2609               	addwf	___fldiv@b^0,f,c
  4954   00169A  0E00               	movlw	0
  4955   00169C  220A               	addwfc	(___fldiv@b+1)^0,f,c
  4956   00169E  220B               	addwfc	(___fldiv@b+2)^0,f,c
  4957   0016A0  220C               	addwfc	(___fldiv@b+3)^0,f,c
  4958   0016A2  A00C               	btfss	(___fldiv@b+3)^0,0,c
  4959   0016A4  EF56  F00B         	goto	u1271
  4960   0016A8  EF58  F00B         	goto	u1270
  4961   0016AC                     u1271:
  4962   0016AC  EF6F  F00B         	goto	l2505
  4963   0016B0                     u1270:
  4964   0016B0  C009  F011         	movff	___fldiv@b,??___fldiv
  4965   0016B4  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  4966   0016B8  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  4967   0016BC  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  4968   0016C0  3414               	rlcf	(??___fldiv+3)^0,w,c
  4969   0016C2  3214               	rrcf	(??___fldiv+3)^0,f,c
  4970   0016C4  3213               	rrcf	(??___fldiv+2)^0,f,c
  4971   0016C6  3212               	rrcf	(??___fldiv+1)^0,f,c
  4972   0016C8  3211               	rrcf	??___fldiv^0,f,c
  4973   0016CA  C011  F009         	movff	??___fldiv,___fldiv@b
  4974   0016CE  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  4975   0016D2  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  4976   0016D6  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  4977   0016DA  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  4978   0016DC  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  4979   0016DE                     l2505:
  4980   0016DE  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4981   0016E0  EF7A  F00B         	goto	u1281
  4982   0016E4  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  4983   0016E6  E108               	bnz	u1280
  4984   0016E8  281A               	incf	___fldiv@new_exp^0,w,c
  4985   0016EA  A0D8               	btfss	status,0,c
  4986   0016EC  EF7A  F00B         	goto	u1281
  4987   0016F0  EF7C  F00B         	goto	u1280
  4988   0016F4                     u1281:
  4989   0016F4  EF87  F00B         	goto	l2509
  4990   0016F8                     u1280:
  4991   0016F8  0E00               	movlw	0
  4992   0016FA  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  4993   0016FC  681A               	setf	___fldiv@new_exp^0,c
  4994   0016FE  0E00               	movlw	0
  4995   001700  6E09               	movwf	___fldiv@b^0,c
  4996   001702  0E00               	movlw	0
  4997   001704  6E0A               	movwf	(___fldiv@b+1)^0,c
  4998   001706  0E00               	movlw	0
  4999   001708  6E0B               	movwf	(___fldiv@b+2)^0,c
  5000   00170A  0E00               	movlw	0
  5001   00170C  6E0C               	movwf	(___fldiv@b+3)^0,c
  5002   00170E                     l2509:
  5003   00170E  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5004   001710  EF94  F00B         	goto	u1290
  5005   001714  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5006   001716  E106               	bnz	u1291
  5007   001718  041A               	decf	___fldiv@new_exp^0,w,c
  5008   00171A  B0D8               	btfsc	status,0,c
  5009   00171C  EF92  F00B         	goto	u1291
  5010   001720  EF94  F00B         	goto	u1290
  5011   001724                     u1291:
  5012   001724  EFA2  F00B         	goto	l2513
  5013   001728                     u1290:
  5014   001728  0E00               	movlw	0
  5015   00172A  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5016   00172C  0E00               	movlw	0
  5017   00172E  6E1A               	movwf	___fldiv@new_exp^0,c
  5018   001730  0E00               	movlw	0
  5019   001732  6E09               	movwf	___fldiv@b^0,c
  5020   001734  0E00               	movlw	0
  5021   001736  6E0A               	movwf	(___fldiv@b+1)^0,c
  5022   001738  0E00               	movlw	0
  5023   00173A  6E0B               	movwf	(___fldiv@b+2)^0,c
  5024   00173C  0E00               	movlw	0
  5025   00173E  6E0C               	movwf	(___fldiv@b+3)^0,c
  5026   001740  0E00               	movlw	0
  5027   001742  6E19               	movwf	___fldiv@sign^0,c
  5028   001744                     l2513:
  5029   001744  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  5030   001748  A020               	btfss	___fldiv@bexp^0,0,c
  5031   00174A  EFA9  F00B         	goto	u1301
  5032   00174E  EFAB  F00B         	goto	u1300
  5033   001752                     u1301:
  5034   001752  EFAE  F00B         	goto	l2519
  5035   001756                     u1300:
  5036   001756  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  5037   001758  EFAF  F00B         	goto	l2521
  5038   00175C                     l2519:
  5039   00175C  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  5040   00175E                     l2521:
  5041   00175E  90D8               	bcf	status,0,c
  5042   001760  3020               	rrcf	___fldiv@bexp^0,w,c
  5043   001762  6E0C               	movwf	(___fldiv@b+3)^0,c
  5044   001764  EF65  F00A         	goto	l2435
  5045   001768                     l1181:
  5046   001768  0012               	return		;funcret
  5047   00176A                     __end_of___fldiv:
  5048                           	callstack 0
  5049                           
  5050 ;; *************** function _color_click_init *****************
  5051 ;; Defined at:
  5052 ;;		line 11 in file "color.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;Total ram usage:        1 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 9
  5073 ;; This function calls:
  5074 ;;		_I2C_2_Master_Init
  5075 ;;		_color_writetoaddr
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text27
  5082   0026FC                     __ptext27:
  5083                           	callstack 0
  5084   0026FC                     _color_click_init:
  5085                           	callstack 21
  5086   0026FC                     
  5087                           ;color.c: 14:     I2C_2_Master_Init();
  5088   0026FC  ECCA  F013         	call	_I2C_2_Master_Init	;wreg free
  5089   002700                     
  5090                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  5091   002700  0E01               	movlw	1
  5092   002702  6E0B               	movwf	color_writetoaddr@value^0,c
  5093   002704  0E00               	movlw	0
  5094   002706  EC44  F014         	call	_color_writetoaddr
  5095   00270A                     
  5096                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5097   00270A  0E3F               	movlw	63
  5098   00270C  6E0D               	movwf	??_color_click_init^0,c
  5099   00270E  0E55               	movlw	85
  5100   002710                     u1977:
  5101   002710  2EE8               	decfsz	wreg,f,c
  5102   002712  D7FE               	bra	u1977
  5103   002714  2E0D               	decfsz	??_color_click_init^0,f,c
  5104   002716  D7FC               	bra	u1977
  5105   002718  F000               	nop	
  5106   00271A                     
  5107                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  5108   00271A  0E03               	movlw	3
  5109   00271C  6E0B               	movwf	color_writetoaddr@value^0,c
  5110   00271E  0E00               	movlw	0
  5111   002720  EC44  F014         	call	_color_writetoaddr
  5112   002724                     
  5113                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  5114   002724  0ED5               	movlw	213
  5115   002726  6E0B               	movwf	color_writetoaddr@value^0,c
  5116   002728  0E01               	movlw	1
  5117   00272A  EC44  F014         	call	_color_writetoaddr
  5118   00272E  0012               	return		;funcret
  5119   002730                     __end_of_color_click_init:
  5120                           	callstack 0
  5121                           
  5122 ;; *************** function _I2C_2_Master_Init *****************
  5123 ;; Defined at:
  5124 ;;		line 4 in file "i2c.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;		None
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;		None
  5129 ;; Return value:  Size  Location     Type
  5130 ;;                  1    wreg      void 
  5131 ;; Registers used:
  5132 ;;		wreg, status,2
  5133 ;; Tracked objects:
  5134 ;;		On entry : 0/0
  5135 ;;		On exit  : 0/0
  5136 ;;		Unchanged: 0/0
  5137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5142 ;;Total ram usage:        0 bytes
  5143 ;; Hardware stack levels used: 1
  5144 ;; Hardware stack levels required when called: 6
  5145 ;; This function calls:
  5146 ;;		Nothing
  5147 ;; This function is called by:
  5148 ;;		_color_click_init
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text28
  5153   002794                     __ptext28:
  5154                           	callstack 0
  5155   002794                     _I2C_2_Master_Init:
  5156                           	callstack 23
  5157   002794                     
  5158                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5159   002794  010E               	movlb	14	; () banked
  5160   002796  51D9               	movf	217,w,b	;volatile
  5161   002798  0BF0               	andlw	-16
  5162   00279A  0908               	iorlw	8
  5163   00279C  6FD9               	movwf	217,b	;volatile
  5164   00279E                     
  5165                           ; BSR set to: 14
  5166                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5167   00279E  8BD9               	bsf	217,5,b	;volatile
  5168                           
  5169                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5170   0027A0  0E9F               	movlw	159
  5171   0027A2  6FD6               	movwf	214,b	;volatile
  5172   0027A4                     
  5173                           ; BSR set to: 14
  5174                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5175   0027A4  8A84               	bsf	132,5,c	;volatile
  5176   0027A6                     
  5177                           ; BSR set to: 14
  5178                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5179   0027A6  8C84               	bsf	132,6,c	;volatile
  5180   0027A8                     
  5181                           ; BSR set to: 14
  5182                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5183   0027A8  9BA7               	bcf	167,5,b	;volatile
  5184   0027AA                     
  5185                           ; BSR set to: 14
  5186                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5187   0027AA  9DA7               	bcf	167,6,b	;volatile
  5188                           
  5189                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5190   0027AC  0E1D               	movlw	29
  5191   0027AE  6F1D               	movwf	29,b	;volatile
  5192                           
  5193                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5194   0027B0  0E1E               	movlw	30
  5195   0027B2  6F1C               	movwf	28,b	;volatile
  5196                           
  5197                           ;i2c.c: 18:   RD5PPS=0x1C;
  5198   0027B4  0E1C               	movlw	28
  5199   0027B6  6F6F               	movwf	111,b	;volatile
  5200                           
  5201                           ;i2c.c: 19:   RD6PPS=0x1B;
  5202   0027B8  0E1B               	movlw	27
  5203   0027BA  6F70               	movwf	112,b	;volatile
  5204   0027BC                     
  5205                           ; BSR set to: 14
  5206   0027BC  0012               	return		;funcret
  5207   0027BE                     __end_of_I2C_2_Master_Init:
  5208                           	callstack 0
  5209                           
  5210 ;; *************** function _Interrupts_init *****************
  5211 ;; Defined at:
  5212 ;;		line 10 in file "interrupts.c"
  5213 ;; Parameters:    Size  Location     Type
  5214 ;;		None
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;		None
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		None
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;Total ram usage:        0 bytes
  5231 ;; Hardware stack levels used: 1
  5232 ;; Hardware stack levels required when called: 6
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_main
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text29
  5241   002912                     __ptext29:
  5242                           	callstack 0
  5243   002912                     _Interrupts_init:
  5244                           	callstack 24
  5245   002912                     
  5246                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  5247   002912  8082               	bsf	130,0,c	;volatile
  5248                           
  5249                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  5250   002914  010E               	movlb	14	; () banked
  5251   002916  919A               	bcf	154,0,b	;volatile
  5252                           
  5253                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  5254   002918  9133               	bcf	51,0,b	;volatile
  5255                           
  5256                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  5257   00291A  8129               	bsf	41,0,b	;volatile
  5258                           
  5259                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  5260   00291C  811F               	bsf	31,0,b	;volatile
  5261                           
  5262                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  5263   00291E  90F2               	bcf	242,0,c	;volatile
  5264                           
  5265                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  5266   002920  8AF2               	bsf	242,5,c	;volatile
  5267                           
  5268                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  5269   002922  8CF2               	bsf	242,6,c	;volatile
  5270                           
  5271                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  5272   002924  8EF2               	bsf	242,7,c	;volatile
  5273   002926                     
  5274                           ; BSR set to: 14
  5275   002926  0012               	return		;funcret
  5276   002928                     __end_of_Interrupts_init:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function _Color_Interrupts_threshold *****************
  5280 ;; Defined at:
  5281 ;;		line 38 in file "interrupts.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  upperThresho    2   12[COMRAM] unsigned int 
  5284 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  1    wreg      void 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5299 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5300 ;;Total ram usage:        4 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; Hardware stack levels required when called: 9
  5303 ;; This function calls:
  5304 ;;		_color_writetoaddr
  5305 ;; This function is called by:
  5306 ;;		_main
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text30
  5311   0027BE                     __ptext30:
  5312                           	callstack 0
  5313   0027BE                     _Color_Interrupts_threshold:
  5314                           	callstack 21
  5315   0027BE                     
  5316                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  5317   0027BE  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  5318   0027C2  0E04               	movlw	4
  5319   0027C4  EC44  F014         	call	_color_writetoaddr
  5320                           
  5321                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  5322   0027C8  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  5323   0027CA  6E0B               	movwf	color_writetoaddr@value^0,c
  5324   0027CC  0E05               	movlw	5
  5325   0027CE  EC44  F014         	call	_color_writetoaddr
  5326                           
  5327                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  5328   0027D2  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  5329   0027D6  0E06               	movlw	6
  5330   0027D8  EC44  F014         	call	_color_writetoaddr
  5331                           
  5332                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  5333   0027DC  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  5334   0027DE  6E0B               	movwf	color_writetoaddr@value^0,c
  5335   0027E0  0E07               	movlw	7
  5336   0027E2  EC44  F014         	call	_color_writetoaddr
  5337   0027E6  0012               	return		;funcret
  5338   0027E8                     __end_of_Color_Interrupts_threshold:
  5339                           	callstack 0
  5340                           
  5341 ;; *************** function _Color_Interrupts_init *****************
  5342 ;; Defined at:
  5343 ;;		line 29 in file "interrupts.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;		None
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, status,2, status,0, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5361 ;;Total ram usage:        1 bytes
  5362 ;; Hardware stack levels used: 1
  5363 ;; Hardware stack levels required when called: 9
  5364 ;; This function calls:
  5365 ;;		_color_writetoaddr
  5366 ;; This function is called by:
  5367 ;;		_main
  5368 ;; This function uses a non-reentrant model
  5369 ;;
  5370                           
  5371                           	psect	text31
  5372   0028C8                     __ptext31:
  5373                           	callstack 0
  5374   0028C8                     _Color_Interrupts_init:
  5375                           	callstack 21
  5376   0028C8                     
  5377                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  5378   0028C8  0E13               	movlw	19
  5379   0028CA  6E0B               	movwf	color_writetoaddr@value^0,c
  5380   0028CC  0E00               	movlw	0
  5381   0028CE  EC44  F014         	call	_color_writetoaddr
  5382   0028D2                     
  5383                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  5384   0028D2  0ED0               	movlw	208
  5385   0028D4  6E0D               	movwf	??_Color_Interrupts_init^0,c
  5386   0028D6  0ECA               	movlw	202
  5387   0028D8                     u1987:
  5388   0028D8  2EE8               	decfsz	wreg,f,c
  5389   0028DA  D7FE               	bra	u1987
  5390   0028DC  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  5391   0028DE  D7FC               	bra	u1987
  5392   0028E0  0012               	return		;funcret
  5393   0028E2                     __end_of_Color_Interrupts_init:
  5394                           	callstack 0
  5395                           
  5396 ;; *************** function _color_writetoaddr *****************
  5397 ;; Defined at:
  5398 ;;		line 27 in file "color.c"
  5399 ;; Parameters:    Size  Location     Type
  5400 ;;  address         1    wreg     unsigned char 
  5401 ;;  value           1   10[COMRAM] unsigned char 
  5402 ;; Auto vars:     Size  Location     Type
  5403 ;;  address         1   11[COMRAM] unsigned char 
  5404 ;; Return value:  Size  Location     Type
  5405 ;;                  1    wreg      void 
  5406 ;; Registers used:
  5407 ;;		wreg, status,2, status,0, cstack
  5408 ;; Tracked objects:
  5409 ;;		On entry : 0/0
  5410 ;;		On exit  : 0/0
  5411 ;;		Unchanged: 0/0
  5412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5414 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5416 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5417 ;;Total ram usage:        2 bytes
  5418 ;; Hardware stack levels used: 1
  5419 ;; Hardware stack levels required when called: 8
  5420 ;; This function calls:
  5421 ;;		_I2C_2_Master_Start
  5422 ;;		_I2C_2_Master_Stop
  5423 ;;		_I2C_2_Master_Write
  5424 ;; This function is called by:
  5425 ;;		_color_click_init
  5426 ;;		_Color_Interrupts_init
  5427 ;;		_Color_Interrupts_threshold
  5428 ;;		_persistence_register
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text32
  5433   002888                     __ptext32:
  5434                           	callstack 0
  5435   002888                     _color_writetoaddr:
  5436                           	callstack 21
  5437                           
  5438                           ;incstack = 0
  5439                           ;color_writetoaddr@address stored from wreg
  5440   002888  6E0C               	movwf	color_writetoaddr@address^0,c
  5441   00288A                     
  5442                           ;color.c: 28:     I2C_2_Master_Start();
  5443   00288A  ECB6  F014         	call	_I2C_2_Master_Start	;wreg free
  5444                           
  5445                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  5446   00288E  0E52               	movlw	82
  5447   002890  EC9A  F014         	call	_I2C_2_Master_Write
  5448                           
  5449                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  5450   002894  500C               	movf	color_writetoaddr@address^0,w,c
  5451   002896  0980               	iorlw	128
  5452   002898  EC9A  F014         	call	_I2C_2_Master_Write
  5453                           
  5454                           ;color.c: 31:     I2C_2_Master_Write(value);
  5455   00289C  500B               	movf	color_writetoaddr@value^0,w,c
  5456   00289E  EC9A  F014         	call	_I2C_2_Master_Write
  5457                           
  5458                           ;color.c: 32:     I2C_2_Master_Stop();
  5459   0028A2  ECB1  F014         	call	_I2C_2_Master_Stop	;wreg free
  5460   0028A6  0012               	return		;funcret
  5461   0028A8                     __end_of_color_writetoaddr:
  5462                           	callstack 0
  5463                           
  5464 ;; *************** function _I2C_2_Master_Write *****************
  5465 ;; Defined at:
  5466 ;;		line 45 in file "i2c.c"
  5467 ;; Parameters:    Size  Location     Type
  5468 ;;  data_byte       1    wreg     unsigned char 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  data_byte       1    9[COMRAM] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  1    wreg      void 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0, cstack
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5484 ;;Total ram usage:        1 bytes
  5485 ;; Hardware stack levels used: 1
  5486 ;; Hardware stack levels required when called: 7
  5487 ;; This function calls:
  5488 ;;		_I2C_2_Master_Idle
  5489 ;; This function is called by:
  5490 ;;		_color_writetoaddr
  5491 ;;		_color_read_Red
  5492 ;;		_color_read_Green
  5493 ;;		_color_read_Blue
  5494 ;;		_color_read_Clear
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text33
  5499   002934                     __ptext33:
  5500                           	callstack 0
  5501   002934                     _I2C_2_Master_Write:
  5502                           	callstack 21
  5503                           
  5504                           ;incstack = 0
  5505                           ;I2C_2_Master_Write@data_byte stored from wreg
  5506   002934  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  5507   002936                     
  5508                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5509   002936  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  5510   00293A                     
  5511                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5512   00293A  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5513   00293E  0012               	return		;funcret
  5514   002940                     __end_of_I2C_2_Master_Write:
  5515                           	callstack 0
  5516                           
  5517 ;; *************** function _I2C_2_Master_Stop *****************
  5518 ;; Defined at:
  5519 ;;		line 39 in file "i2c.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;		None
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;		None
  5524 ;; Return value:  Size  Location     Type
  5525 ;;                  1    wreg      void 
  5526 ;; Registers used:
  5527 ;;		wreg, status,2, status,0, cstack
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5537 ;;Total ram usage:        0 bytes
  5538 ;; Hardware stack levels used: 1
  5539 ;; Hardware stack levels required when called: 7
  5540 ;; This function calls:
  5541 ;;		_I2C_2_Master_Idle
  5542 ;; This function is called by:
  5543 ;;		_color_writetoaddr
  5544 ;;		_color_read_Red
  5545 ;;		_color_read_Green
  5546 ;;		_color_read_Blue
  5547 ;;		_color_read_Clear
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text34
  5552   002962                     __ptext34:
  5553                           	callstack 0
  5554   002962                     _I2C_2_Master_Stop:
  5555                           	callstack 21
  5556   002962                     
  5557                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5558   002962  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  5559   002966                     
  5560                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5561   002966  010E               	movlb	14	; () banked
  5562   002968  85DA               	bsf	218,2,b	;volatile
  5563   00296A                     
  5564                           ; BSR set to: 14
  5565   00296A  0012               	return		;funcret
  5566   00296C                     __end_of_I2C_2_Master_Stop:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _I2C_2_Master_Start *****************
  5570 ;; Defined at:
  5571 ;;		line 27 in file "i2c.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;Total ram usage:        0 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 7
  5592 ;; This function calls:
  5593 ;;		_I2C_2_Master_Idle
  5594 ;; This function is called by:
  5595 ;;		_color_writetoaddr
  5596 ;;		_color_read_Red
  5597 ;;		_color_read_Green
  5598 ;;		_color_read_Blue
  5599 ;;		_color_read_Clear
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text35
  5604   00296C                     __ptext35:
  5605                           	callstack 0
  5606   00296C                     _I2C_2_Master_Start:
  5607                           	callstack 21
  5608   00296C                     
  5609                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5610   00296C  EC09  F014         	call	_I2C_2_Master_Idle	;wreg free
  5611   002970                     
  5612                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5613   002970  010E               	movlb	14	; () banked
  5614   002972  81DA               	bsf	218,0,b	;volatile
  5615   002974                     
  5616                           ; BSR set to: 14
  5617   002974  0012               	return		;funcret
  5618   002976                     __end_of_I2C_2_Master_Start:
  5619                           	callstack 0
  5620                           
  5621 ;; *************** function _I2C_2_Master_Idle *****************
  5622 ;; Defined at:
  5623 ;;		line 22 in file "i2c.c"
  5624 ;; Parameters:    Size  Location     Type
  5625 ;;		None
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1    wreg      void 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;Total ram usage:        1 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 6
  5644 ;; This function calls:
  5645 ;;		Nothing
  5646 ;; This function is called by:
  5647 ;;		_I2C_2_Master_Start
  5648 ;;		_I2C_2_Master_RepStart
  5649 ;;		_I2C_2_Master_Stop
  5650 ;;		_I2C_2_Master_Write
  5651 ;;		_I2C_2_Master_Read
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text36
  5656   002812                     __ptext36:
  5657                           	callstack 0
  5658   002812                     _I2C_2_Master_Idle:
  5659                           	callstack 21
  5660   002812                     l169:
  5661   002812  010E               	movlb	14	; () banked
  5662   002814  B5D8               	btfsc	216,2,b	;volatile
  5663   002816  EF0F  F014         	goto	u951
  5664   00281A  EF11  F014         	goto	u950
  5665   00281E                     u951:
  5666   00281E  EF09  F014         	goto	l169
  5667   002822                     u950:
  5668   002822                     
  5669                           ; BSR set to: 14
  5670   002822  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5671   002826  0E1F               	movlw	31
  5672   002828  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  5673   00282A  A4D8               	btfss	status,2,c
  5674   00282C  EF1A  F014         	goto	u961
  5675   002830  EF1C  F014         	goto	u960
  5676   002834                     u961:
  5677   002834  EF09  F014         	goto	l169
  5678   002838                     u960:
  5679   002838                     
  5680                           ; BSR set to: 14
  5681   002838  0012               	return		;funcret
  5682   00283A                     __end_of_I2C_2_Master_Idle:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _HighISR *****************
  5686 ;; Defined at:
  5687 ;;		line 71 in file "interrupts.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;		None
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;		None
  5692 ;; Return value:  Size  Location     Type
  5693 ;;                  1    wreg      void 
  5694 ;; Registers used:
  5695 ;;		wreg, status,2, status,0, cstack
  5696 ;; Tracked objects:
  5697 ;;		On entry : 0/0
  5698 ;;		On exit  : 0/0
  5699 ;;		Unchanged: 0/0
  5700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5705 ;;Total ram usage:        0 bytes
  5706 ;; Hardware stack levels used: 1
  5707 ;; Hardware stack levels required when called: 5
  5708 ;; This function calls:
  5709 ;;		_Color_Interrupts_clear
  5710 ;; This function is called by:
  5711 ;;		Interrupt level 2
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	intcode
  5716   000008                     __pintcode:
  5717                           	callstack 0
  5718   000008                     _HighISR:
  5719                           	callstack 21
  5720                           
  5721                           ; BSR set to: 14
  5722                           ;incstack = 0
  5723   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5724   00000A                     
  5725                           ;interrupts.c: 76:         if(PIR0bits.INT0IF==1){
  5726   00000A  010E               	movlb	14	; () banked
  5727   00000C  A133               	btfss	51,0,b	;volatile
  5728   00000E  EF0B  F000         	goto	i2u174_41
  5729   000012  EF0D  F000         	goto	i2u174_40
  5730   000016                     i2u174_41:
  5731   000016  EF19  F000         	goto	i2l460
  5732   00001A                     i2u174_40:
  5733   00001A                     
  5734                           ; BSR set to: 14
  5735                           ;interrupts.c: 77:         LATDbits.LATD7 = 1;
  5736   00001A  8E7C               	bsf	124,7,c	;volatile
  5737   00001C                     
  5738                           ; BSR set to: 14
  5739                           ;interrupts.c: 78:         interrupt_flag = 1;
  5740   00001C  0E00               	movlw	0
  5741   00001E  0100               	movlb	0	; () banked
  5742   000020  6FA1               	movwf	(_interrupt_flag+1)& (0+255),b
  5743   000022  0E01               	movlw	1
  5744   000024  6FA0               	movwf	_interrupt_flag& (0+255),b
  5745   000026                     
  5746                           ; BSR set to: 0
  5747                           ;interrupts.c: 79:         interrupt_ctr++;
  5748   000026  4B9E               	infsnz	_interrupt_ctr& (0+255),f,b
  5749   000028  2B9F               	incf	(_interrupt_ctr+1)& (0+255),f,b
  5750   00002A                     
  5751                           ; BSR set to: 0
  5752                           ;interrupts.c: 80:         Color_Interrupts_clear();
  5753   00002A  ECB1  F013         	call	_Color_Interrupts_clear	;wreg free
  5754   00002E                     
  5755                           ;interrupts.c: 81:         PIR0bits.INT0IF = 0;
  5756   00002E  010E               	movlb	14	; () banked
  5757   000030  9133               	bcf	51,0,b	;volatile
  5758   000032                     i2l460:
  5759                           
  5760                           ; BSR set to: 14
  5761   000032  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5762   000034  0011               	retfie		f
  5763   000036                     __end_of_HighISR:
  5764                           	callstack 0
  5765                           
  5766 ;; *************** function _Color_Interrupts_clear *****************
  5767 ;; Defined at:
  5768 ;;		line 51 in file "interrupts.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;		None
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;		None
  5773 ;; Return value:  Size  Location     Type
  5774 ;;                  1    wreg      void 
  5775 ;; Registers used:
  5776 ;;		wreg, status,2, status,0, cstack
  5777 ;; Tracked objects:
  5778 ;;		On entry : 0/0
  5779 ;;		On exit  : 0/0
  5780 ;;		Unchanged: 0/0
  5781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;Total ram usage:        0 bytes
  5787 ;; Hardware stack levels used: 1
  5788 ;; Hardware stack levels required when called: 4
  5789 ;; This function calls:
  5790 ;;		i2_Color_Interrupts_init
  5791 ;;		i2_Color_Interrupts_threshold
  5792 ;;		i2_I2C_2_Master_Start
  5793 ;;		i2_I2C_2_Master_Stop
  5794 ;;		i2_I2C_2_Master_Write
  5795 ;;		i2_persistence_register
  5796 ;; This function is called by:
  5797 ;;		_HighISR
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text38
  5802   002762                     __ptext38:
  5803                           	callstack 0
  5804   002762                     _Color_Interrupts_clear:
  5805                           	callstack 21
  5806   002762                     
  5807                           ;interrupts.c: 55:     I2C_2_Master_Start();
  5808   002762  ECC0  F014         	call	i2_I2C_2_Master_Start	;wreg free
  5809                           
  5810                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  5811   002766  0E52               	movlw	82
  5812   002768  ECA6  F014         	call	i2_I2C_2_Master_Write
  5813                           
  5814                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  5815   00276C  0EE6               	movlw	230
  5816   00276E  ECA6  F014         	call	i2_I2C_2_Master_Write
  5817                           
  5818                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  5819   002772  ECBB  F014         	call	i2_I2C_2_Master_Stop	;wreg free
  5820                           
  5821                           ;interrupts.c: 61:     Color_Interrupts_init();
  5822   002776  EC71  F014         	call	i2_Color_Interrupts_init	;wreg free
  5823                           
  5824                           ;interrupts.c: 62:     persistence_register();
  5825   00277A  ECA0  F014         	call	i2_persistence_register	;wreg free
  5826                           
  5827                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  5828   00277E  C0E6  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  5829   002782  C0E7  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  5830   002786  C09C  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  5831   00278A  C09D  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  5832   00278E  ECF4  F013         	call	i2_Color_Interrupts_threshold	;wreg free
  5833   002792  0012               	return		;funcret
  5834   002794                     __end_of_Color_Interrupts_clear:
  5835                           	callstack 0
  5836                           
  5837 ;; *************** function i2_persistence_register *****************
  5838 ;; Defined at:
  5839 ;;		line 46 in file "interrupts.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;		None
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;		None
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  1    wreg      void 
  5846 ;; Registers used:
  5847 ;;		wreg, status,2, status,0, cstack
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5857 ;;Total ram usage:        0 bytes
  5858 ;; Hardware stack levels used: 1
  5859 ;; Hardware stack levels required when called: 3
  5860 ;; This function calls:
  5861 ;;		i2_color_writetoaddr
  5862 ;; This function is called by:
  5863 ;;		_Color_Interrupts_clear
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text39
  5868   002940                     __ptext39:
  5869                           	callstack 0
  5870   002940                     i2_persistence_register:
  5871                           	callstack 21
  5872   002940                     
  5873                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  5874   002940  0E02               	movlw	2
  5875   002942  6E03               	movwf	i2color_writetoaddr@value^0,c
  5876   002944  0E0C               	movlw	12
  5877   002946  EC54  F014         	call	i2_color_writetoaddr
  5878   00294A  0012               	return		;funcret
  5879   00294C                     __end_ofi2_persistence_register:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function i2_Color_Interrupts_threshold *****************
  5883 ;; Defined at:
  5884 ;;		line 38 in file "interrupts.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  upperThresho    2    4[COMRAM] unsigned int 
  5887 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;		None
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  1    wreg      void 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0, cstack
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5899 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5903 ;;Total ram usage:        4 bytes
  5904 ;; Hardware stack levels used: 1
  5905 ;; Hardware stack levels required when called: 3
  5906 ;; This function calls:
  5907 ;;		i2_color_writetoaddr
  5908 ;; This function is called by:
  5909 ;;		_Color_Interrupts_clear
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text40
  5914   0027E8                     __ptext40:
  5915                           	callstack 0
  5916   0027E8                     i2_Color_Interrupts_threshold:
  5917                           	callstack 21
  5918   0027E8                     
  5919                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  5920   0027E8  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  5921   0027EC  0E04               	movlw	4
  5922   0027EE  EC54  F014         	call	i2_color_writetoaddr
  5923                           
  5924                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  5925   0027F2  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  5926   0027F4  6E03               	movwf	i2color_writetoaddr@value^0,c
  5927   0027F6  0E05               	movlw	5
  5928   0027F8  EC54  F014         	call	i2_color_writetoaddr
  5929                           
  5930                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  5931   0027FC  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  5932   002800  0E06               	movlw	6
  5933   002802  EC54  F014         	call	i2_color_writetoaddr
  5934                           
  5935                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  5936   002806  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  5937   002808  6E03               	movwf	i2color_writetoaddr@value^0,c
  5938   00280A  0E07               	movlw	7
  5939   00280C  EC54  F014         	call	i2_color_writetoaddr
  5940   002810  0012               	return		;funcret
  5941   002812                     __end_ofi2_Color_Interrupts_threshold:
  5942                           	callstack 0
  5943                           
  5944 ;; *************** function i2_Color_Interrupts_init *****************
  5945 ;; Defined at:
  5946 ;;		line 29 in file "interrupts.c"
  5947 ;; Parameters:    Size  Location     Type
  5948 ;;		None
  5949 ;; Auto vars:     Size  Location     Type
  5950 ;;		None
  5951 ;; Return value:  Size  Location     Type
  5952 ;;                  1    wreg      void 
  5953 ;; Registers used:
  5954 ;;		wreg, status,2, status,0, cstack
  5955 ;; Tracked objects:
  5956 ;;		On entry : 0/0
  5957 ;;		On exit  : 0/0
  5958 ;;		Unchanged: 0/0
  5959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5962 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5963 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5964 ;;Total ram usage:        1 bytes
  5965 ;; Hardware stack levels used: 1
  5966 ;; Hardware stack levels required when called: 3
  5967 ;; This function calls:
  5968 ;;		i2_color_writetoaddr
  5969 ;; This function is called by:
  5970 ;;		_Color_Interrupts_clear
  5971 ;; This function uses a non-reentrant model
  5972 ;;
  5973                           
  5974                           	psect	text41
  5975   0028E2                     __ptext41:
  5976                           	callstack 0
  5977   0028E2                     i2_Color_Interrupts_init:
  5978                           	callstack 21
  5979   0028E2                     
  5980                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  5981   0028E2  0E13               	movlw	19
  5982   0028E4  6E03               	movwf	i2color_writetoaddr@value^0,c
  5983   0028E6  0E00               	movlw	0
  5984   0028E8  EC54  F014         	call	i2_color_writetoaddr
  5985   0028EC                     
  5986                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  5987   0028EC  0ED0               	movlw	208
  5988   0028EE  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  5989   0028F0  0ECA               	movlw	202
  5990   0028F2                     i2u199_47:
  5991   0028F2  2EE8               	decfsz	wreg,f,c
  5992   0028F4  D7FE               	bra	i2u199_47
  5993   0028F6  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  5994   0028F8  D7FC               	bra	i2u199_47
  5995   0028FA  0012               	return		;funcret
  5996   0028FC                     __end_ofi2_Color_Interrupts_init:
  5997                           	callstack 0
  5998                           
  5999 ;; *************** function i2_color_writetoaddr *****************
  6000 ;; Defined at:
  6001 ;;		line 27 in file "color.c"
  6002 ;; Parameters:    Size  Location     Type
  6003 ;;  address         1    wreg     unsigned char 
  6004 ;;  value           1    2[COMRAM] unsigned char 
  6005 ;; Auto vars:     Size  Location     Type
  6006 ;;  address         1    3[COMRAM] unsigned char 
  6007 ;; Return value:  Size  Location     Type
  6008 ;;                  1    wreg      void 
  6009 ;; Registers used:
  6010 ;;		wreg, status,2, status,0, cstack
  6011 ;; Tracked objects:
  6012 ;;		On entry : 0/0
  6013 ;;		On exit  : 0/0
  6014 ;;		Unchanged: 0/0
  6015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6016 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;Total ram usage:        2 bytes
  6021 ;; Hardware stack levels used: 1
  6022 ;; Hardware stack levels required when called: 2
  6023 ;; This function calls:
  6024 ;;		i2_I2C_2_Master_Start
  6025 ;;		i2_I2C_2_Master_Stop
  6026 ;;		i2_I2C_2_Master_Write
  6027 ;; This function is called by:
  6028 ;;		i2_Color_Interrupts_init
  6029 ;;		i2_Color_Interrupts_threshold
  6030 ;;		i2_persistence_register
  6031 ;; This function uses a non-reentrant model
  6032 ;;
  6033                           
  6034                           	psect	text42
  6035   0028A8                     __ptext42:
  6036                           	callstack 0
  6037   0028A8                     i2_color_writetoaddr:
  6038                           	callstack 21
  6039                           
  6040                           ;incstack = 0
  6041                           ;i2color_writetoaddr@address stored from wreg
  6042   0028A8  6E04               	movwf	i2color_writetoaddr@address^0,c
  6043   0028AA                     
  6044                           ;color.c: 28:     I2C_2_Master_Start();
  6045   0028AA  ECC0  F014         	call	i2_I2C_2_Master_Start	;wreg free
  6046                           
  6047                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  6048   0028AE  0E52               	movlw	82
  6049   0028B0  ECA6  F014         	call	i2_I2C_2_Master_Write
  6050                           
  6051                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  6052   0028B4  5004               	movf	i2color_writetoaddr@address^0,w,c
  6053   0028B6  0980               	iorlw	128
  6054   0028B8  ECA6  F014         	call	i2_I2C_2_Master_Write
  6055                           
  6056                           ;color.c: 31:     I2C_2_Master_Write(value);
  6057   0028BC  5003               	movf	i2color_writetoaddr@value^0,w,c
  6058   0028BE  ECA6  F014         	call	i2_I2C_2_Master_Write
  6059                           
  6060                           ;color.c: 32:     I2C_2_Master_Stop();
  6061   0028C2  ECBB  F014         	call	i2_I2C_2_Master_Stop	;wreg free
  6062   0028C6  0012               	return		;funcret
  6063   0028C8                     __end_ofi2_color_writetoaddr:
  6064                           	callstack 0
  6065                           
  6066 ;; *************** function i2_I2C_2_Master_Write *****************
  6067 ;; Defined at:
  6068 ;;		line 45 in file "i2c.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  data_byte       1    wreg     unsigned char 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  data_byte       1    1[COMRAM] unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg, status,2, status,0, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;Total ram usage:        1 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 1
  6089 ;; This function calls:
  6090 ;;		i2_I2C_2_Master_Idle
  6091 ;; This function is called by:
  6092 ;;		_Color_Interrupts_clear
  6093 ;;		i2_color_writetoaddr
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text43
  6098   00294C                     __ptext43:
  6099                           	callstack 0
  6100   00294C                     i2_I2C_2_Master_Write:
  6101                           	callstack 21
  6102                           
  6103                           ;incstack = 0
  6104                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  6105   00294C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  6106   00294E                     
  6107                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6108   00294E  EC1D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  6109   002952                     
  6110                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6111   002952  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  6112   002956  0012               	return		;funcret
  6113   002958                     __end_ofi2_I2C_2_Master_Write:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function i2_I2C_2_Master_Stop *****************
  6117 ;; Defined at:
  6118 ;;		line 39 in file "i2c.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 1
  6139 ;; This function calls:
  6140 ;;		i2_I2C_2_Master_Idle
  6141 ;; This function is called by:
  6142 ;;		_Color_Interrupts_clear
  6143 ;;		i2_color_writetoaddr
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text44
  6148   002976                     __ptext44:
  6149                           	callstack 0
  6150   002976                     i2_I2C_2_Master_Stop:
  6151                           	callstack 21
  6152   002976                     
  6153                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6154   002976  EC1D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  6155   00297A                     
  6156                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6157   00297A  010E               	movlb	14	; () banked
  6158   00297C  85DA               	bsf	218,2,b	;volatile
  6159   00297E                     
  6160                           ; BSR set to: 14
  6161   00297E  0012               	return		;funcret
  6162   002980                     __end_ofi2_I2C_2_Master_Stop:
  6163                           	callstack 0
  6164                           
  6165 ;; *************** function i2_I2C_2_Master_Start *****************
  6166 ;; Defined at:
  6167 ;;		line 27 in file "i2c.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;		None
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;		None
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, status,2, status,0, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 0/0
  6178 ;;		On exit  : 0/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6185 ;;Total ram usage:        0 bytes
  6186 ;; Hardware stack levels used: 1
  6187 ;; Hardware stack levels required when called: 1
  6188 ;; This function calls:
  6189 ;;		i2_I2C_2_Master_Idle
  6190 ;; This function is called by:
  6191 ;;		_Color_Interrupts_clear
  6192 ;;		i2_color_writetoaddr
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text45
  6197   002980                     __ptext45:
  6198                           	callstack 0
  6199   002980                     i2_I2C_2_Master_Start:
  6200                           	callstack 21
  6201   002980                     
  6202                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6203   002980  EC1D  F014         	call	i2_I2C_2_Master_Idle	;wreg free
  6204   002984                     
  6205                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6206   002984  010E               	movlb	14	; () banked
  6207   002986  81DA               	bsf	218,0,b	;volatile
  6208   002988                     
  6209                           ; BSR set to: 14
  6210   002988  0012               	return		;funcret
  6211   00298A                     __end_ofi2_I2C_2_Master_Start:
  6212                           	callstack 0
  6213                           
  6214 ;; *************** function i2_I2C_2_Master_Idle *****************
  6215 ;; Defined at:
  6216 ;;		line 22 in file "i2c.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, status,2, status,0
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6234 ;;Total ram usage:        1 bytes
  6235 ;; Hardware stack levels used: 1
  6236 ;; This function calls:
  6237 ;;		Nothing
  6238 ;; This function is called by:
  6239 ;;		i2_I2C_2_Master_Start
  6240 ;;		i2_I2C_2_Master_Stop
  6241 ;;		i2_I2C_2_Master_Write
  6242 ;; This function uses a non-reentrant model
  6243 ;;
  6244                           
  6245                           	psect	text46
  6246   00283A                     __ptext46:
  6247                           	callstack 0
  6248   00283A                     i2_I2C_2_Master_Idle:
  6249                           	callstack 21
  6250   00283A                     i2l169:
  6251   00283A  010E               	movlb	14	; () banked
  6252   00283C  B5D8               	btfsc	216,2,b	;volatile
  6253   00283E  EF23  F014         	goto	i2u93_41
  6254   002842  EF25  F014         	goto	i2u93_40
  6255   002846                     i2u93_41:
  6256   002846  EF1D  F014         	goto	i2l169
  6257   00284A                     i2u93_40:
  6258   00284A                     
  6259                           ; BSR set to: 14
  6260   00284A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  6261   00284E  0E1F               	movlw	31
  6262   002850  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  6263   002852  A4D8               	btfss	status,2,c
  6264   002854  EF2E  F014         	goto	i2u94_41
  6265   002858  EF30  F014         	goto	i2u94_40
  6266   00285C                     i2u94_41:
  6267   00285C  EF1D  F014         	goto	i2l169
  6268   002860                     i2u94_40:
  6269   002860                     
  6270                           ; BSR set to: 14
  6271   002860  0012               	return		;funcret
  6272   002862                     __end_ofi2_I2C_2_Master_Idle:
  6273                           	callstack 0
  6274                           
  6275                           	psect	rparam
  6276   000000                     
  6277                           	psect	temp
  6278   000055                     btemp:
  6279                           	callstack 0
  6280   000055                     	ds	1
  6281   000000                     int$flags	set	btemp
  6282   000000                     wtemp8	set	btemp+1
  6283   000000                     ttemp5	set	btemp+1
  6284   000000                     ttemp6	set	btemp+4
  6285   000000                     ttemp7	set	btemp+8
  6286                           
  6287                           	psect	idloc
  6288                           
  6289                           ;Config register IDLOC0 @ 0x200000
  6290                           ;	unspecified, using default values
  6291   200000                     	org	2097152
  6292   200000  0FFF               	dw	4095
  6293                           
  6294                           ;Config register IDLOC1 @ 0x200002
  6295                           ;	unspecified, using default values
  6296   200002                     	org	2097154
  6297   200002  0FFF               	dw	4095
  6298                           
  6299                           ;Config register IDLOC2 @ 0x200004
  6300                           ;	unspecified, using default values
  6301   200004                     	org	2097156
  6302   200004  0FFF               	dw	4095
  6303                           
  6304                           ;Config register IDLOC3 @ 0x200006
  6305                           ;	unspecified, using default values
  6306   200006                     	org	2097158
  6307   200006  0FFF               	dw	4095
  6308                           
  6309                           ;Config register IDLOC4 @ 0x200008
  6310                           ;	unspecified, using default values
  6311   200008                     	org	2097160
  6312   200008  0FFF               	dw	4095
  6313                           
  6314                           ;Config register IDLOC5 @ 0x20000A
  6315                           ;	unspecified, using default values
  6316   20000A                     	org	2097162
  6317   20000A  0FFF               	dw	4095
  6318                           
  6319                           ;Config register IDLOC6 @ 0x20000C
  6320                           ;	unspecified, using default values
  6321   20000C                     	org	2097164
  6322   20000C  0FFF               	dw	4095
  6323                           
  6324                           ;Config register IDLOC7 @ 0x20000E
  6325                           ;	unspecified, using default values
  6326   20000E                     	org	2097166
  6327   20000E  0FFF               	dw	4095
  6328                           
  6329                           	psect	config
  6330                           
  6331                           ;Config register CONFIG1L @ 0x300000
  6332                           ;	External Oscillator mode Selection bits
  6333                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6334                           ;	Power-up default value for COSC bits
  6335                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6336   300000                     	org	3145728
  6337   300000  AA                 	db	170
  6338                           
  6339                           ;Config register CONFIG1H @ 0x300001
  6340                           ;	unspecified, using default values
  6341                           ;	Clock Out Enable bit
  6342                           ;	CLKOUTEN = 0x1, unprogrammed default
  6343                           ;	Clock Switch Enable bit
  6344                           ;	CSWEN = 0x1, unprogrammed default
  6345                           ;	Fail-Safe Clock Monitor Enable bit
  6346                           ;	FCMEN = 0x1, unprogrammed default
  6347   300001                     	org	3145729
  6348   300001  FF                 	db	255
  6349                           
  6350                           ;Config register CONFIG2L @ 0x300002
  6351                           ;	unspecified, using default values
  6352                           ;	Master Clear Enable bit
  6353                           ;	MCLRE = 0x1, unprogrammed default
  6354                           ;	Power-up Timer Enable bit
  6355                           ;	PWRTE = 0x1, unprogrammed default
  6356                           ;	Low-power BOR enable bit
  6357                           ;	LPBOREN = 0x1, unprogrammed default
  6358                           ;	Brown-out Reset Enable bits
  6359                           ;	BOREN = 0x3, unprogrammed default
  6360   300002                     	org	3145730
  6361   300002  FF                 	db	255
  6362                           
  6363                           ;Config register CONFIG2H @ 0x300003
  6364                           ;	unspecified, using default values
  6365                           ;	Brown Out Reset Voltage selection bits
  6366                           ;	BORV = 0x3, unprogrammed default
  6367                           ;	ZCD Disable bit
  6368                           ;	ZCD = 0x1, unprogrammed default
  6369                           ;	PPSLOCK bit One-Way Set Enable bit
  6370                           ;	PPS1WAY = 0x1, unprogrammed default
  6371                           ;	Stack Full/Underflow Reset Enable bit
  6372                           ;	STVREN = 0x1, unprogrammed default
  6373                           ;	Debugger Enable bit
  6374                           ;	DEBUG = 0x1, unprogrammed default
  6375                           ;	Extended Instruction Set Enable bit
  6376                           ;	XINST = 0x1, unprogrammed default
  6377   300003                     	org	3145731
  6378   300003  FF                 	db	255
  6379                           
  6380                           ;Config register CONFIG3L @ 0x300004
  6381                           ;	WDT Period Select bits
  6382                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6383                           ;	WDT operating mode
  6384                           ;	WDTE = OFF, WDT Disabled
  6385   300004                     	org	3145732
  6386   300004  9F                 	db	159
  6387                           
  6388                           ;Config register CONFIG3H @ 0x300005
  6389                           ;	unspecified, using default values
  6390                           ;	WDT Window Select bits
  6391                           ;	WDTCWS = 0x7, unprogrammed default
  6392                           ;	WDT input clock selector
  6393                           ;	WDTCCS = 0x7, unprogrammed default
  6394   300005                     	org	3145733
  6395   300005  FF                 	db	255
  6396                           
  6397                           ;Config register CONFIG4L @ 0x300006
  6398                           ;	unspecified, using default values
  6399                           ;	Write Protection Block 0
  6400                           ;	WRT0 = 0x1, unprogrammed default
  6401                           ;	Write Protection Block 1
  6402                           ;	WRT1 = 0x1, unprogrammed default
  6403                           ;	Write Protection Block 2
  6404                           ;	WRT2 = 0x1, unprogrammed default
  6405                           ;	Write Protection Block 3
  6406                           ;	WRT3 = 0x1, unprogrammed default
  6407                           ;	Write Protection Block 3
  6408                           ;	WRT4 = 0x1, unprogrammed default
  6409                           ;	Write Protection Block 3
  6410                           ;	WRT5 = 0x1, unprogrammed default
  6411                           ;	Write Protection Block 3
  6412                           ;	WRT6 = 0x1, unprogrammed default
  6413                           ;	Write Protection Block 3
  6414                           ;	WRT7 = 0x1, unprogrammed default
  6415   300006                     	org	3145734
  6416   300006  FF                 	db	255
  6417                           
  6418                           ;Config register CONFIG4H @ 0x300007
  6419                           ;	unspecified, using default values
  6420                           ;	Configuration Register Write Protection bit
  6421                           ;	WRTC = 0x1, unprogrammed default
  6422                           ;	Boot Block Write Protection bit
  6423                           ;	WRTB = 0x1, unprogrammed default
  6424                           ;	Data EEPROM Write Protection bit
  6425                           ;	WRTD = 0x1, unprogrammed default
  6426                           ;	Scanner Enable bit
  6427                           ;	SCANE = 0x1, unprogrammed default
  6428                           ;	Low Voltage Programming Enable bit
  6429                           ;	LVP = 0x1, unprogrammed default
  6430   300007                     	org	3145735
  6431   300007  FF                 	db	255
  6432                           
  6433                           ;Config register CONFIG5L @ 0x300008
  6434                           ;	unspecified, using default values
  6435                           ;	UserNVM Program Memory Code Protection bit
  6436                           ;	CP = 0x1, unprogrammed default
  6437                           ;	DataNVM Memory Code Protection bit
  6438                           ;	CPD = 0x1, unprogrammed default
  6439   300008                     	org	3145736
  6440   300008  FF                 	db	255
  6441                           
  6442                           ;Config register CONFIG5H @ 0x300009
  6443                           ;	unspecified, using default values
  6444   300009                     	org	3145737
  6445   300009  FF                 	db	255
  6446                           
  6447                           ;Config register CONFIG6L @ 0x30000A
  6448                           ;	unspecified, using default values
  6449                           ;	Table Read Protection Block 0
  6450                           ;	EBTR0 = 0x1, unprogrammed default
  6451                           ;	Table Read Protection Block 1
  6452                           ;	EBTR1 = 0x1, unprogrammed default
  6453                           ;	Table Read Protection Block 2
  6454                           ;	EBTR2 = 0x1, unprogrammed default
  6455                           ;	Table Read Protection Block 3
  6456                           ;	EBTR3 = 0x1, unprogrammed default
  6457                           ;	Table Read Protection Block 4
  6458                           ;	EBTR4 = 0x1, unprogrammed default
  6459                           ;	Table Read Protection Block 5
  6460                           ;	EBTR5 = 0x1, unprogrammed default
  6461                           ;	Table Read Protection Block 6
  6462                           ;	EBTR6 = 0x1, unprogrammed default
  6463                           ;	Table Read Protection Block 7
  6464                           ;	EBTR7 = 0x1, unprogrammed default
  6465   30000A                     	org	3145738
  6466   30000A  FF                 	db	255
  6467                           
  6468                           ;Config register CONFIG6H @ 0x30000B
  6469                           ;	unspecified, using default values
  6470                           ;	Boot Block Table Read Protection bit
  6471                           ;	EBTRB = 0x1, unprogrammed default
  6472   30000B                     	org	3145739
  6473   30000B  FF                 	db	255
  6474                           tosu	equ	0xFFF
  6475                           tosh	equ	0xFFE
  6476                           tosl	equ	0xFFD
  6477                           stkptr	equ	0xFFC
  6478                           pclatu	equ	0xFFB
  6479                           pclath	equ	0xFFA
  6480                           pcl	equ	0xFF9
  6481                           tblptru	equ	0xFF8
  6482                           tblptrh	equ	0xFF7
  6483                           tblptrl	equ	0xFF6
  6484                           tablat	equ	0xFF5
  6485                           prodh	equ	0xFF4
  6486                           prodl	equ	0xFF3
  6487                           indf0	equ	0xFEF
  6488                           postinc0	equ	0xFEE
  6489                           postdec0	equ	0xFED
  6490                           preinc0	equ	0xFEC
  6491                           plusw0	equ	0xFEB
  6492                           fsr0h	equ	0xFEA
  6493                           fsr0l	equ	0xFE9
  6494                           wreg	equ	0xFE8
  6495                           indf1	equ	0xFE7
  6496                           postinc1	equ	0xFE6
  6497                           postdec1	equ	0xFE5
  6498                           preinc1	equ	0xFE4
  6499                           plusw1	equ	0xFE3
  6500                           fsr1h	equ	0xFE2
  6501                           fsr1l	equ	0xFE1
  6502                           bsr	equ	0xFE0
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           preinc2	equ	0xFDC
  6507                           plusw2	equ	0xFDB
  6508                           fsr2h	equ	0xFDA
  6509                           fsr2l	equ	0xFD9
  6510                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      84
    BANK0           160     52     136
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_response@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2619$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2619$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), motor_response@mR(COMRAM[2]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), motor_response@mL(COMRAM[2]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), motor_response@mR(COMRAM[2]), motor_response@mL(COMRAM[2]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_retrace->_reverse
    _motor_response->_fullSpeedAhead
    _motor_response->_reverse
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               162   162      0   46579
                                             48 COMRAM     2     2      0
                                              0 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                       10     4      6   11439
                                             32 COMRAM    10     4      6
                          _norm_stop
                            _reverse
                           _turnLeft
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      16    10      6   19585
                                             32 COMRAM    16    10      6
                             ___flge
                     _fullSpeedAhead
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    2917
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             4     0      4    3221
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    3549
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    4197
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3245
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1162
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _fullSpeedAhead
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _motor_retrace
     _norm_stop
     _reverse
     _turnLeft
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      88       5       85.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      54       1       89.4%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      DC      61        0.0%
DATA                 0      0      DC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 19:44:04 2022

                            _color_read_Red 2538                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 21C6  
                              ___fldiv@sign 0019                             _color_read_Blue 2628  
                                        l91 2586                                          l85 272E  
                                        l94 25D6                                          l88 28A6  
                                        l97 2676                             ??_motor_retrace 0027  
                       ___wmul@multiplicand 000B                            _color_read_Clear 25D8  
                          _color_read_Green 2588                           ??_Interrupts_init 0009  
                                       l100 2626                                         l121 13CE  
                                       l106 228A                                         l115 2910  
                                       l109 1DE4                                         l139 1FE2  
                                       l172 2838                                         l181 296A  
                                       l166 27BC                                         l175 2974  
                                       l184 293E                                         l169 2812  
                                       l442 2926                                         l178 2960  
                                       l187 26FA                                         l451 2932  
                                       l445 28E0                                         l287 185A  
                                       l448 27E6                                         l560 24CC  
                                       l554 1C92                                         l547 230A  
                                       l571 2760                                         l557 2536  
                                       l574 2462                                         l591 207A  
                                       l577 23F0                                         l588 21C4  
                                       l596 20DA                                         l599 2886  
                                       l864 1EA2                                         l869 1EE8  
                                       u950 2822                                         u951 281E  
                                       u960 2838                                         u961 2834  
                                       u970 2326                                         u971 2322  
                                       u980 2344                                         u981 2340  
                                       u990 2360                                         u991 235C  
                          ??_motor_response 0027                                         _ctr 004F  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 28FC  
                       i2_color_writetoaddr 28A8                                         wreg 000FE8  
                           _color_normalise 1C94                                        l2201 2368  
                                      l1090 2376                                        l2203 236A  
                                      l2221 2970                                        l1181 1768  
                                      l1261 1A62                                        l2301 261E  
                                      l2205 2370                                        l1254 19CA  
                                      l2223 2936                                        l1183 15C8  
                                      l2231 2958                                        l2311 201C  
                                      l1192 160E                                        l2225 293A  
                                      l2401 140C                                        l1257 1B26  
                                      l2241 26D0                                        l2233 295C  
                                      l1097 237E                                        l2321 206E  
                                      l2313 202C                                        l2305 1FE4  
                                      l1194 1686                                        l1186 158C  
                                      l2219 296C                                        l2227 2962  
                                      l1195 1674                                        l2411 143C  
                                      l2403 141C                                        l2243 26F6  
                                      l2235 26BC                                        l2251 1B44  
                                      l2331 2730                                        l2323 2092  
                                      l2315 2040                                        l2307 1FFC  
                                      l1268 1ABE                                        l2229 2966  
                                      l2501 16B0                                        l2421 1472  
                                      l2413 1442                                        l2405 141E  
                                      l2245 26F8                                        l2237 26C0  
                                      l2181 287E                                        l2261 1C0E  
                                      l2253 1B98                                        l2333 2748  
                                      l2325 20AA                                        l2317 2054  
                                      l2309 200C                                        l2341 23A8  
                                      l2175 2812                                        l2271 27A4  
                                      l2511 1728                                        l2503 16DA  
                                      l2431 14B2                                        l2423 1482  
                                      l2415 1450                                        l2407 1426  
                                      l2239 26C8                                        l2191 232E  
                                      l2263 1C52                                        l2255 1BAC  
                                      l2335 2754                                        l2327 20C2  
                                      l2319 2062                                        l2351 23F2  
                                      l2343 23B8                                        l2177 2822  
                                      l2273 27A6                                        l2521 175E  
                                      l2513 1744                                        l2505 16DE  
                                      l2433 14C2                                        l2441 14E2  
                                      l2425 1484                                        l2417 1452  
                                      l2409 1436                                        l2281 2538  
                                      l2193 2336                                        l2185 230C  
                                      l2257 1BEE                                        l2249 1B28  
                                      l2329 20CE                                        l2361 244A  
                                      l2353 240A                                        l2345 23C8  
                                      l2337 2380                                        l2275 27A8  
                                      l2267 2794                                        l2611 271A  
                                      l2515 1748                                        l2507 16F8  
                                      l2451 1520                                        l2443 14F2  
                                      l2435 14CA                                        l2419 1462  
                                      l2427 148C                                        l2283 257E  
                                      l2531 1E14                                        l2195 2344  
                                      l2187 2314                                        l2179 2862  
                                      l2259 1BF2                                        l2371 2114  
                                      l2363 2456                                        l2355 241A  
                                      l2347 23D8                                        l2339 2398  
                                      l2277 27AA                                        l2269 279E  
                                      l2613 2724                                        l2605 26FC  
                                      l2517 1756                                        l2509 170E  
                                      l2461 1568                                        l2453 1530  
                                      l2445 14F2                                        l2437 14CE  
                                      l2429 149C                                        l2293 2628  
                                      l2541 1E82                                        l2533 1E24  
                                      l2197 234A                                        l2189 2326  
                                      l2381 2164                                        l2373 2124  
                                      l2365 20DC                                        l2357 242A  
                                      l2349 23E4                                        l2701 120A  
                                      l2621 0E18                                        l2279 288A  
                                      l2607 2700                                        l2519 175C  
                                      l2471 15B6                                        l2463 157C  
                                      l2455 1540                                        l2391 13D0  
                                      l2551 1976                                        l2295 266E  
                                      l2287 2588                                        l2615 21C6  
                                      l2543 1E90                                        l2535 1E52  
                                      l2199 2360                                        l2383 217C  
                                      l2375 2138                                        l2367 20F4  
                                      l2359 243A                                        l2703 1222  
                                      l2623 0E56                                        l2609 270A  
                                      l2481 15FE                                        l2473 15C6  
                                      l2465 158A                                        l2457 1550  
                                      l2449 1506                                        l2393 13DC  
                                      l2617 1C94                                        l2553 1986  
                                      l2289 25CE                                        l2801 24CE  
                                      l2545 1EE0                                        l2537 1E62  
                                      l2529 1DE6                                        l2385 2194  
                                      l2377 214C                                        l2369 2104  
                                      l2721 12EA                                        l2705 124E  
                                      l2713 1274                                        l2641 0F0C  
                                      l2625 0E6A                                        l2491 163E  
                                      l2483 160C                                        l2475 15D8  
                                      l2467 1596                                        l2459 1558  
                                      l2395 13EA                                        l2571 1A4C  
                                      l2563 1A04                                        l2555 1994  
                                      l2299 25D8                                        l2811 2522  
                                      l2803 24DA                                        l2547 1EE6  
                                      l2539 1E70                                        l2387 21AC  
                                      l2379 2158                                        l2731 1334  
                                      l2723 1302                                        l2715 12B2  
                                      l2707 126E                                        l2651 0F74  
                                      l2643 0F2C                                        l2635 0EB4  
                                      l2627 0E82                                        l2619 28FC  
                                      l2493 166C                                        l2477 15EE  
                                      l2485 161E                                        l2469 15B4  
                                      l2397 13EC                                        l2581 1ACC  
                                      l2573 1A58                                        l2565 1A0C  
                                      l2557 19DA                                        l2805 24EA  
                                      l2821 24A4                                        l2813 2464  
                                      l2389 21B8                                        l2741 13C0  
                                      l2733 1348                                        l2725 1316  
                                      l2717 12B8                                        l2661 0FD2  
                                      l2653 0FB2                                        l2645 0F32  
                                      l2637 0EC8                                        l2629 0EAC  
                                      l2901 1828                                        l2487 162C  
                                      l2479 15F4                                        l2399 13FC  
                                      l2591 1B14                                        l2583 1ACE  
                                      l2575 1A94                                        l2567 1A18  
                                      l2559 19F0                                        l2807 24FA  
                                      l2823 24B8                                        l2815 2470  
                                      l2743 13CC                                        l2735 1360  
                                      l2727 132C                                        l2719 12D6  
                                      l2663 0FE6                                        l2639 0EE0  
                                      l2751 1F1A                                        l2911 1870  
                                      l2903 182E                                        l2497 1696  
                                      l2489 1630                                        l2593 1B16  
                                      l2585 1AD2                                        l2577 1AA0  
                                      l2569 1A4A                                        l2809 250E  
                                      l2817 2480                                        l2737 138C  
                                      l2681 10DE                                        l2665 0FFE  
                                      l2649 0F36                                        l2761 1F64  
                                      l2753 1F32                                        l2921 18CC  
                                      l2913 188C                                        l2905 1842  
                                      l2841 177A                                        l2771 2912  
                                      l2499 16A2                                        l2587 1AF6  
                                      l2579 1AAE                                        l2819 2490  
                                      l2739 13AC                                        l2691 11C4  
                                      l2683 111C                                        l2667 1002  
                                      l2659 0FBA                                        l2675 1024  
                                      l2763 1F78                                        l2755 1F5C  
                                      l2747 1EEA                                        l2931 195A  
                                      l2923 18E4                                        l2915 18A0  
                                      l2907 1854                                        l2851 179C  
                                      l2843 1784                                        l2835 176A  
                                      l2773 28C8                                        l2589 1B06  
                                      l2781 228C                                        l2693 11EE  
                                      l2685 115A                                        l2677 1062  
                                      l2669 101E                                        l2765 1F90  
                                      l2749 1F06                                        l2933 1960  
                                      l2925 1908                                        l2917 18B8  
                                      l2909 185C                                        l2861 17D8  
                                      l2853 17A0                                        l2845 1784  
                                      l2837 176E                                        l2775 28D2  
                                      l2791 22F0                                        l2783 22B6  
                                      l2687 1198                                        l2679 10A0  
                                      l2767 1FBC                                        l2935 1962  
                                      l2927 1936                                        l2919 18BA  
                                      l2871 1802                                        l2863 17DC  
                                      l2855 17BC                                        l2839 1772  
                                      l2777 27BE                                        l2793 22F2  
                                      l2785 22DA                                        l2689 11AC  
                                      l2769 1FDC                                        l2929 193E  
                                      l2881 180C                                        l2873 1804  
                                      l2865 17E8                                        l2857 17C0  
                                      l2849 178C                                        l2795 22FC  
                                      l2787 22E4                                        l2699 11F6  
                                      l2779 2928                                        l2891 1816  
                                      l2883 180E                                        l2875 1806  
                                      l2867 17F4                                        l2859 17C4  
                                      l2797 22FE                                        l2789 22E6  
                                      l2893 1818                                        l2885 1810  
                                      l2877 1808                                        l2869 1800  
                                      l2799 2308                                        l2895 181C  
                                      l2887 1812                                        l2879 180A  
                                      l2897 1820                                        l2889 1814  
                                      l2899 1824                                        STR_1 0E01  
                                      u1000 26E4                                        u1001 26DC  
                                      u1100 140C                                        u1020 1B44  
                                      u1101 1408                                        u1021 1B40  
                                      u1110 1450                                        u1030 1C0E  
                                      u1111 144C                                        u1031 1C0A  
                                      u1200 15EE                                        u1120 1462  
                                      u1040 2092                                        u1201 15EA  
                                      u1121 145E                                        u1041 208E  
                                      u1210 160C                                        u1130 1472  
                                      u1018 26E6                                        u1050 20AA  
                                      u1211 1608                                        u1131 146E  
                                      u1051 20A6                                        u1300 1756  
                                      u1220 162C                                        u1140 14B2  
                                      u1060 217C                                        u1301 1752  
                                      u1221 1628                                        u1141 14AE  
                                      u1061 2178                                        u1230 163E  
                                      u1150 14F2                                        u1310 1E14  
                                      u1070 2194                                        u1231 163A  
                                      u1151 14EE                                        u1311 1E10  
                                      u1071 2190                                        u1240 166C  
                                      u1160 1568                                        u1080 13EA  
                                      u1400 1A90                                        u1320 1E52  
                                      u1241 1668                                        u1161 1564  
                                      u1081 13E6                                        u1401 1A8C  
                                      u1321 1E4E                                        u1250 1682  
                                      u1170 158A                                        u1090 13FC  
                                      u1410 1AAE                                        u1330 1E70  
                                      u1251 167E                                        u1171 1586  
                                      u1091 13F8                                        u1411 1AAA  
                                      u1331 1E6C                                        u1260 1696  
                                      u1180 15B4                                        u1420 1ABE  
                                      u1340 1E90                                        u1500 101E  
                                      u1261 1692                                        u1181 15B0  
                                      u1421 1ABA                                        u1341 1E8C  
                                      u1501 101A                                        u1270 16B0  
                                      u1190 15D8                                        u1430 1ACC  
                                      u1350 1EE0                                        u1510 1062  
                                      u1271 16AC                                        u1191 15D4  
                                      u1431 1AC8                                        u1351 1EDC  
                                      u1511 105E                                        u1280 16F8  
                                      u1440 1B06                                        u1360 1986  
                                      u1520 10A0                                _BAUD4CONbits 000EE9  
                                      u1281 16F4                                        u1441 1B02  
                                      u1361 1982                                        u1521 109C  
                                      u1290 1728                                        u1450 1B14  
                                      u1370 1994                                        u1610 13AC  
                                      u1530 10DE                                        u1291 1724  
                                      u1451 1B10                                        u1371 1990  
                                      u1611 13A8                                        u1531 10DA  
                                      u1380 19F0                                        u1540 111C  
                                      u1460 0E56                                        u1620 1F06  
                                      u1700 18F6                                        u1381 19EC  
                                      u1541 1118                                        u1461 0E52  
                                      u1621 1F02                                        u1701 18EE  
                                      u1390 1A46                                        u1550 115A  
                                      u1470 0F2C                                        u1630 1FDC  
                                      u1391 1A42                                        u1551 1156  
                                      u1471 0F28                                        u1631 1FD8  
                                      u1608 12CC                                        u1560 1198  
                                      u1480 0F74                                        u1561 1194  
                                      u1481 0F70                                        u1570 126E  
                                      u1490 0FB2                                        u1650 17BC  
                                      _T2PR 000FBC                                        u1571 126A  
                                      u1491 0FAE                                        u1651 17B8  
                                      u1580 12B2                                        u1660 1854  
                                      u1581 12AE                                        u1661 1850  
                                      u1590 12CA                                        u1718 18F8  
                                      u1670 1870                                        u1591 12C2  
                                      u1807 1F82                                        u1671 186C  
                                      u1680 188C                                        u1817 1FAE  
                                      u1681 1888                                        u1690 18CC  
                                      u1907 1214                                        u1827 0E74  
                                      u1691 18C8                                        u1917 1240  
                                      u1837 0EA0                                        u1927 12F4  
                                      u1847 0ED2                                        u1937 1320  
                                      u1857 0EFE                                        u1777 18AA  
                                      u1947 1352                                        u1867 0FC4  
                                      u1787 1F24                                        u1957 137E  
                                      u1877 0FF0                                        u1797 1F50  
                                      u1967 205A                                        u1887 11B6  
                                      u1977 2710                                        u1897 11E2  
                                      u1987 28D8                                        i2l88 28C6  
                               main@pathSet 00B2                                        _main 176A  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0055  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0036                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 001A                      __end_of_color_read_Red 2588  
                           __end_of_HighISR 0036                                ___param_bank 000000  
                                     ?_main 0001                             __end_of___fldiv 176A  
                           __end_of___lwdiv 2380                                       i2l172 2860  
                                     i2l181 297E                                       i2l175 2988  
                                     i2l184 2956                                       i2l169 283A  
                                     i2l451 294A                                       i2l460 0032  
                                     i2l445 28FA                                       i2l454 2792  
                                     i2l448 2810                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 2976  
                __end_of_I2C_2_Master_Write 2940                                       tablat 000FF5  
                     _Color_Interrupts_init 28C8                             __end_of_reverse 20DC  
                                     ttemp5 0056                                       ttemp6 0059  
                                     ttemp7 005D                                       status 000FD8  
                                     wtemp8 0056                     __end_of_color_read_RGBC 228C  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 2678  
                     _I2C_2_Master_RepStart 2958                             ?_color_read_Red 000D  
                           __initialization 2678                                __end_of_main 1974  
               ?_Color_Interrupts_threshold 000D                                      ??_main 0031  
                             __activetblptr 000001                     __end_of_color_normalise 1DE6  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2211 2976                                      i2l2213 297A  
                                    i2l2207 2980                                      i2l2215 294E  
                                    i2l2209 2984                                      i2l2217 2952  
                                    i2l2171 283A                                      i2l2173 284A  
                                    i2l2265 28AA                                      i2l2601 27E8  
                                    i2l2603 2940                                      i2l2833 2762  
                                    i2l2597 28E2                                      i2l2599 28EC  
                                    i2l2961 0026                                      i2l2963 002A  
                                    i2l2955 000A                                      _RG6PPS 000E88  
                                    i2l2965 002E                                      i2l2957 001A  
                                    i2l2959 001C                                   ??_HighISR 0009  
                  __end_of_color_click_init 2730                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 1B28  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 2934                                _CCPTMRS0bits 000FAD  
                                    ___flge 1DE6                                      ___wmul 2862  
                                 ??___fldiv 0011                                   ??___lwdiv 0013  
                                    clear_0 2696                                      clear_1 26A2  
                                    isa$std 000001                                      main@mL 00D4  
                                    main@mR 00DD                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 2762                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 2464  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 26A8                    __end_of_color_read_Clear 2628  
                  __end_of_color_read_Green 25D8                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 2912  
                            __pcstackCOMRAM 0001                                __pidataBANK0 298A  
            __end_ofi2_persistence_register 294C                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 28E2  
                                __pbssBANK0 0060                           _color_writetoaddr 2888  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0023  
                          motor_response@mR 0025                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0021                       __end_of_motor_retrace 1FE4  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   i2u93_40 284A                                     i2u93_41 2846  
                                   i2u94_40 2860                                     i2u94_41 285C  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 2928                                  _buggy_path 00A3  
                   __end_of_Interrupts_init 2928                              _lowerThreshold 009C  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 28A8  
                        _I2C_2_Master_Start 296C                         i2_I2C_2_Master_Idle 283A  
                        _I2C_2_Master_Write 2934                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 2976                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fldiv 13D0  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 230C  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 004D                                     __pcinit 2678  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                   __ptext0 176A                                     __ptext1 28FC  
                                   __ptext2 2928                                     __ptext3 1EEA  
                                   __ptext4 0E18                                     __ptext5 2380  
                                   __ptext6 23F2                                     __ptext7 1FE4  
                                   __ptext8 2730                                     __ptext9 20DC  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00E6                                     _reverse 1FE4  
                             _RxBufWriteCnt 0054                       ?_persistence_register 0001  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 26A8                 __end_ofi2_color_writetoaddr 28C8  
                         ?_color_click_init 0001                           __end_of_norm_stop 2762  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 24CE                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 2464  
                             _interrupt_ctr 009E                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 228C                                  ??_turnLeft 0020  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 23F2  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 0033  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 2794  
                            __end_of___flge 1EEA                              _fullSpeedAhead 20DC  
                            __end_of___wmul 2888                         color_read_Clear@tmp 0012  
                       start_initialization 2678                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0052                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 230C                      __end_of_fullSpeedAhead 21C6  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022                                 __pdataBANK0 00E6  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 298A  
              __end_ofi2_I2C_2_Master_Write 2958                                   ___fldiv@a 000D  
                                 ___fldiv@b 0009                                 __pbssCOMRAM 0033  
                             __pcstackBANK0 00B2                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 0047  
                                 _amb_green 004B                             motor_retrace@mL 0023  
                           motor_retrace@mR 0025                            ___lwdiv@dividend 000F  
                           motor_response@j 0029                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fldiv 0009  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                         motor_response@j_560 002F  
                       motor_response@j_554 002B                         motor_response@j_555 002D  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 2812                           _I2C_2_Master_Init 2794  
                         _I2C_2_Master_Read 26BA                           _I2C_2_Master_Stop 2962  
                              _RxBufReadCnt 0053                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 13D0                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u174_40 001A                                    i2u174_41 0016  
                                  _PIR0bits 000E33                                    _PIR4bits 000E37  
                                  i2u199_47 28F2                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 2730  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 283A                   __end_of_I2C_2_Master_Init 27BE  
                 __end_of_I2C_2_Master_Read 26FC                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 296C                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0051  
                  i2color_writetoaddr@value 0003                                   _turnRight 2380  
             __end_of_Color_Interrupts_init 28E2                             ?_motor_response 0021  
             __end_of_I2C_2_Master_RepStart 2962                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 1C94                        i2_I2C_2_Master_Start 2980  
                      i2_I2C_2_Master_Write 294C                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0021                           ??_color_normalise 0024  
                                  __Lrparam 0000                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 2812  
              i2_Color_Interrupts_threshold 27E8                 __end_ofi2_I2C_2_Master_Idle 2862  
               __end_ofi2_I2C_2_Master_Stop 2980                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 1EEA                               ??_tricolorLED 0009  
                                  _amb_blue 0049                                    ___xxtofl 1974  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                            motor_retrace@j 0029                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 1B28                                    __ptext11 2862  
                                  __ptext20 25D8                                    __ptext12 230C  
                                  __ptext21 2628                                    __ptext13 1DE6  
                                  __ptext30 27BE                                    __ptext22 2958  
                                  __ptext14 2464                                    __ptext31 28C8  
                                  __ptext23 26BA                                    __ptext15 24CE  
                                  __ptext40 27E8                                    __ptext32 2888  
                                  __ptext24 1974                                    __ptext16 228C  
                                  __ptext41 28E2                                    __ptext33 2934  
                                  __ptext25 1C94                                    __ptext17 21C6  
                                  __ptext42 28A8                                    __ptext34 2962  
                                  __ptext26 13D0                                    __ptext18 2538  
                                  __ptext43 294C                                    __ptext35 296C  
                                  __ptext27 26FC                                    __ptext19 2588  
                                  __ptext44 2976                                    __ptext36 2812  
                                  __ptext28 2794                                    __ptext45 2980  
                                  __ptext29 2912                                    __ptext46 283A  
                                  __ptext38 2762                                    __ptext39 2940  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 00B4                                    int$flags 0055  
        __end_of_Color_Interrupts_threshold 27E8               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 27BE                                    _turnLeft 23F2  
                            ?_motor_retrace 0021                                  _INTCONbits 000FF2  
                               _setMotorPWM 1B28                                motorLinit@mL 0009  
                       __end_of_tricolorLED 2912                                    intlevel2 0000  
                              _motor_return 00A2                          __end_of_motorLinit 2538  
                        __end_of_motorRinit 24CE                                motorRinit@mR 0009  
                          ??_fullSpeedAhead 0020                                 ??_norm_stop 0020  
           __end_ofi2_Color_Interrupts_init 28FC                            _color_click_init 26FC  
                                _SSP2DATPPS 000E1D                                  _SSP2CLKPPS 000E1C  
                            _interrupt_flag 00A0                      i2_persistence_register 2940  
                               ??_turnRight 0020                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                      ??i2_I2C_2_Master_Write 0002  
                  ??_Color_Interrupts_clear 0009  
