

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 16:39:56 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 06/04/2022 GMT
    58                           ; 
    59                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F67K40 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     _TRISBbits	set	3970
    92   000000                     _TX4REG	set	3812
    93   000000                     _RC4STAbits	set	3815
    94   000000                     _SP4BRGH	set	3814
    95   000000                     _LATHbits	set	3968
    96   000000                     _TRISCbits	set	3971
    97   000000                     _TRISDbits	set	3972
    98   000000                     _TRISEbits	set	3973
    99   000000                     _TRISFbits	set	3974
   100   000000                     _TRISAbits	set	3969
   101   000000                     _SSP2CON2bits	set	3802
   102   000000                     _RX4PPS	set	3605
   103   000000                     _SSP2CLKPPS	set	3612
   104   000000                     _SSP2DATPPS	set	3613
   105   000000                     _ANSELDbits	set	3751
   106   000000                     _SSP2ADD	set	3798
   107   000000                     _SSP2CON1bits	set	3801
   108   000000                     _LATAbits	set	3961
   109   000000                     _LATGbits	set	3967
   110   000000                     _TRISGbits	set	3975
   111   000000                     _T2PR	set	4028
   112   000000                     _T2CONbits	set	4029
   113   000000                     _TMR0L	set	4051
   114   000000                     _TMR0H	set	4052
   115   000000                     _T0CON0bits	set	4053
   116   000000                     _T0CON1bits	set	4054
   117   000000                     _INTCONbits	set	4082
   118   000000                     _TRISHbits	set	3976
   119   000000                     _CCPR2H	set	4006
   120   000000                     _CCPR1H	set	4010
   121   000000                     _LATDbits	set	3964
   122   000000                     _LATEbits	set	3965
   123   000000                     _LATFbits	set	3966
   124   000000                     _RC4REG	set	3811
   125   000000                     _SP4BRGL	set	3813
   126   000000                     _TX4STAbits	set	3816
   127   000000                     _BAUD4CONbits	set	3817
   128   000000                     _SSP2CON2	set	3802
   129   000000                     _SSP2STAT	set	3800
   130   000000                     _SSP2BUF	set	3797
   131   000000                     _IPR0bits	set	3615
   132   000000                     _PIE0bits	set	3625
   133   000000                     _PIE4bits	set	3629
   134   000000                     _RC0PPS	set	3682
   135   000000                     _RD5PPS	set	3695
   136   000000                     _RE2PPS	set	3700
   137   000000                     _ANSELBbits	set	3738
   138   000000                     _RD6PPS	set	3696
   139   000000                     _RC7PPS	set	3689
   140   000000                     _CCPR4H	set	3873
   141   000000                     _CCPR3H	set	3877
   142   000000                     _PIR0bits	set	3635
   143   000000                     _PIR4bits	set	3639
   144   000000                     _RE4PPS	set	3702
   145   000000                     _RG6PPS	set	3720
   146   000000                     _T2CLKCONbits	set	4031
   147   000000                     _T2HLTbits	set	4030
   148   000000                     _CCP1CONbits	set	4011
   149   000000                     _CCPTMRS0bits	set	4013
   150   000000                     _CCP2CONbits	set	4007
   151   000000                     _CCP3CONbits	set	3878
   152   000000                     _CCP4CONbits	set	3874
   153                           
   154                           	psect	smallconst
   155   000E00                     __psmallconst:
   156                           	callstack 0
   157   000E00  00                 	db	0
   158   000E01                     
   159                           ; BSR set to: 14
   160   000E01  52                 	db	82	;'R'
   161   000E02  47                 	db	71	;'G'
   162   000E03  42                 	db	66	;'B'
   163   000E04  43                 	db	67	;'C'
   164   000E05  3A                 	db	58	;':'
   165   000E06  25                 	db	37
   166   000E07  69                 	db	105	;'i'
   167   000E08  20                 	db	32
   168   000E09  25                 	db	37
   169   000E0A  69                 	db	105	;'i'
   170   000E0B  20                 	db	32
   171   000E0C  25                 	db	37
   172   000E0D  69                 	db	105	;'i'
   173   000E0E  20                 	db	32
   174   000E0F  25                 	db	37
   175   000E10  69                 	db	105	;'i'
   176   000E11  0A                 	db	10
   177   000E12  00                 	db	0
   178   000E13  00                 	db	0	; dummy byte at the end
   179   000000                     
   180                           ; #config settings
   181                           
   182                           	psect	cinit
   183   001880                     __pcinit:
   184                           	callstack 0
   185   001880                     start_initialization:
   186                           	callstack 0
   187   001880                     __initialization:
   188                           	callstack 0
   189                           
   190                           ; Clear objects allocated to BANK0 (80 bytes)
   191   001880  EE00  F060         	lfsr	0,__pbssBANK0
   192   001884  0E50               	movlw	80
   193   001886                     clear_0:
   194   001886  6AEE               	clrf	postinc0,c
   195   001888  06E8               	decf	wreg,f,c
   196   00188A  E1FD               	bnz	clear_0
   197                           
   198                           ; Clear objects allocated to COMRAM (8 bytes)
   199   00188C  EE00  F04A         	lfsr	0,__pbssCOMRAM
   200   001890  0E08               	movlw	8
   201   001892                     clear_1:
   202   001892  6AEE               	clrf	postinc0,c
   203   001894  06E8               	decf	wreg,f,c
   204   001896  E1FD               	bnz	clear_1
   205   001898                     end_of_initialization:
   206                           	callstack 0
   207   001898                     __end_of__initialization:
   208                           	callstack 0
   209   001898  9052               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   210   00189A  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   211   00189C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   212   00189E  6EF8               	movwf	tblptru,c
   213   0018A0  0E0E               	movlw	high __Lsmallconst
   214   0018A2  6EF7               	movwf	tblptrh,c
   215   0018A4  0100               	movlb	0
   216   0018A6  EFC3  F008         	goto	_main	;jump to C main() function
   217                           
   218                           	psect	bssCOMRAM
   219   00004A                     __pbssCOMRAM:
   220                           	callstack 0
   221   00004A                     _interrupt_ctr:
   222                           	callstack 0
   223   00004A                     	ds	2
   224   00004C                     _interrupt_flag:
   225                           	callstack 0
   226   00004C                     	ds	2
   227   00004E                     _TxBufReadCnt:
   228                           	callstack 0
   229   00004E                     	ds	1
   230   00004F                     _TxBufWriteCnt:
   231                           	callstack 0
   232   00004F                     	ds	1
   233   000050                     _RxBufReadCnt:
   234                           	callstack 0
   235   000050                     	ds	1
   236   000051                     _RxBufWriteCnt:
   237                           	callstack 0
   238   000051                     	ds	1
   239                           
   240                           	psect	bssBANK0
   241   000060                     __pbssBANK0:
   242                           	callstack 0
   243   000060                     _EUSART4TXbuf:
   244                           	callstack 0
   245   000060                     	ds	60
   246   00009C                     _EUSART4RXbuf:
   247                           	callstack 0
   248   00009C                     	ds	20
   249                           
   250                           	psect	cstackCOMRAM
   251   000001                     __pcstackCOMRAM:
   252                           	callstack 0
   253   000001                     ??i2_I2C_2_Master_Idle:
   254   000001                     
   255                           ; 1 bytes @ 0x0
   256   000001                     	ds	1
   257   000002                     i2I2C_2_Master_Write@data_byte:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x1
   261   000002                     	ds	1
   262   000003                     i2color_writetoaddr@value:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x2
   266   000003                     	ds	1
   267   000004                     i2color_writetoaddr@address:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x3
   271   000004                     	ds	1
   272   000005                     ??i2_Color_Interrupts_init:
   273   000005                     i2Color_Interrupts_threshold@upperThreshold:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x4
   277   000005                     	ds	2
   278   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x6
   282   000007                     	ds	2
   283   000009                     ??_I2C_2_Master_Idle:
   284   000009                     ?___wmul:
   285                           	callstack 0
   286   000009                     initDCmotorsPWM@PWMperiod:
   287                           	callstack 0
   288   000009                     motorLinit@mL:
   289                           	callstack 0
   290   000009                     motorRinit@mR:
   291                           	callstack 0
   292   000009                     ___wmul@multiplier:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x8
   296   000009                     	ds	1
   297   00000A                     ??_I2C_2_Master_Read:
   298   00000A                     I2C_2_Master_Write@data_byte:
   299                           	callstack 0
   300                           
   301                           ; 1 bytes @ 0x9
   302   00000A                     	ds	1
   303   00000B                     color_writetoaddr@value:
   304                           	callstack 0
   305   00000B                     I2C_2_Master_Read@ack:
   306                           	callstack 0
   307   00000B                     ___wmul@multiplicand:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xA
   311   00000B                     	ds	1
   312   00000C                     color_writetoaddr@address:
   313                           	callstack 0
   314   00000C                     I2C_2_Master_Read@tmp:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0xB
   318   00000C                     	ds	1
   319   00000D                     ??_Color_Interrupts_init:
   320   00000D                     ??_color_click_init:
   321   00000D                     ?_color_read_Red:
   322                           	callstack 0
   323   00000D                     ?_color_read_Green:
   324                           	callstack 0
   325   00000D                     ?_color_read_Blue:
   326                           	callstack 0
   327   00000D                     ?_color_read_Clear:
   328                           	callstack 0
   329   00000D                     Color_Interrupts_threshold@upperThreshold:
   330                           	callstack 0
   331   00000D                     ___wmul@product:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xC
   335   00000D                     	ds	2
   336   00000F                     ??_color_read_Red:
   337   00000F                     ??_color_read_Green:
   338   00000F                     ??_color_read_Blue:
   339   00000F                     ??_color_read_Clear:
   340   00000F                     ?___lwdiv:
   341                           	callstack 0
   342   00000F                     Color_Interrupts_threshold@lowerThreshold:
   343                           	callstack 0
   344   00000F                     ___lwdiv@dividend:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0xE
   348   00000F                     	ds	2
   349   000011                     ___lwdiv@divisor:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x10
   353   000011                     	ds	1
   354   000012                     color_read_Red@tmp:
   355                           	callstack 0
   356   000012                     color_read_Green@tmp:
   357                           	callstack 0
   358   000012                     color_read_Blue@tmp:
   359                           	callstack 0
   360   000012                     color_read_Clear@tmp:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x11
   364   000012                     	ds	1
   365   000013                     ___lwdiv@quotient:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x12
   369   000013                     	ds	1
   370   000014                     color_read_RGBC@temp:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x13
   374   000014                     	ds	1
   375   000015                     ___lwdiv@counter:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x14
   379   000015                     	ds	1
   380   000016                     setMotorPWM@m:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x15
   384   000016                     	ds	2
   385   000018                     ??_setMotorPWM:
   386                           
   387                           ; 1 bytes @ 0x17
   388   000018                     	ds	2
   389   00001A                     setMotorPWM@posDuty:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x19
   393   00001A                     	ds	1
   394   00001B                     setMotorPWM@negDuty:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x1A
   398   00001B                     	ds	1
   399   00001C                     norm_stop@mL:
   400                           	callstack 0
   401   00001C                     turnLeft@mL:
   402                           	callstack 0
   403   00001C                     turnRight@mL:
   404                           	callstack 0
   405   00001C                     fullSpeedAhead@mL:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x1B
   409   00001C                     	ds	2
   410   00001E                     norm_stop@mR:
   411                           	callstack 0
   412   00001E                     turnLeft@mR:
   413                           	callstack 0
   414   00001E                     turnRight@mR:
   415                           	callstack 0
   416   00001E                     fullSpeedAhead@mR:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1D
   420   00001E                     	ds	2
   421   000020                     motor_response@temp:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x1F
   425   000020                     	ds	2
   426   000022                     motor_response@mL:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x21
   430   000022                     	ds	2
   431   000024                     motor_response@mR:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x23
   435   000024                     	ds	2
   436   000026                     ??_motor_response:
   437                           
   438                           ; 1 bytes @ 0x25
   439   000026                     	ds	2
   440   000028                     motor_response@j:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x27
   444   000028                     	ds	2
   445   00002A                     motor_response@j_455:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x29
   449   00002A                     	ds	2
   450   00002C                     motor_response@j_456:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x2B
   454   00002C                     	ds	2
   455   00002E                     ??_main:
   456                           
   457                           ; 1 bytes @ 0x2D
   458   00002E                     	ds	2
   459   000030                     main@RGBC:
   460                           	callstack 0
   461                           
   462                           ; 8 bytes @ 0x2F
   463   000030                     	ds	8
   464   000038                     main@mL:
   465                           	callstack 0
   466                           
   467                           ; 9 bytes @ 0x37
   468   000038                     	ds	9
   469   000041                     main@mR:
   470                           	callstack 0
   471                           
   472                           ; 9 bytes @ 0x40
   473   000041                     	ds	9
   474                           
   475 ;;
   476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   477 ;;
   478 ;; *************** function _main *****************
   479 ;; Defined at:
   480 ;;		line 21 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;		None
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  buf           100    0        unsigned char [100]
   485 ;;  mR              9   64[COMRAM] struct DC_motor
   486 ;;  mL              9   55[COMRAM] struct DC_motor
   487 ;;  RGBC            8   47[COMRAM] struct RGBC_val
   488 ;;  lowerThresho    2    0        int 
   489 ;;  upperThresho    2    0        int 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   500 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   502 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   503 ;;Total ram usage:       28 bytes
   504 ;; Hardware stack levels required when called: 10
   505 ;; This function calls:
   506 ;;		_Color_Interrupts_init
   507 ;;		_Color_Interrupts_threshold
   508 ;;		_Interrupts_init
   509 ;;		_color_click_init
   510 ;;		_color_read_RGBC
   511 ;;		_fullSpeedAhead
   512 ;;		_initDCmotorsPWM
   513 ;;		_motorLinit
   514 ;;		_motorRinit
   515 ;;		_motor_response
   516 ;;		_norm_stop
   517 ;;		_persistence_register
   518 ;;		_tricolorLED
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text0
   525   001186                     __ptext0:
   526                           	callstack 0
   527   001186                     _main:
   528                           	callstack 21
   529   001186                     
   530                           ;main.c: 23:     tricolorLED();
   531   001186  EC09  F00D         	call	_tricolorLED	;wreg free
   532   00118A                     
   533                           ;main.c: 29:     color_click_init();
   534   00118A  ECF4  F00B         	call	_color_click_init	;wreg free
   535   00118E                     
   536                           ;main.c: 31:     Interrupts_init();
   537   00118E  EC14  F00D         	call	_Interrupts_init	;wreg free
   538                           
   539                           ;main.c: 32:     Color_Interrupts_init();
   540   001192  ECEF  F00C         	call	_Color_Interrupts_init	;wreg free
   541                           
   542                           ;main.c: 33:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   543   001196  0E0B               	movlw	11
   544   001198  6E0E               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
   545   00119A  0EB8               	movlw	184
   546   00119C  6E0D               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
   547   00119E  0E00               	movlw	0
   548   0011A0  6E10               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
   549   0011A2  0E00               	movlw	0
   550   0011A4  6E0F               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
   551   0011A6  EC6A  F00C         	call	_Color_Interrupts_threshold	;wreg free
   552                           
   553                           ;main.c: 34:     persistence_register();
   554   0011AA  EC1F  F00D         	call	_persistence_register	;wreg free
   555   0011AE                     
   556                           ;main.c: 36:     initDCmotorsPWM(200);
   557   0011AE  0E00               	movlw	0
   558   0011B0  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   559   0011B2  0EC8               	movlw	200
   560   0011B4  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   561   0011B6  ECAE  F009         	call	_initDCmotorsPWM	;wreg free
   562   0011BA                     
   563                           ;main.c: 37:     DC_motor mL, mR;;main.c: 38:     motorLinit(&mL);
   564   0011BA  0E38               	movlw	low main@mL
   565   0011BC  6E09               	movwf	motorLinit@mL^0,c
   566   0011BE  0E00               	movlw	high main@mL
   567   0011C0  6E0A               	movwf	(motorLinit@mL+1)^0,c
   568   0011C2  ECCF  F00A         	call	_motorLinit	;wreg free
   569   0011C6                     
   570                           ;main.c: 39:     motorRinit(&mR);
   571   0011C6  0E41               	movlw	low main@mR
   572   0011C8  6E09               	movwf	motorRinit@mR^0,c
   573   0011CA  0E00               	movlw	high main@mR
   574   0011CC  6E0A               	movwf	(motorRinit@mR+1)^0,c
   575   0011CE  EC9A  F00A         	call	_motorRinit	;wreg free
   576   0011D2                     
   577                           ;main.c: 41:     TRISEbits.TRISE2 = 0;
   578   0011D2  9485               	bcf	133,2,c	;volatile
   579   0011D4                     
   580                           ;main.c: 42:     TRISEbits.TRISE4 = 0;
   581   0011D4  9885               	bcf	133,4,c	;volatile
   582   0011D6                     
   583                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   584   0011D6  9E83               	bcf	131,7,c	;volatile
   585   0011D8                     
   586                           ;main.c: 44:     TRISGbits.TRISG6 = 0;
   587   0011D8  9C87               	bcf	135,6,c	;volatile
   588   0011DA                     
   589                           ;main.c: 45:     TRISDbits.TRISD7 = 0;
   590   0011DA  9E84               	bcf	132,7,c	;volatile
   591   0011DC                     
   592                           ;main.c: 46:     LATDbits.LATD7 = 0;
   593   0011DC  9E7C               	bcf	124,7,c	;volatile
   594   0011DE                     
   595                           ;main.c: 47:     TRISHbits.TRISH3 = 0;
   596   0011DE  9688               	bcf	136,3,c	;volatile
   597   0011E0                     
   598                           ;main.c: 48:     LATHbits.LATH3 = 0;
   599   0011E0  9680               	bcf	128,3,c	;volatile
   600   0011E2                     l1998:
   601                           
   602                           ;main.c: 51:         fullSpeedAhead(&mL, &mR);
   603   0011E2  0E38               	movlw	low main@mL
   604   0011E4  6E1C               	movwf	fullSpeedAhead@mL^0,c
   605   0011E6  0E00               	movlw	high main@mL
   606   0011E8  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   607   0011EA  0E41               	movlw	low main@mR
   608   0011EC  6E1E               	movwf	fullSpeedAhead@mR^0,c
   609   0011EE  0E00               	movlw	high main@mR
   610   0011F0  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   611   0011F2  EC39  F009         	call	_fullSpeedAhead	;wreg free
   612   0011F6                     
   613                           ;main.c: 53:         LATHbits.LATH3 = 1;
   614   0011F6  8680               	bsf	128,3,c	;volatile
   615   0011F8                     
   616                           ;main.c: 54:         if (interrupt_flag == 1 ) {
   617   0011F8  044C               	decf	_interrupt_flag^0,w,c
   618   0011FA  104D               	iorwf	(_interrupt_flag+1)^0,w,c
   619   0011FC  A4D8               	btfss	status,2,c
   620   0011FE  EF03  F009         	goto	u551
   621   001202  EF05  F009         	goto	u550
   622   001206                     u551:
   623   001206  EFF1  F008         	goto	l1998
   624   00120A                     u550:
   625   00120A                     
   626                           ;main.c: 56:             norm_stop(&mL, &mR);
   627   00120A  0E38               	movlw	low main@mL
   628   00120C  6E1C               	movwf	norm_stop@mL^0,c
   629   00120E  0E00               	movlw	high main@mL
   630   001210  6E1D               	movwf	(norm_stop@mL+1)^0,c
   631   001212  0E41               	movlw	low main@mR
   632   001214  6E1E               	movwf	norm_stop@mR^0,c
   633   001216  0E00               	movlw	high main@mR
   634   001218  6E1F               	movwf	(norm_stop@mR+1)^0,c
   635   00121A  EC0E  F00C         	call	_norm_stop	;wreg free
   636   00121E                     
   637                           ;main.c: 57:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   638   00121E  0E52               	movlw	82
   639   001220  6E2F               	movwf	(??_main+1)^0,c
   640   001222  0E2B               	movlw	43
   641   001224  6E2E               	movwf	??_main^0,c
   642   001226  0E00               	movlw	0
   643   001228                     u657:
   644   001228  2EE8               	decfsz	wreg,f,c
   645   00122A  D7FE               	bra	u657
   646   00122C  2E2E               	decfsz	??_main^0,f,c
   647   00122E  D7FC               	bra	u657
   648   001230  2E2F               	decfsz	(??_main+1)^0,f,c
   649   001232  D7FA               	bra	u657
   650   001234  D000               	nop2	
   651   001236                     
   652                           ;main.c: 58:             LATDbits.LATD7 = 0;
   653   001236  9E7C               	bcf	124,7,c	;volatile
   654   001238                     
   655                           ;main.c: 59:             color_read_RGBC(&RGBC);
   656   001238  0E30               	movlw	low main@RGBC
   657   00123A  6E14               	movwf	color_read_RGBC@temp^0,c
   658   00123C  0E00               	movlw	high main@RGBC
   659   00123E  6E15               	movwf	(color_read_RGBC@temp+1)^0,c
   660   001240  EC04  F00B         	call	_color_read_RGBC	;wreg free
   661   001244                     
   662                           ;main.c: 60:             motor_response(&RGBC,&mL,&mR);
   663   001244  0E30               	movlw	low main@RGBC
   664   001246  6E20               	movwf	motor_response@temp^0,c
   665   001248  0E00               	movlw	high main@RGBC
   666   00124A  6E21               	movwf	(motor_response@temp+1)^0,c
   667   00124C  0E38               	movlw	low main@mL
   668   00124E  6E22               	movwf	motor_response@mL^0,c
   669   001250  0E00               	movlw	high main@mL
   670   001252  6E23               	movwf	(motor_response@mL+1)^0,c
   671   001254  0E41               	movlw	low main@mR
   672   001256  6E24               	movwf	motor_response@mR^0,c
   673   001258  0E00               	movlw	high main@mR
   674   00125A  6E25               	movwf	(motor_response@mR+1)^0,c
   675   00125C  EC0A  F007         	call	_motor_response	;wreg free
   676   001260                     
   677                           ;main.c: 61:             LATHbits.LATH3 = 0;
   678   001260  9680               	bcf	128,3,c	;volatile
   679   001262                     
   680                           ;main.c: 62:             interrupt_flag = 0;
   681   001262  0E00               	movlw	0
   682   001264  6E4D               	movwf	(_interrupt_flag+1)^0,c
   683   001266  0E00               	movlw	0
   684   001268  6E4C               	movwf	_interrupt_flag^0,c
   685   00126A  EFF1  F008         	goto	l1998
   686   00126E  EF18  F000         	goto	start
   687   001272                     __end_of_main:
   688                           	callstack 0
   689                           
   690 ;; *************** function _tricolorLED *****************
   691 ;; Defined at:
   692 ;;		line 104 in file "color.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		None
   701 ;; Tracked objects:
   702 ;;		On entry : 0/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   710 ;;Total ram usage:        0 bytes
   711 ;; Hardware stack levels used: 1
   712 ;; Hardware stack levels required when called: 6
   713 ;; This function calls:
   714 ;;		Nothing
   715 ;; This function is called by:
   716 ;;		_main
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text1
   721   001A12                     __ptext1:
   722                           	callstack 0
   723   001A12                     _tricolorLED:
   724                           	callstack 24
   725   001A12                     
   726                           ;color.c: 106:     TRISGbits.TRISG0 = 0;
   727   001A12  9087               	bcf	135,0,c	;volatile
   728                           
   729                           ;color.c: 107:     LATGbits.LATG0 = 1;
   730   001A14  807F               	bsf	127,0,c	;volatile
   731                           
   732                           ;color.c: 108:     TRISAbits.TRISA4 = 0;
   733   001A16  9881               	bcf	129,4,c	;volatile
   734                           
   735                           ;color.c: 109:     LATAbits.LATA4= 1;
   736   001A18  8879               	bsf	121,4,c	;volatile
   737                           
   738                           ;color.c: 110:     TRISFbits.TRISF7 = 0;
   739   001A1A  9E86               	bcf	134,7,c	;volatile
   740                           
   741                           ;color.c: 111:     LATFbits.LATF7 = 1;
   742   001A1C  8E7E               	bsf	126,7,c	;volatile
   743                           
   744                           ;color.c: 112:     TRISAbits.TRISA3 = 0;
   745   001A1E  9681               	bcf	129,3,c	;volatile
   746                           
   747                           ;color.c: 113:     LATAbits.LATA3 = 1;
   748   001A20  8679               	bsf	121,3,c	;volatile
   749                           
   750                           ;color.c: 114:     TRISEbits.TRISE7 = 0;
   751   001A22  9E85               	bcf	133,7,c	;volatile
   752                           
   753                           ;color.c: 115:     LATEbits.LATE7 = 1;
   754   001A24  8E7D               	bsf	125,7,c	;volatile
   755   001A26  0012               	return		;funcret
   756   001A28                     __end_of_tricolorLED:
   757                           	callstack 0
   758                           
   759 ;; *************** function _persistence_register *****************
   760 ;; Defined at:
   761 ;;		line 46 in file "interrupts.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;                  1    wreg      void 
   768 ;; Registers used:
   769 ;;		wreg, status,2, status,0, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used: 1
   781 ;; Hardware stack levels required when called: 9
   782 ;; This function calls:
   783 ;;		_color_writetoaddr
   784 ;; This function is called by:
   785 ;;		_main
   786 ;; This function uses a non-reentrant model
   787 ;;
   788                           
   789                           	psect	text2
   790   001A3E                     __ptext2:
   791                           	callstack 0
   792   001A3E                     _persistence_register:
   793                           	callstack 21
   794   001A3E                     
   795                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   796   001A3E  0E02               	movlw	2
   797   001A40  6E0B               	movwf	color_writetoaddr@value^0,c
   798   001A42  0E0C               	movlw	12
   799   001A44  ECCF  F00C         	call	_color_writetoaddr
   800   001A48  0012               	return		;funcret
   801   001A4A                     __end_of_persistence_register:
   802                           	callstack 0
   803                           
   804 ;; *************** function _motor_response *****************
   805 ;; Defined at:
   806 ;;		line 118 in file "color.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  temp            2   31[COMRAM] PTR struct RGBC_val
   809 ;;		 -> main@RGBC(8), 
   810 ;;  mL              2   33[COMRAM] PTR struct DC_motor
   811 ;;		 -> main@mL(9), 
   812 ;;  mR              2   35[COMRAM] PTR struct DC_motor
   813 ;;		 -> main@mR(9), 
   814 ;; Auto vars:     Size  Location     Type
   815 ;;  j               2   43[COMRAM] int 
   816 ;;  j               2   41[COMRAM] int 
   817 ;;  j               2   39[COMRAM] int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   827 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   828 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   829 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   830 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   831 ;;Total ram usage:       14 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 9
   834 ;; This function calls:
   835 ;;		_norm_stop
   836 ;;		_turnLeft
   837 ;;		_turnRight
   838 ;; This function is called by:
   839 ;;		_main
   840 ;; This function uses a non-reentrant model
   841 ;;
   842                           
   843                           	psect	text3
   844   000E14                     __ptext3:
   845                           	callstack 0
   846   000E14                     _motor_response:
   847                           	callstack 21
   848   000E14                     
   849                           ;color.c: 119:     if (temp->R > 5000) {
   850   000E14  C020  FFD9         	movff	motor_response@temp,fsr2l
   851   000E18  C021  FFDA         	movff	motor_response@temp+1,fsr2h
   852   000E1C  0E89               	movlw	137
   853   000E1E  5CDE               	subwf	postinc2,w,c
   854   000E20  0E13               	movlw	19
   855   000E22  58DE               	subwfb	postinc2,w,c
   856   000E24  A0D8               	btfss	status,0,c
   857   000E26  EF17  F007         	goto	u451
   858   000E2A  EF19  F007         	goto	u450
   859   000E2E                     u451:
   860   000E2E  EF5B  F007         	goto	l1844
   861   000E32                     u450:
   862   000E32                     
   863                           ;color.c: 120:      for (int j = 0; j <= 15; j++) {
   864   000E32  0E00               	movlw	0
   865   000E34  6E29               	movwf	(motor_response@j+1)^0,c
   866   000E36  0E00               	movlw	0
   867   000E38  6E28               	movwf	motor_response@j^0,c
   868   000E3A                     l1836:
   869                           
   870                           ;color.c: 121:          turnRight(mL, mR);
   871   000E3A  C022  F01C         	movff	motor_response@mL,turnRight@mL
   872   000E3E  C023  F01D         	movff	motor_response@mL+1,turnRight@mL+1
   873   000E42  C024  F01E         	movff	motor_response@mR,turnRight@mR
   874   000E46  C025  F01F         	movff	motor_response@mR+1,turnRight@mR+1
   875   000E4A  EC28  F00A         	call	_turnRight	;wreg free
   876   000E4E                     
   877                           ;color.c: 122:          _delay((unsigned long)((30)*(64000000/4000.0)));
   878   000E4E  0E03               	movlw	3
   879   000E50  6E27               	movwf	(??_motor_response+1)^0,c
   880   000E52  0E70               	movlw	112
   881   000E54  6E26               	movwf	??_motor_response^0,c
   882   000E56  0E5C               	movlw	92
   883   000E58                     u667:
   884   000E58  2EE8               	decfsz	wreg,f,c
   885   000E5A  D7FE               	bra	u667
   886   000E5C  2E26               	decfsz	??_motor_response^0,f,c
   887   000E5E  D7FC               	bra	u667
   888   000E60  2E27               	decfsz	(??_motor_response+1)^0,f,c
   889   000E62  D7FA               	bra	u667
   890   000E64  D000               	nop2	
   891   000E66                     
   892                           ;color.c: 123:          norm_stop(mL, mR);
   893   000E66  C022  F01C         	movff	motor_response@mL,norm_stop@mL
   894   000E6A  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
   895   000E6E  C024  F01E         	movff	motor_response@mR,norm_stop@mR
   896   000E72  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
   897   000E76  EC0E  F00C         	call	_norm_stop	;wreg free
   898                           
   899                           ;color.c: 124:          _delay((unsigned long)((30)*(64000000/4000.0)));
   900   000E7A  0E03               	movlw	3
   901   000E7C  6E27               	movwf	(??_motor_response+1)^0,c
   902   000E7E  0E70               	movlw	112
   903   000E80  6E26               	movwf	??_motor_response^0,c
   904   000E82  0E5C               	movlw	92
   905   000E84                     u677:
   906   000E84  2EE8               	decfsz	wreg,f,c
   907   000E86  D7FE               	bra	u677
   908   000E88  2E26               	decfsz	??_motor_response^0,f,c
   909   000E8A  D7FC               	bra	u677
   910   000E8C  2E27               	decfsz	(??_motor_response+1)^0,f,c
   911   000E8E  D7FA               	bra	u677
   912   000E90  D000               	nop2	
   913   000E92                     
   914                           ;color.c: 125:      }
   915   000E92  4A28               	infsnz	motor_response@j^0,f,c
   916   000E94  2A29               	incf	(motor_response@j+1)^0,f,c
   917   000E96  BE29               	btfsc	(motor_response@j+1)^0,7,c
   918   000E98  EF57  F007         	goto	u461
   919   000E9C  5029               	movf	(motor_response@j+1)^0,w,c
   920   000E9E  E109               	bnz	u460
   921   000EA0  0E10               	movlw	16
   922   000EA2  5C28               	subwf	motor_response@j^0,w,c
   923   000EA4  A0D8               	btfss	status,0,c
   924   000EA6  EF57  F007         	goto	u461
   925   000EAA  EF59  F007         	goto	u460
   926   000EAE                     u461:
   927   000EAE  EF1D  F007         	goto	l1836
   928   000EB2                     u460:
   929   000EB2  EF0C  F008         	goto	l102
   930   000EB6                     l1844:
   931   000EB6  C020  FFD9         	movff	motor_response@temp,fsr2l
   932   000EBA  C021  FFDA         	movff	motor_response@temp+1,fsr2h
   933   000EBE  0EB9               	movlw	185
   934   000EC0  5CDE               	subwf	postinc2,w,c
   935   000EC2  0E0B               	movlw	11
   936   000EC4  58DE               	subwfb	postinc2,w,c
   937   000EC6  A0D8               	btfss	status,0,c
   938   000EC8  EF68  F007         	goto	u471
   939   000ECC  EF6A  F007         	goto	u470
   940   000ED0                     u471:
   941   000ED0  EFBD  F007         	goto	l1862
   942   000ED4                     u470:
   943   000ED4  EE20 F002          	lfsr	2,2
   944   000ED8  5020               	movf	motor_response@temp^0,w,c
   945   000EDA  26D9               	addwf	fsr2l,f,c
   946   000EDC  5021               	movf	(motor_response@temp+1)^0,w,c
   947   000EDE  22DA               	addwfc	fsr2h,f,c
   948   000EE0  0EB9               	movlw	185
   949   000EE2  5CDE               	subwf	postinc2,w,c
   950   000EE4  0E0B               	movlw	11
   951   000EE6  58DE               	subwfb	postinc2,w,c
   952   000EE8  A0D8               	btfss	status,0,c
   953   000EEA  EF79  F007         	goto	u481
   954   000EEE  EF7B  F007         	goto	u480
   955   000EF2                     u481:
   956   000EF2  EFBD  F007         	goto	l1862
   957   000EF6                     u480:
   958   000EF6                     
   959                           ;color.c: 128:     for (int j = 0; j <= 15; j++) {
   960   000EF6  0E00               	movlw	0
   961   000EF8  6E2B               	movwf	(motor_response@j_455+1)^0,c
   962   000EFA  0E00               	movlw	0
   963   000EFC  6E2A               	movwf	motor_response@j_455^0,c
   964   000EFE                     l1854:
   965                           
   966                           ;color.c: 129:         turnLeft(mL, mR);
   967   000EFE  C022  F01C         	movff	motor_response@mL,turnLeft@mL
   968   000F02  C023  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
   969   000F06  C024  F01E         	movff	motor_response@mR,turnLeft@mR
   970   000F0A  C025  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
   971   000F0E  EC61  F00A         	call	_turnLeft	;wreg free
   972   000F12                     
   973                           ;color.c: 130:         _delay((unsigned long)((30)*(64000000/4000.0)));
   974   000F12  0E03               	movlw	3
   975   000F14  6E27               	movwf	(??_motor_response+1)^0,c
   976   000F16  0E70               	movlw	112
   977   000F18  6E26               	movwf	??_motor_response^0,c
   978   000F1A  0E5C               	movlw	92
   979   000F1C                     u687:
   980   000F1C  2EE8               	decfsz	wreg,f,c
   981   000F1E  D7FE               	bra	u687
   982   000F20  2E26               	decfsz	??_motor_response^0,f,c
   983   000F22  D7FC               	bra	u687
   984   000F24  2E27               	decfsz	(??_motor_response+1)^0,f,c
   985   000F26  D7FA               	bra	u687
   986   000F28  D000               	nop2	
   987   000F2A                     
   988                           ;color.c: 131:         norm_stop(mL, mR);
   989   000F2A  C022  F01C         	movff	motor_response@mL,norm_stop@mL
   990   000F2E  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
   991   000F32  C024  F01E         	movff	motor_response@mR,norm_stop@mR
   992   000F36  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
   993   000F3A  EC0E  F00C         	call	_norm_stop	;wreg free
   994                           
   995                           ;color.c: 132:         _delay((unsigned long)((30)*(64000000/4000.0)));
   996   000F3E  0E03               	movlw	3
   997   000F40  6E27               	movwf	(??_motor_response+1)^0,c
   998   000F42  0E70               	movlw	112
   999   000F44  6E26               	movwf	??_motor_response^0,c
  1000   000F46  0E5C               	movlw	92
  1001   000F48                     u697:
  1002   000F48  2EE8               	decfsz	wreg,f,c
  1003   000F4A  D7FE               	bra	u697
  1004   000F4C  2E26               	decfsz	??_motor_response^0,f,c
  1005   000F4E  D7FC               	bra	u697
  1006   000F50  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1007   000F52  D7FA               	bra	u697
  1008   000F54  D000               	nop2	
  1009   000F56                     
  1010                           ;color.c: 133:     }
  1011   000F56  4A2A               	infsnz	motor_response@j_455^0,f,c
  1012   000F58  2A2B               	incf	(motor_response@j_455+1)^0,f,c
  1013   000F5A  BE2B               	btfsc	(motor_response@j_455+1)^0,7,c
  1014   000F5C  EFB9  F007         	goto	u491
  1015   000F60  502B               	movf	(motor_response@j_455+1)^0,w,c
  1016   000F62  E109               	bnz	u490
  1017   000F64  0E10               	movlw	16
  1018   000F66  5C2A               	subwf	motor_response@j_455^0,w,c
  1019   000F68  A0D8               	btfss	status,0,c
  1020   000F6A  EFB9  F007         	goto	u491
  1021   000F6E  EFBB  F007         	goto	u490
  1022   000F72                     u491:
  1023   000F72  EF7F  F007         	goto	l1854
  1024   000F76                     u490:
  1025   000F76  EF0C  F008         	goto	l102
  1026   000F7A                     l1862:
  1027   000F7A  C020  FFD9         	movff	motor_response@temp,fsr2l
  1028   000F7E  C021  FFDA         	movff	motor_response@temp+1,fsr2h
  1029   000F82  0EE9               	movlw	233
  1030   000F84  5CDE               	subwf	postinc2,w,c
  1031   000F86  0E03               	movlw	3
  1032   000F88  58DE               	subwfb	postinc2,w,c
  1033   000F8A  A0D8               	btfss	status,0,c
  1034   000F8C  EFCA  F007         	goto	u501
  1035   000F90  EFCC  F007         	goto	u500
  1036   000F94                     u501:
  1037   000F94  EF0C  F008         	goto	l102
  1038   000F98                     u500:
  1039   000F98                     
  1040                           ;color.c: 136:      for (int j = 0; j <= 29; j++) {
  1041   000F98  0E00               	movlw	0
  1042   000F9A  6E2D               	movwf	(motor_response@j_456+1)^0,c
  1043   000F9C  0E00               	movlw	0
  1044   000F9E  6E2C               	movwf	motor_response@j_456^0,c
  1045   000FA0                     l1870:
  1046                           
  1047                           ;color.c: 137:          turnLeft(mL, mR);
  1048   000FA0  C022  F01C         	movff	motor_response@mL,turnLeft@mL
  1049   000FA4  C023  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  1050   000FA8  C024  F01E         	movff	motor_response@mR,turnLeft@mR
  1051   000FAC  C025  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  1052   000FB0  EC61  F00A         	call	_turnLeft	;wreg free
  1053   000FB4                     
  1054                           ;color.c: 138:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1055   000FB4  0E03               	movlw	3
  1056   000FB6  6E27               	movwf	(??_motor_response+1)^0,c
  1057   000FB8  0E70               	movlw	112
  1058   000FBA  6E26               	movwf	??_motor_response^0,c
  1059   000FBC  0E5C               	movlw	92
  1060   000FBE                     u707:
  1061   000FBE  2EE8               	decfsz	wreg,f,c
  1062   000FC0  D7FE               	bra	u707
  1063   000FC2  2E26               	decfsz	??_motor_response^0,f,c
  1064   000FC4  D7FC               	bra	u707
  1065   000FC6  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1066   000FC8  D7FA               	bra	u707
  1067   000FCA  D000               	nop2	
  1068   000FCC                     
  1069                           ;color.c: 139:          norm_stop(mL, mR);
  1070   000FCC  C022  F01C         	movff	motor_response@mL,norm_stop@mL
  1071   000FD0  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1072   000FD4  C024  F01E         	movff	motor_response@mR,norm_stop@mR
  1073   000FD8  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1074   000FDC  EC0E  F00C         	call	_norm_stop	;wreg free
  1075                           
  1076                           ;color.c: 140:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1077   000FE0  0E03               	movlw	3
  1078   000FE2  6E27               	movwf	(??_motor_response+1)^0,c
  1079   000FE4  0E70               	movlw	112
  1080   000FE6  6E26               	movwf	??_motor_response^0,c
  1081   000FE8  0E5C               	movlw	92
  1082   000FEA                     u717:
  1083   000FEA  2EE8               	decfsz	wreg,f,c
  1084   000FEC  D7FE               	bra	u717
  1085   000FEE  2E26               	decfsz	??_motor_response^0,f,c
  1086   000FF0  D7FC               	bra	u717
  1087   000FF2  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1088   000FF4  D7FA               	bra	u717
  1089   000FF6  D000               	nop2	
  1090   000FF8                     
  1091                           ;color.c: 141:      }
  1092   000FF8  4A2C               	infsnz	motor_response@j_456^0,f,c
  1093   000FFA  2A2D               	incf	(motor_response@j_456+1)^0,f,c
  1094   000FFC  BE2D               	btfsc	(motor_response@j_456+1)^0,7,c
  1095   000FFE  EF0A  F008         	goto	u511
  1096   001002  502D               	movf	(motor_response@j_456+1)^0,w,c
  1097   001004  E109               	bnz	u510
  1098   001006  0E1E               	movlw	30
  1099   001008  5C2C               	subwf	motor_response@j_456^0,w,c
  1100   00100A  A0D8               	btfss	status,0,c
  1101   00100C  EF0A  F008         	goto	u511
  1102   001010  EF0C  F008         	goto	u510
  1103   001014                     u511:
  1104   001014  EFD0  F007         	goto	l1870
  1105   001018                     u510:
  1106   001018                     l102:
  1107   001018  0012               	return		;funcret
  1108   00101A                     __end_of_motor_response:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _turnRight *****************
  1112 ;; Defined at:
  1113 ;;		line 144 in file "dc_motor.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1116 ;;		 -> main@mL(9), 
  1117 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1118 ;;		 -> main@mR(9), 
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;                  1    wreg      void 
  1123 ;; Registers used:
  1124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1130 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1133 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1134 ;;Total ram usage:        4 bytes
  1135 ;; Hardware stack levels used: 1
  1136 ;; Hardware stack levels required when called: 8
  1137 ;; This function calls:
  1138 ;;		_setMotorPWM
  1139 ;; This function is called by:
  1140 ;;		_motor_response
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text4
  1145   001450                     __ptext4:
  1146                           	callstack 0
  1147   001450                     _turnRight:
  1148                           	callstack 21
  1149   001450                     
  1150                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
  1151   001450  C01C  FFD9         	movff	turnRight@mL,fsr2l
  1152   001454  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  1153   001458  0E32               	movlw	50
  1154   00145A  6EDF               	movwf	indf2,c
  1155                           
  1156                           ;dc_motor.c: 147:     mR->power = 50;
  1157   00145C  C01E  FFD9         	movff	turnRight@mR,fsr2l
  1158   001460  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  1159   001464  0E32               	movlw	50
  1160   001466  6EDF               	movwf	indf2,c
  1161   001468                     
  1162                           ;dc_motor.c: 148:     mL->brakemode = 1;
  1163   001468  EE20 F002          	lfsr	2,2
  1164   00146C  501C               	movf	turnRight@mL^0,w,c
  1165   00146E  26D9               	addwf	fsr2l,f,c
  1166   001470  501D               	movf	(turnRight@mL+1)^0,w,c
  1167   001472  22DA               	addwfc	fsr2h,f,c
  1168   001474  0E01               	movlw	1
  1169   001476  6EDF               	movwf	indf2,c
  1170   001478                     
  1171                           ;dc_motor.c: 149:     mR->brakemode = 1;
  1172   001478  EE20 F002          	lfsr	2,2
  1173   00147C  501E               	movf	turnRight@mR^0,w,c
  1174   00147E  26D9               	addwf	fsr2l,f,c
  1175   001480  501F               	movf	(turnRight@mR+1)^0,w,c
  1176   001482  22DA               	addwfc	fsr2h,f,c
  1177   001484  0E01               	movlw	1
  1178   001486  6EDF               	movwf	indf2,c
  1179   001488                     
  1180                           ;dc_motor.c: 150:     mR->direction = 0;
  1181   001488  EE20 F001          	lfsr	2,1
  1182   00148C  501E               	movf	turnRight@mR^0,w,c
  1183   00148E  26D9               	addwf	fsr2l,f,c
  1184   001490  501F               	movf	(turnRight@mR+1)^0,w,c
  1185   001492  22DA               	addwfc	fsr2h,f,c
  1186   001494  0E00               	movlw	0
  1187   001496  6EDF               	movwf	indf2,c
  1188   001498                     
  1189                           ;dc_motor.c: 151:     mL->direction = 1;
  1190   001498  EE20 F001          	lfsr	2,1
  1191   00149C  501C               	movf	turnRight@mL^0,w,c
  1192   00149E  26D9               	addwf	fsr2l,f,c
  1193   0014A0  501D               	movf	(turnRight@mL+1)^0,w,c
  1194   0014A2  22DA               	addwfc	fsr2h,f,c
  1195   0014A4  0E01               	movlw	1
  1196   0014A6  6EDF               	movwf	indf2,c
  1197   0014A8                     
  1198                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1199   0014A8  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  1200   0014AC  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  1201   0014B0  EC0D  F008         	call	_setMotorPWM	;wreg free
  1202   0014B4                     
  1203                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1204   0014B4  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  1205   0014B8  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  1206   0014BC  EC0D  F008         	call	_setMotorPWM	;wreg free
  1207   0014C0  0012               	return		;funcret
  1208   0014C2                     __end_of_turnRight:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _turnLeft *****************
  1212 ;; Defined at:
  1213 ;;		line 131 in file "dc_motor.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1216 ;;		 -> main@mL(9), 
  1217 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1218 ;;		 -> main@mR(9), 
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1230 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;Total ram usage:        4 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 8
  1237 ;; This function calls:
  1238 ;;		_setMotorPWM
  1239 ;; This function is called by:
  1240 ;;		_motor_response
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text5
  1245   0014C2                     __ptext5:
  1246                           	callstack 0
  1247   0014C2                     _turnLeft:
  1248                           	callstack 21
  1249   0014C2                     
  1250                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 50;
  1251   0014C2  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  1252   0014C6  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  1253   0014CA  0E32               	movlw	50
  1254   0014CC  6EDF               	movwf	indf2,c
  1255                           
  1256                           ;dc_motor.c: 134:     mR->power = 50;
  1257   0014CE  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  1258   0014D2  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  1259   0014D6  0E32               	movlw	50
  1260   0014D8  6EDF               	movwf	indf2,c
  1261   0014DA                     
  1262                           ;dc_motor.c: 135:     mL->brakemode = 1;
  1263   0014DA  EE20 F002          	lfsr	2,2
  1264   0014DE  501C               	movf	turnLeft@mL^0,w,c
  1265   0014E0  26D9               	addwf	fsr2l,f,c
  1266   0014E2  501D               	movf	(turnLeft@mL+1)^0,w,c
  1267   0014E4  22DA               	addwfc	fsr2h,f,c
  1268   0014E6  0E01               	movlw	1
  1269   0014E8  6EDF               	movwf	indf2,c
  1270   0014EA                     
  1271                           ;dc_motor.c: 136:     mR->brakemode = 1;
  1272   0014EA  EE20 F002          	lfsr	2,2
  1273   0014EE  501E               	movf	turnLeft@mR^0,w,c
  1274   0014F0  26D9               	addwf	fsr2l,f,c
  1275   0014F2  501F               	movf	(turnLeft@mR+1)^0,w,c
  1276   0014F4  22DA               	addwfc	fsr2h,f,c
  1277   0014F6  0E01               	movlw	1
  1278   0014F8  6EDF               	movwf	indf2,c
  1279   0014FA                     
  1280                           ;dc_motor.c: 137:     mL->direction = 0;
  1281   0014FA  EE20 F001          	lfsr	2,1
  1282   0014FE  501C               	movf	turnLeft@mL^0,w,c
  1283   001500  26D9               	addwf	fsr2l,f,c
  1284   001502  501D               	movf	(turnLeft@mL+1)^0,w,c
  1285   001504  22DA               	addwfc	fsr2h,f,c
  1286   001506  0E00               	movlw	0
  1287   001508  6EDF               	movwf	indf2,c
  1288   00150A                     
  1289                           ;dc_motor.c: 138:     mR->direction = 1;
  1290   00150A  EE20 F001          	lfsr	2,1
  1291   00150E  501E               	movf	turnLeft@mR^0,w,c
  1292   001510  26D9               	addwf	fsr2l,f,c
  1293   001512  501F               	movf	(turnLeft@mR+1)^0,w,c
  1294   001514  22DA               	addwfc	fsr2h,f,c
  1295   001516  0E01               	movlw	1
  1296   001518  6EDF               	movwf	indf2,c
  1297   00151A                     
  1298                           ;dc_motor.c: 139:     setMotorPWM(mL);
  1299   00151A  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  1300   00151E  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  1301   001522  EC0D  F008         	call	_setMotorPWM	;wreg free
  1302   001526                     
  1303                           ;dc_motor.c: 140:     setMotorPWM(mR);
  1304   001526  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  1305   00152A  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  1306   00152E  EC0D  F008         	call	_setMotorPWM	;wreg free
  1307   001532  0012               	return		;funcret
  1308   001534                     __end_of_turnLeft:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _norm_stop *****************
  1312 ;; Defined at:
  1313 ;;		line 118 in file "dc_motor.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1316 ;;		 -> main@mL(9), 
  1317 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1318 ;;		 -> main@mR(9), 
  1319 ;; Auto vars:     Size  Location     Type
  1320 ;;		None
  1321 ;; Return value:  Size  Location     Type
  1322 ;;                  1    wreg      void 
  1323 ;; Registers used:
  1324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1325 ;; Tracked objects:
  1326 ;;		On entry : 0/0
  1327 ;;		On exit  : 0/0
  1328 ;;		Unchanged: 0/0
  1329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1333 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1334 ;;Total ram usage:        4 bytes
  1335 ;; Hardware stack levels used: 1
  1336 ;; Hardware stack levels required when called: 8
  1337 ;; This function calls:
  1338 ;;		_setMotorPWM
  1339 ;; This function is called by:
  1340 ;;		_motor_response
  1341 ;;		_main
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345                           	psect	text6
  1346   00181C                     __ptext6:
  1347                           	callstack 0
  1348   00181C                     _norm_stop:
  1349                           	callstack 22
  1350   00181C                     
  1351                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1352   00181C  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  1353   001820  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  1354   001824  0E00               	movlw	0
  1355   001826  6EDF               	movwf	indf2,c
  1356                           
  1357                           ;dc_motor.c: 125:     mR->power = 0;
  1358   001828  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  1359   00182C  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  1360   001830  0E00               	movlw	0
  1361   001832  6EDF               	movwf	indf2,c
  1362   001834                     
  1363                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1364   001834  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  1365   001838  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1366   00183C  EC0D  F008         	call	_setMotorPWM	;wreg free
  1367   001840                     
  1368                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1369   001840  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  1370   001844  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1371   001848  EC0D  F008         	call	_setMotorPWM	;wreg free
  1372   00184C  0012               	return		;funcret
  1373   00184E                     __end_of_norm_stop:
  1374                           	callstack 0
  1375                           
  1376 ;; *************** function _motorRinit *****************
  1377 ;; Defined at:
  1378 ;;		line 88 in file "dc_motor.c"
  1379 ;; Parameters:    Size  Location     Type
  1380 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  1381 ;;		 -> main@mR(9), 
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;		None
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1393 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 6
  1400 ;; This function calls:
  1401 ;;		Nothing
  1402 ;; This function is called by:
  1403 ;;		_main
  1404 ;; This function uses a non-reentrant model
  1405 ;;
  1406                           
  1407                           	psect	text7
  1408   001534                     __ptext7:
  1409                           	callstack 0
  1410   001534                     _motorRinit:
  1411                           	callstack 24
  1412   001534                     
  1413                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1414   001534  C009  FFD9         	movff	motorRinit@mR,fsr2l
  1415   001538  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  1416   00153C  0E32               	movlw	50
  1417   00153E  6EDF               	movwf	indf2,c
  1418   001540                     
  1419                           ;dc_motor.c: 91:     mR->direction = 1;
  1420   001540  EE20 F001          	lfsr	2,1
  1421   001544  5009               	movf	motorRinit@mR^0,w,c
  1422   001546  26D9               	addwf	fsr2l,f,c
  1423   001548  500A               	movf	(motorRinit@mR+1)^0,w,c
  1424   00154A  22DA               	addwfc	fsr2h,f,c
  1425   00154C  0E01               	movlw	1
  1426   00154E  6EDF               	movwf	indf2,c
  1427   001550                     
  1428                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1429   001550  EE20 F002          	lfsr	2,2
  1430   001554  5009               	movf	motorRinit@mR^0,w,c
  1431   001556  26D9               	addwf	fsr2l,f,c
  1432   001558  500A               	movf	(motorRinit@mR+1)^0,w,c
  1433   00155A  22DA               	addwfc	fsr2h,f,c
  1434   00155C  0E01               	movlw	1
  1435   00155E  6EDF               	movwf	indf2,c
  1436   001560                     
  1437                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1438   001560  EE20 F005          	lfsr	2,5
  1439   001564  5009               	movf	motorRinit@mR^0,w,c
  1440   001566  26D9               	addwf	fsr2l,f,c
  1441   001568  500A               	movf	(motorRinit@mR+1)^0,w,c
  1442   00156A  22DA               	addwfc	fsr2h,f,c
  1443   00156C  0E25               	movlw	37
  1444   00156E  6EDE               	movwf	postinc2,c
  1445   001570  0E0F               	movlw	15
  1446   001572  6EDD               	movwf	postdec2,c
  1447   001574                     
  1448                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1449   001574  EE20 F007          	lfsr	2,7
  1450   001578  5009               	movf	motorRinit@mR^0,w,c
  1451   00157A  26D9               	addwf	fsr2l,f,c
  1452   00157C  500A               	movf	(motorRinit@mR+1)^0,w,c
  1453   00157E  22DA               	addwfc	fsr2h,f,c
  1454   001580  0E21               	movlw	33
  1455   001582  6EDE               	movwf	postinc2,c
  1456   001584  0E0F               	movlw	15
  1457   001586  6EDD               	movwf	postdec2,c
  1458   001588                     
  1459                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1460   001588  EE20 F003          	lfsr	2,3
  1461   00158C  5009               	movf	motorRinit@mR^0,w,c
  1462   00158E  26D9               	addwf	fsr2l,f,c
  1463   001590  500A               	movf	(motorRinit@mR+1)^0,w,c
  1464   001592  22DA               	addwfc	fsr2h,f,c
  1465   001594  0EC8               	movlw	200
  1466   001596  6EDE               	movwf	postinc2,c
  1467   001598  0E00               	movlw	0
  1468   00159A  6EDD               	movwf	postdec2,c
  1469   00159C  0012               	return		;funcret
  1470   00159E                     __end_of_motorRinit:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _motorLinit *****************
  1474 ;; Defined at:
  1475 ;;		line 78 in file "dc_motor.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  1478 ;;		 -> main@mL(9), 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1493 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1494 ;;Total ram usage:        2 bytes
  1495 ;; Hardware stack levels used: 1
  1496 ;; Hardware stack levels required when called: 6
  1497 ;; This function calls:
  1498 ;;		Nothing
  1499 ;; This function is called by:
  1500 ;;		_main
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           	psect	text8
  1505   00159E                     __ptext8:
  1506                           	callstack 0
  1507   00159E                     _motorLinit:
  1508                           	callstack 24
  1509   00159E                     
  1510                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  1511   00159E  C009  FFD9         	movff	motorLinit@mL,fsr2l
  1512   0015A2  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  1513   0015A6  0E32               	movlw	50
  1514   0015A8  6EDF               	movwf	indf2,c
  1515   0015AA                     
  1516                           ;dc_motor.c: 81:     mL->direction = 1;
  1517   0015AA  EE20 F001          	lfsr	2,1
  1518   0015AE  5009               	movf	motorLinit@mL^0,w,c
  1519   0015B0  26D9               	addwf	fsr2l,f,c
  1520   0015B2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1521   0015B4  22DA               	addwfc	fsr2h,f,c
  1522   0015B6  0E01               	movlw	1
  1523   0015B8  6EDF               	movwf	indf2,c
  1524   0015BA                     
  1525                           ;dc_motor.c: 82:     mL->brakemode = 1;
  1526   0015BA  EE20 F002          	lfsr	2,2
  1527   0015BE  5009               	movf	motorLinit@mL^0,w,c
  1528   0015C0  26D9               	addwf	fsr2l,f,c
  1529   0015C2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1530   0015C4  22DA               	addwfc	fsr2h,f,c
  1531   0015C6  0E01               	movlw	1
  1532   0015C8  6EDF               	movwf	indf2,c
  1533   0015CA                     
  1534                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  1535   0015CA  EE20 F005          	lfsr	2,5
  1536   0015CE  5009               	movf	motorLinit@mL^0,w,c
  1537   0015D0  26D9               	addwf	fsr2l,f,c
  1538   0015D2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1539   0015D4  22DA               	addwfc	fsr2h,f,c
  1540   0015D6  0EAA               	movlw	170
  1541   0015D8  6EDE               	movwf	postinc2,c
  1542   0015DA  0E0F               	movlw	15
  1543   0015DC  6EDD               	movwf	postdec2,c
  1544   0015DE                     
  1545                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  1546   0015DE  EE20 F007          	lfsr	2,7
  1547   0015E2  5009               	movf	motorLinit@mL^0,w,c
  1548   0015E4  26D9               	addwf	fsr2l,f,c
  1549   0015E6  500A               	movf	(motorLinit@mL+1)^0,w,c
  1550   0015E8  22DA               	addwfc	fsr2h,f,c
  1551   0015EA  0EA6               	movlw	166
  1552   0015EC  6EDE               	movwf	postinc2,c
  1553   0015EE  0E0F               	movlw	15
  1554   0015F0  6EDD               	movwf	postdec2,c
  1555   0015F2                     
  1556                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  1557   0015F2  EE20 F003          	lfsr	2,3
  1558   0015F6  5009               	movf	motorLinit@mL^0,w,c
  1559   0015F8  26D9               	addwf	fsr2l,f,c
  1560   0015FA  500A               	movf	(motorLinit@mL+1)^0,w,c
  1561   0015FC  22DA               	addwfc	fsr2h,f,c
  1562   0015FE  0EC8               	movlw	200
  1563   001600  6EDE               	movwf	postinc2,c
  1564   001602  0E00               	movlw	0
  1565   001604  6EDD               	movwf	postdec2,c
  1566   001606  0012               	return		;funcret
  1567   001608                     __end_of_motorLinit:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _initDCmotorsPWM *****************
  1571 ;; Defined at:
  1572 ;;		line 5 in file "dc_motor.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1586 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1590 ;;Total ram usage:        2 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 6
  1593 ;; This function calls:
  1594 ;;		Nothing
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           	psect	text9
  1601   00135C                     __ptext9:
  1602                           	callstack 0
  1603   00135C                     _initDCmotorsPWM:
  1604                           	callstack 24
  1605   00135C                     
  1606                           ;dc_motor.c: 9:     RE2PPS=0x05;
  1607   00135C  0E05               	movlw	5
  1608   00135E  010E               	movlb	14	; () banked
  1609   001360  6F74               	movwf	116,b	;volatile
  1610                           
  1611                           ;dc_motor.c: 10:     RE4PPS=0x06;
  1612   001362  0E06               	movlw	6
  1613   001364  6F76               	movwf	118,b	;volatile
  1614                           
  1615                           ;dc_motor.c: 11:     RC7PPS=0x07;
  1616   001366  0E07               	movlw	7
  1617   001368  6F69               	movwf	105,b	;volatile
  1618                           
  1619                           ;dc_motor.c: 12:     RG6PPS=0x08;
  1620   00136A  0E08               	movlw	8
  1621   00136C  6F88               	movwf	136,b	;volatile
  1622                           
  1623                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  1624   00136E  50BD               	movf	189,w,c	;volatile
  1625   001370  0B8F               	andlw	-113
  1626   001372  0930               	iorlw	48
  1627   001374  6EBD               	movwf	189,c	;volatile
  1628                           
  1629                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  1630   001376  0EE0               	movlw	-32
  1631   001378  16BE               	andwf	190,f,c	;volatile
  1632                           
  1633                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  1634   00137A  50BF               	movf	191,w,c	;volatile
  1635   00137C  0BF0               	andlw	-16
  1636   00137E  0901               	iorlw	1
  1637   001380  6EBF               	movwf	191,c	;volatile
  1638                           
  1639                           ;dc_motor.c: 21:     T2PR=200;
  1640   001382  0EC8               	movlw	200
  1641   001384  6EBC               	movwf	188,c	;volatile
  1642   001386                     
  1643                           ; BSR set to: 14
  1644                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  1645   001386  8EBD               	bsf	189,7,c	;volatile
  1646                           
  1647                           ;dc_motor.c: 26:     CCPR1H=0;
  1648   001388  0E00               	movlw	0
  1649   00138A  6EAA               	movwf	170,c	;volatile
  1650                           
  1651                           ;dc_motor.c: 27:     CCPR2H=0;
  1652   00138C  0E00               	movlw	0
  1653   00138E  6EA6               	movwf	166,c	;volatile
  1654                           
  1655                           ;dc_motor.c: 28:     CCPR3H=0;
  1656   001390  0E00               	movlw	0
  1657   001392  010F               	movlb	15	; () banked
  1658   001394  6F25               	movwf	37,b	;volatile
  1659                           
  1660                           ;dc_motor.c: 29:     CCPR4H=0;
  1661   001396  0E00               	movlw	0
  1662   001398  6F21               	movwf	33,b	;volatile
  1663                           
  1664                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  1665   00139A  0EFC               	movlw	-4
  1666   00139C  16AD               	andwf	173,f,c	;volatile
  1667                           
  1668                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  1669   00139E  0EF3               	movlw	-13
  1670   0013A0  16AD               	andwf	173,f,c	;volatile
  1671                           
  1672                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  1673   0013A2  0ECF               	movlw	-49
  1674   0013A4  16AD               	andwf	173,f,c	;volatile
  1675                           
  1676                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  1677   0013A6  0E3F               	movlw	-193
  1678   0013A8  16AD               	andwf	173,f,c	;volatile
  1679   0013AA                     
  1680                           ; BSR set to: 15
  1681                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  1682   0013AA  88AB               	bsf	171,4,c	;volatile
  1683                           
  1684                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  1685   0013AC  50AB               	movf	171,w,c	;volatile
  1686   0013AE  0BF0               	andlw	-16
  1687   0013B0  090C               	iorlw	12
  1688   0013B2  6EAB               	movwf	171,c	;volatile
  1689   0013B4                     
  1690                           ; BSR set to: 15
  1691                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  1692   0013B4  8EAB               	bsf	171,7,c	;volatile
  1693   0013B6                     
  1694                           ; BSR set to: 15
  1695                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  1696   0013B6  88A7               	bsf	167,4,c	;volatile
  1697                           
  1698                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  1699   0013B8  50A7               	movf	167,w,c	;volatile
  1700   0013BA  0BF0               	andlw	-16
  1701   0013BC  090C               	iorlw	12
  1702   0013BE  6EA7               	movwf	167,c	;volatile
  1703   0013C0                     
  1704                           ; BSR set to: 15
  1705                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  1706   0013C0  8EA7               	bsf	167,7,c	;volatile
  1707   0013C2                     
  1708                           ; BSR set to: 15
  1709                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  1710   0013C2  8926               	bsf	38,4,b	;volatile
  1711                           
  1712                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  1713   0013C4  5126               	movf	38,w,b	;volatile
  1714   0013C6  0BF0               	andlw	-16
  1715   0013C8  090C               	iorlw	12
  1716   0013CA  6F26               	movwf	38,b	;volatile
  1717   0013CC                     
  1718                           ; BSR set to: 15
  1719                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  1720   0013CC  8F26               	bsf	38,7,b	;volatile
  1721   0013CE                     
  1722                           ; BSR set to: 15
  1723                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  1724   0013CE  8922               	bsf	34,4,b	;volatile
  1725                           
  1726                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  1727   0013D0  5122               	movf	34,w,b	;volatile
  1728   0013D2  0BF0               	andlw	-16
  1729   0013D4  090C               	iorlw	12
  1730   0013D6  6F22               	movwf	34,b	;volatile
  1731   0013D8                     
  1732                           ; BSR set to: 15
  1733                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  1734   0013D8  8F22               	bsf	34,7,b	;volatile
  1735   0013DA                     
  1736                           ; BSR set to: 15
  1737   0013DA  0012               	return		;funcret
  1738   0013DC                     __end_of_initDCmotorsPWM:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _fullSpeedAhead *****************
  1742 ;; Defined at:
  1743 ;;		line 167 in file "dc_motor.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1746 ;;		 -> main@mL(9), 
  1747 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1748 ;;		 -> main@mR(9), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;		None
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1763 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;Total ram usage:        5 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 8
  1767 ;; This function calls:
  1768 ;;		_setMotorPWM
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774                           	psect	text10
  1775   001272                     __ptext10:
  1776                           	callstack 0
  1777   001272                     _fullSpeedAhead:
  1778                           	callstack 22
  1779   001272                     
  1780                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  1781   001272  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1782   001276  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1783   00127A  0E05               	movlw	5
  1784   00127C  6EDF               	movwf	indf2,c
  1785                           
  1786                           ;dc_motor.c: 170:     mR->power = 5;
  1787   00127E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1788   001282  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1789   001286  0E05               	movlw	5
  1790   001288  6EDF               	movwf	indf2,c
  1791   00128A                     
  1792                           ;dc_motor.c: 171:     mR->direction = 1;
  1793   00128A  EE20 F001          	lfsr	2,1
  1794   00128E  501E               	movf	fullSpeedAhead@mR^0,w,c
  1795   001290  26D9               	addwf	fsr2l,f,c
  1796   001292  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1797   001294  22DA               	addwfc	fsr2h,f,c
  1798   001296  0E01               	movlw	1
  1799   001298  6EDF               	movwf	indf2,c
  1800   00129A                     
  1801                           ;dc_motor.c: 172:     mL->direction = 1;
  1802   00129A  EE20 F001          	lfsr	2,1
  1803   00129E  501C               	movf	fullSpeedAhead@mL^0,w,c
  1804   0012A0  26D9               	addwf	fsr2l,f,c
  1805   0012A2  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1806   0012A4  22DA               	addwfc	fsr2h,f,c
  1807   0012A6  0E01               	movlw	1
  1808   0012A8  6EDF               	movwf	indf2,c
  1809   0012AA                     
  1810                           ;dc_motor.c: 173:     mL->brakemode = 1;
  1811   0012AA  EE20 F002          	lfsr	2,2
  1812   0012AE  501C               	movf	fullSpeedAhead@mL^0,w,c
  1813   0012B0  26D9               	addwf	fsr2l,f,c
  1814   0012B2  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1815   0012B4  22DA               	addwfc	fsr2h,f,c
  1816   0012B6  0E01               	movlw	1
  1817   0012B8  6EDF               	movwf	indf2,c
  1818   0012BA                     
  1819                           ;dc_motor.c: 174:     mR->brakemode = 1;
  1820   0012BA  EE20 F002          	lfsr	2,2
  1821   0012BE  501E               	movf	fullSpeedAhead@mR^0,w,c
  1822   0012C0  26D9               	addwf	fsr2l,f,c
  1823   0012C2  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1824   0012C4  22DA               	addwfc	fsr2h,f,c
  1825   0012C6  0E01               	movlw	1
  1826   0012C8  6EDF               	movwf	indf2,c
  1827                           
  1828                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1829   0012CA  EF7D  F009         	goto	l1946
  1830   0012CE                     l1940:
  1831                           
  1832                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  1833   0012CE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1834   0012D2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1835   0012D6  2ADF               	incf	indf2,f,c
  1836                           
  1837                           ;dc_motor.c: 178:         mR->power++;
  1838   0012D8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1839   0012DC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1840   0012E0  2ADF               	incf	indf2,f,c
  1841   0012E2                     
  1842                           ;dc_motor.c: 180:         setMotorPWM(mL);
  1843   0012E2  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1844   0012E6  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1845   0012EA  EC0D  F008         	call	_setMotorPWM	;wreg free
  1846   0012EE                     
  1847                           ;dc_motor.c: 181:         setMotorPWM(mR);
  1848   0012EE  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1849   0012F2  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1850   0012F6  EC0D  F008         	call	_setMotorPWM	;wreg free
  1851   0012FA                     l1946:
  1852                           
  1853                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1854   0012FA  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1855   0012FE  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1856   001302  0E15               	movlw	21
  1857   001304  60DF               	cpfslt	indf2,c
  1858   001306  EF87  F009         	goto	u521
  1859   00130A  EF89  F009         	goto	u520
  1860   00130E                     u521:
  1861   00130E  EF95  F009         	goto	l1950
  1862   001312                     u520:
  1863   001312  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1864   001316  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1865   00131A  0E14               	movlw	20
  1866   00131C  64DF               	cpfsgt	indf2,c
  1867   00131E  EF93  F009         	goto	u531
  1868   001322  EF95  F009         	goto	u530
  1869   001326                     u531:
  1870   001326  EF67  F009         	goto	l1940
  1871   00132A                     u530:
  1872   00132A                     l1950:
  1873                           
  1874                           ;dc_motor.c: 183:     mL->power = 20;
  1875   00132A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1876   00132E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1877   001332  0E14               	movlw	20
  1878   001334  6EDF               	movwf	indf2,c
  1879                           
  1880                           ;dc_motor.c: 184:     mR->power = 20;
  1881   001336  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1882   00133A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1883   00133E  0E14               	movlw	20
  1884   001340  6EDF               	movwf	indf2,c
  1885   001342                     
  1886                           ;dc_motor.c: 185:     setMotorPWM(mL);
  1887   001342  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1888   001346  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1889   00134A  EC0D  F008         	call	_setMotorPWM	;wreg free
  1890   00134E                     
  1891                           ;dc_motor.c: 186:     setMotorPWM(mR);
  1892   00134E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1893   001352  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1894   001356  EC0D  F008         	call	_setMotorPWM	;wreg free
  1895   00135A  0012               	return		;funcret
  1896   00135C                     __end_of_fullSpeedAhead:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _setMotorPWM *****************
  1900 ;; Defined at:
  1901 ;;		line 56 in file "dc_motor.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  m               2   21[COMRAM] PTR struct DC_motor
  1904 ;;		 -> main@mR(9), main@mL(9), 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  negDuty         1   26[COMRAM] unsigned char 
  1907 ;;  posDuty         1   25[COMRAM] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  1    wreg      void 
  1910 ;; Registers used:
  1911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1918 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;Total ram usage:        6 bytes
  1922 ;; Hardware stack levels used: 1
  1923 ;; Hardware stack levels required when called: 7
  1924 ;; This function calls:
  1925 ;;		___lwdiv
  1926 ;;		___wmul
  1927 ;; This function is called by:
  1928 ;;		_norm_stop
  1929 ;;		_turnLeft
  1930 ;;		_turnRight
  1931 ;;		_fullSpeedAhead
  1932 ;;		_stop
  1933 ;;		_uturn
  1934 ;;		_reverse
  1935 ;; This function uses a non-reentrant model
  1936 ;;
  1937                           
  1938                           	psect	text11
  1939   00101A                     __ptext11:
  1940                           	callstack 0
  1941   00101A                     _setMotorPWM:
  1942                           	callstack 22
  1943   00101A                     
  1944                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  1945   00101A  EE20 F002          	lfsr	2,2
  1946   00101E  5016               	movf	setMotorPWM@m^0,w,c
  1947   001020  26D9               	addwf	fsr2l,f,c
  1948   001022  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1949   001024  22DA               	addwfc	fsr2h,f,c
  1950   001026  50DF               	movf	indf2,w,c
  1951   001028  B4D8               	btfsc	status,2,c
  1952   00102A  EF19  F008         	goto	u431
  1953   00102E  EF1B  F008         	goto	u430
  1954   001032                     u431:
  1955   001032  EF4F  F008         	goto	l1736
  1956   001036                     u430:
  1957   001036                     
  1958                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1959   001036  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1960   00103A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1961   00103E  50DF               	movf	indf2,w,c
  1962   001040  6E18               	movwf	??_setMotorPWM^0,c
  1963   001042  5018               	movf	??_setMotorPWM^0,w,c
  1964   001044  6E09               	movwf	___wmul@multiplier^0,c
  1965   001046  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1966   001048  EE20 F003          	lfsr	2,3
  1967   00104C  5016               	movf	setMotorPWM@m^0,w,c
  1968   00104E  26D9               	addwf	fsr2l,f,c
  1969   001050  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1970   001052  22DA               	addwfc	fsr2h,f,c
  1971   001054  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1972   001058  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1973   00105C  ECBC  F00C         	call	___wmul	;wreg free
  1974   001060  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1975   001064  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1976   001068  0E00               	movlw	0
  1977   00106A  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1978   00106C  0E64               	movlw	100
  1979   00106E  6E11               	movwf	___lwdiv@divisor^0,c
  1980   001070  ECEE  F009         	call	___lwdiv	;wreg free
  1981   001074  EE20 F003          	lfsr	2,3
  1982   001078  5016               	movf	setMotorPWM@m^0,w,c
  1983   00107A  26D9               	addwf	fsr2l,f,c
  1984   00107C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1985   00107E  22DA               	addwfc	fsr2h,f,c
  1986   001080  50DF               	movf	indf2,w,c
  1987   001082  6E19               	movwf	(??_setMotorPWM+1)^0,c
  1988   001084  500F               	movf	?___lwdiv^0,w,c
  1989   001086  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  1990   001088  6E1A               	movwf	setMotorPWM@posDuty^0,c
  1991   00108A                     
  1992                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  1993   00108A  EE20 F003          	lfsr	2,3
  1994   00108E  5016               	movf	setMotorPWM@m^0,w,c
  1995   001090  26D9               	addwf	fsr2l,f,c
  1996   001092  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1997   001094  22DA               	addwfc	fsr2h,f,c
  1998   001096  50DF               	movf	indf2,w,c
  1999   001098  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2000                           
  2001                           ;dc_motor.c: 63:     }
  2002   00109A  EF72  F008         	goto	l1740
  2003   00109E                     l1736:
  2004                           
  2005                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2006   00109E  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2007   0010A2  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2008   0010A6  50DF               	movf	indf2,w,c
  2009   0010A8  6E18               	movwf	??_setMotorPWM^0,c
  2010   0010AA  5018               	movf	??_setMotorPWM^0,w,c
  2011   0010AC  6E09               	movwf	___wmul@multiplier^0,c
  2012   0010AE  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2013   0010B0  EE20 F003          	lfsr	2,3
  2014   0010B4  5016               	movf	setMotorPWM@m^0,w,c
  2015   0010B6  26D9               	addwf	fsr2l,f,c
  2016   0010B8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2017   0010BA  22DA               	addwfc	fsr2h,f,c
  2018   0010BC  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2019   0010C0  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2020   0010C4  ECBC  F00C         	call	___wmul	;wreg free
  2021   0010C8  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2022   0010CC  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2023   0010D0  0E00               	movlw	0
  2024   0010D2  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2025   0010D4  0E64               	movlw	100
  2026   0010D6  6E11               	movwf	___lwdiv@divisor^0,c
  2027   0010D8  ECEE  F009         	call	___lwdiv	;wreg free
  2028   0010DC  500F               	movf	?___lwdiv^0,w,c
  2029   0010DE  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2030   0010E0                     
  2031                           ;dc_motor.c: 66:         negDuty=0;
  2032   0010E0  0E00               	movlw	0
  2033   0010E2  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2034   0010E4                     l1740:
  2035                           
  2036                           ;dc_motor.c: 69:     if (m->direction) {
  2037   0010E4  EE20 F001          	lfsr	2,1
  2038   0010E8  5016               	movf	setMotorPWM@m^0,w,c
  2039   0010EA  26D9               	addwf	fsr2l,f,c
  2040   0010EC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2041   0010EE  22DA               	addwfc	fsr2h,f,c
  2042   0010F0  50DF               	movf	indf2,w,c
  2043   0010F2  B4D8               	btfsc	status,2,c
  2044   0010F4  EF7E  F008         	goto	u441
  2045   0010F8  EF80  F008         	goto	u440
  2046   0010FC                     u441:
  2047   0010FC  EFA2  F008         	goto	l1744
  2048   001100                     u440:
  2049   001100                     
  2050                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  2051   001100  EE20 F005          	lfsr	2,5
  2052   001104  5016               	movf	setMotorPWM@m^0,w,c
  2053   001106  26D9               	addwf	fsr2l,f,c
  2054   001108  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2055   00110A  22DA               	addwfc	fsr2h,f,c
  2056   00110C  CFDE F018          	movff	postinc2,??_setMotorPWM
  2057   001110  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2058   001114  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2059   001118  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2060   00111C  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2061                           
  2062                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  2063   001120  EE20 F007          	lfsr	2,7
  2064   001124  5016               	movf	setMotorPWM@m^0,w,c
  2065   001126  26D9               	addwf	fsr2l,f,c
  2066   001128  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2067   00112A  22DA               	addwfc	fsr2h,f,c
  2068   00112C  CFDE F018          	movff	postinc2,??_setMotorPWM
  2069   001130  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2070   001134  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2071   001138  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2072   00113C  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2073                           
  2074                           ;dc_motor.c: 72:     } else {
  2075   001140  EFC2  F008         	goto	l441
  2076   001144                     l1744:
  2077                           
  2078                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  2079   001144  EE20 F005          	lfsr	2,5
  2080   001148  5016               	movf	setMotorPWM@m^0,w,c
  2081   00114A  26D9               	addwf	fsr2l,f,c
  2082   00114C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2083   00114E  22DA               	addwfc	fsr2h,f,c
  2084   001150  CFDE F018          	movff	postinc2,??_setMotorPWM
  2085   001154  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2086   001158  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2087   00115C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2088   001160  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2089                           
  2090                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  2091   001164  EE20 F007          	lfsr	2,7
  2092   001168  5016               	movf	setMotorPWM@m^0,w,c
  2093   00116A  26D9               	addwf	fsr2l,f,c
  2094   00116C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2095   00116E  22DA               	addwfc	fsr2h,f,c
  2096   001170  CFDE F018          	movff	postinc2,??_setMotorPWM
  2097   001174  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2098   001178  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2099   00117C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2100   001180  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2101   001184                     l441:
  2102   001184  0012               	return		;funcret
  2103   001186                     __end_of_setMotorPWM:
  2104                           	callstack 0
  2105                           
  2106 ;; *************** function ___wmul *****************
  2107 ;; Defined at:
  2108 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2109 ;; Parameters:    Size  Location     Type
  2110 ;;  multiplier      2    8[COMRAM] unsigned int 
  2111 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2112 ;; Auto vars:     Size  Location     Type
  2113 ;;  product         2   12[COMRAM] unsigned int 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  2    8[COMRAM] unsigned int 
  2116 ;; Registers used:
  2117 ;;		wreg, status,2, status,0, prodl, prodh
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2126 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2127 ;;Total ram usage:        6 bytes
  2128 ;; Hardware stack levels used: 1
  2129 ;; Hardware stack levels required when called: 6
  2130 ;; This function calls:
  2131 ;;		Nothing
  2132 ;; This function is called by:
  2133 ;;		_setMotorPWM
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           
  2137                           	psect	text12
  2138   001978                     __ptext12:
  2139                           	callstack 0
  2140   001978                     ___wmul:
  2141                           	callstack 22
  2142   001978  5009               	movf	___wmul@multiplier^0,w,c
  2143   00197A  020B               	mulwf	___wmul@multiplicand^0,c
  2144   00197C  CFF3 F00D          	movff	prodl,___wmul@product
  2145   001980  CFF4 F00E          	movff	prodh,___wmul@product+1
  2146   001984  5009               	movf	___wmul@multiplier^0,w,c
  2147   001986  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  2148   001988  50F3               	movf	243,w,c
  2149   00198A  260E               	addwf	(___wmul@product+1)^0,f,c
  2150   00198C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  2151   00198E  020B               	mulwf	___wmul@multiplicand^0,c
  2152   001990  50F3               	movf	243,w,c
  2153   001992  260E               	addwf	(___wmul@product+1)^0,f,c
  2154   001994  C00D  F009         	movff	___wmul@product,?___wmul
  2155   001998  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  2156   00199C  0012               	return		;funcret
  2157   00199E                     __end_of___wmul:
  2158                           	callstack 0
  2159                           
  2160 ;; *************** function ___lwdiv *****************
  2161 ;; Defined at:
  2162 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2163 ;; Parameters:    Size  Location     Type
  2164 ;;  dividend        2   14[COMRAM] unsigned int 
  2165 ;;  divisor         2   16[COMRAM] unsigned int 
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;  quotient        2   18[COMRAM] unsigned int 
  2168 ;;  counter         1   20[COMRAM] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2   14[COMRAM] unsigned int 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2179 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2181 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2182 ;;Total ram usage:        7 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 6
  2185 ;; This function calls:
  2186 ;;		Nothing
  2187 ;; This function is called by:
  2188 ;;		_setMotorPWM
  2189 ;; This function uses a non-reentrant model
  2190 ;;
  2191                           
  2192                           	psect	text13
  2193   0013DC                     __ptext13:
  2194                           	callstack 0
  2195   0013DC                     ___lwdiv:
  2196                           	callstack 22
  2197   0013DC  0E00               	movlw	0
  2198   0013DE  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  2199   0013E0  0E00               	movlw	0
  2200   0013E2  6E13               	movwf	___lwdiv@quotient^0,c
  2201   0013E4  5011               	movf	___lwdiv@divisor^0,w,c
  2202   0013E6  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2203   0013E8  B4D8               	btfsc	status,2,c
  2204   0013EA  EFF9  F009         	goto	u401
  2205   0013EE  EFFB  F009         	goto	u400
  2206   0013F2                     u401:
  2207   0013F2  EF23  F00A         	goto	l977
  2208   0013F6                     u400:
  2209   0013F6  0E01               	movlw	1
  2210   0013F8  6E15               	movwf	___lwdiv@counter^0,c
  2211   0013FA  EF03  F00A         	goto	l1704
  2212   0013FE                     l1702:
  2213   0013FE  90D8               	bcf	status,0,c
  2214   001400  3611               	rlcf	___lwdiv@divisor^0,f,c
  2215   001402  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2216   001404  2A15               	incf	___lwdiv@counter^0,f,c
  2217   001406                     l1704:
  2218   001406  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  2219   001408  EF08  F00A         	goto	u411
  2220   00140C  EF0A  F00A         	goto	u410
  2221   001410                     u411:
  2222   001410  EFFF  F009         	goto	l1702
  2223   001414                     u410:
  2224   001414                     l1706:
  2225   001414  90D8               	bcf	status,0,c
  2226   001416  3613               	rlcf	___lwdiv@quotient^0,f,c
  2227   001418  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2228   00141A  5011               	movf	___lwdiv@divisor^0,w,c
  2229   00141C  5C0F               	subwf	___lwdiv@dividend^0,w,c
  2230   00141E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2231   001420  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2232   001422  A0D8               	btfss	status,0,c
  2233   001424  EF16  F00A         	goto	u421
  2234   001428  EF18  F00A         	goto	u420
  2235   00142C                     u421:
  2236   00142C  EF1D  F00A         	goto	l1714
  2237   001430                     u420:
  2238   001430  5011               	movf	___lwdiv@divisor^0,w,c
  2239   001432  5E0F               	subwf	___lwdiv@dividend^0,f,c
  2240   001434  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2241   001436  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2242   001438  8013               	bsf	___lwdiv@quotient^0,0,c
  2243   00143A                     l1714:
  2244   00143A  90D8               	bcf	status,0,c
  2245   00143C  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2246   00143E  3211               	rrcf	___lwdiv@divisor^0,f,c
  2247   001440  2E15               	decfsz	___lwdiv@counter^0,f,c
  2248   001442  EF0A  F00A         	goto	l1706
  2249   001446                     l977:
  2250   001446  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2251   00144A  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2252   00144E  0012               	return		;funcret
  2253   001450                     __end_of___lwdiv:
  2254                           	callstack 0
  2255                           
  2256 ;; *************** function _color_read_RGBC *****************
  2257 ;; Defined at:
  2258 ;;		line 92 in file "color.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;  temp            2   19[COMRAM] PTR struct RGBC_val
  2261 ;;		 -> main@RGBC(8), 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2277 ;;Total ram usage:        2 bytes
  2278 ;; Hardware stack levels used: 1
  2279 ;; Hardware stack levels required when called: 9
  2280 ;; This function calls:
  2281 ;;		_color_read_Blue
  2282 ;;		_color_read_Clear
  2283 ;;		_color_read_Green
  2284 ;;		_color_read_Red
  2285 ;; This function is called by:
  2286 ;;		_main
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text14
  2291   001608                     __ptext14:
  2292                           	callstack 0
  2293   001608                     _color_read_RGBC:
  2294                           	callstack 21
  2295   001608                     
  2296                           ;color.c: 93:     temp->R = color_read_Red();
  2297   001608  EC33  F00B         	call	_color_read_Red	;wreg free
  2298   00160C  C014  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2299   001610  C015  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2300   001614  C00D  FFDE         	movff	?_color_read_Red,postinc2
  2301   001618  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  2302                           
  2303                           ;color.c: 94:     temp->B = color_read_Blue();
  2304   00161C  ECAB  F00B         	call	_color_read_Blue	;wreg free
  2305   001620  EE20 F004          	lfsr	2,4
  2306   001624  5014               	movf	color_read_RGBC@temp^0,w,c
  2307   001626  26D9               	addwf	fsr2l,f,c
  2308   001628  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2309   00162A  22DA               	addwfc	fsr2h,f,c
  2310   00162C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  2311   001630  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  2312                           
  2313                           ;color.c: 95:     temp->G = color_read_Green();
  2314   001634  EC5B  F00B         	call	_color_read_Green	;wreg free
  2315   001638  EE20 F002          	lfsr	2,2
  2316   00163C  5014               	movf	color_read_RGBC@temp^0,w,c
  2317   00163E  26D9               	addwf	fsr2l,f,c
  2318   001640  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2319   001642  22DA               	addwfc	fsr2h,f,c
  2320   001644  C00D  FFDE         	movff	?_color_read_Green,postinc2
  2321   001648  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  2322                           
  2323                           ;color.c: 96:     temp->C = color_read_Clear();
  2324   00164C  EC83  F00B         	call	_color_read_Clear	;wreg free
  2325   001650  EE20 F006          	lfsr	2,6
  2326   001654  5014               	movf	color_read_RGBC@temp^0,w,c
  2327   001656  26D9               	addwf	fsr2l,f,c
  2328   001658  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2329   00165A  22DA               	addwfc	fsr2h,f,c
  2330   00165C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  2331   001660  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  2332   001664  0012               	return		;funcret
  2333   001666                     __end_of_color_read_RGBC:
  2334                           	callstack 0
  2335                           
  2336 ;; *************** function _color_read_Red *****************
  2337 ;; Defined at:
  2338 ;;		line 33 in file "color.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;		None
  2341 ;; Auto vars:     Size  Location     Type
  2342 ;;  tmp             2   17[COMRAM] unsigned int 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2   12[COMRAM] unsigned int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2354 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2355 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2356 ;;Total ram usage:        7 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 8
  2359 ;; This function calls:
  2360 ;;		_I2C_2_Master_Read
  2361 ;;		_I2C_2_Master_RepStart
  2362 ;;		_I2C_2_Master_Start
  2363 ;;		_I2C_2_Master_Stop
  2364 ;;		_I2C_2_Master_Write
  2365 ;; This function is called by:
  2366 ;;		_color_read_RGBC
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text15
  2371   001666                     __ptext15:
  2372                           	callstack 0
  2373   001666                     _color_read_Red:
  2374                           	callstack 21
  2375   001666                     
  2376                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  2377   001666  EC41  F00D         	call	_I2C_2_Master_Start	;wreg free
  2378                           
  2379                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  2380   00166A  0E52               	movlw	82
  2381   00166C  EC25  F00D         	call	_I2C_2_Master_Write
  2382                           
  2383                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  2384   001670  0EB6               	movlw	182
  2385   001672  EC25  F00D         	call	_I2C_2_Master_Write
  2386                           
  2387                           ;color.c: 39:  I2C_2_Master_RepStart();
  2388   001676  EC37  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2389                           
  2390                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  2391   00167A  0E53               	movlw	83
  2392   00167C  EC25  F00D         	call	_I2C_2_Master_Write
  2393                           
  2394                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  2395   001680  0E01               	movlw	1
  2396   001682  ECD3  F00B         	call	_I2C_2_Master_Read
  2397   001686  6E0F               	movwf	??_color_read_Red^0,c
  2398   001688  500F               	movf	??_color_read_Red^0,w,c
  2399   00168A  6E12               	movwf	color_read_Red@tmp^0,c
  2400   00168C  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2401                           
  2402                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2403   00168E  0E00               	movlw	0
  2404   001690  ECD3  F00B         	call	_I2C_2_Master_Read
  2405   001694  6E0F               	movwf	??_color_read_Red^0,c
  2406   001696  500F               	movf	??_color_read_Red^0,w,c
  2407   001698  6E11               	movwf	(??_color_read_Red+2)^0,c
  2408   00169A  6A10               	clrf	(??_color_read_Red+1)^0,c
  2409   00169C  5012               	movf	color_read_Red@tmp^0,w,c
  2410   00169E  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2411   0016A0  6E12               	movwf	color_read_Red@tmp^0,c
  2412   0016A2  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2413   0016A4  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2414   0016A6  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2415                           
  2416                           ;color.c: 43:  I2C_2_Master_Stop();
  2417   0016A8  EC3C  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2418   0016AC                     
  2419                           ;color.c: 44:  return tmp;
  2420   0016AC  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2421   0016B0  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2422   0016B4  0012               	return		;funcret
  2423   0016B6                     __end_of_color_read_Red:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function _color_read_Green *****************
  2427 ;; Defined at:
  2428 ;;		line 47 in file "color.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;		None
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  tmp             2   17[COMRAM] unsigned int 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  2   12[COMRAM] unsigned int 
  2435 ;; Registers used:
  2436 ;;		wreg, status,2, status,0, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2443 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2444 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2445 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2446 ;;Total ram usage:        7 bytes
  2447 ;; Hardware stack levels used: 1
  2448 ;; Hardware stack levels required when called: 8
  2449 ;; This function calls:
  2450 ;;		_I2C_2_Master_Read
  2451 ;;		_I2C_2_Master_RepStart
  2452 ;;		_I2C_2_Master_Start
  2453 ;;		_I2C_2_Master_Stop
  2454 ;;		_I2C_2_Master_Write
  2455 ;; This function is called by:
  2456 ;;		_color_read_RGBC
  2457 ;; This function uses a non-reentrant model
  2458 ;;
  2459                           
  2460                           	psect	text16
  2461   0016B6                     __ptext16:
  2462                           	callstack 0
  2463   0016B6                     _color_read_Green:
  2464                           	callstack 21
  2465   0016B6                     
  2466                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  2467   0016B6  EC41  F00D         	call	_I2C_2_Master_Start	;wreg free
  2468                           
  2469                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  2470   0016BA  0E52               	movlw	82
  2471   0016BC  EC25  F00D         	call	_I2C_2_Master_Write
  2472                           
  2473                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
  2474   0016C0  0EB8               	movlw	184
  2475   0016C2  EC25  F00D         	call	_I2C_2_Master_Write
  2476                           
  2477                           ;color.c: 53:  I2C_2_Master_RepStart();
  2478   0016C6  EC37  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2479                           
  2480                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  2481   0016CA  0E53               	movlw	83
  2482   0016CC  EC25  F00D         	call	_I2C_2_Master_Write
  2483                           
  2484                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  2485   0016D0  0E01               	movlw	1
  2486   0016D2  ECD3  F00B         	call	_I2C_2_Master_Read
  2487   0016D6  6E0F               	movwf	??_color_read_Green^0,c
  2488   0016D8  500F               	movf	??_color_read_Green^0,w,c
  2489   0016DA  6E12               	movwf	color_read_Green@tmp^0,c
  2490   0016DC  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2491                           
  2492                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2493   0016DE  0E00               	movlw	0
  2494   0016E0  ECD3  F00B         	call	_I2C_2_Master_Read
  2495   0016E4  6E0F               	movwf	??_color_read_Green^0,c
  2496   0016E6  500F               	movf	??_color_read_Green^0,w,c
  2497   0016E8  6E11               	movwf	(??_color_read_Green+2)^0,c
  2498   0016EA  6A10               	clrf	(??_color_read_Green+1)^0,c
  2499   0016EC  5012               	movf	color_read_Green@tmp^0,w,c
  2500   0016EE  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2501   0016F0  6E12               	movwf	color_read_Green@tmp^0,c
  2502   0016F2  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2503   0016F4  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2504   0016F6  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2505                           
  2506                           ;color.c: 57:  I2C_2_Master_Stop();
  2507   0016F8  EC3C  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2508   0016FC                     
  2509                           ;color.c: 58:  return tmp;
  2510   0016FC  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2511   001700  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2512   001704  0012               	return		;funcret
  2513   001706                     __end_of_color_read_Green:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function _color_read_Clear *****************
  2517 ;; Defined at:
  2518 ;;		line 75 in file "color.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;		None
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  tmp             2   17[COMRAM] unsigned int 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2   12[COMRAM] unsigned int 
  2525 ;; Registers used:
  2526 ;;		wreg, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;Total ram usage:        7 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 8
  2539 ;; This function calls:
  2540 ;;		_I2C_2_Master_Read
  2541 ;;		_I2C_2_Master_RepStart
  2542 ;;		_I2C_2_Master_Start
  2543 ;;		_I2C_2_Master_Stop
  2544 ;;		_I2C_2_Master_Write
  2545 ;; This function is called by:
  2546 ;;		_color_read_RGBC
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text17
  2551   001706                     __ptext17:
  2552                           	callstack 0
  2553   001706                     _color_read_Clear:
  2554                           	callstack 21
  2555   001706                     
  2556                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  2557   001706  EC41  F00D         	call	_I2C_2_Master_Start	;wreg free
  2558                           
  2559                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  2560   00170A  0E52               	movlw	82
  2561   00170C  EC25  F00D         	call	_I2C_2_Master_Write
  2562                           
  2563                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  2564   001710  0EB4               	movlw	180
  2565   001712  EC25  F00D         	call	_I2C_2_Master_Write
  2566                           
  2567                           ;color.c: 81:  I2C_2_Master_RepStart();
  2568   001716  EC37  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2569                           
  2570                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  2571   00171A  0E53               	movlw	83
  2572   00171C  EC25  F00D         	call	_I2C_2_Master_Write
  2573                           
  2574                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  2575   001720  0E01               	movlw	1
  2576   001722  ECD3  F00B         	call	_I2C_2_Master_Read
  2577   001726  6E0F               	movwf	??_color_read_Clear^0,c
  2578   001728  500F               	movf	??_color_read_Clear^0,w,c
  2579   00172A  6E12               	movwf	color_read_Clear@tmp^0,c
  2580   00172C  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2581                           
  2582                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2583   00172E  0E00               	movlw	0
  2584   001730  ECD3  F00B         	call	_I2C_2_Master_Read
  2585   001734  6E0F               	movwf	??_color_read_Clear^0,c
  2586   001736  500F               	movf	??_color_read_Clear^0,w,c
  2587   001738  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2588   00173A  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2589   00173C  5012               	movf	color_read_Clear@tmp^0,w,c
  2590   00173E  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2591   001740  6E12               	movwf	color_read_Clear@tmp^0,c
  2592   001742  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2593   001744  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2594   001746  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2595                           
  2596                           ;color.c: 85:  I2C_2_Master_Stop();
  2597   001748  EC3C  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2598   00174C                     
  2599                           ;color.c: 86:  return tmp;
  2600   00174C  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2601   001750  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2602   001754  0012               	return		;funcret
  2603   001756                     __end_of_color_read_Clear:
  2604                           	callstack 0
  2605                           
  2606 ;; *************** function _color_read_Blue *****************
  2607 ;; Defined at:
  2608 ;;		line 61 in file "color.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;		None
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  tmp             2   17[COMRAM] unsigned int 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2   12[COMRAM] unsigned int 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2624 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2625 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2626 ;;Total ram usage:        7 bytes
  2627 ;; Hardware stack levels used: 1
  2628 ;; Hardware stack levels required when called: 8
  2629 ;; This function calls:
  2630 ;;		_I2C_2_Master_Read
  2631 ;;		_I2C_2_Master_RepStart
  2632 ;;		_I2C_2_Master_Start
  2633 ;;		_I2C_2_Master_Stop
  2634 ;;		_I2C_2_Master_Write
  2635 ;; This function is called by:
  2636 ;;		_color_read_RGBC
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text18
  2641   001756                     __ptext18:
  2642                           	callstack 0
  2643   001756                     _color_read_Blue:
  2644                           	callstack 21
  2645   001756                     
  2646                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  2647   001756  EC41  F00D         	call	_I2C_2_Master_Start	;wreg free
  2648                           
  2649                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  2650   00175A  0E52               	movlw	82
  2651   00175C  EC25  F00D         	call	_I2C_2_Master_Write
  2652                           
  2653                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  2654   001760  0EBA               	movlw	186
  2655   001762  EC25  F00D         	call	_I2C_2_Master_Write
  2656                           
  2657                           ;color.c: 67:  I2C_2_Master_RepStart();
  2658   001766  EC37  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  2659                           
  2660                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  2661   00176A  0E53               	movlw	83
  2662   00176C  EC25  F00D         	call	_I2C_2_Master_Write
  2663                           
  2664                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  2665   001770  0E01               	movlw	1
  2666   001772  ECD3  F00B         	call	_I2C_2_Master_Read
  2667   001776  6E0F               	movwf	??_color_read_Blue^0,c
  2668   001778  500F               	movf	??_color_read_Blue^0,w,c
  2669   00177A  6E12               	movwf	color_read_Blue@tmp^0,c
  2670   00177C  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2671                           
  2672                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2673   00177E  0E00               	movlw	0
  2674   001780  ECD3  F00B         	call	_I2C_2_Master_Read
  2675   001784  6E0F               	movwf	??_color_read_Blue^0,c
  2676   001786  500F               	movf	??_color_read_Blue^0,w,c
  2677   001788  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2678   00178A  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2679   00178C  5012               	movf	color_read_Blue@tmp^0,w,c
  2680   00178E  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2681   001790  6E12               	movwf	color_read_Blue@tmp^0,c
  2682   001792  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2683   001794  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2684   001796  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2685                           
  2686                           ;color.c: 71:  I2C_2_Master_Stop();
  2687   001798  EC3C  F00D         	call	_I2C_2_Master_Stop	;wreg free
  2688   00179C                     
  2689                           ;color.c: 72:  return tmp;
  2690   00179C  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2691   0017A0  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2692   0017A4  0012               	return		;funcret
  2693   0017A6                     __end_of_color_read_Blue:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _I2C_2_Master_RepStart *****************
  2697 ;; Defined at:
  2698 ;;		line 33 in file "i2c.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      void 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 7
  2719 ;; This function calls:
  2720 ;;		_I2C_2_Master_Idle
  2721 ;; This function is called by:
  2722 ;;		_color_read_Red
  2723 ;;		_color_read_Green
  2724 ;;		_color_read_Blue
  2725 ;;		_color_read_Clear
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text19
  2730   001A6E                     __ptext19:
  2731                           	callstack 0
  2732   001A6E                     _I2C_2_Master_RepStart:
  2733                           	callstack 21
  2734   001A6E                     
  2735                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2736   001A6E  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2737   001A72                     
  2738                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2739   001A72  010E               	movlb	14	; () banked
  2740   001A74  83DA               	bsf	218,1,b	;volatile
  2741   001A76                     
  2742                           ; BSR set to: 14
  2743   001A76  0012               	return		;funcret
  2744   001A78                     __end_of_I2C_2_Master_RepStart:
  2745                           	callstack 0
  2746                           
  2747 ;; *************** function _I2C_2_Master_Read *****************
  2748 ;; Defined at:
  2749 ;;		line 51 in file "i2c.c"
  2750 ;; Parameters:    Size  Location     Type
  2751 ;;  ack             1    wreg     unsigned char 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;  ack             1   10[COMRAM] unsigned char 
  2754 ;;  tmp             1   11[COMRAM] unsigned char 
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg, status,2, status,0, cstack
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2768 ;;Total ram usage:        3 bytes
  2769 ;; Hardware stack levels used: 1
  2770 ;; Hardware stack levels required when called: 7
  2771 ;; This function calls:
  2772 ;;		_I2C_2_Master_Idle
  2773 ;; This function is called by:
  2774 ;;		_color_read_Red
  2775 ;;		_color_read_Green
  2776 ;;		_color_read_Blue
  2777 ;;		_color_read_Clear
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text20
  2782   0017A6                     __ptext20:
  2783                           	callstack 0
  2784   0017A6                     _I2C_2_Master_Read:
  2785                           	callstack 21
  2786                           
  2787                           ; BSR set to: 14
  2788                           ;incstack = 0
  2789                           ;I2C_2_Master_Read@ack stored from wreg
  2790   0017A6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2791   0017A8                     
  2792                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2793   0017A8  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2794   0017AC                     
  2795                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2796   0017AC  010E               	movlb	14	; () banked
  2797   0017AE  87DA               	bsf	218,3,b	;volatile
  2798                           
  2799                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2800   0017B0  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2801   0017B4                     
  2802                           ;i2c.c: 57:   tmp = SSP2BUF;
  2803   0017B4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2804                           
  2805                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2806   0017B8  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  2807   0017BC                     
  2808                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2809   0017BC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2810   0017BE  B4D8               	btfsc	status,2,c
  2811   0017C0  EFE4  F00B         	goto	u81
  2812   0017C4  EFE8  F00B         	goto	u80
  2813   0017C8                     u81:
  2814   0017C8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2815   0017CA  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2816   0017CC  EFE9  F00B         	goto	u98
  2817   0017D0                     u80:
  2818   0017D0  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2819   0017D2                     u98:
  2820   0017D2  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2821   0017D4  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2822   0017D6  010E               	movlb	14	; () banked
  2823   0017D8  51DA               	movf	218,w,b	;volatile
  2824   0017DA  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2825   0017DC  0BDF               	andlw	-33
  2826   0017DE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2827   0017E0  6FDA               	movwf	218,b	;volatile
  2828   0017E2                     
  2829                           ; BSR set to: 14
  2830                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2831   0017E2  89DA               	bsf	218,4,b	;volatile
  2832   0017E4                     
  2833                           ; BSR set to: 14
  2834                           ;i2c.c: 61:   return tmp;
  2835   0017E4  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2836   0017E6                     
  2837                           ; BSR set to: 14
  2838   0017E6  0012               	return		;funcret
  2839   0017E8                     __end_of_I2C_2_Master_Read:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _color_click_init *****************
  2843 ;; Defined at:
  2844 ;;		line 9 in file "color.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;		None
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;		None
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0, cstack
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2860 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2861 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2862 ;;Total ram usage:        1 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; Hardware stack levels required when called: 9
  2865 ;; This function calls:
  2866 ;;		_I2C_2_Master_Init
  2867 ;;		_color_writetoaddr
  2868 ;; This function is called by:
  2869 ;;		_main
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text21
  2874   0017E8                     __ptext21:
  2875                           	callstack 0
  2876   0017E8                     _color_click_init:
  2877                           	callstack 21
  2878   0017E8                     
  2879                           ;color.c: 12:     I2C_2_Master_Init();
  2880   0017E8  EC55  F00C         	call	_I2C_2_Master_Init	;wreg free
  2881   0017EC                     
  2882                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  2883   0017EC  0E01               	movlw	1
  2884   0017EE  6E0B               	movwf	color_writetoaddr@value^0,c
  2885   0017F0  0E00               	movlw	0
  2886   0017F2  ECCF  F00C         	call	_color_writetoaddr
  2887   0017F6                     
  2888                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2889   0017F6  0E3F               	movlw	63
  2890   0017F8  6E0D               	movwf	??_color_click_init^0,c
  2891   0017FA  0E55               	movlw	85
  2892   0017FC                     u727:
  2893   0017FC  2EE8               	decfsz	wreg,f,c
  2894   0017FE  D7FE               	bra	u727
  2895   001800  2E0D               	decfsz	??_color_click_init^0,f,c
  2896   001802  D7FC               	bra	u727
  2897   001804  F000               	nop	
  2898   001806                     
  2899                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  2900   001806  0E03               	movlw	3
  2901   001808  6E0B               	movwf	color_writetoaddr@value^0,c
  2902   00180A  0E00               	movlw	0
  2903   00180C  ECCF  F00C         	call	_color_writetoaddr
  2904   001810                     
  2905                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  2906   001810  0ED5               	movlw	213
  2907   001812  6E0B               	movwf	color_writetoaddr@value^0,c
  2908   001814  0E01               	movlw	1
  2909   001816  ECCF  F00C         	call	_color_writetoaddr
  2910   00181A  0012               	return		;funcret
  2911   00181C                     __end_of_color_click_init:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _I2C_2_Master_Init *****************
  2915 ;; Defined at:
  2916 ;;		line 4 in file "i2c.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;		None
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;		None
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, status,2
  2925 ;; Tracked objects:
  2926 ;;		On entry : 0/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2934 ;;Total ram usage:        0 bytes
  2935 ;; Hardware stack levels used: 1
  2936 ;; Hardware stack levels required when called: 6
  2937 ;; This function calls:
  2938 ;;		Nothing
  2939 ;; This function is called by:
  2940 ;;		_color_click_init
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text22
  2945   0018AA                     __ptext22:
  2946                           	callstack 0
  2947   0018AA                     _I2C_2_Master_Init:
  2948                           	callstack 23
  2949   0018AA                     
  2950                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2951   0018AA  010E               	movlb	14	; () banked
  2952   0018AC  51D9               	movf	217,w,b	;volatile
  2953   0018AE  0BF0               	andlw	-16
  2954   0018B0  0908               	iorlw	8
  2955   0018B2  6FD9               	movwf	217,b	;volatile
  2956   0018B4                     
  2957                           ; BSR set to: 14
  2958                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2959   0018B4  8BD9               	bsf	217,5,b	;volatile
  2960                           
  2961                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2962   0018B6  0E9F               	movlw	159
  2963   0018B8  6FD6               	movwf	214,b	;volatile
  2964   0018BA                     
  2965                           ; BSR set to: 14
  2966                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2967   0018BA  8A84               	bsf	132,5,c	;volatile
  2968   0018BC                     
  2969                           ; BSR set to: 14
  2970                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2971   0018BC  8C84               	bsf	132,6,c	;volatile
  2972   0018BE                     
  2973                           ; BSR set to: 14
  2974                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2975   0018BE  9BA7               	bcf	167,5,b	;volatile
  2976   0018C0                     
  2977                           ; BSR set to: 14
  2978                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2979   0018C0  9DA7               	bcf	167,6,b	;volatile
  2980                           
  2981                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2982   0018C2  0E1D               	movlw	29
  2983   0018C4  6F1D               	movwf	29,b	;volatile
  2984                           
  2985                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2986   0018C6  0E1E               	movlw	30
  2987   0018C8  6F1C               	movwf	28,b	;volatile
  2988                           
  2989                           ;i2c.c: 18:   RD5PPS=0x1C;
  2990   0018CA  0E1C               	movlw	28
  2991   0018CC  6F6F               	movwf	111,b	;volatile
  2992                           
  2993                           ;i2c.c: 19:   RD6PPS=0x1B;
  2994   0018CE  0E1B               	movlw	27
  2995   0018D0  6F70               	movwf	112,b	;volatile
  2996   0018D2                     
  2997                           ; BSR set to: 14
  2998   0018D2  0012               	return		;funcret
  2999   0018D4                     __end_of_I2C_2_Master_Init:
  3000                           	callstack 0
  3001                           
  3002 ;; *************** function _Interrupts_init *****************
  3003 ;; Defined at:
  3004 ;;		line 10 in file "interrupts.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;		None
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      void 
  3011 ;; Registers used:
  3012 ;;		None
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3022 ;;Total ram usage:        0 bytes
  3023 ;; Hardware stack levels used: 1
  3024 ;; Hardware stack levels required when called: 6
  3025 ;; This function calls:
  3026 ;;		Nothing
  3027 ;; This function is called by:
  3028 ;;		_main
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text23
  3033   001A28                     __ptext23:
  3034                           	callstack 0
  3035   001A28                     _Interrupts_init:
  3036                           	callstack 24
  3037   001A28                     
  3038                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  3039   001A28  8082               	bsf	130,0,c	;volatile
  3040                           
  3041                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  3042   001A2A  010E               	movlb	14	; () banked
  3043   001A2C  919A               	bcf	154,0,b	;volatile
  3044                           
  3045                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  3046   001A2E  9133               	bcf	51,0,b	;volatile
  3047                           
  3048                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  3049   001A30  8129               	bsf	41,0,b	;volatile
  3050                           
  3051                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  3052   001A32  811F               	bsf	31,0,b	;volatile
  3053                           
  3054                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  3055   001A34  90F2               	bcf	242,0,c	;volatile
  3056                           
  3057                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  3058   001A36  8AF2               	bsf	242,5,c	;volatile
  3059                           
  3060                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  3061   001A38  8CF2               	bsf	242,6,c	;volatile
  3062                           
  3063                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  3064   001A3A  8EF2               	bsf	242,7,c	;volatile
  3065   001A3C                     
  3066                           ; BSR set to: 14
  3067   001A3C  0012               	return		;funcret
  3068   001A3E                     __end_of_Interrupts_init:
  3069                           	callstack 0
  3070                           
  3071 ;; *************** function _Color_Interrupts_threshold *****************
  3072 ;; Defined at:
  3073 ;;		line 38 in file "interrupts.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  upperThresho    2   12[COMRAM] unsigned int 
  3076 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;		None
  3079 ;; Return value:  Size  Location     Type
  3080 ;;                  1    wreg      void 
  3081 ;; Registers used:
  3082 ;;		wreg, status,2, status,0, cstack
  3083 ;; Tracked objects:
  3084 ;;		On entry : 0/0
  3085 ;;		On exit  : 0/0
  3086 ;;		Unchanged: 0/0
  3087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3091 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;Total ram usage:        4 bytes
  3093 ;; Hardware stack levels used: 1
  3094 ;; Hardware stack levels required when called: 9
  3095 ;; This function calls:
  3096 ;;		_color_writetoaddr
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           	psect	text24
  3103   0018D4                     __ptext24:
  3104                           	callstack 0
  3105   0018D4                     _Color_Interrupts_threshold:
  3106                           	callstack 21
  3107   0018D4                     
  3108                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  3109   0018D4  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  3110   0018D8  0E04               	movlw	4
  3111   0018DA  ECCF  F00C         	call	_color_writetoaddr
  3112                           
  3113                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  3114   0018DE  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  3115   0018E0  6E0B               	movwf	color_writetoaddr@value^0,c
  3116   0018E2  0E05               	movlw	5
  3117   0018E4  ECCF  F00C         	call	_color_writetoaddr
  3118                           
  3119                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  3120   0018E8  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  3121   0018EC  0E06               	movlw	6
  3122   0018EE  ECCF  F00C         	call	_color_writetoaddr
  3123                           
  3124                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  3125   0018F2  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  3126   0018F4  6E0B               	movwf	color_writetoaddr@value^0,c
  3127   0018F6  0E07               	movlw	7
  3128   0018F8  ECCF  F00C         	call	_color_writetoaddr
  3129   0018FC  0012               	return		;funcret
  3130   0018FE                     __end_of_Color_Interrupts_threshold:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _Color_Interrupts_init *****************
  3134 ;; Defined at:
  3135 ;;		line 29 in file "interrupts.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3153 ;;Total ram usage:        1 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 9
  3156 ;; This function calls:
  3157 ;;		_color_writetoaddr
  3158 ;; This function is called by:
  3159 ;;		_main
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text25
  3164   0019DE                     __ptext25:
  3165                           	callstack 0
  3166   0019DE                     _Color_Interrupts_init:
  3167                           	callstack 21
  3168   0019DE                     
  3169                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  3170   0019DE  0E13               	movlw	19
  3171   0019E0  6E0B               	movwf	color_writetoaddr@value^0,c
  3172   0019E2  0E00               	movlw	0
  3173   0019E4  ECCF  F00C         	call	_color_writetoaddr
  3174   0019E8                     
  3175                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  3176   0019E8  0ED0               	movlw	208
  3177   0019EA  6E0D               	movwf	??_Color_Interrupts_init^0,c
  3178   0019EC  0ECA               	movlw	202
  3179   0019EE                     u737:
  3180   0019EE  2EE8               	decfsz	wreg,f,c
  3181   0019F0  D7FE               	bra	u737
  3182   0019F2  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  3183   0019F4  D7FC               	bra	u737
  3184   0019F6  0012               	return		;funcret
  3185   0019F8                     __end_of_Color_Interrupts_init:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _color_writetoaddr *****************
  3189 ;; Defined at:
  3190 ;;		line 25 in file "color.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  address         1    wreg     unsigned char 
  3193 ;;  value           1   10[COMRAM] unsigned char 
  3194 ;; Auto vars:     Size  Location     Type
  3195 ;;  address         1   11[COMRAM] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  1    wreg      void 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0, cstack
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3205 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;Total ram usage:        2 bytes
  3210 ;; Hardware stack levels used: 1
  3211 ;; Hardware stack levels required when called: 8
  3212 ;; This function calls:
  3213 ;;		_I2C_2_Master_Start
  3214 ;;		_I2C_2_Master_Stop
  3215 ;;		_I2C_2_Master_Write
  3216 ;; This function is called by:
  3217 ;;		_color_click_init
  3218 ;;		_Color_Interrupts_init
  3219 ;;		_Color_Interrupts_threshold
  3220 ;;		_persistence_register
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text26
  3225   00199E                     __ptext26:
  3226                           	callstack 0
  3227   00199E                     _color_writetoaddr:
  3228                           	callstack 21
  3229                           
  3230                           ;incstack = 0
  3231                           ;color_writetoaddr@address stored from wreg
  3232   00199E  6E0C               	movwf	color_writetoaddr@address^0,c
  3233   0019A0                     
  3234                           ;color.c: 26:     I2C_2_Master_Start();
  3235   0019A0  EC41  F00D         	call	_I2C_2_Master_Start	;wreg free
  3236                           
  3237                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  3238   0019A4  0E52               	movlw	82
  3239   0019A6  EC25  F00D         	call	_I2C_2_Master_Write
  3240                           
  3241                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  3242   0019AA  500C               	movf	color_writetoaddr@address^0,w,c
  3243   0019AC  0980               	iorlw	128
  3244   0019AE  EC25  F00D         	call	_I2C_2_Master_Write
  3245                           
  3246                           ;color.c: 29:     I2C_2_Master_Write(value);
  3247   0019B2  500B               	movf	color_writetoaddr@value^0,w,c
  3248   0019B4  EC25  F00D         	call	_I2C_2_Master_Write
  3249                           
  3250                           ;color.c: 30:     I2C_2_Master_Stop();
  3251   0019B8  EC3C  F00D         	call	_I2C_2_Master_Stop	;wreg free
  3252   0019BC  0012               	return		;funcret
  3253   0019BE                     __end_of_color_writetoaddr:
  3254                           	callstack 0
  3255                           
  3256 ;; *************** function _I2C_2_Master_Write *****************
  3257 ;; Defined at:
  3258 ;;		line 45 in file "i2c.c"
  3259 ;; Parameters:    Size  Location     Type
  3260 ;;  data_byte       1    wreg     unsigned char 
  3261 ;; Auto vars:     Size  Location     Type
  3262 ;;  data_byte       1    9[COMRAM] unsigned char 
  3263 ;; Return value:  Size  Location     Type
  3264 ;;                  1    wreg      void 
  3265 ;; Registers used:
  3266 ;;		wreg, status,2, status,0, cstack
  3267 ;; Tracked objects:
  3268 ;;		On entry : 0/0
  3269 ;;		On exit  : 0/0
  3270 ;;		Unchanged: 0/0
  3271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3275 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3276 ;;Total ram usage:        1 bytes
  3277 ;; Hardware stack levels used: 1
  3278 ;; Hardware stack levels required when called: 7
  3279 ;; This function calls:
  3280 ;;		_I2C_2_Master_Idle
  3281 ;; This function is called by:
  3282 ;;		_color_writetoaddr
  3283 ;;		_color_read_Red
  3284 ;;		_color_read_Green
  3285 ;;		_color_read_Blue
  3286 ;;		_color_read_Clear
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text27
  3291   001A4A                     __ptext27:
  3292                           	callstack 0
  3293   001A4A                     _I2C_2_Master_Write:
  3294                           	callstack 21
  3295                           
  3296                           ;incstack = 0
  3297                           ;I2C_2_Master_Write@data_byte stored from wreg
  3298   001A4A  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  3299   001A4C                     
  3300                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3301   001A4C  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3302   001A50                     
  3303                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3304   001A50  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3305   001A54  0012               	return		;funcret
  3306   001A56                     __end_of_I2C_2_Master_Write:
  3307                           	callstack 0
  3308                           
  3309 ;; *************** function _I2C_2_Master_Stop *****************
  3310 ;; Defined at:
  3311 ;;		line 39 in file "i2c.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;		None
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;		None
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3329 ;;Total ram usage:        0 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 7
  3332 ;; This function calls:
  3333 ;;		_I2C_2_Master_Idle
  3334 ;; This function is called by:
  3335 ;;		_color_writetoaddr
  3336 ;;		_color_read_Red
  3337 ;;		_color_read_Green
  3338 ;;		_color_read_Blue
  3339 ;;		_color_read_Clear
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text28
  3344   001A78                     __ptext28:
  3345                           	callstack 0
  3346   001A78                     _I2C_2_Master_Stop:
  3347                           	callstack 21
  3348   001A78                     
  3349                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3350   001A78  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3351   001A7C                     
  3352                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3353   001A7C  010E               	movlb	14	; () banked
  3354   001A7E  85DA               	bsf	218,2,b	;volatile
  3355   001A80                     
  3356                           ; BSR set to: 14
  3357   001A80  0012               	return		;funcret
  3358   001A82                     __end_of_I2C_2_Master_Stop:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _I2C_2_Master_Start *****************
  3362 ;; Defined at:
  3363 ;;		line 27 in file "i2c.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 7
  3384 ;; This function calls:
  3385 ;;		_I2C_2_Master_Idle
  3386 ;; This function is called by:
  3387 ;;		_color_writetoaddr
  3388 ;;		_color_read_Red
  3389 ;;		_color_read_Green
  3390 ;;		_color_read_Blue
  3391 ;;		_color_read_Clear
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text29
  3396   001A82                     __ptext29:
  3397                           	callstack 0
  3398   001A82                     _I2C_2_Master_Start:
  3399                           	callstack 21
  3400   001A82                     
  3401                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3402   001A82  EC94  F00C         	call	_I2C_2_Master_Idle	;wreg free
  3403   001A86                     
  3404                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3405   001A86  010E               	movlb	14	; () banked
  3406   001A88  81DA               	bsf	218,0,b	;volatile
  3407   001A8A                     
  3408                           ; BSR set to: 14
  3409   001A8A  0012               	return		;funcret
  3410   001A8C                     __end_of_I2C_2_Master_Start:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function _I2C_2_Master_Idle *****************
  3414 ;; Defined at:
  3415 ;;		line 22 in file "i2c.c"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;		None
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;Total ram usage:        1 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 6
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_I2C_2_Master_Start
  3440 ;;		_I2C_2_Master_RepStart
  3441 ;;		_I2C_2_Master_Stop
  3442 ;;		_I2C_2_Master_Write
  3443 ;;		_I2C_2_Master_Read
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text30
  3448   001928                     __ptext30:
  3449                           	callstack 0
  3450   001928                     _I2C_2_Master_Idle:
  3451                           	callstack 21
  3452   001928                     l132:
  3453   001928  010E               	movlb	14	; () banked
  3454   00192A  B5D8               	btfsc	216,2,b	;volatile
  3455   00192C  EF9A  F00C         	goto	u31
  3456   001930  EF9C  F00C         	goto	u30
  3457   001934                     u31:
  3458   001934  EF94  F00C         	goto	l132
  3459   001938                     u30:
  3460   001938                     
  3461                           ; BSR set to: 14
  3462   001938  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3463   00193C  0E1F               	movlw	31
  3464   00193E  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  3465   001940  A4D8               	btfss	status,2,c
  3466   001942  EFA5  F00C         	goto	u41
  3467   001946  EFA7  F00C         	goto	u40
  3468   00194A                     u41:
  3469   00194A  EF94  F00C         	goto	l132
  3470   00194E                     u40:
  3471   00194E                     
  3472                           ; BSR set to: 14
  3473   00194E  0012               	return		;funcret
  3474   001950                     __end_of_I2C_2_Master_Idle:
  3475                           	callstack 0
  3476                           
  3477 ;; *************** function _HighISR *****************
  3478 ;; Defined at:
  3479 ;;		line 71 in file "interrupts.c"
  3480 ;; Parameters:    Size  Location     Type
  3481 ;;		None
  3482 ;; Auto vars:     Size  Location     Type
  3483 ;;		None
  3484 ;; Return value:  Size  Location     Type
  3485 ;;                  1    wreg      void 
  3486 ;; Registers used:
  3487 ;;		wreg, status,2, status,0, cstack
  3488 ;; Tracked objects:
  3489 ;;		On entry : 0/0
  3490 ;;		On exit  : 0/0
  3491 ;;		Unchanged: 0/0
  3492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3497 ;;Total ram usage:        0 bytes
  3498 ;; Hardware stack levels used: 1
  3499 ;; Hardware stack levels required when called: 5
  3500 ;; This function calls:
  3501 ;;		_Color_Interrupts_clear
  3502 ;; This function is called by:
  3503 ;;		Interrupt level 2
  3504 ;; This function uses a non-reentrant model
  3505 ;;
  3506                           
  3507                           	psect	intcode
  3508   000008                     __pintcode:
  3509                           	callstack 0
  3510   000008                     _HighISR:
  3511                           	callstack 21
  3512                           
  3513                           ; BSR set to: 14
  3514                           ;incstack = 0
  3515   000008  8252               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3516   00000A                     
  3517                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  3518   00000A  010E               	movlb	14	; () banked
  3519   00000C  A133               	btfss	51,0,b	;volatile
  3520   00000E  EF0B  F000         	goto	i2u60_41
  3521   000012  EF0D  F000         	goto	i2u60_40
  3522   000016                     i2u60_41:
  3523   000016  EF16  F000         	goto	i2l365
  3524   00001A                     i2u60_40:
  3525   00001A                     
  3526                           ; BSR set to: 14
  3527                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  3528   00001A  8E7C               	bsf	124,7,c	;volatile
  3529   00001C                     
  3530                           ; BSR set to: 14
  3531                           ;interrupts.c: 76:         interrupt_flag = 1;
  3532   00001C  0E00               	movlw	0
  3533   00001E  6E4D               	movwf	(_interrupt_flag+1)^0,c
  3534   000020  0E01               	movlw	1
  3535   000022  6E4C               	movwf	_interrupt_flag^0,c
  3536   000024                     
  3537                           ; BSR set to: 14
  3538                           ;interrupts.c: 78:         Color_Interrupts_clear();
  3539   000024  EC27  F00C         	call	_Color_Interrupts_clear	;wreg free
  3540   000028                     
  3541                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  3542   000028  010E               	movlb	14	; () banked
  3543   00002A  9133               	bcf	51,0,b	;volatile
  3544   00002C                     i2l365:
  3545                           
  3546                           ; BSR set to: 14
  3547   00002C  9252               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3548   00002E  0011               	retfie		f
  3549   000030                     __end_of_HighISR:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _Color_Interrupts_clear *****************
  3553 ;; Defined at:
  3554 ;;		line 51 in file "interrupts.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 4
  3575 ;; This function calls:
  3576 ;;		i2_Color_Interrupts_init
  3577 ;;		i2_Color_Interrupts_threshold
  3578 ;;		i2_I2C_2_Master_Start
  3579 ;;		i2_I2C_2_Master_Stop
  3580 ;;		i2_I2C_2_Master_Write
  3581 ;;		i2_persistence_register
  3582 ;; This function is called by:
  3583 ;;		_HighISR
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           	psect	text32
  3588   00184E                     __ptext32:
  3589                           	callstack 0
  3590   00184E                     _Color_Interrupts_clear:
  3591                           	callstack 21
  3592   00184E                     
  3593                           ;interrupts.c: 55:     I2C_2_Master_Start();
  3594   00184E  EC4B  F00D         	call	i2_I2C_2_Master_Start	;wreg free
  3595                           
  3596                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  3597   001852  0E52               	movlw	82
  3598   001854  EC31  F00D         	call	i2_I2C_2_Master_Write
  3599                           
  3600                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  3601   001858  0EE6               	movlw	230
  3602   00185A  EC31  F00D         	call	i2_I2C_2_Master_Write
  3603                           
  3604                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  3605   00185E  EC46  F00D         	call	i2_I2C_2_Master_Stop	;wreg free
  3606                           
  3607                           ;interrupts.c: 61:     Color_Interrupts_init();
  3608   001862  ECFC  F00C         	call	i2_Color_Interrupts_init	;wreg free
  3609                           
  3610                           ;interrupts.c: 62:     persistence_register();
  3611   001866  EC2B  F00D         	call	i2_persistence_register	;wreg free
  3612                           
  3613                           ;interrupts.c: 63:     Color_Interrupts_threshold(5000, 0);
  3614   00186A  0E13               	movlw	19
  3615   00186C  6E06               	movwf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,c
  3616   00186E  0E88               	movlw	136
  3617   001870  6E05               	movwf	i2Color_Interrupts_threshold@upperThreshold^0,c
  3618   001872  0E00               	movlw	0
  3619   001874  6E08               	movwf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,c
  3620   001876  0E00               	movlw	0
  3621   001878  6E07               	movwf	i2Color_Interrupts_threshold@lowerThreshold^0,c
  3622   00187A  EC7F  F00C         	call	i2_Color_Interrupts_threshold	;wreg free
  3623   00187E  0012               	return		;funcret
  3624   001880                     __end_of_Color_Interrupts_clear:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function i2_persistence_register *****************
  3628 ;; Defined at:
  3629 ;;		line 46 in file "interrupts.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      void 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2, status,0, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 3
  3650 ;; This function calls:
  3651 ;;		i2_color_writetoaddr
  3652 ;; This function is called by:
  3653 ;;		_Color_Interrupts_clear
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text33
  3658   001A56                     __ptext33:
  3659                           	callstack 0
  3660   001A56                     i2_persistence_register:
  3661                           	callstack 21
  3662   001A56                     
  3663                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3664   001A56  0E02               	movlw	2
  3665   001A58  6E03               	movwf	i2color_writetoaddr@value^0,c
  3666   001A5A  0E0C               	movlw	12
  3667   001A5C  ECDF  F00C         	call	i2_color_writetoaddr
  3668   001A60  0012               	return		;funcret
  3669   001A62                     __end_ofi2_persistence_register:
  3670                           	callstack 0
  3671                           
  3672 ;; *************** function i2_Color_Interrupts_threshold *****************
  3673 ;; Defined at:
  3674 ;;		line 38 in file "interrupts.c"
  3675 ;; Parameters:    Size  Location     Type
  3676 ;;  upperThresho    2    4[COMRAM] unsigned int 
  3677 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0, cstack
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3693 ;;Total ram usage:        4 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 3
  3696 ;; This function calls:
  3697 ;;		i2_color_writetoaddr
  3698 ;; This function is called by:
  3699 ;;		_Color_Interrupts_clear
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text34
  3704   0018FE                     __ptext34:
  3705                           	callstack 0
  3706   0018FE                     i2_Color_Interrupts_threshold:
  3707                           	callstack 21
  3708   0018FE                     
  3709                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  3710   0018FE  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  3711   001902  0E04               	movlw	4
  3712   001904  ECDF  F00C         	call	i2_color_writetoaddr
  3713                           
  3714                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  3715   001908  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  3716   00190A  6E03               	movwf	i2color_writetoaddr@value^0,c
  3717   00190C  0E05               	movlw	5
  3718   00190E  ECDF  F00C         	call	i2_color_writetoaddr
  3719                           
  3720                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  3721   001912  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  3722   001916  0E06               	movlw	6
  3723   001918  ECDF  F00C         	call	i2_color_writetoaddr
  3724                           
  3725                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  3726   00191C  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  3727   00191E  6E03               	movwf	i2color_writetoaddr@value^0,c
  3728   001920  0E07               	movlw	7
  3729   001922  ECDF  F00C         	call	i2_color_writetoaddr
  3730   001926  0012               	return		;funcret
  3731   001928                     __end_ofi2_Color_Interrupts_threshold:
  3732                           	callstack 0
  3733                           
  3734 ;; *************** function i2_Color_Interrupts_init *****************
  3735 ;; Defined at:
  3736 ;;		line 29 in file "interrupts.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;		None
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;		None
  3741 ;; Return value:  Size  Location     Type
  3742 ;;                  1    wreg      void 
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3752 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3753 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used: 1
  3756 ;; Hardware stack levels required when called: 3
  3757 ;; This function calls:
  3758 ;;		i2_color_writetoaddr
  3759 ;; This function is called by:
  3760 ;;		_Color_Interrupts_clear
  3761 ;; This function uses a non-reentrant model
  3762 ;;
  3763                           
  3764                           	psect	text35
  3765   0019F8                     __ptext35:
  3766                           	callstack 0
  3767   0019F8                     i2_Color_Interrupts_init:
  3768                           	callstack 21
  3769   0019F8                     
  3770                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  3771   0019F8  0E13               	movlw	19
  3772   0019FA  6E03               	movwf	i2color_writetoaddr@value^0,c
  3773   0019FC  0E00               	movlw	0
  3774   0019FE  ECDF  F00C         	call	i2_color_writetoaddr
  3775   001A02                     
  3776                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  3777   001A02  0ED0               	movlw	208
  3778   001A04  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  3779   001A06  0ECA               	movlw	202
  3780   001A08                     i2u74_47:
  3781   001A08  2EE8               	decfsz	wreg,f,c
  3782   001A0A  D7FE               	bra	i2u74_47
  3783   001A0C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  3784   001A0E  D7FC               	bra	i2u74_47
  3785   001A10  0012               	return		;funcret
  3786   001A12                     __end_ofi2_Color_Interrupts_init:
  3787                           	callstack 0
  3788                           
  3789 ;; *************** function i2_color_writetoaddr *****************
  3790 ;; Defined at:
  3791 ;;		line 25 in file "color.c"
  3792 ;; Parameters:    Size  Location     Type
  3793 ;;  address         1    wreg     unsigned char 
  3794 ;;  value           1    2[COMRAM] unsigned char 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  address         1    3[COMRAM] unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, status,2, status,0, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3806 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3809 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3810 ;;Total ram usage:        2 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 2
  3813 ;; This function calls:
  3814 ;;		i2_I2C_2_Master_Start
  3815 ;;		i2_I2C_2_Master_Stop
  3816 ;;		i2_I2C_2_Master_Write
  3817 ;; This function is called by:
  3818 ;;		i2_Color_Interrupts_init
  3819 ;;		i2_Color_Interrupts_threshold
  3820 ;;		i2_persistence_register
  3821 ;; This function uses a non-reentrant model
  3822 ;;
  3823                           
  3824                           	psect	text36
  3825   0019BE                     __ptext36:
  3826                           	callstack 0
  3827   0019BE                     i2_color_writetoaddr:
  3828                           	callstack 21
  3829                           
  3830                           ;incstack = 0
  3831                           ;i2color_writetoaddr@address stored from wreg
  3832   0019BE  6E04               	movwf	i2color_writetoaddr@address^0,c
  3833   0019C0                     
  3834                           ;color.c: 26:     I2C_2_Master_Start();
  3835   0019C0  EC4B  F00D         	call	i2_I2C_2_Master_Start	;wreg free
  3836                           
  3837                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  3838   0019C4  0E52               	movlw	82
  3839   0019C6  EC31  F00D         	call	i2_I2C_2_Master_Write
  3840                           
  3841                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  3842   0019CA  5004               	movf	i2color_writetoaddr@address^0,w,c
  3843   0019CC  0980               	iorlw	128
  3844   0019CE  EC31  F00D         	call	i2_I2C_2_Master_Write
  3845                           
  3846                           ;color.c: 29:     I2C_2_Master_Write(value);
  3847   0019D2  5003               	movf	i2color_writetoaddr@value^0,w,c
  3848   0019D4  EC31  F00D         	call	i2_I2C_2_Master_Write
  3849                           
  3850                           ;color.c: 30:     I2C_2_Master_Stop();
  3851   0019D8  EC46  F00D         	call	i2_I2C_2_Master_Stop	;wreg free
  3852   0019DC  0012               	return		;funcret
  3853   0019DE                     __end_ofi2_color_writetoaddr:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function i2_I2C_2_Master_Write *****************
  3857 ;; Defined at:
  3858 ;;		line 45 in file "i2c.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  data_byte       1    wreg     unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;  data_byte       1    1[COMRAM] unsigned char 
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;Total ram usage:        1 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 1
  3879 ;; This function calls:
  3880 ;;		i2_I2C_2_Master_Idle
  3881 ;; This function is called by:
  3882 ;;		_Color_Interrupts_clear
  3883 ;;		i2_color_writetoaddr
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text37
  3888   001A62                     __ptext37:
  3889                           	callstack 0
  3890   001A62                     i2_I2C_2_Master_Write:
  3891                           	callstack 21
  3892                           
  3893                           ;incstack = 0
  3894                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  3895   001A62  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  3896   001A64                     
  3897                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3898   001A64  ECA8  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  3899   001A68                     
  3900                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3901   001A68  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  3902   001A6C  0012               	return		;funcret
  3903   001A6E                     __end_ofi2_I2C_2_Master_Write:
  3904                           	callstack 0
  3905                           
  3906 ;; *************** function i2_I2C_2_Master_Stop *****************
  3907 ;; Defined at:
  3908 ;;		line 39 in file "i2c.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 1
  3929 ;; This function calls:
  3930 ;;		i2_I2C_2_Master_Idle
  3931 ;; This function is called by:
  3932 ;;		_Color_Interrupts_clear
  3933 ;;		i2_color_writetoaddr
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text38
  3938   001A8C                     __ptext38:
  3939                           	callstack 0
  3940   001A8C                     i2_I2C_2_Master_Stop:
  3941                           	callstack 21
  3942   001A8C                     
  3943                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3944   001A8C  ECA8  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  3945   001A90                     
  3946                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3947   001A90  010E               	movlb	14	; () banked
  3948   001A92  85DA               	bsf	218,2,b	;volatile
  3949   001A94                     
  3950                           ; BSR set to: 14
  3951   001A94  0012               	return		;funcret
  3952   001A96                     __end_ofi2_I2C_2_Master_Stop:
  3953                           	callstack 0
  3954                           
  3955 ;; *************** function i2_I2C_2_Master_Start *****************
  3956 ;; Defined at:
  3957 ;;		line 27 in file "i2c.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;		None
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  1    wreg      void 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0, cstack
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; Hardware stack levels required when called: 1
  3978 ;; This function calls:
  3979 ;;		i2_I2C_2_Master_Idle
  3980 ;; This function is called by:
  3981 ;;		_Color_Interrupts_clear
  3982 ;;		i2_color_writetoaddr
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986                           	psect	text39
  3987   001A96                     __ptext39:
  3988                           	callstack 0
  3989   001A96                     i2_I2C_2_Master_Start:
  3990                           	callstack 21
  3991   001A96                     
  3992                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3993   001A96  ECA8  F00C         	call	i2_I2C_2_Master_Idle	;wreg free
  3994   001A9A                     
  3995                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3996   001A9A  010E               	movlb	14	; () banked
  3997   001A9C  81DA               	bsf	218,0,b	;volatile
  3998   001A9E                     
  3999                           ; BSR set to: 14
  4000   001A9E  0012               	return		;funcret
  4001   001AA0                     __end_ofi2_I2C_2_Master_Start:
  4002                           	callstack 0
  4003                           
  4004 ;; *************** function i2_I2C_2_Master_Idle *****************
  4005 ;; Defined at:
  4006 ;;		line 22 in file "i2c.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;		None
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;		None
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  1    wreg      void 
  4013 ;; Registers used:
  4014 ;;		wreg, status,2, status,0
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4023 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4024 ;;Total ram usage:        1 bytes
  4025 ;; Hardware stack levels used: 1
  4026 ;; This function calls:
  4027 ;;		Nothing
  4028 ;; This function is called by:
  4029 ;;		i2_I2C_2_Master_Start
  4030 ;;		i2_I2C_2_Master_Stop
  4031 ;;		i2_I2C_2_Master_Write
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text40
  4036   001950                     __ptext40:
  4037                           	callstack 0
  4038   001950                     i2_I2C_2_Master_Idle:
  4039                           	callstack 21
  4040   001950                     i2l132:
  4041   001950  010E               	movlb	14	; () banked
  4042   001952  B5D8               	btfsc	216,2,b	;volatile
  4043   001954  EFAE  F00C         	goto	i2u38_41
  4044   001958  EFB0  F00C         	goto	i2u38_40
  4045   00195C                     i2u38_41:
  4046   00195C  EFA8  F00C         	goto	i2l132
  4047   001960                     i2u38_40:
  4048   001960                     
  4049                           ; BSR set to: 14
  4050   001960  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4051   001964  0E1F               	movlw	31
  4052   001966  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4053   001968  A4D8               	btfss	status,2,c
  4054   00196A  EFB9  F00C         	goto	i2u39_41
  4055   00196E  EFBB  F00C         	goto	i2u39_40
  4056   001972                     i2u39_41:
  4057   001972  EFA8  F00C         	goto	i2l132
  4058   001976                     i2u39_40:
  4059   001976                     
  4060                           ; BSR set to: 14
  4061   001976  0012               	return		;funcret
  4062   001978                     __end_ofi2_I2C_2_Master_Idle:
  4063                           	callstack 0
  4064                           
  4065                           	psect	rparam
  4066   000000                     
  4067                           	psect	temp
  4068   000052                     btemp:
  4069                           	callstack 0
  4070   000052                     	ds	1
  4071   000000                     int$flags	set	btemp
  4072   000000                     wtemp8	set	btemp+1
  4073   000000                     ttemp5	set	btemp+1
  4074   000000                     ttemp6	set	btemp+4
  4075   000000                     ttemp7	set	btemp+8
  4076                           
  4077                           	psect	idloc
  4078                           
  4079                           ;Config register IDLOC0 @ 0x200000
  4080                           ;	unspecified, using default values
  4081   200000                     	org	2097152
  4082   200000  0FFF               	dw	4095
  4083                           
  4084                           ;Config register IDLOC1 @ 0x200002
  4085                           ;	unspecified, using default values
  4086   200002                     	org	2097154
  4087   200002  0FFF               	dw	4095
  4088                           
  4089                           ;Config register IDLOC2 @ 0x200004
  4090                           ;	unspecified, using default values
  4091   200004                     	org	2097156
  4092   200004  0FFF               	dw	4095
  4093                           
  4094                           ;Config register IDLOC3 @ 0x200006
  4095                           ;	unspecified, using default values
  4096   200006                     	org	2097158
  4097   200006  0FFF               	dw	4095
  4098                           
  4099                           ;Config register IDLOC4 @ 0x200008
  4100                           ;	unspecified, using default values
  4101   200008                     	org	2097160
  4102   200008  0FFF               	dw	4095
  4103                           
  4104                           ;Config register IDLOC5 @ 0x20000A
  4105                           ;	unspecified, using default values
  4106   20000A                     	org	2097162
  4107   20000A  0FFF               	dw	4095
  4108                           
  4109                           ;Config register IDLOC6 @ 0x20000C
  4110                           ;	unspecified, using default values
  4111   20000C                     	org	2097164
  4112   20000C  0FFF               	dw	4095
  4113                           
  4114                           ;Config register IDLOC7 @ 0x20000E
  4115                           ;	unspecified, using default values
  4116   20000E                     	org	2097166
  4117   20000E  0FFF               	dw	4095
  4118                           
  4119                           	psect	config
  4120                           
  4121                           ;Config register CONFIG1L @ 0x300000
  4122                           ;	External Oscillator mode Selection bits
  4123                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4124                           ;	Power-up default value for COSC bits
  4125                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4126   300000                     	org	3145728
  4127   300000  AA                 	db	170
  4128                           
  4129                           ;Config register CONFIG1H @ 0x300001
  4130                           ;	unspecified, using default values
  4131                           ;	Clock Out Enable bit
  4132                           ;	CLKOUTEN = 0x1, unprogrammed default
  4133                           ;	Clock Switch Enable bit
  4134                           ;	CSWEN = 0x1, unprogrammed default
  4135                           ;	Fail-Safe Clock Monitor Enable bit
  4136                           ;	FCMEN = 0x1, unprogrammed default
  4137   300001                     	org	3145729
  4138   300001  FF                 	db	255
  4139                           
  4140                           ;Config register CONFIG2L @ 0x300002
  4141                           ;	unspecified, using default values
  4142                           ;	Master Clear Enable bit
  4143                           ;	MCLRE = 0x1, unprogrammed default
  4144                           ;	Power-up Timer Enable bit
  4145                           ;	PWRTE = 0x1, unprogrammed default
  4146                           ;	Low-power BOR enable bit
  4147                           ;	LPBOREN = 0x1, unprogrammed default
  4148                           ;	Brown-out Reset Enable bits
  4149                           ;	BOREN = 0x3, unprogrammed default
  4150   300002                     	org	3145730
  4151   300002  FF                 	db	255
  4152                           
  4153                           ;Config register CONFIG2H @ 0x300003
  4154                           ;	unspecified, using default values
  4155                           ;	Brown Out Reset Voltage selection bits
  4156                           ;	BORV = 0x3, unprogrammed default
  4157                           ;	ZCD Disable bit
  4158                           ;	ZCD = 0x1, unprogrammed default
  4159                           ;	PPSLOCK bit One-Way Set Enable bit
  4160                           ;	PPS1WAY = 0x1, unprogrammed default
  4161                           ;	Stack Full/Underflow Reset Enable bit
  4162                           ;	STVREN = 0x1, unprogrammed default
  4163                           ;	Debugger Enable bit
  4164                           ;	DEBUG = 0x1, unprogrammed default
  4165                           ;	Extended Instruction Set Enable bit
  4166                           ;	XINST = 0x1, unprogrammed default
  4167   300003                     	org	3145731
  4168   300003  FF                 	db	255
  4169                           
  4170                           ;Config register CONFIG3L @ 0x300004
  4171                           ;	WDT Period Select bits
  4172                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4173                           ;	WDT operating mode
  4174                           ;	WDTE = OFF, WDT Disabled
  4175   300004                     	org	3145732
  4176   300004  9F                 	db	159
  4177                           
  4178                           ;Config register CONFIG3H @ 0x300005
  4179                           ;	unspecified, using default values
  4180                           ;	WDT Window Select bits
  4181                           ;	WDTCWS = 0x7, unprogrammed default
  4182                           ;	WDT input clock selector
  4183                           ;	WDTCCS = 0x7, unprogrammed default
  4184   300005                     	org	3145733
  4185   300005  FF                 	db	255
  4186                           
  4187                           ;Config register CONFIG4L @ 0x300006
  4188                           ;	unspecified, using default values
  4189                           ;	Write Protection Block 0
  4190                           ;	WRT0 = 0x1, unprogrammed default
  4191                           ;	Write Protection Block 1
  4192                           ;	WRT1 = 0x1, unprogrammed default
  4193                           ;	Write Protection Block 2
  4194                           ;	WRT2 = 0x1, unprogrammed default
  4195                           ;	Write Protection Block 3
  4196                           ;	WRT3 = 0x1, unprogrammed default
  4197                           ;	Write Protection Block 3
  4198                           ;	WRT4 = 0x1, unprogrammed default
  4199                           ;	Write Protection Block 3
  4200                           ;	WRT5 = 0x1, unprogrammed default
  4201                           ;	Write Protection Block 3
  4202                           ;	WRT6 = 0x1, unprogrammed default
  4203                           ;	Write Protection Block 3
  4204                           ;	WRT7 = 0x1, unprogrammed default
  4205   300006                     	org	3145734
  4206   300006  FF                 	db	255
  4207                           
  4208                           ;Config register CONFIG4H @ 0x300007
  4209                           ;	unspecified, using default values
  4210                           ;	Configuration Register Write Protection bit
  4211                           ;	WRTC = 0x1, unprogrammed default
  4212                           ;	Boot Block Write Protection bit
  4213                           ;	WRTB = 0x1, unprogrammed default
  4214                           ;	Data EEPROM Write Protection bit
  4215                           ;	WRTD = 0x1, unprogrammed default
  4216                           ;	Scanner Enable bit
  4217                           ;	SCANE = 0x1, unprogrammed default
  4218                           ;	Low Voltage Programming Enable bit
  4219                           ;	LVP = 0x1, unprogrammed default
  4220   300007                     	org	3145735
  4221   300007  FF                 	db	255
  4222                           
  4223                           ;Config register CONFIG5L @ 0x300008
  4224                           ;	unspecified, using default values
  4225                           ;	UserNVM Program Memory Code Protection bit
  4226                           ;	CP = 0x1, unprogrammed default
  4227                           ;	DataNVM Memory Code Protection bit
  4228                           ;	CPD = 0x1, unprogrammed default
  4229   300008                     	org	3145736
  4230   300008  FF                 	db	255
  4231                           
  4232                           ;Config register CONFIG5H @ 0x300009
  4233                           ;	unspecified, using default values
  4234   300009                     	org	3145737
  4235   300009  FF                 	db	255
  4236                           
  4237                           ;Config register CONFIG6L @ 0x30000A
  4238                           ;	unspecified, using default values
  4239                           ;	Table Read Protection Block 0
  4240                           ;	EBTR0 = 0x1, unprogrammed default
  4241                           ;	Table Read Protection Block 1
  4242                           ;	EBTR1 = 0x1, unprogrammed default
  4243                           ;	Table Read Protection Block 2
  4244                           ;	EBTR2 = 0x1, unprogrammed default
  4245                           ;	Table Read Protection Block 3
  4246                           ;	EBTR3 = 0x1, unprogrammed default
  4247                           ;	Table Read Protection Block 4
  4248                           ;	EBTR4 = 0x1, unprogrammed default
  4249                           ;	Table Read Protection Block 5
  4250                           ;	EBTR5 = 0x1, unprogrammed default
  4251                           ;	Table Read Protection Block 6
  4252                           ;	EBTR6 = 0x1, unprogrammed default
  4253                           ;	Table Read Protection Block 7
  4254                           ;	EBTR7 = 0x1, unprogrammed default
  4255   30000A                     	org	3145738
  4256   30000A  FF                 	db	255
  4257                           
  4258                           ;Config register CONFIG6H @ 0x30000B
  4259                           ;	unspecified, using default values
  4260                           ;	Boot Block Table Read Protection bit
  4261                           ;	EBTRB = 0x1, unprogrammed default
  4262   30000B                     	org	3145739
  4263   30000B  FF                 	db	255
  4264                           tosu	equ	0xFFF
  4265                           tosh	equ	0xFFE
  4266                           tosl	equ	0xFFD
  4267                           stkptr	equ	0xFFC
  4268                           pclatu	equ	0xFFB
  4269                           pclath	equ	0xFFA
  4270                           pcl	equ	0xFF9
  4271                           tblptru	equ	0xFF8
  4272                           tblptrh	equ	0xFF7
  4273                           tblptrl	equ	0xFF6
  4274                           tablat	equ	0xFF5
  4275                           prodh	equ	0xFF4
  4276                           prodl	equ	0xFF3
  4277                           indf0	equ	0xFEF
  4278                           postinc0	equ	0xFEE
  4279                           postdec0	equ	0xFED
  4280                           preinc0	equ	0xFEC
  4281                           plusw0	equ	0xFEB
  4282                           fsr0h	equ	0xFEA
  4283                           fsr0l	equ	0xFE9
  4284                           wreg	equ	0xFE8
  4285                           indf1	equ	0xFE7
  4286                           postinc1	equ	0xFE6
  4287                           postdec1	equ	0xFE5
  4288                           preinc1	equ	0xFE4
  4289                           plusw1	equ	0xFE3
  4290                           fsr1h	equ	0xFE2
  4291                           fsr1l	equ	0xFE1
  4292                           bsr	equ	0xFE0
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           preinc2	equ	0xFDC
  4297                           plusw2	equ	0xFDB
  4298                           fsr2h	equ	0xFDA
  4299                           fsr2l	equ	0xFD9
  4300                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     73      81
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2460$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2460$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), main@mL(COMRAM[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S316DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S316DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_response->_norm_stop
    _motor_response->_turnLeft
    _motor_response->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   21075
                                             45 COMRAM    28    28      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     743
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      14     8      6    9989
                                             31 COMRAM    14     8      6
                          _norm_stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    2917
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             4     0      4    3069
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    3285
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3093
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     528
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     743
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1083
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     743
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     743
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     _norm_stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     49      51       1       86.2%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A1      61        0.0%
DATA                 0      0      A1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 16:39:56 2022

                            _color_read_Red 1666                             _color_read_RGBC 1608  
                           _color_read_Blue 1756                                          l61 181A  
                                        l70 1704                                          l64 19BC  
                                        l73 17A4                                          l82 1664  
                                        l67 16B4                                          l76 1754  
                                        l88 1A26                                          u30 1938  
                                        u31 1934                                          u40 194E  
                                        u41 194A                                          u80 17D0  
                                        u81 17C8                                          u98 17D2  
                       ___wmul@multiplicand 000B                            _color_read_Clear 1706  
                          _color_read_Green 16B6                           ??_Interrupts_init 0009  
                                       l102 1018                                         l132 1928  
                                       l141 1A76                                         l150 17E6  
                                       l135 194E                                         l144 1A80  
                                       l129 18D2                                         l138 1A8A  
                                       l147 1A54                                         l350 19F6  
                                       l353 18FC                                         l441 1184  
                                       l434 13DA                                         l347 1A3C  
                                       l444 1606                                         l356 1A48  
                                       l461 1532                                         l447 159C  
                                       l464 14C0                                         l458 184C  
                                       l475 135A                                         l486 199C  
                                       l984 144E                                         l977 1446  
                                       u400 13F6                                         u401 13F2  
                                       u410 1414                                         u411 1410  
                                       u420 1430                                         u500 0F98  
                                       u421 142C                                         u501 0F94  
                                       u430 1036                                         u510 1018  
                                       u431 1032                                         u511 1014  
                                       u440 1100                                         u520 1312  
                                       u441 10FC                                         u521 130E  
                                       u530 132A                                         u450 0E32  
                                       u531 1326                                         u451 0E2E  
                                       u460 0EB2                                         u461 0EAE  
                                       u470 0ED4                                         u550 120A  
                                       u471 0ED0                                         u551 1206  
                                       u480 0EF6                                         u481 0EF2  
                                       u490 0F76                                         u707 0FBE  
                                       u491 0F72                                         u717 0FEA  
                                       u727 17FC                                         u737 19EE  
                                       u657 1228                                         u667 0E58  
                                       u677 0E84                                         u687 0F1C  
                                       u697 0F48                            ??_motor_response 0026  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 1A12  
                       i2_color_writetoaddr 19BE                                         wreg 000FE8  
                                      l2000 11F6                                        l2010 1238  
                                      l2002 11F8                                        l1220 1A50  
                                      l2012 1244                                        l2004 120A  
                                      l1214 1A82                                        l1222 1A78  
                                      l1230 17A8                                        l2014 1260  
                                      l2006 121E                                        l1216 1A86  
                                      l1224 1A7C                                        l1240 17E4  
                                      l1232 17AC                                        l2016 1262  
                                      l2008 1236                                        l1170 1928  
                                      l1218 1A4C                                        l1234 17B4  
                                      l1226 1A6E                                        l1172 1938  
                                      l1236 17BC                                        l1228 1A72  
                                      l1406 1A28                                        l1270 18BE  
                                      l1262 18AA                                        l1238 17E2  
                                      l1272 18C0                                        l1264 18B4  
                                      l1266 18BA                                        l1354 1A12  
                                      l1268 18BC                                        l1700 13F6  
                                      l1710 1430                                        l1702 13FE  
                                      l1712 1438                                        l1704 1406  
                                      l1800 14FA                                        l1714 143A  
                                      l1706 1414                                        l1730 101A  
                                      l1802 150A                                        l1820 17F6  
                                      l1716 1440                                        l1708 141A  
                                      l1740 10E4                                        l1732 1036  
                                      l1900 13CC                                        l1804 151A  
                                      l1822 1806                                        l1750 1666  
                                      l1742 1100                                        l1734 108A  
                                      l1902 13CE                                        l1910 15BA  
                                      l1806 1526                                        l1830 0E32  
                                      l1824 1810                                        l1816 17E8  
                                      l1752 16AC                                        l1744 1144  
                                      l1736 109E                                        l1904 13D8  
                                      l1912 15CA                                        l1920 1540  
                                      l1840 0E66                                        l1818 17EC  
                                      l1762 1756                                        l1770 174C  
                                      l1826 1608                                        l1690 1978  
                                      l1738 10E0                                        l1930 1272  
                                      l1914 15DE                                        l1906 159E  
                                      l1922 1550                                        l1842 0E92  
                                      l1748 19A0                                        l1764 179C  
                                      l1756 16B6                                        l1692 1994  
                                      l1940 12CE                                        l1932 128A  
                                      l1916 15F2                                        l1908 15AA  
                                      l1924 1560                                        l1780 1488  
                                      l1860 0F56                                        l1836 0E3A  
                                      l1844 0EB6                                        l1828 0E14  
                                      l1758 16FC                                        l1950 132A  
                                      l1942 12E2                                        l1934 129A  
                                      l1926 1574                                        l1918 1534  
                                      l1790 1834                                        l1782 1498  
                                      l1774 1450                                        l1870 0FA0  
                                      l1854 0EFE                                        l1846 0ED4  
                                      l1862 0F7A                                        l1838 0E4E  
                                      l1880 19E8                                        l1768 1706  
                                      l1696 13DC                                        l1952 1342  
                                      l1944 12EE                                        l1936 12AA  
                                      l1928 1588                                        l1792 1840  
                                      l1784 14A8                                        l1776 1468  
                                      l1872 0FB4                                        l1864 0F98  
                                      l1856 0F12                                        l1848 0EF6  
                                      l1882 18D4                                        l1698 13E4  
                                      l1954 134E                                        l1946 12FA  
                                      l1938 12BA                                        l1890 13AA  
                                      l1794 14C2                                        l1786 14B4  
                                      l1778 1478                                        l1874 0FCC  
                                      l1858 0F2A                                        l1970 118A  
                                      l1948 1312                                        l1892 13B4  
                                      l1788 181C                                        l1796 14DA  
                                      l1876 0FF8                                        l1884 1A3E  
                                      l1980 11C6                                        l1972 118A  
                                      l1878 19DE                                        l1894 13B6  
                                      l1886 135C                                        l1798 14EA  
                                      l1990 11DA                                        l1982 11D2  
                                      l1974 118E                                        l1966 1186  
                                      l1896 13C0                                        l1888 1386  
                                      l1992 11DC                                        l1984 11D4  
                                      l1976 11AE                                        l1968 118A  
                                      l1898 13C2                                        l1994 11DE  
                                      l1986 11D6                                        l1978 11BA  
                                      l1996 11E0                                        l1988 11D8  
                                      l1998 11E2                                        STR_1 0E01  
                              _BAUD4CONbits 000EE9                                        _T2PR 000FBC  
                                      i2l64 19DC                                        _main 1186  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0052  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0030                        ?i2_color_writetoaddr 0003  
                    __end_of_color_read_Red 16B6                             __end_of_HighISR 0030  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___lwdiv 1450                                       i2l132 1950  
                                     i2l135 1976                                       i2l144 1A94  
                                     i2l138 1A9E                                       i2l147 1A6C  
                                     i2l350 1A10                                       i2l353 1926  
                                     i2l356 1A60                                       i2l365 002C  
                                     i2l359 187E                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 1A8C  
                __end_of_I2C_2_Master_Write 1A56                       _Color_Interrupts_init 19DE  
                                     ttemp5 0053                                       ttemp6 0056  
                                     ttemp7 005A                                       status 000FD8  
                                     wtemp8 0053                     __end_of_color_read_RGBC 1666  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 17A6  
                     _I2C_2_Master_RepStart 1A6E                             ?_color_read_Red 000D  
                           __initialization 1880                                __end_of_main 1272  
               ?_Color_Interrupts_threshold 000D                                      ??_main 002E  
                             __activetblptr 000001                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l2060 0024  
                                    i2l2062 0028                                      i2l2054 000A  
                                    i2l2056 001A                                      i2l2058 001C  
                                    i2l1720 1A9A                                      i2l1722 1A8C  
                                    i2l1810 1A02                                      i2l1724 1A90  
                                    i2l1812 18FE                                      i2l1718 1A96  
                                    i2l1726 1A64                                      i2l1814 1A56  
                                    i2l1728 1A68                                      i2l1808 19F8  
                                    i2l1746 19C0                                      i2l1686 1950  
                                    i2l1688 1960                                      i2l1964 184E  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 181C                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 1A4A  
                              _CCPTMRS0bits 000FAD                                      ___wmul 1978  
                                 ??___lwdiv 0013                                      clear_0 1886  
                                    clear_1 1892                                      isa$std 000001  
                                    main@mL 0038                                      main@mR 0041  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 184E  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptru 000FF8    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 1534                                  __accesstop 0060  
                   __end_of__initialization 1898                    __end_of_color_read_Clear 1756  
                  __end_of_color_read_Green 1706                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0014  
                          ?_color_read_Blue 000D                             _Interrupts_init 1A28  
                            __pcstackCOMRAM 0001              __end_ofi2_persistence_register 1A62  
                              ?_tricolorLED 0001                     i2_Color_Interrupts_init 19F8  
                                __pbssBANK0 0060                           _color_writetoaddr 199E  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0022  
                          motor_response@mR 0024                          ?_color_writetoaddr 000B  
                                   ?___wmul 0009                          motor_response@temp 0020  
                       ??_color_writetoaddr 000C                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     i2u60_40 001A  
                                   i2u60_41 0016                                     i2u38_40 1960  
                                   i2u38_41 195C                                     i2u39_40 1976  
                                   i2u39_41 1972                                     i2u74_47 1A08  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 1A3E                     __end_of_Interrupts_init 1A3E  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 19BE  
                        _I2C_2_Master_Start 1A82                         i2_I2C_2_Master_Idle 1950  
                        _I2C_2_Master_Write 1A4A                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 1A8C                                     __Lparam 0000  
                         color_read_Red@tmp 0012                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 13DC                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     __pcinit 1880  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                   __ptext0 1186                                     __ptext1 1A12  
                                   __ptext2 1A3E                                     __ptext3 0E14  
                                   __ptext4 1450                                     __ptext5 14C2  
                                   __ptext6 181C                                     __ptext7 1534  
                                   __ptext8 159E                                     __ptext9 135C  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                               _RxBufWriteCnt 0051  
                     ?_persistence_register 0001                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 1898  
               __end_ofi2_color_writetoaddr 19DE                           ?_color_click_init 0001  
                         __end_of_norm_stop 184E                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 159E  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 1534                               _interrupt_ctr 004A  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 135C  
                                ??_turnLeft 0020                         color_read_RGBC@temp 0014  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 14C2                       ??i2_I2C_2_Master_Stop 0002  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 009C  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 1880  
                            _fullSpeedAhead 1272                              __end_of___wmul 199E  
                       color_read_Clear@tmp 0012                         start_initialization 1880  
                    ??_persistence_register 000D                               _TxBufWriteCnt 004F  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 13DC  
                    __end_of_fullSpeedAhead 135C                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 1AA0  
              __end_ofi2_I2C_2_Master_Write 1A6E                                 __pbssCOMRAM 004A  
                            _motor_response 0E14                                    ?_HighISR 0001  
                          ___lwdiv@dividend 000F                             motor_response@j 0028  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                         motor_response@j_455 002A  
                       motor_response@j_456 002C                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 1928  
                         _I2C_2_Master_Init 18AA                           _I2C_2_Master_Read 17A6  
                         _I2C_2_Master_Stop 1A78                                _RxBufReadCnt 0050  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 101A                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  _PIR0bits 000E33                                    _PIR4bits 000E37  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 181C                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 1950  
                 __end_of_I2C_2_Master_Init 18D4                   __end_of_I2C_2_Master_Read 17E8  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 1A82  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0016                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 004E                    i2color_writetoaddr@value 0003  
                                 _turnRight 1450               __end_of_Color_Interrupts_init 19F8  
                           ?_motor_response 0020               __end_of_I2C_2_Master_RepStart 1A78  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 1186  
                      i2_I2C_2_Master_Start 1A96                        i2_I2C_2_Master_Write 1A62  
                                  __Hrparam 0000                                    __Lrparam 0000  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 1928                i2_Color_Interrupts_threshold 18FE  
               __end_ofi2_I2C_2_Master_Idle 1978                 __end_ofi2_I2C_2_Master_Stop 1A96  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               ??_tricolorLED 0009  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 1272  
                                  __ptext11 101A                                    __ptext20 17A6  
                                  __ptext12 1978                                    __ptext21 17E8  
                                  __ptext13 13DC                                    __ptext30 1928  
                                  __ptext22 18AA                                    __ptext14 1608  
                                  __ptext23 1A28                                    __ptext15 1666  
                                  __ptext40 1950                                    __ptext32 184E  
                                  __ptext24 18D4                                    __ptext16 16B6  
                                  __ptext33 1A56                                    __ptext25 19DE  
                                  __ptext17 1706                                    __ptext34 18FE  
                                  __ptext26 199E                                    __ptext18 1756  
                                  __ptext35 19F8                                    __ptext27 1A4A  
                                  __ptext19 1A6E                                    __ptext36 19BE  
                                  __ptext28 1A78                                    __ptext37 1A62  
                                  __ptext29 1A82                                    __ptext38 1A8C  
                                  __ptext39 1A96                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 0030  
                                  int$flags 0052          __end_of_Color_Interrupts_threshold 18FE  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 18D4  
                                  _turnLeft 14C2                                  _INTCONbits 000FF2  
                               _setMotorPWM 101A                                motorLinit@mL 0009  
                       __end_of_tricolorLED 1A28                                    intlevel2 0000  
                        __end_of_motorLinit 1608                          __end_of_motorRinit 159E  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 1A12  
                          _color_click_init 17E8                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 004C  
                    i2_persistence_register 1A56                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
