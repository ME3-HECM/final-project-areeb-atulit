

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 10:47:43 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   003CBE                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _upperThreshold
   116   003CBE  07D0               	dw	2000
   117   000000                     _TRISCbits	set	3971
   118   000000                     _TRISBbits	set	3970
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATFbits	set	3966
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISAbits	set	3969
   127   000000                     _TRISEbits	set	3973
   128   000000                     _SSP2CON2bits	set	3802
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _ANSELFbits	set	3764
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _TRISGbits	set	3975
   138   000000                     _TRISHbits	set	3976
   139   000000                     _PORTFbits	set	3982
   140   000000                     _LATDbits	set	3964
   141   000000                     _T2PR	set	4028
   142   000000                     _T2CONbits	set	4029
   143   000000                     _TMR0L	set	4051
   144   000000                     _TMR0H	set	4052
   145   000000                     _T0CON0bits	set	4053
   146   000000                     _T0CON1bits	set	4054
   147   000000                     _INTCONbits	set	4082
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _RC4REG	set	3811
   154   000000                     _SP4BRGL	set	3813
   155   000000                     _TX4STAbits	set	3816
   156   000000                     _BAUD4CONbits	set	3817
   157   000000                     _SSP2CON2	set	3802
   158   000000                     _SSP2STAT	set	3800
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _PIE4bits	set	3629
   162   000000                     _RC0PPS	set	3682
   163   000000                     _RD5PPS	set	3695
   164   000000                     _RE2PPS	set	3700
   165   000000                     _ANSELBbits	set	3738
   166   000000                     _RD6PPS	set	3696
   167   000000                     _RC7PPS	set	3689
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _PIR0bits	set	3635
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181                           
   182                           	psect	smallconst
   183   000E00                     __psmallconst:
   184                           	callstack 0
   185   000E00  00                 	db	0
   186   000E01                     
   187                           ; BSR set to: 14
   188   000E01  52                 	db	82	;'R'
   189   000E02  47                 	db	71	;'G'
   190   000E03  42                 	db	66	;'B'
   191   000E04  43                 	db	67	;'C'
   192   000E05  3A                 	db	58	;':'
   193   000E06  25                 	db	37
   194   000E07  66                 	db	102	;'f'
   195   000E08  20                 	db	32
   196   000E09  25                 	db	37
   197   000E0A  66                 	db	102	;'f'
   198   000E0B  20                 	db	32
   199   000E0C  25                 	db	37
   200   000E0D  66                 	db	102	;'f'
   201   000E0E  20                 	db	32
   202   000E0F  25                 	db	37
   203   000E10  66                 	db	102	;'f'
   204   000E11  20                 	db	32
   205   000E12  25                 	db	37
   206   000E13  66                 	db	102	;'f'
   207   000E14  0A                 	db	10
   208   000E15  00                 	db	0
   209   000E16  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214   003984                     __pcinit:
   215                           	callstack 0
   216   003984                     start_initialization:
   217                           	callstack 0
   218   003984                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (2 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223   003984  0EBE               	movlw	low __pidataBANK0
   224   003986  6EF6               	movwf	tblptrl,c
   225   003988  0E3C               	movlw	high __pidataBANK0
   226   00398A  6EF7               	movwf	tblptrh,c
   227   00398C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228   00398E  6EF8               	movwf	tblptru,c
   229   003990  0009               	tblrd		*+	;fetch initializer
   230   003992  CFF5 F0EA          	movff	tablat,__pdataBANK0
   231   003996  0009               	tblrd		*+	;fetch initializer
   232   003998  CFF5 F0EB          	movff	tablat,__pdataBANK0+1
   233                           
   234                           ; Clear objects allocated to BANK1 (60 bytes)
   235   00399C  EE01  F000         	lfsr	0,__pbssBANK1
   236   0039A0  0E3C               	movlw	60
   237   0039A2                     clear_0:
   238   0039A2  6AEE               	clrf	postinc0,c
   239   0039A4  06E8               	decf	wreg,f,c
   240   0039A6  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (54 bytes)
   243   0039A8  EE00  F0B4         	lfsr	0,__pbssBANK0
   244   0039AC  0E36               	movlw	54
   245   0039AE                     clear_1:
   246   0039AE  6AEE               	clrf	postinc0,c
   247   0039B0  06E8               	decf	wreg,f,c
   248   0039B2  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (24 bytes)
   251   0039B4  EE00  F03F         	lfsr	0,__pbssCOMRAM
   252   0039B8  0E18               	movlw	24
   253   0039BA                     clear_2:
   254   0039BA  6AEE               	clrf	postinc0,c
   255   0039BC  06E8               	decf	wreg,f,c
   256   0039BE  E1FD               	bnz	clear_2
   257   0039C0                     end_of_initialization:
   258                           	callstack 0
   259   0039C0                     __end_of__initialization:
   260                           	callstack 0
   261   0039C0  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262   0039C2  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263   0039C4  0E00               	movlw	low (__Lsmallconst shr (0+16))
   264   0039C6  6EF8               	movwf	tblptru,c
   265   0039C8  0E0E               	movlw	high __Lsmallconst
   266   0039CA  6EF7               	movwf	tblptrh,c
   267   0039CC  0100               	movlb	0
   268   0039CE  EF5C  F013         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00003F                     __pbssCOMRAM:
   272                           	callstack 0
   273   00003F                     _CR2L:
   274                           	callstack 0
   275   00003F                     	ds	4
   276   000043                     _CR2U:
   277                           	callstack 0
   278   000043                     	ds	4
   279   000047                     _CR1L:
   280                           	callstack 0
   281   000047                     	ds	4
   282   00004B                     _amb_clear:
   283                           	callstack 0
   284   00004B                     	ds	2
   285   00004D                     _amb_red:
   286                           	callstack 0
   287   00004D                     	ds	2
   288   00004F                     _lost_ctr:
   289                           	callstack 0
   290   00004F                     	ds	2
   291   000051                     _buggy_step:
   292                           	callstack 0
   293   000051                     	ds	2
   294   000053                     _TxBufReadCnt:
   295                           	callstack 0
   296   000053                     	ds	1
   297   000054                     _TxBufWriteCnt:
   298                           	callstack 0
   299   000054                     	ds	1
   300   000055                     _RxBufReadCnt:
   301                           	callstack 0
   302   000055                     	ds	1
   303   000056                     _RxBufWriteCnt:
   304                           	callstack 0
   305   000056                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308   0000B4                     __pbssBANK0:
   309                           	callstack 0
   310   0000B4                     _EUSART4RXbuf:
   311                           	callstack 0
   312   0000B4                     	ds	20
   313   0000C8                     _CR3L:
   314                           	callstack 0
   315   0000C8                     	ds	4
   316   0000CC                     _CR3U:
   317                           	callstack 0
   318   0000CC                     	ds	4
   319   0000D0                     _lowerThreshold:
   320                           	callstack 0
   321   0000D0                     	ds	2
   322   0000D2                     _amb_blue:
   323                           	callstack 0
   324   0000D2                     	ds	2
   325   0000D4                     _amb_green:
   326                           	callstack 0
   327   0000D4                     	ds	2
   328   0000D6                     _interrupt_ctr:
   329                           	callstack 0
   330   0000D6                     	ds	2
   331   0000D8                     _interrupt_flag:
   332                           	callstack 0
   333   0000D8                     	ds	2
   334   0000DA                     _motor_return:
   335                           	callstack 0
   336   0000DA                     	ds	1
   337   0000DB                     _buggy_path:
   338                           	callstack 0
   339   0000DB                     	ds	15
   340                           
   341                           	psect	dataBANK0
   342   0000EA                     __pdataBANK0:
   343                           	callstack 0
   344   0000EA                     _upperThreshold:
   345                           	callstack 0
   346   0000EA                     	ds	2
   347                           
   348                           	psect	bssBANK1
   349   000100                     __pbssBANK1:
   350                           	callstack 0
   351   000100                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000100                     	ds	60
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     rangeCalibrate@RGBC:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000060                     	ds	2
   363   000062                     rangeCalibrate@mL:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000062                     	ds	2
   368   000064                     rangeCalibrate@mR:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372   000064                     	ds	2
   373   000066                     rangeCalibrate@clearArr:
   374                           	callstack 0
   375                           
   376                           ; 24 bytes @ 0x6
   377   000066                     	ds	24
   378   00007E                     rangeCalibrate@calibCtr:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1E
   382   00007E                     	ds	2
   383   000080                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x20
   386   000080                     	ds	2
   387   000082                     main@RGBC:
   388                           	callstack 0
   389                           
   390                           ; 32 bytes @ 0x22
   391   000082                     	ds	32
   392   0000A2                     main@mL:
   393                           	callstack 0
   394                           
   395                           ; 9 bytes @ 0x42
   396   0000A2                     	ds	9
   397   0000AB                     main@mR:
   398                           	callstack 0
   399                           
   400                           ; 9 bytes @ 0x4B
   401   0000AB                     	ds	9
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ??i2_I2C_2_Master_Idle:
   407   000001                     
   408                           ; 1 bytes @ 0x0
   409   000001                     	ds	1
   410   000002                     i2I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414   000002                     	ds	1
   415   000003                     i2color_writetoaddr@value:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     i2color_writetoaddr@address:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x3
   424   000004                     	ds	1
   425   000005                     ??i2_Color_Interrupts_init:
   426   000005                     i2Color_Interrupts_threshold@upperThreshold:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x4
   430   000005                     	ds	2
   431   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435   000007                     	ds	2
   436   000009                     ??_I2C_2_Master_Idle:
   437   000009                     ?___wmul:
   438                           	callstack 0
   439   000009                     ?___fladd:
   440                           	callstack 0
   441   000009                     initDCmotorsPWM@PWMperiod:
   442                           	callstack 0
   443   000009                     motorLinit@mL:
   444                           	callstack 0
   445   000009                     motorRinit@mR:
   446                           	callstack 0
   447   000009                     motorTRIS@mL:
   448                           	callstack 0
   449   000009                     ___wmul@multiplier:
   450                           	callstack 0
   451   000009                     ___flge@ff1:
   452                           	callstack 0
   453   000009                     ___fladd@b:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x8
   457   000009                     	ds	1
   458   00000A                     ??_I2C_2_Master_Read:
   459   00000A                     I2C_2_Master_Write@data_byte:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x9
   463   00000A                     	ds	1
   464   00000B                     color_writetoaddr@value:
   465                           	callstack 0
   466   00000B                     I2C_2_Master_Read@ack:
   467                           	callstack 0
   468   00000B                     motorTRIS@mR:
   469                           	callstack 0
   470   00000B                     ___wmul@multiplicand:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474   00000B                     	ds	1
   475   00000C                     color_writetoaddr@address:
   476                           	callstack 0
   477   00000C                     I2C_2_Master_Read@tmp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xB
   481   00000C                     	ds	1
   482   00000D                     ??_Color_Interrupts_init:
   483   00000D                     ??_color_click_init:
   484   00000D                     ?_color_read_Red:
   485                           	callstack 0
   486   00000D                     ?_color_read_Green:
   487                           	callstack 0
   488   00000D                     ?_color_read_Blue:
   489                           	callstack 0
   490   00000D                     ?_color_read_Clear:
   491                           	callstack 0
   492   00000D                     Color_Interrupts_threshold@upperThreshold:
   493                           	callstack 0
   494   00000D                     ___wmul@product:
   495                           	callstack 0
   496   00000D                     ___flge@ff2:
   497                           	callstack 0
   498   00000D                     ___fladd@a:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0xC
   502   00000D                     	ds	2
   503   00000F                     ??_color_read_Red:
   504   00000F                     ??_color_read_Green:
   505   00000F                     ??_color_read_Blue:
   506   00000F                     ??_color_read_Clear:
   507   00000F                     ?___lwdiv:
   508                           	callstack 0
   509   00000F                     Color_Interrupts_threshold@lowerThreshold:
   510                           	callstack 0
   511   00000F                     ___lwdiv@dividend:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515   00000F                     	ds	2
   516   000011                     ??___fladd:
   517   000011                     ??___flge:
   518   000011                     ___lwdiv@divisor:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522   000011                     	ds	1
   523   000012                     color_read_Red@tmp:
   524                           	callstack 0
   525   000012                     color_read_Green@tmp:
   526                           	callstack 0
   527   000012                     color_read_Blue@tmp:
   528                           	callstack 0
   529   000012                     color_read_Clear@tmp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x11
   533   000012                     	ds	1
   534   000013                     ___lwdiv@quotient:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538   000013                     	ds	1
   539   000014                     ?___xxtofl:
   540                           	callstack 0
   541   000014                     ___xxtofl@val:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x13
   545   000014                     	ds	1
   546   000015                     ___lwdiv@counter:
   547                           	callstack 0
   548   000015                     ___fladd@signs:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x14
   552   000015                     	ds	1
   553   000016                     ___fladd@aexp:
   554                           	callstack 0
   555   000016                     setMotorPWM@m:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x15
   559   000016                     	ds	1
   560   000017                     ___fladd@bexp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x16
   564   000017                     	ds	1
   565   000018                     ??_setMotorPWM:
   566   000018                     ??___xxtofl:
   567   000018                     ___fladd@grs:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x17
   571   000018                     	ds	2
   572   00001A                     setMotorPWM@posDuty:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576   00001A                     	ds	1
   577   00001B                     setMotorPWM@negDuty:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581   00001B                     	ds	1
   582   00001C                     ___xxtofl@sign:
   583                           	callstack 0
   584   00001C                     norm_stop@mL:
   585                           	callstack 0
   586   00001C                     turnLeft@mL:
   587                           	callstack 0
   588   00001C                     turnRight@mL:
   589                           	callstack 0
   590   00001C                     fullSpeedAhead@mL:
   591                           	callstack 0
   592   00001C                     wallSmash@mL:
   593                           	callstack 0
   594   00001C                     reverse@mL:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   00001C                     	ds	1
   599   00001D                     ___xxtofl@exp:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1C
   603   00001D                     	ds	1
   604   00001E                     norm_stop@mR:
   605                           	callstack 0
   606   00001E                     turnLeft@mR:
   607                           	callstack 0
   608   00001E                     turnRight@mR:
   609                           	callstack 0
   610   00001E                     fullSpeedAhead@mR:
   611                           	callstack 0
   612   00001E                     wallSmash@mR:
   613                           	callstack 0
   614   00001E                     reverse@mR:
   615                           	callstack 0
   616   00001E                     ___xxtofl@arg:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1D
   620   00001E                     	ds	2
   621   000020                     ??_reverse:
   622   000020                     
   623                           ; 1 bytes @ 0x1F
   624   000020                     	ds	1
   625   000021                     turnPrep@mL:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x20
   629   000021                     	ds	1
   630   000022                     ?___fldiv:
   631                           	callstack 0
   632   000022                     color_read_RGBC@temp:
   633                           	callstack 0
   634   000022                     ___fldiv@b:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x21
   638   000022                     	ds	1
   639   000023                     turnPrep@mR:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x22
   643   000023                     	ds	1
   644   000024                     
   645                           ; 1 bytes @ 0x23
   646   000024                     	ds	1
   647   000025                     ??_turnPrep:
   648                           
   649                           ; 1 bytes @ 0x24
   650   000025                     	ds	1
   651   000026                     ___fldiv@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x25
   655   000026                     	ds	1
   656   000027                     motor_response@temp:
   657                           	callstack 0
   658   000027                     motor_retrace@buggy_path:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x26
   662   000027                     	ds	2
   663   000029                     motor_response@mL:
   664                           	callstack 0
   665   000029                     motor_retrace@mL:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x28
   669   000029                     	ds	1
   670   00002A                     ??___fldiv:
   671                           
   672                           ; 1 bytes @ 0x29
   673   00002A                     	ds	1
   674   00002B                     motor_response@mR:
   675                           	callstack 0
   676   00002B                     motor_retrace@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2A
   680   00002B                     	ds	2
   681   00002D                     ??_motor_response:
   682   00002D                     ??_motor_retrace:
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@rem:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2D
   690   00002E                     	ds	1
   691   00002F                     motor_response@j:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2E
   695   00002F                     	ds	3
   696   000032                     ___fldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x31
   700   000032                     	ds	1
   701   000033                     ___fldiv@new_exp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x32
   705   000033                     	ds	2
   706   000035                     ___fldiv@grs:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x34
   710   000035                     	ds	4
   711   000039                     ___fldiv@bexp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x38
   715   000039                     	ds	1
   716   00003A                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x39
   720   00003A                     	ds	1
   721   00003B                     color_normalise@RGBC:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3A
   725   00003B                     	ds	2
   726   00003D                     ??_rangeCalibrate:
   727                           
   728                           ; 1 bytes @ 0x3C
   729   00003D                     	ds	2
   730                           
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 21 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  buf           100    0        unsigned char [100]
   741 ;;  RGBC           32   34[BANK0 ] struct RGBC_val
   742 ;;  mR              9   75[BANK0 ] struct DC_motor
   743 ;;  mL              9   66[BANK0 ] struct DC_motor
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;Total ram usage:       52 bytes
   758 ;; Hardware stack levels required when called: 11
   759 ;; This function calls:
   760 ;;		_Color_Interrupts_init
   761 ;;		_Color_Interrupts_threshold
   762 ;;		_Interrupts_init
   763 ;;		_calibSwitchInit
   764 ;;		_color_click_init
   765 ;;		_color_normalise
   766 ;;		_color_read_RGBC
   767 ;;		_fullSpeedAhead
   768 ;;		_initDCmotorsPWM
   769 ;;		_motorLinit
   770 ;;		_motorRinit
   771 ;;		_motorTRIS
   772 ;;		_motor_response
   773 ;;		_motor_retrace
   774 ;;		_norm_stop
   775 ;;		_persistence_register
   776 ;;		_rangeCalibrate
   777 ;;		_tricolorLED
   778 ;;		_turnLeft
   779 ;;		_wallSmash
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786   0026B8                     __ptext0:
   787                           	callstack 0
   788   0026B8                     _main:
   789                           	callstack 20
   790   0026B8                     
   791                           ;main.c: 23:     tricolorLED();
   792   0026B8  EC15  F01E         	call	_tricolorLED	;wreg free
   793   0026BC                     
   794                           ;main.c: 24:     color_click_init();
   795   0026BC  EC0A  F01D         	call	_color_click_init	;wreg free
   796   0026C0                     
   797                           ;main.c: 27:     initDCmotorsPWM(200);
   798   0026C0  0E00               	movlw	0
   799   0026C2  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   800   0026C4  0EC8               	movlw	200
   801   0026C6  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   802   0026C8  ECA1  F01A         	call	_initDCmotorsPWM	;wreg free
   803   0026CC                     
   804                           ;main.c: 28:     DC_motor mL, mR;;main.c: 29:     motorLinit(&mL);
   805   0026CC  0EA2               	movlw	low main@mL
   806   0026CE  6E09               	movwf	motorLinit@mL^0,c
   807   0026D0  0E00               	movlw	high main@mL
   808   0026D2  6E0A               	movwf	(motorLinit@mL+1)^0,c
   809   0026D4  ECC2  F01B         	call	_motorLinit	;wreg free
   810   0026D8                     
   811                           ;main.c: 30:     motorRinit(&mR);
   812   0026D8  0EAB               	movlw	low main@mR
   813   0026DA  6E09               	movwf	motorRinit@mR^0,c
   814   0026DC  0E00               	movlw	high main@mR
   815   0026DE  6E0A               	movwf	(motorRinit@mR+1)^0,c
   816   0026E0  EC8D  F01B         	call	_motorRinit	;wreg free
   817   0026E4                     
   818                           ;main.c: 31:     motorTRIS(&mL, &mR);
   819   0026E4  0EA2               	movlw	low main@mL
   820   0026E6  6E09               	movwf	motorTRIS@mL^0,c
   821   0026E8  0E00               	movlw	high main@mL
   822   0026EA  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   823   0026EC  0EAB               	movlw	low main@mR
   824   0026EE  6E0B               	movwf	motorTRIS@mR^0,c
   825   0026F0  0E00               	movlw	high main@mR
   826   0026F2  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   827   0026F4  EC39  F01E         	call	_motorTRIS	;wreg free
   828   0026F8                     
   829                           ;main.c: 36:     TRISDbits.TRISD7 = 0;
   830   0026F8  9E84               	bcf	132,7,c	;volatile
   831   0026FA                     
   832                           ;main.c: 37:     LATDbits.LATD7 = 0;
   833   0026FA  9E7C               	bcf	124,7,c	;volatile
   834   0026FC                     
   835                           ;main.c: 38:     TRISHbits.TRISH3 = 0;
   836   0026FC  9688               	bcf	136,3,c	;volatile
   837   0026FE                     
   838                           ;main.c: 39:     LATHbits.LATH3 = 0;
   839   0026FE  9680               	bcf	128,3,c	;volatile
   840   002700                     
   841                           ;main.c: 42:     RGBC_val RGBC;;main.c: 43:     calibSwitchInit();
   842   002700  EC52  F01E         	call	_calibSwitchInit	;wreg free
   843   002704                     
   844                           ;main.c: 44:     rangeCalibrate(&RGBC,&mL, &mR);
   845   002704  0E82               	movlw	low main@RGBC
   846   002706  0100               	movlb	0	; () banked
   847   002708  6F60               	movwf	rangeCalibrate@RGBC& (0+255),b
   848   00270A  0E00               	movlw	high main@RGBC
   849   00270C  6F61               	movwf	(rangeCalibrate@RGBC+1)& (0+255),b
   850   00270E  0EA2               	movlw	low main@mL
   851   002710  6F62               	movwf	rangeCalibrate@mL& (0+255),b
   852   002712  0E00               	movlw	high main@mL
   853   002714  6F63               	movwf	(rangeCalibrate@mL+1)& (0+255),b
   854   002716  0EAB               	movlw	low main@mR
   855   002718  6F64               	movwf	rangeCalibrate@mR& (0+255),b
   856   00271A  0E00               	movlw	high main@mR
   857   00271C  6F65               	movwf	(rangeCalibrate@mR+1)& (0+255),b
   858   00271E  ECE7  F014         	call	_rangeCalibrate	;wreg free
   859   002722                     
   860                           ;main.c: 47:     Interrupts_init();
   861   002722  EC0A  F01E         	call	_Interrupts_init	;wreg free
   862   002726                     
   863                           ;main.c: 48:     Color_Interrupts_init();
   864   002726  ECF0  F01D         	call	_Color_Interrupts_init	;wreg free
   865   00272A                     
   866                           ;main.c: 49:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   867   00272A  C0EA  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   868   00272E  C0EB  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   869   002732  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   870   002736  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   871   00273A  EC6B  F01D         	call	_Color_Interrupts_threshold	;wreg free
   872   00273E                     
   873                           ;main.c: 50:     persistence_register();
   874   00273E  EC1C  F01E         	call	_persistence_register	;wreg free
   875   002742                     
   876                           ;main.c: 53:     char buf[100];;main.c: 54:     motor_return = 0;
   877   002742  0E00               	movlw	0
   878   002744  0100               	movlb	0	; () banked
   879   002746  6FDA               	movwf	_motor_return& (0+255),b
   880   002748                     
   881                           ; BSR set to: 0
   882                           ;main.c: 55:     buggy_step = 0;
   883   002748  0E00               	movlw	0
   884   00274A  6E52               	movwf	(_buggy_step+1)^0,c
   885   00274C  0E00               	movlw	0
   886   00274E  6E51               	movwf	_buggy_step^0,c
   887   002750                     
   888                           ; BSR set to: 0
   889                           ;main.c: 56:     lost_ctr = 0;
   890   002750  0E00               	movlw	0
   891   002752  6E50               	movwf	(_lost_ctr+1)^0,c
   892   002754  0E00               	movlw	0
   893   002756  6E4F               	movwf	_lost_ctr^0,c
   894   002758                     
   895                           ; BSR set to: 0
   896                           ;main.c: 57:     interrupt_ctr = 0;
   897   002758  0E00               	movlw	0
   898   00275A  6FD7               	movwf	(_interrupt_ctr+1)& (0+255),b
   899   00275C  0E00               	movlw	0
   900   00275E  6FD6               	movwf	_interrupt_ctr& (0+255),b
   901   002760                     
   902                           ; BSR set to: 0
   903                           ;main.c: 62:     TRISHbits.TRISH0 = 0;
   904   002760  9088               	bcf	136,0,c	;volatile
   905   002762                     
   906                           ; BSR set to: 0
   907                           ;main.c: 63:     LATHbits.LATH0 = 0;
   908   002762  9080               	bcf	128,0,c	;volatile
   909   002764                     
   910                           ; BSR set to: 0
   911                           ;main.c: 66:     TRISFbits.TRISF0 = 0;
   912   002764  9086               	bcf	134,0,c	;volatile
   913   002766                     
   914                           ; BSR set to: 0
   915                           ;main.c: 67:     LATFbits.LATF0 = 0;
   916   002766  907E               	bcf	126,0,c	;volatile
   917   002768                     
   918                           ; BSR set to: 0
   919                           ;main.c: 70:     TRISDbits.TRISD4 = 0;
   920   002768  9884               	bcf	132,4,c	;volatile
   921   00276A                     
   922                           ; BSR set to: 0
   923                           ;main.c: 71:     LATDbits.LATD4 = 0;
   924   00276A  987C               	bcf	124,4,c	;volatile
   925   00276C                     
   926                           ; BSR set to: 0
   927                           ;main.c: 74:     TRISDbits.TRISD3 = 0;
   928   00276C  9684               	bcf	132,3,c	;volatile
   929   00276E                     
   930                           ; BSR set to: 0
   931                           ;main.c: 75:     LATDbits.LATD3 = 0;
   932   00276E  967C               	bcf	124,3,c	;volatile
   933   002770                     l4038:
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 79:         fullSpeedAhead(&mL, &mR);
   937   002770  0EA2               	movlw	low main@mL
   938   002772  6E1C               	movwf	fullSpeedAhead@mL^0,c
   939   002774  0E00               	movlw	high main@mL
   940   002776  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   941   002778  0EAB               	movlw	low main@mR
   942   00277A  6E1E               	movwf	fullSpeedAhead@mR^0,c
   943   00277C  0E00               	movlw	high main@mR
   944   00277E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   945   002780  ECC9  F019         	call	_fullSpeedAhead	;wreg free
   946   002784                     
   947                           ;main.c: 81:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
   948   002784  0100               	movlb	0	; () banked
   949   002786  05D8               	decf	_interrupt_flag& (0+255),w,b
   950   002788  11D9               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   951   00278A  A4D8               	btfss	status,2,c
   952   00278C  EFCA  F013         	goto	u3221
   953   002790  EFCC  F013         	goto	u3220
   954   002794                     u3221:
   955   002794  EFB8  F013         	goto	l4038
   956   002798                     u3220:
   957   002798                     
   958                           ; BSR set to: 0
   959   002798  BFD7               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   960   00279A  EFD8  F013         	goto	u3231
   961   00279E  51D7               	movf	(_interrupt_ctr+1)& (0+255),w,b
   962   0027A0  E109               	bnz	u3230
   963   0027A2  0E02               	movlw	2
   964   0027A4  5DD6               	subwf	_interrupt_ctr& (0+255),w,b
   965   0027A6  A0D8               	btfss	status,0,c
   966   0027A8  EFD8  F013         	goto	u3231
   967   0027AC  EFDA  F013         	goto	u3230
   968   0027B0                     u3231:
   969   0027B0  EFB8  F013         	goto	l4038
   970   0027B4                     u3230:
   971   0027B4                     
   972                           ; BSR set to: 0
   973                           ;main.c: 82:             norm_stop(&mL, &mR);
   974   0027B4  0EA2               	movlw	low main@mL
   975   0027B6  6E1C               	movwf	norm_stop@mL^0,c
   976   0027B8  0E00               	movlw	high main@mL
   977   0027BA  6E1D               	movwf	(norm_stop@mL+1)^0,c
   978   0027BC  0EAB               	movlw	low main@mR
   979   0027BE  6E1E               	movwf	norm_stop@mR^0,c
   980   0027C0  0E00               	movlw	high main@mR
   981   0027C2  6E1F               	movwf	(norm_stop@mR+1)^0,c
   982   0027C4  EC24  F01D         	call	_norm_stop	;wreg free
   983   0027C8                     
   984                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   985   0027C8  0E52               	movlw	82
   986   0027CA  0100               	movlb	0	; () banked
   987   0027CC  6F81               	movwf	(??_main+1)& (0+255),b
   988   0027CE  0E2B               	movlw	43
   989   0027D0  6F80               	movwf	??_main& (0+255),b
   990   0027D2  0E00               	movlw	0
   991   0027D4                     u3287:
   992   0027D4  2EE8               	decfsz	wreg,f,c
   993   0027D6  D7FE               	bra	u3287
   994   0027D8  2F80               	decfsz	??_main& (0+255),f,b
   995   0027DA  D7FC               	bra	u3287
   996   0027DC  2F81               	decfsz	(??_main+1)& (0+255),f,b
   997   0027DE  D7FA               	bra	u3287
   998   0027E0  F000               	nop	
   999   0027E2                     
  1000                           ;main.c: 84:             LATDbits.LATD7 = 0;
  1001   0027E2  9E7C               	bcf	124,7,c	;volatile
  1002   0027E4                     
  1003                           ;main.c: 86:             if (motor_return == 0) {
  1004   0027E4  0100               	movlb	0	; () banked
  1005   0027E6  51DA               	movf	_motor_return& (0+255),w,b
  1006   0027E8  A4D8               	btfss	status,2,c
  1007   0027EA  EFF9  F013         	goto	u3241
  1008   0027EE  EFFB  F013         	goto	u3240
  1009   0027F2                     u3241:
  1010   0027F2  EF3B  F014         	goto	l355
  1011   0027F6                     u3240:
  1012   0027F6                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 87:                 LATHbits.LATH3 = 1;
  1015   0027F6  8680               	bsf	128,3,c	;volatile
  1016   0027F8                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 88:                 wallSmash(&mL, &mR);
  1019   0027F8  0EA2               	movlw	low main@mL
  1020   0027FA  6E1C               	movwf	wallSmash@mL^0,c
  1021   0027FC  0E00               	movlw	high main@mL
  1022   0027FE  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1023   002800  0EAB               	movlw	low main@mR
  1024   002802  6E1E               	movwf	wallSmash@mR^0,c
  1025   002804  0E00               	movlw	high main@mR
  1026   002806  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1027   002808  EC54  F019         	call	_wallSmash	;wreg free
  1028   00280C                     
  1029                           ;main.c: 89:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1030   00280C  0E31               	movlw	49
  1031   00280E  0100               	movlb	0	; () banked
  1032   002810  6F81               	movwf	(??_main+1)& (0+255),b
  1033   002812  0EB4               	movlw	180
  1034   002814  6F80               	movwf	??_main& (0+255),b
  1035   002816  0E65               	movlw	101
  1036   002818                     u3297:
  1037   002818  2EE8               	decfsz	wreg,f,c
  1038   00281A  D7FE               	bra	u3297
  1039   00281C  2F80               	decfsz	??_main& (0+255),f,b
  1040   00281E  D7FC               	bra	u3297
  1041   002820  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1042   002822  D7FA               	bra	u3297
  1043   002824  D000               	nop2	
  1044   002826                     
  1045                           ;main.c: 90:                 color_read_RGBC(&RGBC);
  1046   002826  0E82               	movlw	low main@RGBC
  1047   002828  6E22               	movwf	color_read_RGBC@temp^0,c
  1048   00282A  0E00               	movlw	high main@RGBC
  1049   00282C  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1050   00282E  EC3E  F01A         	call	_color_read_RGBC	;wreg free
  1051   002832                     
  1052                           ;main.c: 91:                 color_normalise(&RGBC);
  1053   002832  0E82               	movlw	low main@RGBC
  1054   002834  6E3B               	movwf	color_normalise@RGBC^0,c
  1055   002836  0E00               	movlw	high main@RGBC
  1056   002838  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1057   00283A  ECE8  F016         	call	_color_normalise	;wreg free
  1058   00283E                     
  1059                           ;main.c: 92:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1060   00283E  0E82               	movlw	low main@RGBC
  1061   002840  6E27               	movwf	motor_response@temp^0,c
  1062   002842  0E00               	movlw	high main@RGBC
  1063   002844  6E28               	movwf	(motor_response@temp+1)^0,c
  1064   002846  0EA2               	movlw	low main@mL
  1065   002848  6E29               	movwf	motor_response@mL^0,c
  1066   00284A  0E00               	movlw	high main@mL
  1067   00284C  6E2A               	movwf	(motor_response@mL+1)^0,c
  1068   00284E  0EAB               	movlw	low main@mR
  1069   002850  6E2B               	movwf	motor_response@mR^0,c
  1070   002852  0E00               	movlw	high main@mR
  1071   002854  6E2C               	movwf	(motor_response@mR+1)^0,c
  1072   002856  EC0C  F007         	call	_motor_response	;wreg free
  1073   00285A  0100               	movlb	0	; () banked
  1074   00285C  6F80               	movwf	??_main& (0+255),b
  1075   00285E  0EDB               	movlw	low _buggy_path
  1076   002860  2451               	addwf	_buggy_step^0,w,c
  1077   002862  6ED9               	movwf	fsr2l,c
  1078   002864  0E00               	movlw	high _buggy_path
  1079   002866  2052               	addwfc	(_buggy_step+1)^0,w,c
  1080   002868  6EDA               	movwf	fsr2h,c
  1081   00286A  C080  FFDF         	movff	??_main,indf2
  1082   00286E                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 93:                 buggy_step++;
  1085   00286E  4A51               	infsnz	_buggy_step^0,f,c
  1086   002870  2A52               	incf	(_buggy_step+1)^0,f,c
  1087                           
  1088                           ;main.c: 95:             } else {
  1089   002872  EFDD  F014         	goto	l4096
  1090   002876                     l355:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 96:                 LATDbits.LATD7 = 1;
  1094   002876  8E7C               	bsf	124,7,c	;volatile
  1095   002878                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 97:                 wallSmash(&mL, &mR);
  1098   002878  0EA2               	movlw	low main@mL
  1099   00287A  6E1C               	movwf	wallSmash@mL^0,c
  1100   00287C  0E00               	movlw	high main@mL
  1101   00287E  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1102   002880  0EAB               	movlw	low main@mR
  1103   002882  6E1E               	movwf	wallSmash@mR^0,c
  1104   002884  0E00               	movlw	high main@mR
  1105   002886  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1106   002888  EC54  F019         	call	_wallSmash	;wreg free
  1107   00288C                     
  1108                           ;main.c: 98:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1109   00288C  0E31               	movlw	49
  1110   00288E  0100               	movlb	0	; () banked
  1111   002890  6F81               	movwf	(??_main+1)& (0+255),b
  1112   002892  0EB4               	movlw	180
  1113   002894  6F80               	movwf	??_main& (0+255),b
  1114   002896  0E65               	movlw	101
  1115   002898                     u3307:
  1116   002898  2EE8               	decfsz	wreg,f,c
  1117   00289A  D7FE               	bra	u3307
  1118   00289C  2F80               	decfsz	??_main& (0+255),f,b
  1119   00289E  D7FC               	bra	u3307
  1120   0028A0  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1121   0028A2  D7FA               	bra	u3307
  1122   0028A4  D000               	nop2	
  1123   0028A6                     
  1124                           ;main.c: 99:                 motor_retrace(&buggy_path, &mL, &mR);
  1125   0028A6  0EDB               	movlw	low _buggy_path
  1126   0028A8  6E27               	movwf	motor_retrace@buggy_path^0,c
  1127   0028AA  0E00               	movlw	high _buggy_path
  1128   0028AC  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1129   0028AE  0EA2               	movlw	low main@mL
  1130   0028B0  6E29               	movwf	motor_retrace@mL^0,c
  1131   0028B2  0E00               	movlw	high main@mL
  1132   0028B4  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1133   0028B6  0EAB               	movlw	low main@mR
  1134   0028B8  6E2B               	movwf	motor_retrace@mR^0,c
  1135   0028BA  0E00               	movlw	high main@mR
  1136   0028BC  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1137   0028BE  ECAB  F00F         	call	_motor_retrace	;wreg free
  1138   0028C2                     
  1139                           ;main.c: 100:                 buggy_step--;
  1140   0028C2  0651               	decf	_buggy_step^0,f,c
  1141   0028C4  A0D8               	btfss	status,0,c
  1142   0028C6  0652               	decf	(_buggy_step+1)^0,f,c
  1143                           
  1144                           ;main.c: 103:                 if (buggy_step == 1) {
  1145   0028C8  0451               	decf	_buggy_step^0,w,c
  1146   0028CA  1052               	iorwf	(_buggy_step+1)^0,w,c
  1147   0028CC  A4D8               	btfss	status,2,c
  1148   0028CE  EF6B  F014         	goto	u3251
  1149   0028D2  EF6D  F014         	goto	u3250
  1150   0028D6                     u3251:
  1151   0028D6  EFDD  F014         	goto	l4096
  1152   0028DA                     u3250:
  1153   0028DA                     
  1154                           ;main.c: 104:                     motor_return = 0;
  1155   0028DA  0E00               	movlw	0
  1156   0028DC  0100               	movlb	0	; () banked
  1157   0028DE  6FDA               	movwf	_motor_return& (0+255),b
  1158   0028E0                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 105:                     LATDbits.LATD4 = 0;
  1161   0028E0  987C               	bcf	124,4,c	;volatile
  1162   0028E2                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 106:                     fullSpeedAhead(&mL, &mR);
  1165   0028E2  0EA2               	movlw	low main@mL
  1166   0028E4  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1167   0028E6  0E00               	movlw	high main@mL
  1168   0028E8  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1169   0028EA  0EAB               	movlw	low main@mR
  1170   0028EC  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1171   0028EE  0E00               	movlw	high main@mR
  1172   0028F0  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1173   0028F2  ECC9  F019         	call	_fullSpeedAhead	;wreg free
  1174   0028F6                     
  1175                           ;main.c: 107:                     _delay((unsigned long)((2500)*(64000000/4000.0)));
  1176   0028F6  0ECB               	movlw	203
  1177   0028F8  0100               	movlb	0	; () banked
  1178   0028FA  6F81               	movwf	(??_main+1)& (0+255),b
  1179   0028FC  0EEC               	movlw	236
  1180   0028FE  6F80               	movwf	??_main& (0+255),b
  1181   002900  0E84               	movlw	132
  1182   002902                     u3317:
  1183   002902  2EE8               	decfsz	wreg,f,c
  1184   002904  D7FE               	bra	u3317
  1185   002906  2F80               	decfsz	??_main& (0+255),f,b
  1186   002908  D7FC               	bra	u3317
  1187   00290A  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1188   00290C  D7FA               	bra	u3317
  1189   00290E  F000               	nop	
  1190   002910                     
  1191                           ;main.c: 108:                     norm_stop(&mL, &mR);
  1192   002910  0EA2               	movlw	low main@mL
  1193   002912  6E1C               	movwf	norm_stop@mL^0,c
  1194   002914  0E00               	movlw	high main@mL
  1195   002916  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1196   002918  0EAB               	movlw	low main@mR
  1197   00291A  6E1E               	movwf	norm_stop@mR^0,c
  1198   00291C  0E00               	movlw	high main@mR
  1199   00291E  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1200   002920  EC24  F01D         	call	_norm_stop	;wreg free
  1201   002924                     
  1202                           ;main.c: 109:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1203   002924  0E29               	movlw	41
  1204   002926  0100               	movlb	0	; () banked
  1205   002928  6F81               	movwf	(??_main+1)& (0+255),b
  1206   00292A  0E96               	movlw	150
  1207   00292C  6F80               	movwf	??_main& (0+255),b
  1208   00292E  0E7F               	movlw	127
  1209   002930                     u3327:
  1210   002930  2EE8               	decfsz	wreg,f,c
  1211   002932  D7FE               	bra	u3327
  1212   002934  2F80               	decfsz	??_main& (0+255),f,b
  1213   002936  D7FC               	bra	u3327
  1214   002938  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1215   00293A  D7FA               	bra	u3327
  1216   00293C                     
  1217                           ;main.c: 110:                     turnLeft(&mL, &mR);
  1218   00293C  0EA2               	movlw	low main@mL
  1219   00293E  6E1C               	movwf	turnLeft@mL^0,c
  1220   002940  0E00               	movlw	high main@mL
  1221   002942  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1222   002944  0EAB               	movlw	low main@mR
  1223   002946  6E1E               	movwf	turnLeft@mR^0,c
  1224   002948  0E00               	movlw	high main@mR
  1225   00294A  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1226   00294C  EC54  F01B         	call	_turnLeft	;wreg free
  1227   002950                     
  1228                           ;main.c: 111:                     _delay((unsigned long)((430)*(64000000/4000.0)));
  1229   002950  0E23               	movlw	35
  1230   002952  0100               	movlb	0	; () banked
  1231   002954  6F81               	movwf	(??_main+1)& (0+255),b
  1232   002956  0EE7               	movlw	231
  1233   002958  6F80               	movwf	??_main& (0+255),b
  1234   00295A  0EF7               	movlw	247
  1235   00295C                     u3337:
  1236   00295C  2EE8               	decfsz	wreg,f,c
  1237   00295E  D7FE               	bra	u3337
  1238   002960  2F80               	decfsz	??_main& (0+255),f,b
  1239   002962  D7FC               	bra	u3337
  1240   002964  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1241   002966  D7FA               	bra	u3337
  1242   002968  D000               	nop2	
  1243   00296A                     
  1244                           ;main.c: 112:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1245   00296A  A080               	btfss	128,0,c	;volatile
  1246   00296C  EFBA  F014         	goto	u3261
  1247   002970  EFBF  F014         	goto	u3260
  1248   002974                     u3261:
  1249   002974  0100               	movlb	0	; () banked
  1250   002976  6B80               	clrf	??_main& (0+255),b
  1251   002978  2B80               	incf	??_main& (0+255),f,b
  1252   00297A  EFC1  F014         	goto	u3278
  1253   00297E                     u3260:
  1254   00297E  0100               	movlb	0	; () banked
  1255   002980  6B80               	clrf	??_main& (0+255),b
  1256   002982                     u3278:
  1257   002982  5080               	movf	128,w,c	;volatile
  1258   002984  1980               	xorwf	??_main& (0+255),w,b
  1259   002986  0BFE               	andlw	-2
  1260   002988  1980               	xorwf	??_main& (0+255),w,b
  1261   00298A  6E80               	movwf	128,c	;volatile
  1262   00298C                     
  1263                           ; BSR set to: 0
  1264                           ;main.c: 113:                     norm_stop(&mL, &mR);
  1265   00298C  0EA2               	movlw	low main@mL
  1266   00298E  6E1C               	movwf	norm_stop@mL^0,c
  1267   002990  0E00               	movlw	high main@mL
  1268   002992  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1269   002994  0EAB               	movlw	low main@mR
  1270   002996  6E1E               	movwf	norm_stop@mR^0,c
  1271   002998  0E00               	movlw	high main@mR
  1272   00299A  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1273   00299C  EC24  F01D         	call	_norm_stop	;wreg free
  1274   0029A0                     
  1275                           ;main.c: 114:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1276   0029A0  0EA3               	movlw	163
  1277   0029A2  0100               	movlb	0	; () banked
  1278   0029A4  6F81               	movwf	(??_main+1)& (0+255),b
  1279   0029A6  0E57               	movlw	87
  1280   0029A8  6F80               	movwf	??_main& (0+255),b
  1281   0029AA  0E02               	movlw	2
  1282   0029AC                     u3347:
  1283   0029AC  2EE8               	decfsz	wreg,f,c
  1284   0029AE  D7FE               	bra	u3347
  1285   0029B0  2F80               	decfsz	??_main& (0+255),f,b
  1286   0029B2  D7FC               	bra	u3347
  1287   0029B4  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1288   0029B6  D7FA               	bra	u3347
  1289   0029B8  F000               	nop	
  1290   0029BA                     l4096:
  1291                           
  1292                           ;main.c: 118:             LATHbits.LATH3 = 0;
  1293   0029BA  9680               	bcf	128,3,c	;volatile
  1294   0029BC                     
  1295                           ;main.c: 119:             interrupt_flag = 0;
  1296   0029BC  0E00               	movlw	0
  1297   0029BE  0100               	movlb	0	; () banked
  1298   0029C0  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  1299   0029C2  0E00               	movlw	0
  1300   0029C4  6FD8               	movwf	_interrupt_flag& (0+255),b
  1301   0029C6  EFB8  F013         	goto	l4038
  1302   0029CA  EF1A  F000         	goto	start
  1303   0029CE                     __end_of_main:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _tricolorLED *****************
  1307 ;; Defined at:
  1308 ;;		line 142 in file "color.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 7
  1329 ;; This function calls:
  1330 ;;		_bLED
  1331 ;;		_gLED
  1332 ;;		_rLED
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text1
  1339   003C2A                     __ptext1:
  1340                           	callstack 0
  1341   003C2A                     _tricolorLED:
  1342                           	callstack 23
  1343   003C2A                     
  1344                           ;color.c: 144:     rLED();
  1345   003C2A  EC56  F01E         	call	_rLED	;wreg free
  1346                           
  1347                           ;color.c: 145:     gLED();
  1348   003C2E  EC59  F01E         	call	_gLED	;wreg free
  1349                           
  1350                           ;color.c: 146:     bLED();
  1351   003C32  EC5C  F01E         	call	_bLED	;wreg free
  1352   003C36  0012               	return		;funcret
  1353   003C38                     __end_of_tricolorLED:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _rLED *****************
  1357 ;; Defined at:
  1358 ;;		line 153 in file "color.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		None
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 6
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_tricolorLED
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text2
  1387   003CAC                     __ptext2:
  1388                           	callstack 0
  1389   003CAC                     _rLED:
  1390                           	callstack 23
  1391   003CAC                     
  1392                           ;color.c: 154:     TRISGbits.TRISG0 = 0;
  1393   003CAC  9087               	bcf	135,0,c	;volatile
  1394                           
  1395                           ;color.c: 155:     LATGbits.LATG0 = 1;
  1396   003CAE  807F               	bsf	127,0,c	;volatile
  1397   003CB0  0012               	return		;funcret
  1398   003CB2                     __end_of_rLED:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _gLED *****************
  1402 ;; Defined at:
  1403 ;;		line 161 in file "color.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		None
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 6
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_tricolorLED
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text3
  1432   003CB2                     __ptext3:
  1433                           	callstack 0
  1434   003CB2                     _gLED:
  1435                           	callstack 23
  1436   003CB2                     
  1437                           ;color.c: 162:     TRISEbits.TRISE7 = 0;
  1438   003CB2  9E85               	bcf	133,7,c	;volatile
  1439                           
  1440                           ;color.c: 163:     LATEbits.LATE7 = 1;
  1441   003CB4  8E7D               	bsf	125,7,c	;volatile
  1442   003CB6  0012               	return		;funcret
  1443   003CB8                     __end_of_gLED:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _bLED *****************
  1447 ;; Defined at:
  1448 ;;		line 169 in file "color.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 6
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_tricolorLED
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text4
  1477   003CB8                     __ptext4:
  1478                           	callstack 0
  1479   003CB8                     _bLED:
  1480                           	callstack 23
  1481   003CB8                     
  1482                           ;color.c: 170:     TRISAbits.TRISA3 = 0;
  1483   003CB8  9681               	bcf	129,3,c	;volatile
  1484                           
  1485                           ;color.c: 171:     LATAbits.LATA3 = 1;
  1486   003CBA  8679               	bsf	121,3,c	;volatile
  1487   003CBC  0012               	return		;funcret
  1488   003CBE                     __end_of_bLED:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _rangeCalibrate *****************
  1492 ;; Defined at:
  1493 ;;		line 189 in file "color.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  RGBC            2    0[BANK0 ] PTR struct RGBC_val
  1496 ;;		 -> main@RGBC(32), 
  1497 ;;  mL              2    2[BANK0 ] PTR struct DC_motor
  1498 ;;		 -> main@mL(9), 
  1499 ;;  mR              2    4[BANK0 ] PTR struct DC_motor
  1500 ;;		 -> main@mR(9), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  calibCtr        2   30[BANK0 ] int 
  1503 ;;  clearArr       24    6[BANK0 ] float [6]
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:       34 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 10
  1520 ;; This function calls:
  1521 ;;		___fladd
  1522 ;;		_color_normalise
  1523 ;;		_color_read_RGBC
  1524 ;;		_norm_stop
  1525 ;;		_wallSmash
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text5
  1532   0029CE                     __ptext5:
  1533                           	callstack 0
  1534   0029CE                     _rangeCalibrate:
  1535                           	callstack 20
  1536   0029CE                     
  1537                           ;color.c: 190:     float clearArr[6];;color.c: 191:     for (int calibCtr=0;calibCtr < 6
      +                          ;){
  1538   0029CE  0E00               	movlw	0
  1539   0029D0  0100               	movlb	0	; () banked
  1540   0029D2  6F7F               	movwf	(rangeCalibrate@calibCtr+1)& (0+255),b
  1541   0029D4  0E00               	movlw	0
  1542   0029D6  6F7E               	movwf	rangeCalibrate@calibCtr& (0+255),b
  1543   0029D8                     l158:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;color.c: 192:         if (!PORTFbits.RF2) {
  1547   0029D8  B48E               	btfsc	142,2,c	;volatile
  1548   0029DA  EFF1  F014         	goto	u3191
  1549   0029DE  EFF3  F014         	goto	u3190
  1550   0029E2                     u3191:
  1551   0029E2  EF71  F015         	goto	l3976
  1552   0029E6                     u3190:
  1553   0029E6                     
  1554                           ; BSR set to: 0
  1555                           ;color.c: 193:             if(calibCtr!=5){
  1556   0029E6  0E05               	movlw	5
  1557   0029E8  197E               	xorwf	rangeCalibrate@calibCtr& (0+255),w,b
  1558   0029EA  117F               	iorwf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1559   0029EC  B4D8               	btfsc	status,2,c
  1560   0029EE  EFFB  F014         	goto	u3201
  1561   0029F2  EFFD  F014         	goto	u3200
  1562   0029F6                     u3201:
  1563   0029F6  EF07  F015         	goto	l3954
  1564   0029FA                     u3200:
  1565   0029FA                     
  1566                           ; BSR set to: 0
  1567                           ;color.c: 194:             wallSmash(mL, mR);}
  1568   0029FA  C062  F01C         	movff	rangeCalibrate@mL,wallSmash@mL
  1569   0029FE  C063  F01D         	movff	rangeCalibrate@mL+1,wallSmash@mL+1
  1570   002A02  C064  F01E         	movff	rangeCalibrate@mR,wallSmash@mR
  1571   002A06  C065  F01F         	movff	rangeCalibrate@mR+1,wallSmash@mR+1
  1572   002A0A  EC54  F019         	call	_wallSmash	;wreg free
  1573   002A0E                     l3954:
  1574                           
  1575                           ;color.c: 195:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1576   002A0E  0E29               	movlw	41
  1577   002A10  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1578   002A12  0E96               	movlw	150
  1579   002A14  6E3D               	movwf	??_rangeCalibrate^0,c
  1580   002A16  0E7F               	movlw	127
  1581   002A18                     u3357:
  1582   002A18  2EE8               	decfsz	wreg,f,c
  1583   002A1A  D7FE               	bra	u3357
  1584   002A1C  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1585   002A1E  D7FC               	bra	u3357
  1586   002A20  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1587   002A22  D7FA               	bra	u3357
  1588   002A24  F000               	nop	
  1589   002A26                     
  1590                           ;color.c: 196:             LATHbits.LATH3 = 1;
  1591   002A26  8680               	bsf	128,3,c	;volatile
  1592   002A28                     
  1593                           ;color.c: 197:             color_read_RGBC(RGBC);
  1594   002A28  C060  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1595   002A2C  C061  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1596   002A30  EC3E  F01A         	call	_color_read_RGBC	;wreg free
  1597   002A34                     
  1598                           ;color.c: 198:             color_normalise(RGBC);
  1599   002A34  C060  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1600   002A38  C061  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1601   002A3C  ECE8  F016         	call	_color_normalise	;wreg free
  1602   002A40                     
  1603                           ;color.c: 199:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1604   002A40  0E29               	movlw	41
  1605   002A42  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1606   002A44  0E96               	movlw	150
  1607   002A46  6E3D               	movwf	??_rangeCalibrate^0,c
  1608   002A48  0E7F               	movlw	127
  1609   002A4A                     u3367:
  1610   002A4A  2EE8               	decfsz	wreg,f,c
  1611   002A4C  D7FE               	bra	u3367
  1612   002A4E  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1613   002A50  D7FC               	bra	u3367
  1614   002A52  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1615   002A54  D7FA               	bra	u3367
  1616   002A56  F000               	nop	
  1617   002A58                     
  1618                           ;color.c: 200:             LATHbits.LATH3 = 0;
  1619   002A58  9680               	bcf	128,3,c	;volatile
  1620   002A5A                     
  1621                           ;color.c: 201:             clearArr[calibCtr] = RGBC->norm_C;
  1622   002A5A  0100               	movlb	0	; () banked
  1623   002A5C  EE20 F01C          	lfsr	2,28
  1624   002A60  5160               	movf	rangeCalibrate@RGBC& (0+255),w,b
  1625   002A62  26D9               	addwf	fsr2l,f,c
  1626   002A64  5161               	movf	(rangeCalibrate@RGBC+1)& (0+255),w,b
  1627   002A66  22DA               	addwfc	fsr2h,f,c
  1628   002A68  0E66               	movlw	low rangeCalibrate@clearArr
  1629   002A6A  6E3D               	movwf	??_rangeCalibrate^0,c
  1630   002A6C  0E00               	movlw	high rangeCalibrate@clearArr
  1631   002A6E  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1632   002A70  90D8               	bcf	status,0,c
  1633   002A72  357E               	rlcf	rangeCalibrate@calibCtr& (0+255),w,b
  1634   002A74  6EE1               	movwf	fsr1l,c
  1635   002A76  357F               	rlcf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1636   002A78  6EE2               	movwf	fsr1h,c
  1637   002A7A  90D8               	bcf	status,0,c
  1638   002A7C  36E1               	rlcf	fsr1l,f,c
  1639   002A7E  36E2               	rlcf	fsr1h,f,c
  1640   002A80  503D               	movf	??_rangeCalibrate^0,w,c
  1641   002A82  26E1               	addwf	fsr1l,f,c
  1642   002A84  503E               	movf	(??_rangeCalibrate+1)^0,w,c
  1643   002A86  22E2               	addwfc	fsr1h,f,c
  1644   002A88  CFDE FFE6          	movff	postinc2,postinc1
  1645   002A8C  CFDE FFE6          	movff	postinc2,postinc1
  1646   002A90  CFDE FFE6          	movff	postinc2,postinc1
  1647   002A94  CFDE FFE6          	movff	postinc2,postinc1
  1648   002A98                     
  1649                           ; BSR set to: 0
  1650                           ;color.c: 202:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1651   002A98  0E29               	movlw	41
  1652   002A9A  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1653   002A9C  0E96               	movlw	150
  1654   002A9E  6E3D               	movwf	??_rangeCalibrate^0,c
  1655   002AA0  0E7F               	movlw	127
  1656   002AA2                     u3377:
  1657   002AA2  2EE8               	decfsz	wreg,f,c
  1658   002AA4  D7FE               	bra	u3377
  1659   002AA6  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1660   002AA8  D7FC               	bra	u3377
  1661   002AAA  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1662   002AAC  D7FA               	bra	u3377
  1663   002AAE  F000               	nop	
  1664   002AB0                     
  1665                           ;color.c: 203:             norm_stop(mL, mR);
  1666   002AB0  C062  F01C         	movff	rangeCalibrate@mL,norm_stop@mL
  1667   002AB4  C063  F01D         	movff	rangeCalibrate@mL+1,norm_stop@mL+1
  1668   002AB8  C064  F01E         	movff	rangeCalibrate@mR,norm_stop@mR
  1669   002ABC  C065  F01F         	movff	rangeCalibrate@mR+1,norm_stop@mR+1
  1670   002AC0  EC24  F01D         	call	_norm_stop	;wreg free
  1671   002AC4                     
  1672                           ;color.c: 204:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1673   002AC4  0E29               	movlw	41
  1674   002AC6  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1675   002AC8  0E96               	movlw	150
  1676   002ACA  6E3D               	movwf	??_rangeCalibrate^0,c
  1677   002ACC  0E7F               	movlw	127
  1678   002ACE                     u3387:
  1679   002ACE  2EE8               	decfsz	wreg,f,c
  1680   002AD0  D7FE               	bra	u3387
  1681   002AD2  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1682   002AD4  D7FC               	bra	u3387
  1683   002AD6  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1684   002AD8  D7FA               	bra	u3387
  1685   002ADA  F000               	nop	
  1686   002ADC                     
  1687                           ;color.c: 205:             calibCtr++;
  1688   002ADC  0100               	movlb	0	; () banked
  1689   002ADE  4B7E               	infsnz	rangeCalibrate@calibCtr& (0+255),f,b
  1690   002AE0  2B7F               	incf	(rangeCalibrate@calibCtr+1)& (0+255),f,b
  1691   002AE2                     l3976:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;color.c: 207:     }
  1695   002AE2  BF7F               	btfsc	(rangeCalibrate@calibCtr+1)& (0+255),7,b
  1696   002AE4  EF7D  F015         	goto	u3211
  1697   002AE8  517F               	movf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1698   002AEA  E109               	bnz	u3210
  1699   002AEC  0E06               	movlw	6
  1700   002AEE  5D7E               	subwf	rangeCalibrate@calibCtr& (0+255),w,b
  1701   002AF0  A0D8               	btfss	status,0,c
  1702   002AF2  EF7D  F015         	goto	u3211
  1703   002AF6  EF7F  F015         	goto	u3210
  1704   002AFA                     u3211:
  1705   002AFA  EFEC  F014         	goto	l158
  1706   002AFE                     u3210:
  1707   002AFE                     
  1708                           ; BSR set to: 0
  1709                           ;color.c: 209:             CR1L = clearArr[0]-0.4;
  1710   002AFE  C066  F009         	movff	rangeCalibrate@clearArr,___fladd@b
  1711   002B02  C067  F00A         	movff	rangeCalibrate@clearArr+1,___fladd@b+1
  1712   002B06  C068  F00B         	movff	rangeCalibrate@clearArr+2,___fladd@b+2
  1713   002B0A  C069  F00C         	movff	rangeCalibrate@clearArr+3,___fladd@b+3
  1714   002B0E  0ECD               	movlw	205
  1715   002B10  6E0D               	movwf	___fladd@a^0,c
  1716   002B12  0ECC               	movlw	204
  1717   002B14  6E0E               	movwf	(___fladd@a+1)^0,c
  1718   002B16  0ECC               	movlw	204
  1719   002B18  6E0F               	movwf	(___fladd@a+2)^0,c
  1720   002B1A  0EBE               	movlw	190
  1721   002B1C  6E10               	movwf	(___fladd@a+3)^0,c
  1722   002B1E  EC4B  F00D         	call	___fladd	;wreg free
  1723   002B22  C009  F047         	movff	?___fladd,_CR1L
  1724   002B26  C00A  F048         	movff	?___fladd+1,_CR1L+1
  1725   002B2A  C00B  F049         	movff	?___fladd+2,_CR1L+2
  1726   002B2E  C00C  F04A         	movff	?___fladd+3,_CR1L+3
  1727                           
  1728                           ;color.c: 210:             CR2U = clearArr[1]+0.3;
  1729   002B32  C06A  F009         	movff	rangeCalibrate@clearArr+4,___fladd@b
  1730   002B36  C06B  F00A         	movff	rangeCalibrate@clearArr+5,___fladd@b+1
  1731   002B3A  C06C  F00B         	movff	rangeCalibrate@clearArr+6,___fladd@b+2
  1732   002B3E  C06D  F00C         	movff	rangeCalibrate@clearArr+7,___fladd@b+3
  1733   002B42  0E9A               	movlw	154
  1734   002B44  6E0D               	movwf	___fladd@a^0,c
  1735   002B46  0E99               	movlw	153
  1736   002B48  6E0E               	movwf	(___fladd@a+1)^0,c
  1737   002B4A  0E99               	movlw	153
  1738   002B4C  6E0F               	movwf	(___fladd@a+2)^0,c
  1739   002B4E  0E3E               	movlw	62
  1740   002B50  6E10               	movwf	(___fladd@a+3)^0,c
  1741   002B52  EC4B  F00D         	call	___fladd	;wreg free
  1742   002B56  C009  F043         	movff	?___fladd,_CR2U
  1743   002B5A  C00A  F044         	movff	?___fladd+1,_CR2U+1
  1744   002B5E  C00B  F045         	movff	?___fladd+2,_CR2U+2
  1745   002B62  C00C  F046         	movff	?___fladd+3,_CR2U+3
  1746                           
  1747                           ;color.c: 211:             CR2L = clearArr[2]-0.3;
  1748   002B66  C06E  F009         	movff	rangeCalibrate@clearArr+8,___fladd@b
  1749   002B6A  C06F  F00A         	movff	rangeCalibrate@clearArr+9,___fladd@b+1
  1750   002B6E  C070  F00B         	movff	rangeCalibrate@clearArr+10,___fladd@b+2
  1751   002B72  C071  F00C         	movff	rangeCalibrate@clearArr+11,___fladd@b+3
  1752   002B76  0E9A               	movlw	154
  1753   002B78  6E0D               	movwf	___fladd@a^0,c
  1754   002B7A  0E99               	movlw	153
  1755   002B7C  6E0E               	movwf	(___fladd@a+1)^0,c
  1756   002B7E  0E99               	movlw	153
  1757   002B80  6E0F               	movwf	(___fladd@a+2)^0,c
  1758   002B82  0EBE               	movlw	190
  1759   002B84  6E10               	movwf	(___fladd@a+3)^0,c
  1760   002B86  EC4B  F00D         	call	___fladd	;wreg free
  1761   002B8A  C009  F03F         	movff	?___fladd,_CR2L
  1762   002B8E  C00A  F040         	movff	?___fladd+1,_CR2L+1
  1763   002B92  C00B  F041         	movff	?___fladd+2,_CR2L+2
  1764   002B96  C00C  F042         	movff	?___fladd+3,_CR2L+3
  1765                           
  1766                           ;color.c: 212:             CR3U = clearArr[3]+0.4;
  1767   002B9A  C072  F009         	movff	rangeCalibrate@clearArr+12,___fladd@b
  1768   002B9E  C073  F00A         	movff	rangeCalibrate@clearArr+13,___fladd@b+1
  1769   002BA2  C074  F00B         	movff	rangeCalibrate@clearArr+14,___fladd@b+2
  1770   002BA6  C075  F00C         	movff	rangeCalibrate@clearArr+15,___fladd@b+3
  1771   002BAA  0ECD               	movlw	205
  1772   002BAC  6E0D               	movwf	___fladd@a^0,c
  1773   002BAE  0ECC               	movlw	204
  1774   002BB0  6E0E               	movwf	(___fladd@a+1)^0,c
  1775   002BB2  0ECC               	movlw	204
  1776   002BB4  6E0F               	movwf	(___fladd@a+2)^0,c
  1777   002BB6  0E3E               	movlw	62
  1778   002BB8  6E10               	movwf	(___fladd@a+3)^0,c
  1779   002BBA  EC4B  F00D         	call	___fladd	;wreg free
  1780   002BBE  C009  F0CC         	movff	?___fladd,_CR3U
  1781   002BC2  C00A  F0CD         	movff	?___fladd+1,_CR3U+1
  1782   002BC6  C00B  F0CE         	movff	?___fladd+2,_CR3U+2
  1783   002BCA  C00C  F0CF         	movff	?___fladd+3,_CR3U+3
  1784                           
  1785                           ;color.c: 213:             CR3L = clearArr[4]-0.2;
  1786   002BCE  C076  F009         	movff	rangeCalibrate@clearArr+16,___fladd@b
  1787   002BD2  C077  F00A         	movff	rangeCalibrate@clearArr+17,___fladd@b+1
  1788   002BD6  C078  F00B         	movff	rangeCalibrate@clearArr+18,___fladd@b+2
  1789   002BDA  C079  F00C         	movff	rangeCalibrate@clearArr+19,___fladd@b+3
  1790   002BDE  0ECD               	movlw	205
  1791   002BE0  6E0D               	movwf	___fladd@a^0,c
  1792   002BE2  0ECC               	movlw	204
  1793   002BE4  6E0E               	movwf	(___fladd@a+1)^0,c
  1794   002BE6  0E4C               	movlw	76
  1795   002BE8  6E0F               	movwf	(___fladd@a+2)^0,c
  1796   002BEA  0EBE               	movlw	190
  1797   002BEC  6E10               	movwf	(___fladd@a+3)^0,c
  1798   002BEE  EC4B  F00D         	call	___fladd	;wreg free
  1799   002BF2  C009  F0C8         	movff	?___fladd,_CR3L
  1800   002BF6  C00A  F0C9         	movff	?___fladd+1,_CR3L+1
  1801   002BFA  C00B  F0CA         	movff	?___fladd+2,_CR3L+2
  1802   002BFE  C00C  F0CB         	movff	?___fladd+3,_CR3L+3
  1803   002C02                     
  1804                           ;color.c: 214:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1805   002C02  0EA3               	movlw	163
  1806   002C04  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1807   002C06  0E57               	movlw	87
  1808   002C08  6E3D               	movwf	??_rangeCalibrate^0,c
  1809   002C0A  0E02               	movlw	2
  1810   002C0C                     u3397:
  1811   002C0C  2EE8               	decfsz	wreg,f,c
  1812   002C0E  D7FE               	bra	u3397
  1813   002C10  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1814   002C12  D7FC               	bra	u3397
  1815   002C14  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1816   002C16  D7FA               	bra	u3397
  1817   002C18  D000               	nop2	
  1818   002C1A  0012               	return		;funcret
  1819   002C1C                     __end_of_rangeCalibrate:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _wallSmash *****************
  1823 ;; Defined at:
  1824 ;;		line 226 in file "dc_motor.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1827 ;;		 -> main@mL(9), 
  1828 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1829 ;;		 -> main@mR(9), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;Total ram usage:        5 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 8
  1848 ;; This function calls:
  1849 ;;		_setMotorPWM
  1850 ;; This function is called by:
  1851 ;;		_rangeCalibrate
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text6
  1857   0032A8                     __ptext6:
  1858                           	callstack 0
  1859   0032A8                     _wallSmash:
  1860                           	callstack 22
  1861   0032A8                     
  1862                           ;dc_motor.c: 226: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 227: {;dc_motor
      +                          .c: 228:     mL->power =50;
  1863   0032A8  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1864   0032AC  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1865   0032B0  0E32               	movlw	50
  1866   0032B2  6EDF               	movwf	indf2,c
  1867                           
  1868                           ;dc_motor.c: 229:     mR->power = 50;
  1869   0032B4  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1870   0032B8  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1871   0032BC  0E32               	movlw	50
  1872   0032BE  6EDF               	movwf	indf2,c
  1873   0032C0                     
  1874                           ;dc_motor.c: 230:     mR->direction = 1;
  1875   0032C0  EE20 F001          	lfsr	2,1
  1876   0032C4  501E               	movf	wallSmash@mR^0,w,c
  1877   0032C6  26D9               	addwf	fsr2l,f,c
  1878   0032C8  501F               	movf	(wallSmash@mR+1)^0,w,c
  1879   0032CA  22DA               	addwfc	fsr2h,f,c
  1880   0032CC  0E01               	movlw	1
  1881   0032CE  6EDF               	movwf	indf2,c
  1882   0032D0                     
  1883                           ;dc_motor.c: 231:     mL->direction = 1;
  1884   0032D0  EE20 F001          	lfsr	2,1
  1885   0032D4  501C               	movf	wallSmash@mL^0,w,c
  1886   0032D6  26D9               	addwf	fsr2l,f,c
  1887   0032D8  501D               	movf	(wallSmash@mL+1)^0,w,c
  1888   0032DA  22DA               	addwfc	fsr2h,f,c
  1889   0032DC  0E01               	movlw	1
  1890   0032DE  6EDF               	movwf	indf2,c
  1891   0032E0                     
  1892                           ;dc_motor.c: 232:     mL->brakemode = 1;
  1893   0032E0  EE20 F002          	lfsr	2,2
  1894   0032E4  501C               	movf	wallSmash@mL^0,w,c
  1895   0032E6  26D9               	addwf	fsr2l,f,c
  1896   0032E8  501D               	movf	(wallSmash@mL+1)^0,w,c
  1897   0032EA  22DA               	addwfc	fsr2h,f,c
  1898   0032EC  0E01               	movlw	1
  1899   0032EE  6EDF               	movwf	indf2,c
  1900   0032F0                     
  1901                           ;dc_motor.c: 233:     mR->brakemode = 1;
  1902   0032F0  EE20 F002          	lfsr	2,2
  1903   0032F4  501E               	movf	wallSmash@mR^0,w,c
  1904   0032F6  26D9               	addwf	fsr2l,f,c
  1905   0032F8  501F               	movf	(wallSmash@mR+1)^0,w,c
  1906   0032FA  22DA               	addwfc	fsr2h,f,c
  1907   0032FC  0E01               	movlw	1
  1908   0032FE  6EDF               	movwf	indf2,c
  1909                           
  1910                           ;dc_motor.c: 234:     while (mL->power <= 85 && mR->power <=85)
  1911   003300  EF98  F019         	goto	l3076
  1912   003304                     l3070:
  1913                           
  1914                           ;dc_motor.c: 235:     {;dc_motor.c: 236:         mL->power++;
  1915   003304  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1916   003308  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1917   00330C  2ADF               	incf	indf2,f,c
  1918                           
  1919                           ;dc_motor.c: 237:         mR->power++;
  1920   00330E  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1921   003312  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1922   003316  2ADF               	incf	indf2,f,c
  1923   003318                     
  1924                           ;dc_motor.c: 238:         setMotorPWM(mL);
  1925   003318  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1926   00331C  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1927   003320  ECA0  F017         	call	_setMotorPWM	;wreg free
  1928   003324                     
  1929                           ;dc_motor.c: 239:         setMotorPWM(mR);
  1930   003324  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1931   003328  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1932   00332C  ECA0  F017         	call	_setMotorPWM	;wreg free
  1933   003330                     l3076:
  1934                           
  1935                           ;dc_motor.c: 234:     while (mL->power <= 85 && mR->power <=85)
  1936   003330  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1937   003334  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1938   003338  0E56               	movlw	86
  1939   00333A  60DF               	cpfslt	indf2,c
  1940   00333C  EFA2  F019         	goto	u2091
  1941   003340  EFA4  F019         	goto	u2090
  1942   003344                     u2091:
  1943   003344  EFB0  F019         	goto	l3080
  1944   003348                     u2090:
  1945   003348  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1946   00334C  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1947   003350  0E55               	movlw	85
  1948   003352  64DF               	cpfsgt	indf2,c
  1949   003354  EFAE  F019         	goto	u2101
  1950   003358  EFB0  F019         	goto	u2100
  1951   00335C                     u2101:
  1952   00335C  EF82  F019         	goto	l3070
  1953   003360                     u2100:
  1954   003360                     l3080:
  1955                           
  1956                           ;dc_motor.c: 241:     mL->power = 85;
  1957   003360  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1958   003364  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1959   003368  0E55               	movlw	85
  1960   00336A  6EDF               	movwf	indf2,c
  1961                           
  1962                           ;dc_motor.c: 242:     mR->power = 85;
  1963   00336C  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1964   003370  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1965   003374  0E55               	movlw	85
  1966   003376  6EDF               	movwf	indf2,c
  1967   003378                     
  1968                           ;dc_motor.c: 243:     setMotorPWM(mL);
  1969   003378  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1970   00337C  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1971   003380  ECA0  F017         	call	_setMotorPWM	;wreg free
  1972   003384                     
  1973                           ;dc_motor.c: 244:     setMotorPWM(mR);
  1974   003384  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1975   003388  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1976   00338C  ECA0  F017         	call	_setMotorPWM	;wreg free
  1977   003390  0012               	return		;funcret
  1978   003392                     __end_of_wallSmash:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _color_read_RGBC *****************
  1982 ;; Defined at:
  1983 ;;		line 107 in file "color.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1986 ;;		 -> main@RGBC(32), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 9
  2005 ;; This function calls:
  2006 ;;		___xxtofl
  2007 ;;		_color_read_Blue
  2008 ;;		_color_read_Clear
  2009 ;;		_color_read_Green
  2010 ;;		_color_read_Red
  2011 ;; This function is called by:
  2012 ;;		_rangeCalibrate
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text7
  2018   00347C                     __ptext7:
  2019                           	callstack 0
  2020   00347C                     _color_read_RGBC:
  2021                           	callstack 20
  2022   00347C                     
  2023                           ;color.c: 109:     temp->R = color_read_Red();
  2024   00347C  EC22  F01C         	call	_color_read_Red	;wreg free
  2025   003480  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2026   003484  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2027   003488  6A16               	clrf	(___xxtofl@val+2)^0,c
  2028   00348A  6A17               	clrf	(___xxtofl@val+3)^0,c
  2029   00348C  0E00               	movlw	0
  2030   00348E  EC0E  F016         	call	___xxtofl
  2031   003492  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2032   003496  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2033   00349A  C014  FFDE         	movff	?___xxtofl,postinc2
  2034   00349E  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2035   0034A2  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2036   0034A6  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2037                           
  2038                           ;color.c: 110:     temp->B = color_read_Blue();
  2039   0034AA  EC9A  F01C         	call	_color_read_Blue	;wreg free
  2040   0034AE  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2041   0034B2  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2042   0034B6  6A16               	clrf	(___xxtofl@val+2)^0,c
  2043   0034B8  6A17               	clrf	(___xxtofl@val+3)^0,c
  2044   0034BA  0E00               	movlw	0
  2045   0034BC  EC0E  F016         	call	___xxtofl
  2046   0034C0  EE20 F008          	lfsr	2,8
  2047   0034C4  5022               	movf	color_read_RGBC@temp^0,w,c
  2048   0034C6  26D9               	addwf	fsr2l,f,c
  2049   0034C8  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2050   0034CA  22DA               	addwfc	fsr2h,f,c
  2051   0034CC  C014  FFDE         	movff	?___xxtofl,postinc2
  2052   0034D0  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2053   0034D4  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2054   0034D8  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2055                           
  2056                           ;color.c: 111:     temp->G = color_read_Green();
  2057   0034DC  EC4A  F01C         	call	_color_read_Green	;wreg free
  2058   0034E0  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2059   0034E4  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2060   0034E8  6A16               	clrf	(___xxtofl@val+2)^0,c
  2061   0034EA  6A17               	clrf	(___xxtofl@val+3)^0,c
  2062   0034EC  0E00               	movlw	0
  2063   0034EE  EC0E  F016         	call	___xxtofl
  2064   0034F2  EE20 F004          	lfsr	2,4
  2065   0034F6  5022               	movf	color_read_RGBC@temp^0,w,c
  2066   0034F8  26D9               	addwf	fsr2l,f,c
  2067   0034FA  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2068   0034FC  22DA               	addwfc	fsr2h,f,c
  2069   0034FE  C014  FFDE         	movff	?___xxtofl,postinc2
  2070   003502  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2071   003506  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2072   00350A  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2073                           
  2074                           ;color.c: 112:     temp->C = color_read_Clear();
  2075   00350E  EC72  F01C         	call	_color_read_Clear	;wreg free
  2076   003512  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2077   003516  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2078   00351A  6A16               	clrf	(___xxtofl@val+2)^0,c
  2079   00351C  6A17               	clrf	(___xxtofl@val+3)^0,c
  2080   00351E  0E00               	movlw	0
  2081   003520  EC0E  F016         	call	___xxtofl
  2082   003524  EE20 F00C          	lfsr	2,12
  2083   003528  5022               	movf	color_read_RGBC@temp^0,w,c
  2084   00352A  26D9               	addwf	fsr2l,f,c
  2085   00352C  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2086   00352E  22DA               	addwfc	fsr2h,f,c
  2087   003530  C014  FFDE         	movff	?___xxtofl,postinc2
  2088   003534  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2089   003538  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2090   00353C  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2091   003540  0012               	return		;funcret
  2092   003542                     __end_of_color_read_RGBC:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _color_read_Red *****************
  2096 ;; Defined at:
  2097 ;;		line 44 in file "color.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  tmp             2   17[COMRAM] unsigned int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   12[COMRAM] unsigned int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;Total ram usage:        7 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 8
  2118 ;; This function calls:
  2119 ;;		_I2C_2_Master_Read
  2120 ;;		_I2C_2_Master_RepStart
  2121 ;;		_I2C_2_Master_Start
  2122 ;;		_I2C_2_Master_Stop
  2123 ;;		_I2C_2_Master_Write
  2124 ;; This function is called by:
  2125 ;;		_color_read_RGBC
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text8
  2130   003844                     __ptext8:
  2131                           	callstack 0
  2132   003844                     _color_read_Red:
  2133                           	callstack 20
  2134   003844                     
  2135                           ;color.c: 45:     unsigned int tmp;;color.c: 46:     I2C_2_Master_Start();
  2136   003844  EC43  F01E         	call	_I2C_2_Master_Start	;wreg free
  2137                           
  2138                           ;color.c: 47:     I2C_2_Master_Write(0x52 | 0x00);
  2139   003848  0E52               	movlw	82
  2140   00384A  EC22  F01E         	call	_I2C_2_Master_Write
  2141                           
  2142                           ;color.c: 48:     I2C_2_Master_Write(0xA0 | 0x16);
  2143   00384E  0EB6               	movlw	182
  2144   003850  EC22  F01E         	call	_I2C_2_Master_Write
  2145                           
  2146                           ;color.c: 49:     I2C_2_Master_RepStart();
  2147   003854  EC34  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2148                           
  2149                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x01);
  2150   003858  0E53               	movlw	83
  2151   00385A  EC22  F01E         	call	_I2C_2_Master_Write
  2152                           
  2153                           ;color.c: 51:     tmp = I2C_2_Master_Read(1);
  2154   00385E  0E01               	movlw	1
  2155   003860  ECE9  F01C         	call	_I2C_2_Master_Read
  2156   003864  6E0F               	movwf	??_color_read_Red^0,c
  2157   003866  500F               	movf	??_color_read_Red^0,w,c
  2158   003868  6E12               	movwf	color_read_Red@tmp^0,c
  2159   00386A  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2160                           
  2161                           ;color.c: 52:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2162   00386C  0E00               	movlw	0
  2163   00386E  ECE9  F01C         	call	_I2C_2_Master_Read
  2164   003872  6E0F               	movwf	??_color_read_Red^0,c
  2165   003874  500F               	movf	??_color_read_Red^0,w,c
  2166   003876  6E11               	movwf	(??_color_read_Red+2)^0,c
  2167   003878  6A10               	clrf	(??_color_read_Red+1)^0,c
  2168   00387A  5012               	movf	color_read_Red@tmp^0,w,c
  2169   00387C  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2170   00387E  6E12               	movwf	color_read_Red@tmp^0,c
  2171   003880  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2172   003882  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2173   003884  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2174                           
  2175                           ;color.c: 53:     I2C_2_Master_Stop();
  2176   003886  EC3E  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2177   00388A                     
  2178                           ;color.c: 54:     return tmp;
  2179   00388A  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2180   00388E  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2181   003892  0012               	return		;funcret
  2182   003894                     __end_of_color_read_Red:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _color_read_Green *****************
  2186 ;; Defined at:
  2187 ;;		line 57 in file "color.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  tmp             2   17[COMRAM] unsigned int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   12[COMRAM] unsigned int 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;Total ram usage:        7 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 8
  2208 ;; This function calls:
  2209 ;;		_I2C_2_Master_Read
  2210 ;;		_I2C_2_Master_RepStart
  2211 ;;		_I2C_2_Master_Start
  2212 ;;		_I2C_2_Master_Stop
  2213 ;;		_I2C_2_Master_Write
  2214 ;; This function is called by:
  2215 ;;		_color_read_RGBC
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text9
  2220   003894                     __ptext9:
  2221                           	callstack 0
  2222   003894                     _color_read_Green:
  2223                           	callstack 20
  2224   003894                     
  2225                           ;color.c: 58:     unsigned int tmp;;color.c: 59:     I2C_2_Master_Start();
  2226   003894  EC43  F01E         	call	_I2C_2_Master_Start	;wreg free
  2227                           
  2228                           ;color.c: 60:     I2C_2_Master_Write(0x52 | 0x00);
  2229   003898  0E52               	movlw	82
  2230   00389A  EC22  F01E         	call	_I2C_2_Master_Write
  2231                           
  2232                           ;color.c: 61:     I2C_2_Master_Write(0xA0 | 0x18);
  2233   00389E  0EB8               	movlw	184
  2234   0038A0  EC22  F01E         	call	_I2C_2_Master_Write
  2235                           
  2236                           ;color.c: 62:     I2C_2_Master_RepStart();
  2237   0038A4  EC34  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2238                           
  2239                           ;color.c: 63:     I2C_2_Master_Write(0x52 | 0x01);
  2240   0038A8  0E53               	movlw	83
  2241   0038AA  EC22  F01E         	call	_I2C_2_Master_Write
  2242                           
  2243                           ;color.c: 64:     tmp = I2C_2_Master_Read(1);
  2244   0038AE  0E01               	movlw	1
  2245   0038B0  ECE9  F01C         	call	_I2C_2_Master_Read
  2246   0038B4  6E0F               	movwf	??_color_read_Green^0,c
  2247   0038B6  500F               	movf	??_color_read_Green^0,w,c
  2248   0038B8  6E12               	movwf	color_read_Green@tmp^0,c
  2249   0038BA  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2250                           
  2251                           ;color.c: 65:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2252   0038BC  0E00               	movlw	0
  2253   0038BE  ECE9  F01C         	call	_I2C_2_Master_Read
  2254   0038C2  6E0F               	movwf	??_color_read_Green^0,c
  2255   0038C4  500F               	movf	??_color_read_Green^0,w,c
  2256   0038C6  6E11               	movwf	(??_color_read_Green+2)^0,c
  2257   0038C8  6A10               	clrf	(??_color_read_Green+1)^0,c
  2258   0038CA  5012               	movf	color_read_Green@tmp^0,w,c
  2259   0038CC  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2260   0038CE  6E12               	movwf	color_read_Green@tmp^0,c
  2261   0038D0  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2262   0038D2  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2263   0038D4  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2264                           
  2265                           ;color.c: 66:     I2C_2_Master_Stop();
  2266   0038D6  EC3E  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2267   0038DA                     
  2268                           ;color.c: 67:     return tmp;
  2269   0038DA  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2270   0038DE  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2271   0038E2  0012               	return		;funcret
  2272   0038E4                     __end_of_color_read_Green:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _color_read_Clear *****************
  2276 ;; Defined at:
  2277 ;;		line 83 in file "color.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  tmp             2   17[COMRAM] unsigned int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2   12[COMRAM] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        7 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 8
  2298 ;; This function calls:
  2299 ;;		_I2C_2_Master_Read
  2300 ;;		_I2C_2_Master_RepStart
  2301 ;;		_I2C_2_Master_Start
  2302 ;;		_I2C_2_Master_Stop
  2303 ;;		_I2C_2_Master_Write
  2304 ;; This function is called by:
  2305 ;;		_color_read_RGBC
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text10
  2310   0038E4                     __ptext10:
  2311                           	callstack 0
  2312   0038E4                     _color_read_Clear:
  2313                           	callstack 20
  2314   0038E4                     
  2315                           ;color.c: 84:     unsigned int tmp;;color.c: 85:     I2C_2_Master_Start();
  2316   0038E4  EC43  F01E         	call	_I2C_2_Master_Start	;wreg free
  2317                           
  2318                           ;color.c: 86:     I2C_2_Master_Write(0x52 | 0x00);
  2319   0038E8  0E52               	movlw	82
  2320   0038EA  EC22  F01E         	call	_I2C_2_Master_Write
  2321                           
  2322                           ;color.c: 87:     I2C_2_Master_Write(0xA0 | 0x14);
  2323   0038EE  0EB4               	movlw	180
  2324   0038F0  EC22  F01E         	call	_I2C_2_Master_Write
  2325                           
  2326                           ;color.c: 88:     I2C_2_Master_RepStart();
  2327   0038F4  EC34  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2328                           
  2329                           ;color.c: 89:     I2C_2_Master_Write(0x52 | 0x01);
  2330   0038F8  0E53               	movlw	83
  2331   0038FA  EC22  F01E         	call	_I2C_2_Master_Write
  2332                           
  2333                           ;color.c: 90:     tmp = I2C_2_Master_Read(1);
  2334   0038FE  0E01               	movlw	1
  2335   003900  ECE9  F01C         	call	_I2C_2_Master_Read
  2336   003904  6E0F               	movwf	??_color_read_Clear^0,c
  2337   003906  500F               	movf	??_color_read_Clear^0,w,c
  2338   003908  6E12               	movwf	color_read_Clear@tmp^0,c
  2339   00390A  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2340                           
  2341                           ;color.c: 91:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2342   00390C  0E00               	movlw	0
  2343   00390E  ECE9  F01C         	call	_I2C_2_Master_Read
  2344   003912  6E0F               	movwf	??_color_read_Clear^0,c
  2345   003914  500F               	movf	??_color_read_Clear^0,w,c
  2346   003916  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2347   003918  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2348   00391A  5012               	movf	color_read_Clear@tmp^0,w,c
  2349   00391C  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2350   00391E  6E12               	movwf	color_read_Clear@tmp^0,c
  2351   003920  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2352   003922  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2353   003924  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2354                           
  2355                           ;color.c: 92:     I2C_2_Master_Stop();
  2356   003926  EC3E  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2357   00392A                     
  2358                           ;color.c: 93:     return tmp;
  2359   00392A  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2360   00392E  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2361   003932  0012               	return		;funcret
  2362   003934                     __end_of_color_read_Clear:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _color_read_Blue *****************
  2366 ;; Defined at:
  2367 ;;		line 70 in file "color.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  tmp             2   17[COMRAM] unsigned int 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2   12[COMRAM] unsigned int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 8
  2388 ;; This function calls:
  2389 ;;		_I2C_2_Master_Read
  2390 ;;		_I2C_2_Master_RepStart
  2391 ;;		_I2C_2_Master_Start
  2392 ;;		_I2C_2_Master_Stop
  2393 ;;		_I2C_2_Master_Write
  2394 ;; This function is called by:
  2395 ;;		_color_read_RGBC
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text11
  2400   003934                     __ptext11:
  2401                           	callstack 0
  2402   003934                     _color_read_Blue:
  2403                           	callstack 20
  2404   003934                     
  2405                           ;color.c: 71:     unsigned int tmp;;color.c: 72:     I2C_2_Master_Start();
  2406   003934  EC43  F01E         	call	_I2C_2_Master_Start	;wreg free
  2407                           
  2408                           ;color.c: 73:     I2C_2_Master_Write(0x52 | 0x00);
  2409   003938  0E52               	movlw	82
  2410   00393A  EC22  F01E         	call	_I2C_2_Master_Write
  2411                           
  2412                           ;color.c: 74:     I2C_2_Master_Write(0xA0 | 0x1A);
  2413   00393E  0EBA               	movlw	186
  2414   003940  EC22  F01E         	call	_I2C_2_Master_Write
  2415                           
  2416                           ;color.c: 75:     I2C_2_Master_RepStart();
  2417   003944  EC34  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2418                           
  2419                           ;color.c: 76:     I2C_2_Master_Write(0x52 | 0x01);
  2420   003948  0E53               	movlw	83
  2421   00394A  EC22  F01E         	call	_I2C_2_Master_Write
  2422                           
  2423                           ;color.c: 77:     tmp = I2C_2_Master_Read(1);
  2424   00394E  0E01               	movlw	1
  2425   003950  ECE9  F01C         	call	_I2C_2_Master_Read
  2426   003954  6E0F               	movwf	??_color_read_Blue^0,c
  2427   003956  500F               	movf	??_color_read_Blue^0,w,c
  2428   003958  6E12               	movwf	color_read_Blue@tmp^0,c
  2429   00395A  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2430                           
  2431                           ;color.c: 78:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2432   00395C  0E00               	movlw	0
  2433   00395E  ECE9  F01C         	call	_I2C_2_Master_Read
  2434   003962  6E0F               	movwf	??_color_read_Blue^0,c
  2435   003964  500F               	movf	??_color_read_Blue^0,w,c
  2436   003966  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2437   003968  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2438   00396A  5012               	movf	color_read_Blue@tmp^0,w,c
  2439   00396C  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2440   00396E  6E12               	movwf	color_read_Blue@tmp^0,c
  2441   003970  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2442   003972  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2443   003974  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2444                           
  2445                           ;color.c: 79:     I2C_2_Master_Stop();
  2446   003976  EC3E  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2447   00397A                     
  2448                           ;color.c: 80:     return tmp;
  2449   00397A  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2450   00397E  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2451   003982  0012               	return		;funcret
  2452   003984                     __end_of_color_read_Blue:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _I2C_2_Master_RepStart *****************
  2456 ;; Defined at:
  2457 ;;		line 33 in file "i2c.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 7
  2478 ;; This function calls:
  2479 ;;		_I2C_2_Master_Idle
  2480 ;; This function is called by:
  2481 ;;		_color_read_Red
  2482 ;;		_color_read_Green
  2483 ;;		_color_read_Blue
  2484 ;;		_color_read_Clear
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text12
  2489   003C68                     __ptext12:
  2490                           	callstack 0
  2491   003C68                     _I2C_2_Master_RepStart:
  2492                           	callstack 20
  2493   003C68                     
  2494                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2495   003C68  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2496   003C6C                     
  2497                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2498   003C6C  010E               	movlb	14	; () banked
  2499   003C6E  83DA               	bsf	218,1,b	;volatile
  2500   003C70                     
  2501                           ; BSR set to: 14
  2502   003C70  0012               	return		;funcret
  2503   003C72                     __end_of_I2C_2_Master_RepStart:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _I2C_2_Master_Read *****************
  2507 ;; Defined at:
  2508 ;;		line 51 in file "i2c.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  ack             1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  ack             1   10[COMRAM] unsigned char 
  2513 ;;  tmp             1   11[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 7
  2530 ;; This function calls:
  2531 ;;		_I2C_2_Master_Idle
  2532 ;; This function is called by:
  2533 ;;		_color_read_Red
  2534 ;;		_color_read_Green
  2535 ;;		_color_read_Blue
  2536 ;;		_color_read_Clear
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text13
  2541   0039D2                     __ptext13:
  2542                           	callstack 0
  2543   0039D2                     _I2C_2_Master_Read:
  2544                           	callstack 20
  2545                           
  2546                           ; BSR set to: 14
  2547                           ;incstack = 0
  2548                           ;I2C_2_Master_Read@ack stored from wreg
  2549   0039D2  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2550   0039D4                     
  2551                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2552   0039D4  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2553   0039D8                     
  2554                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2555   0039D8  010E               	movlb	14	; () banked
  2556   0039DA  87DA               	bsf	218,3,b	;volatile
  2557                           
  2558                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2559   0039DC  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2560   0039E0                     
  2561                           ;i2c.c: 57:   tmp = SSP2BUF;
  2562   0039E0  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2563                           
  2564                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2565   0039E4  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2566   0039E8                     
  2567                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2568   0039E8  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2569   0039EA  B4D8               	btfsc	status,2,c
  2570   0039EC  EFFA  F01C         	goto	u1701
  2571   0039F0  EFFE  F01C         	goto	u1700
  2572   0039F4                     u1701:
  2573   0039F4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2574   0039F6  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2575   0039F8  EFFF  F01C         	goto	u1718
  2576   0039FC                     u1700:
  2577   0039FC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2578   0039FE                     u1718:
  2579   0039FE  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2580   003A00  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2581   003A02  010E               	movlb	14	; () banked
  2582   003A04  51DA               	movf	218,w,b	;volatile
  2583   003A06  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2584   003A08  0BDF               	andlw	-33
  2585   003A0A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2586   003A0C  6FDA               	movwf	218,b	;volatile
  2587   003A0E                     
  2588                           ; BSR set to: 14
  2589                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2590   003A0E  89DA               	bsf	218,4,b	;volatile
  2591   003A10                     
  2592                           ; BSR set to: 14
  2593                           ;i2c.c: 61:   return tmp;
  2594   003A10  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2595   003A12                     
  2596                           ; BSR set to: 14
  2597   003A12  0012               	return		;funcret
  2598   003A14                     __end_of_I2C_2_Master_Read:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _color_normalise *****************
  2602 ;; Defined at:
  2603 ;;		line 120 in file "color.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2606 ;;		 -> main@RGBC(32), 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 7
  2625 ;; This function calls:
  2626 ;;		___fldiv
  2627 ;;		___xxtofl
  2628 ;; This function is called by:
  2629 ;;		_rangeCalibrate
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text14
  2635   002DD0                     __ptext14:
  2636                           	callstack 0
  2637   002DD0                     _color_normalise:
  2638                           	callstack 22
  2639   002DD0                     
  2640                           ;color.c: 121:     amb_clear = 2385;
  2641   002DD0  0E09               	movlw	9
  2642   002DD2  6E4C               	movwf	(_amb_clear+1)^0,c
  2643   002DD4  0E51               	movlw	81
  2644   002DD6  6E4B               	movwf	_amb_clear^0,c
  2645   002DD8                     
  2646                           ;color.c: 122:     RGBC->norm_R = RGBC->C / RGBC->R;
  2647   002DD8  EE20 F00C          	lfsr	2,12
  2648   002DDC  503B               	movf	color_normalise@RGBC^0,w,c
  2649   002DDE  26D9               	addwf	fsr2l,f,c
  2650   002DE0  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2651   002DE2  22DA               	addwfc	fsr2h,f,c
  2652   002DE4  CFDE F022          	movff	postinc2,___fldiv@b
  2653   002DE8  CFDE F023          	movff	postinc2,___fldiv@b+1
  2654   002DEC  CFDE F024          	movff	postinc2,___fldiv@b+2
  2655   002DF0  CFDE F025          	movff	postinc2,___fldiv@b+3
  2656   002DF4  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2657   002DF8  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2658   002DFC  CFDE F026          	movff	postinc2,___fldiv@a
  2659   002E00  CFDE F027          	movff	postinc2,___fldiv@a+1
  2660   002E04  CFDE F028          	movff	postinc2,___fldiv@a+2
  2661   002E08  CFDE F029          	movff	postinc2,___fldiv@a+3
  2662   002E0C  EC8F  F011         	call	___fldiv	;wreg free
  2663   002E10  EE20 F010          	lfsr	2,16
  2664   002E14  503B               	movf	color_normalise@RGBC^0,w,c
  2665   002E16  26D9               	addwf	fsr2l,f,c
  2666   002E18  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2667   002E1A  22DA               	addwfc	fsr2h,f,c
  2668   002E1C  C022  FFDE         	movff	?___fldiv,postinc2
  2669   002E20  C023  FFDE         	movff	?___fldiv+1,postinc2
  2670   002E24  C024  FFDE         	movff	?___fldiv+2,postinc2
  2671   002E28  C025  FFDE         	movff	?___fldiv+3,postinc2
  2672   002E2C                     
  2673                           ;color.c: 123:     RGBC->norm_G = RGBC->C / RGBC->G;
  2674   002E2C  EE20 F00C          	lfsr	2,12
  2675   002E30  503B               	movf	color_normalise@RGBC^0,w,c
  2676   002E32  26D9               	addwf	fsr2l,f,c
  2677   002E34  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2678   002E36  22DA               	addwfc	fsr2h,f,c
  2679   002E38  CFDE F022          	movff	postinc2,___fldiv@b
  2680   002E3C  CFDE F023          	movff	postinc2,___fldiv@b+1
  2681   002E40  CFDE F024          	movff	postinc2,___fldiv@b+2
  2682   002E44  CFDE F025          	movff	postinc2,___fldiv@b+3
  2683   002E48  EE20 F004          	lfsr	2,4
  2684   002E4C  503B               	movf	color_normalise@RGBC^0,w,c
  2685   002E4E  26D9               	addwf	fsr2l,f,c
  2686   002E50  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2687   002E52  22DA               	addwfc	fsr2h,f,c
  2688   002E54  CFDE F026          	movff	postinc2,___fldiv@a
  2689   002E58  CFDE F027          	movff	postinc2,___fldiv@a+1
  2690   002E5C  CFDE F028          	movff	postinc2,___fldiv@a+2
  2691   002E60  CFDE F029          	movff	postinc2,___fldiv@a+3
  2692   002E64  EC8F  F011         	call	___fldiv	;wreg free
  2693   002E68  EE20 F014          	lfsr	2,20
  2694   002E6C  503B               	movf	color_normalise@RGBC^0,w,c
  2695   002E6E  26D9               	addwf	fsr2l,f,c
  2696   002E70  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2697   002E72  22DA               	addwfc	fsr2h,f,c
  2698   002E74  C022  FFDE         	movff	?___fldiv,postinc2
  2699   002E78  C023  FFDE         	movff	?___fldiv+1,postinc2
  2700   002E7C  C024  FFDE         	movff	?___fldiv+2,postinc2
  2701   002E80  C025  FFDE         	movff	?___fldiv+3,postinc2
  2702   002E84                     
  2703                           ;color.c: 124:     RGBC->norm_B = RGBC->C / RGBC->B;
  2704   002E84  EE20 F00C          	lfsr	2,12
  2705   002E88  503B               	movf	color_normalise@RGBC^0,w,c
  2706   002E8A  26D9               	addwf	fsr2l,f,c
  2707   002E8C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2708   002E8E  22DA               	addwfc	fsr2h,f,c
  2709   002E90  CFDE F022          	movff	postinc2,___fldiv@b
  2710   002E94  CFDE F023          	movff	postinc2,___fldiv@b+1
  2711   002E98  CFDE F024          	movff	postinc2,___fldiv@b+2
  2712   002E9C  CFDE F025          	movff	postinc2,___fldiv@b+3
  2713   002EA0  EE20 F008          	lfsr	2,8
  2714   002EA4  503B               	movf	color_normalise@RGBC^0,w,c
  2715   002EA6  26D9               	addwf	fsr2l,f,c
  2716   002EA8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2717   002EAA  22DA               	addwfc	fsr2h,f,c
  2718   002EAC  CFDE F026          	movff	postinc2,___fldiv@a
  2719   002EB0  CFDE F027          	movff	postinc2,___fldiv@a+1
  2720   002EB4  CFDE F028          	movff	postinc2,___fldiv@a+2
  2721   002EB8  CFDE F029          	movff	postinc2,___fldiv@a+3
  2722   002EBC  EC8F  F011         	call	___fldiv	;wreg free
  2723   002EC0  EE20 F018          	lfsr	2,24
  2724   002EC4  503B               	movf	color_normalise@RGBC^0,w,c
  2725   002EC6  26D9               	addwf	fsr2l,f,c
  2726   002EC8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2727   002ECA  22DA               	addwfc	fsr2h,f,c
  2728   002ECC  C022  FFDE         	movff	?___fldiv,postinc2
  2729   002ED0  C023  FFDE         	movff	?___fldiv+1,postinc2
  2730   002ED4  C024  FFDE         	movff	?___fldiv+2,postinc2
  2731   002ED8  C025  FFDE         	movff	?___fldiv+3,postinc2
  2732   002EDC                     
  2733                           ;color.c: 125:     RGBC->norm_C = RGBC->C / amb_clear;
  2734   002EDC  EE20 F00C          	lfsr	2,12
  2735   002EE0  503B               	movf	color_normalise@RGBC^0,w,c
  2736   002EE2  26D9               	addwf	fsr2l,f,c
  2737   002EE4  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2738   002EE6  22DA               	addwfc	fsr2h,f,c
  2739   002EE8  CFDE F022          	movff	postinc2,___fldiv@b
  2740   002EEC  CFDE F023          	movff	postinc2,___fldiv@b+1
  2741   002EF0  CFDE F024          	movff	postinc2,___fldiv@b+2
  2742   002EF4  CFDE F025          	movff	postinc2,___fldiv@b+3
  2743   002EF8  0E51               	movlw	81
  2744   002EFA  6E14               	movwf	___xxtofl@val^0,c
  2745   002EFC  0E09               	movlw	9
  2746   002EFE  6E15               	movwf	(___xxtofl@val+1)^0,c
  2747   002F00  0E00               	movlw	0
  2748   002F02  6E16               	movwf	(___xxtofl@val+2)^0,c
  2749   002F04  0E00               	movlw	0
  2750   002F06  6E17               	movwf	(___xxtofl@val+3)^0,c
  2751   002F08  0E01               	movlw	1
  2752   002F0A  EC0E  F016         	call	___xxtofl
  2753   002F0E  C014  F026         	movff	?___xxtofl,___fldiv@a
  2754   002F12  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2755   002F16  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2756   002F1A  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2757   002F1E  EC8F  F011         	call	___fldiv	;wreg free
  2758   002F22  EE20 F01C          	lfsr	2,28
  2759   002F26  503B               	movf	color_normalise@RGBC^0,w,c
  2760   002F28  26D9               	addwf	fsr2l,f,c
  2761   002F2A  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2762   002F2C  22DA               	addwfc	fsr2h,f,c
  2763   002F2E  C022  FFDE         	movff	?___fldiv,postinc2
  2764   002F32  C023  FFDE         	movff	?___fldiv+1,postinc2
  2765   002F36  C024  FFDE         	movff	?___fldiv+2,postinc2
  2766   002F3A  C025  FFDE         	movff	?___fldiv+3,postinc2
  2767   002F3E  0012               	return		;funcret
  2768   002F40                     __end_of_color_normalise:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function ___xxtofl *****************
  2772 ;; Defined at:
  2773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  sign            1    wreg     unsigned char 
  2776 ;;  val             4   19[COMRAM] long 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  sign            1   27[COMRAM] unsigned char 
  2779 ;;  arg             4   29[COMRAM] unsigned long 
  2780 ;;  exp             1   28[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  4   19[COMRAM] unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:       14 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 6
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_color_read_RGBC
  2801 ;;		_color_normalise
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text15
  2806   002C1C                     __ptext15:
  2807                           	callstack 0
  2808   002C1C                     ___xxtofl:
  2809                           	callstack 22
  2810                           
  2811                           ;incstack = 0
  2812                           ;___xxtofl@sign stored from wreg
  2813   002C1C  6E1C               	movwf	___xxtofl@sign^0,c
  2814   002C1E  501C               	movf	___xxtofl@sign^0,w,c
  2815   002C20  B4D8               	btfsc	status,2,c
  2816   002C22  EF15  F016         	goto	u1991
  2817   002C26  EF17  F016         	goto	u1990
  2818   002C2A                     u1991:
  2819   002C2A  EF39  F016         	goto	l1365
  2820   002C2E                     u1990:
  2821   002C2E  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2822   002C30  EF1E  F016         	goto	u2000
  2823   002C34  EF1C  F016         	goto	u2001
  2824   002C38                     u2001:
  2825   002C38  EF39  F016         	goto	l1365
  2826   002C3C                     u2000:
  2827   002C3C  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2828   002C40  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2829   002C44  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2830   002C48  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2831   002C4C  1E18               	comf	??___xxtofl^0,f,c
  2832   002C4E  1E19               	comf	(??___xxtofl+1)^0,f,c
  2833   002C50  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2834   002C52  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2835   002C54  2A18               	incf	??___xxtofl^0,f,c
  2836   002C56  0E00               	movlw	0
  2837   002C58  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2838   002C5A  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2839   002C5C  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2840   002C5E  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2841   002C62  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2842   002C66  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2843   002C6A  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2844   002C6E  EF41  F016         	goto	l2986
  2845   002C72                     l1365:
  2846   002C72  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2847   002C76  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2848   002C7A  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2849   002C7E  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2850   002C82                     l2986:
  2851   002C82  5014               	movf	___xxtofl@val^0,w,c
  2852   002C84  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2853   002C86  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2854   002C88  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2855   002C8A  A4D8               	btfss	status,2,c
  2856   002C8C  EF4A  F016         	goto	u2011
  2857   002C90  EF4C  F016         	goto	u2010
  2858   002C94                     u2011:
  2859   002C94  EF56  F016         	goto	l2992
  2860   002C98                     u2010:
  2861   002C98  0E00               	movlw	0
  2862   002C9A  6E14               	movwf	?___xxtofl^0,c
  2863   002C9C  0E00               	movlw	0
  2864   002C9E  6E15               	movwf	(?___xxtofl+1)^0,c
  2865   002CA0  0E00               	movlw	0
  2866   002CA2  6E16               	movwf	(?___xxtofl+2)^0,c
  2867   002CA4  0E00               	movlw	0
  2868   002CA6  6E17               	movwf	(?___xxtofl+3)^0,c
  2869   002CA8  EFE7  F016         	goto	l1368
  2870   002CAC                     l2992:
  2871   002CAC  0E96               	movlw	150
  2872   002CAE  6E1D               	movwf	___xxtofl@exp^0,c
  2873   002CB0  EF60  F016         	goto	l2996
  2874   002CB4                     l2994:
  2875   002CB4  2A1D               	incf	___xxtofl@exp^0,f,c
  2876   002CB6  90D8               	bcf	status,0,c
  2877   002CB8  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2878   002CBA  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2879   002CBC  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2880   002CBE  321E               	rrcf	___xxtofl@arg^0,f,c
  2881   002CC0                     l2996:
  2882   002CC0  0E00               	movlw	0
  2883   002CC2  141E               	andwf	___xxtofl@arg^0,w,c
  2884   002CC4  6E18               	movwf	??___xxtofl^0,c
  2885   002CC6  0E00               	movlw	0
  2886   002CC8  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2887   002CCA  6E19               	movwf	(??___xxtofl+1)^0,c
  2888   002CCC  0E00               	movlw	0
  2889   002CCE  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2890   002CD0  6E1A               	movwf	(??___xxtofl+2)^0,c
  2891   002CD2  0EFE               	movlw	254
  2892   002CD4  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2893   002CD6  6E1B               	movwf	(??___xxtofl+3)^0,c
  2894   002CD8  5018               	movf	??___xxtofl^0,w,c
  2895   002CDA  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2896   002CDC  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2897   002CDE  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2898   002CE0  A4D8               	btfss	status,2,c
  2899   002CE2  EF75  F016         	goto	u2021
  2900   002CE6  EF77  F016         	goto	u2020
  2901   002CEA                     u2021:
  2902   002CEA  EF5A  F016         	goto	l2994
  2903   002CEE                     u2020:
  2904   002CEE  EF85  F016         	goto	l1372
  2905   002CF2                     l2998:
  2906   002CF2  2A1D               	incf	___xxtofl@exp^0,f,c
  2907   002CF4  0E01               	movlw	1
  2908   002CF6  261E               	addwf	___xxtofl@arg^0,f,c
  2909   002CF8  0E00               	movlw	0
  2910   002CFA  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2911   002CFC  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2912   002CFE  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2913   002D00  90D8               	bcf	status,0,c
  2914   002D02  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2915   002D04  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2916   002D06  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2917   002D08  321E               	rrcf	___xxtofl@arg^0,f,c
  2918   002D0A                     l1372:
  2919   002D0A  0E00               	movlw	0
  2920   002D0C  141E               	andwf	___xxtofl@arg^0,w,c
  2921   002D0E  6E18               	movwf	??___xxtofl^0,c
  2922   002D10  0E00               	movlw	0
  2923   002D12  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2924   002D14  6E19               	movwf	(??___xxtofl+1)^0,c
  2925   002D16  0E00               	movlw	0
  2926   002D18  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2927   002D1A  6E1A               	movwf	(??___xxtofl+2)^0,c
  2928   002D1C  0EFF               	movlw	255
  2929   002D1E  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2930   002D20  6E1B               	movwf	(??___xxtofl+3)^0,c
  2931   002D22  5018               	movf	??___xxtofl^0,w,c
  2932   002D24  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2933   002D26  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2934   002D28  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2935   002D2A  A4D8               	btfss	status,2,c
  2936   002D2C  EF9A  F016         	goto	u2031
  2937   002D30  EF9C  F016         	goto	u2030
  2938   002D34                     u2031:
  2939   002D34  EF79  F016         	goto	l2998
  2940   002D38                     u2030:
  2941   002D38  EFA4  F016         	goto	l3006
  2942   002D3C                     l3004:
  2943   002D3C  061D               	decf	___xxtofl@exp^0,f,c
  2944   002D3E  90D8               	bcf	status,0,c
  2945   002D40  361E               	rlcf	___xxtofl@arg^0,f,c
  2946   002D42  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2947   002D44  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2948   002D46  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2949   002D48                     l3006:
  2950   002D48  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2951   002D4A  EFA9  F016         	goto	u2041
  2952   002D4E  EFAB  F016         	goto	u2040
  2953   002D52                     u2041:
  2954   002D52  EFB3  F016         	goto	l1379
  2955   002D56                     u2040:
  2956   002D56  0E02               	movlw	2
  2957   002D58  601D               	cpfslt	___xxtofl@exp^0,c
  2958   002D5A  EFB1  F016         	goto	u2051
  2959   002D5E  EFB3  F016         	goto	u2050
  2960   002D62                     u2051:
  2961   002D62  EF9E  F016         	goto	l3004
  2962   002D66                     u2050:
  2963   002D66                     l1379:
  2964   002D66  B01D               	btfsc	___xxtofl@exp^0,0,c
  2965   002D68  EFB8  F016         	goto	u2061
  2966   002D6C  EFBA  F016         	goto	u2060
  2967   002D70                     u2061:
  2968   002D70  EFBB  F016         	goto	l3012
  2969   002D74                     u2060:
  2970   002D74  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2971   002D76                     l3012:
  2972   002D76  90D8               	bcf	status,0,c
  2973   002D78  321D               	rrcf	___xxtofl@exp^0,f,c
  2974   002D7A  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2975   002D7E  6A19               	clrf	(??___xxtofl+1)^0,c
  2976   002D80  6A1A               	clrf	(??___xxtofl+2)^0,c
  2977   002D82  6A1B               	clrf	(??___xxtofl+3)^0,c
  2978   002D84  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2979   002D88  6A1A               	clrf	(??___xxtofl+2)^0,c
  2980   002D8A  6A19               	clrf	(??___xxtofl+1)^0,c
  2981   002D8C  6A18               	clrf	??___xxtofl^0,c
  2982   002D8E  5018               	movf	??___xxtofl^0,w,c
  2983   002D90  121E               	iorwf	___xxtofl@arg^0,f,c
  2984   002D92  5019               	movf	(??___xxtofl+1)^0,w,c
  2985   002D94  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2986   002D96  501A               	movf	(??___xxtofl+2)^0,w,c
  2987   002D98  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2988   002D9A  501B               	movf	(??___xxtofl+3)^0,w,c
  2989   002D9C  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2990   002D9E  501C               	movf	___xxtofl@sign^0,w,c
  2991   002DA0  B4D8               	btfsc	status,2,c
  2992   002DA2  EFD5  F016         	goto	u2071
  2993   002DA6  EFD7  F016         	goto	u2070
  2994   002DAA                     u2071:
  2995   002DAA  EFDF  F016         	goto	l3022
  2996   002DAE                     u2070:
  2997   002DAE  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2998   002DB0  EFDE  F016         	goto	u2080
  2999   002DB4  EFDC  F016         	goto	u2081
  3000   002DB8                     u2081:
  3001   002DB8  EFDF  F016         	goto	l3022
  3002   002DBC                     u2080:
  3003   002DBC  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3004   002DBE                     l3022:
  3005   002DBE  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3006   002DC2  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3007   002DC6  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3008   002DCA  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3009   002DCE                     l1368:
  3010   002DCE  0012               	return		;funcret
  3011   002DD0                     __end_of___xxtofl:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function ___fldiv *****************
  3015 ;; Defined at:
  3016 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  b               4   33[COMRAM] unsigned char 
  3019 ;;  a               4   37[COMRAM] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  grs             4   52[COMRAM] unsigned long 
  3022 ;;  rem             4   45[COMRAM] unsigned long 
  3023 ;;  new_exp         2   50[COMRAM] short 
  3024 ;;  aexp            1   57[COMRAM] unsigned char 
  3025 ;;  bexp            1   56[COMRAM] unsigned char 
  3026 ;;  sign            1   49[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  4   33[COMRAM] unsigned char 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;Total ram usage:       25 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 6
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_color_normalise
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text16
  3051   00231E                     __ptext16:
  3052                           	callstack 0
  3053   00231E                     ___fldiv:
  3054                           	callstack 22
  3055   00231E  5025               	movf	(___fldiv@b+3)^0,w,c
  3056   002320  0B80               	andlw	128
  3057   002322  6E32               	movwf	___fldiv@sign^0,c
  3058   002324  5025               	movf	(___fldiv@b+3)^0,w,c
  3059   002326  2425               	addwf	(___fldiv@b+3)^0,w,c
  3060   002328  6E39               	movwf	___fldiv@bexp^0,c
  3061   00232A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3062   00232C  EF9A  F011         	goto	u1761
  3063   002330  EF9C  F011         	goto	u1760
  3064   002334                     u1761:
  3065   002334  EF9D  F011         	goto	l2848
  3066   002338                     u1760:
  3067   002338  8039               	bsf	___fldiv@bexp^0,0,c
  3068   00233A                     l2848:
  3069   00233A  5039               	movf	___fldiv@bexp^0,w,c
  3070   00233C  B4D8               	btfsc	status,2,c
  3071   00233E  EFA3  F011         	goto	u1771
  3072   002342  EFA5  F011         	goto	u1770
  3073   002346                     u1771:
  3074   002346  EFBA  F011         	goto	l2858
  3075   00234A                     u1770:
  3076   00234A  2839               	incf	___fldiv@bexp^0,w,c
  3077   00234C  A4D8               	btfss	status,2,c
  3078   00234E  EFAB  F011         	goto	u1781
  3079   002352  EFAD  F011         	goto	u1780
  3080   002356                     u1781:
  3081   002356  EFB5  F011         	goto	l2854
  3082   00235A                     u1780:
  3083   00235A  0E00               	movlw	0
  3084   00235C  6E22               	movwf	___fldiv@b^0,c
  3085   00235E  0E00               	movlw	0
  3086   002360  6E23               	movwf	(___fldiv@b+1)^0,c
  3087   002362  0E00               	movlw	0
  3088   002364  6E24               	movwf	(___fldiv@b+2)^0,c
  3089   002366  0E00               	movlw	0
  3090   002368  6E25               	movwf	(___fldiv@b+3)^0,c
  3091   00236A                     l2854:
  3092   00236A  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3093   00236C  0E00               	movlw	0
  3094   00236E  6E25               	movwf	(___fldiv@b+3)^0,c
  3095   002370  EFC2  F011         	goto	l2860
  3096   002374                     l2858:
  3097   002374  0E00               	movlw	0
  3098   002376  6E22               	movwf	___fldiv@b^0,c
  3099   002378  0E00               	movlw	0
  3100   00237A  6E23               	movwf	(___fldiv@b+1)^0,c
  3101   00237C  0E00               	movlw	0
  3102   00237E  6E24               	movwf	(___fldiv@b+2)^0,c
  3103   002380  0E00               	movlw	0
  3104   002382  6E25               	movwf	(___fldiv@b+3)^0,c
  3105   002384                     l2860:
  3106   002384  5029               	movf	(___fldiv@a+3)^0,w,c
  3107   002386  0B80               	andlw	128
  3108   002388  1A32               	xorwf	___fldiv@sign^0,f,c
  3109   00238A  5029               	movf	(___fldiv@a+3)^0,w,c
  3110   00238C  2429               	addwf	(___fldiv@a+3)^0,w,c
  3111   00238E  6E3A               	movwf	___fldiv@aexp^0,c
  3112   002390  AE28               	btfss	(___fldiv@a+2)^0,7,c
  3113   002392  EFCD  F011         	goto	u1791
  3114   002396  EFCF  F011         	goto	u1790
  3115   00239A                     u1791:
  3116   00239A  EFD0  F011         	goto	l2868
  3117   00239E                     u1790:
  3118   00239E  803A               	bsf	___fldiv@aexp^0,0,c
  3119   0023A0                     l2868:
  3120   0023A0  503A               	movf	___fldiv@aexp^0,w,c
  3121   0023A2  B4D8               	btfsc	status,2,c
  3122   0023A4  EFD6  F011         	goto	u1801
  3123   0023A8  EFD8  F011         	goto	u1800
  3124   0023AC                     u1801:
  3125   0023AC  EFED  F011         	goto	l2878
  3126   0023B0                     u1800:
  3127   0023B0  283A               	incf	___fldiv@aexp^0,w,c
  3128   0023B2  A4D8               	btfss	status,2,c
  3129   0023B4  EFDE  F011         	goto	u1811
  3130   0023B8  EFE0  F011         	goto	u1810
  3131   0023BC                     u1811:
  3132   0023BC  EFE8  F011         	goto	l2874
  3133   0023C0                     u1810:
  3134   0023C0  0E00               	movlw	0
  3135   0023C2  6E26               	movwf	___fldiv@a^0,c
  3136   0023C4  0E00               	movlw	0
  3137   0023C6  6E27               	movwf	(___fldiv@a+1)^0,c
  3138   0023C8  0E00               	movlw	0
  3139   0023CA  6E28               	movwf	(___fldiv@a+2)^0,c
  3140   0023CC  0E00               	movlw	0
  3141   0023CE  6E29               	movwf	(___fldiv@a+3)^0,c
  3142   0023D0                     l2874:
  3143   0023D0  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3144   0023D2  0E00               	movlw	0
  3145   0023D4  6E29               	movwf	(___fldiv@a+3)^0,c
  3146   0023D6  EFF5  F011         	goto	l2880
  3147   0023DA                     l2878:
  3148   0023DA  0E00               	movlw	0
  3149   0023DC  6E26               	movwf	___fldiv@a^0,c
  3150   0023DE  0E00               	movlw	0
  3151   0023E0  6E27               	movwf	(___fldiv@a+1)^0,c
  3152   0023E2  0E00               	movlw	0
  3153   0023E4  6E28               	movwf	(___fldiv@a+2)^0,c
  3154   0023E6  0E00               	movlw	0
  3155   0023E8  6E29               	movwf	(___fldiv@a+3)^0,c
  3156   0023EA                     l2880:
  3157   0023EA  5026               	movf	___fldiv@a^0,w,c
  3158   0023EC  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3159   0023EE  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3160   0023F0  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3161   0023F2  A4D8               	btfss	status,2,c
  3162   0023F4  EFFE  F011         	goto	u1821
  3163   0023F8  EF00  F012         	goto	u1820
  3164   0023FC                     u1821:
  3165   0023FC  EF18  F012         	goto	l2892
  3166   002400                     u1820:
  3167   002400  0E00               	movlw	0
  3168   002402  6E22               	movwf	___fldiv@b^0,c
  3169   002404  0E00               	movlw	0
  3170   002406  6E23               	movwf	(___fldiv@b+1)^0,c
  3171   002408  0E00               	movlw	0
  3172   00240A  6E24               	movwf	(___fldiv@b+2)^0,c
  3173   00240C  0E00               	movlw	0
  3174   00240E  6E25               	movwf	(___fldiv@b+3)^0,c
  3175   002410  0E80               	movlw	128
  3176   002412  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3177   002414  0E7F               	movlw	127
  3178   002416  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3179   002418                     l2886:
  3180   002418  5032               	movf	___fldiv@sign^0,w,c
  3181   00241A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3182   00241C  C022  F022         	movff	___fldiv@b,?___fldiv
  3183   002420  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3184   002424  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3185   002428  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3186   00242C  EF5B  F013         	goto	l1292
  3187   002430                     l2892:
  3188   002430  5039               	movf	___fldiv@bexp^0,w,c
  3189   002432  A4D8               	btfss	status,2,c
  3190   002434  EF1E  F012         	goto	u1831
  3191   002438  EF20  F012         	goto	u1830
  3192   00243C                     u1831:
  3193   00243C  EF2A  F012         	goto	l2900
  3194   002440                     u1830:
  3195   002440  0E00               	movlw	0
  3196   002442  6E22               	movwf	?___fldiv^0,c
  3197   002444  0E00               	movlw	0
  3198   002446  6E23               	movwf	(?___fldiv+1)^0,c
  3199   002448  0E00               	movlw	0
  3200   00244A  6E24               	movwf	(?___fldiv+2)^0,c
  3201   00244C  0E00               	movlw	0
  3202   00244E  6E25               	movwf	(?___fldiv+3)^0,c
  3203   002450  EF5B  F013         	goto	l1292
  3204   002454                     l2900:
  3205   002454  503A               	movf	___fldiv@aexp^0,w,c
  3206   002456  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3207   00245A  6A2B               	clrf	(??___fldiv+1)^0,c
  3208   00245C  5E2A               	subwf	??___fldiv^0,f,c
  3209   00245E  0E00               	movlw	0
  3210   002460  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3211   002462  0E7F               	movlw	127
  3212   002464  242A               	addwf	??___fldiv^0,w,c
  3213   002466  6E33               	movwf	___fldiv@new_exp^0,c
  3214   002468  0E00               	movlw	0
  3215   00246A  202B               	addwfc	(??___fldiv+1)^0,w,c
  3216   00246C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3217   00246E  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3218   002472  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3219   002476  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3220   00247A  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3221   00247E  0E00               	movlw	0
  3222   002480  6E22               	movwf	___fldiv@b^0,c
  3223   002482  0E00               	movlw	0
  3224   002484  6E23               	movwf	(___fldiv@b+1)^0,c
  3225   002486  0E00               	movlw	0
  3226   002488  6E24               	movwf	(___fldiv@b+2)^0,c
  3227   00248A  0E00               	movlw	0
  3228   00248C  6E25               	movwf	(___fldiv@b+3)^0,c
  3229   00248E  0E00               	movlw	0
  3230   002490  6E35               	movwf	___fldiv@grs^0,c
  3231   002492  0E00               	movlw	0
  3232   002494  6E36               	movwf	(___fldiv@grs+1)^0,c
  3233   002496  0E00               	movlw	0
  3234   002498  6E37               	movwf	(___fldiv@grs+2)^0,c
  3235   00249A  0E00               	movlw	0
  3236   00249C  6E38               	movwf	(___fldiv@grs+3)^0,c
  3237   00249E  0E00               	movlw	0
  3238   0024A0  6E3A               	movwf	___fldiv@aexp^0,c
  3239   0024A2  EF8B  F012         	goto	l1294
  3240   0024A6                     l2910:
  3241   0024A6  503A               	movf	___fldiv@aexp^0,w,c
  3242   0024A8  B4D8               	btfsc	status,2,c
  3243   0024AA  EF59  F012         	goto	u1841
  3244   0024AE  EF5B  F012         	goto	u1840
  3245   0024B2                     u1841:
  3246   0024B2  EF72  F012         	goto	l2918
  3247   0024B6                     u1840:
  3248   0024B6  90D8               	bcf	status,0,c
  3249   0024B8  362E               	rlcf	___fldiv@rem^0,f,c
  3250   0024BA  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3251   0024BC  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3252   0024BE  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3253   0024C0  90D8               	bcf	status,0,c
  3254   0024C2  3622               	rlcf	___fldiv@b^0,f,c
  3255   0024C4  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3256   0024C6  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3257   0024C8  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3258   0024CA  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3259   0024CC  EF6A  F012         	goto	u1851
  3260   0024D0  EF6C  F012         	goto	u1850
  3261   0024D4                     u1851:
  3262   0024D4  EF6D  F012         	goto	l1297
  3263   0024D8                     u1850:
  3264   0024D8  8022               	bsf	___fldiv@b^0,0,c
  3265   0024DA                     l1297:
  3266   0024DA  90D8               	bcf	status,0,c
  3267   0024DC  3635               	rlcf	___fldiv@grs^0,f,c
  3268   0024DE  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3269   0024E0  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3270   0024E2  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3271   0024E4                     l2918:
  3272   0024E4  5026               	movf	___fldiv@a^0,w,c
  3273   0024E6  5C2E               	subwf	___fldiv@rem^0,w,c
  3274   0024E8  5027               	movf	(___fldiv@a+1)^0,w,c
  3275   0024EA  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3276   0024EC  5028               	movf	(___fldiv@a+2)^0,w,c
  3277   0024EE  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3278   0024F0  5029               	movf	(___fldiv@a+3)^0,w,c
  3279   0024F2  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3280   0024F4  A0D8               	btfss	status,0,c
  3281   0024F6  EF7F  F012         	goto	u1861
  3282   0024FA  EF81  F012         	goto	u1860
  3283   0024FE                     u1861:
  3284   0024FE  EF8A  F012         	goto	l2924
  3285   002502                     u1860:
  3286   002502  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3287   002504  5026               	movf	___fldiv@a^0,w,c
  3288   002506  5E2E               	subwf	___fldiv@rem^0,f,c
  3289   002508  5027               	movf	(___fldiv@a+1)^0,w,c
  3290   00250A  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3291   00250C  5028               	movf	(___fldiv@a+2)^0,w,c
  3292   00250E  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3293   002510  5029               	movf	(___fldiv@a+3)^0,w,c
  3294   002512  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3295   002514                     l2924:
  3296   002514  2A3A               	incf	___fldiv@aexp^0,f,c
  3297   002516                     l1294:
  3298   002516  0E19               	movlw	25
  3299   002518  643A               	cpfsgt	___fldiv@aexp^0,c
  3300   00251A  EF91  F012         	goto	u1871
  3301   00251E  EF93  F012         	goto	u1870
  3302   002522                     u1871:
  3303   002522  EF53  F012         	goto	l2910
  3304   002526                     u1870:
  3305   002526  502E               	movf	___fldiv@rem^0,w,c
  3306   002528  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3307   00252A  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3308   00252C  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3309   00252E  B4D8               	btfsc	status,2,c
  3310   002530  EF9C  F012         	goto	u1881
  3311   002534  EF9E  F012         	goto	u1880
  3312   002538                     u1881:
  3313   002538  EFB6  F012         	goto	l2936
  3314   00253C                     u1880:
  3315   00253C  8035               	bsf	___fldiv@grs^0,0,c
  3316   00253E  EFB6  F012         	goto	l2936
  3317   002542                     l2930:
  3318   002542  90D8               	bcf	status,0,c
  3319   002544  3622               	rlcf	___fldiv@b^0,f,c
  3320   002546  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3321   002548  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3322   00254A  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3323   00254C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3324   00254E  EFAB  F012         	goto	u1891
  3325   002552  EFAD  F012         	goto	u1890
  3326   002556                     u1891:
  3327   002556  EFAE  F012         	goto	l1303
  3328   00255A                     u1890:
  3329   00255A  8022               	bsf	___fldiv@b^0,0,c
  3330   00255C                     l1303:
  3331   00255C  90D8               	bcf	status,0,c
  3332   00255E  3635               	rlcf	___fldiv@grs^0,f,c
  3333   002560  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3334   002562  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3335   002564  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3336   002566  0633               	decf	___fldiv@new_exp^0,f,c
  3337   002568  A0D8               	btfss	status,0,c
  3338   00256A  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3339   00256C                     l2936:
  3340   00256C  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3341   00256E  EFBB  F012         	goto	u1901
  3342   002572  EFBD  F012         	goto	u1900
  3343   002576                     u1901:
  3344   002576  EFA1  F012         	goto	l2930
  3345   00257A                     u1900:
  3346   00257A  0E00               	movlw	0
  3347   00257C  6E3A               	movwf	___fldiv@aexp^0,c
  3348   00257E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3349   002580  EFC4  F012         	goto	u1911
  3350   002584  EFC6  F012         	goto	u1910
  3351   002588                     u1911:
  3352   002588  EFEA  F012         	goto	l1305
  3353   00258C                     u1910:
  3354   00258C  0EFF               	movlw	255
  3355   00258E  1435               	andwf	___fldiv@grs^0,w,c
  3356   002590  6E2A               	movwf	??___fldiv^0,c
  3357   002592  0EFF               	movlw	255
  3358   002594  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3359   002596  6E2B               	movwf	(??___fldiv+1)^0,c
  3360   002598  0EFF               	movlw	255
  3361   00259A  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3362   00259C  6E2C               	movwf	(??___fldiv+2)^0,c
  3363   00259E  0E7F               	movlw	127
  3364   0025A0  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3365   0025A2  6E2D               	movwf	(??___fldiv+3)^0,c
  3366   0025A4  502A               	movf	??___fldiv^0,w,c
  3367   0025A6  102B               	iorwf	(??___fldiv+1)^0,w,c
  3368   0025A8  102C               	iorwf	(??___fldiv+2)^0,w,c
  3369   0025AA  102D               	iorwf	(??___fldiv+3)^0,w,c
  3370   0025AC  B4D8               	btfsc	status,2,c
  3371   0025AE  EFDB  F012         	goto	u1921
  3372   0025B2  EFDD  F012         	goto	u1920
  3373   0025B6                     u1921:
  3374   0025B6  EFE1  F012         	goto	l1306
  3375   0025BA                     u1920:
  3376   0025BA                     l2944:
  3377   0025BA  0E01               	movlw	1
  3378   0025BC  6E3A               	movwf	___fldiv@aexp^0,c
  3379   0025BE  EFEA  F012         	goto	l1305
  3380   0025C2                     l1306:
  3381   0025C2  A022               	btfss	___fldiv@b^0,0,c
  3382   0025C4  EFE6  F012         	goto	u1931
  3383   0025C8  EFE8  F012         	goto	u1930
  3384   0025CC                     u1931:
  3385   0025CC  EFEA  F012         	goto	l1305
  3386   0025D0                     u1930:
  3387   0025D0  EFDD  F012         	goto	l2944
  3388   0025D4                     l1305:
  3389   0025D4  503A               	movf	___fldiv@aexp^0,w,c
  3390   0025D6  B4D8               	btfsc	status,2,c
  3391   0025D8  EFF0  F012         	goto	u1941
  3392   0025DC  EFF2  F012         	goto	u1940
  3393   0025E0                     u1941:
  3394   0025E0  EF16  F013         	goto	l2956
  3395   0025E4                     u1940:
  3396   0025E4  0E01               	movlw	1
  3397   0025E6  2622               	addwf	___fldiv@b^0,f,c
  3398   0025E8  0E00               	movlw	0
  3399   0025EA  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3400   0025EC  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3401   0025EE  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3402   0025F0  A025               	btfss	(___fldiv@b+3)^0,0,c
  3403   0025F2  EFFD  F012         	goto	u1951
  3404   0025F6  EFFF  F012         	goto	u1950
  3405   0025FA                     u1951:
  3406   0025FA  EF16  F013         	goto	l2956
  3407   0025FE                     u1950:
  3408   0025FE  C022  F02A         	movff	___fldiv@b,??___fldiv
  3409   002602  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3410   002606  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3411   00260A  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3412   00260E  342D               	rlcf	(??___fldiv+3)^0,w,c
  3413   002610  322D               	rrcf	(??___fldiv+3)^0,f,c
  3414   002612  322C               	rrcf	(??___fldiv+2)^0,f,c
  3415   002614  322B               	rrcf	(??___fldiv+1)^0,f,c
  3416   002616  322A               	rrcf	??___fldiv^0,f,c
  3417   002618  C02A  F022         	movff	??___fldiv,___fldiv@b
  3418   00261C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3419   002620  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3420   002624  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3421   002628  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3422   00262A  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3423   00262C                     l2956:
  3424   00262C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3425   00262E  EF21  F013         	goto	u1961
  3426   002632  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3427   002634  E108               	bnz	u1960
  3428   002636  2833               	incf	___fldiv@new_exp^0,w,c
  3429   002638  A0D8               	btfss	status,0,c
  3430   00263A  EF21  F013         	goto	u1961
  3431   00263E  EF23  F013         	goto	u1960
  3432   002642                     u1961:
  3433   002642  EF2E  F013         	goto	l2960
  3434   002646                     u1960:
  3435   002646  0E00               	movlw	0
  3436   002648  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3437   00264A  6833               	setf	___fldiv@new_exp^0,c
  3438   00264C  0E00               	movlw	0
  3439   00264E  6E22               	movwf	___fldiv@b^0,c
  3440   002650  0E00               	movlw	0
  3441   002652  6E23               	movwf	(___fldiv@b+1)^0,c
  3442   002654  0E00               	movlw	0
  3443   002656  6E24               	movwf	(___fldiv@b+2)^0,c
  3444   002658  0E00               	movlw	0
  3445   00265A  6E25               	movwf	(___fldiv@b+3)^0,c
  3446   00265C                     l2960:
  3447   00265C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3448   00265E  EF3B  F013         	goto	u1970
  3449   002662  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3450   002664  E106               	bnz	u1971
  3451   002666  0433               	decf	___fldiv@new_exp^0,w,c
  3452   002668  B0D8               	btfsc	status,0,c
  3453   00266A  EF39  F013         	goto	u1971
  3454   00266E  EF3B  F013         	goto	u1970
  3455   002672                     u1971:
  3456   002672  EF49  F013         	goto	l2964
  3457   002676                     u1970:
  3458   002676  0E00               	movlw	0
  3459   002678  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3460   00267A  0E00               	movlw	0
  3461   00267C  6E33               	movwf	___fldiv@new_exp^0,c
  3462   00267E  0E00               	movlw	0
  3463   002680  6E22               	movwf	___fldiv@b^0,c
  3464   002682  0E00               	movlw	0
  3465   002684  6E23               	movwf	(___fldiv@b+1)^0,c
  3466   002686  0E00               	movlw	0
  3467   002688  6E24               	movwf	(___fldiv@b+2)^0,c
  3468   00268A  0E00               	movlw	0
  3469   00268C  6E25               	movwf	(___fldiv@b+3)^0,c
  3470   00268E  0E00               	movlw	0
  3471   002690  6E32               	movwf	___fldiv@sign^0,c
  3472   002692                     l2964:
  3473   002692  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3474   002696  A039               	btfss	___fldiv@bexp^0,0,c
  3475   002698  EF50  F013         	goto	u1981
  3476   00269C  EF52  F013         	goto	u1980
  3477   0026A0                     u1981:
  3478   0026A0  EF55  F013         	goto	l2970
  3479   0026A4                     u1980:
  3480   0026A4  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3481   0026A6  EF56  F013         	goto	l2972
  3482   0026AA                     l2970:
  3483   0026AA  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3484   0026AC                     l2972:
  3485   0026AC  90D8               	bcf	status,0,c
  3486   0026AE  3039               	rrcf	___fldiv@bexp^0,w,c
  3487   0026B0  6E25               	movwf	(___fldiv@b+3)^0,c
  3488   0026B2  EF0C  F012         	goto	l2886
  3489   0026B6                     l1292:
  3490   0026B6  0012               	return		;funcret
  3491   0026B8                     __end_of___fldiv:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function ___fladd *****************
  3495 ;; Defined at:
  3496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  b               4    8[COMRAM] unsigned char 
  3499 ;;  a               4   12[COMRAM] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  grs             1   23[COMRAM] unsigned char 
  3502 ;;  bexp            1   22[COMRAM] unsigned char 
  3503 ;;  aexp            1   21[COMRAM] unsigned char 
  3504 ;;  signs           1   20[COMRAM] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4    8[COMRAM] unsigned char 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;Total ram usage:       16 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 6
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_rangeCalibrate
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text17
  3529   001A96                     __ptext17:
  3530                           	callstack 0
  3531   001A96                     ___fladd:
  3532                           	callstack 23
  3533   001A96  500C               	movf	(___fladd@b+3)^0,w,c
  3534   001A98  0B80               	andlw	128
  3535   001A9A  6E15               	movwf	___fladd@signs^0,c
  3536   001A9C  500C               	movf	(___fladd@b+3)^0,w,c
  3537   001A9E  240C               	addwf	(___fladd@b+3)^0,w,c
  3538   001AA0  6E17               	movwf	___fladd@bexp^0,c
  3539   001AA2  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3540   001AA4  EF56  F00D         	goto	u2131
  3541   001AA8  EF58  F00D         	goto	u2130
  3542   001AAC                     u2131:
  3543   001AAC  EF59  F00D         	goto	l3152
  3544   001AB0                     u2130:
  3545   001AB0  8017               	bsf	___fladd@bexp^0,0,c
  3546   001AB2                     l3152:
  3547   001AB2  5017               	movf	___fladd@bexp^0,w,c
  3548   001AB4  B4D8               	btfsc	status,2,c
  3549   001AB6  EF5F  F00D         	goto	u2141
  3550   001ABA  EF61  F00D         	goto	u2140
  3551   001ABE                     u2141:
  3552   001ABE  EF76  F00D         	goto	l3162
  3553   001AC2                     u2140:
  3554   001AC2  2817               	incf	___fladd@bexp^0,w,c
  3555   001AC4  A4D8               	btfss	status,2,c
  3556   001AC6  EF67  F00D         	goto	u2151
  3557   001ACA  EF69  F00D         	goto	u2150
  3558   001ACE                     u2151:
  3559   001ACE  EF71  F00D         	goto	l3158
  3560   001AD2                     u2150:
  3561   001AD2  0E00               	movlw	0
  3562   001AD4  6E09               	movwf	___fladd@b^0,c
  3563   001AD6  0E00               	movlw	0
  3564   001AD8  6E0A               	movwf	(___fladd@b+1)^0,c
  3565   001ADA  0E00               	movlw	0
  3566   001ADC  6E0B               	movwf	(___fladd@b+2)^0,c
  3567   001ADE  0E00               	movlw	0
  3568   001AE0  6E0C               	movwf	(___fladd@b+3)^0,c
  3569   001AE2                     l3158:
  3570   001AE2  8E0B               	bsf	(___fladd@b+2)^0,7,c
  3571   001AE4  0E00               	movlw	0
  3572   001AE6  6E0C               	movwf	(___fladd@b+3)^0,c
  3573   001AE8  EF7E  F00D         	goto	l3164
  3574   001AEC                     l3162:
  3575   001AEC  0E00               	movlw	0
  3576   001AEE  6E09               	movwf	___fladd@b^0,c
  3577   001AF0  0E00               	movlw	0
  3578   001AF2  6E0A               	movwf	(___fladd@b+1)^0,c
  3579   001AF4  0E00               	movlw	0
  3580   001AF6  6E0B               	movwf	(___fladd@b+2)^0,c
  3581   001AF8  0E00               	movlw	0
  3582   001AFA  6E0C               	movwf	(___fladd@b+3)^0,c
  3583   001AFC                     l3164:
  3584   001AFC  5010               	movf	(___fladd@a+3)^0,w,c
  3585   001AFE  0B80               	andlw	128
  3586   001B00  6E16               	movwf	___fladd@aexp^0,c
  3587   001B02  5015               	movf	___fladd@signs^0,w,c
  3588   001B04  1816               	xorwf	___fladd@aexp^0,w,c
  3589   001B06  B4D8               	btfsc	status,2,c
  3590   001B08  EF88  F00D         	goto	u2161
  3591   001B0C  EF8A  F00D         	goto	u2160
  3592   001B10                     u2161:
  3593   001B10  EF8B  F00D         	goto	l3170
  3594   001B14                     u2160:
  3595   001B14  8C15               	bsf	___fladd@signs^0,6,c
  3596   001B16                     l3170:
  3597   001B16  5010               	movf	(___fladd@a+3)^0,w,c
  3598   001B18  2410               	addwf	(___fladd@a+3)^0,w,c
  3599   001B1A  6E16               	movwf	___fladd@aexp^0,c
  3600   001B1C  AE0F               	btfss	(___fladd@a+2)^0,7,c
  3601   001B1E  EF93  F00D         	goto	u2171
  3602   001B22  EF95  F00D         	goto	u2170
  3603   001B26                     u2171:
  3604   001B26  EF96  F00D         	goto	l3176
  3605   001B2A                     u2170:
  3606   001B2A  8016               	bsf	___fladd@aexp^0,0,c
  3607   001B2C                     l3176:
  3608   001B2C  5016               	movf	___fladd@aexp^0,w,c
  3609   001B2E  B4D8               	btfsc	status,2,c
  3610   001B30  EF9C  F00D         	goto	u2181
  3611   001B34  EF9E  F00D         	goto	u2180
  3612   001B38                     u2181:
  3613   001B38  EFB3  F00D         	goto	l3186
  3614   001B3C                     u2180:
  3615   001B3C  2816               	incf	___fladd@aexp^0,w,c
  3616   001B3E  A4D8               	btfss	status,2,c
  3617   001B40  EFA4  F00D         	goto	u2191
  3618   001B44  EFA6  F00D         	goto	u2190
  3619   001B48                     u2191:
  3620   001B48  EFAE  F00D         	goto	l3182
  3621   001B4C                     u2190:
  3622   001B4C  0E00               	movlw	0
  3623   001B4E  6E0D               	movwf	___fladd@a^0,c
  3624   001B50  0E00               	movlw	0
  3625   001B52  6E0E               	movwf	(___fladd@a+1)^0,c
  3626   001B54  0E00               	movlw	0
  3627   001B56  6E0F               	movwf	(___fladd@a+2)^0,c
  3628   001B58  0E00               	movlw	0
  3629   001B5A  6E10               	movwf	(___fladd@a+3)^0,c
  3630   001B5C                     l3182:
  3631   001B5C  8E0F               	bsf	(___fladd@a+2)^0,7,c
  3632   001B5E  0E00               	movlw	0
  3633   001B60  6E10               	movwf	(___fladd@a+3)^0,c
  3634   001B62  EFBB  F00D         	goto	l3188
  3635   001B66                     l3186:
  3636   001B66  0E00               	movlw	0
  3637   001B68  6E0D               	movwf	___fladd@a^0,c
  3638   001B6A  0E00               	movlw	0
  3639   001B6C  6E0E               	movwf	(___fladd@a+1)^0,c
  3640   001B6E  0E00               	movlw	0
  3641   001B70  6E0F               	movwf	(___fladd@a+2)^0,c
  3642   001B72  0E00               	movlw	0
  3643   001B74  6E10               	movwf	(___fladd@a+3)^0,c
  3644   001B76                     l3188:
  3645   001B76  5017               	movf	___fladd@bexp^0,w,c
  3646   001B78  5C16               	subwf	___fladd@aexp^0,w,c
  3647   001B7A  B0D8               	btfsc	status,0,c
  3648   001B7C  EFC2  F00D         	goto	u2201
  3649   001B80  EFC4  F00D         	goto	u2200
  3650   001B84                     u2201:
  3651   001B84  EFEB  F00D         	goto	l3224
  3652   001B88                     u2200:
  3653   001B88  AC15               	btfss	___fladd@signs^0,6,c
  3654   001B8A  EFC9  F00D         	goto	u2211
  3655   001B8E  EFCB  F00D         	goto	u2210
  3656   001B92                     u2211:
  3657   001B92  EFCD  F00D         	goto	l3194
  3658   001B96                     u2210:
  3659   001B96  0E80               	movlw	128
  3660   001B98  1A15               	xorwf	___fladd@signs^0,f,c
  3661   001B9A                     l3194:
  3662   001B9A  C017  F018         	movff	___fladd@bexp,___fladd@grs
  3663   001B9E  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3664   001BA2  C018  F016         	movff	___fladd@grs,___fladd@aexp
  3665   001BA6  C009  F018         	movff	___fladd@b,___fladd@grs
  3666   001BAA  C00D  F009         	movff	___fladd@a,___fladd@b
  3667   001BAE  C018  F00D         	movff	___fladd@grs,___fladd@a
  3668   001BB2  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  3669   001BB6  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  3670   001BBA  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  3671   001BBE  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  3672   001BC2  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  3673   001BC6  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  3674   001BCA  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  3675   001BCE  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  3676   001BD2  C018  F010         	movff	___fladd@grs,___fladd@a+3
  3677   001BD6                     l3224:
  3678   001BD6  0E00               	movlw	0
  3679   001BD8  6E18               	movwf	___fladd@grs^0,c
  3680   001BDA  5017               	movf	___fladd@bexp^0,w,c
  3681   001BDC  C016  F011         	movff	___fladd@aexp,??___fladd
  3682   001BE0  6A12               	clrf	(??___fladd+1)^0,c
  3683   001BE2  5E11               	subwf	??___fladd^0,f,c
  3684   001BE4  0E00               	movlw	0
  3685   001BE6  5A12               	subwfb	(??___fladd+1)^0,f,c
  3686   001BE8  BE12               	btfsc	(??___fladd+1)^0,7,c
  3687   001BEA  EF00  F00E         	goto	u2221
  3688   001BEE  5012               	movf	(??___fladd+1)^0,w,c
  3689   001BF0  E109               	bnz	u2220
  3690   001BF2  0E1A               	movlw	26
  3691   001BF4  5C11               	subwf	??___fladd^0,w,c
  3692   001BF6  A0D8               	btfss	status,0,c
  3693   001BF8  EF00  F00E         	goto	u2221
  3694   001BFC  EF02  F00E         	goto	u2220
  3695   001C00                     u2221:
  3696   001C00  EF39  F00E         	goto	l1239
  3697   001C04                     u2220:
  3698   001C04  5009               	movf	___fladd@b^0,w,c
  3699   001C06  100A               	iorwf	(___fladd@b+1)^0,w,c
  3700   001C08  100B               	iorwf	(___fladd@b+2)^0,w,c
  3701   001C0A  100C               	iorwf	(___fladd@b+3)^0,w,c
  3702   001C0C  A4D8               	btfss	status,2,c
  3703   001C0E  EF0B  F00E         	goto	u2231
  3704   001C12  EF0E  F00E         	goto	u2230
  3705   001C16                     u2231:
  3706   001C16  0E01               	movlw	1
  3707   001C18  EF0F  F00E         	goto	u2240
  3708   001C1C                     u2230:
  3709   001C1C  0E00               	movlw	0
  3710   001C1E                     u2240:
  3711   001C1E  6E18               	movwf	___fladd@grs^0,c
  3712   001C20  0E00               	movlw	0
  3713   001C22  6E09               	movwf	___fladd@b^0,c
  3714   001C24  0E00               	movlw	0
  3715   001C26  6E0A               	movwf	(___fladd@b+1)^0,c
  3716   001C28  0E00               	movlw	0
  3717   001C2A  6E0B               	movwf	(___fladd@b+2)^0,c
  3718   001C2C  0E00               	movlw	0
  3719   001C2E  6E0C               	movwf	(___fladd@b+3)^0,c
  3720   001C30  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3721   001C34  EF42  F00E         	goto	l1238
  3722   001C38                     l1240:
  3723   001C38  A018               	btfss	___fladd@grs^0,0,c
  3724   001C3A  EF21  F00E         	goto	u2251
  3725   001C3E  EF23  F00E         	goto	u2250
  3726   001C42                     u2251:
  3727   001C42  EF29  F00E         	goto	l3236
  3728   001C46                     u2250:
  3729   001C46  90D8               	bcf	status,0,c
  3730   001C48  3018               	rrcf	___fladd@grs^0,w,c
  3731   001C4A  0901               	iorlw	1
  3732   001C4C  6E18               	movwf	___fladd@grs^0,c
  3733   001C4E  EF2B  F00E         	goto	l3238
  3734   001C52                     l3236:
  3735   001C52  90D8               	bcf	status,0,c
  3736   001C54  3218               	rrcf	___fladd@grs^0,f,c
  3737   001C56                     l3238:
  3738   001C56  A009               	btfss	___fladd@b^0,0,c
  3739   001C58  EF30  F00E         	goto	u2261
  3740   001C5C  EF32  F00E         	goto	u2260
  3741   001C60                     u2261:
  3742   001C60  EF33  F00E         	goto	l3242
  3743   001C64                     u2260:
  3744   001C64  8E18               	bsf	___fladd@grs^0,7,c
  3745   001C66                     l3242:
  3746   001C66  340C               	rlcf	(___fladd@b+3)^0,w,c
  3747   001C68  320C               	rrcf	(___fladd@b+3)^0,f,c
  3748   001C6A  320B               	rrcf	(___fladd@b+2)^0,f,c
  3749   001C6C  320A               	rrcf	(___fladd@b+1)^0,f,c
  3750   001C6E  3209               	rrcf	___fladd@b^0,f,c
  3751   001C70  2A17               	incf	___fladd@bexp^0,f,c
  3752   001C72                     l1239:
  3753   001C72  5016               	movf	___fladd@aexp^0,w,c
  3754   001C74  5C17               	subwf	___fladd@bexp^0,w,c
  3755   001C76  A0D8               	btfss	status,0,c
  3756   001C78  EF40  F00E         	goto	u2271
  3757   001C7C  EF42  F00E         	goto	u2270
  3758   001C80                     u2271:
  3759   001C80  EF1C  F00E         	goto	l1240
  3760   001C84                     u2270:
  3761   001C84                     l1238:
  3762   001C84  BC15               	btfsc	___fladd@signs^0,6,c
  3763   001C86  EF47  F00E         	goto	u2281
  3764   001C8A  EF49  F00E         	goto	u2280
  3765   001C8E                     u2281:
  3766   001C8E  EF89  F00E         	goto	l3270
  3767   001C92                     u2280:
  3768   001C92  5017               	movf	___fladd@bexp^0,w,c
  3769   001C94  A4D8               	btfss	status,2,c
  3770   001C96  EF4F  F00E         	goto	u2291
  3771   001C9A  EF51  F00E         	goto	u2290
  3772   001C9E                     u2291:
  3773   001C9E  EF5B  F00E         	goto	l3252
  3774   001CA2                     u2290:
  3775   001CA2  0E00               	movlw	0
  3776   001CA4  6E09               	movwf	?___fladd^0,c
  3777   001CA6  0E00               	movlw	0
  3778   001CA8  6E0A               	movwf	(?___fladd+1)^0,c
  3779   001CAA  0E00               	movlw	0
  3780   001CAC  6E0B               	movwf	(?___fladd+2)^0,c
  3781   001CAE  0E00               	movlw	0
  3782   001CB0  6E0C               	movwf	(?___fladd+3)^0,c
  3783   001CB2  EFAA  F00F         	goto	l1247
  3784   001CB6                     l3252:
  3785   001CB6  500D               	movf	___fladd@a^0,w,c
  3786   001CB8  2609               	addwf	___fladd@b^0,f,c
  3787   001CBA  500E               	movf	(___fladd@a+1)^0,w,c
  3788   001CBC  220A               	addwfc	(___fladd@b+1)^0,f,c
  3789   001CBE  500F               	movf	(___fladd@a+2)^0,w,c
  3790   001CC0  220B               	addwfc	(___fladd@b+2)^0,f,c
  3791   001CC2  5010               	movf	(___fladd@a+3)^0,w,c
  3792   001CC4  220C               	addwfc	(___fladd@b+3)^0,f,c
  3793   001CC6  A00C               	btfss	(___fladd@b+3)^0,0,c
  3794   001CC8  EF68  F00E         	goto	u2301
  3795   001CCC  EF6A  F00E         	goto	u2300
  3796   001CD0                     u2301:
  3797   001CD0  EF16  F00F         	goto	l3306
  3798   001CD4                     u2300:
  3799   001CD4  A018               	btfss	___fladd@grs^0,0,c
  3800   001CD6  EF6F  F00E         	goto	u2311
  3801   001CDA  EF71  F00E         	goto	u2310
  3802   001CDE                     u2311:
  3803   001CDE  EF77  F00E         	goto	l3260
  3804   001CE2                     u2310:
  3805   001CE2  90D8               	bcf	status,0,c
  3806   001CE4  3018               	rrcf	___fladd@grs^0,w,c
  3807   001CE6  0901               	iorlw	1
  3808   001CE8  6E18               	movwf	___fladd@grs^0,c
  3809   001CEA  EF79  F00E         	goto	l3262
  3810   001CEE                     l3260:
  3811   001CEE  90D8               	bcf	status,0,c
  3812   001CF0  3218               	rrcf	___fladd@grs^0,f,c
  3813   001CF2                     l3262:
  3814   001CF2  A009               	btfss	___fladd@b^0,0,c
  3815   001CF4  EF7E  F00E         	goto	u2321
  3816   001CF8  EF80  F00E         	goto	u2320
  3817   001CFC                     u2321:
  3818   001CFC  EF81  F00E         	goto	l3266
  3819   001D00                     u2320:
  3820   001D00  8E18               	bsf	___fladd@grs^0,7,c
  3821   001D02                     l3266:
  3822   001D02  340C               	rlcf	(___fladd@b+3)^0,w,c
  3823   001D04  320C               	rrcf	(___fladd@b+3)^0,f,c
  3824   001D06  320B               	rrcf	(___fladd@b+2)^0,f,c
  3825   001D08  320A               	rrcf	(___fladd@b+1)^0,f,c
  3826   001D0A  3209               	rrcf	___fladd@b^0,f,c
  3827   001D0C  2A17               	incf	___fladd@bexp^0,f,c
  3828   001D0E  EF16  F00F         	goto	l3306
  3829   001D12                     l3270:
  3830   001D12  500D               	movf	___fladd@a^0,w,c
  3831   001D14  5C09               	subwf	___fladd@b^0,w,c
  3832   001D16  500E               	movf	(___fladd@a+1)^0,w,c
  3833   001D18  580A               	subwfb	(___fladd@b+1)^0,w,c
  3834   001D1A  500F               	movf	(___fladd@a+2)^0,w,c
  3835   001D1C  580B               	subwfb	(___fladd@b+2)^0,w,c
  3836   001D1E  500C               	movf	(___fladd@b+3)^0,w,c
  3837   001D20  0A80               	xorlw	128
  3838   001D22  6E11               	movwf	??___fladd^0,c
  3839   001D24  5010               	movf	(___fladd@a+3)^0,w,c
  3840   001D26  0A80               	xorlw	128
  3841   001D28  5811               	subwfb	??___fladd^0,w,c
  3842   001D2A  B0D8               	btfsc	status,0,c
  3843   001D2C  EF9A  F00E         	goto	u2331
  3844   001D30  EF9C  F00E         	goto	u2330
  3845   001D34                     u2331:
  3846   001D34  EFC7  F00E         	goto	l3280
  3847   001D38                     u2330:
  3848   001D38  5009               	movf	___fladd@b^0,w,c
  3849   001D3A  5C0D               	subwf	___fladd@a^0,w,c
  3850   001D3C  6E11               	movwf	??___fladd^0,c
  3851   001D3E  500A               	movf	(___fladd@b+1)^0,w,c
  3852   001D40  580E               	subwfb	(___fladd@a+1)^0,w,c
  3853   001D42  6E12               	movwf	(??___fladd+1)^0,c
  3854   001D44  500B               	movf	(___fladd@b+2)^0,w,c
  3855   001D46  580F               	subwfb	(___fladd@a+2)^0,w,c
  3856   001D48  6E13               	movwf	(??___fladd+2)^0,c
  3857   001D4A  500C               	movf	(___fladd@b+3)^0,w,c
  3858   001D4C  5810               	subwfb	(___fladd@a+3)^0,w,c
  3859   001D4E  6E14               	movwf	(??___fladd+3)^0,c
  3860   001D50  0EFF               	movlw	255
  3861   001D52  2411               	addwf	??___fladd^0,w,c
  3862   001D54  6E09               	movwf	___fladd@b^0,c
  3863   001D56  0EFF               	movlw	255
  3864   001D58  2012               	addwfc	(??___fladd+1)^0,w,c
  3865   001D5A  6E0A               	movwf	(___fladd@b+1)^0,c
  3866   001D5C  0EFF               	movlw	255
  3867   001D5E  2013               	addwfc	(??___fladd+2)^0,w,c
  3868   001D60  6E0B               	movwf	(___fladd@b+2)^0,c
  3869   001D62  0EFF               	movlw	255
  3870   001D64  2014               	addwfc	(??___fladd+3)^0,w,c
  3871   001D66  6E0C               	movwf	(___fladd@b+3)^0,c
  3872   001D68  0E80               	movlw	128
  3873   001D6A  1A15               	xorwf	___fladd@signs^0,f,c
  3874   001D6C  6C18               	negf	___fladd@grs^0,c
  3875   001D6E  5018               	movf	___fladd@grs^0,w,c
  3876   001D70  A4D8               	btfss	status,2,c
  3877   001D72  EFBD  F00E         	goto	u2341
  3878   001D76  EFBF  F00E         	goto	u2340
  3879   001D7A                     u2341:
  3880   001D7A  EFCF  F00E         	goto	l1255
  3881   001D7E                     u2340:
  3882   001D7E  0E01               	movlw	1
  3883   001D80  2609               	addwf	___fladd@b^0,f,c
  3884   001D82  0E00               	movlw	0
  3885   001D84  220A               	addwfc	(___fladd@b+1)^0,f,c
  3886   001D86  220B               	addwfc	(___fladd@b+2)^0,f,c
  3887   001D88  220C               	addwfc	(___fladd@b+3)^0,f,c
  3888   001D8A  EFCF  F00E         	goto	l1255
  3889   001D8E                     l3280:
  3890   001D8E  500D               	movf	___fladd@a^0,w,c
  3891   001D90  5E09               	subwf	___fladd@b^0,f,c
  3892   001D92  500E               	movf	(___fladd@a+1)^0,w,c
  3893   001D94  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  3894   001D96  500F               	movf	(___fladd@a+2)^0,w,c
  3895   001D98  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  3896   001D9A  5010               	movf	(___fladd@a+3)^0,w,c
  3897   001D9C  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  3898   001D9E                     l1255:
  3899   001D9E  5009               	movf	___fladd@b^0,w,c
  3900   001DA0  100A               	iorwf	(___fladd@b+1)^0,w,c
  3901   001DA2  100B               	iorwf	(___fladd@b+2)^0,w,c
  3902   001DA4  100C               	iorwf	(___fladd@b+3)^0,w,c
  3903   001DA6  A4D8               	btfss	status,2,c
  3904   001DA8  EFD8  F00E         	goto	u2351
  3905   001DAC  EFDA  F00E         	goto	u2350
  3906   001DB0                     u2351:
  3907   001DB0  EF0F  F00F         	goto	l3304
  3908   001DB4                     u2350:
  3909   001DB4  5018               	movf	___fladd@grs^0,w,c
  3910   001DB6  A4D8               	btfss	status,2,c
  3911   001DB8  EFE0  F00E         	goto	u2361
  3912   001DBC  EFE2  F00E         	goto	u2360
  3913   001DC0                     u2361:
  3914   001DC0  EF0F  F00F         	goto	l3304
  3915   001DC4                     u2360:
  3916   001DC4  0E00               	movlw	0
  3917   001DC6  6E09               	movwf	?___fladd^0,c
  3918   001DC8  0E00               	movlw	0
  3919   001DCA  6E0A               	movwf	(?___fladd+1)^0,c
  3920   001DCC  0E00               	movlw	0
  3921   001DCE  6E0B               	movwf	(?___fladd+2)^0,c
  3922   001DD0  0E00               	movlw	0
  3923   001DD2  6E0C               	movwf	(?___fladd+3)^0,c
  3924   001DD4  EFAA  F00F         	goto	l1247
  3925   001DD8                     l3288:
  3926   001DD8  90D8               	bcf	status,0,c
  3927   001DDA  3609               	rlcf	___fladd@b^0,f,c
  3928   001DDC  360A               	rlcf	(___fladd@b+1)^0,f,c
  3929   001DDE  360B               	rlcf	(___fladd@b+2)^0,f,c
  3930   001DE0  360C               	rlcf	(___fladd@b+3)^0,f,c
  3931   001DE2  AE18               	btfss	___fladd@grs^0,7,c
  3932   001DE4  EFF6  F00E         	goto	u2371
  3933   001DE8  EFF8  F00E         	goto	u2370
  3934   001DEC                     u2371:
  3935   001DEC  EFF9  F00E         	goto	l3294
  3936   001DF0                     u2370:
  3937   001DF0  8009               	bsf	___fladd@b^0,0,c
  3938   001DF2                     l3294:
  3939   001DF2  A018               	btfss	___fladd@grs^0,0,c
  3940   001DF4  EFFE  F00E         	goto	u2381
  3941   001DF8  EF00  F00F         	goto	u2380
  3942   001DFC                     u2381:
  3943   001DFC  EF04  F00F         	goto	l3298
  3944   001E00                     u2380:
  3945   001E00  80D8               	bsf	status,0,c
  3946   001E02  3618               	rlcf	___fladd@grs^0,f,c
  3947   001E04  EF06  F00F         	goto	l3300
  3948   001E08                     l3298:
  3949   001E08  90D8               	bcf	status,0,c
  3950   001E0A  3618               	rlcf	___fladd@grs^0,f,c
  3951   001E0C                     l3300:
  3952   001E0C  5017               	movf	___fladd@bexp^0,w,c
  3953   001E0E  B4D8               	btfsc	status,2,c
  3954   001E10  EF0C  F00F         	goto	u2391
  3955   001E14  EF0E  F00F         	goto	u2390
  3956   001E18                     u2391:
  3957   001E18  EF0F  F00F         	goto	l3304
  3958   001E1C                     u2390:
  3959   001E1C  0617               	decf	___fladd@bexp^0,f,c
  3960   001E1E                     l3304:
  3961   001E1E  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3962   001E20  EF14  F00F         	goto	u2401
  3963   001E24  EF16  F00F         	goto	u2400
  3964   001E28                     u2401:
  3965   001E28  EFEC  F00E         	goto	l3288
  3966   001E2C                     u2400:
  3967   001E2C                     l3306:
  3968   001E2C  0E00               	movlw	0
  3969   001E2E  6E16               	movwf	___fladd@aexp^0,c
  3970   001E30  AE18               	btfss	___fladd@grs^0,7,c
  3971   001E32  EF1D  F00F         	goto	u2411
  3972   001E36  EF1F  F00F         	goto	u2410
  3973   001E3A                     u2411:
  3974   001E3A  EF37  F00F         	goto	l1264
  3975   001E3E                     u2410:
  3976   001E3E  C018  F011         	movff	___fladd@grs,??___fladd
  3977   001E42  0E7F               	movlw	127
  3978   001E44  1611               	andwf	??___fladd^0,f,c
  3979   001E46  B4D8               	btfsc	status,2,c
  3980   001E48  EF28  F00F         	goto	u2421
  3981   001E4C  EF2A  F00F         	goto	u2420
  3982   001E50                     u2421:
  3983   001E50  EF2E  F00F         	goto	l1265
  3984   001E54                     u2420:
  3985   001E54                     l3312:
  3986   001E54  0E01               	movlw	1
  3987   001E56  6E16               	movwf	___fladd@aexp^0,c
  3988   001E58  EF37  F00F         	goto	l1264
  3989   001E5C                     l1265:
  3990   001E5C  A009               	btfss	___fladd@b^0,0,c
  3991   001E5E  EF33  F00F         	goto	u2431
  3992   001E62  EF35  F00F         	goto	u2430
  3993   001E66                     u2431:
  3994   001E66  EF37  F00F         	goto	l1264
  3995   001E6A                     u2430:
  3996   001E6A  EF2A  F00F         	goto	l3312
  3997   001E6E                     l1264:
  3998   001E6E  5016               	movf	___fladd@aexp^0,w,c
  3999   001E70  B4D8               	btfsc	status,2,c
  4000   001E72  EF3D  F00F         	goto	u2441
  4001   001E76  EF3F  F00F         	goto	u2440
  4002   001E7A                     u2441:
  4003   001E7A  EF6A  F00F         	goto	l3324
  4004   001E7E                     u2440:
  4005   001E7E  0E01               	movlw	1
  4006   001E80  2609               	addwf	___fladd@b^0,f,c
  4007   001E82  0E00               	movlw	0
  4008   001E84  220A               	addwfc	(___fladd@b+1)^0,f,c
  4009   001E86  220B               	addwfc	(___fladd@b+2)^0,f,c
  4010   001E88  220C               	addwfc	(___fladd@b+3)^0,f,c
  4011   001E8A  A00C               	btfss	(___fladd@b+3)^0,0,c
  4012   001E8C  EF4A  F00F         	goto	u2451
  4013   001E90  EF4C  F00F         	goto	u2450
  4014   001E94                     u2451:
  4015   001E94  EF6A  F00F         	goto	l3324
  4016   001E98                     u2450:
  4017   001E98  C009  F011         	movff	___fladd@b,??___fladd
  4018   001E9C  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  4019   001EA0  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  4020   001EA4  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  4021   001EA8  3414               	rlcf	(??___fladd+3)^0,w,c
  4022   001EAA  3214               	rrcf	(??___fladd+3)^0,f,c
  4023   001EAC  3213               	rrcf	(??___fladd+2)^0,f,c
  4024   001EAE  3212               	rrcf	(??___fladd+1)^0,f,c
  4025   001EB0  3211               	rrcf	??___fladd^0,f,c
  4026   001EB2  C011  F009         	movff	??___fladd,___fladd@b
  4027   001EB6  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  4028   001EBA  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  4029   001EBE  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  4030   001EC2  2817               	incf	___fladd@bexp^0,w,c
  4031   001EC4  B4D8               	btfsc	status,2,c
  4032   001EC6  EF67  F00F         	goto	u2461
  4033   001ECA  EF69  F00F         	goto	u2460
  4034   001ECE                     u2461:
  4035   001ECE  EF6A  F00F         	goto	l3324
  4036   001ED2                     u2460:
  4037   001ED2  2A17               	incf	___fladd@bexp^0,f,c
  4038   001ED4                     l3324:
  4039   001ED4  2817               	incf	___fladd@bexp^0,w,c
  4040   001ED6  B4D8               	btfsc	status,2,c
  4041   001ED8  EF70  F00F         	goto	u2471
  4042   001EDC  EF72  F00F         	goto	u2470
  4043   001EE0                     u2471:
  4044   001EE0  EF7A  F00F         	goto	l3328
  4045   001EE4                     u2470:
  4046   001EE4  5017               	movf	___fladd@bexp^0,w,c
  4047   001EE6  A4D8               	btfss	status,2,c
  4048   001EE8  EF78  F00F         	goto	u2481
  4049   001EEC  EF7A  F00F         	goto	u2480
  4050   001EF0                     u2481:
  4051   001EF0  EF8C  F00F         	goto	l3332
  4052   001EF4                     u2480:
  4053   001EF4                     l3328:
  4054   001EF4  0E00               	movlw	0
  4055   001EF6  6E09               	movwf	___fladd@b^0,c
  4056   001EF8  0E00               	movlw	0
  4057   001EFA  6E0A               	movwf	(___fladd@b+1)^0,c
  4058   001EFC  0E00               	movlw	0
  4059   001EFE  6E0B               	movwf	(___fladd@b+2)^0,c
  4060   001F00  0E00               	movlw	0
  4061   001F02  6E0C               	movwf	(___fladd@b+3)^0,c
  4062   001F04  5017               	movf	___fladd@bexp^0,w,c
  4063   001F06  A4D8               	btfss	status,2,c
  4064   001F08  EF88  F00F         	goto	u2491
  4065   001F0C  EF8A  F00F         	goto	u2490
  4066   001F10                     u2491:
  4067   001F10  EF8C  F00F         	goto	l3332
  4068   001F14                     u2490:
  4069   001F14  0E00               	movlw	0
  4070   001F16  6E15               	movwf	___fladd@signs^0,c
  4071   001F18                     l3332:
  4072   001F18  A017               	btfss	___fladd@bexp^0,0,c
  4073   001F1A  EF91  F00F         	goto	u2501
  4074   001F1E  EF93  F00F         	goto	u2500
  4075   001F22                     u2501:
  4076   001F22  EF96  F00F         	goto	l3336
  4077   001F26                     u2500:
  4078   001F26  8E0B               	bsf	(___fladd@b+2)^0,7,c
  4079   001F28  EF97  F00F         	goto	l3338
  4080   001F2C                     l3336:
  4081   001F2C  9E0B               	bcf	(___fladd@b+2)^0,7,c
  4082   001F2E                     l3338:
  4083   001F2E  90D8               	bcf	status,0,c
  4084   001F30  3017               	rrcf	___fladd@bexp^0,w,c
  4085   001F32  6E0C               	movwf	(___fladd@b+3)^0,c
  4086   001F34  AE15               	btfss	___fladd@signs^0,7,c
  4087   001F36  EF9F  F00F         	goto	u2511
  4088   001F3A  EFA1  F00F         	goto	u2510
  4089   001F3E                     u2511:
  4090   001F3E  EFA2  F00F         	goto	l3344
  4091   001F42                     u2510:
  4092   001F42  8E0C               	bsf	(___fladd@b+3)^0,7,c
  4093   001F44                     l3344:
  4094   001F44  C009  F009         	movff	___fladd@b,?___fladd
  4095   001F48  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  4096   001F4C  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  4097   001F50  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  4098   001F54                     l1247:
  4099   001F54  0012               	return		;funcret
  4100   001F56                     __end_of___fladd:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _persistence_register *****************
  4104 ;; Defined at:
  4105 ;;		line 43 in file "interrupts.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 9
  4126 ;; This function calls:
  4127 ;;		_color_writetoaddr
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text18
  4134   003C38                     __ptext18:
  4135                           	callstack 0
  4136   003C38                     _persistence_register:
  4137                           	callstack 21
  4138   003C38                     
  4139                           ;interrupts.c: 45:  color_writetoaddr(0x0C, 0b010);
  4140   003C38  0E02               	movlw	2
  4141   003C3A  6E0B               	movwf	color_writetoaddr@value^0,c
  4142   003C3C  0E0C               	movlw	12
  4143   003C3E  ECD0  F01D         	call	_color_writetoaddr
  4144   003C42  0012               	return		;funcret
  4145   003C44                     __end_of_persistence_register:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _motor_retrace *****************
  4149 ;; Defined at:
  4150 ;;		line 331 in file "color.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  4153 ;;		 -> buggy_path(15), 
  4154 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4155 ;;		 -> main@mL(9), 
  4156 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4157 ;;		 -> main@mR(9), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;Total ram usage:        9 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 10
  4176 ;; This function calls:
  4177 ;;		_fullSpeedAhead
  4178 ;;		_norm_stop
  4179 ;;		_turnLeft
  4180 ;;		_turnPrep
  4181 ;;		_turnRight
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text19
  4188   001F56                     __ptext19:
  4189                           	callstack 0
  4190   001F56                     _motor_retrace:
  4191                           	callstack 20
  4192   001F56                     
  4193                           ;color.c: 332:     if (buggy_path[buggy_step - 2] == 1) {
  4194   001F56  5051               	movf	_buggy_step^0,w,c
  4195   001F58  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4196   001F5A  6E2D               	movwf	??_motor_retrace^0,c
  4197   001F5C  5052               	movf	(_buggy_step+1)^0,w,c
  4198   001F5E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4199   001F60  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4200   001F62  0EFE               	movlw	254
  4201   001F64  242D               	addwf	??_motor_retrace^0,w,c
  4202   001F66  6ED9               	movwf	fsr2l,c
  4203   001F68  0EFF               	movlw	255
  4204   001F6A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4205   001F6C  6EDA               	movwf	fsr2h,c
  4206   001F6E  04DE               	decf	postinc2,w,c
  4207   001F70  A4D8               	btfss	status,2,c
  4208   001F72  EFBD  F00F         	goto	u2981
  4209   001F76  EFBF  F00F         	goto	u2980
  4210   001F7A                     u2981:
  4211   001F7A  EFE1  F00F         	goto	l3630
  4212   001F7E                     u2980:
  4213   001F7E                     
  4214                           ;color.c: 333:         turnPrep(mL, mR);
  4215   001F7E  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4216   001F82  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4217   001F86  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4218   001F8A  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4219   001F8E  ECF7  F01B         	call	_turnPrep	;wreg free
  4220                           
  4221                           ;color.c: 334:         turnLeft(mL, mR);
  4222   001F92  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4223   001F96  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4224   001F9A  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4225   001F9E  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4226   001FA2  EC54  F01B         	call	_turnLeft	;wreg free
  4227   001FA6                     
  4228                           ;color.c: 335:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4229   001FA6  0E11               	movlw	17
  4230   001FA8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4231   001FAA  0E3C               	movlw	60
  4232   001FAC  6E2D               	movwf	??_motor_retrace^0,c
  4233   001FAE  0ECB               	movlw	203
  4234   001FB0                     u3407:
  4235   001FB0  2EE8               	decfsz	wreg,f,c
  4236   001FB2  D7FE               	bra	u3407
  4237   001FB4  2E2D               	decfsz	??_motor_retrace^0,f,c
  4238   001FB6  D7FC               	bra	u3407
  4239   001FB8  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4240   001FBA  D7FA               	bra	u3407
  4241   001FBC  F000               	nop	
  4242                           
  4243                           ;color.c: 337:     } else if (buggy_path[buggy_step - 2] == 2) {
  4244   001FBE  EF8E  F011         	goto	l197
  4245   001FC2                     l3630:
  4246   001FC2  5051               	movf	_buggy_step^0,w,c
  4247   001FC4  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4248   001FC6  6E2D               	movwf	??_motor_retrace^0,c
  4249   001FC8  5052               	movf	(_buggy_step+1)^0,w,c
  4250   001FCA  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4251   001FCC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4252   001FCE  0EFE               	movlw	254
  4253   001FD0  242D               	addwf	??_motor_retrace^0,w,c
  4254   001FD2  6ED9               	movwf	fsr2l,c
  4255   001FD4  0EFF               	movlw	255
  4256   001FD6  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4257   001FD8  6EDA               	movwf	fsr2h,c
  4258   001FDA  0E02               	movlw	2
  4259   001FDC  18DE               	xorwf	postinc2,w,c
  4260   001FDE  A4D8               	btfss	status,2,c
  4261   001FE0  EFF4  F00F         	goto	u2991
  4262   001FE4  EFF6  F00F         	goto	u2990
  4263   001FE8                     u2991:
  4264   001FE8  EF18  F010         	goto	l3636
  4265   001FEC                     u2990:
  4266   001FEC                     
  4267                           ;color.c: 338:         turnPrep(mL, mR);
  4268   001FEC  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4269   001FF0  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4270   001FF4  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4271   001FF8  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4272   001FFC  ECF7  F01B         	call	_turnPrep	;wreg free
  4273                           
  4274                           ;color.c: 339:         turnRight(mL, mR);
  4275   002000  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4276   002004  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4277   002008  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4278   00200C  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4279   002010  EC1B  F01B         	call	_turnRight	;wreg free
  4280   002014                     
  4281                           ;color.c: 340:         _delay((unsigned long)((215)*(64000000/4000.0)));
  4282   002014  0E12               	movlw	18
  4283   002016  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4284   002018  0E74               	movlw	116
  4285   00201A  6E2D               	movwf	??_motor_retrace^0,c
  4286   00201C  0E7A               	movlw	122
  4287   00201E                     u3417:
  4288   00201E  2EE8               	decfsz	wreg,f,c
  4289   002020  D7FE               	bra	u3417
  4290   002022  2E2D               	decfsz	??_motor_retrace^0,f,c
  4291   002024  D7FC               	bra	u3417
  4292   002026  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4293   002028  D7FA               	bra	u3417
  4294   00202A  D000               	nop2	
  4295                           
  4296                           ;color.c: 342:     } else if (buggy_path[buggy_step - 2] == 3) {
  4297   00202C  EF8E  F011         	goto	l197
  4298   002030                     l3636:
  4299   002030  5051               	movf	_buggy_step^0,w,c
  4300   002032  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4301   002034  6E2D               	movwf	??_motor_retrace^0,c
  4302   002036  5052               	movf	(_buggy_step+1)^0,w,c
  4303   002038  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4304   00203A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4305   00203C  0EFE               	movlw	254
  4306   00203E  242D               	addwf	??_motor_retrace^0,w,c
  4307   002040  6ED9               	movwf	fsr2l,c
  4308   002042  0EFF               	movlw	255
  4309   002044  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4310   002046  6EDA               	movwf	fsr2h,c
  4311   002048  0E03               	movlw	3
  4312   00204A  18DE               	xorwf	postinc2,w,c
  4313   00204C  A4D8               	btfss	status,2,c
  4314   00204E  EF2B  F010         	goto	u3001
  4315   002052  EF2D  F010         	goto	u3000
  4316   002056                     u3001:
  4317   002056  EF4F  F010         	goto	l3642
  4318   00205A                     u3000:
  4319   00205A                     
  4320                           ;color.c: 343:         turnPrep(mL, mR);
  4321   00205A  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4322   00205E  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4323   002062  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4324   002066  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4325   00206A  ECF7  F01B         	call	_turnPrep	;wreg free
  4326                           
  4327                           ;color.c: 344:         turnLeft(mL, mR);
  4328   00206E  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4329   002072  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4330   002076  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4331   00207A  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4332   00207E  EC54  F01B         	call	_turnLeft	;wreg free
  4333   002082                     
  4334                           ;color.c: 345:         _delay((unsigned long)((385)*(64000000/4000.0)));
  4335   002082  0E20               	movlw	32
  4336   002084  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4337   002086  0E40               	movlw	64
  4338   002088  6E2D               	movwf	??_motor_retrace^0,c
  4339   00208A  0EE9               	movlw	233
  4340   00208C                     u3427:
  4341   00208C  2EE8               	decfsz	wreg,f,c
  4342   00208E  D7FE               	bra	u3427
  4343   002090  2E2D               	decfsz	??_motor_retrace^0,f,c
  4344   002092  D7FC               	bra	u3427
  4345   002094  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4346   002096  D7FA               	bra	u3427
  4347   002098  F000               	nop	
  4348                           
  4349                           ;color.c: 347:     } else if (buggy_path[buggy_step - 2] == 4) {
  4350   00209A  EF8E  F011         	goto	l197
  4351   00209E                     l3642:
  4352   00209E  5051               	movf	_buggy_step^0,w,c
  4353   0020A0  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4354   0020A2  6E2D               	movwf	??_motor_retrace^0,c
  4355   0020A4  5052               	movf	(_buggy_step+1)^0,w,c
  4356   0020A6  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4357   0020A8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4358   0020AA  0EFE               	movlw	254
  4359   0020AC  242D               	addwf	??_motor_retrace^0,w,c
  4360   0020AE  6ED9               	movwf	fsr2l,c
  4361   0020B0  0EFF               	movlw	255
  4362   0020B2  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4363   0020B4  6EDA               	movwf	fsr2h,c
  4364   0020B6  0E04               	movlw	4
  4365   0020B8  18DE               	xorwf	postinc2,w,c
  4366   0020BA  A4D8               	btfss	status,2,c
  4367   0020BC  EF62  F010         	goto	u3011
  4368   0020C0  EF64  F010         	goto	u3010
  4369   0020C4                     u3011:
  4370   0020C4  EFB1  F010         	goto	l3654
  4371   0020C8                     u3010:
  4372   0020C8                     
  4373                           ;color.c: 348:         turnPrep(mL, mR);
  4374   0020C8  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4375   0020CC  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4376   0020D0  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4377   0020D4  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4378   0020D8  ECF7  F01B         	call	_turnPrep	;wreg free
  4379                           
  4380                           ;color.c: 349:         turnLeft(mL, mR);
  4381   0020DC  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4382   0020E0  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4383   0020E4  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4384   0020E8  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4385   0020EC  EC54  F01B         	call	_turnLeft	;wreg free
  4386   0020F0                     
  4387                           ;color.c: 350:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4388   0020F0  0E12               	movlw	18
  4389   0020F2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4390   0020F4  0E0C               	movlw	12
  4391   0020F6  6E2D               	movwf	??_motor_retrace^0,c
  4392   0020F8  0E95               	movlw	149
  4393   0020FA                     u3437:
  4394   0020FA  2EE8               	decfsz	wreg,f,c
  4395   0020FC  D7FE               	bra	u3437
  4396   0020FE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4397   002100  D7FC               	bra	u3437
  4398   002102  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4399   002104  D7FA               	bra	u3437
  4400   002106  F000               	nop	
  4401   002108                     
  4402                           ;color.c: 351:         norm_stop(mL, mR);
  4403   002108  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4404   00210C  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4405   002110  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4406   002114  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4407   002118  EC24  F01D         	call	_norm_stop	;wreg free
  4408                           
  4409                           ;color.c: 352:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4410   00211C  0E09               	movlw	9
  4411   00211E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4412   002120  0E1E               	movlw	30
  4413   002122  6E2D               	movwf	??_motor_retrace^0,c
  4414   002124  0EE4               	movlw	228
  4415   002126                     u3447:
  4416   002126  2EE8               	decfsz	wreg,f,c
  4417   002128  D7FE               	bra	u3447
  4418   00212A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4419   00212C  D7FC               	bra	u3447
  4420   00212E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4421   002130  D7FA               	bra	u3447
  4422   002132  D000               	nop2	
  4423   002134                     
  4424                           ;color.c: 353:         fullSpeedAhead(mL, mR);
  4425   002134  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4426   002138  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4427   00213C  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4428   002140  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4429   002144  ECC9  F019         	call	_fullSpeedAhead	;wreg free
  4430   002148                     
  4431                           ;color.c: 354:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  4432   002148  0E62               	movlw	98
  4433   00214A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4434   00214C  0E67               	movlw	103
  4435   00214E  6E2D               	movwf	??_motor_retrace^0,c
  4436   002150  0ECE               	movlw	206
  4437   002152                     u3457:
  4438   002152  2EE8               	decfsz	wreg,f,c
  4439   002154  D7FE               	bra	u3457
  4440   002156  2E2D               	decfsz	??_motor_retrace^0,f,c
  4441   002158  D7FC               	bra	u3457
  4442   00215A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4443   00215C  D7FA               	bra	u3457
  4444                           
  4445                           ;color.c: 356:     } else if (buggy_path[buggy_step - 2] == 5) {
  4446   00215E  EF8E  F011         	goto	l197
  4447   002162                     l3654:
  4448   002162  5051               	movf	_buggy_step^0,w,c
  4449   002164  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4450   002166  6E2D               	movwf	??_motor_retrace^0,c
  4451   002168  5052               	movf	(_buggy_step+1)^0,w,c
  4452   00216A  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4453   00216C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4454   00216E  0EFE               	movlw	254
  4455   002170  242D               	addwf	??_motor_retrace^0,w,c
  4456   002172  6ED9               	movwf	fsr2l,c
  4457   002174  0EFF               	movlw	255
  4458   002176  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4459   002178  6EDA               	movwf	fsr2h,c
  4460   00217A  0E05               	movlw	5
  4461   00217C  18DE               	xorwf	postinc2,w,c
  4462   00217E  A4D8               	btfss	status,2,c
  4463   002180  EFC4  F010         	goto	u3021
  4464   002184  EFC6  F010         	goto	u3020
  4465   002188                     u3021:
  4466   002188  EF20  F011         	goto	l3668
  4467   00218C                     u3020:
  4468   00218C                     
  4469                           ;color.c: 357:         norm_stop(mL, mR);
  4470   00218C  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4471   002190  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4472   002194  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4473   002198  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4474   00219C  EC24  F01D         	call	_norm_stop	;wreg free
  4475   0021A0                     
  4476                           ;color.c: 358:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4477   0021A0  0E09               	movlw	9
  4478   0021A2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4479   0021A4  0E1E               	movlw	30
  4480   0021A6  6E2D               	movwf	??_motor_retrace^0,c
  4481   0021A8  0EE4               	movlw	228
  4482   0021AA                     u3467:
  4483   0021AA  2EE8               	decfsz	wreg,f,c
  4484   0021AC  D7FE               	bra	u3467
  4485   0021AE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4486   0021B0  D7FC               	bra	u3467
  4487   0021B2  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4488   0021B4  D7FA               	bra	u3467
  4489   0021B6  D000               	nop2	
  4490   0021B8                     
  4491                           ;color.c: 359:         turnRight(mL, mR);
  4492   0021B8  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4493   0021BC  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4494   0021C0  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4495   0021C4  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4496   0021C8  EC1B  F01B         	call	_turnRight	;wreg free
  4497                           
  4498                           ;color.c: 360:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4499   0021CC  0E12               	movlw	18
  4500   0021CE  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4501   0021D0  0E0C               	movlw	12
  4502   0021D2  6E2D               	movwf	??_motor_retrace^0,c
  4503   0021D4  0E95               	movlw	149
  4504   0021D6                     u3477:
  4505   0021D6  2EE8               	decfsz	wreg,f,c
  4506   0021D8  D7FE               	bra	u3477
  4507   0021DA  2E2D               	decfsz	??_motor_retrace^0,f,c
  4508   0021DC  D7FC               	bra	u3477
  4509   0021DE  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4510   0021E0  D7FA               	bra	u3477
  4511   0021E2  F000               	nop	
  4512   0021E4                     
  4513                           ;color.c: 361:         norm_stop(mL, mR);
  4514   0021E4  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4515   0021E8  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4516   0021EC  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4517   0021F0  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4518   0021F4  EC24  F01D         	call	_norm_stop	;wreg free
  4519   0021F8                     
  4520                           ;color.c: 362:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4521   0021F8  0E09               	movlw	9
  4522   0021FA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4523   0021FC  0E1E               	movlw	30
  4524   0021FE  6E2D               	movwf	??_motor_retrace^0,c
  4525   002200  0EE4               	movlw	228
  4526   002202                     u3487:
  4527   002202  2EE8               	decfsz	wreg,f,c
  4528   002204  D7FE               	bra	u3487
  4529   002206  2E2D               	decfsz	??_motor_retrace^0,f,c
  4530   002208  D7FC               	bra	u3487
  4531   00220A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4532   00220C  D7FA               	bra	u3487
  4533   00220E  D000               	nop2	
  4534                           
  4535                           ;color.c: 363:         fullSpeedAhead(mL, mR);
  4536   002210  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4537   002214  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4538   002218  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4539   00221C  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4540   002220  ECC9  F019         	call	_fullSpeedAhead	;wreg free
  4541   002224                     
  4542                           ;color.c: 364:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  4543   002224  0EA3               	movlw	163
  4544   002226  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4545   002228  0E57               	movlw	87
  4546   00222A  6E2D               	movwf	??_motor_retrace^0,c
  4547   00222C  0E02               	movlw	2
  4548   00222E                     u3497:
  4549   00222E  2EE8               	decfsz	wreg,f,c
  4550   002230  D7FE               	bra	u3497
  4551   002232  2E2D               	decfsz	??_motor_retrace^0,f,c
  4552   002234  D7FC               	bra	u3497
  4553   002236  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4554   002238  D7FA               	bra	u3497
  4555   00223A  D000               	nop2	
  4556                           
  4557                           ;color.c: 366:     } else if (buggy_path[buggy_step - 2] == 6) {
  4558   00223C  EF8E  F011         	goto	l197
  4559   002240                     l3668:
  4560   002240  5051               	movf	_buggy_step^0,w,c
  4561   002242  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4562   002244  6E2D               	movwf	??_motor_retrace^0,c
  4563   002246  5052               	movf	(_buggy_step+1)^0,w,c
  4564   002248  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4565   00224A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4566   00224C  0EFE               	movlw	254
  4567   00224E  242D               	addwf	??_motor_retrace^0,w,c
  4568   002250  6ED9               	movwf	fsr2l,c
  4569   002252  0EFF               	movlw	255
  4570   002254  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4571   002256  6EDA               	movwf	fsr2h,c
  4572   002258  0E06               	movlw	6
  4573   00225A  18DE               	xorwf	postinc2,w,c
  4574   00225C  A4D8               	btfss	status,2,c
  4575   00225E  EF33  F011         	goto	u3031
  4576   002262  EF35  F011         	goto	u3030
  4577   002266                     u3031:
  4578   002266  EF57  F011         	goto	l3674
  4579   00226A                     u3030:
  4580   00226A                     
  4581                           ;color.c: 367:         turnPrep(mL, mR);
  4582   00226A  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4583   00226E  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4584   002272  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4585   002276  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4586   00227A  ECF7  F01B         	call	_turnPrep	;wreg free
  4587                           
  4588                           ;color.c: 368:         turnLeft(mL, mR);
  4589   00227E  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4590   002282  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4591   002286  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4592   00228A  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4593   00228E  EC54  F01B         	call	_turnLeft	;wreg free
  4594   002292                     
  4595                           ;color.c: 369:         _delay((unsigned long)((330)*(64000000/4000.0)));
  4596   002292  0E1B               	movlw	27
  4597   002294  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4598   002296  0ECA               	movlw	202
  4599   002298  6E2D               	movwf	??_motor_retrace^0,c
  4600   00229A  0E10               	movlw	16
  4601   00229C                     u3507:
  4602   00229C  2EE8               	decfsz	wreg,f,c
  4603   00229E  D7FE               	bra	u3507
  4604   0022A0  2E2D               	decfsz	??_motor_retrace^0,f,c
  4605   0022A2  D7FC               	bra	u3507
  4606   0022A4  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4607   0022A6  D7FA               	bra	u3507
  4608   0022A8  D000               	nop2	
  4609                           
  4610                           ;color.c: 371:     } else if (buggy_path[buggy_step - 2] == 7) {
  4611   0022AA  EF8E  F011         	goto	l197
  4612   0022AE                     l3674:
  4613   0022AE  5051               	movf	_buggy_step^0,w,c
  4614   0022B0  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4615   0022B2  6E2D               	movwf	??_motor_retrace^0,c
  4616   0022B4  5052               	movf	(_buggy_step+1)^0,w,c
  4617   0022B6  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4618   0022B8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4619   0022BA  0EFE               	movlw	254
  4620   0022BC  242D               	addwf	??_motor_retrace^0,w,c
  4621   0022BE  6ED9               	movwf	fsr2l,c
  4622   0022C0  0EFF               	movlw	255
  4623   0022C2  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4624   0022C4  6EDA               	movwf	fsr2h,c
  4625   0022C6  0E07               	movlw	7
  4626   0022C8  18DE               	xorwf	postinc2,w,c
  4627   0022CA  A4D8               	btfss	status,2,c
  4628   0022CC  EF6A  F011         	goto	u3041
  4629   0022D0  EF6C  F011         	goto	u3040
  4630   0022D4                     u3041:
  4631   0022D4  EF8E  F011         	goto	l191
  4632   0022D8                     u3040:
  4633   0022D8                     
  4634                           ;color.c: 372:         turnPrep(mL, mR);
  4635   0022D8  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4636   0022DC  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4637   0022E0  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4638   0022E4  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4639   0022E8  ECF7  F01B         	call	_turnPrep	;wreg free
  4640                           
  4641                           ;color.c: 373:         turnRight(mL, mR);
  4642   0022EC  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4643   0022F0  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4644   0022F4  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4645   0022F8  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4646   0022FC  EC1B  F01B         	call	_turnRight	;wreg free
  4647   002300                     
  4648                           ;color.c: 374:         _delay((unsigned long)((325)*(64000000/4000.0)));
  4649   002300  0E1B               	movlw	27
  4650   002302  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4651   002304  0E62               	movlw	98
  4652   002306  6E2D               	movwf	??_motor_retrace^0,c
  4653   002308  0E2B               	movlw	43
  4654   00230A                     u3517:
  4655   00230A  2EE8               	decfsz	wreg,f,c
  4656   00230C  D7FE               	bra	u3517
  4657   00230E  2E2D               	decfsz	??_motor_retrace^0,f,c
  4658   002310  D7FC               	bra	u3517
  4659   002312  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4660   002314  D7FA               	bra	u3517
  4661   002316  F000               	nop	
  4662   002318  EF8E  F011         	goto	l197
  4663   00231C                     l191:
  4664   00231C                     l197:
  4665   00231C  0012               	return		;funcret
  4666   00231E                     __end_of_motor_retrace:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _fullSpeedAhead *****************
  4670 ;; Defined at:
  4671 ;;		line 201 in file "dc_motor.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4674 ;;		 -> main@mL(9), 
  4675 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4676 ;;		 -> main@mR(9), 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;Total ram usage:        5 bytes
  4693 ;; Hardware stack levels used: 1
  4694 ;; Hardware stack levels required when called: 8
  4695 ;; This function calls:
  4696 ;;		_setMotorPWM
  4697 ;; This function is called by:
  4698 ;;		_motor_retrace
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text20
  4704   003392                     __ptext20:
  4705                           	callstack 0
  4706   003392                     _fullSpeedAhead:
  4707                           	callstack 21
  4708   003392                     
  4709                           ;dc_motor.c: 201: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 202: {;dc_
      +                          motor.c: 203:     mL->power =5;
  4710   003392  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4711   003396  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4712   00339A  0E05               	movlw	5
  4713   00339C  6EDF               	movwf	indf2,c
  4714                           
  4715                           ;dc_motor.c: 204:     mR->power = 5;
  4716   00339E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4717   0033A2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4718   0033A6  0E05               	movlw	5
  4719   0033A8  6EDF               	movwf	indf2,c
  4720   0033AA                     
  4721                           ;dc_motor.c: 205:     mR->direction = 1;
  4722   0033AA  EE20 F001          	lfsr	2,1
  4723   0033AE  501E               	movf	fullSpeedAhead@mR^0,w,c
  4724   0033B0  26D9               	addwf	fsr2l,f,c
  4725   0033B2  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4726   0033B4  22DA               	addwfc	fsr2h,f,c
  4727   0033B6  0E01               	movlw	1
  4728   0033B8  6EDF               	movwf	indf2,c
  4729   0033BA                     
  4730                           ;dc_motor.c: 206:     mL->direction = 1;
  4731   0033BA  EE20 F001          	lfsr	2,1
  4732   0033BE  501C               	movf	fullSpeedAhead@mL^0,w,c
  4733   0033C0  26D9               	addwf	fsr2l,f,c
  4734   0033C2  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4735   0033C4  22DA               	addwfc	fsr2h,f,c
  4736   0033C6  0E01               	movlw	1
  4737   0033C8  6EDF               	movwf	indf2,c
  4738   0033CA                     
  4739                           ;dc_motor.c: 207:     mL->brakemode = 1;
  4740   0033CA  EE20 F002          	lfsr	2,2
  4741   0033CE  501C               	movf	fullSpeedAhead@mL^0,w,c
  4742   0033D0  26D9               	addwf	fsr2l,f,c
  4743   0033D2  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4744   0033D4  22DA               	addwfc	fsr2h,f,c
  4745   0033D6  0E01               	movlw	1
  4746   0033D8  6EDF               	movwf	indf2,c
  4747   0033DA                     
  4748                           ;dc_motor.c: 208:     mR->brakemode = 1;
  4749   0033DA  EE20 F002          	lfsr	2,2
  4750   0033DE  501E               	movf	fullSpeedAhead@mR^0,w,c
  4751   0033E0  26D9               	addwf	fsr2l,f,c
  4752   0033E2  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4753   0033E4  22DA               	addwfc	fsr2h,f,c
  4754   0033E6  0E01               	movlw	1
  4755   0033E8  6EDF               	movwf	indf2,c
  4756                           
  4757                           ;dc_motor.c: 209:     while (mL->power <= 50 && mR->power <=50)
  4758   0033EA  EF0D  F01A         	goto	l3136
  4759   0033EE                     l3130:
  4760                           
  4761                           ;dc_motor.c: 210:     {;dc_motor.c: 211:         mL->power++;
  4762   0033EE  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4763   0033F2  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4764   0033F6  2ADF               	incf	indf2,f,c
  4765                           
  4766                           ;dc_motor.c: 212:         mR->power++;
  4767   0033F8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4768   0033FC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4769   003400  2ADF               	incf	indf2,f,c
  4770   003402                     
  4771                           ;dc_motor.c: 213:         setMotorPWM(mL);
  4772   003402  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4773   003406  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4774   00340A  ECA0  F017         	call	_setMotorPWM	;wreg free
  4775   00340E                     
  4776                           ;dc_motor.c: 214:         setMotorPWM(mR);
  4777   00340E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4778   003412  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4779   003416  ECA0  F017         	call	_setMotorPWM	;wreg free
  4780   00341A                     l3136:
  4781                           
  4782                           ;dc_motor.c: 209:     while (mL->power <= 50 && mR->power <=50)
  4783   00341A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4784   00341E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4785   003422  0E33               	movlw	51
  4786   003424  60DF               	cpfslt	indf2,c
  4787   003426  EF17  F01A         	goto	u2111
  4788   00342A  EF19  F01A         	goto	u2110
  4789   00342E                     u2111:
  4790   00342E  EF25  F01A         	goto	l3140
  4791   003432                     u2110:
  4792   003432  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4793   003436  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4794   00343A  0E32               	movlw	50
  4795   00343C  64DF               	cpfsgt	indf2,c
  4796   00343E  EF23  F01A         	goto	u2121
  4797   003442  EF25  F01A         	goto	u2120
  4798   003446                     u2121:
  4799   003446  EFF7  F019         	goto	l3130
  4800   00344A                     u2120:
  4801   00344A                     l3140:
  4802                           
  4803                           ;dc_motor.c: 216:     mL->power = 50;
  4804   00344A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4805   00344E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4806   003452  0E32               	movlw	50
  4807   003454  6EDF               	movwf	indf2,c
  4808                           
  4809                           ;dc_motor.c: 217:     mR->power = 50;
  4810   003456  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4811   00345A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4812   00345E  0E32               	movlw	50
  4813   003460  6EDF               	movwf	indf2,c
  4814   003462                     
  4815                           ;dc_motor.c: 218:     setMotorPWM(mL);
  4816   003462  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4817   003466  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4818   00346A  ECA0  F017         	call	_setMotorPWM	;wreg free
  4819   00346E                     
  4820                           ;dc_motor.c: 219:     setMotorPWM(mR);
  4821   00346E  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4822   003472  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4823   003476  ECA0  F017         	call	_setMotorPWM	;wreg free
  4824   00347A  0012               	return		;funcret
  4825   00347C                     __end_of_fullSpeedAhead:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _motor_response *****************
  4829 ;; Defined at:
  4830 ;;		line 223 in file "color.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4833 ;;		 -> main@RGBC(32), 
  4834 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4835 ;;		 -> main@mL(9), 
  4836 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4837 ;;		 -> main@mR(9), 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  j               2   46[COMRAM] int 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      unsigned char 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4849 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;Total ram usage:       10 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 10
  4856 ;; This function calls:
  4857 ;;		___flge
  4858 ;;		_norm_stop
  4859 ;;		_reverse
  4860 ;;		_turnLeft
  4861 ;;		_turnPrep
  4862 ;;		_turnRight
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text21
  4869   000E18                     __ptext21:
  4870                           	callstack 0
  4871   000E18                     _motor_response:
  4872                           	callstack 20
  4873   000E18                     
  4874                           ;color.c: 225:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4875   000E18  EE20 F01C          	lfsr	2,28
  4876   000E1C  5027               	movf	motor_response@temp^0,w,c
  4877   000E1E  26D9               	addwf	fsr2l,f,c
  4878   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4879   000E22  22DA               	addwfc	fsr2h,f,c
  4880   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4881   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4882   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4883   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4884   000E34  C043  F00D         	movff	_CR2U,___flge@ff2
  4885   000E38  C044  F00E         	movff	_CR2U+1,___flge@ff2+1
  4886   000E3C  C045  F00F         	movff	_CR2U+2,___flge@ff2+2
  4887   000E40  C046  F010         	movff	_CR2U+3,___flge@ff2+3
  4888   000E44  EC56  F018         	call	___flge	;wreg free
  4889   000E48  B0D8               	btfsc	status,0,c
  4890   000E4A  EF29  F007         	goto	u2601
  4891   000E4E  EF2B  F007         	goto	u2600
  4892   000E52                     u2601:
  4893   000E52  EF1F  F00A         	goto	l3504
  4894   000E56                     u2600:
  4895   000E56  C03F  F009         	movff	_CR2L,___flge@ff1
  4896   000E5A  C040  F00A         	movff	_CR2L+1,___flge@ff1+1
  4897   000E5E  C041  F00B         	movff	_CR2L+2,___flge@ff1+2
  4898   000E62  C042  F00C         	movff	_CR2L+3,___flge@ff1+3
  4899   000E66  EE20 F01C          	lfsr	2,28
  4900   000E6A  5027               	movf	motor_response@temp^0,w,c
  4901   000E6C  26D9               	addwf	fsr2l,f,c
  4902   000E6E  5028               	movf	(motor_response@temp+1)^0,w,c
  4903   000E70  22DA               	addwfc	fsr2h,f,c
  4904   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  4905   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4906   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4907   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  4908   000E82  EC56  F018         	call	___flge	;wreg free
  4909   000E86  B0D8               	btfsc	status,0,c
  4910   000E88  EF48  F007         	goto	u2611
  4911   000E8C  EF4A  F007         	goto	u2610
  4912   000E90                     u2611:
  4913   000E90  EF1F  F00A         	goto	l3504
  4914   000E94                     u2610:
  4915   000E94                     
  4916                           ;color.c: 227:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4917   000E94  EE20 F018          	lfsr	2,24
  4918   000E98  5027               	movf	motor_response@temp^0,w,c
  4919   000E9A  26D9               	addwf	fsr2l,f,c
  4920   000E9C  5028               	movf	(motor_response@temp+1)^0,w,c
  4921   000E9E  22DA               	addwfc	fsr2h,f,c
  4922   000EA0  CFDE F009          	movff	postinc2,___flge@ff1
  4923   000EA4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4924   000EA8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4925   000EAC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4926   000EB0  0E00               	movlw	0
  4927   000EB2  6E0D               	movwf	___flge@ff2^0,c
  4928   000EB4  0E00               	movlw	0
  4929   000EB6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4930   000EB8  0EA0               	movlw	160
  4931   000EBA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4932   000EBC  0E40               	movlw	64
  4933   000EBE  6E10               	movwf	(___flge@ff2+3)^0,c
  4934   000EC0  EC56  F018         	call	___flge	;wreg free
  4935   000EC4  B0D8               	btfsc	status,0,c
  4936   000EC6  EF67  F007         	goto	u2621
  4937   000ECA  EF69  F007         	goto	u2620
  4938   000ECE                     u2621:
  4939   000ECE  EF2A  F008         	goto	l3456
  4940   000ED2                     u2620:
  4941   000ED2  0E9A               	movlw	154
  4942   000ED4  6E09               	movwf	___flge@ff1^0,c
  4943   000ED6  0E99               	movlw	153
  4944   000ED8  6E0A               	movwf	(___flge@ff1+1)^0,c
  4945   000EDA  0ED9               	movlw	217
  4946   000EDC  6E0B               	movwf	(___flge@ff1+2)^0,c
  4947   000EDE  0E3F               	movlw	63
  4948   000EE0  6E0C               	movwf	(___flge@ff1+3)^0,c
  4949   000EE2  EE20 F010          	lfsr	2,16
  4950   000EE6  5027               	movf	motor_response@temp^0,w,c
  4951   000EE8  26D9               	addwf	fsr2l,f,c
  4952   000EEA  5028               	movf	(motor_response@temp+1)^0,w,c
  4953   000EEC  22DA               	addwfc	fsr2h,f,c
  4954   000EEE  CFDE F00D          	movff	postinc2,___flge@ff2
  4955   000EF2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4956   000EF6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4957   000EFA  CFDE F010          	movff	postinc2,___flge@ff2+3
  4958   000EFE  EC56  F018         	call	___flge	;wreg free
  4959   000F02  B0D8               	btfsc	status,0,c
  4960   000F04  EF86  F007         	goto	u2631
  4961   000F08  EF88  F007         	goto	u2630
  4962   000F0C                     u2631:
  4963   000F0C  EF2A  F008         	goto	l3456
  4964   000F10                     u2630:
  4965   000F10  EE20 F010          	lfsr	2,16
  4966   000F14  5027               	movf	motor_response@temp^0,w,c
  4967   000F16  26D9               	addwf	fsr2l,f,c
  4968   000F18  5028               	movf	(motor_response@temp+1)^0,w,c
  4969   000F1A  22DA               	addwfc	fsr2h,f,c
  4970   000F1C  CFDE F009          	movff	postinc2,___flge@ff1
  4971   000F20  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4972   000F24  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4973   000F28  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4974   000F2C  0ECD               	movlw	205
  4975   000F2E  6E0D               	movwf	___flge@ff2^0,c
  4976   000F30  0ECC               	movlw	204
  4977   000F32  6E0E               	movwf	(___flge@ff2+1)^0,c
  4978   000F34  0E0C               	movlw	12
  4979   000F36  6E0F               	movwf	(___flge@ff2+2)^0,c
  4980   000F38  0E40               	movlw	64
  4981   000F3A  6E10               	movwf	(___flge@ff2+3)^0,c
  4982   000F3C  EC56  F018         	call	___flge	;wreg free
  4983   000F40  B0D8               	btfsc	status,0,c
  4984   000F42  EFA5  F007         	goto	u2641
  4985   000F46  EFA7  F007         	goto	u2640
  4986   000F4A                     u2641:
  4987   000F4A  EF2A  F008         	goto	l3456
  4988   000F4E                     u2640:
  4989   000F4E  0E00               	movlw	0
  4990   000F50  6E09               	movwf	___flge@ff1^0,c
  4991   000F52  0E00               	movlw	0
  4992   000F54  6E0A               	movwf	(___flge@ff1+1)^0,c
  4993   000F56  0E40               	movlw	64
  4994   000F58  6E0B               	movwf	(___flge@ff1+2)^0,c
  4995   000F5A  0E40               	movlw	64
  4996   000F5C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4997   000F5E  EE20 F014          	lfsr	2,20
  4998   000F62  5027               	movf	motor_response@temp^0,w,c
  4999   000F64  26D9               	addwf	fsr2l,f,c
  5000   000F66  5028               	movf	(motor_response@temp+1)^0,w,c
  5001   000F68  22DA               	addwfc	fsr2h,f,c
  5002   000F6A  CFDE F00D          	movff	postinc2,___flge@ff2
  5003   000F6E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5004   000F72  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5005   000F76  CFDE F010          	movff	postinc2,___flge@ff2+3
  5006   000F7A  EC56  F018         	call	___flge	;wreg free
  5007   000F7E  B0D8               	btfsc	status,0,c
  5008   000F80  EFC4  F007         	goto	u2651
  5009   000F84  EFC6  F007         	goto	u2650
  5010   000F88                     u2651:
  5011   000F88  EF2A  F008         	goto	l3456
  5012   000F8C                     u2650:
  5013   000F8C  EE20 F014          	lfsr	2,20
  5014   000F90  5027               	movf	motor_response@temp^0,w,c
  5015   000F92  26D9               	addwf	fsr2l,f,c
  5016   000F94  5028               	movf	(motor_response@temp+1)^0,w,c
  5017   000F96  22DA               	addwfc	fsr2h,f,c
  5018   000F98  CFDE F009          	movff	postinc2,___flge@ff1
  5019   000F9C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5020   000FA0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5021   000FA4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5022   000FA8  0E00               	movlw	0
  5023   000FAA  6E0D               	movwf	___flge@ff2^0,c
  5024   000FAC  0E00               	movlw	0
  5025   000FAE  6E0E               	movwf	(___flge@ff2+1)^0,c
  5026   000FB0  0E60               	movlw	96
  5027   000FB2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5028   000FB4  0E40               	movlw	64
  5029   000FB6  6E10               	movwf	(___flge@ff2+3)^0,c
  5030   000FB8  EC56  F018         	call	___flge	;wreg free
  5031   000FBC  B0D8               	btfsc	status,0,c
  5032   000FBE  EFE3  F007         	goto	u2661
  5033   000FC2  EFE5  F007         	goto	u2660
  5034   000FC6                     u2661:
  5035   000FC6  EF2A  F008         	goto	l3456
  5036   000FCA                     u2660:
  5037   000FCA                     
  5038                           ;color.c: 228:             reverse(mL, mR);
  5039   000FCA  C029  F01C         	movff	motor_response@mL,reverse@mL
  5040   000FCE  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5041   000FD2  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5042   000FD6  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5043   000FDA  ECD8  F018         	call	_reverse	;wreg free
  5044   000FDE                     
  5045                           ;color.c: 229:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5046   000FDE  0EF4               	movlw	244
  5047   000FE0  6E2E               	movwf	(??_motor_response+1)^0,c
  5048   000FE2  0E82               	movlw	130
  5049   000FE4  6E2D               	movwf	??_motor_response^0,c
  5050   000FE6  0E05               	movlw	5
  5051   000FE8                     u3527:
  5052   000FE8  2EE8               	decfsz	wreg,f,c
  5053   000FEA  D7FE               	bra	u3527
  5054   000FEC  2E2D               	decfsz	??_motor_response^0,f,c
  5055   000FEE  D7FC               	bra	u3527
  5056   000FF0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5057   000FF2  D7FA               	bra	u3527
  5058   000FF4  F000               	nop	
  5059   000FF6                     
  5060                           ;color.c: 230:             norm_stop(mL, mR);
  5061   000FF6  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5062   000FFA  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5063   000FFE  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5064   001002  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5065   001006  EC24  F01D         	call	_norm_stop	;wreg free
  5066                           
  5067                           ;color.c: 231:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5068   00100A  0E09               	movlw	9
  5069   00100C  6E2E               	movwf	(??_motor_response+1)^0,c
  5070   00100E  0E1E               	movlw	30
  5071   001010  6E2D               	movwf	??_motor_response^0,c
  5072   001012  0EE4               	movlw	228
  5073   001014                     u3537:
  5074   001014  2EE8               	decfsz	wreg,f,c
  5075   001016  D7FE               	bra	u3537
  5076   001018  2E2D               	decfsz	??_motor_response^0,f,c
  5077   00101A  D7FC               	bra	u3537
  5078   00101C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5079   00101E  D7FA               	bra	u3537
  5080   001020  D000               	nop2	
  5081   001022                     
  5082                           ;color.c: 232:             turnLeft(mL, mR);
  5083   001022  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5084   001026  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5085   00102A  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5086   00102E  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5087   001032  EC54  F01B         	call	_turnLeft	;wreg free
  5088   001036                     
  5089                           ;color.c: 233:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5090   001036  0E12               	movlw	18
  5091   001038  6E2E               	movwf	(??_motor_response+1)^0,c
  5092   00103A  0E0C               	movlw	12
  5093   00103C  6E2D               	movwf	??_motor_response^0,c
  5094   00103E  0E95               	movlw	149
  5095   001040                     u3547:
  5096   001040  2EE8               	decfsz	wreg,f,c
  5097   001042  D7FE               	bra	u3547
  5098   001044  2E2D               	decfsz	??_motor_response^0,f,c
  5099   001046  D7FC               	bra	u3547
  5100   001048  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5101   00104A  D7FA               	bra	u3547
  5102   00104C  F000               	nop	
  5103   00104E                     
  5104                           ;color.c: 234:             return 5;
  5105   00104E  0E05               	movlw	5
  5106   001050  EF4A  F00D         	goto	l167
  5107   001054                     l3456:
  5108                           
  5109                           ;color.c: 237:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  5110   001054  0E00               	movlw	0
  5111   001056  6E09               	movwf	___flge@ff1^0,c
  5112   001058  0E00               	movlw	0
  5113   00105A  6E0A               	movwf	(___flge@ff1+1)^0,c
  5114   00105C  0EB0               	movlw	176
  5115   00105E  6E0B               	movwf	(___flge@ff1+2)^0,c
  5116   001060  0E40               	movlw	64
  5117   001062  6E0C               	movwf	(___flge@ff1+3)^0,c
  5118   001064  EE20 F018          	lfsr	2,24
  5119   001068  5027               	movf	motor_response@temp^0,w,c
  5120   00106A  26D9               	addwf	fsr2l,f,c
  5121   00106C  5028               	movf	(motor_response@temp+1)^0,w,c
  5122   00106E  22DA               	addwfc	fsr2h,f,c
  5123   001070  CFDE F00D          	movff	postinc2,___flge@ff2
  5124   001074  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5125   001078  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5126   00107C  CFDE F010          	movff	postinc2,___flge@ff2+3
  5127   001080  EC56  F018         	call	___flge	;wreg free
  5128   001084  B0D8               	btfsc	status,0,c
  5129   001086  EF47  F008         	goto	u2671
  5130   00108A  EF49  F008         	goto	u2670
  5131   00108E                     u2671:
  5132   00108E  EF1D  F009         	goto	l3476
  5133   001092                     u2670:
  5134   001092  EE20 F018          	lfsr	2,24
  5135   001096  5027               	movf	motor_response@temp^0,w,c
  5136   001098  26D9               	addwf	fsr2l,f,c
  5137   00109A  5028               	movf	(motor_response@temp+1)^0,w,c
  5138   00109C  22DA               	addwfc	fsr2h,f,c
  5139   00109E  CFDE F009          	movff	postinc2,___flge@ff1
  5140   0010A2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5141   0010A6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5142   0010AA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5143   0010AE  0E00               	movlw	0
  5144   0010B0  6E0D               	movwf	___flge@ff2^0,c
  5145   0010B2  0E00               	movlw	0
  5146   0010B4  6E0E               	movwf	(___flge@ff2+1)^0,c
  5147   0010B6  0EC0               	movlw	192
  5148   0010B8  6E0F               	movwf	(___flge@ff2+2)^0,c
  5149   0010BA  0E40               	movlw	64
  5150   0010BC  6E10               	movwf	(___flge@ff2+3)^0,c
  5151   0010BE  EC56  F018         	call	___flge	;wreg free
  5152   0010C2  B0D8               	btfsc	status,0,c
  5153   0010C4  EF66  F008         	goto	u2681
  5154   0010C8  EF68  F008         	goto	u2680
  5155   0010CC                     u2681:
  5156   0010CC  EF1D  F009         	goto	l3476
  5157   0010D0                     u2680:
  5158   0010D0  0E33               	movlw	51
  5159   0010D2  6E09               	movwf	___flge@ff1^0,c
  5160   0010D4  0E33               	movlw	51
  5161   0010D6  6E0A               	movwf	(___flge@ff1+1)^0,c
  5162   0010D8  0EB3               	movlw	179
  5163   0010DA  6E0B               	movwf	(___flge@ff1+2)^0,c
  5164   0010DC  0E3F               	movlw	63
  5165   0010DE  6E0C               	movwf	(___flge@ff1+3)^0,c
  5166   0010E0  EE20 F010          	lfsr	2,16
  5167   0010E4  5027               	movf	motor_response@temp^0,w,c
  5168   0010E6  26D9               	addwf	fsr2l,f,c
  5169   0010E8  5028               	movf	(motor_response@temp+1)^0,w,c
  5170   0010EA  22DA               	addwfc	fsr2h,f,c
  5171   0010EC  CFDE F00D          	movff	postinc2,___flge@ff2
  5172   0010F0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5173   0010F4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5174   0010F8  CFDE F010          	movff	postinc2,___flge@ff2+3
  5175   0010FC  EC56  F018         	call	___flge	;wreg free
  5176   001100  B0D8               	btfsc	status,0,c
  5177   001102  EF85  F008         	goto	u2691
  5178   001106  EF87  F008         	goto	u2690
  5179   00110A                     u2691:
  5180   00110A  EF1D  F009         	goto	l3476
  5181   00110E                     u2690:
  5182   00110E  EE20 F010          	lfsr	2,16
  5183   001112  5027               	movf	motor_response@temp^0,w,c
  5184   001114  26D9               	addwf	fsr2l,f,c
  5185   001116  5028               	movf	(motor_response@temp+1)^0,w,c
  5186   001118  22DA               	addwfc	fsr2h,f,c
  5187   00111A  CFDE F009          	movff	postinc2,___flge@ff1
  5188   00111E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5189   001122  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5190   001126  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5191   00112A  0E9A               	movlw	154
  5192   00112C  6E0D               	movwf	___flge@ff2^0,c
  5193   00112E  0E99               	movlw	153
  5194   001130  6E0E               	movwf	(___flge@ff2+1)^0,c
  5195   001132  0ED9               	movlw	217
  5196   001134  6E0F               	movwf	(___flge@ff2+2)^0,c
  5197   001136  0E3F               	movlw	63
  5198   001138  6E10               	movwf	(___flge@ff2+3)^0,c
  5199   00113A  EC56  F018         	call	___flge	;wreg free
  5200   00113E  B0D8               	btfsc	status,0,c
  5201   001140  EFA4  F008         	goto	u2701
  5202   001144  EFA6  F008         	goto	u2700
  5203   001148                     u2701:
  5204   001148  EF1D  F009         	goto	l3476
  5205   00114C                     u2700:
  5206   00114C  0E33               	movlw	51
  5207   00114E  6E09               	movwf	___flge@ff1^0,c
  5208   001150  0E33               	movlw	51
  5209   001152  6E0A               	movwf	(___flge@ff1+1)^0,c
  5210   001154  0E83               	movlw	131
  5211   001156  6E0B               	movwf	(___flge@ff1+2)^0,c
  5212   001158  0E40               	movlw	64
  5213   00115A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5214   00115C  EE20 F014          	lfsr	2,20
  5215   001160  5027               	movf	motor_response@temp^0,w,c
  5216   001162  26D9               	addwf	fsr2l,f,c
  5217   001164  5028               	movf	(motor_response@temp+1)^0,w,c
  5218   001166  22DA               	addwfc	fsr2h,f,c
  5219   001168  CFDE F00D          	movff	postinc2,___flge@ff2
  5220   00116C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5221   001170  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5222   001174  CFDE F010          	movff	postinc2,___flge@ff2+3
  5223   001178  EC56  F018         	call	___flge	;wreg free
  5224   00117C  B0D8               	btfsc	status,0,c
  5225   00117E  EFC3  F008         	goto	u2711
  5226   001182  EFC5  F008         	goto	u2710
  5227   001186                     u2711:
  5228   001186  EF1D  F009         	goto	l3476
  5229   00118A                     u2710:
  5230   00118A  EE20 F014          	lfsr	2,20
  5231   00118E  5027               	movf	motor_response@temp^0,w,c
  5232   001190  26D9               	addwf	fsr2l,f,c
  5233   001192  5028               	movf	(motor_response@temp+1)^0,w,c
  5234   001194  22DA               	addwfc	fsr2h,f,c
  5235   001196  CFDE F009          	movff	postinc2,___flge@ff1
  5236   00119A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5237   00119E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5238   0011A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5239   0011A6  0E00               	movlw	0
  5240   0011A8  6E0D               	movwf	___flge@ff2^0,c
  5241   0011AA  0E00               	movlw	0
  5242   0011AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5243   0011AE  0E90               	movlw	144
  5244   0011B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5245   0011B2  0E40               	movlw	64
  5246   0011B4  6E10               	movwf	(___flge@ff2+3)^0,c
  5247   0011B6  EC56  F018         	call	___flge	;wreg free
  5248   0011BA  B0D8               	btfsc	status,0,c
  5249   0011BC  EFE2  F008         	goto	u2721
  5250   0011C0  EFE4  F008         	goto	u2720
  5251   0011C4                     u2721:
  5252   0011C4  EF1D  F009         	goto	l3476
  5253   0011C8                     u2720:
  5254   0011C8                     
  5255                           ;color.c: 238:             turnPrep(mL, mR);
  5256   0011C8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5257   0011CC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5258   0011D0  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5259   0011D4  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5260   0011D8  ECF7  F01B         	call	_turnPrep	;wreg free
  5261                           
  5262                           ;color.c: 239:             turnRight(mL, mR);
  5263   0011DC  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5264   0011E0  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5265   0011E4  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5266   0011E8  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5267   0011EC  EC1B  F01B         	call	_turnRight	;wreg free
  5268   0011F0                     
  5269                           ;color.c: 240:             _delay((unsigned long)((325)*(64000000/4000.0)));
  5270   0011F0  0E1B               	movlw	27
  5271   0011F2  6E2E               	movwf	(??_motor_response+1)^0,c
  5272   0011F4  0E62               	movlw	98
  5273   0011F6  6E2D               	movwf	??_motor_response^0,c
  5274   0011F8  0E2B               	movlw	43
  5275   0011FA                     u3557:
  5276   0011FA  2EE8               	decfsz	wreg,f,c
  5277   0011FC  D7FE               	bra	u3557
  5278   0011FE  2E2D               	decfsz	??_motor_response^0,f,c
  5279   001200  D7FC               	bra	u3557
  5280   001202  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5281   001204  D7FA               	bra	u3557
  5282   001206  F000               	nop	
  5283   001208                     
  5284                           ;color.c: 241:             norm_stop(mL, mR);
  5285   001208  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5286   00120C  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5287   001210  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5288   001214  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5289   001218  EC24  F01D         	call	_norm_stop	;wreg free
  5290                           
  5291                           ;color.c: 242:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5292   00121C  0E52               	movlw	82
  5293   00121E  6E2E               	movwf	(??_motor_response+1)^0,c
  5294   001220  0E2B               	movlw	43
  5295   001222  6E2D               	movwf	??_motor_response^0,c
  5296   001224  0E00               	movlw	0
  5297   001226                     u3567:
  5298   001226  2EE8               	decfsz	wreg,f,c
  5299   001228  D7FE               	bra	u3567
  5300   00122A  2E2D               	decfsz	??_motor_response^0,f,c
  5301   00122C  D7FC               	bra	u3567
  5302   00122E  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5303   001230  D7FA               	bra	u3567
  5304   001232  D000               	nop2	
  5305                           
  5306                           ;color.c: 243:             return 6;
  5307   001234  0E06               	movlw	6
  5308   001236  EF4A  F00D         	goto	l167
  5309   00123A                     l3476:
  5310                           
  5311                           ;color.c: 245:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  5312   00123A  0E33               	movlw	51
  5313   00123C  6E09               	movwf	___flge@ff1^0,c
  5314   00123E  0E33               	movlw	51
  5315   001240  6E0A               	movwf	(___flge@ff1+1)^0,c
  5316   001242  0E53               	movlw	83
  5317   001244  6E0B               	movwf	(___flge@ff1+2)^0,c
  5318   001246  0E40               	movlw	64
  5319   001248  6E0C               	movwf	(___flge@ff1+3)^0,c
  5320   00124A  EE20 F018          	lfsr	2,24
  5321   00124E  5027               	movf	motor_response@temp^0,w,c
  5322   001250  26D9               	addwf	fsr2l,f,c
  5323   001252  5028               	movf	(motor_response@temp+1)^0,w,c
  5324   001254  22DA               	addwfc	fsr2h,f,c
  5325   001256  CFDE F00D          	movff	postinc2,___flge@ff2
  5326   00125A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5327   00125E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5328   001262  CFDE F010          	movff	postinc2,___flge@ff2+3
  5329   001266  EC56  F018         	call	___flge	;wreg free
  5330   00126A  B0D8               	btfsc	status,0,c
  5331   00126C  EF3A  F009         	goto	u2731
  5332   001270  EF3C  F009         	goto	u2730
  5333   001274                     u2731:
  5334   001274  EF1F  F00A         	goto	l3504
  5335   001278                     u2730:
  5336   001278  EE20 F018          	lfsr	2,24
  5337   00127C  5027               	movf	motor_response@temp^0,w,c
  5338   00127E  26D9               	addwf	fsr2l,f,c
  5339   001280  5028               	movf	(motor_response@temp+1)^0,w,c
  5340   001282  22DA               	addwfc	fsr2h,f,c
  5341   001284  CFDE F009          	movff	postinc2,___flge@ff1
  5342   001288  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5343   00128C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5344   001290  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5345   001294  0E9A               	movlw	154
  5346   001296  6E0D               	movwf	___flge@ff2^0,c
  5347   001298  0E99               	movlw	153
  5348   00129A  6E0E               	movwf	(___flge@ff2+1)^0,c
  5349   00129C  0E79               	movlw	121
  5350   00129E  6E0F               	movwf	(___flge@ff2+2)^0,c
  5351   0012A0  0E40               	movlw	64
  5352   0012A2  6E10               	movwf	(___flge@ff2+3)^0,c
  5353   0012A4  EC56  F018         	call	___flge	;wreg free
  5354   0012A8  B0D8               	btfsc	status,0,c
  5355   0012AA  EF59  F009         	goto	u2741
  5356   0012AE  EF5B  F009         	goto	u2740
  5357   0012B2                     u2741:
  5358   0012B2  EF1F  F00A         	goto	l3504
  5359   0012B6                     u2740:
  5360   0012B6  0ECD               	movlw	205
  5361   0012B8  6E09               	movwf	___flge@ff1^0,c
  5362   0012BA  0ECC               	movlw	204
  5363   0012BC  6E0A               	movwf	(___flge@ff1+1)^0,c
  5364   0012BE  0E2C               	movlw	44
  5365   0012C0  6E0B               	movwf	(___flge@ff1+2)^0,c
  5366   0012C2  0E40               	movlw	64
  5367   0012C4  6E0C               	movwf	(___flge@ff1+3)^0,c
  5368   0012C6  EE20 F010          	lfsr	2,16
  5369   0012CA  5027               	movf	motor_response@temp^0,w,c
  5370   0012CC  26D9               	addwf	fsr2l,f,c
  5371   0012CE  5028               	movf	(motor_response@temp+1)^0,w,c
  5372   0012D0  22DA               	addwfc	fsr2h,f,c
  5373   0012D2  CFDE F00D          	movff	postinc2,___flge@ff2
  5374   0012D6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5375   0012DA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5376   0012DE  CFDE F010          	movff	postinc2,___flge@ff2+3
  5377   0012E2  EC56  F018         	call	___flge	;wreg free
  5378   0012E6  B0D8               	btfsc	status,0,c
  5379   0012E8  EF78  F009         	goto	u2751
  5380   0012EC  EF7A  F009         	goto	u2750
  5381   0012F0                     u2751:
  5382   0012F0  EF1F  F00A         	goto	l3504
  5383   0012F4                     u2750:
  5384   0012F4  EE20 F010          	lfsr	2,16
  5385   0012F8  5027               	movf	motor_response@temp^0,w,c
  5386   0012FA  26D9               	addwf	fsr2l,f,c
  5387   0012FC  5028               	movf	(motor_response@temp+1)^0,w,c
  5388   0012FE  22DA               	addwfc	fsr2h,f,c
  5389   001300  CFDE F009          	movff	postinc2,___flge@ff1
  5390   001304  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5391   001308  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5392   00130C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5393   001310  0ECD               	movlw	205
  5394   001312  6E0D               	movwf	___flge@ff2^0,c
  5395   001314  0ECC               	movlw	204
  5396   001316  6E0E               	movwf	(___flge@ff2+1)^0,c
  5397   001318  0E4C               	movlw	76
  5398   00131A  6E0F               	movwf	(___flge@ff2+2)^0,c
  5399   00131C  0E40               	movlw	64
  5400   00131E  6E10               	movwf	(___flge@ff2+3)^0,c
  5401   001320  EC56  F018         	call	___flge	;wreg free
  5402   001324  B0D8               	btfsc	status,0,c
  5403   001326  EF97  F009         	goto	u2761
  5404   00132A  EF99  F009         	goto	u2760
  5405   00132E                     u2761:
  5406   00132E  EF1F  F00A         	goto	l3504
  5407   001332                     u2760:
  5408   001332  0E00               	movlw	0
  5409   001334  6E09               	movwf	___flge@ff1^0,c
  5410   001336  0E00               	movlw	0
  5411   001338  6E0A               	movwf	(___flge@ff1+1)^0,c
  5412   00133A  0E20               	movlw	32
  5413   00133C  6E0B               	movwf	(___flge@ff1+2)^0,c
  5414   00133E  0E40               	movlw	64
  5415   001340  6E0C               	movwf	(___flge@ff1+3)^0,c
  5416   001342  EE20 F014          	lfsr	2,20
  5417   001346  5027               	movf	motor_response@temp^0,w,c
  5418   001348  26D9               	addwf	fsr2l,f,c
  5419   00134A  5028               	movf	(motor_response@temp+1)^0,w,c
  5420   00134C  22DA               	addwfc	fsr2h,f,c
  5421   00134E  CFDE F00D          	movff	postinc2,___flge@ff2
  5422   001352  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5423   001356  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5424   00135A  CFDE F010          	movff	postinc2,___flge@ff2+3
  5425   00135E  EC56  F018         	call	___flge	;wreg free
  5426   001362  B0D8               	btfsc	status,0,c
  5427   001364  EFB6  F009         	goto	u2771
  5428   001368  EFB8  F009         	goto	u2770
  5429   00136C                     u2771:
  5430   00136C  EF1F  F00A         	goto	l3504
  5431   001370                     u2770:
  5432   001370  EE20 F014          	lfsr	2,20
  5433   001374  5027               	movf	motor_response@temp^0,w,c
  5434   001376  26D9               	addwf	fsr2l,f,c
  5435   001378  5028               	movf	(motor_response@temp+1)^0,w,c
  5436   00137A  22DA               	addwfc	fsr2h,f,c
  5437   00137C  CFDE F009          	movff	postinc2,___flge@ff1
  5438   001380  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5439   001384  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5440   001388  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5441   00138C  0E9A               	movlw	154
  5442   00138E  6E0D               	movwf	___flge@ff2^0,c
  5443   001390  0E99               	movlw	153
  5444   001392  6E0E               	movwf	(___flge@ff2+1)^0,c
  5445   001394  0E39               	movlw	57
  5446   001396  6E0F               	movwf	(___flge@ff2+2)^0,c
  5447   001398  0E40               	movlw	64
  5448   00139A  6E10               	movwf	(___flge@ff2+3)^0,c
  5449   00139C  EC56  F018         	call	___flge	;wreg free
  5450   0013A0  B0D8               	btfsc	status,0,c
  5451   0013A2  EFD5  F009         	goto	u2781
  5452   0013A6  EFD7  F009         	goto	u2780
  5453   0013AA                     u2781:
  5454   0013AA  EF1F  F00A         	goto	l3504
  5455   0013AE                     u2780:
  5456   0013AE                     
  5457                           ;color.c: 246:             LATFbits.LATF0 = !LATFbits.LATF0;
  5458   0013AE  A07E               	btfss	126,0,c	;volatile
  5459   0013B0  EFDC  F009         	goto	u2791
  5460   0013B4  EFE0  F009         	goto	u2790
  5461   0013B8                     u2791:
  5462   0013B8  6A2D               	clrf	??_motor_response^0,c
  5463   0013BA  2A2D               	incf	??_motor_response^0,f,c
  5464   0013BC  EFE1  F009         	goto	u2808
  5465   0013C0                     u2790:
  5466   0013C0  6A2D               	clrf	??_motor_response^0,c
  5467   0013C2                     u2808:
  5468   0013C2  507E               	movf	126,w,c	;volatile
  5469   0013C4  182D               	xorwf	??_motor_response^0,w,c
  5470   0013C6  0BFE               	andlw	-2
  5471   0013C8  182D               	xorwf	??_motor_response^0,w,c
  5472   0013CA  6E7E               	movwf	126,c	;volatile
  5473   0013CC                     
  5474                           ;color.c: 247:             turnPrep(mL, mR);
  5475   0013CC  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5476   0013D0  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5477   0013D4  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5478   0013D8  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5479   0013DC  ECF7  F01B         	call	_turnPrep	;wreg free
  5480   0013E0                     
  5481                           ;color.c: 248:             turnLeft(mL, mR);
  5482   0013E0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5483   0013E4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5484   0013E8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5485   0013EC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5486   0013F0  EC54  F01B         	call	_turnLeft	;wreg free
  5487   0013F4                     
  5488                           ;color.c: 249:             _delay((unsigned long)((330)*(64000000/4000.0)));
  5489   0013F4  0E1B               	movlw	27
  5490   0013F6  6E2E               	movwf	(??_motor_response+1)^0,c
  5491   0013F8  0ECA               	movlw	202
  5492   0013FA  6E2D               	movwf	??_motor_response^0,c
  5493   0013FC  0E10               	movlw	16
  5494   0013FE                     u3577:
  5495   0013FE  2EE8               	decfsz	wreg,f,c
  5496   001400  D7FE               	bra	u3577
  5497   001402  2E2D               	decfsz	??_motor_response^0,f,c
  5498   001404  D7FC               	bra	u3577
  5499   001406  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5500   001408  D7FA               	bra	u3577
  5501   00140A  D000               	nop2	
  5502   00140C                     
  5503                           ;color.c: 250:             norm_stop(mL, mR);
  5504   00140C  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5505   001410  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5506   001414  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5507   001418  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5508   00141C  EC24  F01D         	call	_norm_stop	;wreg free
  5509   001420                     
  5510                           ;color.c: 251:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5511   001420  0E52               	movlw	82
  5512   001422  6E2E               	movwf	(??_motor_response+1)^0,c
  5513   001424  0E2B               	movlw	43
  5514   001426  6E2D               	movwf	??_motor_response^0,c
  5515   001428  0E00               	movlw	0
  5516   00142A                     u3587:
  5517   00142A  2EE8               	decfsz	wreg,f,c
  5518   00142C  D7FE               	bra	u3587
  5519   00142E  2E2D               	decfsz	??_motor_response^0,f,c
  5520   001430  D7FC               	bra	u3587
  5521   001432  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5522   001434  D7FA               	bra	u3587
  5523   001436  D000               	nop2	
  5524   001438                     
  5525                           ;color.c: 252:             return 7;
  5526   001438  0E07               	movlw	7
  5527   00143A  EF4A  F00D         	goto	l167
  5528   00143E                     l3504:
  5529                           
  5530                           ;color.c: 258:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  5531   00143E  EE20 F01C          	lfsr	2,28
  5532   001442  5027               	movf	motor_response@temp^0,w,c
  5533   001444  26D9               	addwf	fsr2l,f,c
  5534   001446  5028               	movf	(motor_response@temp+1)^0,w,c
  5535   001448  22DA               	addwfc	fsr2h,f,c
  5536   00144A  CFDE F009          	movff	postinc2,___flge@ff1
  5537   00144E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5538   001452  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5539   001456  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5540   00145A  C0CC  F00D         	movff	_CR3U,___flge@ff2
  5541   00145E  C0CD  F00E         	movff	_CR3U+1,___flge@ff2+1
  5542   001462  C0CE  F00F         	movff	_CR3U+2,___flge@ff2+2
  5543   001466  C0CF  F010         	movff	_CR3U+3,___flge@ff2+3
  5544   00146A  EC56  F018         	call	___flge	;wreg free
  5545   00146E  B0D8               	btfsc	status,0,c
  5546   001470  EF3C  F00A         	goto	u2811
  5547   001474  EF3E  F00A         	goto	u2810
  5548   001478                     u2811:
  5549   001478  EFDD  F00B         	goto	l3550
  5550   00147C                     u2810:
  5551   00147C  C0C8  F009         	movff	_CR3L,___flge@ff1
  5552   001480  C0C9  F00A         	movff	_CR3L+1,___flge@ff1+1
  5553   001484  C0CA  F00B         	movff	_CR3L+2,___flge@ff1+2
  5554   001488  C0CB  F00C         	movff	_CR3L+3,___flge@ff1+3
  5555   00148C  EE20 F01C          	lfsr	2,28
  5556   001490  5027               	movf	motor_response@temp^0,w,c
  5557   001492  26D9               	addwf	fsr2l,f,c
  5558   001494  5028               	movf	(motor_response@temp+1)^0,w,c
  5559   001496  22DA               	addwfc	fsr2h,f,c
  5560   001498  CFDE F00D          	movff	postinc2,___flge@ff2
  5561   00149C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5562   0014A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5563   0014A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5564   0014A8  EC56  F018         	call	___flge	;wreg free
  5565   0014AC  B0D8               	btfsc	status,0,c
  5566   0014AE  EF5B  F00A         	goto	u2821
  5567   0014B2  EF5D  F00A         	goto	u2820
  5568   0014B6                     u2821:
  5569   0014B6  EFDD  F00B         	goto	l3550
  5570   0014BA                     u2820:
  5571   0014BA                     
  5572                           ;color.c: 259:         if (temp->norm_G > 8) {
  5573   0014BA  0E00               	movlw	0
  5574   0014BC  6E09               	movwf	___flge@ff1^0,c
  5575   0014BE  0E00               	movlw	0
  5576   0014C0  6E0A               	movwf	(___flge@ff1+1)^0,c
  5577   0014C2  0E00               	movlw	0
  5578   0014C4  6E0B               	movwf	(___flge@ff1+2)^0,c
  5579   0014C6  0E41               	movlw	65
  5580   0014C8  6E0C               	movwf	(___flge@ff1+3)^0,c
  5581   0014CA  EE20 F014          	lfsr	2,20
  5582   0014CE  5027               	movf	motor_response@temp^0,w,c
  5583   0014D0  26D9               	addwf	fsr2l,f,c
  5584   0014D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5585   0014D4  22DA               	addwfc	fsr2h,f,c
  5586   0014D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5587   0014DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5588   0014DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5589   0014E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5590   0014E6  EC56  F018         	call	___flge	;wreg free
  5591   0014EA  B0D8               	btfsc	status,0,c
  5592   0014EC  EF7A  F00A         	goto	u2831
  5593   0014F0  EF7C  F00A         	goto	u2830
  5594   0014F4                     u2831:
  5595   0014F4  EF9F  F00A         	goto	l3518
  5596   0014F8                     u2830:
  5597   0014F8                     
  5598                           ;color.c: 260:             turnPrep(mL, mR);
  5599   0014F8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5600   0014FC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5601   001500  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5602   001504  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5603   001508  ECF7  F01B         	call	_turnPrep	;wreg free
  5604                           
  5605                           ;color.c: 261:             turnRight(mL, mR);
  5606   00150C  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5607   001510  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5608   001514  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5609   001518  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5610   00151C  EC1B  F01B         	call	_turnRight	;wreg free
  5611   001520                     
  5612                           ;color.c: 262:             _delay((unsigned long)((225)*(64000000/4000.0)));
  5613   001520  0E13               	movlw	19
  5614   001522  6E2E               	movwf	(??_motor_response+1)^0,c
  5615   001524  0E44               	movlw	68
  5616   001526  6E2D               	movwf	??_motor_response^0,c
  5617   001528  0E44               	movlw	68
  5618   00152A                     u3597:
  5619   00152A  2EE8               	decfsz	wreg,f,c
  5620   00152C  D7FE               	bra	u3597
  5621   00152E  2E2D               	decfsz	??_motor_response^0,f,c
  5622   001530  D7FC               	bra	u3597
  5623   001532  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5624   001534  D7FA               	bra	u3597
  5625   001536  D000               	nop2	
  5626   001538                     
  5627                           ;color.c: 263:             return 1;
  5628   001538  0E01               	movlw	1
  5629   00153A  EF4A  F00D         	goto	l167
  5630   00153E                     l3518:
  5631                           
  5632                           ;color.c: 265:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  5633   00153E  0E00               	movlw	0
  5634   001540  6E09               	movwf	___flge@ff1^0,c
  5635   001542  0E00               	movlw	0
  5636   001544  6E0A               	movwf	(___flge@ff1+1)^0,c
  5637   001546  0E90               	movlw	144
  5638   001548  6E0B               	movwf	(___flge@ff1+2)^0,c
  5639   00154A  0E40               	movlw	64
  5640   00154C  6E0C               	movwf	(___flge@ff1+3)^0,c
  5641   00154E  EE20 F018          	lfsr	2,24
  5642   001552  5027               	movf	motor_response@temp^0,w,c
  5643   001554  26D9               	addwf	fsr2l,f,c
  5644   001556  5028               	movf	(motor_response@temp+1)^0,w,c
  5645   001558  22DA               	addwfc	fsr2h,f,c
  5646   00155A  CFDE F00D          	movff	postinc2,___flge@ff2
  5647   00155E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5648   001562  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5649   001566  CFDE F010          	movff	postinc2,___flge@ff2+3
  5650   00156A  EC56  F018         	call	___flge	;wreg free
  5651   00156E  B0D8               	btfsc	status,0,c
  5652   001570  EFBC  F00A         	goto	u2841
  5653   001574  EFBE  F00A         	goto	u2840
  5654   001578                     u2841:
  5655   001578  EF00  F00B         	goto	l3530
  5656   00157C                     u2840:
  5657   00157C  EE20 F018          	lfsr	2,24
  5658   001580  5027               	movf	motor_response@temp^0,w,c
  5659   001582  26D9               	addwf	fsr2l,f,c
  5660   001584  5028               	movf	(motor_response@temp+1)^0,w,c
  5661   001586  22DA               	addwfc	fsr2h,f,c
  5662   001588  CFDE F009          	movff	postinc2,___flge@ff1
  5663   00158C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5664   001590  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5665   001594  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5666   001598  0E00               	movlw	0
  5667   00159A  6E0D               	movwf	___flge@ff2^0,c
  5668   00159C  0E00               	movlw	0
  5669   00159E  6E0E               	movwf	(___flge@ff2+1)^0,c
  5670   0015A0  0EB0               	movlw	176
  5671   0015A2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5672   0015A4  0E40               	movlw	64
  5673   0015A6  6E10               	movwf	(___flge@ff2+3)^0,c
  5674   0015A8  EC56  F018         	call	___flge	;wreg free
  5675   0015AC  B0D8               	btfsc	status,0,c
  5676   0015AE  EFDB  F00A         	goto	u2851
  5677   0015B2  EFDD  F00A         	goto	u2850
  5678   0015B6                     u2851:
  5679   0015B6  EF00  F00B         	goto	l3530
  5680   0015BA                     u2850:
  5681   0015BA                     
  5682                           ;color.c: 266:             turnPrep(mL, mR);
  5683   0015BA  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5684   0015BE  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5685   0015C2  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5686   0015C6  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5687   0015CA  ECF7  F01B         	call	_turnPrep	;wreg free
  5688                           
  5689                           ;color.c: 267:             turnLeft(mL, mR);
  5690   0015CE  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5691   0015D2  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5692   0015D6  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5693   0015DA  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5694   0015DE  EC54  F01B         	call	_turnLeft	;wreg free
  5695   0015E2                     
  5696                           ;color.c: 268:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5697   0015E2  0E12               	movlw	18
  5698   0015E4  6E2E               	movwf	(??_motor_response+1)^0,c
  5699   0015E6  0E0C               	movlw	12
  5700   0015E8  6E2D               	movwf	??_motor_response^0,c
  5701   0015EA  0E95               	movlw	149
  5702   0015EC                     u3607:
  5703   0015EC  2EE8               	decfsz	wreg,f,c
  5704   0015EE  D7FE               	bra	u3607
  5705   0015F0  2E2D               	decfsz	??_motor_response^0,f,c
  5706   0015F2  D7FC               	bra	u3607
  5707   0015F4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5708   0015F6  D7FA               	bra	u3607
  5709   0015F8  F000               	nop	
  5710   0015FA                     
  5711                           ;color.c: 269:             return 2;
  5712   0015FA  0E02               	movlw	2
  5713   0015FC  EF4A  F00D         	goto	l167
  5714   001600                     l3530:
  5715                           
  5716                           ;color.c: 271:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  5717   001600  0ECD               	movlw	205
  5718   001602  6E09               	movwf	___flge@ff1^0,c
  5719   001604  0ECC               	movlw	204
  5720   001606  6E0A               	movwf	(___flge@ff1+1)^0,c
  5721   001608  0E2C               	movlw	44
  5722   00160A  6E0B               	movwf	(___flge@ff1+2)^0,c
  5723   00160C  0E40               	movlw	64
  5724   00160E  6E0C               	movwf	(___flge@ff1+3)^0,c
  5725   001610  EE20 F018          	lfsr	2,24
  5726   001614  5027               	movf	motor_response@temp^0,w,c
  5727   001616  26D9               	addwf	fsr2l,f,c
  5728   001618  5028               	movf	(motor_response@temp+1)^0,w,c
  5729   00161A  22DA               	addwfc	fsr2h,f,c
  5730   00161C  CFDE F00D          	movff	postinc2,___flge@ff2
  5731   001620  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5732   001624  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5733   001628  CFDE F010          	movff	postinc2,___flge@ff2+3
  5734   00162C  EC56  F018         	call	___flge	;wreg free
  5735   001630  B0D8               	btfsc	status,0,c
  5736   001632  EF1D  F00B         	goto	u2861
  5737   001636  EF1F  F00B         	goto	u2860
  5738   00163A                     u2861:
  5739   00163A  EFDD  F00B         	goto	l3550
  5740   00163E                     u2860:
  5741   00163E  EE20 F018          	lfsr	2,24
  5742   001642  5027               	movf	motor_response@temp^0,w,c
  5743   001644  26D9               	addwf	fsr2l,f,c
  5744   001646  5028               	movf	(motor_response@temp+1)^0,w,c
  5745   001648  22DA               	addwfc	fsr2h,f,c
  5746   00164A  CFDE F009          	movff	postinc2,___flge@ff1
  5747   00164E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5748   001652  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5749   001656  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5750   00165A  0E33               	movlw	51
  5751   00165C  6E0D               	movwf	___flge@ff2^0,c
  5752   00165E  0E33               	movlw	51
  5753   001660  6E0E               	movwf	(___flge@ff2+1)^0,c
  5754   001662  0E53               	movlw	83
  5755   001664  6E0F               	movwf	(___flge@ff2+2)^0,c
  5756   001666  0E40               	movlw	64
  5757   001668  6E10               	movwf	(___flge@ff2+3)^0,c
  5758   00166A  EC56  F018         	call	___flge	;wreg free
  5759   00166E  B0D8               	btfsc	status,0,c
  5760   001670  EF3C  F00B         	goto	u2871
  5761   001674  EF3E  F00B         	goto	u2870
  5762   001678                     u2871:
  5763   001678  EFDD  F00B         	goto	l3550
  5764   00167C                     u2870:
  5765   00167C  0ECD               	movlw	205
  5766   00167E  6E09               	movwf	___flge@ff1^0,c
  5767   001680  0ECC               	movlw	204
  5768   001682  6E0A               	movwf	(___flge@ff1+1)^0,c
  5769   001684  0E2C               	movlw	44
  5770   001686  6E0B               	movwf	(___flge@ff1+2)^0,c
  5771   001688  0E40               	movlw	64
  5772   00168A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5773   00168C  EE20 F010          	lfsr	2,16
  5774   001690  5027               	movf	motor_response@temp^0,w,c
  5775   001692  26D9               	addwf	fsr2l,f,c
  5776   001694  5028               	movf	(motor_response@temp+1)^0,w,c
  5777   001696  22DA               	addwfc	fsr2h,f,c
  5778   001698  CFDE F00D          	movff	postinc2,___flge@ff2
  5779   00169C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5780   0016A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5781   0016A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5782   0016A8  EC56  F018         	call	___flge	;wreg free
  5783   0016AC  B0D8               	btfsc	status,0,c
  5784   0016AE  EF5B  F00B         	goto	u2881
  5785   0016B2  EF5D  F00B         	goto	u2880
  5786   0016B6                     u2881:
  5787   0016B6  EFDD  F00B         	goto	l3550
  5788   0016BA                     u2880:
  5789   0016BA  EE20 F010          	lfsr	2,16
  5790   0016BE  5027               	movf	motor_response@temp^0,w,c
  5791   0016C0  26D9               	addwf	fsr2l,f,c
  5792   0016C2  5028               	movf	(motor_response@temp+1)^0,w,c
  5793   0016C4  22DA               	addwfc	fsr2h,f,c
  5794   0016C6  CFDE F009          	movff	postinc2,___flge@ff1
  5795   0016CA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5796   0016CE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5797   0016D2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5798   0016D6  0E33               	movlw	51
  5799   0016D8  6E0D               	movwf	___flge@ff2^0,c
  5800   0016DA  0E33               	movlw	51
  5801   0016DC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5802   0016DE  0E53               	movlw	83
  5803   0016E0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5804   0016E2  0E40               	movlw	64
  5805   0016E4  6E10               	movwf	(___flge@ff2+3)^0,c
  5806   0016E6  EC56  F018         	call	___flge	;wreg free
  5807   0016EA  B0D8               	btfsc	status,0,c
  5808   0016EC  EF7A  F00B         	goto	u2891
  5809   0016F0  EF7C  F00B         	goto	u2890
  5810   0016F4                     u2891:
  5811   0016F4  EFDD  F00B         	goto	l3550
  5812   0016F8                     u2890:
  5813   0016F8  0ECD               	movlw	205
  5814   0016FA  6E09               	movwf	___flge@ff1^0,c
  5815   0016FC  0ECC               	movlw	204
  5816   0016FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5817   001700  0E2C               	movlw	44
  5818   001702  6E0B               	movwf	(___flge@ff1+2)^0,c
  5819   001704  0E40               	movlw	64
  5820   001706  6E0C               	movwf	(___flge@ff1+3)^0,c
  5821   001708  EE20 F014          	lfsr	2,20
  5822   00170C  5027               	movf	motor_response@temp^0,w,c
  5823   00170E  26D9               	addwf	fsr2l,f,c
  5824   001710  5028               	movf	(motor_response@temp+1)^0,w,c
  5825   001712  22DA               	addwfc	fsr2h,f,c
  5826   001714  CFDE F00D          	movff	postinc2,___flge@ff2
  5827   001718  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5828   00171C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5829   001720  CFDE F010          	movff	postinc2,___flge@ff2+3
  5830   001724  EC56  F018         	call	___flge	;wreg free
  5831   001728  B0D8               	btfsc	status,0,c
  5832   00172A  EF99  F00B         	goto	u2901
  5833   00172E  EF9B  F00B         	goto	u2900
  5834   001732                     u2901:
  5835   001732  EFDD  F00B         	goto	l3550
  5836   001736                     u2900:
  5837   001736  EE20 F014          	lfsr	2,20
  5838   00173A  5027               	movf	motor_response@temp^0,w,c
  5839   00173C  26D9               	addwf	fsr2l,f,c
  5840   00173E  5028               	movf	(motor_response@temp+1)^0,w,c
  5841   001740  22DA               	addwfc	fsr2h,f,c
  5842   001742  CFDE F009          	movff	postinc2,___flge@ff1
  5843   001746  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5844   00174A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5845   00174E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5846   001752  0E33               	movlw	51
  5847   001754  6E0D               	movwf	___flge@ff2^0,c
  5848   001756  0E33               	movlw	51
  5849   001758  6E0E               	movwf	(___flge@ff2+1)^0,c
  5850   00175A  0E53               	movlw	83
  5851   00175C  6E0F               	movwf	(___flge@ff2+2)^0,c
  5852   00175E  0E40               	movlw	64
  5853   001760  6E10               	movwf	(___flge@ff2+3)^0,c
  5854   001762  EC56  F018         	call	___flge	;wreg free
  5855   001766  B0D8               	btfsc	status,0,c
  5856   001768  EFB8  F00B         	goto	u2911
  5857   00176C  EFBA  F00B         	goto	u2910
  5858   001770                     u2911:
  5859   001770  EFDD  F00B         	goto	l3550
  5860   001774                     u2910:
  5861   001774                     
  5862                           ;color.c: 272:             turnPrep(mL, mR);
  5863   001774  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5864   001778  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5865   00177C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5866   001780  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5867   001784  ECF7  F01B         	call	_turnPrep	;wreg free
  5868                           
  5869                           ;color.c: 273:             turnLeft(mL, mR);
  5870   001788  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5871   00178C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5872   001790  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5873   001794  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5874   001798  EC54  F01B         	call	_turnLeft	;wreg free
  5875   00179C                     
  5876                           ;color.c: 274:             _delay((unsigned long)((385)*(64000000/4000.0)));
  5877   00179C  0E20               	movlw	32
  5878   00179E  6E2E               	movwf	(??_motor_response+1)^0,c
  5879   0017A0  0E40               	movlw	64
  5880   0017A2  6E2D               	movwf	??_motor_response^0,c
  5881   0017A4  0EE9               	movlw	233
  5882   0017A6                     u3617:
  5883   0017A6  2EE8               	decfsz	wreg,f,c
  5884   0017A8  D7FE               	bra	u3617
  5885   0017AA  2E2D               	decfsz	??_motor_response^0,f,c
  5886   0017AC  D7FC               	bra	u3617
  5887   0017AE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5888   0017B0  D7FA               	bra	u3617
  5889   0017B2  F000               	nop	
  5890   0017B4                     
  5891                           ;color.c: 275:             return 3;
  5892   0017B4  0E03               	movlw	3
  5893   0017B6  EF4A  F00D         	goto	l167
  5894   0017BA                     l3550:
  5895                           
  5896                           ;color.c: 278:     if (temp->norm_C > CR1L) {
  5897   0017BA  C047  F009         	movff	_CR1L,___flge@ff1
  5898   0017BE  C048  F00A         	movff	_CR1L+1,___flge@ff1+1
  5899   0017C2  C049  F00B         	movff	_CR1L+2,___flge@ff1+2
  5900   0017C6  C04A  F00C         	movff	_CR1L+3,___flge@ff1+3
  5901   0017CA  EE20 F01C          	lfsr	2,28
  5902   0017CE  5027               	movf	motor_response@temp^0,w,c
  5903   0017D0  26D9               	addwf	fsr2l,f,c
  5904   0017D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5905   0017D4  22DA               	addwfc	fsr2h,f,c
  5906   0017D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5907   0017DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5908   0017DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5909   0017E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5910   0017E6  EC56  F018         	call	___flge	;wreg free
  5911   0017EA  B0D8               	btfsc	status,0,c
  5912   0017EC  EFFA  F00B         	goto	u2921
  5913   0017F0  EFFC  F00B         	goto	u2920
  5914   0017F4                     u2921:
  5915   0017F4  EFA8  F00C         	goto	l3588
  5916   0017F8                     u2920:
  5917   0017F8                     
  5918                           ;color.c: 279:         if (temp->norm_B > 5) {
  5919   0017F8  0E00               	movlw	0
  5920   0017FA  6E09               	movwf	___flge@ff1^0,c
  5921   0017FC  0E00               	movlw	0
  5922   0017FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5923   001800  0EA0               	movlw	160
  5924   001802  6E0B               	movwf	(___flge@ff1+2)^0,c
  5925   001804  0E40               	movlw	64
  5926   001806  6E0C               	movwf	(___flge@ff1+3)^0,c
  5927   001808  EE20 F018          	lfsr	2,24
  5928   00180C  5027               	movf	motor_response@temp^0,w,c
  5929   00180E  26D9               	addwf	fsr2l,f,c
  5930   001810  5028               	movf	(motor_response@temp+1)^0,w,c
  5931   001812  22DA               	addwfc	fsr2h,f,c
  5932   001814  CFDE F00D          	movff	postinc2,___flge@ff2
  5933   001818  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5934   00181C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5935   001820  CFDE F010          	movff	postinc2,___flge@ff2+3
  5936   001824  EC56  F018         	call	___flge	;wreg free
  5937   001828  B0D8               	btfsc	status,0,c
  5938   00182A  EF19  F00C         	goto	u2931
  5939   00182E  EF1B  F00C         	goto	u2930
  5940   001832                     u2931:
  5941   001832  EF60  F00C         	goto	l3568
  5942   001836                     u2930:
  5943   001836                     
  5944                           ;color.c: 280:             reverse(mL, mR);
  5945   001836  C029  F01C         	movff	motor_response@mL,reverse@mL
  5946   00183A  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5947   00183E  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5948   001842  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5949   001846  ECD8  F018         	call	_reverse	;wreg free
  5950   00184A                     
  5951                           ;color.c: 281:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5952   00184A  0EF4               	movlw	244
  5953   00184C  6E2E               	movwf	(??_motor_response+1)^0,c
  5954   00184E  0E82               	movlw	130
  5955   001850  6E2D               	movwf	??_motor_response^0,c
  5956   001852  0E05               	movlw	5
  5957   001854                     u3627:
  5958   001854  2EE8               	decfsz	wreg,f,c
  5959   001856  D7FE               	bra	u3627
  5960   001858  2E2D               	decfsz	??_motor_response^0,f,c
  5961   00185A  D7FC               	bra	u3627
  5962   00185C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5963   00185E  D7FA               	bra	u3627
  5964   001860  F000               	nop	
  5965   001862                     
  5966                           ;color.c: 282:             norm_stop(mL, mR);
  5967   001862  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5968   001866  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5969   00186A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5970   00186E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5971   001872  EC24  F01D         	call	_norm_stop	;wreg free
  5972                           
  5973                           ;color.c: 283:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5974   001876  0E09               	movlw	9
  5975   001878  6E2E               	movwf	(??_motor_response+1)^0,c
  5976   00187A  0E1E               	movlw	30
  5977   00187C  6E2D               	movwf	??_motor_response^0,c
  5978   00187E  0EE4               	movlw	228
  5979   001880                     u3637:
  5980   001880  2EE8               	decfsz	wreg,f,c
  5981   001882  D7FE               	bra	u3637
  5982   001884  2E2D               	decfsz	??_motor_response^0,f,c
  5983   001886  D7FC               	bra	u3637
  5984   001888  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5985   00188A  D7FA               	bra	u3637
  5986   00188C  D000               	nop2	
  5987   00188E                     
  5988                           ;color.c: 284:             turnRight(mL, mR);
  5989   00188E  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5990   001892  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5991   001896  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5992   00189A  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5993   00189E  EC1B  F01B         	call	_turnRight	;wreg free
  5994   0018A2                     
  5995                           ;color.c: 285:             _delay((unsigned long)((205)*(64000000/4000.0)));
  5996   0018A2  0E11               	movlw	17
  5997   0018A4  6E2E               	movwf	(??_motor_response+1)^0,c
  5998   0018A6  0EA4               	movlw	164
  5999   0018A8  6E2D               	movwf	??_motor_response^0,c
  6000   0018AA  0EB0               	movlw	176
  6001   0018AC                     u3647:
  6002   0018AC  2EE8               	decfsz	wreg,f,c
  6003   0018AE  D7FE               	bra	u3647
  6004   0018B0  2E2D               	decfsz	??_motor_response^0,f,c
  6005   0018B2  D7FC               	bra	u3647
  6006   0018B4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6007   0018B6  D7FA               	bra	u3647
  6008   0018B8  D000               	nop2	
  6009   0018BA                     
  6010                           ;color.c: 286:             return 4;
  6011   0018BA  0E04               	movlw	4
  6012   0018BC  EF4A  F00D         	goto	l167
  6013   0018C0                     l3568:
  6014                           
  6015                           ;color.c: 289:         if (temp->norm_B < 5) {
  6016   0018C0  EE20 F018          	lfsr	2,24
  6017   0018C4  5027               	movf	motor_response@temp^0,w,c
  6018   0018C6  26D9               	addwf	fsr2l,f,c
  6019   0018C8  5028               	movf	(motor_response@temp+1)^0,w,c
  6020   0018CA  22DA               	addwfc	fsr2h,f,c
  6021   0018CC  CFDE F009          	movff	postinc2,___flge@ff1
  6022   0018D0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  6023   0018D4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  6024   0018D8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  6025   0018DC  0E00               	movlw	0
  6026   0018DE  6E0D               	movwf	___flge@ff2^0,c
  6027   0018E0  0E00               	movlw	0
  6028   0018E2  6E0E               	movwf	(___flge@ff2+1)^0,c
  6029   0018E4  0EA0               	movlw	160
  6030   0018E6  6E0F               	movwf	(___flge@ff2+2)^0,c
  6031   0018E8  0E40               	movlw	64
  6032   0018EA  6E10               	movwf	(___flge@ff2+3)^0,c
  6033   0018EC  EC56  F018         	call	___flge	;wreg free
  6034   0018F0  B0D8               	btfsc	status,0,c
  6035   0018F2  EF7D  F00C         	goto	u2941
  6036   0018F6  EF7F  F00C         	goto	u2940
  6037   0018FA                     u2941:
  6038   0018FA  EF4A  F00D         	goto	l167
  6039   0018FE                     u2940:
  6040   0018FE                     
  6041                           ;color.c: 291:             motor_return = 1;
  6042   0018FE  0E01               	movlw	1
  6043   001900  0100               	movlb	0	; () banked
  6044   001902  6FDA               	movwf	_motor_return& (0+255),b
  6045   001904                     
  6046                           ; BSR set to: 0
  6047                           ;color.c: 292:             LATDbits.LATD4 = 1;
  6048   001904  887C               	bsf	124,4,c	;volatile
  6049   001906                     
  6050                           ; BSR set to: 0
  6051                           ;color.c: 293:             turnPrep(mL, mR);
  6052   001906  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6053   00190A  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6054   00190E  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6055   001912  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6056   001916  ECF7  F01B         	call	_turnPrep	;wreg free
  6057   00191A                     
  6058                           ;color.c: 294:             turnLeft(mL, mR);
  6059   00191A  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6060   00191E  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6061   001922  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6062   001926  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6063   00192A  EC54  F01B         	call	_turnLeft	;wreg free
  6064   00192E                     
  6065                           ;color.c: 295:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6066   00192E  0E20               	movlw	32
  6067   001930  6E2E               	movwf	(??_motor_response+1)^0,c
  6068   001932  0E40               	movlw	64
  6069   001934  6E2D               	movwf	??_motor_response^0,c
  6070   001936  0EE9               	movlw	233
  6071   001938                     u3657:
  6072   001938  2EE8               	decfsz	wreg,f,c
  6073   00193A  D7FE               	bra	u3657
  6074   00193C  2E2D               	decfsz	??_motor_response^0,f,c
  6075   00193E  D7FC               	bra	u3657
  6076   001940  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6077   001942  D7FA               	bra	u3657
  6078   001944  F000               	nop	
  6079   001946                     
  6080                           ;color.c: 296:             LATHbits.LATH3 = 0;
  6081   001946  9680               	bcf	128,3,c	;volatile
  6082   001948                     
  6083                           ;color.c: 297:             LATDbits.LATD7 = 1;
  6084   001948  8E7C               	bsf	124,7,c	;volatile
  6085   00194A                     
  6086                           ;color.c: 298:             return 8;
  6087   00194A  0E08               	movlw	8
  6088   00194C  EF4A  F00D         	goto	l167
  6089   001950                     l3588:
  6090                           
  6091                           ;color.c: 302:         if (lost_ctr < 2) {
  6092   001950  BE50               	btfsc	(_lost_ctr+1)^0,7,c
  6093   001952  EFB6  F00C         	goto	u2950
  6094   001956  5050               	movf	(_lost_ctr+1)^0,w,c
  6095   001958  E107               	bnz	u2951
  6096   00195A  0E02               	movlw	2
  6097   00195C  5C4F               	subwf	_lost_ctr^0,w,c
  6098   00195E  B0D8               	btfsc	status,0,c
  6099   001960  EFB4  F00C         	goto	u2951
  6100   001964  EFB6  F00C         	goto	u2950
  6101   001968                     u2951:
  6102   001968  EFBA  F00C         	goto	l3592
  6103   00196C                     u2950:
  6104   00196C                     
  6105                           ;color.c: 303:             lost_ctr++;
  6106   00196C  4A4F               	infsnz	_lost_ctr^0,f,c
  6107   00196E  2A50               	incf	(_lost_ctr+1)^0,f,c
  6108                           
  6109                           ;color.c: 304:         } else {
  6110   001970  EF4A  F00D         	goto	l167
  6111   001974                     l3592:
  6112                           
  6113                           ;color.c: 305:             turnPrep(mL, mR);
  6114   001974  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6115   001978  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6116   00197C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6117   001980  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6118   001984  ECF7  F01B         	call	_turnPrep	;wreg free
  6119   001988                     
  6120                           ;color.c: 307:             for (int j = 0; j <= 75; j++) {
  6121   001988  0E00               	movlw	0
  6122   00198A  6E30               	movwf	(motor_response@j+1)^0,c
  6123   00198C  0E00               	movlw	0
  6124   00198E  6E2F               	movwf	motor_response@j^0,c
  6125   001990  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6126   001992  EFD4  F00C         	goto	u2961
  6127   001996  5030               	movf	(motor_response@j+1)^0,w,c
  6128   001998  E109               	bnz	u2960
  6129   00199A  0E4C               	movlw	76
  6130   00199C  5C2F               	subwf	motor_response@j^0,w,c
  6131   00199E  A0D8               	btfss	status,0,c
  6132   0019A0  EFD4  F00C         	goto	u2961
  6133   0019A4  EFD6  F00C         	goto	u2960
  6134   0019A8                     u2961:
  6135   0019A8  EFD8  F00C         	goto	l3600
  6136   0019AC                     u2960:
  6137   0019AC  EF13  F00D         	goto	l3608
  6138   0019B0                     l3600:
  6139                           
  6140                           ;color.c: 308:                 turnLeft(mL, mR);
  6141   0019B0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6142   0019B4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6143   0019B8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6144   0019BC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6145   0019C0  EC54  F01B         	call	_turnLeft	;wreg free
  6146   0019C4                     
  6147                           ;color.c: 309:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  6148   0019C4  0E03               	movlw	3
  6149   0019C6  6E2E               	movwf	(??_motor_response+1)^0,c
  6150   0019C8  0E70               	movlw	112
  6151   0019CA  6E2D               	movwf	??_motor_response^0,c
  6152   0019CC  0E5C               	movlw	92
  6153   0019CE                     u3667:
  6154   0019CE  2EE8               	decfsz	wreg,f,c
  6155   0019D0  D7FE               	bra	u3667
  6156   0019D2  2E2D               	decfsz	??_motor_response^0,f,c
  6157   0019D4  D7FC               	bra	u3667
  6158   0019D6  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6159   0019D8  D7FA               	bra	u3667
  6160   0019DA  D000               	nop2	
  6161   0019DC                     
  6162                           ;color.c: 310:                 norm_stop(mL, mR);
  6163   0019DC  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6164   0019E0  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6165   0019E4  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6166   0019E8  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6167   0019EC  EC24  F01D         	call	_norm_stop	;wreg free
  6168                           
  6169                           ;color.c: 311:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  6170   0019F0  0E05               	movlw	5
  6171   0019F2  6E2E               	movwf	(??_motor_response+1)^0,c
  6172   0019F4  0EDF               	movlw	223
  6173   0019F6  6E2D               	movwf	??_motor_response^0,c
  6174   0019F8  0EBC               	movlw	188
  6175   0019FA                     u3677:
  6176   0019FA  2EE8               	decfsz	wreg,f,c
  6177   0019FC  D7FE               	bra	u3677
  6178   0019FE  2E2D               	decfsz	??_motor_response^0,f,c
  6179   001A00  D7FC               	bra	u3677
  6180   001A02  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6181   001A04  D7FA               	bra	u3677
  6182   001A06                     
  6183                           ;color.c: 312:             }
  6184   001A06  4A2F               	infsnz	motor_response@j^0,f,c
  6185   001A08  2A30               	incf	(motor_response@j+1)^0,f,c
  6186   001A0A  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6187   001A0C  EF11  F00D         	goto	u2971
  6188   001A10  5030               	movf	(motor_response@j+1)^0,w,c
  6189   001A12  E109               	bnz	u2970
  6190   001A14  0E4C               	movlw	76
  6191   001A16  5C2F               	subwf	motor_response@j^0,w,c
  6192   001A18  A0D8               	btfss	status,0,c
  6193   001A1A  EF11  F00D         	goto	u2971
  6194   001A1E  EF13  F00D         	goto	u2970
  6195   001A22                     u2971:
  6196   001A22  EFD8  F00C         	goto	l3600
  6197   001A26                     u2970:
  6198   001A26                     l3608:
  6199                           
  6200                           ;color.c: 313:             turnLeft(mL, mR);
  6201   001A26  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6202   001A2A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6203   001A2E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6204   001A32  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6205   001A36  EC54  F01B         	call	_turnLeft	;wreg free
  6206   001A3A                     
  6207                           ;color.c: 314:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6208   001A3A  0E20               	movlw	32
  6209   001A3C  6E2E               	movwf	(??_motor_response+1)^0,c
  6210   001A3E  0E40               	movlw	64
  6211   001A40  6E2D               	movwf	??_motor_response^0,c
  6212   001A42  0EE9               	movlw	233
  6213   001A44                     u3687:
  6214   001A44  2EE8               	decfsz	wreg,f,c
  6215   001A46  D7FE               	bra	u3687
  6216   001A48  2E2D               	decfsz	??_motor_response^0,f,c
  6217   001A4A  D7FC               	bra	u3687
  6218   001A4C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6219   001A4E  D7FA               	bra	u3687
  6220   001A50  F000               	nop	
  6221   001A52                     
  6222                           ;color.c: 315:             norm_stop(mL, mR);
  6223   001A52  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6224   001A56  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6225   001A5A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6226   001A5E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6227   001A62  EC24  F01D         	call	_norm_stop	;wreg free
  6228                           
  6229                           ;color.c: 316:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  6230   001A66  0E52               	movlw	82
  6231   001A68  6E2E               	movwf	(??_motor_response+1)^0,c
  6232   001A6A  0E2B               	movlw	43
  6233   001A6C  6E2D               	movwf	??_motor_response^0,c
  6234   001A6E  0E00               	movlw	0
  6235   001A70                     u3697:
  6236   001A70  2EE8               	decfsz	wreg,f,c
  6237   001A72  D7FE               	bra	u3697
  6238   001A74  2E2D               	decfsz	??_motor_response^0,f,c
  6239   001A76  D7FC               	bra	u3697
  6240   001A78  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6241   001A7A  D7FA               	bra	u3697
  6242   001A7C  D000               	nop2	
  6243   001A7E                     
  6244                           ;color.c: 317:             motor_return = 1;
  6245   001A7E  0E01               	movlw	1
  6246   001A80  0100               	movlb	0	; () banked
  6247   001A82  6FDA               	movwf	_motor_return& (0+255),b
  6248   001A84                     
  6249                           ; BSR set to: 0
  6250                           ;color.c: 318:             buggy_step--;
  6251   001A84  0651               	decf	_buggy_step^0,f,c
  6252   001A86  A0D8               	btfss	status,0,c
  6253   001A88  0652               	decf	(_buggy_step+1)^0,f,c
  6254   001A8A                     
  6255                           ; BSR set to: 0
  6256                           ;color.c: 319:             lost_ctr = 0;
  6257   001A8A  0E00               	movlw	0
  6258   001A8C  6E50               	movwf	(_lost_ctr+1)^0,c
  6259   001A8E  0E00               	movlw	0
  6260   001A90  6E4F               	movwf	_lost_ctr^0,c
  6261   001A92                     
  6262                           ; BSR set to: 0
  6263                           ;color.c: 320:             return 9;
  6264   001A92  0E09               	movlw	9
  6265   001A94                     l167:
  6266   001A94  0012               	return		;funcret
  6267   001A96                     __end_of_motor_response:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _turnRight *****************
  6271 ;; Defined at:
  6272 ;;		line 157 in file "dc_motor.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6275 ;;		 -> main@mL(9), 
  6276 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6277 ;;		 -> main@mR(9), 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;		None
  6280 ;; Return value:  Size  Location     Type
  6281 ;;                  1    wreg      void 
  6282 ;; Registers used:
  6283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6284 ;; Tracked objects:
  6285 ;;		On entry : 0/0
  6286 ;;		On exit  : 0/0
  6287 ;;		Unchanged: 0/0
  6288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6293 ;;Total ram usage:        4 bytes
  6294 ;; Hardware stack levels used: 1
  6295 ;; Hardware stack levels required when called: 8
  6296 ;; This function calls:
  6297 ;;		_setMotorPWM
  6298 ;; This function is called by:
  6299 ;;		_motor_response
  6300 ;;		_motor_retrace
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text22
  6305   003636                     __ptext22:
  6306                           	callstack 0
  6307   003636                     _turnRight:
  6308                           	callstack 21
  6309   003636                     
  6310                           ;dc_motor.c: 157: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 158: {;dc_motor
      +                          .c: 159:     mL->power = 60;
  6311   003636  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6312   00363A  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6313   00363E  0E3C               	movlw	60
  6314   003640  6EDF               	movwf	indf2,c
  6315                           
  6316                           ;dc_motor.c: 160:     mR->power = 60;
  6317   003642  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6318   003646  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6319   00364A  0E3C               	movlw	60
  6320   00364C  6EDF               	movwf	indf2,c
  6321   00364E                     
  6322                           ;dc_motor.c: 161:     mL->brakemode = 1;
  6323   00364E  EE20 F002          	lfsr	2,2
  6324   003652  501C               	movf	turnRight@mL^0,w,c
  6325   003654  26D9               	addwf	fsr2l,f,c
  6326   003656  501D               	movf	(turnRight@mL+1)^0,w,c
  6327   003658  22DA               	addwfc	fsr2h,f,c
  6328   00365A  0E01               	movlw	1
  6329   00365C  6EDF               	movwf	indf2,c
  6330   00365E                     
  6331                           ;dc_motor.c: 162:     mR->brakemode = 1;
  6332   00365E  EE20 F002          	lfsr	2,2
  6333   003662  501E               	movf	turnRight@mR^0,w,c
  6334   003664  26D9               	addwf	fsr2l,f,c
  6335   003666  501F               	movf	(turnRight@mR+1)^0,w,c
  6336   003668  22DA               	addwfc	fsr2h,f,c
  6337   00366A  0E01               	movlw	1
  6338   00366C  6EDF               	movwf	indf2,c
  6339   00366E                     
  6340                           ;dc_motor.c: 163:     mR->direction = 0;
  6341   00366E  EE20 F001          	lfsr	2,1
  6342   003672  501E               	movf	turnRight@mR^0,w,c
  6343   003674  26D9               	addwf	fsr2l,f,c
  6344   003676  501F               	movf	(turnRight@mR+1)^0,w,c
  6345   003678  22DA               	addwfc	fsr2h,f,c
  6346   00367A  0E00               	movlw	0
  6347   00367C  6EDF               	movwf	indf2,c
  6348   00367E                     
  6349                           ;dc_motor.c: 164:     mL->direction = 1;
  6350   00367E  EE20 F001          	lfsr	2,1
  6351   003682  501C               	movf	turnRight@mL^0,w,c
  6352   003684  26D9               	addwf	fsr2l,f,c
  6353   003686  501D               	movf	(turnRight@mL+1)^0,w,c
  6354   003688  22DA               	addwfc	fsr2h,f,c
  6355   00368A  0E01               	movlw	1
  6356   00368C  6EDF               	movwf	indf2,c
  6357   00368E                     
  6358                           ;dc_motor.c: 165:     setMotorPWM(mL);
  6359   00368E  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  6360   003692  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  6361   003696  ECA0  F017         	call	_setMotorPWM	;wreg free
  6362   00369A                     
  6363                           ;dc_motor.c: 166:     setMotorPWM(mR);
  6364   00369A  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  6365   00369E  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  6366   0036A2  ECA0  F017         	call	_setMotorPWM	;wreg free
  6367   0036A6  0012               	return		;funcret
  6368   0036A8                     __end_of_turnRight:
  6369                           	callstack 0
  6370                           
  6371 ;; *************** function _turnPrep *****************
  6372 ;; Defined at:
  6373 ;;		line 277 in file "dc_motor.c"
  6374 ;; Parameters:    Size  Location     Type
  6375 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6376 ;;		 -> main@mL(9), 
  6377 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6378 ;;		 -> main@mR(9), 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;		None
  6381 ;; Return value:  Size  Location     Type
  6382 ;;                  1    wreg      void 
  6383 ;; Registers used:
  6384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6385 ;; Tracked objects:
  6386 ;;		On entry : 0/0
  6387 ;;		On exit  : 0/0
  6388 ;;		Unchanged: 0/0
  6389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6393 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6394 ;;Total ram usage:        6 bytes
  6395 ;; Hardware stack levels used: 1
  6396 ;; Hardware stack levels required when called: 9
  6397 ;; This function calls:
  6398 ;;		_norm_stop
  6399 ;;		_reverse
  6400 ;; This function is called by:
  6401 ;;		_motor_response
  6402 ;;		_motor_retrace
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           
  6406                           	psect	text23
  6407   0037EE                     __ptext23:
  6408                           	callstack 0
  6409   0037EE                     _turnPrep:
  6410                           	callstack 20
  6411   0037EE                     
  6412                           ;dc_motor.c: 278:         reverse(mL, mR);
  6413   0037EE  C021  F01C         	movff	turnPrep@mL,reverse@mL
  6414   0037F2  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  6415   0037F6  C023  F01E         	movff	turnPrep@mR,reverse@mR
  6416   0037FA  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  6417   0037FE  ECD8  F018         	call	_reverse	;wreg free
  6418   003802                     
  6419                           ;dc_motor.c: 279:         _delay((unsigned long)((600)*(64000000/4000.0)));
  6420   003802  0E31               	movlw	49
  6421   003804  6E26               	movwf	(??_turnPrep+1)^0,c
  6422   003806  0EB4               	movlw	180
  6423   003808  6E25               	movwf	??_turnPrep^0,c
  6424   00380A  0E66               	movlw	102
  6425   00380C                     u3707:
  6426   00380C  2EE8               	decfsz	wreg,f,c
  6427   00380E  D7FE               	bra	u3707
  6428   003810  2E25               	decfsz	??_turnPrep^0,f,c
  6429   003812  D7FC               	bra	u3707
  6430   003814  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6431   003816  D7FA               	bra	u3707
  6432   003818                     
  6433                           ;dc_motor.c: 280:         norm_stop(mL, mR);
  6434   003818  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  6435   00381C  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  6436   003820  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  6437   003824  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  6438   003828  EC24  F01D         	call	_norm_stop	;wreg free
  6439                           
  6440                           ;dc_motor.c: 281:         _delay((unsigned long)((300)*(64000000/4000.0)));
  6441   00382C  0E19               	movlw	25
  6442   00382E  6E26               	movwf	(??_turnPrep+1)^0,c
  6443   003830  0E5A               	movlw	90
  6444   003832  6E25               	movwf	??_turnPrep^0,c
  6445   003834  0EB2               	movlw	178
  6446   003836                     u3717:
  6447   003836  2EE8               	decfsz	wreg,f,c
  6448   003838  D7FE               	bra	u3717
  6449   00383A  2E25               	decfsz	??_turnPrep^0,f,c
  6450   00383C  D7FC               	bra	u3717
  6451   00383E  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6452   003840  D7FA               	bra	u3717
  6453   003842  0012               	return		;funcret
  6454   003844                     __end_of_turnPrep:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _reverse *****************
  6458 ;; Defined at:
  6459 ;;		line 251 in file "dc_motor.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6462 ;;		 -> main@mL(9), 
  6463 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6464 ;;		 -> main@mR(9), 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6476 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;Total ram usage:        5 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 8
  6483 ;; This function calls:
  6484 ;;		_setMotorPWM
  6485 ;; This function is called by:
  6486 ;;		_motor_response
  6487 ;;		_turnPrep
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text24
  6492   0031B0                     __ptext24:
  6493                           	callstack 0
  6494   0031B0                     _reverse:
  6495                           	callstack 20
  6496   0031B0                     
  6497                           ;dc_motor.c: 251: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 252: {;dc_motor.c
      +                          : 253:     mL->power = 5;
  6498   0031B0  C01C  FFD9         	movff	reverse@mL,fsr2l
  6499   0031B4  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6500   0031B8  0E05               	movlw	5
  6501   0031BA  6EDF               	movwf	indf2,c
  6502                           
  6503                           ;dc_motor.c: 254:     mR->power = 5;
  6504   0031BC  C01E  FFD9         	movff	reverse@mR,fsr2l
  6505   0031C0  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6506   0031C4  0E05               	movlw	5
  6507   0031C6  6EDF               	movwf	indf2,c
  6508   0031C8                     
  6509                           ;dc_motor.c: 255:     mR->direction = 0;
  6510   0031C8  EE20 F001          	lfsr	2,1
  6511   0031CC  501E               	movf	reverse@mR^0,w,c
  6512   0031CE  26D9               	addwf	fsr2l,f,c
  6513   0031D0  501F               	movf	(reverse@mR+1)^0,w,c
  6514   0031D2  22DA               	addwfc	fsr2h,f,c
  6515   0031D4  0E00               	movlw	0
  6516   0031D6  6EDF               	movwf	indf2,c
  6517   0031D8                     
  6518                           ;dc_motor.c: 256:     mL->direction = 0;
  6519   0031D8  EE20 F001          	lfsr	2,1
  6520   0031DC  501C               	movf	reverse@mL^0,w,c
  6521   0031DE  26D9               	addwf	fsr2l,f,c
  6522   0031E0  501D               	movf	(reverse@mL+1)^0,w,c
  6523   0031E2  22DA               	addwfc	fsr2h,f,c
  6524   0031E4  0E00               	movlw	0
  6525   0031E6  6EDF               	movwf	indf2,c
  6526   0031E8                     
  6527                           ;dc_motor.c: 257:     mL->brakemode = 1;
  6528   0031E8  EE20 F002          	lfsr	2,2
  6529   0031EC  501C               	movf	reverse@mL^0,w,c
  6530   0031EE  26D9               	addwf	fsr2l,f,c
  6531   0031F0  501D               	movf	(reverse@mL+1)^0,w,c
  6532   0031F2  22DA               	addwfc	fsr2h,f,c
  6533   0031F4  0E01               	movlw	1
  6534   0031F6  6EDF               	movwf	indf2,c
  6535   0031F8                     
  6536                           ;dc_motor.c: 258:     mR->brakemode = 1;
  6537   0031F8  EE20 F002          	lfsr	2,2
  6538   0031FC  501E               	movf	reverse@mR^0,w,c
  6539   0031FE  26D9               	addwf	fsr2l,f,c
  6540   003200  501F               	movf	(reverse@mR+1)^0,w,c
  6541   003202  22DA               	addwfc	fsr2h,f,c
  6542   003204  0E01               	movlw	1
  6543   003206  6EDF               	movwf	indf2,c
  6544                           
  6545                           ;dc_motor.c: 259:     while (mL->power <= 20 && mR->power <=20)
  6546   003208  EF23  F019         	goto	l696
  6547   00320C                     l2826:
  6548                           
  6549                           ;dc_motor.c: 260:     {;dc_motor.c: 261:         mL->power++;
  6550   00320C  C01C  FFD9         	movff	reverse@mL,fsr2l
  6551   003210  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6552   003214  2ADF               	incf	indf2,f,c
  6553                           
  6554                           ;dc_motor.c: 262:         mR->power++;
  6555   003216  C01E  FFD9         	movff	reverse@mR,fsr2l
  6556   00321A  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6557   00321E  2ADF               	incf	indf2,f,c
  6558   003220                     
  6559                           ;dc_motor.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6560   003220  0ED0               	movlw	208
  6561   003222  6E20               	movwf	??_reverse^0,c
  6562   003224  0ECA               	movlw	202
  6563   003226                     u3727:
  6564   003226  2EE8               	decfsz	wreg,f,c
  6565   003228  D7FE               	bra	u3727
  6566   00322A  2E20               	decfsz	??_reverse^0,f,c
  6567   00322C  D7FC               	bra	u3727
  6568   00322E                     
  6569                           ;dc_motor.c: 264:         setMotorPWM(mL);
  6570   00322E  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6571   003232  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6572   003236  ECA0  F017         	call	_setMotorPWM	;wreg free
  6573   00323A                     
  6574                           ;dc_motor.c: 265:         setMotorPWM(mR);
  6575   00323A  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6576   00323E  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6577   003242  ECA0  F017         	call	_setMotorPWM	;wreg free
  6578   003246                     l696:
  6579                           
  6580                           ;dc_motor.c: 259:     while (mL->power <= 20 && mR->power <=20)
  6581   003246  C01C  FFD9         	movff	reverse@mL,fsr2l
  6582   00324A  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6583   00324E  0E15               	movlw	21
  6584   003250  60DF               	cpfslt	indf2,c
  6585   003252  EF2D  F019         	goto	u1741
  6586   003256  EF2F  F019         	goto	u1740
  6587   00325A                     u1741:
  6588   00325A  EF3B  F019         	goto	l2836
  6589   00325E                     u1740:
  6590   00325E  C01E  FFD9         	movff	reverse@mR,fsr2l
  6591   003262  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6592   003266  0E14               	movlw	20
  6593   003268  64DF               	cpfsgt	indf2,c
  6594   00326A  EF39  F019         	goto	u1751
  6595   00326E  EF3B  F019         	goto	u1750
  6596   003272                     u1751:
  6597   003272  EF06  F019         	goto	l2826
  6598   003276                     u1750:
  6599   003276                     l2836:
  6600                           
  6601                           ;dc_motor.c: 267:     mL->power = 20;
  6602   003276  C01C  FFD9         	movff	reverse@mL,fsr2l
  6603   00327A  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6604   00327E  0E14               	movlw	20
  6605   003280  6EDF               	movwf	indf2,c
  6606                           
  6607                           ;dc_motor.c: 268:     mR->power = 20;
  6608   003282  C01E  FFD9         	movff	reverse@mR,fsr2l
  6609   003286  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6610   00328A  0E14               	movlw	20
  6611   00328C  6EDF               	movwf	indf2,c
  6612   00328E                     
  6613                           ;dc_motor.c: 269:     setMotorPWM(mL);
  6614   00328E  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6615   003292  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6616   003296  ECA0  F017         	call	_setMotorPWM	;wreg free
  6617   00329A                     
  6618                           ;dc_motor.c: 270:     setMotorPWM(mR);
  6619   00329A  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6620   00329E  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6621   0032A2  ECA0  F017         	call	_setMotorPWM	;wreg free
  6622   0032A6  0012               	return		;funcret
  6623   0032A8                     __end_of_reverse:
  6624                           	callstack 0
  6625                           
  6626 ;; *************** function _norm_stop *****************
  6627 ;; Defined at:
  6628 ;;		line 131 in file "dc_motor.c"
  6629 ;; Parameters:    Size  Location     Type
  6630 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6631 ;;		 -> main@mL(9), 
  6632 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6633 ;;		 -> main@mR(9), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6645 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;Total ram usage:        4 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 8
  6652 ;; This function calls:
  6653 ;;		_setMotorPWM
  6654 ;; This function is called by:
  6655 ;;		_rangeCalibrate
  6656 ;;		_motor_response
  6657 ;;		_motor_retrace
  6658 ;;		_main
  6659 ;;		_turnPrep
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text25
  6664   003A48                     __ptext25:
  6665                           	callstack 0
  6666   003A48                     _norm_stop:
  6667                           	callstack 21
  6668   003A48                     
  6669                           ;dc_motor.c: 131: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor
      +                          .c: 133:     mL->power = 0;
  6670   003A48  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  6671   003A4C  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  6672   003A50  0E00               	movlw	0
  6673   003A52  6EDF               	movwf	indf2,c
  6674                           
  6675                           ;dc_motor.c: 134:     mR->power = 0;
  6676   003A54  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  6677   003A58  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  6678   003A5C  0E00               	movlw	0
  6679   003A5E  6EDF               	movwf	indf2,c
  6680   003A60                     
  6681                           ;dc_motor.c: 135:     setMotorPWM(mL);
  6682   003A60  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  6683   003A64  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  6684   003A68  ECA0  F017         	call	_setMotorPWM	;wreg free
  6685   003A6C                     
  6686                           ;dc_motor.c: 136:     setMotorPWM(mR);
  6687   003A6C  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  6688   003A70  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  6689   003A74  ECA0  F017         	call	_setMotorPWM	;wreg free
  6690   003A78  0012               	return		;funcret
  6691   003A7A                     __end_of_norm_stop:
  6692                           	callstack 0
  6693                           
  6694 ;; *************** function _turnLeft *****************
  6695 ;; Defined at:
  6696 ;;		line 142 in file "dc_motor.c"
  6697 ;; Parameters:    Size  Location     Type
  6698 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6699 ;;		 -> main@mL(9), 
  6700 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6701 ;;		 -> main@mR(9), 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6713 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6717 ;;Total ram usage:        4 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 8
  6720 ;; This function calls:
  6721 ;;		_setMotorPWM
  6722 ;; This function is called by:
  6723 ;;		_motor_response
  6724 ;;		_motor_retrace
  6725 ;;		_main
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text26
  6730   0036A8                     __ptext26:
  6731                           	callstack 0
  6732   0036A8                     _turnLeft:
  6733                           	callstack 22
  6734   0036A8                     
  6735                           ;dc_motor.c: 142: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 143: {;dc_motor.
      +                          c: 144:     mL->power = 60;
  6736   0036A8  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6737   0036AC  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6738   0036B0  0E3C               	movlw	60
  6739   0036B2  6EDF               	movwf	indf2,c
  6740                           
  6741                           ;dc_motor.c: 145:     mR->power = 60;
  6742   0036B4  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6743   0036B8  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6744   0036BC  0E3C               	movlw	60
  6745   0036BE  6EDF               	movwf	indf2,c
  6746   0036C0                     
  6747                           ;dc_motor.c: 146:     mL->brakemode = 1;
  6748   0036C0  EE20 F002          	lfsr	2,2
  6749   0036C4  501C               	movf	turnLeft@mL^0,w,c
  6750   0036C6  26D9               	addwf	fsr2l,f,c
  6751   0036C8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6752   0036CA  22DA               	addwfc	fsr2h,f,c
  6753   0036CC  0E01               	movlw	1
  6754   0036CE  6EDF               	movwf	indf2,c
  6755   0036D0                     
  6756                           ;dc_motor.c: 147:     mR->brakemode = 1;
  6757   0036D0  EE20 F002          	lfsr	2,2
  6758   0036D4  501E               	movf	turnLeft@mR^0,w,c
  6759   0036D6  26D9               	addwf	fsr2l,f,c
  6760   0036D8  501F               	movf	(turnLeft@mR+1)^0,w,c
  6761   0036DA  22DA               	addwfc	fsr2h,f,c
  6762   0036DC  0E01               	movlw	1
  6763   0036DE  6EDF               	movwf	indf2,c
  6764   0036E0                     
  6765                           ;dc_motor.c: 148:     mL->direction = 0;
  6766   0036E0  EE20 F001          	lfsr	2,1
  6767   0036E4  501C               	movf	turnLeft@mL^0,w,c
  6768   0036E6  26D9               	addwf	fsr2l,f,c
  6769   0036E8  501D               	movf	(turnLeft@mL+1)^0,w,c
  6770   0036EA  22DA               	addwfc	fsr2h,f,c
  6771   0036EC  0E00               	movlw	0
  6772   0036EE  6EDF               	movwf	indf2,c
  6773   0036F0                     
  6774                           ;dc_motor.c: 149:     mR->direction = 1;
  6775   0036F0  EE20 F001          	lfsr	2,1
  6776   0036F4  501E               	movf	turnLeft@mR^0,w,c
  6777   0036F6  26D9               	addwf	fsr2l,f,c
  6778   0036F8  501F               	movf	(turnLeft@mR+1)^0,w,c
  6779   0036FA  22DA               	addwfc	fsr2h,f,c
  6780   0036FC  0E01               	movlw	1
  6781   0036FE  6EDF               	movwf	indf2,c
  6782   003700                     
  6783                           ;dc_motor.c: 150:     setMotorPWM(mL);
  6784   003700  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6785   003704  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6786   003708  ECA0  F017         	call	_setMotorPWM	;wreg free
  6787   00370C                     
  6788                           ;dc_motor.c: 151:     setMotorPWM(mR);
  6789   00370C  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6790   003710  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6791   003714  ECA0  F017         	call	_setMotorPWM	;wreg free
  6792   003718  0012               	return		;funcret
  6793   00371A                     __end_of_turnLeft:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function _setMotorPWM *****************
  6797 ;; Defined at:
  6798 ;;		line 60 in file "dc_motor.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6801 ;;		 -> main@mR(9), main@mL(9), 
  6802 ;; Auto vars:     Size  Location     Type
  6803 ;;  negDuty         1   26[COMRAM] unsigned char 
  6804 ;;  posDuty         1   25[COMRAM] unsigned char 
  6805 ;; Return value:  Size  Location     Type
  6806 ;;                  1    wreg      void 
  6807 ;; Registers used:
  6808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6809 ;; Tracked objects:
  6810 ;;		On entry : 0/0
  6811 ;;		On exit  : 0/0
  6812 ;;		Unchanged: 0/0
  6813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6814 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6818 ;;Total ram usage:        6 bytes
  6819 ;; Hardware stack levels used: 1
  6820 ;; Hardware stack levels required when called: 7
  6821 ;; This function calls:
  6822 ;;		___lwdiv
  6823 ;;		___wmul
  6824 ;; This function is called by:
  6825 ;;		_norm_stop
  6826 ;;		_turnLeft
  6827 ;;		_turnRight
  6828 ;;		_fullSpeedAhead
  6829 ;;		_wallSmash
  6830 ;;		_reverse
  6831 ;;		_decelerate
  6832 ;;		_slowSearch
  6833 ;;		_uturn
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           	psect	text27
  6838   002F40                     __ptext27:
  6839                           	callstack 0
  6840   002F40                     _setMotorPWM:
  6841                           	callstack 22
  6842   002F40                     
  6843                           ;dc_motor.c: 60: void setMotorPWM(DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 64:     if(m->brakemode) {
  6844   002F40  EE20 F002          	lfsr	2,2
  6845   002F44  5016               	movf	setMotorPWM@m^0,w,c
  6846   002F46  26D9               	addwf	fsr2l,f,c
  6847   002F48  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6848   002F4A  22DA               	addwfc	fsr2h,f,c
  6849   002F4C  50DF               	movf	indf2,w,c
  6850   002F4E  B4D8               	btfsc	status,2,c
  6851   002F50  EFAC  F017         	goto	u1721
  6852   002F54  EFAE  F017         	goto	u1720
  6853   002F58                     u1721:
  6854   002F58  EFE2  F017         	goto	l2764
  6855   002F5C                     u1720:
  6856   002F5C                     
  6857                           ;dc_motor.c: 65:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6858   002F5C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6859   002F60  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6860   002F64  50DF               	movf	indf2,w,c
  6861   002F66  6E18               	movwf	??_setMotorPWM^0,c
  6862   002F68  5018               	movf	??_setMotorPWM^0,w,c
  6863   002F6A  6E09               	movwf	___wmul@multiplier^0,c
  6864   002F6C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6865   002F6E  EE20 F003          	lfsr	2,3
  6866   002F72  5016               	movf	setMotorPWM@m^0,w,c
  6867   002F74  26D9               	addwf	fsr2l,f,c
  6868   002F76  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6869   002F78  22DA               	addwfc	fsr2h,f,c
  6870   002F7A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6871   002F7E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6872   002F82  ECBD  F01D         	call	___wmul	;wreg free
  6873   002F86  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6874   002F8A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6875   002F8E  0E00               	movlw	0
  6876   002F90  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6877   002F92  0E64               	movlw	100
  6878   002F94  6E11               	movwf	___lwdiv@divisor^0,c
  6879   002F96  ECE1  F01A         	call	___lwdiv	;wreg free
  6880   002F9A  EE20 F003          	lfsr	2,3
  6881   002F9E  5016               	movf	setMotorPWM@m^0,w,c
  6882   002FA0  26D9               	addwf	fsr2l,f,c
  6883   002FA2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6884   002FA4  22DA               	addwfc	fsr2h,f,c
  6885   002FA6  50DF               	movf	indf2,w,c
  6886   002FA8  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6887   002FAA  500F               	movf	?___lwdiv^0,w,c
  6888   002FAC  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6889   002FAE  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6890   002FB0                     
  6891                           ;dc_motor.c: 66:         negDuty=m->PWMperiod;
  6892   002FB0  EE20 F003          	lfsr	2,3
  6893   002FB4  5016               	movf	setMotorPWM@m^0,w,c
  6894   002FB6  26D9               	addwf	fsr2l,f,c
  6895   002FB8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6896   002FBA  22DA               	addwfc	fsr2h,f,c
  6897   002FBC  50DF               	movf	indf2,w,c
  6898   002FBE  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6899                           
  6900                           ;dc_motor.c: 67:     }
  6901   002FC0  EF05  F018         	goto	l2768
  6902   002FC4                     l2764:
  6903                           
  6904                           ;dc_motor.c: 69:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6905   002FC4  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6906   002FC8  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6907   002FCC  50DF               	movf	indf2,w,c
  6908   002FCE  6E18               	movwf	??_setMotorPWM^0,c
  6909   002FD0  5018               	movf	??_setMotorPWM^0,w,c
  6910   002FD2  6E09               	movwf	___wmul@multiplier^0,c
  6911   002FD4  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6912   002FD6  EE20 F003          	lfsr	2,3
  6913   002FDA  5016               	movf	setMotorPWM@m^0,w,c
  6914   002FDC  26D9               	addwf	fsr2l,f,c
  6915   002FDE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6916   002FE0  22DA               	addwfc	fsr2h,f,c
  6917   002FE2  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6918   002FE6  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6919   002FEA  ECBD  F01D         	call	___wmul	;wreg free
  6920   002FEE  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6921   002FF2  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6922   002FF6  0E00               	movlw	0
  6923   002FF8  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6924   002FFA  0E64               	movlw	100
  6925   002FFC  6E11               	movwf	___lwdiv@divisor^0,c
  6926   002FFE  ECE1  F01A         	call	___lwdiv	;wreg free
  6927   003002  500F               	movf	?___lwdiv^0,w,c
  6928   003004  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6929   003006                     
  6930                           ;dc_motor.c: 70:         negDuty=0;
  6931   003006  0E00               	movlw	0
  6932   003008  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6933   00300A                     l2768:
  6934                           
  6935                           ;dc_motor.c: 73:     if (m->direction) {
  6936   00300A  EE20 F001          	lfsr	2,1
  6937   00300E  5016               	movf	setMotorPWM@m^0,w,c
  6938   003010  26D9               	addwf	fsr2l,f,c
  6939   003012  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6940   003014  22DA               	addwfc	fsr2h,f,c
  6941   003016  50DF               	movf	indf2,w,c
  6942   003018  B4D8               	btfsc	status,2,c
  6943   00301A  EF11  F018         	goto	u1731
  6944   00301E  EF13  F018         	goto	u1730
  6945   003022                     u1731:
  6946   003022  EF35  F018         	goto	l2772
  6947   003026                     u1730:
  6948   003026                     
  6949                           ;dc_motor.c: 74:         *(m->posDutyHighByte)=posDuty;
  6950   003026  EE20 F005          	lfsr	2,5
  6951   00302A  5016               	movf	setMotorPWM@m^0,w,c
  6952   00302C  26D9               	addwf	fsr2l,f,c
  6953   00302E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6954   003030  22DA               	addwfc	fsr2h,f,c
  6955   003032  CFDE F018          	movff	postinc2,??_setMotorPWM
  6956   003036  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6957   00303A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6958   00303E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6959   003042  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6960                           
  6961                           ;dc_motor.c: 75:         *(m->negDutyHighByte)=negDuty;
  6962   003046  EE20 F007          	lfsr	2,7
  6963   00304A  5016               	movf	setMotorPWM@m^0,w,c
  6964   00304C  26D9               	addwf	fsr2l,f,c
  6965   00304E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6966   003050  22DA               	addwfc	fsr2h,f,c
  6967   003052  CFDE F018          	movff	postinc2,??_setMotorPWM
  6968   003056  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6969   00305A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6970   00305E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6971   003062  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6972                           
  6973                           ;dc_motor.c: 76:     } else {
  6974   003066  EF55  F018         	goto	l648
  6975   00306A                     l2772:
  6976                           
  6977                           ;dc_motor.c: 77:         *(m->posDutyHighByte)=negDuty;
  6978   00306A  EE20 F005          	lfsr	2,5
  6979   00306E  5016               	movf	setMotorPWM@m^0,w,c
  6980   003070  26D9               	addwf	fsr2l,f,c
  6981   003072  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6982   003074  22DA               	addwfc	fsr2h,f,c
  6983   003076  CFDE F018          	movff	postinc2,??_setMotorPWM
  6984   00307A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6985   00307E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6986   003082  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6987   003086  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6988                           
  6989                           ;dc_motor.c: 78:         *(m->negDutyHighByte)=posDuty;
  6990   00308A  EE20 F007          	lfsr	2,7
  6991   00308E  5016               	movf	setMotorPWM@m^0,w,c
  6992   003090  26D9               	addwf	fsr2l,f,c
  6993   003092  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6994   003094  22DA               	addwfc	fsr2h,f,c
  6995   003096  CFDE F018          	movff	postinc2,??_setMotorPWM
  6996   00309A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6997   00309E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6998   0030A2  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6999   0030A6  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7000   0030AA                     l648:
  7001   0030AA  0012               	return		;funcret
  7002   0030AC                     __end_of_setMotorPWM:
  7003                           	callstack 0
  7004                           
  7005 ;; *************** function ___wmul *****************
  7006 ;; Defined at:
  7007 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7008 ;; Parameters:    Size  Location     Type
  7009 ;;  multiplier      2    8[COMRAM] unsigned int 
  7010 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7011 ;; Auto vars:     Size  Location     Type
  7012 ;;  product         2   12[COMRAM] unsigned int 
  7013 ;; Return value:  Size  Location     Type
  7014 ;;                  2    8[COMRAM] unsigned int 
  7015 ;; Registers used:
  7016 ;;		wreg, status,2, status,0, prodl, prodh
  7017 ;; Tracked objects:
  7018 ;;		On entry : 0/0
  7019 ;;		On exit  : 0/0
  7020 ;;		Unchanged: 0/0
  7021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7022 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7026 ;;Total ram usage:        6 bytes
  7027 ;; Hardware stack levels used: 1
  7028 ;; Hardware stack levels required when called: 6
  7029 ;; This function calls:
  7030 ;;		Nothing
  7031 ;; This function is called by:
  7032 ;;		_setMotorPWM
  7033 ;; This function uses a non-reentrant model
  7034 ;;
  7035                           
  7036                           	psect	text28
  7037   003B7A                     __ptext28:
  7038                           	callstack 0
  7039   003B7A                     ___wmul:
  7040                           	callstack 22
  7041   003B7A  5009               	movf	___wmul@multiplier^0,w,c
  7042   003B7C  020B               	mulwf	___wmul@multiplicand^0,c
  7043   003B7E  CFF3 F00D          	movff	prodl,___wmul@product
  7044   003B82  CFF4 F00E          	movff	prodh,___wmul@product+1
  7045   003B86  5009               	movf	___wmul@multiplier^0,w,c
  7046   003B88  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7047   003B8A  50F3               	movf	243,w,c
  7048   003B8C  260E               	addwf	(___wmul@product+1)^0,f,c
  7049   003B8E  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7050   003B90  020B               	mulwf	___wmul@multiplicand^0,c
  7051   003B92  50F3               	movf	243,w,c
  7052   003B94  260E               	addwf	(___wmul@product+1)^0,f,c
  7053   003B96  C00D  F009         	movff	___wmul@product,?___wmul
  7054   003B9A  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7055   003B9E  0012               	return		;funcret
  7056   003BA0                     __end_of___wmul:
  7057                           	callstack 0
  7058                           
  7059 ;; *************** function ___lwdiv *****************
  7060 ;; Defined at:
  7061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  dividend        2   14[COMRAM] unsigned int 
  7064 ;;  divisor         2   16[COMRAM] unsigned int 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  quotient        2   18[COMRAM] unsigned int 
  7067 ;;  counter         1   20[COMRAM] unsigned char 
  7068 ;; Return value:  Size  Location     Type
  7069 ;;                  2   14[COMRAM] unsigned int 
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7081 ;;Total ram usage:        7 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; Hardware stack levels required when called: 6
  7084 ;; This function calls:
  7085 ;;		Nothing
  7086 ;; This function is called by:
  7087 ;;		_setMotorPWM
  7088 ;; This function uses a non-reentrant model
  7089 ;;
  7090                           
  7091                           	psect	text29
  7092   0035C2                     __ptext29:
  7093                           	callstack 0
  7094   0035C2                     ___lwdiv:
  7095                           	callstack 22
  7096   0035C2  0E00               	movlw	0
  7097   0035C4  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7098   0035C6  0E00               	movlw	0
  7099   0035C8  6E13               	movwf	___lwdiv@quotient^0,c
  7100   0035CA  5011               	movf	___lwdiv@divisor^0,w,c
  7101   0035CC  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7102   0035CE  B4D8               	btfsc	status,2,c
  7103   0035D0  EFEC  F01A         	goto	u1651
  7104   0035D4  EFEE  F01A         	goto	u1650
  7105   0035D8                     u1651:
  7106   0035D8  EF16  F01B         	goto	l1201
  7107   0035DC                     u1650:
  7108   0035DC  0E01               	movlw	1
  7109   0035DE  6E15               	movwf	___lwdiv@counter^0,c
  7110   0035E0  EFF6  F01A         	goto	l2710
  7111   0035E4                     l2708:
  7112   0035E4  90D8               	bcf	status,0,c
  7113   0035E6  3611               	rlcf	___lwdiv@divisor^0,f,c
  7114   0035E8  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7115   0035EA  2A15               	incf	___lwdiv@counter^0,f,c
  7116   0035EC                     l2710:
  7117   0035EC  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7118   0035EE  EFFB  F01A         	goto	u1661
  7119   0035F2  EFFD  F01A         	goto	u1660
  7120   0035F6                     u1661:
  7121   0035F6  EFF2  F01A         	goto	l2708
  7122   0035FA                     u1660:
  7123   0035FA                     l2712:
  7124   0035FA  90D8               	bcf	status,0,c
  7125   0035FC  3613               	rlcf	___lwdiv@quotient^0,f,c
  7126   0035FE  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7127   003600  5011               	movf	___lwdiv@divisor^0,w,c
  7128   003602  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7129   003604  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7130   003606  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7131   003608  A0D8               	btfss	status,0,c
  7132   00360A  EF09  F01B         	goto	u1671
  7133   00360E  EF0B  F01B         	goto	u1670
  7134   003612                     u1671:
  7135   003612  EF10  F01B         	goto	l2720
  7136   003616                     u1670:
  7137   003616  5011               	movf	___lwdiv@divisor^0,w,c
  7138   003618  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7139   00361A  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7140   00361C  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7141   00361E  8013               	bsf	___lwdiv@quotient^0,0,c
  7142   003620                     l2720:
  7143   003620  90D8               	bcf	status,0,c
  7144   003622  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7145   003624  3211               	rrcf	___lwdiv@divisor^0,f,c
  7146   003626  2E15               	decfsz	___lwdiv@counter^0,f,c
  7147   003628  EFFD  F01A         	goto	l2712
  7148   00362C                     l1201:
  7149   00362C  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7150   003630  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7151   003634  0012               	return		;funcret
  7152   003636                     __end_of___lwdiv:
  7153                           	callstack 0
  7154                           
  7155 ;; *************** function ___flge *****************
  7156 ;; Defined at:
  7157 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  ff1             4    8[COMRAM] unsigned int 
  7160 ;;  ff2             4   12[COMRAM] unsigned int 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;		None
  7163 ;; Return value:  Size  Location     Type
  7164 ;;		None               void
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7172 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7176 ;;Total ram usage:       12 bytes
  7177 ;; Hardware stack levels used: 1
  7178 ;; Hardware stack levels required when called: 6
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_motor_response
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           	psect	text30
  7187   0030AC                     __ptext30:
  7188                           	callstack 0
  7189   0030AC                     ___flge:
  7190                           	callstack 23
  7191   0030AC  0E00               	movlw	0
  7192   0030AE  1409               	andwf	___flge@ff1^0,w,c
  7193   0030B0  6E11               	movwf	??___flge^0,c
  7194   0030B2  0E00               	movlw	0
  7195   0030B4  140A               	andwf	(___flge@ff1+1)^0,w,c
  7196   0030B6  6E12               	movwf	(??___flge+1)^0,c
  7197   0030B8  0E80               	movlw	128
  7198   0030BA  140B               	andwf	(___flge@ff1+2)^0,w,c
  7199   0030BC  6E13               	movwf	(??___flge+2)^0,c
  7200   0030BE  0E7F               	movlw	127
  7201   0030C0  140C               	andwf	(___flge@ff1+3)^0,w,c
  7202   0030C2  6E14               	movwf	(??___flge+3)^0,c
  7203   0030C4  5011               	movf	??___flge^0,w,c
  7204   0030C6  1012               	iorwf	(??___flge+1)^0,w,c
  7205   0030C8  1013               	iorwf	(??___flge+2)^0,w,c
  7206   0030CA  1014               	iorwf	(??___flge+3)^0,w,c
  7207   0030CC  A4D8               	btfss	status,2,c
  7208   0030CE  EF6B  F018         	goto	u2521
  7209   0030D2  EF6D  F018         	goto	u2520
  7210   0030D6                     u2521:
  7211   0030D6  EF75  F018         	goto	l3352
  7212   0030DA                     u2520:
  7213   0030DA  0E00               	movlw	0
  7214   0030DC  6E09               	movwf	___flge@ff1^0,c
  7215   0030DE  0E00               	movlw	0
  7216   0030E0  6E0A               	movwf	(___flge@ff1+1)^0,c
  7217   0030E2  0E00               	movlw	0
  7218   0030E4  6E0B               	movwf	(___flge@ff1+2)^0,c
  7219   0030E6  0E00               	movlw	0
  7220   0030E8  6E0C               	movwf	(___flge@ff1+3)^0,c
  7221   0030EA                     l3352:
  7222   0030EA  0E00               	movlw	0
  7223   0030EC  140D               	andwf	___flge@ff2^0,w,c
  7224   0030EE  6E11               	movwf	??___flge^0,c
  7225   0030F0  0E00               	movlw	0
  7226   0030F2  140E               	andwf	(___flge@ff2+1)^0,w,c
  7227   0030F4  6E12               	movwf	(??___flge+1)^0,c
  7228   0030F6  0E80               	movlw	128
  7229   0030F8  140F               	andwf	(___flge@ff2+2)^0,w,c
  7230   0030FA  6E13               	movwf	(??___flge+2)^0,c
  7231   0030FC  0E7F               	movlw	127
  7232   0030FE  1410               	andwf	(___flge@ff2+3)^0,w,c
  7233   003100  6E14               	movwf	(??___flge+3)^0,c
  7234   003102  5011               	movf	??___flge^0,w,c
  7235   003104  1012               	iorwf	(??___flge+1)^0,w,c
  7236   003106  1013               	iorwf	(??___flge+2)^0,w,c
  7237   003108  1014               	iorwf	(??___flge+3)^0,w,c
  7238   00310A  A4D8               	btfss	status,2,c
  7239   00310C  EF8A  F018         	goto	u2531
  7240   003110  EF8C  F018         	goto	u2530
  7241   003114                     u2531:
  7242   003114  EF94  F018         	goto	l3356
  7243   003118                     u2530:
  7244   003118  0E00               	movlw	0
  7245   00311A  6E0D               	movwf	___flge@ff2^0,c
  7246   00311C  0E00               	movlw	0
  7247   00311E  6E0E               	movwf	(___flge@ff2+1)^0,c
  7248   003120  0E00               	movlw	0
  7249   003122  6E0F               	movwf	(___flge@ff2+2)^0,c
  7250   003124  0E00               	movlw	0
  7251   003126  6E10               	movwf	(___flge@ff2+3)^0,c
  7252   003128                     l3356:
  7253   003128  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  7254   00312A  EF99  F018         	goto	u2541
  7255   00312E  EF9B  F018         	goto	u2540
  7256   003132                     u2541:
  7257   003132  EFA4  F018         	goto	l3360
  7258   003136                     u2540:
  7259   003136  6C09               	negf	___flge@ff1^0,c
  7260   003138  1E0A               	comf	(___flge@ff1+1)^0,f,c
  7261   00313A  B0D8               	btfsc	status,0,c
  7262   00313C  2A0A               	incf	(___flge@ff1+1)^0,f,c
  7263   00313E  1E0B               	comf	(___flge@ff1+2)^0,f,c
  7264   003140  B0D8               	btfsc	status,0,c
  7265   003142  2A0B               	incf	(___flge@ff1+2)^0,f,c
  7266   003144  0E80               	movlw	128
  7267   003146  560C               	subfwb	(___flge@ff1+3)^0,f,c
  7268   003148                     l3360:
  7269   003148  AE10               	btfss	(___flge@ff2+3)^0,7,c
  7270   00314A  EFA9  F018         	goto	u2551
  7271   00314E  EFAB  F018         	goto	u2550
  7272   003152                     u2551:
  7273   003152  EFB4  F018         	goto	l975
  7274   003156                     u2550:
  7275   003156  6C0D               	negf	___flge@ff2^0,c
  7276   003158  1E0E               	comf	(___flge@ff2+1)^0,f,c
  7277   00315A  B0D8               	btfsc	status,0,c
  7278   00315C  2A0E               	incf	(___flge@ff2+1)^0,f,c
  7279   00315E  1E0F               	comf	(___flge@ff2+2)^0,f,c
  7280   003160  B0D8               	btfsc	status,0,c
  7281   003162  2A0F               	incf	(___flge@ff2+2)^0,f,c
  7282   003164  0E80               	movlw	128
  7283   003166  5610               	subfwb	(___flge@ff2+3)^0,f,c
  7284   003168                     l975:
  7285   003168  0E00               	movlw	0
  7286   00316A  1A09               	xorwf	___flge@ff1^0,f,c
  7287   00316C  0E00               	movlw	0
  7288   00316E  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  7289   003170  0E00               	movlw	0
  7290   003172  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  7291   003174  0E80               	movlw	128
  7292   003176  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  7293   003178  0E00               	movlw	0
  7294   00317A  1A0D               	xorwf	___flge@ff2^0,f,c
  7295   00317C  0E00               	movlw	0
  7296   00317E  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  7297   003180  0E00               	movlw	0
  7298   003182  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  7299   003184  0E80               	movlw	128
  7300   003186  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  7301   003188  500D               	movf	___flge@ff2^0,w,c
  7302   00318A  5C09               	subwf	___flge@ff1^0,w,c
  7303   00318C  500E               	movf	(___flge@ff2+1)^0,w,c
  7304   00318E  580A               	subwfb	(___flge@ff1+1)^0,w,c
  7305   003190  500F               	movf	(___flge@ff2+2)^0,w,c
  7306   003192  580B               	subwfb	(___flge@ff1+2)^0,w,c
  7307   003194  5010               	movf	(___flge@ff2+3)^0,w,c
  7308   003196  580C               	subwfb	(___flge@ff1+3)^0,w,c
  7309   003198  B0D8               	btfsc	status,0,c
  7310   00319A  EFD1  F018         	goto	u2561
  7311   00319E  EFD3  F018         	goto	u2560
  7312   0031A2                     u2561:
  7313   0031A2  EFD6  F018         	goto	l3366
  7314   0031A6                     u2560:
  7315   0031A6  90D8               	bcf	status,0,c
  7316   0031A8  EFD7  F018         	goto	l980
  7317   0031AC                     l3366:
  7318   0031AC  80D8               	bsf	status,0,c
  7319   0031AE                     l980:
  7320   0031AE  0012               	return		;funcret
  7321   0031B0                     __end_of___flge:
  7322                           	callstack 0
  7323                           
  7324 ;; *************** function _motorTRIS *****************
  7325 ;; Defined at:
  7326 ;;		line 287 in file "dc_motor.c"
  7327 ;; Parameters:    Size  Location     Type
  7328 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7329 ;;		 -> main@mL(9), 
  7330 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  7331 ;;		 -> main@mR(9), 
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		None
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7343 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;Total ram usage:        4 bytes
  7348 ;; Hardware stack levels used: 1
  7349 ;; Hardware stack levels required when called: 6
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text31
  7358   003C72                     __ptext31:
  7359                           	callstack 0
  7360   003C72                     _motorTRIS:
  7361                           	callstack 24
  7362   003C72                     
  7363                           ;dc_motor.c: 288:     TRISEbits.TRISE2 = 0;
  7364   003C72  9485               	bcf	133,2,c	;volatile
  7365                           
  7366                           ;dc_motor.c: 289:     TRISEbits.TRISE4 = 0;
  7367   003C74  9885               	bcf	133,4,c	;volatile
  7368                           
  7369                           ;dc_motor.c: 290:     TRISCbits.TRISC7 = 0;
  7370   003C76  9E83               	bcf	131,7,c	;volatile
  7371                           
  7372                           ;dc_motor.c: 291:     TRISGbits.TRISG6 = 0;
  7373   003C78  9C87               	bcf	135,6,c	;volatile
  7374   003C7A  0012               	return		;funcret
  7375   003C7C                     __end_of_motorTRIS:
  7376                           	callstack 0
  7377                           
  7378 ;; *************** function _motorRinit *****************
  7379 ;; Defined at:
  7380 ;;		line 98 in file "dc_motor.c"
  7381 ;; Parameters:    Size  Location     Type
  7382 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  7383 ;;		 -> main@mR(9), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1    wreg      void 
  7388 ;; Registers used:
  7389 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/0
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7395 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;Total ram usage:        2 bytes
  7400 ;; Hardware stack levels used: 1
  7401 ;; Hardware stack levels required when called: 6
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_main
  7406 ;; This function uses a non-reentrant model
  7407 ;;
  7408                           
  7409                           	psect	text32
  7410   00371A                     __ptext32:
  7411                           	callstack 0
  7412   00371A                     _motorRinit:
  7413                           	callstack 24
  7414   00371A                     
  7415                           ;dc_motor.c: 98: void motorRinit(DC_motor *mR);dc_motor.c: 99: {;dc_motor.c: 100:     mR
      +                          ->power = 50;
  7416   00371A  C009  FFD9         	movff	motorRinit@mR,fsr2l
  7417   00371E  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  7418   003722  0E32               	movlw	50
  7419   003724  6EDF               	movwf	indf2,c
  7420   003726                     
  7421                           ;dc_motor.c: 101:     mR->direction = 1;
  7422   003726  EE20 F001          	lfsr	2,1
  7423   00372A  5009               	movf	motorRinit@mR^0,w,c
  7424   00372C  26D9               	addwf	fsr2l,f,c
  7425   00372E  500A               	movf	(motorRinit@mR+1)^0,w,c
  7426   003730  22DA               	addwfc	fsr2h,f,c
  7427   003732  0E01               	movlw	1
  7428   003734  6EDF               	movwf	indf2,c
  7429   003736                     
  7430                           ;dc_motor.c: 102:     mR->brakemode = 1;
  7431   003736  EE20 F002          	lfsr	2,2
  7432   00373A  5009               	movf	motorRinit@mR^0,w,c
  7433   00373C  26D9               	addwf	fsr2l,f,c
  7434   00373E  500A               	movf	(motorRinit@mR+1)^0,w,c
  7435   003740  22DA               	addwfc	fsr2h,f,c
  7436   003742  0E01               	movlw	1
  7437   003744  6EDF               	movwf	indf2,c
  7438   003746                     
  7439                           ;dc_motor.c: 103:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  7440   003746  EE20 F005          	lfsr	2,5
  7441   00374A  5009               	movf	motorRinit@mR^0,w,c
  7442   00374C  26D9               	addwf	fsr2l,f,c
  7443   00374E  500A               	movf	(motorRinit@mR+1)^0,w,c
  7444   003750  22DA               	addwfc	fsr2h,f,c
  7445   003752  0E25               	movlw	37
  7446   003754  6EDE               	movwf	postinc2,c
  7447   003756  0E0F               	movlw	15
  7448   003758  6EDD               	movwf	postdec2,c
  7449   00375A                     
  7450                           ;dc_motor.c: 104:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  7451   00375A  EE20 F007          	lfsr	2,7
  7452   00375E  5009               	movf	motorRinit@mR^0,w,c
  7453   003760  26D9               	addwf	fsr2l,f,c
  7454   003762  500A               	movf	(motorRinit@mR+1)^0,w,c
  7455   003764  22DA               	addwfc	fsr2h,f,c
  7456   003766  0E21               	movlw	33
  7457   003768  6EDE               	movwf	postinc2,c
  7458   00376A  0E0F               	movlw	15
  7459   00376C  6EDD               	movwf	postdec2,c
  7460   00376E                     
  7461                           ;dc_motor.c: 105:     mR->PWMperiod = 200;
  7462   00376E  EE20 F003          	lfsr	2,3
  7463   003772  5009               	movf	motorRinit@mR^0,w,c
  7464   003774  26D9               	addwf	fsr2l,f,c
  7465   003776  500A               	movf	(motorRinit@mR+1)^0,w,c
  7466   003778  22DA               	addwfc	fsr2h,f,c
  7467   00377A  0EC8               	movlw	200
  7468   00377C  6EDE               	movwf	postinc2,c
  7469   00377E  0E00               	movlw	0
  7470   003780  6EDD               	movwf	postdec2,c
  7471   003782  0012               	return		;funcret
  7472   003784                     __end_of_motorRinit:
  7473                           	callstack 0
  7474                           
  7475 ;; *************** function _motorLinit *****************
  7476 ;; Defined at:
  7477 ;;		line 85 in file "dc_motor.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7480 ;;		 -> main@mL(9), 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;		None
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  1    wreg      void 
  7485 ;; Registers used:
  7486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7495 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7496 ;;Total ram usage:        2 bytes
  7497 ;; Hardware stack levels used: 1
  7498 ;; Hardware stack levels required when called: 6
  7499 ;; This function calls:
  7500 ;;		Nothing
  7501 ;; This function is called by:
  7502 ;;		_main
  7503 ;; This function uses a non-reentrant model
  7504 ;;
  7505                           
  7506                           	psect	text33
  7507   003784                     __ptext33:
  7508                           	callstack 0
  7509   003784                     _motorLinit:
  7510                           	callstack 24
  7511   003784                     
  7512                           ;dc_motor.c: 85: void motorLinit(DC_motor *mL);dc_motor.c: 86: {;dc_motor.c: 87:     mL-
      +                          >power = 50;
  7513   003784  C009  FFD9         	movff	motorLinit@mL,fsr2l
  7514   003788  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  7515   00378C  0E32               	movlw	50
  7516   00378E  6EDF               	movwf	indf2,c
  7517   003790                     
  7518                           ;dc_motor.c: 88:     mL->direction = 1;
  7519   003790  EE20 F001          	lfsr	2,1
  7520   003794  5009               	movf	motorLinit@mL^0,w,c
  7521   003796  26D9               	addwf	fsr2l,f,c
  7522   003798  500A               	movf	(motorLinit@mL+1)^0,w,c
  7523   00379A  22DA               	addwfc	fsr2h,f,c
  7524   00379C  0E01               	movlw	1
  7525   00379E  6EDF               	movwf	indf2,c
  7526   0037A0                     
  7527                           ;dc_motor.c: 89:     mL->brakemode = 1;
  7528   0037A0  EE20 F002          	lfsr	2,2
  7529   0037A4  5009               	movf	motorLinit@mL^0,w,c
  7530   0037A6  26D9               	addwf	fsr2l,f,c
  7531   0037A8  500A               	movf	(motorLinit@mL+1)^0,w,c
  7532   0037AA  22DA               	addwfc	fsr2h,f,c
  7533   0037AC  0E01               	movlw	1
  7534   0037AE  6EDF               	movwf	indf2,c
  7535   0037B0                     
  7536                           ;dc_motor.c: 90:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  7537   0037B0  EE20 F005          	lfsr	2,5
  7538   0037B4  5009               	movf	motorLinit@mL^0,w,c
  7539   0037B6  26D9               	addwf	fsr2l,f,c
  7540   0037B8  500A               	movf	(motorLinit@mL+1)^0,w,c
  7541   0037BA  22DA               	addwfc	fsr2h,f,c
  7542   0037BC  0EAA               	movlw	170
  7543   0037BE  6EDE               	movwf	postinc2,c
  7544   0037C0  0E0F               	movlw	15
  7545   0037C2  6EDD               	movwf	postdec2,c
  7546   0037C4                     
  7547                           ;dc_motor.c: 91:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  7548   0037C4  EE20 F007          	lfsr	2,7
  7549   0037C8  5009               	movf	motorLinit@mL^0,w,c
  7550   0037CA  26D9               	addwf	fsr2l,f,c
  7551   0037CC  500A               	movf	(motorLinit@mL+1)^0,w,c
  7552   0037CE  22DA               	addwfc	fsr2h,f,c
  7553   0037D0  0EA6               	movlw	166
  7554   0037D2  6EDE               	movwf	postinc2,c
  7555   0037D4  0E0F               	movlw	15
  7556   0037D6  6EDD               	movwf	postdec2,c
  7557   0037D8                     
  7558                           ;dc_motor.c: 92:     mL->PWMperiod = 200;
  7559   0037D8  EE20 F003          	lfsr	2,3
  7560   0037DC  5009               	movf	motorLinit@mL^0,w,c
  7561   0037DE  26D9               	addwf	fsr2l,f,c
  7562   0037E0  500A               	movf	(motorLinit@mL+1)^0,w,c
  7563   0037E2  22DA               	addwfc	fsr2h,f,c
  7564   0037E4  0EC8               	movlw	200
  7565   0037E6  6EDE               	movwf	postinc2,c
  7566   0037E8  0E00               	movlw	0
  7567   0037EA  6EDD               	movwf	postdec2,c
  7568   0037EC  0012               	return		;funcret
  7569   0037EE                     __end_of_motorLinit:
  7570                           	callstack 0
  7571                           
  7572 ;; *************** function _initDCmotorsPWM *****************
  7573 ;; Defined at:
  7574 ;;		line 7 in file "dc_motor.c"
  7575 ;; Parameters:    Size  Location     Type
  7576 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  7577 ;; Auto vars:     Size  Location     Type
  7578 ;;		None
  7579 ;; Return value:  Size  Location     Type
  7580 ;;                  1    wreg      void 
  7581 ;; Registers used:
  7582 ;;		wreg, status,2
  7583 ;; Tracked objects:
  7584 ;;		On entry : 0/0
  7585 ;;		On exit  : 0/0
  7586 ;;		Unchanged: 0/0
  7587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7592 ;;Total ram usage:        2 bytes
  7593 ;; Hardware stack levels used: 1
  7594 ;; Hardware stack levels required when called: 6
  7595 ;; This function calls:
  7596 ;;		Nothing
  7597 ;; This function is called by:
  7598 ;;		_main
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           	psect	text34
  7603   003542                     __ptext34:
  7604                           	callstack 0
  7605   003542                     _initDCmotorsPWM:
  7606                           	callstack 24
  7607   003542                     
  7608                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7609   003542  0E05               	movlw	5
  7610   003544  010E               	movlb	14	; () banked
  7611   003546  6F74               	movwf	116,b	;volatile
  7612                           
  7613                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7614   003548  0E06               	movlw	6
  7615   00354A  6F76               	movwf	118,b	;volatile
  7616                           
  7617                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7618   00354C  0E07               	movlw	7
  7619   00354E  6F69               	movwf	105,b	;volatile
  7620                           
  7621                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7622   003550  0E08               	movlw	8
  7623   003552  6F88               	movwf	136,b	;volatile
  7624                           
  7625                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  7626   003554  50BD               	movf	189,w,c	;volatile
  7627   003556  0B8F               	andlw	-113
  7628   003558  0930               	iorlw	48
  7629   00355A  6EBD               	movwf	189,c	;volatile
  7630                           
  7631                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  7632   00355C  0EE0               	movlw	-32
  7633   00355E  16BE               	andwf	190,f,c	;volatile
  7634                           
  7635                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  7636   003560  50BF               	movf	191,w,c	;volatile
  7637   003562  0BF0               	andlw	-16
  7638   003564  0901               	iorlw	1
  7639   003566  6EBF               	movwf	191,c	;volatile
  7640                           
  7641                           ;dc_motor.c: 23:     T2PR=200;
  7642   003568  0EC8               	movlw	200
  7643   00356A  6EBC               	movwf	188,c	;volatile
  7644   00356C                     
  7645                           ; BSR set to: 14
  7646                           ;dc_motor.c: 24:     T2CONbits.ON=1;
  7647   00356C  8EBD               	bsf	189,7,c	;volatile
  7648                           
  7649                           ;dc_motor.c: 28:     CCPR1H=0;
  7650   00356E  0E00               	movlw	0
  7651   003570  6EAA               	movwf	170,c	;volatile
  7652                           
  7653                           ;dc_motor.c: 29:     CCPR2H=0;
  7654   003572  0E00               	movlw	0
  7655   003574  6EA6               	movwf	166,c	;volatile
  7656                           
  7657                           ;dc_motor.c: 30:     CCPR3H=0;
  7658   003576  0E00               	movlw	0
  7659   003578  010F               	movlb	15	; () banked
  7660   00357A  6F25               	movwf	37,b	;volatile
  7661                           
  7662                           ;dc_motor.c: 31:     CCPR4H=0;
  7663   00357C  0E00               	movlw	0
  7664   00357E  6F21               	movwf	33,b	;volatile
  7665                           
  7666                           ;dc_motor.c: 34:     CCPTMRS0bits.C1TSEL=0;
  7667   003580  0EFC               	movlw	-4
  7668   003582  16AD               	andwf	173,f,c	;volatile
  7669                           
  7670                           ;dc_motor.c: 35:     CCPTMRS0bits.C2TSEL=0;
  7671   003584  0EF3               	movlw	-13
  7672   003586  16AD               	andwf	173,f,c	;volatile
  7673                           
  7674                           ;dc_motor.c: 36:     CCPTMRS0bits.C3TSEL=0;
  7675   003588  0ECF               	movlw	-49
  7676   00358A  16AD               	andwf	173,f,c	;volatile
  7677                           
  7678                           ;dc_motor.c: 37:     CCPTMRS0bits.C4TSEL=0;
  7679   00358C  0E3F               	movlw	-193
  7680   00358E  16AD               	andwf	173,f,c	;volatile
  7681   003590                     
  7682                           ; BSR set to: 15
  7683                           ;dc_motor.c: 40:     CCP1CONbits.FMT=1;
  7684   003590  88AB               	bsf	171,4,c	;volatile
  7685                           
  7686                           ;dc_motor.c: 41:     CCP1CONbits.CCP1MODE=0b1100;
  7687   003592  50AB               	movf	171,w,c	;volatile
  7688   003594  0BF0               	andlw	-16
  7689   003596  090C               	iorlw	12
  7690   003598  6EAB               	movwf	171,c	;volatile
  7691   00359A                     
  7692                           ; BSR set to: 15
  7693                           ;dc_motor.c: 42:     CCP1CONbits.EN=1;
  7694   00359A  8EAB               	bsf	171,7,c	;volatile
  7695   00359C                     
  7696                           ; BSR set to: 15
  7697                           ;dc_motor.c: 44:     CCP2CONbits.FMT=1;
  7698   00359C  88A7               	bsf	167,4,c	;volatile
  7699                           
  7700                           ;dc_motor.c: 45:     CCP2CONbits.CCP2MODE=0b1100;
  7701   00359E  50A7               	movf	167,w,c	;volatile
  7702   0035A0  0BF0               	andlw	-16
  7703   0035A2  090C               	iorlw	12
  7704   0035A4  6EA7               	movwf	167,c	;volatile
  7705   0035A6                     
  7706                           ; BSR set to: 15
  7707                           ;dc_motor.c: 46:     CCP2CONbits.EN=1;
  7708   0035A6  8EA7               	bsf	167,7,c	;volatile
  7709   0035A8                     
  7710                           ; BSR set to: 15
  7711                           ;dc_motor.c: 48:     CCP3CONbits.FMT=1;
  7712   0035A8  8926               	bsf	38,4,b	;volatile
  7713                           
  7714                           ;dc_motor.c: 49:     CCP3CONbits.CCP3MODE=0b1100;
  7715   0035AA  5126               	movf	38,w,b	;volatile
  7716   0035AC  0BF0               	andlw	-16
  7717   0035AE  090C               	iorlw	12
  7718   0035B0  6F26               	movwf	38,b	;volatile
  7719   0035B2                     
  7720                           ; BSR set to: 15
  7721                           ;dc_motor.c: 50:     CCP3CONbits.EN=1;
  7722   0035B2  8F26               	bsf	38,7,b	;volatile
  7723   0035B4                     
  7724                           ; BSR set to: 15
  7725                           ;dc_motor.c: 52:     CCP4CONbits.FMT=1;
  7726   0035B4  8922               	bsf	34,4,b	;volatile
  7727                           
  7728                           ;dc_motor.c: 53:     CCP4CONbits.CCP4MODE=0b1100;
  7729   0035B6  5122               	movf	34,w,b	;volatile
  7730   0035B8  0BF0               	andlw	-16
  7731   0035BA  090C               	iorlw	12
  7732   0035BC  6F22               	movwf	34,b	;volatile
  7733   0035BE                     
  7734                           ; BSR set to: 15
  7735                           ;dc_motor.c: 54:     CCP4CONbits.EN=1;
  7736   0035BE  8F22               	bsf	34,7,b	;volatile
  7737   0035C0                     
  7738                           ; BSR set to: 15
  7739   0035C0  0012               	return		;funcret
  7740   0035C2                     __end_of_initDCmotorsPWM:
  7741                           	callstack 0
  7742                           
  7743 ;; *************** function _color_click_init *****************
  7744 ;; Defined at:
  7745 ;;		line 12 in file "color.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7763 ;;Total ram usage:        1 bytes
  7764 ;; Hardware stack levels used: 1
  7765 ;; Hardware stack levels required when called: 9
  7766 ;; This function calls:
  7767 ;;		_I2C_2_Master_Init
  7768 ;;		_color_writetoaddr
  7769 ;; This function is called by:
  7770 ;;		_main
  7771 ;; This function uses a non-reentrant model
  7772 ;;
  7773                           
  7774                           	psect	text35
  7775   003A14                     __ptext35:
  7776                           	callstack 0
  7777   003A14                     _color_click_init:
  7778                           	callstack 21
  7779   003A14                     
  7780                           ;color.c: 14:     I2C_2_Master_Init();
  7781   003A14  EC56  F01D         	call	_I2C_2_Master_Init	;wreg free
  7782   003A18                     
  7783                           ;color.c: 17:     color_writetoaddr(0x00, 0x01);
  7784   003A18  0E01               	movlw	1
  7785   003A1A  6E0B               	movwf	color_writetoaddr@value^0,c
  7786   003A1C  0E00               	movlw	0
  7787   003A1E  ECD0  F01D         	call	_color_writetoaddr
  7788   003A22                     
  7789                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7790   003A22  0E3F               	movlw	63
  7791   003A24  6E0D               	movwf	??_color_click_init^0,c
  7792   003A26  0E55               	movlw	85
  7793   003A28                     u3737:
  7794   003A28  2EE8               	decfsz	wreg,f,c
  7795   003A2A  D7FE               	bra	u3737
  7796   003A2C  2E0D               	decfsz	??_color_click_init^0,f,c
  7797   003A2E  D7FC               	bra	u3737
  7798   003A30  F000               	nop	
  7799   003A32                     
  7800                           ;color.c: 21:     color_writetoaddr(0x00, 0x03);
  7801   003A32  0E03               	movlw	3
  7802   003A34  6E0B               	movwf	color_writetoaddr@value^0,c
  7803   003A36  0E00               	movlw	0
  7804   003A38  ECD0  F01D         	call	_color_writetoaddr
  7805   003A3C                     
  7806                           ;color.c: 24:     color_writetoaddr(0x01, 0xD5);
  7807   003A3C  0ED5               	movlw	213
  7808   003A3E  6E0B               	movwf	color_writetoaddr@value^0,c
  7809   003A40  0E01               	movlw	1
  7810   003A42  ECD0  F01D         	call	_color_writetoaddr
  7811   003A46  0012               	return		;funcret
  7812   003A48                     __end_of_color_click_init:
  7813                           	callstack 0
  7814                           
  7815 ;; *************** function _I2C_2_Master_Init *****************
  7816 ;; Defined at:
  7817 ;;		line 4 in file "i2c.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7835 ;;Total ram usage:        0 bytes
  7836 ;; Hardware stack levels used: 1
  7837 ;; Hardware stack levels required when called: 6
  7838 ;; This function calls:
  7839 ;;		Nothing
  7840 ;; This function is called by:
  7841 ;;		_color_click_init
  7842 ;; This function uses a non-reentrant model
  7843 ;;
  7844                           
  7845                           	psect	text36
  7846   003AAC                     __ptext36:
  7847                           	callstack 0
  7848   003AAC                     _I2C_2_Master_Init:
  7849                           	callstack 23
  7850   003AAC                     
  7851                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7852   003AAC  010E               	movlb	14	; () banked
  7853   003AAE  51D9               	movf	217,w,b	;volatile
  7854   003AB0  0BF0               	andlw	-16
  7855   003AB2  0908               	iorlw	8
  7856   003AB4  6FD9               	movwf	217,b	;volatile
  7857   003AB6                     
  7858                           ; BSR set to: 14
  7859                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7860   003AB6  8BD9               	bsf	217,5,b	;volatile
  7861                           
  7862                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7863   003AB8  0E9F               	movlw	159
  7864   003ABA  6FD6               	movwf	214,b	;volatile
  7865   003ABC                     
  7866                           ; BSR set to: 14
  7867                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7868   003ABC  8A84               	bsf	132,5,c	;volatile
  7869   003ABE                     
  7870                           ; BSR set to: 14
  7871                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7872   003ABE  8C84               	bsf	132,6,c	;volatile
  7873   003AC0                     
  7874                           ; BSR set to: 14
  7875                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7876   003AC0  9BA7               	bcf	167,5,b	;volatile
  7877   003AC2                     
  7878                           ; BSR set to: 14
  7879                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7880   003AC2  9DA7               	bcf	167,6,b	;volatile
  7881                           
  7882                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7883   003AC4  0E1D               	movlw	29
  7884   003AC6  6F1D               	movwf	29,b	;volatile
  7885                           
  7886                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7887   003AC8  0E1E               	movlw	30
  7888   003ACA  6F1C               	movwf	28,b	;volatile
  7889                           
  7890                           ;i2c.c: 18:   RD5PPS=0x1C;
  7891   003ACC  0E1C               	movlw	28
  7892   003ACE  6F6F               	movwf	111,b	;volatile
  7893                           
  7894                           ;i2c.c: 19:   RD6PPS=0x1B;
  7895   003AD0  0E1B               	movlw	27
  7896   003AD2  6F70               	movwf	112,b	;volatile
  7897   003AD4                     
  7898                           ; BSR set to: 14
  7899   003AD4  0012               	return		;funcret
  7900   003AD6                     __end_of_I2C_2_Master_Init:
  7901                           	callstack 0
  7902                           
  7903 ;; *************** function _calibSwitchInit *****************
  7904 ;; Defined at:
  7905 ;;		line 383 in file "color.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;		None
  7908 ;; Auto vars:     Size  Location     Type
  7909 ;;		None
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  1    wreg      void 
  7912 ;; Registers used:
  7913 ;;		None
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7923 ;;Total ram usage:        0 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; Hardware stack levels required when called: 6
  7926 ;; This function calls:
  7927 ;;		Nothing
  7928 ;; This function is called by:
  7929 ;;		_main
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text37
  7934   003CA4                     __ptext37:
  7935                           	callstack 0
  7936   003CA4                     _calibSwitchInit:
  7937                           	callstack 24
  7938   003CA4                     
  7939                           ;color.c: 384:     TRISFbits.TRISF2 = 1;
  7940   003CA4  8486               	bsf	134,2,c	;volatile
  7941                           
  7942                           ;color.c: 385:     ANSELFbits.ANSELF2 = 0;
  7943   003CA6  010E               	movlb	14	; () banked
  7944   003CA8  95B4               	bcf	180,2,b	;volatile
  7945   003CAA                     
  7946                           ; BSR set to: 14
  7947   003CAA  0012               	return		;funcret
  7948   003CAC                     __end_of_calibSwitchInit:
  7949                           	callstack 0
  7950                           
  7951 ;; *************** function _Interrupts_init *****************
  7952 ;; Defined at:
  7953 ;;		line 10 in file "interrupts.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;		None
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;		None
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  1    wreg      void 
  7960 ;; Registers used:
  7961 ;;		None
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;Total ram usage:        0 bytes
  7972 ;; Hardware stack levels used: 1
  7973 ;; Hardware stack levels required when called: 6
  7974 ;; This function calls:
  7975 ;;		Nothing
  7976 ;; This function is called by:
  7977 ;;		_main
  7978 ;; This function uses a non-reentrant model
  7979 ;;
  7980                           
  7981                           	psect	text38
  7982   003C14                     __ptext38:
  7983                           	callstack 0
  7984   003C14                     _Interrupts_init:
  7985                           	callstack 24
  7986   003C14                     
  7987                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7988   003C14  8082               	bsf	130,0,c	;volatile
  7989                           
  7990                           ;interrupts.c: 16:     ANSELBbits.ANSELB0=0;
  7991   003C16  010E               	movlb	14	; () banked
  7992   003C18  919A               	bcf	154,0,b	;volatile
  7993                           
  7994                           ;interrupts.c: 17:     PIR0bits.INT0IF = 0;
  7995   003C1A  9133               	bcf	51,0,b	;volatile
  7996                           
  7997                           ;interrupts.c: 18:     PIE0bits.INT0IE = 1;
  7998   003C1C  8129               	bsf	41,0,b	;volatile
  7999                           
  8000                           ;interrupts.c: 19:     IPR0bits.INT0IP = 1;
  8001   003C1E  811F               	bsf	31,0,b	;volatile
  8002                           
  8003                           ;interrupts.c: 20:     INTCONbits.INT0EDG=0;
  8004   003C20  90F2               	bcf	242,0,c	;volatile
  8005                           
  8006                           ;interrupts.c: 21:     INTCONbits.IPEN=1;
  8007   003C22  8AF2               	bsf	242,5,c	;volatile
  8008                           
  8009                           ;interrupts.c: 22:     INTCONbits.PEIE=1;
  8010   003C24  8CF2               	bsf	242,6,c	;volatile
  8011                           
  8012                           ;interrupts.c: 23:     INTCONbits.GIE=1;
  8013   003C26  8EF2               	bsf	242,7,c	;volatile
  8014   003C28                     
  8015                           ; BSR set to: 14
  8016   003C28  0012               	return		;funcret
  8017   003C2A                     __end_of_Interrupts_init:
  8018                           	callstack 0
  8019                           
  8020 ;; *************** function _Color_Interrupts_threshold *****************
  8021 ;; Defined at:
  8022 ;;		line 35 in file "interrupts.c"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;  upperThresho    2   12[COMRAM] unsigned int 
  8025 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  8026 ;; Auto vars:     Size  Location     Type
  8027 ;;		None
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      void 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8037 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8041 ;;Total ram usage:        4 bytes
  8042 ;; Hardware stack levels used: 1
  8043 ;; Hardware stack levels required when called: 9
  8044 ;; This function calls:
  8045 ;;		_color_writetoaddr
  8046 ;; This function is called by:
  8047 ;;		_main
  8048 ;; This function uses a non-reentrant model
  8049 ;;
  8050                           
  8051                           	psect	text39
  8052   003AD6                     __ptext39:
  8053                           	callstack 0
  8054   003AD6                     _Color_Interrupts_threshold:
  8055                           	callstack 21
  8056   003AD6                     
  8057                           ;interrupts.c: 35: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 36: {;interrupts.c: 37:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8058   003AD6  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  8059   003ADA  0E04               	movlw	4
  8060   003ADC  ECD0  F01D         	call	_color_writetoaddr
  8061                           
  8062                           ;interrupts.c: 38:     color_writetoaddr(0x05, lowerThreshold>>8);
  8063   003AE0  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8064   003AE2  6E0B               	movwf	color_writetoaddr@value^0,c
  8065   003AE4  0E05               	movlw	5
  8066   003AE6  ECD0  F01D         	call	_color_writetoaddr
  8067                           
  8068                           ;interrupts.c: 39:     color_writetoaddr(0x06, upperThreshold);
  8069   003AEA  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  8070   003AEE  0E06               	movlw	6
  8071   003AF0  ECD0  F01D         	call	_color_writetoaddr
  8072                           
  8073                           ;interrupts.c: 40:     color_writetoaddr(0x07, upperThreshold>>8);
  8074   003AF4  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8075   003AF6  6E0B               	movwf	color_writetoaddr@value^0,c
  8076   003AF8  0E07               	movlw	7
  8077   003AFA  ECD0  F01D         	call	_color_writetoaddr
  8078   003AFE  0012               	return		;funcret
  8079   003B00                     __end_of_Color_Interrupts_threshold:
  8080                           	callstack 0
  8081                           
  8082 ;; *************** function _Color_Interrupts_init *****************
  8083 ;; Defined at:
  8084 ;;		line 27 in file "interrupts.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;		None
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;		None
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  1    wreg      void 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8102 ;;Total ram usage:        1 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 9
  8105 ;; This function calls:
  8106 ;;		_color_writetoaddr
  8107 ;; This function is called by:
  8108 ;;		_main
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           	psect	text40
  8113   003BE0                     __ptext40:
  8114                           	callstack 0
  8115   003BE0                     _Color_Interrupts_init:
  8116                           	callstack 21
  8117   003BE0                     
  8118                           ;interrupts.c: 30:    color_writetoaddr(0x00, 0b00010011);
  8119   003BE0  0E13               	movlw	19
  8120   003BE2  6E0B               	movwf	color_writetoaddr@value^0,c
  8121   003BE4  0E00               	movlw	0
  8122   003BE6  ECD0  F01D         	call	_color_writetoaddr
  8123   003BEA                     
  8124                           ;interrupts.c: 31:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8125   003BEA  0ED0               	movlw	208
  8126   003BEC  6E0D               	movwf	??_Color_Interrupts_init^0,c
  8127   003BEE  0ECA               	movlw	202
  8128   003BF0                     u3747:
  8129   003BF0  2EE8               	decfsz	wreg,f,c
  8130   003BF2  D7FE               	bra	u3747
  8131   003BF4  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  8132   003BF6  D7FC               	bra	u3747
  8133   003BF8  0012               	return		;funcret
  8134   003BFA                     __end_of_Color_Interrupts_init:
  8135                           	callstack 0
  8136                           
  8137 ;; *************** function _color_writetoaddr *****************
  8138 ;; Defined at:
  8139 ;;		line 32 in file "color.c"
  8140 ;; Parameters:    Size  Location     Type
  8141 ;;  address         1    wreg     unsigned char 
  8142 ;;  value           1   10[COMRAM] unsigned char 
  8143 ;; Auto vars:     Size  Location     Type
  8144 ;;  address         1   11[COMRAM] unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  1    wreg      void 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0, cstack
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/0
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8154 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8158 ;;Total ram usage:        2 bytes
  8159 ;; Hardware stack levels used: 1
  8160 ;; Hardware stack levels required when called: 8
  8161 ;; This function calls:
  8162 ;;		_I2C_2_Master_Start
  8163 ;;		_I2C_2_Master_Stop
  8164 ;;		_I2C_2_Master_Write
  8165 ;; This function is called by:
  8166 ;;		_color_click_init
  8167 ;;		_Color_Interrupts_init
  8168 ;;		_Color_Interrupts_threshold
  8169 ;;		_persistence_register
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text41
  8174   003BA0                     __ptext41:
  8175                           	callstack 0
  8176   003BA0                     _color_writetoaddr:
  8177                           	callstack 21
  8178                           
  8179                           ;incstack = 0
  8180                           ;color_writetoaddr@address stored from wreg
  8181   003BA0  6E0C               	movwf	color_writetoaddr@address^0,c
  8182   003BA2                     
  8183                           ;color.c: 33:     I2C_2_Master_Start();
  8184   003BA2  EC43  F01E         	call	_I2C_2_Master_Start	;wreg free
  8185                           
  8186                           ;color.c: 34:     I2C_2_Master_Write(0x52 | 0x00);
  8187   003BA6  0E52               	movlw	82
  8188   003BA8  EC22  F01E         	call	_I2C_2_Master_Write
  8189                           
  8190                           ;color.c: 35:     I2C_2_Master_Write(0x80 | address);
  8191   003BAC  500C               	movf	color_writetoaddr@address^0,w,c
  8192   003BAE  0980               	iorlw	128
  8193   003BB0  EC22  F01E         	call	_I2C_2_Master_Write
  8194                           
  8195                           ;color.c: 36:     I2C_2_Master_Write(value);
  8196   003BB4  500B               	movf	color_writetoaddr@value^0,w,c
  8197   003BB6  EC22  F01E         	call	_I2C_2_Master_Write
  8198                           
  8199                           ;color.c: 37:     I2C_2_Master_Stop();
  8200   003BBA  EC3E  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8201   003BBE  0012               	return		;funcret
  8202   003BC0                     __end_of_color_writetoaddr:
  8203                           	callstack 0
  8204                           
  8205 ;; *************** function _I2C_2_Master_Write *****************
  8206 ;; Defined at:
  8207 ;;		line 45 in file "i2c.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  data_byte       1    wreg     unsigned char 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;  data_byte       1    9[COMRAM] unsigned char 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2, status,0, cstack
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;Total ram usage:        1 bytes
  8226 ;; Hardware stack levels used: 1
  8227 ;; Hardware stack levels required when called: 7
  8228 ;; This function calls:
  8229 ;;		_I2C_2_Master_Idle
  8230 ;; This function is called by:
  8231 ;;		_color_writetoaddr
  8232 ;;		_color_read_Red
  8233 ;;		_color_read_Green
  8234 ;;		_color_read_Blue
  8235 ;;		_color_read_Clear
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text42
  8240   003C44                     __ptext42:
  8241                           	callstack 0
  8242   003C44                     _I2C_2_Master_Write:
  8243                           	callstack 20
  8244                           
  8245                           ;incstack = 0
  8246                           ;I2C_2_Master_Write@data_byte stored from wreg
  8247   003C44  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8248   003C46                     
  8249                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8250   003C46  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8251   003C4A                     
  8252                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8253   003C4A  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8254   003C4E  0012               	return		;funcret
  8255   003C50                     __end_of_I2C_2_Master_Write:
  8256                           	callstack 0
  8257                           
  8258 ;; *************** function _I2C_2_Master_Stop *****************
  8259 ;; Defined at:
  8260 ;;		line 39 in file "i2c.c"
  8261 ;; Parameters:    Size  Location     Type
  8262 ;;		None
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;		None
  8265 ;; Return value:  Size  Location     Type
  8266 ;;                  1    wreg      void 
  8267 ;; Registers used:
  8268 ;;		wreg, status,2, status,0, cstack
  8269 ;; Tracked objects:
  8270 ;;		On entry : 0/0
  8271 ;;		On exit  : 0/0
  8272 ;;		Unchanged: 0/0
  8273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;Total ram usage:        0 bytes
  8279 ;; Hardware stack levels used: 1
  8280 ;; Hardware stack levels required when called: 7
  8281 ;; This function calls:
  8282 ;;		_I2C_2_Master_Idle
  8283 ;; This function is called by:
  8284 ;;		_color_writetoaddr
  8285 ;;		_color_read_Red
  8286 ;;		_color_read_Green
  8287 ;;		_color_read_Blue
  8288 ;;		_color_read_Clear
  8289 ;; This function uses a non-reentrant model
  8290 ;;
  8291                           
  8292                           	psect	text43
  8293   003C7C                     __ptext43:
  8294                           	callstack 0
  8295   003C7C                     _I2C_2_Master_Stop:
  8296                           	callstack 20
  8297   003C7C                     
  8298                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8299   003C7C  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8300   003C80                     
  8301                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8302   003C80  010E               	movlb	14	; () banked
  8303   003C82  85DA               	bsf	218,2,b	;volatile
  8304   003C84                     
  8305                           ; BSR set to: 14
  8306   003C84  0012               	return		;funcret
  8307   003C86                     __end_of_I2C_2_Master_Stop:
  8308                           	callstack 0
  8309                           
  8310 ;; *************** function _I2C_2_Master_Start *****************
  8311 ;; Defined at:
  8312 ;;		line 27 in file "i2c.c"
  8313 ;; Parameters:    Size  Location     Type
  8314 ;;		None
  8315 ;; Auto vars:     Size  Location     Type
  8316 ;;		None
  8317 ;; Return value:  Size  Location     Type
  8318 ;;                  1    wreg      void 
  8319 ;; Registers used:
  8320 ;;		wreg, status,2, status,0, cstack
  8321 ;; Tracked objects:
  8322 ;;		On entry : 0/0
  8323 ;;		On exit  : 0/0
  8324 ;;		Unchanged: 0/0
  8325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8330 ;;Total ram usage:        0 bytes
  8331 ;; Hardware stack levels used: 1
  8332 ;; Hardware stack levels required when called: 7
  8333 ;; This function calls:
  8334 ;;		_I2C_2_Master_Idle
  8335 ;; This function is called by:
  8336 ;;		_color_writetoaddr
  8337 ;;		_color_read_Red
  8338 ;;		_color_read_Green
  8339 ;;		_color_read_Blue
  8340 ;;		_color_read_Clear
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text44
  8345   003C86                     __ptext44:
  8346                           	callstack 0
  8347   003C86                     _I2C_2_Master_Start:
  8348                           	callstack 20
  8349   003C86                     
  8350                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8351   003C86  EC95  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8352   003C8A                     
  8353                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8354   003C8A  010E               	movlb	14	; () banked
  8355   003C8C  81DA               	bsf	218,0,b	;volatile
  8356   003C8E                     
  8357                           ; BSR set to: 14
  8358   003C8E  0012               	return		;funcret
  8359   003C90                     __end_of_I2C_2_Master_Start:
  8360                           	callstack 0
  8361                           
  8362 ;; *************** function _I2C_2_Master_Idle *****************
  8363 ;; Defined at:
  8364 ;;		line 22 in file "i2c.c"
  8365 ;; Parameters:    Size  Location     Type
  8366 ;;		None
  8367 ;; Auto vars:     Size  Location     Type
  8368 ;;		None
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  1    wreg      void 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8382 ;;Total ram usage:        1 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; Hardware stack levels required when called: 6
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_I2C_2_Master_Start
  8389 ;;		_I2C_2_Master_RepStart
  8390 ;;		_I2C_2_Master_Stop
  8391 ;;		_I2C_2_Master_Write
  8392 ;;		_I2C_2_Master_Read
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           	psect	text45
  8397   003B2A                     __ptext45:
  8398                           	callstack 0
  8399   003B2A                     _I2C_2_Master_Idle:
  8400                           	callstack 20
  8401   003B2A                     l230:
  8402   003B2A  010E               	movlb	14	; () banked
  8403   003B2C  B5D8               	btfsc	216,2,b	;volatile
  8404   003B2E  EF9B  F01D         	goto	u1631
  8405   003B32  EF9D  F01D         	goto	u1630
  8406   003B36                     u1631:
  8407   003B36  EF95  F01D         	goto	l230
  8408   003B3A                     u1630:
  8409   003B3A                     
  8410                           ; BSR set to: 14
  8411   003B3A  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8412   003B3E  0E1F               	movlw	31
  8413   003B40  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8414   003B42  A4D8               	btfss	status,2,c
  8415   003B44  EFA6  F01D         	goto	u1641
  8416   003B48  EFA8  F01D         	goto	u1640
  8417   003B4C                     u1641:
  8418   003B4C  EF95  F01D         	goto	l230
  8419   003B50                     u1640:
  8420   003B50                     
  8421                           ; BSR set to: 14
  8422   003B50  0012               	return		;funcret
  8423   003B52                     __end_of_I2C_2_Master_Idle:
  8424                           	callstack 0
  8425                           
  8426 ;; *************** function _HighISR *****************
  8427 ;; Defined at:
  8428 ;;		line 64 in file "interrupts.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;		None
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;Total ram usage:        0 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 5
  8449 ;; This function calls:
  8450 ;;		_Color_Interrupts_clear
  8451 ;; This function is called by:
  8452 ;;		Interrupt level 2
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	intcode
  8457   000008                     __pintcode:
  8458                           	callstack 0
  8459   000008                     _HighISR:
  8460                           	callstack 20
  8461                           
  8462                           ; BSR set to: 14
  8463                           ;incstack = 0
  8464   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8465   00000A                     
  8466                           ;interrupts.c: 66:     if (PIR0bits.INT0IF == 1) {
  8467   00000A  010E               	movlb	14	; () banked
  8468   00000C  A133               	btfss	51,0,b	;volatile
  8469   00000E  EF0B  F000         	goto	i2u316_41
  8470   000012  EF0D  F000         	goto	i2u316_40
  8471   000016                     i2u316_41:
  8472   000016  EF18  F000         	goto	i2l536
  8473   00001A                     i2u316_40:
  8474   00001A                     
  8475                           ; BSR set to: 14
  8476                           ;interrupts.c: 67:         interrupt_flag = 1;
  8477   00001A  0E00               	movlw	0
  8478   00001C  0100               	movlb	0	; () banked
  8479   00001E  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  8480   000020  0E01               	movlw	1
  8481   000022  6FD8               	movwf	_interrupt_flag& (0+255),b
  8482   000024                     
  8483                           ; BSR set to: 0
  8484                           ;interrupts.c: 68:         interrupt_ctr++;
  8485   000024  4BD6               	infsnz	_interrupt_ctr& (0+255),f,b
  8486   000026  2BD7               	incf	(_interrupt_ctr+1)& (0+255),f,b
  8487   000028                     
  8488                           ; BSR set to: 0
  8489                           ;interrupts.c: 69:         Color_Interrupts_clear();
  8490   000028  EC3D  F01D         	call	_Color_Interrupts_clear	;wreg free
  8491   00002C                     
  8492                           ;interrupts.c: 70:         PIR0bits.INT0IF = 0;
  8493   00002C  010E               	movlb	14	; () banked
  8494   00002E  9133               	bcf	51,0,b	;volatile
  8495   000030                     i2l536:
  8496                           
  8497                           ; BSR set to: 14
  8498   000030  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8499   000032  0011               	retfie		f
  8500   000034                     __end_of_HighISR:
  8501                           	callstack 0
  8502                           
  8503 ;; *************** function _Color_Interrupts_clear *****************
  8504 ;; Defined at:
  8505 ;;		line 48 in file "interrupts.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      void 
  8512 ;; Registers used:
  8513 ;;		wreg, status,2, status,0, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8523 ;;Total ram usage:        0 bytes
  8524 ;; Hardware stack levels used: 1
  8525 ;; Hardware stack levels required when called: 4
  8526 ;; This function calls:
  8527 ;;		i2_Color_Interrupts_init
  8528 ;;		i2_Color_Interrupts_threshold
  8529 ;;		i2_I2C_2_Master_Start
  8530 ;;		i2_I2C_2_Master_Stop
  8531 ;;		i2_I2C_2_Master_Write
  8532 ;;		i2_persistence_register
  8533 ;; This function is called by:
  8534 ;;		_HighISR
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text47
  8539   003A7A                     __ptext47:
  8540                           	callstack 0
  8541   003A7A                     _Color_Interrupts_clear:
  8542                           	callstack 20
  8543   003A7A                     
  8544                           ;interrupts.c: 50:     I2C_2_Master_Start();
  8545   003A7A  EC4D  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8546                           
  8547                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  8548   003A7E  0E52               	movlw	82
  8549   003A80  EC2E  F01E         	call	i2_I2C_2_Master_Write
  8550                           
  8551                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  8552   003A84  0EE6               	movlw	230
  8553   003A86  EC2E  F01E         	call	i2_I2C_2_Master_Write
  8554                           
  8555                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  8556   003A8A  EC48  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8557                           
  8558                           ;interrupts.c: 54:     Color_Interrupts_init();
  8559   003A8E  ECFD  F01D         	call	i2_Color_Interrupts_init	;wreg free
  8560                           
  8561                           ;interrupts.c: 55:     persistence_register();
  8562   003A92  EC28  F01E         	call	i2_persistence_register	;wreg free
  8563                           
  8564                           ;interrupts.c: 56:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  8565   003A96  C0EA  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  8566   003A9A  C0EB  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  8567   003A9E  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  8568   003AA2  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  8569   003AA6  EC80  F01D         	call	i2_Color_Interrupts_threshold	;wreg free
  8570   003AAA  0012               	return		;funcret
  8571   003AAC                     __end_of_Color_Interrupts_clear:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function i2_persistence_register *****************
  8575 ;; Defined at:
  8576 ;;		line 43 in file "interrupts.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;		None
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;		None
  8581 ;; Return value:  Size  Location     Type
  8582 ;;                  1    wreg      void 
  8583 ;; Registers used:
  8584 ;;		wreg, status,2, status,0, cstack
  8585 ;; Tracked objects:
  8586 ;;		On entry : 0/0
  8587 ;;		On exit  : 0/0
  8588 ;;		Unchanged: 0/0
  8589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8594 ;;Total ram usage:        0 bytes
  8595 ;; Hardware stack levels used: 1
  8596 ;; Hardware stack levels required when called: 3
  8597 ;; This function calls:
  8598 ;;		i2_color_writetoaddr
  8599 ;; This function is called by:
  8600 ;;		_Color_Interrupts_clear
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text48
  8605   003C50                     __ptext48:
  8606                           	callstack 0
  8607   003C50                     i2_persistence_register:
  8608                           	callstack 20
  8609   003C50                     
  8610                           ;interrupts.c: 45:  color_writetoaddr(0x0C, 0b010);
  8611   003C50  0E02               	movlw	2
  8612   003C52  6E03               	movwf	i2color_writetoaddr@value^0,c
  8613   003C54  0E0C               	movlw	12
  8614   003C56  ECE0  F01D         	call	i2_color_writetoaddr
  8615   003C5A  0012               	return		;funcret
  8616   003C5C                     __end_ofi2_persistence_register:
  8617                           	callstack 0
  8618                           
  8619 ;; *************** function i2_Color_Interrupts_threshold *****************
  8620 ;; Defined at:
  8621 ;;		line 35 in file "interrupts.c"
  8622 ;; Parameters:    Size  Location     Type
  8623 ;;  upperThresho    2    4[COMRAM] unsigned int 
  8624 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;		None
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  1    wreg      void 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2, status,0, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;Total ram usage:        4 bytes
  8641 ;; Hardware stack levels used: 1
  8642 ;; Hardware stack levels required when called: 3
  8643 ;; This function calls:
  8644 ;;		i2_color_writetoaddr
  8645 ;; This function is called by:
  8646 ;;		_Color_Interrupts_clear
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text49
  8651   003B00                     __ptext49:
  8652                           	callstack 0
  8653   003B00                     i2_Color_Interrupts_threshold:
  8654                           	callstack 20
  8655   003B00                     
  8656                           ;interrupts.c: 35: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 36: {;interrupts.c: 37:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8657   003B00  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  8658   003B04  0E04               	movlw	4
  8659   003B06  ECE0  F01D         	call	i2_color_writetoaddr
  8660                           
  8661                           ;interrupts.c: 38:     color_writetoaddr(0x05, lowerThreshold>>8);
  8662   003B0A  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8663   003B0C  6E03               	movwf	i2color_writetoaddr@value^0,c
  8664   003B0E  0E05               	movlw	5
  8665   003B10  ECE0  F01D         	call	i2_color_writetoaddr
  8666                           
  8667                           ;interrupts.c: 39:     color_writetoaddr(0x06, upperThreshold);
  8668   003B14  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  8669   003B18  0E06               	movlw	6
  8670   003B1A  ECE0  F01D         	call	i2_color_writetoaddr
  8671                           
  8672                           ;interrupts.c: 40:     color_writetoaddr(0x07, upperThreshold>>8);
  8673   003B1E  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8674   003B20  6E03               	movwf	i2color_writetoaddr@value^0,c
  8675   003B22  0E07               	movlw	7
  8676   003B24  ECE0  F01D         	call	i2_color_writetoaddr
  8677   003B28  0012               	return		;funcret
  8678   003B2A                     __end_ofi2_Color_Interrupts_threshold:
  8679                           	callstack 0
  8680                           
  8681 ;; *************** function i2_Color_Interrupts_init *****************
  8682 ;; Defined at:
  8683 ;;		line 27 in file "interrupts.c"
  8684 ;; Parameters:    Size  Location     Type
  8685 ;;		None
  8686 ;; Auto vars:     Size  Location     Type
  8687 ;;		None
  8688 ;; Return value:  Size  Location     Type
  8689 ;;                  1    wreg      void 
  8690 ;; Registers used:
  8691 ;;		wreg, status,2, status,0, cstack
  8692 ;; Tracked objects:
  8693 ;;		On entry : 0/0
  8694 ;;		On exit  : 0/0
  8695 ;;		Unchanged: 0/0
  8696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8701 ;;Total ram usage:        1 bytes
  8702 ;; Hardware stack levels used: 1
  8703 ;; Hardware stack levels required when called: 3
  8704 ;; This function calls:
  8705 ;;		i2_color_writetoaddr
  8706 ;; This function is called by:
  8707 ;;		_Color_Interrupts_clear
  8708 ;; This function uses a non-reentrant model
  8709 ;;
  8710                           
  8711                           	psect	text50
  8712   003BFA                     __ptext50:
  8713                           	callstack 0
  8714   003BFA                     i2_Color_Interrupts_init:
  8715                           	callstack 20
  8716   003BFA                     
  8717                           ;interrupts.c: 30:    color_writetoaddr(0x00, 0b00010011);
  8718   003BFA  0E13               	movlw	19
  8719   003BFC  6E03               	movwf	i2color_writetoaddr@value^0,c
  8720   003BFE  0E00               	movlw	0
  8721   003C00  ECE0  F01D         	call	i2_color_writetoaddr
  8722   003C04                     
  8723                           ;interrupts.c: 31:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8724   003C04  0ED0               	movlw	208
  8725   003C06  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  8726   003C08  0ECA               	movlw	202
  8727   003C0A                     i2u375_47:
  8728   003C0A  2EE8               	decfsz	wreg,f,c
  8729   003C0C  D7FE               	bra	i2u375_47
  8730   003C0E  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  8731   003C10  D7FC               	bra	i2u375_47
  8732   003C12  0012               	return		;funcret
  8733   003C14                     __end_ofi2_Color_Interrupts_init:
  8734                           	callstack 0
  8735                           
  8736 ;; *************** function i2_color_writetoaddr *****************
  8737 ;; Defined at:
  8738 ;;		line 32 in file "color.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  address         1    wreg     unsigned char 
  8741 ;;  value           1    2[COMRAM] unsigned char 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  address         1    3[COMRAM] unsigned char 
  8744 ;; Return value:  Size  Location     Type
  8745 ;;                  1    wreg      void 
  8746 ;; Registers used:
  8747 ;;		wreg, status,2, status,0, cstack
  8748 ;; Tracked objects:
  8749 ;;		On entry : 0/0
  8750 ;;		On exit  : 0/0
  8751 ;;		Unchanged: 0/0
  8752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8753 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8757 ;;Total ram usage:        2 bytes
  8758 ;; Hardware stack levels used: 1
  8759 ;; Hardware stack levels required when called: 2
  8760 ;; This function calls:
  8761 ;;		i2_I2C_2_Master_Start
  8762 ;;		i2_I2C_2_Master_Stop
  8763 ;;		i2_I2C_2_Master_Write
  8764 ;; This function is called by:
  8765 ;;		i2_Color_Interrupts_init
  8766 ;;		i2_Color_Interrupts_threshold
  8767 ;;		i2_persistence_register
  8768 ;; This function uses a non-reentrant model
  8769 ;;
  8770                           
  8771                           	psect	text51
  8772   003BC0                     __ptext51:
  8773                           	callstack 0
  8774   003BC0                     i2_color_writetoaddr:
  8775                           	callstack 20
  8776                           
  8777                           ;incstack = 0
  8778                           ;i2color_writetoaddr@address stored from wreg
  8779   003BC0  6E04               	movwf	i2color_writetoaddr@address^0,c
  8780   003BC2                     
  8781                           ;color.c: 33:     I2C_2_Master_Start();
  8782   003BC2  EC4D  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8783                           
  8784                           ;color.c: 34:     I2C_2_Master_Write(0x52 | 0x00);
  8785   003BC6  0E52               	movlw	82
  8786   003BC8  EC2E  F01E         	call	i2_I2C_2_Master_Write
  8787                           
  8788                           ;color.c: 35:     I2C_2_Master_Write(0x80 | address);
  8789   003BCC  5004               	movf	i2color_writetoaddr@address^0,w,c
  8790   003BCE  0980               	iorlw	128
  8791   003BD0  EC2E  F01E         	call	i2_I2C_2_Master_Write
  8792                           
  8793                           ;color.c: 36:     I2C_2_Master_Write(value);
  8794   003BD4  5003               	movf	i2color_writetoaddr@value^0,w,c
  8795   003BD6  EC2E  F01E         	call	i2_I2C_2_Master_Write
  8796                           
  8797                           ;color.c: 37:     I2C_2_Master_Stop();
  8798   003BDA  EC48  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8799   003BDE  0012               	return		;funcret
  8800   003BE0                     __end_ofi2_color_writetoaddr:
  8801                           	callstack 0
  8802                           
  8803 ;; *************** function i2_I2C_2_Master_Write *****************
  8804 ;; Defined at:
  8805 ;;		line 45 in file "i2c.c"
  8806 ;; Parameters:    Size  Location     Type
  8807 ;;  data_byte       1    wreg     unsigned char 
  8808 ;; Auto vars:     Size  Location     Type
  8809 ;;  data_byte       1    1[COMRAM] unsigned char 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  1    wreg      void 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;Total ram usage:        1 bytes
  8824 ;; Hardware stack levels used: 1
  8825 ;; Hardware stack levels required when called: 1
  8826 ;; This function calls:
  8827 ;;		i2_I2C_2_Master_Idle
  8828 ;; This function is called by:
  8829 ;;		_Color_Interrupts_clear
  8830 ;;		i2_color_writetoaddr
  8831 ;; This function uses a non-reentrant model
  8832 ;;
  8833                           
  8834                           	psect	text52
  8835   003C5C                     __ptext52:
  8836                           	callstack 0
  8837   003C5C                     i2_I2C_2_Master_Write:
  8838                           	callstack 20
  8839                           
  8840                           ;incstack = 0
  8841                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8842   003C5C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8843   003C5E                     
  8844                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8845   003C5E  ECA9  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8846   003C62                     
  8847                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8848   003C62  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8849   003C66  0012               	return		;funcret
  8850   003C68                     __end_ofi2_I2C_2_Master_Write:
  8851                           	callstack 0
  8852                           
  8853 ;; *************** function i2_I2C_2_Master_Stop *****************
  8854 ;; Defined at:
  8855 ;;		line 39 in file "i2c.c"
  8856 ;; Parameters:    Size  Location     Type
  8857 ;;		None
  8858 ;; Auto vars:     Size  Location     Type
  8859 ;;		None
  8860 ;; Return value:  Size  Location     Type
  8861 ;;                  1    wreg      void 
  8862 ;; Registers used:
  8863 ;;		wreg, status,2, status,0, cstack
  8864 ;; Tracked objects:
  8865 ;;		On entry : 0/0
  8866 ;;		On exit  : 0/0
  8867 ;;		Unchanged: 0/0
  8868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8873 ;;Total ram usage:        0 bytes
  8874 ;; Hardware stack levels used: 1
  8875 ;; Hardware stack levels required when called: 1
  8876 ;; This function calls:
  8877 ;;		i2_I2C_2_Master_Idle
  8878 ;; This function is called by:
  8879 ;;		_Color_Interrupts_clear
  8880 ;;		i2_color_writetoaddr
  8881 ;; This function uses a non-reentrant model
  8882 ;;
  8883                           
  8884                           	psect	text53
  8885   003C90                     __ptext53:
  8886                           	callstack 0
  8887   003C90                     i2_I2C_2_Master_Stop:
  8888                           	callstack 20
  8889   003C90                     
  8890                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8891   003C90  ECA9  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8892   003C94                     
  8893                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8894   003C94  010E               	movlb	14	; () banked
  8895   003C96  85DA               	bsf	218,2,b	;volatile
  8896   003C98                     
  8897                           ; BSR set to: 14
  8898   003C98  0012               	return		;funcret
  8899   003C9A                     __end_ofi2_I2C_2_Master_Stop:
  8900                           	callstack 0
  8901                           
  8902 ;; *************** function i2_I2C_2_Master_Start *****************
  8903 ;; Defined at:
  8904 ;;		line 27 in file "i2c.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;		None
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;		None
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  1    wreg      void 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0, cstack
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8922 ;;Total ram usage:        0 bytes
  8923 ;; Hardware stack levels used: 1
  8924 ;; Hardware stack levels required when called: 1
  8925 ;; This function calls:
  8926 ;;		i2_I2C_2_Master_Idle
  8927 ;; This function is called by:
  8928 ;;		_Color_Interrupts_clear
  8929 ;;		i2_color_writetoaddr
  8930 ;; This function uses a non-reentrant model
  8931 ;;
  8932                           
  8933                           	psect	text54
  8934   003C9A                     __ptext54:
  8935                           	callstack 0
  8936   003C9A                     i2_I2C_2_Master_Start:
  8937                           	callstack 20
  8938   003C9A                     
  8939                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8940   003C9A  ECA9  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8941   003C9E                     
  8942                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8943   003C9E  010E               	movlb	14	; () banked
  8944   003CA0  81DA               	bsf	218,0,b	;volatile
  8945   003CA2                     
  8946                           ; BSR set to: 14
  8947   003CA2  0012               	return		;funcret
  8948   003CA4                     __end_ofi2_I2C_2_Master_Start:
  8949                           	callstack 0
  8950                           
  8951 ;; *************** function i2_I2C_2_Master_Idle *****************
  8952 ;; Defined at:
  8953 ;;		line 22 in file "i2c.c"
  8954 ;; Parameters:    Size  Location     Type
  8955 ;;		None
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;		None
  8958 ;; Return value:  Size  Location     Type
  8959 ;;                  1    wreg      void 
  8960 ;; Registers used:
  8961 ;;		wreg, status,2, status,0
  8962 ;; Tracked objects:
  8963 ;;		On entry : 0/0
  8964 ;;		On exit  : 0/0
  8965 ;;		Unchanged: 0/0
  8966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;Total ram usage:        1 bytes
  8972 ;; Hardware stack levels used: 1
  8973 ;; This function calls:
  8974 ;;		Nothing
  8975 ;; This function is called by:
  8976 ;;		i2_I2C_2_Master_Start
  8977 ;;		i2_I2C_2_Master_Stop
  8978 ;;		i2_I2C_2_Master_Write
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text55
  8983   003B52                     __ptext55:
  8984                           	callstack 0
  8985   003B52                     i2_I2C_2_Master_Idle:
  8986                           	callstack 20
  8987   003B52                     i2l230:
  8988   003B52  010E               	movlb	14	; () banked
  8989   003B54  B5D8               	btfsc	216,2,b	;volatile
  8990   003B56  EFAF  F01D         	goto	i2u168_41
  8991   003B5A  EFB1  F01D         	goto	i2u168_40
  8992   003B5E                     i2u168_41:
  8993   003B5E  EFA9  F01D         	goto	i2l230
  8994   003B62                     i2u168_40:
  8995   003B62                     
  8996                           ; BSR set to: 14
  8997   003B62  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8998   003B66  0E1F               	movlw	31
  8999   003B68  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9000   003B6A  A4D8               	btfss	status,2,c
  9001   003B6C  EFBA  F01D         	goto	i2u169_41
  9002   003B70  EFBC  F01D         	goto	i2u169_40
  9003   003B74                     i2u169_41:
  9004   003B74  EFA9  F01D         	goto	i2l230
  9005   003B78                     i2u169_40:
  9006   003B78                     
  9007                           ; BSR set to: 14
  9008   003B78  0012               	return		;funcret
  9009   003B7A                     __end_ofi2_I2C_2_Master_Idle:
  9010                           	callstack 0
  9011                           
  9012                           	psect	rparam
  9013   000000                     
  9014                           	psect	temp
  9015   000057                     btemp:
  9016                           	callstack 0
  9017   000057                     	ds	1
  9018   000000                     int$flags	set	btemp
  9019   000000                     wtemp8	set	btemp+1
  9020   000000                     ttemp5	set	btemp+1
  9021   000000                     ttemp6	set	btemp+4
  9022   000000                     ttemp7	set	btemp+8
  9023                           
  9024                           	psect	idloc
  9025                           
  9026                           ;Config register IDLOC0 @ 0x200000
  9027                           ;	unspecified, using default values
  9028   200000                     	org	2097152
  9029   200000  0FFF               	dw	4095
  9030                           
  9031                           ;Config register IDLOC1 @ 0x200002
  9032                           ;	unspecified, using default values
  9033   200002                     	org	2097154
  9034   200002  0FFF               	dw	4095
  9035                           
  9036                           ;Config register IDLOC2 @ 0x200004
  9037                           ;	unspecified, using default values
  9038   200004                     	org	2097156
  9039   200004  0FFF               	dw	4095
  9040                           
  9041                           ;Config register IDLOC3 @ 0x200006
  9042                           ;	unspecified, using default values
  9043   200006                     	org	2097158
  9044   200006  0FFF               	dw	4095
  9045                           
  9046                           ;Config register IDLOC4 @ 0x200008
  9047                           ;	unspecified, using default values
  9048   200008                     	org	2097160
  9049   200008  0FFF               	dw	4095
  9050                           
  9051                           ;Config register IDLOC5 @ 0x20000A
  9052                           ;	unspecified, using default values
  9053   20000A                     	org	2097162
  9054   20000A  0FFF               	dw	4095
  9055                           
  9056                           ;Config register IDLOC6 @ 0x20000C
  9057                           ;	unspecified, using default values
  9058   20000C                     	org	2097164
  9059   20000C  0FFF               	dw	4095
  9060                           
  9061                           ;Config register IDLOC7 @ 0x20000E
  9062                           ;	unspecified, using default values
  9063   20000E                     	org	2097166
  9064   20000E  0FFF               	dw	4095
  9065                           
  9066                           	psect	config
  9067                           
  9068                           ;Config register CONFIG1L @ 0x300000
  9069                           ;	External Oscillator mode Selection bits
  9070                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9071                           ;	Power-up default value for COSC bits
  9072                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9073   300000                     	org	3145728
  9074   300000  AA                 	db	170
  9075                           
  9076                           ;Config register CONFIG1H @ 0x300001
  9077                           ;	unspecified, using default values
  9078                           ;	Clock Out Enable bit
  9079                           ;	CLKOUTEN = 0x1, unprogrammed default
  9080                           ;	Clock Switch Enable bit
  9081                           ;	CSWEN = 0x1, unprogrammed default
  9082                           ;	Fail-Safe Clock Monitor Enable bit
  9083                           ;	FCMEN = 0x1, unprogrammed default
  9084   300001                     	org	3145729
  9085   300001  FF                 	db	255
  9086                           
  9087                           ;Config register CONFIG2L @ 0x300002
  9088                           ;	unspecified, using default values
  9089                           ;	Master Clear Enable bit
  9090                           ;	MCLRE = 0x1, unprogrammed default
  9091                           ;	Power-up Timer Enable bit
  9092                           ;	PWRTE = 0x1, unprogrammed default
  9093                           ;	Low-power BOR enable bit
  9094                           ;	LPBOREN = 0x1, unprogrammed default
  9095                           ;	Brown-out Reset Enable bits
  9096                           ;	BOREN = 0x3, unprogrammed default
  9097   300002                     	org	3145730
  9098   300002  FF                 	db	255
  9099                           
  9100                           ;Config register CONFIG2H @ 0x300003
  9101                           ;	unspecified, using default values
  9102                           ;	Brown Out Reset Voltage selection bits
  9103                           ;	BORV = 0x3, unprogrammed default
  9104                           ;	ZCD Disable bit
  9105                           ;	ZCD = 0x1, unprogrammed default
  9106                           ;	PPSLOCK bit One-Way Set Enable bit
  9107                           ;	PPS1WAY = 0x1, unprogrammed default
  9108                           ;	Stack Full/Underflow Reset Enable bit
  9109                           ;	STVREN = 0x1, unprogrammed default
  9110                           ;	Debugger Enable bit
  9111                           ;	DEBUG = 0x1, unprogrammed default
  9112                           ;	Extended Instruction Set Enable bit
  9113                           ;	XINST = 0x1, unprogrammed default
  9114   300003                     	org	3145731
  9115   300003  FF                 	db	255
  9116                           
  9117                           ;Config register CONFIG3L @ 0x300004
  9118                           ;	WDT Period Select bits
  9119                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9120                           ;	WDT operating mode
  9121                           ;	WDTE = OFF, WDT Disabled
  9122   300004                     	org	3145732
  9123   300004  9F                 	db	159
  9124                           
  9125                           ;Config register CONFIG3H @ 0x300005
  9126                           ;	unspecified, using default values
  9127                           ;	WDT Window Select bits
  9128                           ;	WDTCWS = 0x7, unprogrammed default
  9129                           ;	WDT input clock selector
  9130                           ;	WDTCCS = 0x7, unprogrammed default
  9131   300005                     	org	3145733
  9132   300005  FF                 	db	255
  9133                           
  9134                           ;Config register CONFIG4L @ 0x300006
  9135                           ;	unspecified, using default values
  9136                           ;	Write Protection Block 0
  9137                           ;	WRT0 = 0x1, unprogrammed default
  9138                           ;	Write Protection Block 1
  9139                           ;	WRT1 = 0x1, unprogrammed default
  9140                           ;	Write Protection Block 2
  9141                           ;	WRT2 = 0x1, unprogrammed default
  9142                           ;	Write Protection Block 3
  9143                           ;	WRT3 = 0x1, unprogrammed default
  9144                           ;	Write Protection Block 3
  9145                           ;	WRT4 = 0x1, unprogrammed default
  9146                           ;	Write Protection Block 3
  9147                           ;	WRT5 = 0x1, unprogrammed default
  9148                           ;	Write Protection Block 3
  9149                           ;	WRT6 = 0x1, unprogrammed default
  9150                           ;	Write Protection Block 3
  9151                           ;	WRT7 = 0x1, unprogrammed default
  9152   300006                     	org	3145734
  9153   300006  FF                 	db	255
  9154                           
  9155                           ;Config register CONFIG4H @ 0x300007
  9156                           ;	unspecified, using default values
  9157                           ;	Configuration Register Write Protection bit
  9158                           ;	WRTC = 0x1, unprogrammed default
  9159                           ;	Boot Block Write Protection bit
  9160                           ;	WRTB = 0x1, unprogrammed default
  9161                           ;	Data EEPROM Write Protection bit
  9162                           ;	WRTD = 0x1, unprogrammed default
  9163                           ;	Scanner Enable bit
  9164                           ;	SCANE = 0x1, unprogrammed default
  9165                           ;	Low Voltage Programming Enable bit
  9166                           ;	LVP = 0x1, unprogrammed default
  9167   300007                     	org	3145735
  9168   300007  FF                 	db	255
  9169                           
  9170                           ;Config register CONFIG5L @ 0x300008
  9171                           ;	unspecified, using default values
  9172                           ;	UserNVM Program Memory Code Protection bit
  9173                           ;	CP = 0x1, unprogrammed default
  9174                           ;	DataNVM Memory Code Protection bit
  9175                           ;	CPD = 0x1, unprogrammed default
  9176   300008                     	org	3145736
  9177   300008  FF                 	db	255
  9178                           
  9179                           ;Config register CONFIG5H @ 0x300009
  9180                           ;	unspecified, using default values
  9181   300009                     	org	3145737
  9182   300009  FF                 	db	255
  9183                           
  9184                           ;Config register CONFIG6L @ 0x30000A
  9185                           ;	unspecified, using default values
  9186                           ;	Table Read Protection Block 0
  9187                           ;	EBTR0 = 0x1, unprogrammed default
  9188                           ;	Table Read Protection Block 1
  9189                           ;	EBTR1 = 0x1, unprogrammed default
  9190                           ;	Table Read Protection Block 2
  9191                           ;	EBTR2 = 0x1, unprogrammed default
  9192                           ;	Table Read Protection Block 3
  9193                           ;	EBTR3 = 0x1, unprogrammed default
  9194                           ;	Table Read Protection Block 4
  9195                           ;	EBTR4 = 0x1, unprogrammed default
  9196                           ;	Table Read Protection Block 5
  9197                           ;	EBTR5 = 0x1, unprogrammed default
  9198                           ;	Table Read Protection Block 6
  9199                           ;	EBTR6 = 0x1, unprogrammed default
  9200                           ;	Table Read Protection Block 7
  9201                           ;	EBTR7 = 0x1, unprogrammed default
  9202   30000A                     	org	3145738
  9203   30000A  FF                 	db	255
  9204                           
  9205                           ;Config register CONFIG6H @ 0x30000B
  9206                           ;	unspecified, using default values
  9207                           ;	Boot Block Table Read Protection bit
  9208                           ;	EBTRB = 0x1, unprogrammed default
  9209   30000B                     	org	3145739
  9210   30000B  FF                 	db	255
  9211                           tosu	equ	0xFFF
  9212                           tosh	equ	0xFFE
  9213                           tosl	equ	0xFFD
  9214                           stkptr	equ	0xFFC
  9215                           pclatu	equ	0xFFB
  9216                           pclath	equ	0xFFA
  9217                           pcl	equ	0xFF9
  9218                           tblptru	equ	0xFF8
  9219                           tblptrh	equ	0xFF7
  9220                           tblptrl	equ	0xFF6
  9221                           tablat	equ	0xFF5
  9222                           prodh	equ	0xFF4
  9223                           prodl	equ	0xFF3
  9224                           indf0	equ	0xFEF
  9225                           postinc0	equ	0xFEE
  9226                           postdec0	equ	0xFED
  9227                           preinc0	equ	0xFEC
  9228                           plusw0	equ	0xFEB
  9229                           fsr0h	equ	0xFEA
  9230                           fsr0l	equ	0xFE9
  9231                           wreg	equ	0xFE8
  9232                           indf1	equ	0xFE7
  9233                           postinc1	equ	0xFE6
  9234                           postdec1	equ	0xFE5
  9235                           preinc1	equ	0xFE4
  9236                           plusw1	equ	0xFE3
  9237                           fsr1h	equ	0xFE2
  9238                           fsr1l	equ	0xFE1
  9239                           bsr	equ	0xFE0
  9240                           indf2	equ	0xFDF
  9241                           postinc2	equ	0xFDE
  9242                           postdec2	equ	0xFDD
  9243                           preinc2	equ	0xFDC
  9244                           plusw2	equ	0xFDB
  9245                           fsr2h	equ	0xFDA
  9246                           fsr2l	equ	0xFD9
  9247                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      86
    BANK0           160     84     140
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2781$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2781$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    decelerate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    decelerate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    decelerate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    decelerate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    rangeCalibrate@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _rangeCalibrate->_color_normalise
    _wallSmash->_setMotorPWM
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0  110646
                                             32 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                    _calibSwitchInit
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      34    28      6   17060
                                             60 COMRAM     2     2      0
                                              0 BANK0     32    26      6
                            ___fladd
                    _color_normalise
                    _color_read_RGBC
                          _norm_stop
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1394
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    2735
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1639
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2996
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   30796
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34986
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11178
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _norm_stop                                            4     0      4    5261
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    5045
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3416
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibSwitchInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _calibSwitchInit
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     ___fladd
     _color_normalise
     _color_read_RGBC
     _norm_stop
     _wallSmash
       _setMotorPWM
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllhl     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRlllllh      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      63        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 10:47:43 2022

                            _color_read_Red 3844                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 347C  
                              ___fldiv@sign 0032                             _color_read_Blue 3934  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 38E4                            _color_read_Green 3894  
                         ??_Interrupts_init 0009                                         l200 3CAA  
                                       l113 3A46                                         l122 38E2  
                                       l116 3BBE                                         l125 3982  
                                       l230 3B2A                                         l134 3540  
                                       l119 3892                                         l143 3C36  
                                       l128 3932                                         l152 3CBC  
                                       l233 3B50                                         l137 2F3E  
                                       l242 3C84                                         l162 2C1A  
                                       l146 3CB0                                         l227 3AD4  
                                       l236 3C8E                                         l245 3C4E  
                                       l149 3CB6                                         l158 29D8  
                                       l167 1A94                                         l191 231C  
                                       l239 3C70                                         l248 3A12  
                                       l521 3BF8                                         l355 2876  
                                       l524 3AFE                                         l701 32A6  
                                       l197 231C                                         l518 3C28  
                                       l710 3B9E                                         l527 3C42  
                                       l704 3842                                         l641 35C0  
                                       l651 37EC                                         l707 3C7A  
                                       l654 3782                                         l671 36A6  
                                       l648 30AA                                         l665 3A78  
                                       l668 3718                                         l685 347A  
                                       l693 3390                                         l696 3246  
                                       l980 31AE                                         l975 3168  
                          ??_motor_response 002D              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 3C2A                         i2_color_writetoaddr 3BC0  
                                       wreg 000FE8                             _color_normalise 2DD0  
                                      l1201 362C                                        l1303 255C  
                                      l1208 3634                                        l1240 1C38  
                                      l3000 2CF4                                        l1305 25D4  
                                      l1306 25C2                                        l3010 2D74  
                                      l3002 2D00                                        l3100 37EE  
                                      l3020 2DBC                                        l3012 2D76  
                                      l3004 2D3C                                        l3030 3AB6  
                                      l3102 3802                                        l3110 365E  
                                      l1238 1C84                                        l3022 2DBE  
                                      l3014 2D7A                                        l3006 2D48  
                                      l1255 1D9E                                        l1247 1F54  
                                      l1239 1C72                                        l3040 3BA2  
                                      l3032 3ABC                                        l3104 3818  
                                      l3112 366E                                        l3120 3392  
                                      l1264 1E6E                                        l3200 1BA6  
                                      l3016 2D9E                                        l3008 2D56  
                                      l4000 26FE                                        l1265 1E5C  
                                      l3034 3ABE                                        l3114 367E  
                                      l3106 3636                                        l3130 33EE  
                                      l3122 33AA                                        l3210 1BBA  
                                      l3202 1BAA                                        l3018 2DAE  
                                      l3050 2E84                                        l3042 347C  
                                      l4010 272A                                        l4002 2700  
                                      l3036 3AC0                                        l3028 3AAC  
                                      l3116 368E                                        l3108 364E  
                                      l3140 344A                                        l3132 3402  
                                      l3124 33BA                                        l3300 1E0C  
                                      l3220 1BCE                                        l3212 1BBE  
                                      l3204 1BAE                                        l1292 26B6  
                                      l1372 2D0A                                        l3052 2EDC  
                                      l3044 2DD0                                        l3060 32A8  
                                      l4020 2758                                        l4012 273E  
                                      l4004 2704                                        l1365 2C72  
                                      l3038 3AC2                                        l3118 369A  
                                      l3142 3462                                        l3134 340E  
                                      l3126 33CA                                        l3310 1E3E  
                                      l3302 1E1C                                        l3230 1C20  
                                      l3222 1BD2                                        l3214 1BC2  
                                      l3206 1BB2                                        l3150 1AB0  
                                      l1294 2516                                        l3046 2DD8  
                                      l3070 3304                                        l3062 32C0  
                                      l3054 3CAC                                        l4030 2768  
                                      l4022 2760                                        l4014 2742  
                                      l4006 2722                                        l3144 346E  
                                      l3136 341A                                        l3128 33DA  
                                      l3320 1E98                                        l3312 1E54  
                                      l3304 1E1E                                        l3240 1C64  
                                      l3232 1C30                                        l3216 1BC6  
                                      l3208 1BB6                                        l3224 1BD6  
                                      l3160 1AE4                                        l3152 1AB2  
                                      l1368 2DCE                                        l3048 2E2C  
                                      l3080 3360                                        l3072 3318  
                                      l3064 32D0                                        l3056 3CB2  
                                      l4040 2784                                        l4032 276A  
                                      l4024 2762                                        l4016 2748  
                                      l4008 2726                                        l1297 24DA  
                                      l3090 36D0                                        l3138 3432  
                                      l3330 1F14                                        l3322 1ED2  
                                      l3306 1E2C                                        l3242 1C66  
                                      l3234 1C46                                        l3226 1BDA  
                                      l3218 1BCA                                        l3170 1B16  
                                      l3154 1AC2                                        l3162 1AEC  
                                      l3146 1A96                                        l3082 3378  
                                      l3074 3324                                        l3066 32E0  
                                      l3058 3CB8                                        l4050 27E4  
                                      l4042 2798                                        l4034 276C  
                                      l4026 2764                                        l4018 2750  
                                      l1379 2D66                                        l3092 36E0  
                                      l3500 1438                                        l3340 1F34  
                                      l3332 1F18                                        l3316 1E7E  
                                      l3324 1ED4                                        l3308 1E30  
                                      l3260 1CEE                                        l3252 1CB6  
                                      l3244 1C70                                        l3236 1C52  
                                      l3228 1C04                                        l3180 1B4C  
                                      l3172 1B1C                                        l3164 1AFC  
                                      l3156 1AD2                                        l3148 1AA2  
                                      l3084 3384                                        l3076 3330  
                                      l3068 32F0                                        l4060 2832  
                                      l4052 27F6                                        l4044 27B4  
                                      l4036 276E                                        l4028 2766  
                                      l3350 30DA                                        l2710 35EC  
                                      l2702 35C2                                        l3094 36F0  
                                      l3086 36A8                                        l3510 14F8  
                                      l3430 0E56                                        l3342 1F42  
                                      l3334 1F26                                        l3326 1EE4  
                                      l3318 1E8A                                        l3262 1CF2  
                                      l3254 1CC6                                        l3246 1C92  
                                      l3270 1D12                                        l3238 1C56  
                                      l3190 1B88                                        l3182 1B5C  
                                      l3174 1B2A                                        l3166 1B02  
                                      l3158 1AE2                                        l3078 3348  
                                      l4070 28A6                                        l4062 283E  
                                      l4054 27F8                                        l4046 27C8  
                                      l4038 2770                                        l3360 3148  
                                      l3352 30EA                                        l2720 3620  
                                      l2712 35FA                                        l2704 35CA  
                                      l3096 3700                                        l3088 36C0  
                                      l3600 19B0                                        l3520 157C  
                                      l3512 1520                                        l3440 0F8C  
                                      l3432 0E94                                        l3504 143E  
                                      l3344 1F44                                        l3336 1F2C  
                                      l3328 1EF4                                        l3272 1D38  
                                      l3280 1D8E                                        l3264 1D00  
                                      l3256 1CD4                                        l3248 1CA2  
                                      l3192 1B96                                        l3184 1B5E  
                                      l3176 1B2C                                        l3168 1B14  
                                      l2800 397A                                        l4080 28F6  
                                      l4072 28C2                                        l4064 286E  
                                      l4056 280C                                        l4048 27E2  
                                      l2730 3C8A                                        l3362 3156  
                                      l3354 3118                                        l2722 3626  
                                      l2714 3600                                        l2706 35DC  
                                      l3098 370C                                        l2810 3A48  
                                      l3610 1A3A                                        l3602 19C4  
                                      l3522 15BA                                        l3530 1600  
                                      l3514 1538                                        l3506 147C  
                                      l3450 1036                                        l3442 0FCA  
                                      l3434 0ED2                                        l3338 1F2E  
                                      l3290 1DE2                                        l3282 1DB4  
                                      l3274 1D6C                                        l3266 1D02  
                                      l3258 1CE2                                        l3194 1B9A  
                                      l3178 1B3C                                        l3186 1B66  
                                      l4090 296A                                        l4082 2910  
                                      l4074 28DA                                        l4066 2878  
                                      l4058 2826                                        l2732 3C46  
                                      l3380 3A18                                        l3700 35BE  
                                      l3364 31A6                                        l3356 3128  
                                      l3348 30AC                                        l2716 3616  
                                      l2708 35E4                                        l2812 3A60  
                                      l2820 31D8                                        l3620 1A92  
                                      l3612 1A52                                        l3604 19DC  
                                      l3540 1736                                        l3532 163E  
                                      l3524 15E2                                        l3508 14BA  
                                      l3460 10D0                                        l3452 104E  
                                      l3444 0FDE                                        l3436 0F10  
                                      l3428 0E18                                        l3292 1DF0  
                                      l3284 1DC4                                        l3276 1D6E  
                                      l3268 1D0C                                        l3196 1B9E  
                                      l3188 1B76                                        l2900 2454  
                                      l2740 3C68                                        l2804 38E4  
                                      l4092 298C                                        l4084 2924  
                                      l4076 28E0                                        l4068 288C  
                                      l2734 3C4A                                        l3382 3A22  
                                      l3710 37C4                                        l3702 3784  
                                      l3366 31AC                                        l3358 3136  
                                      l2718 361E                                        l2814 3A6C  
                                      l2830 322E                                        l2822 31E8  
                                      l3614 1A7E                                        l3606 1A06  
                                      l3542 1774                                        l3534 167C  
                                      l3526 15FA                                        l3518 153E  
                                      l3550 17BA                                        l3470 11F0  
                                      l3462 110E                                        l3446 0FF6  
                                      l3438 0F4E                                        l3630 1FC2  
                                      l3294 1DF2                                        l3278 1D7E  
                                      l3198 1BA2                                        l2910 24A6  
                                      l2902 246E                                        l2750 39E8  
                                      l2742 3C6C                                        l2806 392A  
                                      l4094 29A0                                        l4086 293C  
                                      l4078 28E2                                        l2728 3C86  
                                      l2736 3C7C                                        l3384 3A32  
                                      l3712 37D8                                        l3704 3790  
                                      l3720 3746                                        l2760 2F5C  
                                      l2840 329A                                        l2832 323A  
                                      l2824 31F8                                        l2816 31B0  
                                      l3616 1A84                                        l3608 1A26  
                                      l3560 188E                                        l3552 17F8  
                                      l3544 179C                                        l3536 16BA  
                                      l3480 12B6                                        l3472 1208  
                                      l3464 114C                                        l3448 1022  
                                      l3456 1054                                        l3640 2082  
                                      l3632 1FEC                                        l3624 1F56  
                                      l3296 1E00                                        l3288 1DD8  
                                      l2920 2502                                        l2912 24B6  
                                      l2904 247E                                        l2752 3A0E  
                                      l2744 39D4                                        l4088 2950  
                                      l4096 29BA                                        l2738 3C80  
                                      l3730 3BE0                                        l3386 3A3C  
                                      l3378 3A14                                        l3706 37A0  
                                      l3722 375A                                        l3714 371A  
                                      l2770 3026                                        l2762 2FB0  
                                      l2834 325E                                        l2826 320C  
                                      l2818 31C8                                        l3618 1A8A  
                                      l3570 18FE                                        l3562 18A2  
                                      l3554 1836                                        l3546 17B4  
                                      l3538 16F8                                        l3490 13CC  
                                      l3482 12F4                                        l3466 118A  
                                      l3458 1092                                        l3650 2134  
                                      l3642 209E                                        l3634 2014  
                                      l3626 1F7E                                        l3298 1E08  
                                      l2930 2542                                        l2922 2504  
                                      l2914 24CA                                        l2906 248E  
                                      l2850 234A                                        l2842 231E  
                                      l2754 3A10                                        l2746 39D8  
                                      l4098 29BC                                        l2692 3B2A  
                                      l3732 3BEA                                        l3708 37B0  
                                      l3724 376E                                        l3716 3726  
                                      l2772 306A                                        l2764 2FC4  
                                      l2836 3276                                        l2828 3220  
                                      l3580 1946                                        l3572 1904  
                                      l3564 18BA                                        l3556 184A  
                                      l3492 13E0                                        l3484 1332  
                                      l3468 11C8                                        l3476 123A  
                                      l3660 21B8                                        l3652 2148  
                                      l3644 20C8                                        l3636 2030  
                                      l3628 1FA6                                        l2940 257E  
                                      l2932 254C                                        l2924 2514  
                                      l2916 24D8                                        l2908 249E  
                                      l2860 2384                                        l2852 235A  
                                      l2844 232A                                        l2748 39E0  
                                      l3388 3C2A                                        l2694 3B3A  
                                      l3734 3AD6                                        l3718 3736  
                                      l3726 3C72                                        l2766 3006  
                                      l2758 2F40                                        l2838 328E  
                                      l3590 196C                                        l3582 1948  
                                      l3574 1906                                        l3558 1862  
                                      l3494 13F4                                        l3486 1370  
                                      l3478 1278                                        l3670 226A  
                                      l3662 21E4                                        l3646 20F0  
                                      l3654 2162                                        l3638 205A  
                                      l2950 25F0                                        l2942 258C  
                                      l2934 255A                                        l2926 2526  
                                      l2918 24E4                                        l2870 23B0  
                                      l2862 238A                                        l2854 236A  
                                      l2846 2338                                        l3728 3C14  
                                      l3680 3CA4                                        l2696 3B7A  
                                      l2768 300A                                        l3592 1974  
                                      l3584 194A                                        l3576 191A  
                                      l3568 18C0                                        l3496 140C  
                                      l3488 13AE                                        l3672 2292  
                                      l3664 21F8                                        l3656 218C  
                                      l3648 2108                                        l3736 3C38  
                                      l2960 265C                                        l2952 25FE  
                                      l2944 25BA                                        l2928 253C  
                                      l2936 256C                                        l2880 23EA  
                                      l2872 23C0                                        l2864 2390  
                                      l2856 236C                                        l2848 233A  
                                      l2792 3894                                        l3690 359C  
                                      l3682 3542                                        l2698 3B96  
                                      l3594 1988                                        l3578 192E  
                                      l3498 1420                                        l3674 22AE  
                                      l3666 2224                                        l3658 21A0  
                                      l2970 26AA                                        l2962 2676  
                                      l2954 2628                                        l2938 257A  
                                      l2882 2400                                        l2874 23D0  
                                      l2866 239E                                        l2858 2374  
                                      l2794 38DA                                        l2786 3844  
                                      l3692 35A6                                        l3684 356C  
                                      l3596 1990                                        l3588 1950  
                                      l3676 22D8                                        l3668 2240  
                                      l2972 26AC                                        l2964 2692  
                                      l2948 25E4                                        l2956 262C  
                                      l2884 2410                                        l2892 2430  
                                      l2876 23D2                                        l2868 23A0  
                                      l2980 2C1E                                        l2788 388A  
                                      l3694 35A8                                        l3686 3590  
                                      l3678 2300                                        l2966 2696  
                                      l2958 2646                                        l2894 2440  
                                      l2886 2418                                        l2878 23DA  
                                      l2982 2C2E                                        l2798 3934  
                                      l3950 29E6                                        l3696 35B2  
                                      l3688 359A                                        l2968 26A4  
                                      l2896 2440                                        l2888 241C  
                                      l2992 2CAC                                        l2984 2C3C  
                                      l3960 2A34                                        l3952 29FA  
                                      l3944 29CE                                        l3698 35B4  
                                      l2994 2CB4                                        l2986 2C82  
                                      l3970 2AB0                                        l3962 2A40  
                                      l3954 2A0E                                        l2996 2CC0  
                                      l2988 2C98                                        l3980 2C02  
                                      l3972 2AC4                                        l3964 2A58  
                                      l3956 2A26                                        l2998 2CF2  
                                      l3974 2ADC                                        l3966 2A5A  
                                      l3958 2A28                                        l3990 26D8  
                                      l3982 26B8                                        l3968 2A98  
                                      l3976 2AE2                                        l3992 26E4  
                                      l3984 26BC                                        l3978 2AFE  
                                      l3994 26F8                                        l3986 26C0  
                                      l3996 26FA                                        l3988 26CC  
                                      l3998 26FC                                        _CR1L 0047  
                                      _CR2L 003F                                        _CR3L 00C8  
                                      STR_1 0E01                                        _CR2U 0043  
                                      _CR3U 00CC                                        u2000 2C3C  
                                      u2001 2C38                                        u2010 2C98  
                                      u2011 2C94                                        u2020 2CEE  
                                      u2100 3360                                        u2021 2CEA  
                                      u2101 335C                                        u2110 3432  
                                      u2030 2D38                                        u2111 342E  
                                      u2031 2D34                                        u2120 344A  
                                      u3000 205A                                        u2200 1B88  
                                      u2040 2D56                                        u2121 3446  
                                      u3001 2056                                        u2201 1B84  
                                      u2041 2D52                                        u3010 20C8  
                                      u2210 1B96                                        u2130 1AB0  
                                      u2050 2D66                                        u3011 20C4  
                                      u2211 1B92                                        u2131 1AAC  
                                      u2051 2D62                                        u3020 218C  
                                      u2300 1CD4                                        u2220 1C04  
                                      u2140 1AC2                                        u2060 2D74  
                                      u3021 2188                                        u2301 1CD0  
                                      u2221 1C00                                        u2141 1ABE  
                                      u2061 2D70                                        u3030 226A  
                                      u2310 1CE2                                        u2230 1C1C  
                                      u2150 1AD2                                        u2070 2DAE  
                                      u3031 2266                                        u2311 1CDE  
                                      u2231 1C16                                        u2151 1ACE  
                                      u2071 2DAA                                        u3040 22D8  
                                      u2400 1E2C                                        u2320 1D00  
                                      u2240 1C1E                                        u2160 1B14  
                                      u2080 2DBC                                        u3200 29FA  
                              _BAUD4CONbits 000EE9                                        u3041 22D4  
                                      u2401 1E28                                        u2321 1CFC  
                                      u2161 1B10                                        u2081 2DB8  
                                      u3201 29F6                                        u2410 1E3E  
                                      u2330 1D38                                        u2250 1C46  
                                      u2170 1B2A                                        u2090 3348  
                                      u3210 2AFE                                        u2411 1E3A  
                                      u2331 1D34                                        u2251 1C42  
                                      u2171 1B26                                        u2091 3344  
                                      u3211 2AFA                                        u2500 1F26  
                                      u2420 1E54                                        u2340 1D7E  
                                      u2260 1C64                                        u2180 1B3C  
                                      u1700 39FC                                        u3220 2798  
                                      u2501 1F22                                        u2421 1E50  
                                      u2341 1D7A                                        u2261 1C60  
                                      u2181 1B38                                        u1701 39F4  
                                      u3221 2794                                        u1630 3B3A  
                                      u2510 1F42                                        u2430 1E6A  
                                      u2350 1DB4                                        u2270 1C84  
                                      u2190 1B4C                                        u3230 27B4  
                                      u1631 3B36                                        u2511 1F3E  
                                      u2431 1E66                                        u2351 1DB0  
                                      u2271 1C80                                        u2191 1B48  
                                      u3231 27B0                                        u1640 3B50  
                                      u2520 30DA                                        u1720 2F5C  
                                      u2600 0E56                                        u2440 1E7E  
                                      u2360 1DC4                                        u2280 1C92  
                                      u1800 23B0                                        u3240 27F6  
                                      u1641 3B4C                                        u2521 30D6  
                                      u1721 2F58                                        u2601 0E52  
                                      u2441 1E7A                                        u2361 1DC0  
                                      u2281 1C8E                                        u1801 23AC  
                                      u3241 27F2                                        u2530 3118  
                                      u1650 35DC                                        u1730 3026  
                                      u2610 0E94                                        u2450 1E98  
                                      u2370 1DF0                                        u2290 1CA2  
                                      u1810 23C0                                        u3250 28DA  
                                      _T2PR 000FBC                                        u2531 3114  
                                      u1651 35D8                                        u1731 3022  
                                      u2611 0E90                                        u2451 1E94  
                                      u2371 1DEC                                        u2291 1C9E  
                                      u1811 23BC                                        u3251 28D6  
                                      u3307 2898                                        u2540 3136  
                                      u1660 35FA                                        u1740 325E  
                                      u2700 114C                                        u2620 0ED2  
                                      u2460 1ED2                                        u2380 1E00  
                                      u1900 257A                                        u1820 2400  
                                      u3260 297E                                        u2541 3132  
                                      u1661 35F6                                        u1741 325A  
                                      u2701 1148                                        u2621 0ECE  
                                      u2461 1ECE                                        u2381 1DFC  
                                      u1901 2576                                        u1821 23FC  
                                      u3261 2974                                        u3317 2902  
                                      u2550 3156                                        u1670 3616  
                                      u1750 3276                                        u2710 118A  
                                      u2630 0F10                                        u2470 1EE4  
                                      u2390 1E1C                                        u1910 258C  
                                      u1830 2440                                        u1718 39FE  
                                      u3190 29E6                                        u2551 3152  
                                      u1671 3612                                        u1751 3272  
                                      u2711 1186                                        u2631 0F0C  
                                      u3407 1FB0                                        u2471 1EE0  
                                      u2391 1E18                                        u1911 2588  
                                      u1831 243C                                        u3191 29E2  
                                      u3327 2930                                        u2560 31A6  
                                      u2720 11C8                                        u2640 0F4E  
                                      u2480 1EF4                                        u1920 25BA  
                                      u1840 24B6                                        u1760 2338  
                                      u2561 31A2                                        u2721 11C4  
                                      u2641 0F4A                                        u3417 201E  
                                      u2481 1EF0                                        u1921 25B6  
                                      u1841 24B2                                        u1761 2334  
                                      u3337 295C                                        u2810 147C  
                                      u2730 1278                                        u2650 0F8C  
                                      u2490 1F14                                        u1930 25D0  
                                      u1850 24D8                                        u1770 234A  
                                      u2811 1478                                        u2731 1274  
                                      u2651 0F88                                        u3507 229C  
                                      u3427 208C                                        u2491 1F10  
                                      u1931 25CC                                        u1851 24D4  
                                      u1771 2346                                        u3347 29AC  
                                      u2900 1736                                        u2820 14BA  
                                      u2740 12B6                                        u2660 0FCA  
                                      u1940 25E4                                        u1860 2502  
                                      u1780 235A                                        u2901 1732  
                                      u2821 14B6                                        u2741 12B2  
                                      u2661 0FC6                                        u3517 230A  
                                      u3437 20FA                                        u1941 25E0  
                                      u1861 24FE                                        u1781 2356  
                                      u3357 2A18                                        u2910 1774  
                                      u2830 14F8                                        u2750 12F4  
                                      u2670 1092                                        u1950 25FE  
                                      u1870 2526                                        u1790 239E  
                                      u3278 2982                                        u2911 1770  
                                      u3607 15EC                                        u2831 14F4  
                                      u2751 12F0                                        u2671 108E  
                                      u3527 0FE8                                        u3447 2126  
                                      u1951 25FA                                        u1871 2522  
                                      u1791 239A                                        u3367 2A4A  
                                      u3287 27D4                                        u2920 17F8  
                                      u2840 157C                                        u2808 13C2  
                                      u2760 1332                                        u2680 10D0  
                                      u1960 2646                                        u1880 253C  
                                      u2921 17F4                                        u3617 17A6  
                                      u2841 1578                                        u2761 132E  
                                      u2681 10CC                                        u3537 1014  
                                      u3457 2152                                        u1961 2642  
                                      u1881 2538                                        u3377 2AA2  
                                      u3297 2818                                        u2930 1836  
                                      u2850 15BA                                        u2770 1370  
                                      u2690 110E                                        u1970 2676  
                                      u1890 255A                                        u3707 380C  
                                      u3627 1854                                        u2931 1832  
                                      u2851 15B6                                        u2771 136C  
                                      u2691 110A                                        u3547 1040  
                                      u3467 21AA                                        u1971 2672  
                                      u1891 2556                                        u3387 2ACE  
                                      u2940 18FE                                        u2860 163E  
                                      u2780 13AE                                        u1980 26A4  
                                      u3717 3836                                        u2941 18FA  
                                      u3637 1880                                        u2861 163A  
                                      u2781 13AA                                        u3557 11FA  
                                      u3477 21D6                                        u1981 26A0  
                                      u3397 2C0C                                        u2950 196C  
                                      u2870 167C                                        u2790 13C0  
                                      u1990 2C2E                                        u3727 3226  
                                      u2951 1968                                        u3647 18AC  
                                      u2871 1678                                        u2791 13B8  
                                      u3567 1226                                        u3487 2202  
                                      u1991 2C2A                                        u2960 19AC  
                                      u2880 16BA                                        u3737 3A28  
                                      u2961 19A8                                        u3657 1938  
                                      u2881 16B6                                        u3577 13FE  
                                      u3497 222E                                        u2970 1A26  
                                      u2890 16F8                                        u3747 3BF0  
                                      u2971 1A22                                        u3667 19CE  
                                      u2891 16F4                                        u3587 142A  
                                      u2980 1F7E                                        u3677 19FA  
                                      u3597 152A                                        u2981 1F7A  
                                      u2990 1FEC                                        u3687 1A44  
                                      u2991 1FE8                                        u3697 1A70  
                                      _bLED 3CB8                                        _gLED 3CB2  
                                      _rLED 3CAC                                        _main 26B8  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      fsr2l 000FD9                                        btemp 0057  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0034                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 0033                      __end_of_color_read_Red 3894  
                           __end_of_HighISR 0034                                ___param_bank 000000  
                    rangeCalibrate@calibCtr 007E                      rangeCalibrate@clearArr 0066  
                                     ?_bLED 0001                                       ?_gLED 0001  
                                     ?_rLED 0001                             __end_of___fladd 1F56  
                                     ?_main 0001                             __end_of___fldiv 26B8  
                           __end_of___lwdiv 3636                                       i2l116 3BDE  
                                     i2l230 3B52                                       i2l233 3B78  
                                     i2l242 3C98                                       i2l236 3CA2  
                                     i2l245 3C66                                       i2l521 3C12  
                                     i2l530 3AAA                                       i2l524 3B28  
                                     i2l527 3C5A                                       i2l536 0030  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 3C90                  __end_of_I2C_2_Master_Write 3C50  
                                     tablat 000FF5                       _Color_Interrupts_init 3BE0  
                           __end_of_reverse 32A8                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 3542                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 3984                       _I2C_2_Master_RepStart 3C68  
                           ?_color_read_Red 000D                                __end_of_bLED 3CBE  
                              __end_of_gLED 3CB8                             __initialization 3984  
                              __end_of_rLED 3CB2                                __end_of_main 29CE  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                            ??_rangeCalibrate 003D  
                                    ??_rLED 0009                                      ??_main 0080  
                             __activetblptr 000001                     __end_of_color_normalise 2F40  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l3026 3BC2                                      i2l3370 3BFA  
                                    i2l2724 3B52                                      i2l3372 3C04  
                                    i2l2726 3B62                                      i2l3374 3B00  
                                    i2l3376 3C50                                      i2l2780 3C94  
                                    i2l2774 3C9A                                      i2l2782 3C5E  
                                    i2l2776 3C9E                                      i2l2784 3C62  
                                    i2l3920 0024                                      i2l2778 3C90  
                                    i2l3746 3A7A                                      i2l3922 0028  
                                    _RG6PPS 000E88                                      i2l3924 002C  
                                    i2l3916 000A                                      i2l3918 001A  
                                 ??_HighISR 0009                    __end_of_color_click_init 3A48  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 2DD0    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 3C44  
                              _CCPTMRS0bits 000FAD                                      ___flge 30AC  
                                 ??___fladd 0011                                      ___wmul 3B7A  
                                 ??___fldiv 002A                                   ??___lwdiv 0013  
                                    clear_0 39A2                                      clear_1 39AE  
                                    clear_2 39BA                                      isa$std 000001  
                                    main@mL 00A2                                      main@mR 00AB  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 3A7A  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_reverse 0020    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 371A                            __end_of_turnPrep 3844  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 39C0                    __end_of_color_read_Clear 3934  
                  __end_of_color_read_Green 38E4                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 3C14  
                            __pcstackCOMRAM 0001                                __pidataBANK0 3CBE  
            __end_ofi2_persistence_register 3C5C                                ?_tricolorLED 0001  
                          ?_color_normalise 003B                     i2_Color_Interrupts_init 3BFA  
                        rangeCalibrate@RGBC 0060                                  __pbssBANK0 00B4  
                                __pbssBANK1 0100                            rangeCalibrate@mL 0062  
                          rangeCalibrate@mR 0064                           _color_writetoaddr 3BA0  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                         ??_calibSwitchInit 0009                          motor_response@temp 0027  
                     __end_of_motor_retrace 231E                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 3C38  
                                _buggy_path 00DB                                  _buggy_step 0051  
                   __end_of_Interrupts_init 3C2A                              _lowerThreshold 00D0  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 3BC0  
                        _I2C_2_Master_Start 3C86                         i2_I2C_2_Master_Idle 3B52  
                        _I2C_2_Master_Write 3C44                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 3C90                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fladd 1A96  
                                   ___fldiv 231E                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 35C2                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 004D  
                                   __pcinit 3984                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                   ?_turnPrep 0021  
                                   __ptext0 26B8                                     __ptext1 3C2A  
                                   __ptext2 3CAC                                     __ptext3 3CB2  
                                   __ptext4 3CB8                                     __ptext5 29CE  
                                   __ptext6 32A8                                     __ptext7 347C  
                                   __ptext8 3844                                     __ptext9 3894  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00EA                                     _reverse 31B0  
                             _RxBufWriteCnt 0056                                 motorTRIS@mL 0009  
                     ?_persistence_register 0001                                 motorTRIS@mR 000B  
                               wallSmash@mL 001C                                 wallSmash@mR 001E  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 39C0                 __end_ofi2_color_writetoaddr 3BE0  
                         ?_color_click_init 0001                           __end_of_motorTRIS 3C7C  
                         __end_of_wallSmash 3392                           __end_of_norm_stop 3A7A  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 3784                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                                _motorRinit 371A                               _interrupt_ctr 00D6  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 3542  
                                ??_turnLeft 0020                                  ??_turnPrep 0025  
                                 _PORTFbits 000F8E                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 36A8                       ??i2_I2C_2_Master_Stop 0002  
                               ___fladd@grs 0018                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 0035                                 ___fldiv@rem 002E  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 00B4  
                              _EUSART4TXbuf 0100                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 3AAC  
                            __end_of___flge 31B0                              _fullSpeedAhead 3392  
                            __end_of___wmul 3BA0                         color_read_Clear@tmp 0012  
                       start_initialization 3984                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                             _calibSwitchInit 3CA4  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 35C2  
                    __end_of_fullSpeedAhead 347C                                    ??___flge 0011  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009                         color_normalise@RGBC 003B  
                               __pdataBANK0 00EA               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 3CA4                __end_ofi2_I2C_2_Master_Write 3C68  
                                 ___fladd@a 000D                                   ___fladd@b 0009  
                                 ___fldiv@a 0026                                   ___fldiv@b 0022  
                               __pbssCOMRAM 003F                               __pcstackBANK0 0060  
                            _motor_response 0E18                                    ?_HighISR 0001  
                                 _amb_clear 004B                                   _amb_green 00D4  
                           motor_retrace@mL 0029                             motor_retrace@mR 002B  
                          ___lwdiv@dividend 000F                             motor_response@j 002F  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fladd 0009                                    ?___fldiv 0022  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 3B2A  
                         _I2C_2_Master_Init 3AAC                           _I2C_2_Master_Read 39D2  
                         _I2C_2_Master_Stop 3C7C                                _RxBufReadCnt 0055  
                                  ?_reverse 001C                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0013                      __end_of_motor_response 1A96  
                  initDCmotorsPWM@PWMperiod 0009                     __end_of_calibSwitchInit 3CAC  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u316_40 001A                                    i2u316_41 0016  
                                  _PIR0bits 000E33                                    i2u168_40 3B62  
                                  i2u168_41 3B5E                                    i2u169_40 3B78  
                                  i2u169_41 3B74                                    _PIR4bits 000E37  
                                  i2u375_47 3C0A                                   _motorTRIS 3C72  
                                 _wallSmash 32A8                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 3A48  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 3B52                   __end_of_I2C_2_Master_Init 3AD6  
                 __end_of_I2C_2_Master_Read 3A14                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3C86                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0053  
                  i2color_writetoaddr@value 0003                                   _turnRight 3636  
                            _rangeCalibrate 29CE               __end_of_Color_Interrupts_init 3BFA  
                           ?_motor_response 0027               __end_of_I2C_2_Master_RepStart 3C72  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 30AC  
                      i2_I2C_2_Master_Start 3C9A                        i2_I2C_2_Master_Write 3C5C  
                                  __Hrparam 0000                     motor_retrace@buggy_path 0027  
                         ??_color_normalise 003D                                  ?_motorTRIS 0009  
                                  __Lrparam 0000                                  ?_wallSmash 001C  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 3B2A                i2_Color_Interrupts_threshold 3B00  
               __end_ofi2_I2C_2_Master_Idle 3B7A                 __end_ofi2_I2C_2_Master_Stop 3C9A  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               _motor_retrace 1F56  
                                _ANSELFbits 000EB4                               ??_tricolorLED 0009  
                                  _amb_blue 00D2                                    ___xxtofl 2C1C  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                    __end_of_rangeCalibrate 2C1C                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 38E4                                    __ptext11 3934  
                                  __ptext20 3392                                    __ptext12 3C68  
                                  __ptext21 0E18                                    __ptext13 39D2  
                                  __ptext30 30AC                                    __ptext22 3636  
                                  __ptext14 2DD0                                    __ptext31 3C72  
                                  __ptext23 37EE                                    __ptext15 2C1C  
                                  __ptext40 3BE0                                    __ptext32 371A  
                                  __ptext24 31B0                                    __ptext16 231E  
                                  __ptext41 3BA0                                    __ptext33 3784  
                                  __ptext25 3A48                                    __ptext17 1A96  
                                  __ptext50 3BFA                                    __ptext42 3C44  
                                  __ptext34 3542                                    __ptext26 36A8  
                                  __ptext18 3C38                                    __ptext51 3BC0  
                                  __ptext43 3C7C                                    __ptext35 3A14  
                                  __ptext27 2F40                                    __ptext19 1F56  
                                  __ptext52 3C5C                                    __ptext44 3C86  
                                  __ptext36 3AAC                                    __ptext28 3B7A  
                                  __ptext53 3C90                                    __ptext45 3B2A  
                                  __ptext37 3CA4                                    __ptext29 35C2  
                                  __ptext54 3C9A                                    __ptext38 3C14  
                                  __ptext55 3B52                                    __ptext47 3A7A  
                                  __ptext39 3AD6                                    __ptext48 3C50  
                                  __ptext49 3B00                            ?_calibSwitchInit 0001  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  _lost_ctr 004F                                  turnPrep@mL 0021  
                                turnPrep@mR 0023                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 0082  
                                  int$flags 0057          __end_of_Color_Interrupts_threshold 3B00  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 3AD6  
                                  _turnLeft 36A8                                    _turnPrep 37EE  
                            ?_motor_retrace 0027                                  _INTCONbits 000FF2  
                           ?_rangeCalibrate 0060                                 _setMotorPWM 2F40  
                              motorLinit@mL 0009                         __end_of_tricolorLED 3C38  
                                  intlevel2 0000                                _motor_return 00DA  
                        __end_of_motorLinit 37EE                          __end_of_motorRinit 3784  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3C14  
                          _color_click_init 3A14                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00D8  
                    i2_persistence_register 3C50                                 ??_turnRight 0020  
                             ___fladd@signs 0015                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                                ___fladd@aexp 0016  
                    ??i2_I2C_2_Master_Write 0002                                ___fladd@bexp 0017  
                  ??_Color_Interrupts_clear 0009  
