

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 01 09:43:26 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    50                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    52   000000                     
    53                           ; Generated 06/04/2022 GMT
    54                           ; 
    55                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution. Publication is not required when
    69                           ;        this file is used in an embedded application.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC18F67K40 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87   000000                     
    88                           	psect	idataBANK0
    89   001BC4                     __pidataBANK0:
    90                           	callstack 0
    91                           
    92                           ;initializer for main@F14297
    93   001BC4  16                 	db	22
    94   001BC5  18                 	db	24
    95   001BC6  1A                 	db	26
    96   000000                     _LATHbits	set	3968
    97   000000                     _TX4REG	set	3812
    98   000000                     _RC4STAbits	set	3815
    99   000000                     _SP4BRGH	set	3814
   100   000000                     _TRISAbits	set	3969
   101   000000                     _SSP2CON2bits	set	3802
   102   000000                     _RX4PPS	set	3605
   103   000000                     _SSP2CLKPPS	set	3612
   104   000000                     _SSP2DATPPS	set	3613
   105   000000                     _ANSELDbits	set	3751
   106   000000                     _SSP2ADD	set	3798
   107   000000                     _SSP2CON1bits	set	3801
   108   000000                     _LATAbits	set	3961
   109   000000                     _LATGbits	set	3967
   110   000000                     _TRISGbits	set	3975
   111   000000                     _T2PR	set	4028
   112   000000                     _T2CONbits	set	4029
   113   000000                     _CCPR2H	set	4006
   114   000000                     _CCPR1H	set	4010
   115   000000                     _TRISDbits	set	3972
   116   000000                     _TRISEbits	set	3973
   117   000000                     _TRISFbits	set	3974
   118   000000                     _LATDbits	set	3964
   119   000000                     _LATEbits	set	3965
   120   000000                     _LATFbits	set	3966
   121   000000                     _RC4REG	set	3811
   122   000000                     _SP4BRGL	set	3813
   123   000000                     _TX4STAbits	set	3816
   124   000000                     _BAUD4CONbits	set	3817
   125   000000                     _SSP2CON2	set	3802
   126   000000                     _CCPR4H	set	3873
   127   000000                     _CCPR3H	set	3877
   128   000000                     _SSP2STAT	set	3800
   129   000000                     _SSP2BUF	set	3797
   130   000000                     _PIE0bits	set	3625
   131   000000                     _PIE4bits	set	3629
   132   000000                     _RC0PPS	set	3682
   133   000000                     _RC7PPS	set	3689
   134   000000                     _RD5PPS	set	3695
   135   000000                     _RE2PPS	set	3700
   136   000000                     _RD6PPS	set	3696
   137   000000                     _RE4PPS	set	3702
   138   000000                     _RG6PPS	set	3720
   139   000000                     _TMR0L	set	4051
   140   000000                     _TMR0H	set	4052
   141   000000                     _T0CON0bits	set	4053
   142   000000                     _T0CON1bits	set	4054
   143   000000                     _INTCONbits	set	4082
   144   000000                     _T2CLKCONbits	set	4031
   145   000000                     _T2HLTbits	set	4030
   146   000000                     _CCP1CONbits	set	4011
   147   000000                     _CCPTMRS0bits	set	4013
   148   000000                     _CCP2CONbits	set	4007
   149   000000                     _CCP3CONbits	set	3878
   150   000000                     _CCP4CONbits	set	3874
   151   000000                     _PIR0bits	set	3635
   152   000000                     _PIR4bits	set	3639
   153                           
   154                           	psect	smallconst
   155   000E00                     __psmallconst:
   156                           	callstack 0
   157   000E00  00                 	db	0
   158   000E01                     STR_1:
   159                           
   160                           ; BSR set to: 14
   161   000E01  52                 	db	82	;'R'
   162   000E02  47                 	db	71	;'G'
   163   000E03  42                 	db	66	;'B'
   164   000E04  43                 	db	67	;'C'
   165   000E05  3A                 	db	58	;':'
   166   000E06  25                 	db	37
   167   000E07  69                 	db	105	;'i'
   168   000E08  20                 	db	32
   169   000E09  25                 	db	37
   170   000E0A  69                 	db	105	;'i'
   171   000E0B  20                 	db	32
   172   000E0C  25                 	db	37
   173   000E0D  69                 	db	105	;'i'
   174   000E0E  20                 	db	32
   175   000E0F  25                 	db	37
   176   000E10  69                 	db	105	;'i'
   177   000E11  0A                 	db	10
   178   000E12  00                 	db	0
   179   000E13  00                 	db	0	; dummy byte at the end
   180   000000                     
   181                           ; #config settings
   182                           
   183                           	psect	cinit
   184   00192E                     __pcinit:
   185                           	callstack 0
   186   00192E                     start_initialization:
   187                           	callstack 0
   188   00192E                     __initialization:
   189                           	callstack 0
   190                           
   191                           ; Initialize objects allocated to BANK0 (3 bytes)
   192                           ; load TBLPTR registers with __pidataBANK0
   193   00192E  0EC4               	movlw	low __pidataBANK0
   194   001930  6EF6               	movwf	tblptrl,c
   195   001932  0E1B               	movlw	high __pidataBANK0
   196   001934  6EF7               	movwf	tblptrh,c
   197   001936  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   198   001938  6EF8               	movwf	tblptru,c
   199   00193A  0009               	tblrd		*+	;fetch initializer
   200   00193C  CFF5 F0F6          	movff	tablat,__pdataBANK0
   201   001940  0009               	tblrd		*+	;fetch initializer
   202   001942  CFF5 F0F7          	movff	tablat,__pdataBANK0+1
   203   001946  0009               	tblrd		*+	;fetch initializer
   204   001948  CFF5 F0F8          	movff	tablat,__pdataBANK0+2
   205                           
   206                           ; Clear objects allocated to BANK1 (112 bytes)
   207   00194C  EE01  F000         	lfsr	0,__pbssBANK1
   208   001950  0E70               	movlw	112
   209   001952                     clear_0:
   210   001952  6AEE               	clrf	postinc0,c
   211   001954  06E8               	decf	wreg,f,c
   212   001956  E1FD               	bnz	clear_0
   213                           
   214                           ; Clear objects allocated to BANK0 (8 bytes)
   215   001958  EE00  F0EE         	lfsr	0,__pbssBANK0
   216   00195C  0E08               	movlw	8
   217   00195E                     clear_1:
   218   00195E  6AEE               	clrf	postinc0,c
   219   001960  06E8               	decf	wreg,f,c
   220   001962  E1FD               	bnz	clear_1
   221                           
   222                           ; Clear objects allocated to COMRAM (1 bytes)
   223   001964  6A5C               	clrf	__pbssCOMRAM& (0+255),c
   224   001966                     end_of_initialization:
   225                           	callstack 0
   226   001966                     __end_of__initialization:
   227                           	callstack 0
   228   001966  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   001968  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   00196A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   231   00196C  6EF8               	movwf	tblptru,c
   232   00196E  0E0E               	movlw	high __Lsmallconst
   233   001970  6EF7               	movwf	tblptrh,c
   234   001972  0100               	movlb	0
   235   001974  EF08  F00B         	goto	_main	;jump to C main() function
   236                           
   237                           	psect	bssCOMRAM
   238   00005C                     __pbssCOMRAM:
   239                           	callstack 0
   240   00005C                     _TxBufWriteCnt:
   241                           	callstack 0
   242   00005C                     	ds	1
   243                           
   244                           	psect	bssBANK0
   245   0000EE                     __pbssBANK0:
   246                           	callstack 0
   247   0000EE                     _width:
   248                           	callstack 0
   249   0000EE                     	ds	2
   250   0000F0                     _prec:
   251                           	callstack 0
   252   0000F0                     	ds	2
   253   0000F2                     _flags:
   254                           	callstack 0
   255   0000F2                     	ds	1
   256   0000F3                     _TxBufReadCnt:
   257                           	callstack 0
   258   0000F3                     	ds	1
   259   0000F4                     _RxBufReadCnt:
   260                           	callstack 0
   261   0000F4                     	ds	1
   262   0000F5                     _RxBufWriteCnt:
   263                           	callstack 0
   264   0000F5                     	ds	1
   265                           
   266                           	psect	dataBANK0
   267   0000F6                     __pdataBANK0:
   268                           	callstack 0
   269   0000F6                     main@F14297:
   270                           	callstack 0
   271   0000F6                     	ds	3
   272                           
   273                           	psect	bssBANK1
   274   000100                     __pbssBANK1:
   275                           	callstack 0
   276   000100                     _EUSART4TXbuf:
   277                           	callstack 0
   278   000100                     	ds	60
   279   00013C                     _EUSART4RXbuf:
   280                           	callstack 0
   281   00013C                     	ds	20
   282   000150                     _dbuf:
   283                           	callstack 0
   284   000150                     	ds	32
   285                           
   286                           	psect	cstackBANK0
   287   000060                     __pcstackBANK0:
   288                           	callstack 0
   289   000060                     ?_sprintf:
   290                           	callstack 0
   291   000060                     sprintf@s:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x0
   295   000060                     	ds	2
   296   000062                     sprintf@fmt:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x2
   300   000062                     	ds	10
   301   00006C                     sprintf@ap:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0xC
   305   00006C                     	ds	2
   306   00006E                     sprintf@f:
   307                           	callstack 0
   308                           
   309                           ; 11 bytes @ 0xE
   310   00006E                     	ds	11
   311   000079                     colorVal2String@buf:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0x19
   315   000079                     	ds	2
   316   00007B                     colorVal2String@temp:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x1B
   320   00007B                     	ds	2
   321   00007D                     main@buf:
   322                           	callstack 0
   323                           
   324                           ; 100 bytes @ 0x1D
   325   00007D                     	ds	100
   326   0000E1                     main@rgb_address:
   327                           	callstack 0
   328                           
   329                           ; 3 bytes @ 0x81
   330   0000E1                     	ds	3
   331   0000E4                     _main$2528:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x84
   335   0000E4                     	ds	2
   336   0000E6                     main@RGBC:
   337                           	callstack 0
   338                           
   339                           ; 8 bytes @ 0x86
   340   0000E6                     	ds	8
   341                           
   342                           	psect	cstackCOMRAM
   343   000001                     __pcstackCOMRAM:
   344                           	callstack 0
   345   000001                     ??_HighISR:
   346   000001                     
   347                           ; 1 bytes @ 0x0
   348   000001                     	ds	1
   349   000002                     ??_I2C_2_Master_Idle:
   350   000002                     ?___aodiv:
   351                           	callstack 0
   352   000002                     ?___aomod:
   353                           	callstack 0
   354   000002                     sendCharSerial4@charToSend:
   355                           	callstack 0
   356   000002                     fputc@c:
   357                           	callstack 0
   358   000002                     ___aodiv@dividend:
   359                           	callstack 0
   360   000002                     ___aomod@dividend:
   361                           	callstack 0
   362                           
   363                           ; 8 bytes @ 0x1
   364   000002                     	ds	1
   365   000003                     ??_I2C_2_Master_Read:
   366   000003                     I2C_2_Master_Write@data_byte:
   367                           	callstack 0
   368   000003                     sendStringSerial4@string:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x2
   372   000003                     	ds	1
   373   000004                     color_writetoaddr@value:
   374                           	callstack 0
   375   000004                     I2C_2_Master_Read@ack:
   376                           	callstack 0
   377   000004                     fputc@fp:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x3
   381   000004                     	ds	1
   382   000005                     color_writetoaddr@address:
   383                           	callstack 0
   384   000005                     I2C_2_Master_Read@tmp:
   385                           	callstack 0
   386   000005                     sendStringSerial4@i:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x4
   390   000005                     	ds	1
   391   000006                     ??_fputc:
   392   000006                     ??_color_click_init:
   393   000006                     ?_color_read_Red:
   394                           	callstack 0
   395   000006                     ?_color_read_Green:
   396                           	callstack 0
   397   000006                     ?_color_read_Blue:
   398                           	callstack 0
   399   000006                     ?_color_read_Clear:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x5
   403   000006                     	ds	1
   404   000007                     RGBC2Serial@str:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x6
   408   000007                     	ds	1
   409   000008                     ??_color_read_Red:
   410   000008                     ??_color_read_Green:
   411   000008                     ??_color_read_Blue:
   412   000008                     ??_color_read_Clear:
   413                           
   414                           ; 1 bytes @ 0x7
   415   000008                     	ds	1
   416   000009                     ??_RGBC2Serial:
   417                           
   418                           ; 1 bytes @ 0x8
   419   000009                     	ds	1
   420   00000A                     ___aodiv@divisor:
   421                           	callstack 0
   422   00000A                     ___aomod@divisor:
   423                           	callstack 0
   424                           
   425                           ; 8 bytes @ 0x9
   426   00000A                     	ds	1
   427   00000B                     color_read_Red@tmp:
   428                           	callstack 0
   429   00000B                     color_read_Green@tmp:
   430                           	callstack 0
   431   00000B                     color_read_Blue@tmp:
   432                           	callstack 0
   433   00000B                     color_read_Clear@tmp:
   434                           	callstack 0
   435   00000B                     fputs@s:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xA
   439   00000B                     	ds	2
   440   00000D                     color_read_RGBC@temp:
   441                           	callstack 0
   442   00000D                     fputs@fp:
   443                           	callstack 0
   444                           
   445                           ; 2 bytes @ 0xC
   446   00000D                     	ds	2
   447   00000F                     fputs@c:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0xE
   451   00000F                     	ds	1
   452   000010                     fputs@i:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0xF
   456   000010                     	ds	2
   457   000012                     ___aodiv@counter:
   458                           	callstack 0
   459   000012                     ___aomod@counter:
   460                           	callstack 0
   461   000012                     pad@fp:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x11
   465   000012                     	ds	1
   466   000013                     ___aodiv@sign:
   467                           	callstack 0
   468   000013                     ___aomod@sign:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x12
   472   000013                     	ds	1
   473   000014                     ?_abs:
   474                           	callstack 0
   475   000014                     pad@buf:
   476                           	callstack 0
   477   000014                     abs@a:
   478                           	callstack 0
   479   000014                     ___aodiv@quotient:
   480                           	callstack 0
   481                           
   482                           ; 8 bytes @ 0x13
   483   000014                     	ds	2
   484   000016                     ??_abs:
   485   000016                     pad@p:
   486                           	callstack 0
   487                           
   488                           ; 2 bytes @ 0x15
   489   000016                     	ds	2
   490   000018                     ??_pad:
   491                           
   492                           ; 1 bytes @ 0x17
   493   000018                     	ds	1
   494   000019                     pad@i:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x18
   498   000019                     	ds	2
   499   00001B                     pad@w:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1A
   503   00001B                     	ds	2
   504   00001D                     dtoa@fp:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x1C
   508   00001D                     	ds	2
   509   00001F                     dtoa@d:
   510                           	callstack 0
   511                           
   512                           ; 8 bytes @ 0x1E
   513   00001F                     	ds	8
   514   000027                     ??_dtoa:
   515                           
   516                           ; 1 bytes @ 0x26
   517   000027                     	ds	8
   518   00002F                     _dtoa$2202:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x2E
   522   00002F                     	ds	2
   523   000031                     dtoa@p:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x30
   527   000031                     	ds	2
   528   000033                     dtoa@w:
   529                           	callstack 0
   530                           
   531                           ; 2 bytes @ 0x32
   532   000033                     	ds	2
   533   000035                     dtoa@n:
   534                           	callstack 0
   535                           
   536                           ; 8 bytes @ 0x34
   537   000035                     	ds	8
   538   00003D                     dtoa@i:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x3C
   542   00003D                     	ds	2
   543   00003F                     dtoa@s:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x3E
   547   00003F                     	ds	1
   548   000040                     vfpfcnvrt@fp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x3F
   552   000040                     	ds	2
   553   000042                     vfpfcnvrt@fmt:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x41
   557   000042                     	ds	2
   558   000044                     vfpfcnvrt@ap:
   559                           	callstack 0
   560                           
   561                           ; 2 bytes @ 0x43
   562   000044                     	ds	2
   563   000046                     ??_vfpfcnvrt:
   564                           
   565                           ; 1 bytes @ 0x45
   566   000046                     	ds	2
   567   000048                     vfpfcnvrt@convarg:
   568                           	callstack 0
   569                           
   570                           ; 8 bytes @ 0x47
   571   000048                     	ds	8
   572   000050                     vfpfcnvrt@cp:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x4F
   576   000050                     	ds	2
   577   000052                     ?_vfprintf:
   578                           	callstack 0
   579   000052                     vfprintf@fp:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x51
   583   000052                     	ds	2
   584   000054                     vfprintf@fmt:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x53
   588   000054                     	ds	2
   589   000056                     vfprintf@ap:
   590                           	callstack 0
   591                           
   592                           ; 2 bytes @ 0x55
   593   000056                     	ds	2
   594   000058                     vfprintf@cfmt:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x57
   598   000058                     	ds	2
   599   00005A                     ??_main:
   600                           
   601                           ; 1 bytes @ 0x59
   602   00005A                     	ds	2
   603                           
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 20 in file "main.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;  buf           100   29[BANK0 ] unsigned char [100]
   614 ;;  RGBC            8  134[BANK0 ] struct RGBC_val
   615 ;;  rgb_address     3  129[BANK0 ] unsigned char [3]
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   626 ;;      Locals:         0     113       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   627 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   628 ;;      Totals:         2     113       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   629 ;;Total ram usage:      115 bytes
   630 ;; Hardware stack levels required when called: 10
   631 ;; This function calls:
   632 ;;		_RGBC2Serial
   633 ;;		_colorVal2String
   634 ;;		_color_click_init
   635 ;;		_color_read_RGBC
   636 ;;		_initUSART4
   637 ;;		_tricolorLED
   638 ;; This function is called by:
   639 ;;		Startup code after reset
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           	psect	text0
   644   001610                     __ptext0:
   645                           	callstack 0
   646   001610                     _main:
   647                           	callstack 21
   648   001610                     
   649                           ;main.c: 22:     struct RGBC_val RGBC;;main.c: 24:     color_click_init();
   650   001610  EC3F  F00D         	call	_color_click_init	;wreg free
   651   001614                     
   652                           ;main.c: 25:     initUSART4();
   653   001614  EC95  F00D         	call	_initUSART4	;wreg free
   654   001618                     
   655                           ;main.c: 28:     TRISDbits.TRISD3 = 0;
   656   001618  9684               	bcf	132,3,c	;volatile
   657   00161A                     
   658                           ;main.c: 29:     LATDbits.LATD3 = 1;
   659   00161A  867C               	bsf	124,3,c	;volatile
   660   00161C                     
   661                           ;main.c: 31:     tricolorLED();
   662   00161C  ECC2  F00D         	call	_tricolorLED	;wreg free
   663   001620                     
   664                           ;main.c: 32:     char rgb_address[]={0x16, 0x18, 0x1A};
   665   001620  C0F6  F0E1         	movff	main@F14297,main@rgb_address
   666   001624  C0F7  F0E2         	movff	main@F14297+1,main@rgb_address+1
   667   001628  C0F8  F0E3         	movff	main@F14297+2,main@rgb_address+2
   668   00162C                     
   669                           ;main.c: 44:     char buf[100];;main.c: 45:     color_read_RGBC(&RGBC);
   670   00162C  0EE6               	movlw	low main@RGBC
   671   00162E  6E0D               	movwf	color_read_RGBC@temp^0,c
   672   001630  0E00               	movlw	high main@RGBC
   673   001632  6E0E               	movwf	(color_read_RGBC@temp+1)^0,c
   674   001634  EC78  F00B         	call	_color_read_RGBC	;wreg free
   675   001638                     
   676                           ;main.c: 46:     colorVal2String(buf,&RGBC);
   677   001638  0E7D               	movlw	low main@buf
   678   00163A  0100               	movlb	0	; () banked
   679   00163C  6F79               	movwf	colorVal2String@buf& (0+255),b
   680   00163E  0E00               	movlw	high main@buf
   681   001640  6F7A               	movwf	(colorVal2String@buf+1)& (0+255),b
   682   001642  0EE6               	movlw	low main@RGBC
   683   001644  6F7B               	movwf	colorVal2String@temp& (0+255),b
   684   001646  0E00               	movlw	high main@RGBC
   685   001648  6F7C               	movwf	(colorVal2String@temp+1)& (0+255),b
   686   00164A  EC40  F00B         	call	_colorVal2String	;wreg free
   687   00164E                     
   688                           ;main.c: 47:     RGBC2Serial(colorVal2String(buf,&RGBC));
   689   00164E  0E7D               	movlw	low main@buf
   690   001650  0100               	movlb	0	; () banked
   691   001652  6F79               	movwf	colorVal2String@buf& (0+255),b
   692   001654  0E00               	movlw	high main@buf
   693   001656  6F7A               	movwf	(colorVal2String@buf+1)& (0+255),b
   694   001658  0EE6               	movlw	low main@RGBC
   695   00165A  6F7B               	movwf	colorVal2String@temp& (0+255),b
   696   00165C  0E00               	movlw	high main@RGBC
   697   00165E  6F7C               	movwf	(colorVal2String@temp+1)& (0+255),b
   698   001660  EC40  F00B         	call	_colorVal2String	;wreg free
   699   001664  6E5A               	movwf	??_main^0,c
   700   001666  6A5B               	clrf	(??_main+1)^0,c
   701   001668  C05A  F0E4         	movff	??_main,_main$2528
   702   00166C  C05B  F0E5         	movff	??_main+1,_main$2528+1
   703   001670                     
   704                           ;main.c: 47:     RGBC2Serial(colorVal2String(buf,&RGBC));
   705   001670  C0E4  F007         	movff	_main$2528,RGBC2Serial@str
   706   001674  C0E5  F008         	movff	_main$2528+1,RGBC2Serial@str+1
   707   001678  EC82  F00D         	call	_RGBC2Serial	;wreg free
   708   00167C  EF23  F000         	goto	start
   709   001680                     __end_of_main:
   710                           	callstack 0
   711                           
   712 ;; *************** function _tricolorLED *****************
   713 ;; Defined at:
   714 ;;		line 102 in file "color.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		None
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   732 ;;Total ram usage:        0 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; Hardware stack levels required when called: 1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_main
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text1
   743   001B84                     __ptext1:
   744                           	callstack 0
   745   001B84                     _tricolorLED:
   746                           	callstack 29
   747   001B84                     
   748                           ;color.c: 104:     TRISGbits.TRISG0 = 0;
   749   001B84  9087               	bcf	135,0,c	;volatile
   750                           
   751                           ;color.c: 105:     LATGbits.LATG0 = 1;
   752   001B86  807F               	bsf	127,0,c	;volatile
   753                           
   754                           ;color.c: 106:     TRISAbits.TRISA4 = 0;
   755   001B88  9881               	bcf	129,4,c	;volatile
   756                           
   757                           ;color.c: 107:     LATAbits.LATA4= 1;
   758   001B8A  8879               	bsf	121,4,c	;volatile
   759                           
   760                           ;color.c: 108:     TRISFbits.TRISF7 = 0;
   761   001B8C  9E86               	bcf	134,7,c	;volatile
   762                           
   763                           ;color.c: 109:     LATFbits.LATF7 = 1;
   764   001B8E  8E7E               	bsf	126,7,c	;volatile
   765                           
   766                           ;color.c: 110:     TRISAbits.TRISA3 = 0;
   767   001B90  9681               	bcf	129,3,c	;volatile
   768                           
   769                           ;color.c: 111:     LATAbits.LATA3 = 1;
   770   001B92  8679               	bsf	121,3,c	;volatile
   771                           
   772                           ;color.c: 112:     TRISEbits.TRISE7 = 0;
   773   001B94  9E85               	bcf	133,7,c	;volatile
   774                           
   775                           ;color.c: 113:     LATEbits.LATE7 = 1;
   776   001B96  8E7D               	bsf	125,7,c	;volatile
   777   001B98  0012               	return		;funcret
   778   001B9A                     __end_of_tricolorLED:
   779                           	callstack 0
   780                           
   781 ;; *************** function _initUSART4 *****************
   782 ;; Defined at:
   783 ;;		line 4 in file "../lab-5-areeb-atulit.X/serial.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text2
   812   001B2A                     __ptext2:
   813                           	callstack 0
   814   001B2A                     _initUSART4:
   815                           	callstack 29
   816   001B2A                     
   817                           ;../lab-5-areeb-atulit.X/serial.c: 8:     RC0PPS = 0x12;
   818   001B2A  0E12               	movlw	18
   819   001B2C  010E               	movlb	14	; () banked
   820   001B2E  6F62               	movwf	98,b	;volatile
   821                           
   822                           ;../lab-5-areeb-atulit.X/serial.c: 9:     RX4PPS = 0x11;
   823   001B30  0E11               	movlw	17
   824   001B32  6F15               	movwf	21,b	;volatile
   825   001B34                     
   826                           ; BSR set to: 14
   827                           ;../lab-5-areeb-atulit.X/serial.c: 10:     BAUD4CONbits.BRG16 = 0;
   828   001B34  97E9               	bcf	233,3,b	;volatile
   829   001B36                     
   830                           ; BSR set to: 14
   831                           ;../lab-5-areeb-atulit.X/serial.c: 11:     TX4STAbits.BRGH = 0;
   832   001B36  95E8               	bcf	232,2,b	;volatile
   833                           
   834                           ;../lab-5-areeb-atulit.X/serial.c: 12:     SP4BRGL = 103;
   835   001B38  0E67               	movlw	103
   836   001B3A  6FE5               	movwf	229,b	;volatile
   837                           
   838                           ;../lab-5-areeb-atulit.X/serial.c: 13:     SP4BRGH = 0;
   839   001B3C  0E00               	movlw	0
   840   001B3E  6FE6               	movwf	230,b	;volatile
   841   001B40                     
   842                           ; BSR set to: 14
   843                           ;../lab-5-areeb-atulit.X/serial.c: 15:     RC4STAbits.CREN = 1;
   844   001B40  89E7               	bsf	231,4,b	;volatile
   845   001B42                     
   846                           ; BSR set to: 14
   847                           ;../lab-5-areeb-atulit.X/serial.c: 16:     TX4STAbits.TXEN = 1;
   848   001B42  8BE8               	bsf	232,5,b	;volatile
   849   001B44                     
   850                           ; BSR set to: 14
   851                           ;../lab-5-areeb-atulit.X/serial.c: 17:     RC4STAbits.SPEN = 1;
   852   001B44  8FE7               	bsf	231,7,b	;volatile
   853   001B46                     
   854                           ; BSR set to: 14
   855                           ;../lab-5-areeb-atulit.X/serial.c: 18:     PIE4bits.RC4IE=1;
   856   001B46  872D               	bsf	45,3,b	;volatile
   857   001B48                     
   858                           ; BSR set to: 14
   859                           ;../lab-5-areeb-atulit.X/serial.c: 19:     PIE4bits.TX4IE=1;
   860   001B48  852D               	bsf	45,2,b	;volatile
   861   001B4A                     
   862                           ; BSR set to: 14
   863   001B4A  0012               	return		;funcret
   864   001B4C                     __end_of_initUSART4:
   865                           	callstack 0
   866                           
   867 ;; *************** function _color_read_RGBC *****************
   868 ;; Defined at:
   869 ;;		line 90 in file "color.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;  temp            2   12[COMRAM] PTR struct RGBC_val
   872 ;;		 -> main@RGBC(8), 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;		None
   875 ;; Return value:  Size  Location     Type
   876 ;;                  1    wreg      void 
   877 ;; Registers used:
   878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   888 ;;Total ram usage:        2 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 4
   891 ;; This function calls:
   892 ;;		_color_read_Blue
   893 ;;		_color_read_Clear
   894 ;;		_color_read_Green
   895 ;;		_color_read_Red
   896 ;; This function is called by:
   897 ;;		_main
   898 ;; This function uses a non-reentrant model
   899 ;;
   900                           
   901                           	psect	text3
   902   0016F0                     __ptext3:
   903                           	callstack 0
   904   0016F0                     _color_read_RGBC:
   905                           	callstack 26
   906   0016F0                     
   907                           ;color.c: 91:     temp->R = color_read_Red();
   908   0016F0  ECD0  F00B         	call	_color_read_Red	;wreg free
   909   0016F4  C00D  FFD9         	movff	color_read_RGBC@temp,fsr2l
   910   0016F8  C00E  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
   911   0016FC  C006  FFDE         	movff	?_color_read_Red,postinc2
   912   001700  C007  FFDD         	movff	?_color_read_Red+1,postdec2
   913                           
   914                           ;color.c: 92:     temp->B = color_read_Blue();
   915   001704  EC48  F00C         	call	_color_read_Blue	;wreg free
   916   001708  EE20 F004          	lfsr	2,4
   917   00170C  500D               	movf	color_read_RGBC@temp^0,w,c
   918   00170E  26D9               	addwf	fsr2l,f,c
   919   001710  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   920   001712  22DA               	addwfc	fsr2h,f,c
   921   001714  C006  FFDE         	movff	?_color_read_Blue,postinc2
   922   001718  C007  FFDD         	movff	?_color_read_Blue+1,postdec2
   923                           
   924                           ;color.c: 93:     temp->G = color_read_Green();
   925   00171C  ECF8  F00B         	call	_color_read_Green	;wreg free
   926   001720  EE20 F002          	lfsr	2,2
   927   001724  500D               	movf	color_read_RGBC@temp^0,w,c
   928   001726  26D9               	addwf	fsr2l,f,c
   929   001728  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   930   00172A  22DA               	addwfc	fsr2h,f,c
   931   00172C  C006  FFDE         	movff	?_color_read_Green,postinc2
   932   001730  C007  FFDD         	movff	?_color_read_Green+1,postdec2
   933                           
   934                           ;color.c: 94:     temp->C = color_read_Clear();
   935   001734  EC20  F00C         	call	_color_read_Clear	;wreg free
   936   001738  EE20 F006          	lfsr	2,6
   937   00173C  500D               	movf	color_read_RGBC@temp^0,w,c
   938   00173E  26D9               	addwf	fsr2l,f,c
   939   001740  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   940   001742  22DA               	addwfc	fsr2h,f,c
   941   001744  C006  FFDE         	movff	?_color_read_Clear,postinc2
   942   001748  C007  FFDD         	movff	?_color_read_Clear+1,postdec2
   943   00174C  0012               	return		;funcret
   944   00174E                     __end_of_color_read_RGBC:
   945                           	callstack 0
   946                           
   947 ;; *************** function _color_read_Red *****************
   948 ;; Defined at:
   949 ;;		line 31 in file "color.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;		None
   952 ;; Auto vars:     Size  Location     Type
   953 ;;  tmp             2   10[COMRAM] unsigned int 
   954 ;; Return value:  Size  Location     Type
   955 ;;                  2    5[COMRAM] unsigned int 
   956 ;; Registers used:
   957 ;;		wreg, status,2, status,0, cstack
   958 ;; Tracked objects:
   959 ;;		On entry : 0/0
   960 ;;		On exit  : 0/0
   961 ;;		Unchanged: 0/0
   962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   963 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   967 ;;Total ram usage:        7 bytes
   968 ;; Hardware stack levels used: 1
   969 ;; Hardware stack levels required when called: 3
   970 ;; This function calls:
   971 ;;		_I2C_2_Master_Read
   972 ;;		_I2C_2_Master_RepStart
   973 ;;		_I2C_2_Master_Start
   974 ;;		_I2C_2_Master_Stop
   975 ;;		_I2C_2_Master_Write
   976 ;; This function is called by:
   977 ;;		_color_read_RGBC
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           	psect	text4
   982   0017A0                     __ptext4:
   983                           	callstack 0
   984   0017A0                     _color_read_Red:
   985                           	callstack 26
   986   0017A0                     
   987                           ;color.c: 33:  unsigned int tmp;;color.c: 34:  I2C_2_Master_Start();
   988   0017A0  ECDD  F00D         	call	_I2C_2_Master_Start	;wreg free
   989                           
   990                           ;color.c: 35:  I2C_2_Master_Write(0x52 | 0x00);
   991   0017A4  0E52               	movlw	82
   992   0017A6  ECCD  F00D         	call	_I2C_2_Master_Write
   993                           
   994                           ;color.c: 36:  I2C_2_Master_Write(0xA0 | 0x16);
   995   0017AA  0EB6               	movlw	182
   996   0017AC  ECCD  F00D         	call	_I2C_2_Master_Write
   997                           
   998                           ;color.c: 37:  I2C_2_Master_RepStart();
   999   0017B0  ECD3  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1000                           
  1001                           ;color.c: 38:  I2C_2_Master_Write(0x52 | 0x01);
  1002   0017B4  0E53               	movlw	83
  1003   0017B6  ECCD  F00D         	call	_I2C_2_Master_Write
  1004                           
  1005                           ;color.c: 39:  tmp=I2C_2_Master_Read(1);
  1006   0017BA  0E01               	movlw	1
  1007   0017BC  ECDE  F00C         	call	_I2C_2_Master_Read
  1008   0017C0  6E08               	movwf	??_color_read_Red^0,c
  1009   0017C2  5008               	movf	??_color_read_Red^0,w,c
  1010   0017C4  6E0B               	movwf	color_read_Red@tmp^0,c
  1011   0017C6  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
  1012                           
  1013                           ;color.c: 40:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1014   0017C8  0E00               	movlw	0
  1015   0017CA  ECDE  F00C         	call	_I2C_2_Master_Read
  1016   0017CE  6E08               	movwf	??_color_read_Red^0,c
  1017   0017D0  5008               	movf	??_color_read_Red^0,w,c
  1018   0017D2  6E0A               	movwf	(??_color_read_Red+2)^0,c
  1019   0017D4  6A09               	clrf	(??_color_read_Red+1)^0,c
  1020   0017D6  500B               	movf	color_read_Red@tmp^0,w,c
  1021   0017D8  1009               	iorwf	(??_color_read_Red+1)^0,w,c
  1022   0017DA  6E0B               	movwf	color_read_Red@tmp^0,c
  1023   0017DC  500C               	movf	(color_read_Red@tmp+1)^0,w,c
  1024   0017DE  100A               	iorwf	(??_color_read_Red+2)^0,w,c
  1025   0017E0  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
  1026                           
  1027                           ;color.c: 41:  I2C_2_Master_Stop();
  1028   0017E2  ECD8  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1029   0017E6                     
  1030                           ;color.c: 42:  return tmp;
  1031   0017E6  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
  1032   0017EA  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1033   0017EE  0012               	return		;funcret
  1034   0017F0                     __end_of_color_read_Red:
  1035                           	callstack 0
  1036                           
  1037 ;; *************** function _color_read_Green *****************
  1038 ;; Defined at:
  1039 ;;		line 45 in file "color.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;		None
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  tmp             2   10[COMRAM] unsigned int 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  2    5[COMRAM] unsigned int 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1055 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1057 ;;Total ram usage:        7 bytes
  1058 ;; Hardware stack levels used: 1
  1059 ;; Hardware stack levels required when called: 3
  1060 ;; This function calls:
  1061 ;;		_I2C_2_Master_Read
  1062 ;;		_I2C_2_Master_RepStart
  1063 ;;		_I2C_2_Master_Start
  1064 ;;		_I2C_2_Master_Stop
  1065 ;;		_I2C_2_Master_Write
  1066 ;; This function is called by:
  1067 ;;		_color_read_RGBC
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text5
  1072   0017F0                     __ptext5:
  1073                           	callstack 0
  1074   0017F0                     _color_read_Green:
  1075                           	callstack 26
  1076   0017F0                     
  1077                           ;color.c: 47:  unsigned int tmp;;color.c: 48:  I2C_2_Master_Start();
  1078   0017F0  ECDD  F00D         	call	_I2C_2_Master_Start	;wreg free
  1079                           
  1080                           ;color.c: 49:  I2C_2_Master_Write(0x52 | 0x00);
  1081   0017F4  0E52               	movlw	82
  1082   0017F6  ECCD  F00D         	call	_I2C_2_Master_Write
  1083                           
  1084                           ;color.c: 50:  I2C_2_Master_Write(0xA0 | 0x18);
  1085   0017FA  0EB8               	movlw	184
  1086   0017FC  ECCD  F00D         	call	_I2C_2_Master_Write
  1087                           
  1088                           ;color.c: 51:  I2C_2_Master_RepStart();
  1089   001800  ECD3  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1090                           
  1091                           ;color.c: 52:  I2C_2_Master_Write(0x52 | 0x01);
  1092   001804  0E53               	movlw	83
  1093   001806  ECCD  F00D         	call	_I2C_2_Master_Write
  1094                           
  1095                           ;color.c: 53:  tmp=I2C_2_Master_Read(1);
  1096   00180A  0E01               	movlw	1
  1097   00180C  ECDE  F00C         	call	_I2C_2_Master_Read
  1098   001810  6E08               	movwf	??_color_read_Green^0,c
  1099   001812  5008               	movf	??_color_read_Green^0,w,c
  1100   001814  6E0B               	movwf	color_read_Green@tmp^0,c
  1101   001816  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
  1102                           
  1103                           ;color.c: 54:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1104   001818  0E00               	movlw	0
  1105   00181A  ECDE  F00C         	call	_I2C_2_Master_Read
  1106   00181E  6E08               	movwf	??_color_read_Green^0,c
  1107   001820  5008               	movf	??_color_read_Green^0,w,c
  1108   001822  6E0A               	movwf	(??_color_read_Green+2)^0,c
  1109   001824  6A09               	clrf	(??_color_read_Green+1)^0,c
  1110   001826  500B               	movf	color_read_Green@tmp^0,w,c
  1111   001828  1009               	iorwf	(??_color_read_Green+1)^0,w,c
  1112   00182A  6E0B               	movwf	color_read_Green@tmp^0,c
  1113   00182C  500C               	movf	(color_read_Green@tmp+1)^0,w,c
  1114   00182E  100A               	iorwf	(??_color_read_Green+2)^0,w,c
  1115   001830  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
  1116                           
  1117                           ;color.c: 55:  I2C_2_Master_Stop();
  1118   001832  ECD8  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1119   001836                     
  1120                           ;color.c: 56:  return tmp;
  1121   001836  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
  1122   00183A  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1123   00183E  0012               	return		;funcret
  1124   001840                     __end_of_color_read_Green:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _color_read_Clear *****************
  1128 ;; Defined at:
  1129 ;;		line 73 in file "color.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  tmp             2   10[COMRAM] unsigned int 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2    5[COMRAM] unsigned int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1145 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1146 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1147 ;;Total ram usage:        7 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 3
  1150 ;; This function calls:
  1151 ;;		_I2C_2_Master_Read
  1152 ;;		_I2C_2_Master_RepStart
  1153 ;;		_I2C_2_Master_Start
  1154 ;;		_I2C_2_Master_Stop
  1155 ;;		_I2C_2_Master_Write
  1156 ;; This function is called by:
  1157 ;;		_color_read_RGBC
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text6
  1162   001840                     __ptext6:
  1163                           	callstack 0
  1164   001840                     _color_read_Clear:
  1165                           	callstack 26
  1166   001840                     
  1167                           ;color.c: 75:  unsigned int tmp;;color.c: 76:  I2C_2_Master_Start();
  1168   001840  ECDD  F00D         	call	_I2C_2_Master_Start	;wreg free
  1169                           
  1170                           ;color.c: 77:  I2C_2_Master_Write(0x52 | 0x00);
  1171   001844  0E52               	movlw	82
  1172   001846  ECCD  F00D         	call	_I2C_2_Master_Write
  1173                           
  1174                           ;color.c: 78:  I2C_2_Master_Write(0xA0 | 0x14);
  1175   00184A  0EB4               	movlw	180
  1176   00184C  ECCD  F00D         	call	_I2C_2_Master_Write
  1177                           
  1178                           ;color.c: 79:  I2C_2_Master_RepStart();
  1179   001850  ECD3  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1180                           
  1181                           ;color.c: 80:  I2C_2_Master_Write(0x52 | 0x01);
  1182   001854  0E53               	movlw	83
  1183   001856  ECCD  F00D         	call	_I2C_2_Master_Write
  1184                           
  1185                           ;color.c: 81:  tmp=I2C_2_Master_Read(1);
  1186   00185A  0E01               	movlw	1
  1187   00185C  ECDE  F00C         	call	_I2C_2_Master_Read
  1188   001860  6E08               	movwf	??_color_read_Clear^0,c
  1189   001862  5008               	movf	??_color_read_Clear^0,w,c
  1190   001864  6E0B               	movwf	color_read_Clear@tmp^0,c
  1191   001866  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
  1192                           
  1193                           ;color.c: 82:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1194   001868  0E00               	movlw	0
  1195   00186A  ECDE  F00C         	call	_I2C_2_Master_Read
  1196   00186E  6E08               	movwf	??_color_read_Clear^0,c
  1197   001870  5008               	movf	??_color_read_Clear^0,w,c
  1198   001872  6E0A               	movwf	(??_color_read_Clear+2)^0,c
  1199   001874  6A09               	clrf	(??_color_read_Clear+1)^0,c
  1200   001876  500B               	movf	color_read_Clear@tmp^0,w,c
  1201   001878  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
  1202   00187A  6E0B               	movwf	color_read_Clear@tmp^0,c
  1203   00187C  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
  1204   00187E  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
  1205   001880  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
  1206                           
  1207                           ;color.c: 83:  I2C_2_Master_Stop();
  1208   001882  ECD8  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1209   001886                     
  1210                           ;color.c: 84:  return tmp;
  1211   001886  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
  1212   00188A  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1213   00188E  0012               	return		;funcret
  1214   001890                     __end_of_color_read_Clear:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _color_read_Blue *****************
  1218 ;; Defined at:
  1219 ;;		line 59 in file "color.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;		None
  1222 ;; Auto vars:     Size  Location     Type
  1223 ;;  tmp             2   10[COMRAM] unsigned int 
  1224 ;; Return value:  Size  Location     Type
  1225 ;;                  2    5[COMRAM] unsigned int 
  1226 ;; Registers used:
  1227 ;;		wreg, status,2, status,0, cstack
  1228 ;; Tracked objects:
  1229 ;;		On entry : 0/0
  1230 ;;		On exit  : 0/0
  1231 ;;		Unchanged: 0/0
  1232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1235 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1236 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1237 ;;Total ram usage:        7 bytes
  1238 ;; Hardware stack levels used: 1
  1239 ;; Hardware stack levels required when called: 3
  1240 ;; This function calls:
  1241 ;;		_I2C_2_Master_Read
  1242 ;;		_I2C_2_Master_RepStart
  1243 ;;		_I2C_2_Master_Start
  1244 ;;		_I2C_2_Master_Stop
  1245 ;;		_I2C_2_Master_Write
  1246 ;; This function is called by:
  1247 ;;		_color_read_RGBC
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           	psect	text7
  1252   001890                     __ptext7:
  1253                           	callstack 0
  1254   001890                     _color_read_Blue:
  1255                           	callstack 26
  1256   001890                     
  1257                           ;color.c: 61:  unsigned int tmp;;color.c: 62:  I2C_2_Master_Start();
  1258   001890  ECDD  F00D         	call	_I2C_2_Master_Start	;wreg free
  1259                           
  1260                           ;color.c: 63:  I2C_2_Master_Write(0x52 | 0x00);
  1261   001894  0E52               	movlw	82
  1262   001896  ECCD  F00D         	call	_I2C_2_Master_Write
  1263                           
  1264                           ;color.c: 64:  I2C_2_Master_Write(0xA0 | 0x1A);
  1265   00189A  0EBA               	movlw	186
  1266   00189C  ECCD  F00D         	call	_I2C_2_Master_Write
  1267                           
  1268                           ;color.c: 65:  I2C_2_Master_RepStart();
  1269   0018A0  ECD3  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1270                           
  1271                           ;color.c: 66:  I2C_2_Master_Write(0x52 | 0x01);
  1272   0018A4  0E53               	movlw	83
  1273   0018A6  ECCD  F00D         	call	_I2C_2_Master_Write
  1274                           
  1275                           ;color.c: 67:  tmp=I2C_2_Master_Read(1);
  1276   0018AA  0E01               	movlw	1
  1277   0018AC  ECDE  F00C         	call	_I2C_2_Master_Read
  1278   0018B0  6E08               	movwf	??_color_read_Blue^0,c
  1279   0018B2  5008               	movf	??_color_read_Blue^0,w,c
  1280   0018B4  6E0B               	movwf	color_read_Blue@tmp^0,c
  1281   0018B6  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
  1282                           
  1283                           ;color.c: 68:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1284   0018B8  0E00               	movlw	0
  1285   0018BA  ECDE  F00C         	call	_I2C_2_Master_Read
  1286   0018BE  6E08               	movwf	??_color_read_Blue^0,c
  1287   0018C0  5008               	movf	??_color_read_Blue^0,w,c
  1288   0018C2  6E0A               	movwf	(??_color_read_Blue+2)^0,c
  1289   0018C4  6A09               	clrf	(??_color_read_Blue+1)^0,c
  1290   0018C6  500B               	movf	color_read_Blue@tmp^0,w,c
  1291   0018C8  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
  1292   0018CA  6E0B               	movwf	color_read_Blue@tmp^0,c
  1293   0018CC  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
  1294   0018CE  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
  1295   0018D0  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
  1296                           
  1297                           ;color.c: 69:  I2C_2_Master_Stop();
  1298   0018D2  ECD8  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1299   0018D6                     
  1300                           ;color.c: 70:  return tmp;
  1301   0018D6  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
  1302   0018DA  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1303   0018DE  0012               	return		;funcret
  1304   0018E0                     __end_of_color_read_Blue:
  1305                           	callstack 0
  1306                           
  1307 ;; *************** function _I2C_2_Master_RepStart *****************
  1308 ;; Defined at:
  1309 ;;		line 33 in file "i2c.c"
  1310 ;; Parameters:    Size  Location     Type
  1311 ;;		None
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;		None
  1314 ;; Return value:  Size  Location     Type
  1315 ;;                  1    wreg      void 
  1316 ;; Registers used:
  1317 ;;		wreg, status,2, status,0, cstack
  1318 ;; Tracked objects:
  1319 ;;		On entry : 0/0
  1320 ;;		On exit  : 0/0
  1321 ;;		Unchanged: 0/0
  1322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1327 ;;Total ram usage:        0 bytes
  1328 ;; Hardware stack levels used: 1
  1329 ;; Hardware stack levels required when called: 2
  1330 ;; This function calls:
  1331 ;;		_I2C_2_Master_Idle
  1332 ;; This function is called by:
  1333 ;;		_color_read_Red
  1334 ;;		_color_read_Green
  1335 ;;		_color_read_Blue
  1336 ;;		_color_read_Clear
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text8
  1341   001BA6                     __ptext8:
  1342                           	callstack 0
  1343   001BA6                     _I2C_2_Master_RepStart:
  1344                           	callstack 26
  1345   001BA6                     
  1346                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1347   001BA6  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1348   001BAA                     
  1349                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1350   001BAA  010E               	movlb	14	; () banked
  1351   001BAC  83DA               	bsf	218,1,b	;volatile
  1352   001BAE                     
  1353                           ; BSR set to: 14
  1354   001BAE  0012               	return		;funcret
  1355   001BB0                     __end_of_I2C_2_Master_RepStart:
  1356                           	callstack 0
  1357                           
  1358 ;; *************** function _I2C_2_Master_Read *****************
  1359 ;; Defined at:
  1360 ;;		line 51 in file "i2c.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  ack             1    wreg     unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  ack             1    3[COMRAM] unsigned char 
  1365 ;;  tmp             1    4[COMRAM] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      unsigned char 
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1377 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1378 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1379 ;;Total ram usage:        3 bytes
  1380 ;; Hardware stack levels used: 1
  1381 ;; Hardware stack levels required when called: 2
  1382 ;; This function calls:
  1383 ;;		_I2C_2_Master_Idle
  1384 ;; This function is called by:
  1385 ;;		_color_read_Red
  1386 ;;		_color_read_Green
  1387 ;;		_color_read_Blue
  1388 ;;		_color_read_Clear
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           	psect	text9
  1393   0019BC                     __ptext9:
  1394                           	callstack 0
  1395   0019BC                     _I2C_2_Master_Read:
  1396                           	callstack 26
  1397                           
  1398                           ; BSR set to: 14
  1399                           ;incstack = 0
  1400                           ;I2C_2_Master_Read@ack stored from wreg
  1401   0019BC  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  1402   0019BE                     
  1403                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1404   0019BE  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1405   0019C2                     
  1406                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1407   0019C2  010E               	movlb	14	; () banked
  1408   0019C4  87DA               	bsf	218,3,b	;volatile
  1409                           
  1410                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1411   0019C6  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1412   0019CA                     
  1413                           ;i2c.c: 57:   tmp = SSP2BUF;
  1414   0019CA  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1415                           
  1416                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1417   0019CE  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1418   0019D2                     
  1419                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1420   0019D2  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  1421   0019D4  B4D8               	btfsc	status,2,c
  1422   0019D6  EFEF  F00C         	goto	u921
  1423   0019DA  EFF3  F00C         	goto	u920
  1424   0019DE                     u921:
  1425   0019DE  6A03               	clrf	??_I2C_2_Master_Read^0,c
  1426   0019E0  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  1427   0019E2  EFF4  F00C         	goto	u938
  1428   0019E6                     u920:
  1429   0019E6  6A03               	clrf	??_I2C_2_Master_Read^0,c
  1430   0019E8                     u938:
  1431   0019E8  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  1432   0019EA  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  1433   0019EC  010E               	movlb	14	; () banked
  1434   0019EE  51DA               	movf	218,w,b	;volatile
  1435   0019F0  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  1436   0019F2  0BDF               	andlw	-33
  1437   0019F4  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  1438   0019F6  6FDA               	movwf	218,b	;volatile
  1439   0019F8                     
  1440                           ; BSR set to: 14
  1441                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1442   0019F8  89DA               	bsf	218,4,b	;volatile
  1443   0019FA                     
  1444                           ; BSR set to: 14
  1445                           ;i2c.c: 61:   return tmp;
  1446   0019FA  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  1447   0019FC                     
  1448                           ; BSR set to: 14
  1449   0019FC  0012               	return		;funcret
  1450   0019FE                     __end_of_I2C_2_Master_Read:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _color_click_init *****************
  1454 ;; Defined at:
  1455 ;;		line 7 in file "color.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;		None
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;		None
  1460 ;; Return value:  Size  Location     Type
  1461 ;;                  1    wreg      void 
  1462 ;; Registers used:
  1463 ;;		wreg, status,2, status,0, cstack
  1464 ;; Tracked objects:
  1465 ;;		On entry : 0/0
  1466 ;;		On exit  : 0/0
  1467 ;;		Unchanged: 0/0
  1468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1473 ;;Total ram usage:        1 bytes
  1474 ;; Hardware stack levels used: 1
  1475 ;; Hardware stack levels required when called: 4
  1476 ;; This function calls:
  1477 ;;		_I2C_2_Master_Init
  1478 ;;		_color_writetoaddr
  1479 ;; This function is called by:
  1480 ;;		_main
  1481 ;; This function uses a non-reentrant model
  1482 ;;
  1483                           
  1484                           	psect	text10
  1485   001A7E                     __ptext10:
  1486                           	callstack 0
  1487   001A7E                     _color_click_init:
  1488                           	callstack 26
  1489   001A7E                     
  1490                           ;color.c: 10:     I2C_2_Master_Init();
  1491   001A7E  EC59  F00D         	call	_I2C_2_Master_Init	;wreg free
  1492   001A82                     
  1493                           ;color.c: 13:   color_writetoaddr(0x00, 0x01);
  1494   001A82  0E01               	movlw	1
  1495   001A84  6E04               	movwf	color_writetoaddr@value^0,c
  1496   001A86  0E00               	movlw	0
  1497   001A88  ECA6  F00D         	call	_color_writetoaddr
  1498   001A8C                     
  1499                           ;color.c: 14:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1500   001A8C  0E3F               	movlw	63
  1501   001A8E  6E06               	movwf	??_color_click_init^0,c
  1502   001A90  0E55               	movlw	85
  1503   001A92                     u1047:
  1504   001A92  2EE8               	decfsz	wreg,f,c
  1505   001A94  D7FE               	bra	u1047
  1506   001A96  2E06               	decfsz	??_color_click_init^0,f,c
  1507   001A98  D7FC               	bra	u1047
  1508   001A9A  F000               	nop	
  1509   001A9C                     
  1510                           ;color.c: 17:  color_writetoaddr(0x00, 0x03);
  1511   001A9C  0E03               	movlw	3
  1512   001A9E  6E04               	movwf	color_writetoaddr@value^0,c
  1513   001AA0  0E00               	movlw	0
  1514   001AA2  ECA6  F00D         	call	_color_writetoaddr
  1515   001AA6                     
  1516                           ;color.c: 20:  color_writetoaddr(0x01, 0xD5);
  1517   001AA6  0ED5               	movlw	213
  1518   001AA8  6E04               	movwf	color_writetoaddr@value^0,c
  1519   001AAA  0E01               	movlw	1
  1520   001AAC  ECA6  F00D         	call	_color_writetoaddr
  1521   001AB0  0012               	return		;funcret
  1522   001AB2                     __end_of_color_click_init:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _color_writetoaddr *****************
  1526 ;; Defined at:
  1527 ;;		line 23 in file "color.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  address         1    wreg     unsigned char 
  1530 ;;  value           1    3[COMRAM] unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  address         1    4[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1542 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 3
  1549 ;; This function calls:
  1550 ;;		_I2C_2_Master_Start
  1551 ;;		_I2C_2_Master_Stop
  1552 ;;		_I2C_2_Master_Write
  1553 ;; This function is called by:
  1554 ;;		_color_click_init
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text11
  1559   001B4C                     __ptext11:
  1560                           	callstack 0
  1561   001B4C                     _color_writetoaddr:
  1562                           	callstack 26
  1563                           
  1564                           ;incstack = 0
  1565                           ;color_writetoaddr@address stored from wreg
  1566   001B4C  6E05               	movwf	color_writetoaddr@address^0,c
  1567   001B4E                     
  1568                           ;color.c: 24:     I2C_2_Master_Start();
  1569   001B4E  ECDD  F00D         	call	_I2C_2_Master_Start	;wreg free
  1570                           
  1571                           ;color.c: 25:     I2C_2_Master_Write(0x52 | 0x00);
  1572   001B52  0E52               	movlw	82
  1573   001B54  ECCD  F00D         	call	_I2C_2_Master_Write
  1574                           
  1575                           ;color.c: 26:     I2C_2_Master_Write(0x80 | address);
  1576   001B58  5005               	movf	color_writetoaddr@address^0,w,c
  1577   001B5A  0980               	iorlw	128
  1578   001B5C  ECCD  F00D         	call	_I2C_2_Master_Write
  1579                           
  1580                           ;color.c: 27:     I2C_2_Master_Write(value);
  1581   001B60  5004               	movf	color_writetoaddr@value^0,w,c
  1582   001B62  ECCD  F00D         	call	_I2C_2_Master_Write
  1583                           
  1584                           ;color.c: 28:     I2C_2_Master_Stop();
  1585   001B66  ECD8  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1586   001B6A  0012               	return		;funcret
  1587   001B6C                     __end_of_color_writetoaddr:
  1588                           	callstack 0
  1589                           
  1590 ;; *************** function _I2C_2_Master_Write *****************
  1591 ;; Defined at:
  1592 ;;		line 45 in file "i2c.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  data_byte       1    wreg     unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  data_byte       1    2[COMRAM] unsigned char 
  1597 ;; Return value:  Size  Location     Type
  1598 ;;                  1    wreg      void 
  1599 ;; Registers used:
  1600 ;;		wreg, status,2, status,0, cstack
  1601 ;; Tracked objects:
  1602 ;;		On entry : 0/0
  1603 ;;		On exit  : 0/0
  1604 ;;		Unchanged: 0/0
  1605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1607 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1609 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1610 ;;Total ram usage:        1 bytes
  1611 ;; Hardware stack levels used: 1
  1612 ;; Hardware stack levels required when called: 2
  1613 ;; This function calls:
  1614 ;;		_I2C_2_Master_Idle
  1615 ;; This function is called by:
  1616 ;;		_color_writetoaddr
  1617 ;;		_color_read_Red
  1618 ;;		_color_read_Green
  1619 ;;		_color_read_Blue
  1620 ;;		_color_read_Clear
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text12
  1625   001B9A                     __ptext12:
  1626                           	callstack 0
  1627   001B9A                     _I2C_2_Master_Write:
  1628                           	callstack 26
  1629                           
  1630                           ;incstack = 0
  1631                           ;I2C_2_Master_Write@data_byte stored from wreg
  1632   001B9A  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  1633   001B9C                     
  1634                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1635   001B9C  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1636   001BA0                     
  1637                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1638   001BA0  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1639   001BA4  0012               	return		;funcret
  1640   001BA6                     __end_of_I2C_2_Master_Write:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _I2C_2_Master_Stop *****************
  1644 ;; Defined at:
  1645 ;;		line 39 in file "i2c.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 2
  1666 ;; This function calls:
  1667 ;;		_I2C_2_Master_Idle
  1668 ;; This function is called by:
  1669 ;;		_color_writetoaddr
  1670 ;;		_color_read_Red
  1671 ;;		_color_read_Green
  1672 ;;		_color_read_Blue
  1673 ;;		_color_read_Clear
  1674 ;; This function uses a non-reentrant model
  1675 ;;
  1676                           
  1677                           	psect	text13
  1678   001BB0                     __ptext13:
  1679                           	callstack 0
  1680   001BB0                     _I2C_2_Master_Stop:
  1681                           	callstack 26
  1682   001BB0                     
  1683                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1684   001BB0  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1685   001BB4                     
  1686                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1687   001BB4  010E               	movlb	14	; () banked
  1688   001BB6  85DA               	bsf	218,2,b	;volatile
  1689   001BB8                     
  1690                           ; BSR set to: 14
  1691   001BB8  0012               	return		;funcret
  1692   001BBA                     __end_of_I2C_2_Master_Stop:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _I2C_2_Master_Start *****************
  1696 ;; Defined at:
  1697 ;;		line 27 in file "i2c.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 2
  1718 ;; This function calls:
  1719 ;;		_I2C_2_Master_Idle
  1720 ;; This function is called by:
  1721 ;;		_color_writetoaddr
  1722 ;;		_color_read_Red
  1723 ;;		_color_read_Green
  1724 ;;		_color_read_Blue
  1725 ;;		_color_read_Clear
  1726 ;; This function uses a non-reentrant model
  1727 ;;
  1728                           
  1729                           	psect	text14
  1730   001BBA                     __ptext14:
  1731                           	callstack 0
  1732   001BBA                     _I2C_2_Master_Start:
  1733                           	callstack 26
  1734   001BBA                     
  1735                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1736   001BBA  EC6E  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1737   001BBE                     
  1738                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1739   001BBE  010E               	movlb	14	; () banked
  1740   001BC0  81DA               	bsf	218,0,b	;volatile
  1741   001BC2                     
  1742                           ; BSR set to: 14
  1743   001BC2  0012               	return		;funcret
  1744   001BC4                     __end_of_I2C_2_Master_Start:
  1745                           	callstack 0
  1746                           
  1747 ;; *************** function _I2C_2_Master_Idle *****************
  1748 ;; Defined at:
  1749 ;;		line 22 in file "i2c.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1765 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1766 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used: 1
  1769 ;; Hardware stack levels required when called: 1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_I2C_2_Master_Start
  1774 ;;		_I2C_2_Master_RepStart
  1775 ;;		_I2C_2_Master_Stop
  1776 ;;		_I2C_2_Master_Write
  1777 ;;		_I2C_2_Master_Read
  1778 ;; This function uses a non-reentrant model
  1779 ;;
  1780                           
  1781                           	psect	text15
  1782   001ADC                     __ptext15:
  1783                           	callstack 0
  1784   001ADC                     _I2C_2_Master_Idle:
  1785                           	callstack 26
  1786   001ADC                     l108:
  1787   001ADC  010E               	movlb	14	; () banked
  1788   001ADE  B5D8               	btfsc	216,2,b	;volatile
  1789   001AE0  EF74  F00D         	goto	u861
  1790   001AE4  EF76  F00D         	goto	u860
  1791   001AE8                     u861:
  1792   001AE8  EF6E  F00D         	goto	l108
  1793   001AEC                     u860:
  1794   001AEC                     
  1795                           ; BSR set to: 14
  1796   001AEC  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1797   001AF0  0E1F               	movlw	31
  1798   001AF2  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  1799   001AF4  A4D8               	btfss	status,2,c
  1800   001AF6  EF7F  F00D         	goto	u871
  1801   001AFA  EF81  F00D         	goto	u870
  1802   001AFE                     u871:
  1803   001AFE  EF6E  F00D         	goto	l108
  1804   001B02                     u870:
  1805   001B02                     
  1806                           ; BSR set to: 14
  1807   001B02  0012               	return		;funcret
  1808   001B04                     __end_of_I2C_2_Master_Idle:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _I2C_2_Master_Init *****************
  1812 ;; Defined at:
  1813 ;;		line 4 in file "i2c.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_color_click_init
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text16
  1842   001AB2                     __ptext16:
  1843                           	callstack 0
  1844   001AB2                     _I2C_2_Master_Init:
  1845                           	callstack 28
  1846   001AB2                     
  1847                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1848   001AB2  010E               	movlb	14	; () banked
  1849   001AB4  51D9               	movf	217,w,b	;volatile
  1850   001AB6  0BF0               	andlw	-16
  1851   001AB8  0908               	iorlw	8
  1852   001ABA  6FD9               	movwf	217,b	;volatile
  1853   001ABC                     
  1854                           ; BSR set to: 14
  1855                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1856   001ABC  8BD9               	bsf	217,5,b	;volatile
  1857                           
  1858                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1859   001ABE  0E9F               	movlw	159
  1860   001AC0  6FD6               	movwf	214,b	;volatile
  1861   001AC2                     
  1862                           ; BSR set to: 14
  1863                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1864   001AC2  8A84               	bsf	132,5,c	;volatile
  1865   001AC4                     
  1866                           ; BSR set to: 14
  1867                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1868   001AC4  8C84               	bsf	132,6,c	;volatile
  1869   001AC6                     
  1870                           ; BSR set to: 14
  1871                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1872   001AC6  9BA7               	bcf	167,5,b	;volatile
  1873   001AC8                     
  1874                           ; BSR set to: 14
  1875                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1876   001AC8  9DA7               	bcf	167,6,b	;volatile
  1877                           
  1878                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1879   001ACA  0E1D               	movlw	29
  1880   001ACC  6F1D               	movwf	29,b	;volatile
  1881                           
  1882                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1883   001ACE  0E1E               	movlw	30
  1884   001AD0  6F1C               	movwf	28,b	;volatile
  1885                           
  1886                           ;i2c.c: 18:   RD5PPS=0x1C;
  1887   001AD2  0E1C               	movlw	28
  1888   001AD4  6F6F               	movwf	111,b	;volatile
  1889                           
  1890                           ;i2c.c: 19:   RD6PPS=0x1B;
  1891   001AD6  0E1B               	movlw	27
  1892   001AD8  6F70               	movwf	112,b	;volatile
  1893   001ADA                     
  1894                           ; BSR set to: 14
  1895   001ADA  0012               	return		;funcret
  1896   001ADC                     __end_of_I2C_2_Master_Init:
  1897                           	callstack 0
  1898                           
  1899 ;; *************** function _colorVal2String *****************
  1900 ;; Defined at:
  1901 ;;		line 96 in file "color.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1904 ;;		 -> main@buf(100), 
  1905 ;;  temp            2   27[BANK0 ] PTR struct RGBC_val
  1906 ;;		 -> main@RGBC(8), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      unsigned char 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1918 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1921 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1922 ;;Total ram usage:        4 bytes
  1923 ;; Hardware stack levels used: 1
  1924 ;; Hardware stack levels required when called: 9
  1925 ;; This function calls:
  1926 ;;		_RGBC2Serial
  1927 ;;		_sprintf
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text17
  1934   001680                     __ptext17:
  1935                           	callstack 0
  1936   001680                     _colorVal2String:
  1937                           	callstack 21
  1938   001680                     
  1939                           ;color.c: 97:     sprintf(buf,"RGBC:%i %i %i %i\n",temp->R, temp->G, temp->B, temp->C);
  1940   001680  C079  F060         	movff	colorVal2String@buf,sprintf@s
  1941   001684  C07A  F061         	movff	colorVal2String@buf+1,sprintf@s+1
  1942   001688  0E01               	movlw	low STR_1
  1943   00168A  0100               	movlb	0	; () banked
  1944   00168C  6F62               	movwf	sprintf@fmt& (0+255),b
  1945   00168E  0E0E               	movlw	high STR_1
  1946   001690  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1947   001692  C07B  FFD9         	movff	colorVal2String@temp,fsr2l
  1948   001696  C07C  FFDA         	movff	colorVal2String@temp+1,fsr2h
  1949   00169A  CFDE F064          	movff	postinc2,?_sprintf+4
  1950   00169E  CFDD F065          	movff	postdec2,?_sprintf+5
  1951   0016A2  EE20 F002          	lfsr	2,2
  1952   0016A6  517B               	movf	colorVal2String@temp& (0+255),w,b
  1953   0016A8  26D9               	addwf	fsr2l,f,c
  1954   0016AA  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1955   0016AC  22DA               	addwfc	fsr2h,f,c
  1956   0016AE  CFDE F066          	movff	postinc2,?_sprintf+6
  1957   0016B2  CFDD F067          	movff	postdec2,?_sprintf+7
  1958   0016B6  EE20 F004          	lfsr	2,4
  1959   0016BA  517B               	movf	colorVal2String@temp& (0+255),w,b
  1960   0016BC  26D9               	addwf	fsr2l,f,c
  1961   0016BE  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1962   0016C0  22DA               	addwfc	fsr2h,f,c
  1963   0016C2  CFDE F068          	movff	postinc2,?_sprintf+8
  1964   0016C6  CFDD F069          	movff	postdec2,?_sprintf+9
  1965   0016CA  EE20 F006          	lfsr	2,6
  1966   0016CE  517B               	movf	colorVal2String@temp& (0+255),w,b
  1967   0016D0  26D9               	addwf	fsr2l,f,c
  1968   0016D2  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1969   0016D4  22DA               	addwfc	fsr2h,f,c
  1970   0016D6  CFDE F06A          	movff	postinc2,?_sprintf+10
  1971   0016DA  CFDD F06B          	movff	postdec2,?_sprintf+11
  1972   0016DE  ECA7  F00B         	call	_sprintf	;wreg free
  1973   0016E2                     
  1974                           ;color.c: 98:     RGBC2Serial(buf);
  1975   0016E2  C079  F007         	movff	colorVal2String@buf,RGBC2Serial@str
  1976   0016E6  C07A  F008         	movff	colorVal2String@buf+1,RGBC2Serial@str+1
  1977   0016EA  EC82  F00D         	call	_RGBC2Serial	;wreg free
  1978   0016EE  0012               	return		;funcret
  1979   0016F0                     __end_of_colorVal2String:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _sprintf *****************
  1983 ;; Defined at:
  1984 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1987 ;;		 -> main@buf(100), 
  1988 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1989 ;;		 -> STR_1(18), 
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1992 ;;  ap              2   12[BANK0 ] PTR void [1]
  1993 ;;		 -> ?_sprintf(2), 
  1994 ;;  ret             2    0        int 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  2    0[BANK0 ] int 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2004 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2005 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;Total ram usage:       25 bytes
  2009 ;; Hardware stack levels used: 1
  2010 ;; Hardware stack levels required when called: 8
  2011 ;; This function calls:
  2012 ;;		_vfprintf
  2013 ;; This function is called by:
  2014 ;;		_colorVal2String
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	text18
  2019   00174E                     __ptext18:
  2020                           	callstack 0
  2021   00174E                     _sprintf:
  2022                           	callstack 21
  2023   00174E  0E64               	movlw	low (?_sprintf+4)
  2024   001750  0100               	movlb	0	; () banked
  2025   001752  6F6C               	movwf	sprintf@ap& (0+255),b
  2026   001754  0E00               	movlw	high (?_sprintf+4)
  2027   001756  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2028   001758  C060  F06E         	movff	sprintf@s,sprintf@f
  2029   00175C  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2030   001760                     
  2031                           ; BSR set to: 0
  2032   001760  0E00               	movlw	0
  2033   001762  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2034   001764  0E00               	movlw	0
  2035   001766  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2036   001768                     
  2037                           ; BSR set to: 0
  2038   001768  0E00               	movlw	0
  2039   00176A  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2040   00176C  0E00               	movlw	0
  2041   00176E  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2042   001770                     
  2043                           ; BSR set to: 0
  2044   001770  0E6E               	movlw	low sprintf@f
  2045   001772  6E52               	movwf	vfprintf@fp^0,c
  2046   001774  0E00               	movlw	high sprintf@f
  2047   001776  6E53               	movwf	(vfprintf@fp+1)^0,c
  2048   001778  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  2049   00177C  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2050   001780  0E6C               	movlw	low sprintf@ap
  2051   001782  6E56               	movwf	vfprintf@ap^0,c
  2052   001784  0E00               	movlw	high sprintf@ap
  2053   001786  6E57               	movwf	(vfprintf@ap+1)^0,c
  2054   001788  EC70  F00C         	call	_vfprintf	;wreg free
  2055   00178C  0100               	movlb	0	; () banked
  2056   00178E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2057   001790  2560               	addwf	sprintf@s& (0+255),w,b
  2058   001792  6ED9               	movwf	fsr2l,c
  2059   001794  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2060   001796  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2061   001798  6EDA               	movwf	fsr2h,c
  2062   00179A  0E00               	movlw	0
  2063   00179C  6EDF               	movwf	indf2,c
  2064   00179E                     
  2065                           ; BSR set to: 0
  2066   00179E  0012               	return		;funcret
  2067   0017A0                     __end_of_sprintf:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function _vfprintf *****************
  2071 ;; Defined at:
  2072 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  2075 ;;		 -> sprintf@f(11), 
  2076 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  2077 ;;		 -> STR_1(18), 
  2078 ;;  ap              2   85[COMRAM] PTR PTR void 
  2079 ;;		 -> sprintf@ap(2), 
  2080 ;; Auto vars:     Size  Location     Type
  2081 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  2082 ;;		 -> STR_1(18), 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  2   81[COMRAM] int 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2092 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2096 ;;Total ram usage:        8 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 7
  2099 ;; This function calls:
  2100 ;;		_vfpfcnvrt
  2101 ;; This function is called by:
  2102 ;;		_sprintf
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text19
  2107   0018E0                     __ptext19:
  2108                           	callstack 0
  2109   0018E0                     _vfprintf:
  2110                           	callstack 21
  2111   0018E0                     
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2113   0018E0  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  2114   0018E4  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2115                           
  2116                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2117   0018E8  EF84  F00C         	goto	l1859
  2118   0018EC                     l1857:
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2121   0018EC  C052  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  2122   0018F0  C053  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2123   0018F4  0E58               	movlw	low vfprintf@cfmt
  2124   0018F6  6E42               	movwf	vfpfcnvrt@fmt^0,c
  2125   0018F8  0E00               	movlw	high vfprintf@cfmt
  2126   0018FA  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2127   0018FC  C056  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  2128   001900  C057  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2129   001904  ECBF  F009         	call	_vfpfcnvrt	;wreg free
  2130   001908                     l1859:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2133   001908  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  2134   00190C  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2135   001910                     	if	0	;tblptru may be non-zero
  2136   001910                     	endif
  2137   001910                     	if	0	;tblptru may be non-zero
  2138   001910                     	endif
  2139   001910  0008               	tblrd		*
  2140   001912  50F5               	movf	tablat,w,c
  2141   001914  0900               	iorlw	0
  2142   001916  A4D8               	btfss	status,2,c
  2143   001918  EF90  F00C         	goto	u951
  2144   00191C  EF92  F00C         	goto	u950
  2145   001920                     u951:
  2146   001920  EF76  F00C         	goto	l1857
  2147   001924                     u950:
  2148   001924                     
  2149                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2150   001924  0E00               	movlw	0
  2151   001926  6E53               	movwf	(?_vfprintf+1)^0,c
  2152   001928  0E00               	movlw	0
  2153   00192A  6E52               	movwf	?_vfprintf^0,c
  2154   00192C  0012               	return		;funcret
  2155   00192E                     __end_of_vfprintf:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _vfpfcnvrt *****************
  2159 ;; Defined at:
  2160 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2163 ;;		 -> sprintf@f(11), 
  2164 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2165 ;;		 -> vfprintf@cfmt(2), 
  2166 ;;  ap              2   67[COMRAM] PTR PTR void 
  2167 ;;		 -> sprintf@ap(2), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  convarg         8   71[COMRAM] struct .
  2170 ;;  cp              2   79[COMRAM] PTR unsigned char 
  2171 ;;		 -> STR_1(18), 
  2172 ;;  i               2    0        int 
  2173 ;;  done            2    0        int 
  2174 ;;  c               1    0        unsigned char 
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      void 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2184 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2185 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2187 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2188 ;;Total ram usage:       18 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 6
  2191 ;; This function calls:
  2192 ;;		_dtoa
  2193 ;;		_fputc
  2194 ;; This function is called by:
  2195 ;;		_vfprintf
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text20
  2200   00137E                     __ptext20:
  2201                           	callstack 0
  2202   00137E                     _vfpfcnvrt:
  2203                           	callstack 21
  2204   00137E                     
  2205                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2206   00137E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2207   001382  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2208   001386  CFDE FFF6          	movff	postinc2,tblptrl
  2209   00138A  CFDD FFF7          	movff	postdec2,tblptrh
  2210   00138E                     	if	0	;tblptru may be non-zero
  2211   00138E                     	endif
  2212   00138E                     	if	0	;tblptru may be non-zero
  2213   00138E                     	endif
  2214   00138E  0008               	tblrd		*
  2215   001390  50F5               	movf	tablat,w,c
  2216   001392  0A25               	xorlw	37
  2217   001394  A4D8               	btfss	status,2,c
  2218   001396  EFCF  F009         	goto	u891
  2219   00139A  EFD1  F009         	goto	u890
  2220   00139E                     u891:
  2221   00139E  EF51  F00A         	goto	l1811
  2222   0013A2                     u890:
  2223   0013A2                     
  2224                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2225   0013A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2226   0013A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2227   0013AA  2ADE               	incf	postinc2,f,c
  2228   0013AC  0E00               	movlw	0
  2229   0013AE  22DD               	addwfc	postdec2,f,c
  2230   0013B0                     
  2231                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2232   0013B0  0E00               	movlw	0
  2233   0013B2  0100               	movlb	0	; () banked
  2234   0013B4  6FEF               	movwf	(_width+1)& (0+255),b
  2235   0013B6  0E00               	movlw	0
  2236   0013B8  6FEE               	movwf	_width& (0+255),b
  2237   0013BA  C0EE  F0F2         	movff	_width,_flags
  2238   0013BE                     
  2239                           ; BSR set to: 0
  2240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2241   0013BE  69F0               	setf	_prec& (0+255),b
  2242   0013C0  69F1               	setf	(_prec+1)& (0+255),b
  2243   0013C2                     
  2244                           ; BSR set to: 0
  2245                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2246   0013C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2247   0013C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2248   0013CA  CFDE F050          	movff	postinc2,vfpfcnvrt@cp
  2249   0013CE  CFDD F051          	movff	postdec2,vfpfcnvrt@cp+1
  2250   0013D2                     
  2251                           ; BSR set to: 0
  2252                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2253   0013D2  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2254   0013D6  C051  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2255   0013DA                     	if	0	;tblptru may be non-zero
  2256   0013DA                     	endif
  2257   0013DA                     	if	0	;tblptru may be non-zero
  2258   0013DA                     	endif
  2259   0013DA  0008               	tblrd		*
  2260   0013DC  50F5               	movf	tablat,w,c
  2261   0013DE  0A64               	xorlw	100
  2262   0013E0  B4D8               	btfsc	status,2,c
  2263   0013E2  EFF5  F009         	goto	u901
  2264   0013E6  EFF7  F009         	goto	u900
  2265   0013EA                     u901:
  2266   0013EA  EF05  F00A         	goto	l1801
  2267   0013EE                     u900:
  2268   0013EE                     
  2269                           ; BSR set to: 0
  2270   0013EE  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2271   0013F2  C051  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2272   0013F6                     	if	0	;tblptru may be non-zero
  2273   0013F6                     	endif
  2274   0013F6                     	if	0	;tblptru may be non-zero
  2275   0013F6                     	endif
  2276   0013F6  0008               	tblrd		*
  2277   0013F8  50F5               	movf	tablat,w,c
  2278   0013FA  0A69               	xorlw	105
  2279   0013FC  A4D8               	btfss	status,2,c
  2280   0013FE  EF03  F00A         	goto	u911
  2281   001402  EF05  F00A         	goto	u910
  2282   001406                     u911:
  2283   001406  EF48  F00A         	goto	l1807
  2284   00140A                     u910:
  2285   00140A                     l1801:
  2286                           
  2287                           ; BSR set to: 0
  2288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2289   00140A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2290   00140E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2291   001412  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2292   001416  0E02               	movlw	2
  2293   001418  26DE               	addwf	postinc2,f,c
  2294   00141A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2295   00141E  0E00               	movlw	0
  2296   001420  22DD               	addwfc	postdec2,f,c
  2297   001422  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2298   001426  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2299   00142A  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  2300   00142E  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  2301   001432  0E00               	movlw	0
  2302   001434  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2303   001436  0EFF               	movlw	-1
  2304   001438  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2305   00143A  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2306   00143C  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2307   00143E  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2308   001440  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2309   001442  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2310                           
  2311                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2312   001444  0E01               	movlw	1
  2313   001446  2450               	addwf	vfpfcnvrt@cp^0,w,c
  2314   001448  6E46               	movwf	??_vfpfcnvrt^0,c
  2315   00144A  0E00               	movlw	0
  2316   00144C  2051               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2317   00144E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2318   001450  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2319   001454  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2320   001458  C046  FFDE         	movff	??_vfpfcnvrt,postinc2
  2321   00145C  C047  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2322   001460                     
  2323                           ; BSR set to: 0
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2325   001460  C040  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2326   001464  C041  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2327   001468  C048  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  2328   00146C  C049  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2329   001470  C04A  F021         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2330   001474  C04B  F022         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2331   001478  C04C  F023         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2332   00147C  C04D  F024         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2333   001480  C04E  F025         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2334   001484  C04F  F026         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2335   001488  EC0A  F007         	call	_dtoa	;wreg free
  2336   00148C  EF65  F00A         	goto	l1077
  2337   001490                     l1807:
  2338                           
  2339                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2340   001490  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2341   001494  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2342   001498  2ADE               	incf	postinc2,f,c
  2343   00149A  0E00               	movlw	0
  2344   00149C  22DD               	addwfc	postdec2,f,c
  2345   00149E  EF65  F00A         	goto	l1077
  2346   0014A2                     l1811:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2349   0014A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350   0014A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351   0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  2352   0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  2353   0014B2                     	if	0	;tblptru may be non-zero
  2354   0014B2                     	endif
  2355   0014B2                     	if	0	;tblptru may be non-zero
  2356   0014B2                     	endif
  2357   0014B2  0008               	tblrd		*
  2358   0014B4  50F5               	movf	tablat,w,c
  2359   0014B6  6E02               	movwf	fputc@c^0,c
  2360   0014B8  6A03               	clrf	(fputc@c+1)^0,c
  2361   0014BA  C040  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2362   0014BE  C041  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2363   0014C2  EC66  F00A         	call	_fputc	;wreg free
  2364   0014C6  EF48  F00A         	goto	l1807
  2365   0014CA                     l1077:
  2366   0014CA  0012               	return		;funcret
  2367   0014CC                     __end_of_vfpfcnvrt:
  2368                           	callstack 0
  2369                           
  2370 ;; *************** function _dtoa *****************
  2371 ;; Defined at:
  2372 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2373 ;; Parameters:    Size  Location     Type
  2374 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2375 ;;		 -> sprintf@f(11), 
  2376 ;;  d               8   30[COMRAM] long long 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  n               8   52[COMRAM] long long 
  2379 ;;  i               2   60[COMRAM] int 
  2380 ;;  w               2   50[COMRAM] int 
  2381 ;;  p               2   48[COMRAM] int 
  2382 ;;  s               1   62[COMRAM] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2392 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;Total ram usage:       35 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 5
  2399 ;; This function calls:
  2400 ;;		___aodiv
  2401 ;;		___aomod
  2402 ;;		_abs
  2403 ;;		_pad
  2404 ;; This function is called by:
  2405 ;;		_vfpfcnvrt
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text21
  2410   000E14                     __ptext21:
  2411                           	callstack 0
  2412   000E14                     _dtoa:
  2413                           	callstack 21
  2414   000E14                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2416   000E14  C01F  F035         	movff	dtoa@d,dtoa@n
  2417   000E18  C020  F036         	movff	dtoa@d+1,dtoa@n+1
  2418   000E1C  C021  F037         	movff	dtoa@d+2,dtoa@n+2
  2419   000E20  C022  F038         	movff	dtoa@d+3,dtoa@n+3
  2420   000E24  C023  F039         	movff	dtoa@d+4,dtoa@n+4
  2421   000E28  C024  F03A         	movff	dtoa@d+5,dtoa@n+5
  2422   000E2C  C025  F03B         	movff	dtoa@d+6,dtoa@n+6
  2423   000E30  C026  F03C         	movff	dtoa@d+7,dtoa@n+7
  2424   000E34                     
  2425                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2426   000E34  BE3C               	btfsc	(dtoa@n+7)^0,7,c
  2427   000E36  EF1F  F007         	goto	u761
  2428   000E3A  EF22  F007         	goto	u760
  2429   000E3E                     u761:
  2430   000E3E  0E01               	movlw	1
  2431   000E40  EF23  F007         	goto	u770
  2432   000E44                     u760:
  2433   000E44  0E00               	movlw	0
  2434   000E46                     u770:
  2435   000E46  6E3F               	movwf	dtoa@s^0,c
  2436   000E48                     
  2437                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2438   000E48  503F               	movf	dtoa@s^0,w,c
  2439   000E4A  B4D8               	btfsc	status,2,c
  2440   000E4C  EF2A  F007         	goto	u781
  2441   000E50  EF2C  F007         	goto	u780
  2442   000E54                     u781:
  2443   000E54  EF3C  F007         	goto	l1735
  2444   000E58                     u780:
  2445   000E58                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2447   000E58  1E3C               	comf	(dtoa@n+7)^0,f,c
  2448   000E5A  1E3B               	comf	(dtoa@n+6)^0,f,c
  2449   000E5C  1E3A               	comf	(dtoa@n+5)^0,f,c
  2450   000E5E  1E39               	comf	(dtoa@n+4)^0,f,c
  2451   000E60  1E38               	comf	(dtoa@n+3)^0,f,c
  2452   000E62  1E37               	comf	(dtoa@n+2)^0,f,c
  2453   000E64  1E36               	comf	(dtoa@n+1)^0,f,c
  2454   000E66  6C35               	negf	dtoa@n^0,c
  2455   000E68  0E00               	movlw	0
  2456   000E6A  2236               	addwfc	(dtoa@n+1)^0,f,c
  2457   000E6C  2237               	addwfc	(dtoa@n+2)^0,f,c
  2458   000E6E  2238               	addwfc	(dtoa@n+3)^0,f,c
  2459   000E70  2239               	addwfc	(dtoa@n+4)^0,f,c
  2460   000E72  223A               	addwfc	(dtoa@n+5)^0,f,c
  2461   000E74  223B               	addwfc	(dtoa@n+6)^0,f,c
  2462   000E76  223C               	addwfc	(dtoa@n+7)^0,f,c
  2463   000E78                     l1735:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2466   000E78  0100               	movlb	0	; () banked
  2467   000E7A  BFF1               	btfsc	(_prec+1)& (0+255),7,b
  2468   000E7C  EF4A  F007         	goto	u790
  2469   000E80  51F1               	movf	(_prec+1)& (0+255),w,b
  2470   000E82  E106               	bnz	u791
  2471   000E84  05F0               	decf	_prec& (0+255),w,b
  2472   000E86  B0D8               	btfsc	status,0,c
  2473   000E88  EF48  F007         	goto	u791
  2474   000E8C  EF4A  F007         	goto	u790
  2475   000E90                     u791:
  2476   000E90  EF50  F007         	goto	l1056
  2477   000E94                     u790:
  2478   000E94                     
  2479                           ; BSR set to: 0
  2480   000E94  0E00               	movlw	0
  2481   000E96  6E32               	movwf	(dtoa@p+1)^0,c
  2482   000E98  0E01               	movlw	1
  2483   000E9A  6E31               	movwf	dtoa@p^0,c
  2484   000E9C  EF54  F007         	goto	l1058
  2485   000EA0                     l1056:
  2486                           
  2487                           ; BSR set to: 0
  2488   000EA0  C0F0  F031         	movff	_prec,dtoa@p
  2489   000EA4  C0F1  F032         	movff	_prec+1,dtoa@p+1
  2490   000EA8                     l1058:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2494   000EA8  C0EE  F033         	movff	_width,dtoa@w
  2495   000EAC  C0EF  F034         	movff	_width+1,dtoa@w+1
  2496   000EB0                     
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2499   000EB0  503F               	movf	dtoa@s^0,w,c
  2500   000EB2  B4D8               	btfsc	status,2,c
  2501   000EB4  EF5E  F007         	goto	u801
  2502   000EB8  EF60  F007         	goto	u800
  2503   000EBC                     u801:
  2504   000EBC  EF77  F007         	goto	l1059
  2505   000EC0                     u800:
  2506   000EC0                     
  2507                           ; BSR set to: 0
  2508                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2509   000EC0  0633               	decf	dtoa@w^0,f,c
  2510   000EC2  A0D8               	btfss	status,0,c
  2511   000EC4  0634               	decf	(dtoa@w+1)^0,f,c
  2512   000EC6                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2515   000EC6  503F               	movf	dtoa@s^0,w,c
  2516   000EC8  A4D8               	btfss	status,2,c
  2517   000ECA  EF69  F007         	goto	u811
  2518   000ECE  EF6B  F007         	goto	u810
  2519   000ED2                     u811:
  2520   000ED2  EF71  F007         	goto	l1747
  2521   000ED6                     u810:
  2522   000ED6                     
  2523                           ; BSR set to: 0
  2524   000ED6  0E00               	movlw	0
  2525   000ED8  6E30               	movwf	(_dtoa$2202+1)^0,c
  2526   000EDA  0E2B               	movlw	43
  2527   000EDC  6E2F               	movwf	_dtoa$2202^0,c
  2528   000EDE  EF75  F007         	goto	l1749
  2529   000EE2                     l1747:
  2530                           
  2531                           ; BSR set to: 0
  2532   000EE2  0E00               	movlw	0
  2533   000EE4  6E30               	movwf	(_dtoa$2202+1)^0,c
  2534   000EE6  0E2D               	movlw	45
  2535   000EE8  6E2F               	movwf	_dtoa$2202^0,c
  2536   000EEA                     l1749:
  2537                           
  2538                           ; BSR set to: 0
  2539   000EEA  C02F  F03F         	movff	_dtoa$2202,dtoa@s
  2540   000EEE                     l1059:
  2541                           
  2542                           ; BSR set to: 0
  2543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2544   000EEE  0E00               	movlw	0
  2545   000EF0  6E3E               	movwf	(dtoa@i+1)^0,c
  2546   000EF2  0E1F               	movlw	31
  2547   000EF4  6E3D               	movwf	dtoa@i^0,c
  2548   000EF6                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2551   000EF6  0E00               	movlw	0
  2552   000EF8  0101               	movlb	1	; () banked
  2553   000EFA  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2556   000EFC  EFFC  F007         	goto	l1763
  2557   000F00                     l1753:
  2558                           
  2559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2560   000F00  063D               	decf	dtoa@i^0,f,c
  2561   000F02  A0D8               	btfss	status,0,c
  2562   000F04  063E               	decf	(dtoa@i+1)^0,f,c
  2563   000F06                     
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2565   000F06  0E50               	movlw	low _dbuf
  2566   000F08  243D               	addwf	dtoa@i^0,w,c
  2567   000F0A  6ED9               	movwf	fsr2l,c
  2568   000F0C  0E01               	movlw	high _dbuf
  2569   000F0E  203E               	addwfc	(dtoa@i+1)^0,w,c
  2570   000F10  6EDA               	movwf	fsr2h,c
  2571   000F12  C035  F002         	movff	dtoa@n,___aomod@dividend
  2572   000F16  C036  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2573   000F1A  C037  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2574   000F1E  C038  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2575   000F22  C039  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2576   000F26  C03A  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2577   000F2A  C03B  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2578   000F2E  C03C  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2579   000F32  0E0A               	movlw	10
  2580   000F34  6E0A               	movwf	___aomod@divisor^0,c
  2581   000F36  0E00               	movlw	0
  2582   000F38  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2583   000F3A  0E00               	movlw	0
  2584   000F3C  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2585   000F3E  0E00               	movlw	0
  2586   000F40  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2587   000F42  0E00               	movlw	0
  2588   000F44  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2589   000F46  0E00               	movlw	0
  2590   000F48  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2591   000F4A  0E00               	movlw	0
  2592   000F4C  6E10               	movwf	(___aomod@divisor+6)^0,c
  2593   000F4E  0E00               	movlw	0
  2594   000F50  6E11               	movwf	(___aomod@divisor+7)^0,c
  2595   000F52  EC0D  F009         	call	___aomod	;wreg free
  2596   000F56  C002  F027         	movff	?___aomod,??_dtoa
  2597   000F5A  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2598   000F5E  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2599   000F62  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2600   000F66  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2601   000F6A  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2602   000F6E  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2603   000F72  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2604   000F76  C027  F014         	movff	??_dtoa,abs@a
  2605   000F7A  C028  F015         	movff	??_dtoa+1,abs@a+1
  2606   000F7E  ECFF  F00C         	call	_abs	;wreg free
  2607   000F82  5014               	movf	?_abs^0,w,c
  2608   000F84  0F30               	addlw	48
  2609   000F86  6EDF               	movwf	indf2,c
  2610   000F88                     
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2612   000F88  0631               	decf	dtoa@p^0,f,c
  2613   000F8A  A0D8               	btfss	status,0,c
  2614   000F8C  0632               	decf	(dtoa@p+1)^0,f,c
  2615   000F8E                     
  2616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2617   000F8E  0633               	decf	dtoa@w^0,f,c
  2618   000F90  A0D8               	btfss	status,0,c
  2619   000F92  0634               	decf	(dtoa@w+1)^0,f,c
  2620   000F94                     
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2622   000F94  C035  F002         	movff	dtoa@n,___aodiv@dividend
  2623   000F98  C036  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2624   000F9C  C037  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2625   000FA0  C038  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2626   000FA4  C039  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2627   000FA8  C03A  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2628   000FAC  C03B  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2629   000FB0  C03C  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2630   000FB4  0E0A               	movlw	10
  2631   000FB6  6E0A               	movwf	___aodiv@divisor^0,c
  2632   000FB8  0E00               	movlw	0
  2633   000FBA  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2634   000FBC  0E00               	movlw	0
  2635   000FBE  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2636   000FC0  0E00               	movlw	0
  2637   000FC2  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2638   000FC4  0E00               	movlw	0
  2639   000FC6  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2640   000FC8  0E00               	movlw	0
  2641   000FCA  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2642   000FCC  0E00               	movlw	0
  2643   000FCE  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2644   000FD0  0E00               	movlw	0
  2645   000FD2  6E11               	movwf	(___aodiv@divisor+7)^0,c
  2646   000FD4  EC49  F008         	call	___aodiv	;wreg free
  2647   000FD8  C002  F035         	movff	?___aodiv,dtoa@n
  2648   000FDC  C003  F036         	movff	?___aodiv+1,dtoa@n+1
  2649   000FE0  C004  F037         	movff	?___aodiv+2,dtoa@n+2
  2650   000FE4  C005  F038         	movff	?___aodiv+3,dtoa@n+3
  2651   000FE8  C006  F039         	movff	?___aodiv+4,dtoa@n+4
  2652   000FEC  C007  F03A         	movff	?___aodiv+5,dtoa@n+5
  2653   000FF0  C008  F03B         	movff	?___aodiv+6,dtoa@n+6
  2654   000FF4  C009  F03C         	movff	?___aodiv+7,dtoa@n+7
  2655   000FF8                     l1763:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2658   000FF8  BE3E               	btfsc	(dtoa@i+1)^0,7,c
  2659   000FFA  EF07  F008         	goto	u821
  2660   000FFE  503E               	movf	(dtoa@i+1)^0,w,c
  2661   001000  E108               	bnz	u820
  2662   001002  043D               	decf	dtoa@i^0,w,c
  2663   001004  A0D8               	btfss	status,0,c
  2664   001006  EF07  F008         	goto	u821
  2665   00100A  EF09  F008         	goto	u820
  2666   00100E                     u821:
  2667   00100E  EF25  F008         	goto	l1769
  2668   001012                     u820:
  2669   001012  5035               	movf	dtoa@n^0,w,c
  2670   001014  1036               	iorwf	(dtoa@n+1)^0,w,c
  2671   001016  1037               	iorwf	(dtoa@n+2)^0,w,c
  2672   001018  1038               	iorwf	(dtoa@n+3)^0,w,c
  2673   00101A  1039               	iorwf	(dtoa@n+4)^0,w,c
  2674   00101C  103A               	iorwf	(dtoa@n+5)^0,w,c
  2675   00101E  103B               	iorwf	(dtoa@n+6)^0,w,c
  2676   001020  103C               	iorwf	(dtoa@n+7)^0,w,c
  2677   001022  A4D8               	btfss	status,2,c
  2678   001024  EF16  F008         	goto	u831
  2679   001028  EF18  F008         	goto	u830
  2680   00102C                     u831:
  2681   00102C  EF80  F007         	goto	l1753
  2682   001030                     u830:
  2683   001030  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2684   001032  EF25  F008         	goto	u840
  2685   001036  5032               	movf	(dtoa@p+1)^0,w,c
  2686   001038  E106               	bnz	u841
  2687   00103A  0431               	decf	dtoa@p^0,w,c
  2688   00103C  B0D8               	btfsc	status,0,c
  2689   00103E  EF23  F008         	goto	u841
  2690   001042  EF25  F008         	goto	u840
  2691   001046                     u841:
  2692   001046  EF80  F007         	goto	l1753
  2693   00104A                     u840:
  2694   00104A                     l1769:
  2695                           
  2696                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2697   00104A  503F               	movf	dtoa@s^0,w,c
  2698   00104C  B4D8               	btfsc	status,2,c
  2699   00104E  EF2B  F008         	goto	u851
  2700   001052  EF2D  F008         	goto	u850
  2701   001056                     u851:
  2702   001056  EF38  F008         	goto	l1775
  2703   00105A                     u850:
  2704   00105A                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2706   00105A  063D               	decf	dtoa@i^0,f,c
  2707   00105C  A0D8               	btfss	status,0,c
  2708   00105E  063E               	decf	(dtoa@i+1)^0,f,c
  2709   001060                     
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2711   001060  0E50               	movlw	low _dbuf
  2712   001062  243D               	addwf	dtoa@i^0,w,c
  2713   001064  6ED9               	movwf	fsr2l,c
  2714   001066  0E01               	movlw	high _dbuf
  2715   001068  203E               	addwfc	(dtoa@i+1)^0,w,c
  2716   00106A  6EDA               	movwf	fsr2h,c
  2717   00106C  C03F  FFDF         	movff	dtoa@s,indf2
  2718   001070                     l1775:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2721   001070  C01D  F012         	movff	dtoa@fp,pad@fp
  2722   001074  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2723   001078  0E50               	movlw	low _dbuf
  2724   00107A  243D               	addwf	dtoa@i^0,w,c
  2725   00107C  6E14               	movwf	pad@buf^0,c
  2726   00107E  0E01               	movlw	high _dbuf
  2727   001080  203E               	addwfc	(dtoa@i+1)^0,w,c
  2728   001082  6E15               	movwf	(pad@buf+1)^0,c
  2729   001084  C033  F016         	movff	dtoa@w,pad@p
  2730   001088  C034  F017         	movff	dtoa@w+1,pad@p+1
  2731   00108C  ECCB  F00A         	call	_pad	;wreg free
  2732   001090  0012               	return		;funcret
  2733   001092                     __end_of_dtoa:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function _pad *****************
  2737 ;; Defined at:
  2738 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2741 ;;		 -> sprintf@f(11), 
  2742 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2743 ;;		 -> dbuf(32), 
  2744 ;;  p               2   21[COMRAM] int 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  w               2   26[COMRAM] int 
  2747 ;;  i               2   24[COMRAM] int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2757 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2758 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2760 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2761 ;;Total ram usage:       11 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 4
  2764 ;; This function calls:
  2765 ;;		_fputc
  2766 ;;		_fputs
  2767 ;; This function is called by:
  2768 ;;		_dtoa
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text22
  2773   001596                     __ptext22:
  2774                           	callstack 0
  2775   001596                     _pad:
  2776                           	callstack 21
  2777   001596                     
  2778                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2779   001596  BE17               	btfsc	(pad@p+1)^0,7,c
  2780   001598  EFD0  F00A         	goto	u731
  2781   00159C  EFD2  F00A         	goto	u730
  2782   0015A0                     u731:
  2783   0015A0  EFD8  F00A         	goto	l1713
  2784   0015A4                     u730:
  2785   0015A4  C016  F01B         	movff	pad@p,pad@w
  2786   0015A8  C017  F01C         	movff	pad@p+1,pad@w+1
  2787   0015AC  EFDC  F00A         	goto	l1047
  2788   0015B0                     l1713:
  2789   0015B0  0E00               	movlw	0
  2790   0015B2  6E1C               	movwf	(pad@w+1)^0,c
  2791   0015B4  0E00               	movlw	0
  2792   0015B6  6E1B               	movwf	pad@w^0,c
  2793   0015B8                     l1047:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2796   0015B8  0E00               	movlw	0
  2797   0015BA  6E1A               	movwf	(pad@i+1)^0,c
  2798   0015BC  0E00               	movlw	0
  2799   0015BE  6E19               	movwf	pad@i^0,c
  2800                           
  2801                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2802   0015C0  EFEE  F00A         	goto	l1719
  2803   0015C4                     l1715:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2806   0015C4  0E00               	movlw	0
  2807   0015C6  6E03               	movwf	(fputc@c+1)^0,c
  2808   0015C8  0E20               	movlw	32
  2809   0015CA  6E02               	movwf	fputc@c^0,c
  2810   0015CC  C012  F004         	movff	pad@fp,fputc@fp
  2811   0015D0  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2812   0015D4  EC66  F00A         	call	_fputc	;wreg free
  2813   0015D8                     
  2814                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2815   0015D8  4A19               	infsnz	pad@i^0,f,c
  2816   0015DA  2A1A               	incf	(pad@i+1)^0,f,c
  2817   0015DC                     l1719:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2820   0015DC  501B               	movf	pad@w^0,w,c
  2821   0015DE  5C19               	subwf	pad@i^0,w,c
  2822   0015E0  501A               	movf	(pad@i+1)^0,w,c
  2823   0015E2  0A80               	xorlw	128
  2824   0015E4  6E18               	movwf	??_pad^0,c
  2825   0015E6  501C               	movf	(pad@w+1)^0,w,c
  2826   0015E8  0A80               	xorlw	128
  2827   0015EA  5818               	subwfb	??_pad^0,w,c
  2828   0015EC  A0D8               	btfss	status,0,c
  2829   0015EE  EFFB  F00A         	goto	u741
  2830   0015F2  EFFD  F00A         	goto	u740
  2831   0015F6                     u741:
  2832   0015F6  EFE2  F00A         	goto	l1715
  2833   0015FA                     u740:
  2834   0015FA                     
  2835                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2836   0015FA  C014  F00B         	movff	pad@buf,fputs@s
  2837   0015FE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2838   001602  C012  F00D         	movff	pad@fp,fputs@fp
  2839   001606  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2840   00160A  ECBC  F00C         	call	_fputs	;wreg free
  2841   00160E  0012               	return		;funcret
  2842   001610                     __end_of_pad:
  2843                           	callstack 0
  2844                           
  2845 ;; *************** function _fputs *****************
  2846 ;; Defined at:
  2847 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2848 ;; Parameters:    Size  Location     Type
  2849 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2850 ;;		 -> dbuf(32), 
  2851 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2852 ;;		 -> sprintf@f(11), 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  i               2   15[COMRAM] int 
  2855 ;;  c               1   14[COMRAM] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  2   10[COMRAM] int 
  2858 ;; Registers used:
  2859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;Total ram usage:        7 bytes
  2870 ;; Hardware stack levels used: 1
  2871 ;; Hardware stack levels required when called: 3
  2872 ;; This function calls:
  2873 ;;		_fputc
  2874 ;; This function is called by:
  2875 ;;		_pad
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           	psect	text23
  2880   001978                     __ptext23:
  2881                           	callstack 0
  2882   001978                     _fputs:
  2883                           	callstack 21
  2884   001978  0E00               	movlw	0
  2885   00197A  6E11               	movwf	(fputs@i+1)^0,c
  2886   00197C  0E00               	movlw	0
  2887   00197E  6E10               	movwf	fputs@i^0,c
  2888   001980  EFCD  F00C         	goto	l1627
  2889   001984                     l1623:
  2890   001984  C00F  F002         	movff	fputs@c,fputc@c
  2891   001988  6A03               	clrf	(fputc@c+1)^0,c
  2892   00198A  C00D  F004         	movff	fputs@fp,fputc@fp
  2893   00198E  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2894   001992  EC66  F00A         	call	_fputc	;wreg free
  2895   001996  4A10               	infsnz	fputs@i^0,f,c
  2896   001998  2A11               	incf	(fputs@i+1)^0,f,c
  2897   00199A                     l1627:
  2898   00199A  5010               	movf	fputs@i^0,w,c
  2899   00199C  240B               	addwf	fputs@s^0,w,c
  2900   00199E  6ED9               	movwf	fsr2l,c
  2901   0019A0  5011               	movf	(fputs@i+1)^0,w,c
  2902   0019A2  200C               	addwfc	(fputs@s+1)^0,w,c
  2903   0019A4  6EDA               	movwf	fsr2h,c
  2904   0019A6  50DF               	movf	indf2,w,c
  2905   0019A8  6E0F               	movwf	fputs@c^0,c
  2906   0019AA  500F               	movf	fputs@c^0,w,c
  2907   0019AC  A4D8               	btfss	status,2,c
  2908   0019AE  EFDB  F00C         	goto	u591
  2909   0019B2  EFDD  F00C         	goto	u590
  2910   0019B6                     u591:
  2911   0019B6  EFC2  F00C         	goto	l1623
  2912   0019BA                     u590:
  2913   0019BA  0012               	return		;funcret
  2914   0019BC                     __end_of_fputs:
  2915                           	callstack 0
  2916                           
  2917 ;; *************** function _fputc *****************
  2918 ;; Defined at:
  2919 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2920 ;; Parameters:    Size  Location     Type
  2921 ;;  c               2    1[COMRAM] int 
  2922 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2923 ;;		 -> sprintf@f(11), 
  2924 ;; Auto vars:     Size  Location     Type
  2925 ;;		None
  2926 ;; Return value:  Size  Location     Type
  2927 ;;                  2    1[COMRAM] int 
  2928 ;; Registers used:
  2929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2930 ;; Tracked objects:
  2931 ;;		On entry : 0/0
  2932 ;;		On exit  : 0/0
  2933 ;;		Unchanged: 0/0
  2934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2937 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2938 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2939 ;;Total ram usage:        9 bytes
  2940 ;; Hardware stack levels used: 1
  2941 ;; Hardware stack levels required when called: 2
  2942 ;; This function calls:
  2943 ;;		_putch
  2944 ;; This function is called by:
  2945 ;;		_pad
  2946 ;;		_vfpfcnvrt
  2947 ;;		_fputs
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text24
  2952   0014CC                     __ptext24:
  2953                           	callstack 0
  2954   0014CC                     _fputc:
  2955                           	callstack 24
  2956   0014CC  5004               	movf	fputc@fp^0,w,c
  2957   0014CE  1005               	iorwf	(fputc@fp+1)^0,w,c
  2958   0014D0  B4D8               	btfsc	status,2,c
  2959   0014D2  EF6D  F00A         	goto	u551
  2960   0014D6  EF6F  F00A         	goto	u550
  2961   0014DA                     u551:
  2962   0014DA  EF78  F00A         	goto	l1611
  2963   0014DE                     u550:
  2964   0014DE  5004               	movf	fputc@fp^0,w,c
  2965   0014E0  1005               	iorwf	(fputc@fp+1)^0,w,c
  2966   0014E2  A4D8               	btfss	status,2,c
  2967   0014E4  EF76  F00A         	goto	u561
  2968   0014E8  EF78  F00A         	goto	u560
  2969   0014EC                     u561:
  2970   0014EC  EF7D  F00A         	goto	l1613
  2971   0014F0                     u560:
  2972   0014F0                     l1611:
  2973   0014F0  5002               	movf	fputc@c^0,w,c
  2974   0014F2  ECE4  F00D         	call	_putch
  2975   0014F6  EFCA  F00A         	goto	l1102
  2976   0014FA                     l1613:
  2977   0014FA  EE20 F009          	lfsr	2,9
  2978   0014FE  5004               	movf	fputc@fp^0,w,c
  2979   001500  26D9               	addwf	fsr2l,f,c
  2980   001502  5005               	movf	(fputc@fp+1)^0,w,c
  2981   001504  22DA               	addwfc	fsr2h,f,c
  2982   001506  50DE               	movf	postinc2,w,c
  2983   001508  10DE               	iorwf	postinc2,w,c
  2984   00150A  B4D8               	btfsc	status,2,c
  2985   00150C  EF8A  F00A         	goto	u571
  2986   001510  EF8C  F00A         	goto	u570
  2987   001514                     u571:
  2988   001514  EFA7  F00A         	goto	l1617
  2989   001518                     u570:
  2990   001518  EE20 F009          	lfsr	2,9
  2991   00151C  5004               	movf	fputc@fp^0,w,c
  2992   00151E  26D9               	addwf	fsr2l,f,c
  2993   001520  5005               	movf	(fputc@fp+1)^0,w,c
  2994   001522  22DA               	addwfc	fsr2h,f,c
  2995   001524  EE10 F003          	lfsr	1,3
  2996   001528  5004               	movf	fputc@fp^0,w,c
  2997   00152A  26E1               	addwf	fsr1l,f,c
  2998   00152C  5005               	movf	(fputc@fp+1)^0,w,c
  2999   00152E  22E2               	addwfc	fsr1h,f,c
  3000   001530  50DE               	movf	postinc2,w,c
  3001   001532  5CE6               	subwf	postinc1,w,c
  3002   001534  50E6               	movf	postinc1,w,c
  3003   001536  0A80               	xorlw	128
  3004   001538  6E0A               	movwf	(??_fputc+4)^0,c
  3005   00153A  50DE               	movf	postinc2,w,c
  3006   00153C  0A80               	xorlw	128
  3007   00153E  580A               	subwfb	(??_fputc+4)^0,w,c
  3008   001540  B0D8               	btfsc	status,0,c
  3009   001542  EFA5  F00A         	goto	u581
  3010   001546  EFA7  F00A         	goto	u580
  3011   00154A                     u581:
  3012   00154A  EFCA  F00A         	goto	l1102
  3013   00154E                     u580:
  3014   00154E                     l1617:
  3015   00154E  EE20 F003          	lfsr	2,3
  3016   001552  5004               	movf	fputc@fp^0,w,c
  3017   001554  26D9               	addwf	fsr2l,f,c
  3018   001556  5005               	movf	(fputc@fp+1)^0,w,c
  3019   001558  22DA               	addwfc	fsr2h,f,c
  3020   00155A  CFDE F006          	movff	postinc2,??_fputc
  3021   00155E  CFDD F007          	movff	postdec2,??_fputc+1
  3022   001562  C004  FFD9         	movff	fputc@fp,fsr2l
  3023   001566  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3024   00156A  CFDE F008          	movff	postinc2,??_fputc+2
  3025   00156E  CFDD F009          	movff	postdec2,??_fputc+3
  3026   001572  5006               	movf	??_fputc^0,w,c
  3027   001574  2408               	addwf	(??_fputc+2)^0,w,c
  3028   001576  6ED9               	movwf	fsr2l,c
  3029   001578  5007               	movf	(??_fputc+1)^0,w,c
  3030   00157A  2009               	addwfc	(??_fputc+3)^0,w,c
  3031   00157C  6EDA               	movwf	fsr2h,c
  3032   00157E  C002  FFDF         	movff	fputc@c,indf2
  3033   001582  EE20 F003          	lfsr	2,3
  3034   001586  5004               	movf	fputc@fp^0,w,c
  3035   001588  26D9               	addwf	fsr2l,f,c
  3036   00158A  5005               	movf	(fputc@fp+1)^0,w,c
  3037   00158C  22DA               	addwfc	fsr2h,f,c
  3038   00158E  2ADE               	incf	postinc2,f,c
  3039   001590  0E00               	movlw	0
  3040   001592  22DD               	addwfc	postdec2,f,c
  3041   001594                     l1102:
  3042   001594  0012               	return		;funcret
  3043   001596                     __end_of_fputc:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _putch *****************
  3047 ;; Defined at:
  3048 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  c               1    wreg     unsigned char 
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  c               1    0[COMRAM] unsigned char 
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3065 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3066 ;;Total ram usage:        0 bytes
  3067 ;; Hardware stack levels used: 1
  3068 ;; Hardware stack levels required when called: 1
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_fputc
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text25
  3077   001BC8                     __ptext25:
  3078                           	callstack 0
  3079   001BC8                     _putch:
  3080                           	callstack 24
  3081   001BC8  0012               	return		;funcret
  3082   001BCA                     __end_of_putch:
  3083                           	callstack 0
  3084                           
  3085 ;; *************** function _abs *****************
  3086 ;; Defined at:
  3087 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3088 ;; Parameters:    Size  Location     Type
  3089 ;;  a               2   19[COMRAM] int 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;		None
  3092 ;; Return value:  Size  Location     Type
  3093 ;;                  2   19[COMRAM] int 
  3094 ;; Registers used:
  3095 ;;		wreg, status,2, status,0
  3096 ;; Tracked objects:
  3097 ;;		On entry : 0/0
  3098 ;;		On exit  : 0/0
  3099 ;;		Unchanged: 0/0
  3100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3104 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3105 ;;Total ram usage:        4 bytes
  3106 ;; Hardware stack levels used: 1
  3107 ;; Hardware stack levels required when called: 1
  3108 ;; This function calls:
  3109 ;;		Nothing
  3110 ;; This function is called by:
  3111 ;;		_dtoa
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text26
  3116   0019FE                     __ptext26:
  3117                           	callstack 0
  3118   0019FE                     _abs:
  3119                           	callstack 24
  3120   0019FE  BE15               	btfsc	(abs@a+1)^0,7,c
  3121   001A00  EF0C  F00D         	goto	u750
  3122   001A04  5015               	movf	(abs@a+1)^0,w,c
  3123   001A06  E106               	bnz	u751
  3124   001A08  0414               	decf	abs@a^0,w,c
  3125   001A0A  B0D8               	btfsc	status,0,c
  3126   001A0C  EF0A  F00D         	goto	u751
  3127   001A10  EF0C  F00D         	goto	u750
  3128   001A14                     u751:
  3129   001A14  EF1A  F00D         	goto	l1087
  3130   001A18                     u750:
  3131   001A18  C014  F016         	movff	abs@a,??_abs
  3132   001A1C  C015  F017         	movff	abs@a+1,??_abs+1
  3133   001A20  1E16               	comf	??_abs^0,f,c
  3134   001A22  1E17               	comf	(??_abs+1)^0,f,c
  3135   001A24  4A16               	infsnz	??_abs^0,f,c
  3136   001A26  2A17               	incf	(??_abs+1)^0,f,c
  3137   001A28  C016  F014         	movff	??_abs,?_abs
  3138   001A2C  C017  F015         	movff	??_abs+1,?_abs+1
  3139   001A30  EF1E  F00D         	goto	l1090
  3140   001A34                     l1087:
  3141   001A34  C014  F014         	movff	abs@a,?_abs
  3142   001A38  C015  F015         	movff	abs@a+1,?_abs+1
  3143   001A3C                     l1090:
  3144   001A3C  0012               	return		;funcret
  3145   001A3E                     __end_of_abs:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function ___aomod *****************
  3149 ;; Defined at:
  3150 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  dividend        8    1[COMRAM] long long 
  3153 ;;  divisor         8    9[COMRAM] long long 
  3154 ;; Auto vars:     Size  Location     Type
  3155 ;;  sign            1   18[COMRAM] unsigned char 
  3156 ;;  counter         1   17[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  8    1[COMRAM] long long 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3166 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3169 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3170 ;;Total ram usage:       18 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; Hardware stack levels required when called: 1
  3173 ;; This function calls:
  3174 ;;		Nothing
  3175 ;; This function is called by:
  3176 ;;		_dtoa
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           	psect	text27
  3181   00121A                     __ptext27:
  3182                           	callstack 0
  3183   00121A                     ___aomod:
  3184                           	callstack 24
  3185   00121A  0E00               	movlw	0
  3186   00121C  6E13               	movwf	___aomod@sign^0,c
  3187   00121E  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3188   001220  EF16  F009         	goto	u670
  3189   001224  EF14  F009         	goto	u671
  3190   001228                     u671:
  3191   001228  EF28  F009         	goto	l1681
  3192   00122C                     u670:
  3193   00122C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3194   00122E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3195   001230  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3196   001232  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3197   001234  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3198   001236  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3199   001238  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3200   00123A  6C02               	negf	___aomod@dividend^0,c
  3201   00123C  0E00               	movlw	0
  3202   00123E  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3203   001240  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3204   001242  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3205   001244  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3206   001246  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3207   001248  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3208   00124A  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3209   00124C  0E01               	movlw	1
  3210   00124E  6E13               	movwf	___aomod@sign^0,c
  3211   001250                     l1681:
  3212   001250  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3213   001252  EF2F  F009         	goto	u680
  3214   001256  EF2D  F009         	goto	u681
  3215   00125A                     u681:
  3216   00125A  EF3F  F009         	goto	l1685
  3217   00125E                     u680:
  3218   00125E  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3219   001260  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3220   001262  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3221   001264  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3222   001266  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3223   001268  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3224   00126A  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3225   00126C  6C0A               	negf	___aomod@divisor^0,c
  3226   00126E  0E00               	movlw	0
  3227   001270  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3228   001272  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3229   001274  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3230   001276  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3231   001278  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3232   00127A  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3233   00127C  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3234   00127E                     l1685:
  3235   00127E  500A               	movf	___aomod@divisor^0,w,c
  3236   001280  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3237   001282  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3238   001284  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3239   001286  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3240   001288  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3241   00128A  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3242   00128C  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3243   00128E  B4D8               	btfsc	status,2,c
  3244   001290  EF4C  F009         	goto	u691
  3245   001294  EF4E  F009         	goto	u690
  3246   001298                     u691:
  3247   001298  EF96  F009         	goto	l1701
  3248   00129C                     u690:
  3249   00129C  0E01               	movlw	1
  3250   00129E  6E12               	movwf	___aomod@counter^0,c
  3251   0012A0  EF5C  F009         	goto	l1691
  3252   0012A4                     l1689:
  3253   0012A4  90D8               	bcf	status,0,c
  3254   0012A6  360A               	rlcf	___aomod@divisor^0,f,c
  3255   0012A8  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3256   0012AA  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3257   0012AC  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3258   0012AE  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3259   0012B0  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3260   0012B2  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3261   0012B4  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3262   0012B6  2A12               	incf	___aomod@counter^0,f,c
  3263   0012B8                     l1691:
  3264   0012B8  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3265   0012BA  EF61  F009         	goto	u701
  3266   0012BE  EF63  F009         	goto	u700
  3267   0012C2                     u701:
  3268   0012C2  EF52  F009         	goto	l1689
  3269   0012C6                     u700:
  3270   0012C6                     l1693:
  3271   0012C6  500A               	movf	___aomod@divisor^0,w,c
  3272   0012C8  5C02               	subwf	___aomod@dividend^0,w,c
  3273   0012CA  500B               	movf	(___aomod@divisor+1)^0,w,c
  3274   0012CC  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3275   0012CE  500C               	movf	(___aomod@divisor+2)^0,w,c
  3276   0012D0  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3277   0012D2  500D               	movf	(___aomod@divisor+3)^0,w,c
  3278   0012D4  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3279   0012D6  500E               	movf	(___aomod@divisor+4)^0,w,c
  3280   0012D8  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3281   0012DA  500F               	movf	(___aomod@divisor+5)^0,w,c
  3282   0012DC  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3283   0012DE  5010               	movf	(___aomod@divisor+6)^0,w,c
  3284   0012E0  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3285   0012E2  5011               	movf	(___aomod@divisor+7)^0,w,c
  3286   0012E4  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3287   0012E6  A0D8               	btfss	status,0,c
  3288   0012E8  EF78  F009         	goto	u711
  3289   0012EC  EF7A  F009         	goto	u710
  3290   0012F0                     u711:
  3291   0012F0  EF8A  F009         	goto	l1697
  3292   0012F4                     u710:
  3293   0012F4  500A               	movf	___aomod@divisor^0,w,c
  3294   0012F6  5E02               	subwf	___aomod@dividend^0,f,c
  3295   0012F8  500B               	movf	(___aomod@divisor+1)^0,w,c
  3296   0012FA  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3297   0012FC  500C               	movf	(___aomod@divisor+2)^0,w,c
  3298   0012FE  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3299   001300  500D               	movf	(___aomod@divisor+3)^0,w,c
  3300   001302  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3301   001304  500E               	movf	(___aomod@divisor+4)^0,w,c
  3302   001306  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3303   001308  500F               	movf	(___aomod@divisor+5)^0,w,c
  3304   00130A  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3305   00130C  5010               	movf	(___aomod@divisor+6)^0,w,c
  3306   00130E  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3307   001310  5011               	movf	(___aomod@divisor+7)^0,w,c
  3308   001312  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3309   001314                     l1697:
  3310   001314  90D8               	bcf	status,0,c
  3311   001316  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3312   001318  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3313   00131A  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3314   00131C  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3315   00131E  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3316   001320  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3317   001322  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3318   001324  320A               	rrcf	___aomod@divisor^0,f,c
  3319   001326  2E12               	decfsz	___aomod@counter^0,f,c
  3320   001328  EF63  F009         	goto	l1693
  3321   00132C                     l1701:
  3322   00132C  5013               	movf	___aomod@sign^0,w,c
  3323   00132E  B4D8               	btfsc	status,2,c
  3324   001330  EF9C  F009         	goto	u721
  3325   001334  EF9E  F009         	goto	u720
  3326   001338                     u721:
  3327   001338  EFAE  F009         	goto	l1705
  3328   00133C                     u720:
  3329   00133C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3330   00133E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3331   001340  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3332   001342  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3333   001344  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3334   001346  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3335   001348  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3336   00134A  6C02               	negf	___aomod@dividend^0,c
  3337   00134C  0E00               	movlw	0
  3338   00134E  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3339   001350  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3340   001352  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3341   001354  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3342   001356  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3343   001358  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3344   00135A  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3345   00135C                     l1705:
  3346   00135C  C002  F002         	movff	___aomod@dividend,?___aomod
  3347   001360  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3348   001364  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3349   001368  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3350   00136C  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3351   001370  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3352   001374  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3353   001378  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3354   00137C  0012               	return		;funcret
  3355   00137E                     __end_of___aomod:
  3356                           	callstack 0
  3357                           
  3358 ;; *************** function ___aodiv *****************
  3359 ;; Defined at:
  3360 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3361 ;; Parameters:    Size  Location     Type
  3362 ;;  dividend        8    1[COMRAM] long long 
  3363 ;;  divisor         8    9[COMRAM] long long 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  quotient        8   19[COMRAM] long long 
  3366 ;;  sign            1   18[COMRAM] unsigned char 
  3367 ;;  counter         1   17[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  8    1[COMRAM] long long 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3377 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3378 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;Total ram usage:       26 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 1
  3384 ;; This function calls:
  3385 ;;		Nothing
  3386 ;; This function is called by:
  3387 ;;		_dtoa
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text28
  3392   001092                     __ptext28:
  3393                           	callstack 0
  3394   001092                     ___aodiv:
  3395                           	callstack 24
  3396   001092  0E00               	movlw	0
  3397   001094  6E13               	movwf	___aodiv@sign^0,c
  3398   001096  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3399   001098  EF52  F008         	goto	u600
  3400   00109C  EF50  F008         	goto	u601
  3401   0010A0                     u601:
  3402   0010A0  EF64  F008         	goto	l1637
  3403   0010A4                     u600:
  3404   0010A4  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3405   0010A6  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3406   0010A8  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3407   0010AA  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3408   0010AC  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3409   0010AE  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3410   0010B0  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3411   0010B2  6C0A               	negf	___aodiv@divisor^0,c
  3412   0010B4  0E00               	movlw	0
  3413   0010B6  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3414   0010B8  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3415   0010BA  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3416   0010BC  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3417   0010BE  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3418   0010C0  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3419   0010C2  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3420   0010C4  0E01               	movlw	1
  3421   0010C6  6E13               	movwf	___aodiv@sign^0,c
  3422   0010C8                     l1637:
  3423   0010C8  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3424   0010CA  EF6B  F008         	goto	u610
  3425   0010CE  EF69  F008         	goto	u611
  3426   0010D2                     u611:
  3427   0010D2  EF7D  F008         	goto	l1643
  3428   0010D6                     u610:
  3429   0010D6  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3430   0010D8  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3431   0010DA  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3432   0010DC  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3433   0010DE  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3434   0010E0  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3435   0010E2  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3436   0010E4  6C02               	negf	___aodiv@dividend^0,c
  3437   0010E6  0E00               	movlw	0
  3438   0010E8  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3439   0010EA  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3440   0010EC  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3441   0010EE  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3442   0010F0  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3443   0010F2  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3444   0010F4  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3445   0010F6  0E01               	movlw	1
  3446   0010F8  1A13               	xorwf	___aodiv@sign^0,f,c
  3447   0010FA                     l1643:
  3448   0010FA  EE20  F014         	lfsr	2,___aodiv@quotient
  3449   0010FE  0E07               	movlw	7
  3450   001100                     u621:
  3451   001100  6ADE               	clrf	postinc2,c
  3452   001102  06E8               	decf	wreg,f,c
  3453   001104  E2FD               	bc	u621
  3454   001106  500A               	movf	___aodiv@divisor^0,w,c
  3455   001108  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3456   00110A  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3457   00110C  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3458   00110E  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3459   001110  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3460   001112  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3461   001114  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3462   001116  B4D8               	btfsc	status,2,c
  3463   001118  EF90  F008         	goto	u631
  3464   00111C  EF92  F008         	goto	u630
  3465   001120                     u631:
  3466   001120  EFE4  F008         	goto	l1665
  3467   001124                     u630:
  3468   001124  0E01               	movlw	1
  3469   001126  6E12               	movwf	___aodiv@counter^0,c
  3470   001128  EFA0  F008         	goto	l1651
  3471   00112C                     l1649:
  3472   00112C  90D8               	bcf	status,0,c
  3473   00112E  360A               	rlcf	___aodiv@divisor^0,f,c
  3474   001130  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3475   001132  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3476   001134  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3477   001136  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3478   001138  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3479   00113A  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3480   00113C  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3481   00113E  2A12               	incf	___aodiv@counter^0,f,c
  3482   001140                     l1651:
  3483   001140  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3484   001142  EFA5  F008         	goto	u641
  3485   001146  EFA7  F008         	goto	u640
  3486   00114A                     u641:
  3487   00114A  EF96  F008         	goto	l1649
  3488   00114E                     u640:
  3489   00114E                     l1653:
  3490   00114E  90D8               	bcf	status,0,c
  3491   001150  3614               	rlcf	___aodiv@quotient^0,f,c
  3492   001152  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3493   001154  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3494   001156  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3495   001158  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3496   00115A  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3497   00115C  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3498   00115E  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3499   001160  500A               	movf	___aodiv@divisor^0,w,c
  3500   001162  5C02               	subwf	___aodiv@dividend^0,w,c
  3501   001164  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3502   001166  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3503   001168  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3504   00116A  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3505   00116C  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3506   00116E  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3507   001170  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3508   001172  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3509   001174  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3510   001176  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3511   001178  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3512   00117A  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3513   00117C  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3514   00117E  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3515   001180  A0D8               	btfss	status,0,c
  3516   001182  EFC5  F008         	goto	u651
  3517   001186  EFC7  F008         	goto	u650
  3518   00118A                     u651:
  3519   00118A  EFD8  F008         	goto	l1661
  3520   00118E                     u650:
  3521   00118E  500A               	movf	___aodiv@divisor^0,w,c
  3522   001190  5E02               	subwf	___aodiv@dividend^0,f,c
  3523   001192  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3524   001194  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  3525   001196  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3526   001198  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  3527   00119A  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3528   00119C  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  3529   00119E  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3530   0011A0  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  3531   0011A2  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3532   0011A4  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  3533   0011A6  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3534   0011A8  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  3535   0011AA  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3536   0011AC  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  3537   0011AE  8014               	bsf	___aodiv@quotient^0,0,c
  3538   0011B0                     l1661:
  3539   0011B0  90D8               	bcf	status,0,c
  3540   0011B2  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  3541   0011B4  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  3542   0011B6  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3543   0011B8  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3544   0011BA  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3545   0011BC  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3546   0011BE  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3547   0011C0  320A               	rrcf	___aodiv@divisor^0,f,c
  3548   0011C2  2E12               	decfsz	___aodiv@counter^0,f,c
  3549   0011C4  EFA7  F008         	goto	l1653
  3550   0011C8                     l1665:
  3551   0011C8  5013               	movf	___aodiv@sign^0,w,c
  3552   0011CA  B4D8               	btfsc	status,2,c
  3553   0011CC  EFEA  F008         	goto	u661
  3554   0011D0  EFEC  F008         	goto	u660
  3555   0011D4                     u661:
  3556   0011D4  EFFC  F008         	goto	l1669
  3557   0011D8                     u660:
  3558   0011D8  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  3559   0011DA  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  3560   0011DC  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  3561   0011DE  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  3562   0011E0  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  3563   0011E2  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  3564   0011E4  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  3565   0011E6  6C14               	negf	___aodiv@quotient^0,c
  3566   0011E8  0E00               	movlw	0
  3567   0011EA  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  3568   0011EC  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  3569   0011EE  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  3570   0011F0  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  3571   0011F2  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  3572   0011F4  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  3573   0011F6  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  3574   0011F8                     l1669:
  3575   0011F8  C014  F002         	movff	___aodiv@quotient,?___aodiv
  3576   0011FC  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  3577   001200  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  3578   001204  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  3579   001208  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  3580   00120C  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  3581   001210  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  3582   001214  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  3583   001218  0012               	return		;funcret
  3584   00121A                     __end_of___aodiv:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _RGBC2Serial *****************
  3588 ;; Defined at:
  3589 ;;		line 86 in file "color.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  str             2    6[COMRAM] PTR unsigned char 
  3592 ;;		 -> RAM(3561), main@buf(100), 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;		None
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3604 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3608 ;;Total ram usage:        4 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 3
  3611 ;; This function calls:
  3612 ;;		_sendStringSerial4
  3613 ;; This function is called by:
  3614 ;;		_colorVal2String
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           
  3619                           	psect	text29
  3620   001B04                     __ptext29:
  3621                           	callstack 0
  3622   001B04                     _RGBC2Serial:
  3623                           	callstack 26
  3624   001B04                     
  3625                           ;color.c: 87:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  3626   001B04  0EA3               	movlw	163
  3627   001B06  6E0A               	movwf	(??_RGBC2Serial+1)^0,c
  3628   001B08  0E57               	movlw	87
  3629   001B0A  6E09               	movwf	??_RGBC2Serial^0,c
  3630   001B0C  0E02               	movlw	2
  3631   001B0E                     u1057:
  3632   001B0E  2EE8               	decfsz	wreg,f,c
  3633   001B10  D7FE               	bra	u1057
  3634   001B12  2E09               	decfsz	??_RGBC2Serial^0,f,c
  3635   001B14  D7FC               	bra	u1057
  3636   001B16  2E0A               	decfsz	(??_RGBC2Serial+1)^0,f,c
  3637   001B18  D7FA               	bra	u1057
  3638   001B1A  D000               	nop2	
  3639   001B1C                     
  3640                           ;color.c: 88:     sendStringSerial4(str);
  3641   001B1C  C007  F003         	movff	RGBC2Serial@str,sendStringSerial4@string
  3642   001B20  C008  F004         	movff	RGBC2Serial@str+1,sendStringSerial4@string+1
  3643   001B24  EC1F  F00D         	call	_sendStringSerial4	;wreg free
  3644   001B28  0012               	return		;funcret
  3645   001B2A                     __end_of_RGBC2Serial:
  3646                           	callstack 0
  3647                           
  3648 ;; *************** function _sendStringSerial4 *****************
  3649 ;; Defined at:
  3650 ;;		line 37 in file "../lab-5-areeb-atulit.X/serial.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  string          2    2[COMRAM] PTR unsigned char 
  3653 ;;		 -> RAM(3561), main@buf(100), 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  i               2    4[COMRAM] int 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  1    wreg      void 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3665 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3666 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3669 ;;Total ram usage:        4 bytes
  3670 ;; Hardware stack levels used: 1
  3671 ;; Hardware stack levels required when called: 2
  3672 ;; This function calls:
  3673 ;;		_sendCharSerial4
  3674 ;; This function is called by:
  3675 ;;		_RGBC2Serial
  3676 ;; This function uses a non-reentrant model
  3677 ;;
  3678                           
  3679                           	psect	text30
  3680   001A3E                     __ptext30:
  3681                           	callstack 0
  3682   001A3E                     _sendStringSerial4:
  3683                           	callstack 26
  3684   001A3E                     
  3685                           ;../lab-5-areeb-atulit.X/serial.c: 39:     int i=0;
  3686   001A3E  0E00               	movlw	0
  3687   001A40  6E06               	movwf	(sendStringSerial4@i+1)^0,c
  3688   001A42  0E00               	movlw	0
  3689   001A44  6E05               	movwf	sendStringSerial4@i^0,c
  3690                           
  3691                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3692   001A46  EF30  F00D         	goto	l1853
  3693   001A4A                     l1849:
  3694                           
  3695                           ;../lab-5-areeb-atulit.X/serial.c: 41:         sendCharSerial4(string[i]);
  3696   001A4A  5005               	movf	sendStringSerial4@i^0,w,c
  3697   001A4C  2403               	addwf	sendStringSerial4@string^0,w,c
  3698   001A4E  6ED9               	movwf	fsr2l,c
  3699   001A50  5006               	movf	(sendStringSerial4@i+1)^0,w,c
  3700   001A52  2004               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3701   001A54  6EDA               	movwf	fsr2h,c
  3702   001A56  50DF               	movf	indf2,w,c
  3703   001A58  ECB6  F00D         	call	_sendCharSerial4
  3704   001A5C                     
  3705                           ;../lab-5-areeb-atulit.X/serial.c: 42:         i++;
  3706   001A5C  4A05               	infsnz	sendStringSerial4@i^0,f,c
  3707   001A5E  2A06               	incf	(sendStringSerial4@i+1)^0,f,c
  3708   001A60                     l1853:
  3709                           
  3710                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3711   001A60  5005               	movf	sendStringSerial4@i^0,w,c
  3712   001A62  2403               	addwf	sendStringSerial4@string^0,w,c
  3713   001A64  6ED9               	movwf	fsr2l,c
  3714   001A66  5006               	movf	(sendStringSerial4@i+1)^0,w,c
  3715   001A68  2004               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3716   001A6A  6EDA               	movwf	fsr2h,c
  3717   001A6C  50DF               	movf	indf2,w,c
  3718   001A6E  A4D8               	btfss	status,2,c
  3719   001A70  EF3C  F00D         	goto	u941
  3720   001A74  EF3E  F00D         	goto	u940
  3721   001A78                     u941:
  3722   001A78  EF25  F00D         	goto	l1849
  3723   001A7C                     u940:
  3724   001A7C  0012               	return		;funcret
  3725   001A7E                     __end_of_sendStringSerial4:
  3726                           	callstack 0
  3727                           
  3728 ;; *************** function _sendCharSerial4 *****************
  3729 ;; Defined at:
  3730 ;;		line 30 in file "../lab-5-areeb-atulit.X/serial.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  charToSend      1    wreg     unsigned char 
  3733 ;; Auto vars:     Size  Location     Type
  3734 ;;  charToSend      1    1[COMRAM] unsigned char 
  3735 ;; Return value:  Size  Location     Type
  3736 ;;                  1    wreg      void 
  3737 ;; Registers used:
  3738 ;;		wreg
  3739 ;; Tracked objects:
  3740 ;;		On entry : 0/0
  3741 ;;		On exit  : 0/0
  3742 ;;		Unchanged: 0/0
  3743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3748 ;;Total ram usage:        1 bytes
  3749 ;; Hardware stack levels used: 1
  3750 ;; Hardware stack levels required when called: 1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_sendStringSerial4
  3755 ;; This function uses a non-reentrant model
  3756 ;;
  3757                           
  3758                           	psect	text31
  3759   001B6C                     __ptext31:
  3760                           	callstack 0
  3761   001B6C                     _sendCharSerial4:
  3762                           	callstack 26
  3763                           
  3764                           ;incstack = 0
  3765                           ;sendCharSerial4@charToSend stored from wreg
  3766   001B6C  6E02               	movwf	sendCharSerial4@charToSend^0,c
  3767   001B6E                     l272:
  3768   001B6E  010E               	movlb	14	; () banked
  3769   001B70  A537               	btfss	55,2,b	;volatile
  3770   001B72  EFBD  F00D         	goto	u881
  3771   001B76  EFBF  F00D         	goto	u880
  3772   001B7A                     u881:
  3773   001B7A  EFB7  F00D         	goto	l272
  3774   001B7E                     u880:
  3775   001B7E                     
  3776                           ; BSR set to: 14
  3777                           ;../lab-5-areeb-atulit.X/serial.c: 32:     TX4REG = charToSend;
  3778   001B7E  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3779   001B82                     
  3780                           ; BSR set to: 14
  3781   001B82  0012               	return		;funcret
  3782   001B84                     __end_of_sendCharSerial4:
  3783                           	callstack 0
  3784                           
  3785 ;; *************** function _HighISR *****************
  3786 ;; Defined at:
  3787 ;;		line 22 in file "interrupts.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;		None
  3790 ;; Auto vars:     Size  Location     Type
  3791 ;;		None
  3792 ;; Return value:  Size  Location     Type
  3793 ;;                  1    wreg      void 
  3794 ;; Registers used:
  3795 ;;		wreg, status,2, status,0
  3796 ;; Tracked objects:
  3797 ;;		On entry : 0/0
  3798 ;;		On exit  : 0/0
  3799 ;;		Unchanged: 0/0
  3800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3803 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3804 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3805 ;;Total ram usage:        1 bytes
  3806 ;; Hardware stack levels used: 1
  3807 ;; This function calls:
  3808 ;;		Nothing
  3809 ;; This function is called by:
  3810 ;;		Interrupt level 2
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	intcode
  3815   000008                     __pintcode:
  3816                           	callstack 0
  3817   000008                     _HighISR:
  3818                           	callstack 21
  3819                           
  3820                           ; BSR set to: 14
  3821                           ;incstack = 0
  3822   000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3823   00000A                     
  3824                           ;interrupts.c: 26:     if(PIR0bits.TMR0IF){
  3825   00000A  010E               	movlb	14	; () banked
  3826   00000C  AB33               	btfss	51,5,b	;volatile
  3827   00000E  EF0B  F000         	goto	i2u52_41
  3828   000012  EF0D  F000         	goto	i2u52_40
  3829   000016                     i2u52_41:
  3830   000016  EF21  F000         	goto	i2l330
  3831   00001A                     i2u52_40:
  3832   00001A                     
  3833                           ; BSR set to: 14
  3834                           ;interrupts.c: 27:         LATHbits.LATH3 = !LATHbits.LATH3;
  3835   00001A  A680               	btfss	128,3,c	;volatile
  3836   00001C  EF12  F000         	goto	i2u53_41
  3837   000020  EF16  F000         	goto	i2u53_40
  3838   000024                     i2u53_41:
  3839   000024  6A01               	clrf	??_HighISR^0,c
  3840   000026  2A01               	incf	??_HighISR^0,f,c
  3841   000028  EF17  F000         	goto	i2u54_48
  3842   00002C                     i2u53_40:
  3843   00002C  6A01               	clrf	??_HighISR^0,c
  3844   00002E                     i2u54_48:
  3845   00002E  4601               	rlncf	??_HighISR^0,f,c
  3846   000030  4601               	rlncf	??_HighISR^0,f,c
  3847   000032  4601               	rlncf	??_HighISR^0,f,c
  3848   000034  5080               	movf	128,w,c	;volatile
  3849   000036  1801               	xorwf	??_HighISR^0,w,c
  3850   000038  0BF7               	andlw	-9
  3851   00003A  1801               	xorwf	??_HighISR^0,w,c
  3852   00003C  6E80               	movwf	128,c	;volatile
  3853   00003E                     
  3854                           ;interrupts.c: 29:         PIR0bits.TMR0IF=0;
  3855   00003E  010E               	movlb	14	; () banked
  3856   000040  9B33               	bcf	51,5,b	;volatile
  3857   000042                     i2l330:
  3858                           
  3859                           ; BSR set to: 14
  3860   000042  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3861   000044  0011               	retfie		f
  3862   000046                     __end_of_HighISR:
  3863                           	callstack 0
  3864                           
  3865                           	psect	rparam
  3866   000000                     
  3867                           	psect	temp
  3868   00005D                     btemp:
  3869                           	callstack 0
  3870   00005D                     	ds	1
  3871   000000                     int$flags	set	btemp
  3872   000000                     wtemp8	set	btemp+1
  3873   000000                     ttemp5	set	btemp+1
  3874   000000                     ttemp6	set	btemp+4
  3875   000000                     ttemp7	set	btemp+8
  3876                           
  3877                           	psect	idloc
  3878                           
  3879                           ;Config register IDLOC0 @ 0x200000
  3880                           ;	unspecified, using default values
  3881   200000                     	org	2097152
  3882   200000  0FFF               	dw	4095
  3883                           
  3884                           ;Config register IDLOC1 @ 0x200002
  3885                           ;	unspecified, using default values
  3886   200002                     	org	2097154
  3887   200002  0FFF               	dw	4095
  3888                           
  3889                           ;Config register IDLOC2 @ 0x200004
  3890                           ;	unspecified, using default values
  3891   200004                     	org	2097156
  3892   200004  0FFF               	dw	4095
  3893                           
  3894                           ;Config register IDLOC3 @ 0x200006
  3895                           ;	unspecified, using default values
  3896   200006                     	org	2097158
  3897   200006  0FFF               	dw	4095
  3898                           
  3899                           ;Config register IDLOC4 @ 0x200008
  3900                           ;	unspecified, using default values
  3901   200008                     	org	2097160
  3902   200008  0FFF               	dw	4095
  3903                           
  3904                           ;Config register IDLOC5 @ 0x20000A
  3905                           ;	unspecified, using default values
  3906   20000A                     	org	2097162
  3907   20000A  0FFF               	dw	4095
  3908                           
  3909                           ;Config register IDLOC6 @ 0x20000C
  3910                           ;	unspecified, using default values
  3911   20000C                     	org	2097164
  3912   20000C  0FFF               	dw	4095
  3913                           
  3914                           ;Config register IDLOC7 @ 0x20000E
  3915                           ;	unspecified, using default values
  3916   20000E                     	org	2097166
  3917   20000E  0FFF               	dw	4095
  3918                           
  3919                           	psect	config
  3920                           
  3921                           ;Config register CONFIG1L @ 0x300000
  3922                           ;	External Oscillator mode Selection bits
  3923                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3924                           ;	Power-up default value for COSC bits
  3925                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3926   300000                     	org	3145728
  3927   300000  AA                 	db	170
  3928                           
  3929                           ;Config register CONFIG1H @ 0x300001
  3930                           ;	unspecified, using default values
  3931                           ;	Clock Out Enable bit
  3932                           ;	CLKOUTEN = 0x1, unprogrammed default
  3933                           ;	Clock Switch Enable bit
  3934                           ;	CSWEN = 0x1, unprogrammed default
  3935                           ;	Fail-Safe Clock Monitor Enable bit
  3936                           ;	FCMEN = 0x1, unprogrammed default
  3937   300001                     	org	3145729
  3938   300001  FF                 	db	255
  3939                           
  3940                           ;Config register CONFIG2L @ 0x300002
  3941                           ;	unspecified, using default values
  3942                           ;	Master Clear Enable bit
  3943                           ;	MCLRE = 0x1, unprogrammed default
  3944                           ;	Power-up Timer Enable bit
  3945                           ;	PWRTE = 0x1, unprogrammed default
  3946                           ;	Low-power BOR enable bit
  3947                           ;	LPBOREN = 0x1, unprogrammed default
  3948                           ;	Brown-out Reset Enable bits
  3949                           ;	BOREN = 0x3, unprogrammed default
  3950   300002                     	org	3145730
  3951   300002  FF                 	db	255
  3952                           
  3953                           ;Config register CONFIG2H @ 0x300003
  3954                           ;	unspecified, using default values
  3955                           ;	Brown Out Reset Voltage selection bits
  3956                           ;	BORV = 0x3, unprogrammed default
  3957                           ;	ZCD Disable bit
  3958                           ;	ZCD = 0x1, unprogrammed default
  3959                           ;	PPSLOCK bit One-Way Set Enable bit
  3960                           ;	PPS1WAY = 0x1, unprogrammed default
  3961                           ;	Stack Full/Underflow Reset Enable bit
  3962                           ;	STVREN = 0x1, unprogrammed default
  3963                           ;	Debugger Enable bit
  3964                           ;	DEBUG = 0x1, unprogrammed default
  3965                           ;	Extended Instruction Set Enable bit
  3966                           ;	XINST = 0x1, unprogrammed default
  3967   300003                     	org	3145731
  3968   300003  FF                 	db	255
  3969                           
  3970                           ;Config register CONFIG3L @ 0x300004
  3971                           ;	WDT Period Select bits
  3972                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3973                           ;	WDT operating mode
  3974                           ;	WDTE = OFF, WDT Disabled
  3975   300004                     	org	3145732
  3976   300004  9F                 	db	159
  3977                           
  3978                           ;Config register CONFIG3H @ 0x300005
  3979                           ;	unspecified, using default values
  3980                           ;	WDT Window Select bits
  3981                           ;	WDTCWS = 0x7, unprogrammed default
  3982                           ;	WDT input clock selector
  3983                           ;	WDTCCS = 0x7, unprogrammed default
  3984   300005                     	org	3145733
  3985   300005  FF                 	db	255
  3986                           
  3987                           ;Config register CONFIG4L @ 0x300006
  3988                           ;	unspecified, using default values
  3989                           ;	Write Protection Block 0
  3990                           ;	WRT0 = 0x1, unprogrammed default
  3991                           ;	Write Protection Block 1
  3992                           ;	WRT1 = 0x1, unprogrammed default
  3993                           ;	Write Protection Block 2
  3994                           ;	WRT2 = 0x1, unprogrammed default
  3995                           ;	Write Protection Block 3
  3996                           ;	WRT3 = 0x1, unprogrammed default
  3997                           ;	Write Protection Block 3
  3998                           ;	WRT4 = 0x1, unprogrammed default
  3999                           ;	Write Protection Block 3
  4000                           ;	WRT5 = 0x1, unprogrammed default
  4001                           ;	Write Protection Block 3
  4002                           ;	WRT6 = 0x1, unprogrammed default
  4003                           ;	Write Protection Block 3
  4004                           ;	WRT7 = 0x1, unprogrammed default
  4005   300006                     	org	3145734
  4006   300006  FF                 	db	255
  4007                           
  4008                           ;Config register CONFIG4H @ 0x300007
  4009                           ;	unspecified, using default values
  4010                           ;	Configuration Register Write Protection bit
  4011                           ;	WRTC = 0x1, unprogrammed default
  4012                           ;	Boot Block Write Protection bit
  4013                           ;	WRTB = 0x1, unprogrammed default
  4014                           ;	Data EEPROM Write Protection bit
  4015                           ;	WRTD = 0x1, unprogrammed default
  4016                           ;	Scanner Enable bit
  4017                           ;	SCANE = 0x1, unprogrammed default
  4018                           ;	Low Voltage Programming Enable bit
  4019                           ;	LVP = 0x1, unprogrammed default
  4020   300007                     	org	3145735
  4021   300007  FF                 	db	255
  4022                           
  4023                           ;Config register CONFIG5L @ 0x300008
  4024                           ;	unspecified, using default values
  4025                           ;	UserNVM Program Memory Code Protection bit
  4026                           ;	CP = 0x1, unprogrammed default
  4027                           ;	DataNVM Memory Code Protection bit
  4028                           ;	CPD = 0x1, unprogrammed default
  4029   300008                     	org	3145736
  4030   300008  FF                 	db	255
  4031                           
  4032                           ;Config register CONFIG5H @ 0x300009
  4033                           ;	unspecified, using default values
  4034   300009                     	org	3145737
  4035   300009  FF                 	db	255
  4036                           
  4037                           ;Config register CONFIG6L @ 0x30000A
  4038                           ;	unspecified, using default values
  4039                           ;	Table Read Protection Block 0
  4040                           ;	EBTR0 = 0x1, unprogrammed default
  4041                           ;	Table Read Protection Block 1
  4042                           ;	EBTR1 = 0x1, unprogrammed default
  4043                           ;	Table Read Protection Block 2
  4044                           ;	EBTR2 = 0x1, unprogrammed default
  4045                           ;	Table Read Protection Block 3
  4046                           ;	EBTR3 = 0x1, unprogrammed default
  4047                           ;	Table Read Protection Block 4
  4048                           ;	EBTR4 = 0x1, unprogrammed default
  4049                           ;	Table Read Protection Block 5
  4050                           ;	EBTR5 = 0x1, unprogrammed default
  4051                           ;	Table Read Protection Block 6
  4052                           ;	EBTR6 = 0x1, unprogrammed default
  4053                           ;	Table Read Protection Block 7
  4054                           ;	EBTR7 = 0x1, unprogrammed default
  4055   30000A                     	org	3145738
  4056   30000A  FF                 	db	255
  4057                           
  4058                           ;Config register CONFIG6H @ 0x30000B
  4059                           ;	unspecified, using default values
  4060                           ;	Boot Block Table Read Protection bit
  4061                           ;	EBTRB = 0x1, unprogrammed default
  4062   30000B                     	org	3145739
  4063   30000B  FF                 	db	255
  4064                           tosu	equ	0xFFF
  4065                           tosh	equ	0xFFE
  4066                           tosl	equ	0xFFD
  4067                           stkptr	equ	0xFFC
  4068                           pclatu	equ	0xFFB
  4069                           pclath	equ	0xFFA
  4070                           pcl	equ	0xFF9
  4071                           tblptru	equ	0xFF8
  4072                           tblptrh	equ	0xFF7
  4073                           tblptrl	equ	0xFF6
  4074                           tablat	equ	0xFF5
  4075                           prodh	equ	0xFF4
  4076                           prodl	equ	0xFF3
  4077                           indf0	equ	0xFEF
  4078                           postinc0	equ	0xFEE
  4079                           postdec0	equ	0xFED
  4080                           preinc0	equ	0xFEC
  4081                           plusw0	equ	0xFEB
  4082                           fsr0h	equ	0xFEA
  4083                           fsr0l	equ	0xFE9
  4084                           wreg	equ	0xFE8
  4085                           indf1	equ	0xFE7
  4086                           postinc1	equ	0xFE6
  4087                           postdec1	equ	0xFE5
  4088                           preinc1	equ	0xFE4
  4089                           plusw1	equ	0xFE3
  4090                           fsr1h	equ	0xFE2
  4091                           fsr1l	equ	0xFE1
  4092                           bsr	equ	0xFE0
  4093                           indf2	equ	0xFDF
  4094                           postinc2	equ	0xFDE
  4095                           postdec2	equ	0xFDD
  4096                           preinc2	equ	0xFDC
  4097                           plusw2	equ	0xFDB
  4098                           fsr2h	equ	0xFDA
  4099                           fsr2l	equ	0xFD9
  4100                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        3
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     91      92
    BANK0           160    142     153
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    main$2528	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2174$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2121$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2121$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), main@buf(BANK0[100]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    S1020DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhlllll[1]), CCPR2H(BITBIGSFRhlll[1]), 

    S1020DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhlllll[1]), CCPR1H(BITBIGSFRhlll[1]), 

    colorVal2String@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    colorVal2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    RGBC2Serial@str	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), main@buf(BANK0[100]), 


Critical Paths under _main in COMRAM

    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RGBC2Serial->_sendStringSerial4
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colorVal2String
    _colorVal2String->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               115   115      0    7996
                                             89 COMRAM     2     2      0
                                             29 BANK0    113   113      0
                        _RGBC2Serial
                    _colorVal2String
                   _color_click_init
                    _color_read_RGBC
                         _initUSART4
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     616
                                             12 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     294
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     294
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorVal2String                                      4     0      4    6478
                                             25 BANK0      4     0      4
                        _RGBC2Serial
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             63 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             28 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _RGBC2Serial                                          4     2      2     362
                                              6 COMRAM     4     2      2
                  _sendStringSerial4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    4     2      2     188
                                              2 COMRAM     4     2      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RGBC2Serial
     _sendStringSerial4
       _sendCharSerial4
   _colorVal2String
     _RGBC2Serial
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4
   _tricolorLED

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      61        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     8E      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5B      5C       1       97.9%
BITBIGSFRlllhh      52      0       0      41        0.0%
BITBIGSFRlllhll     37      0       0      43        0.0%
BITBIGSFRlllllh     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      59        0.0%
BITBIGSFRllllll     1E      0       0      47        0.0%
BITBIGSFRhlll       1E      0       0      38        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhll       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlhh        E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      B      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      58        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhlh      2      0       0      42        0.0%
BITBIGSFRhllh        2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      40        0.0%
BITBIGSFRlhh         2      0       0      39        0.0%
BITBIGSFRhlhl        1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllh       1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     165      60        0.0%
DATA                 0      0     165       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 01 09:43:26 2022

               _color_read_Red 17A0                _color_read_RGBC 16F0                _color_read_Blue 1890  
                           l51 1AB0                             l60 183E                             l54 1B6A  
                           l63 18DE                             l72 174C                             l57 17EE  
                           l66 188E                             l75 16EE                             l69 1B28  
                           l78 1B98               _color_read_Clear 1840               _color_read_Green 17F0  
                          l111 1B02                            l120 1BB8                            l105 1ADA  
                          l114 1BC2                            l123 1BA4                            l108 1ADC  
                          l117 1BAE                            l126 19FC                            l226 167C  
                          l263 1B4A                            l272 1B6E                            l281 1A7C  
                          l275 1B82                            l461 1218                            l474 137C  
                          u600 10A4                            u601 10A0                            u610 10D6  
                          u611 10D2                            u700 12C6                            u621 1100  
                          u701 12C2                            u630 1124                            u710 12F4  
                          u550 14DE                            u631 1120                            u711 12F0  
                          u551 14DA                            u640 114E                            u720 133C  
                          u560 14F0                            u800 0EC0                            u641 114A  
                          u721 1338                            u561 14EC                            u801 0EBC  
                          u650 118E                            u570 1518                            u730 15A4  
                          u810 0ED6                            u651 118A                            u571 1514  
                          u731 15A0                            u811 0ED2                            u660 11D8  
                          u580 154E                            u740 15FA                            u820 1012  
                          u900 13EE                            u661 11D4                            u581 154A  
                          u741 15F6                            u821 100E                            u901 13EA  
                          u670 122C                            u750 1A18                            u590 19BA  
                          u830 1030                            u910 140A                            u671 1228  
                          u751 1A14                            u591 19B6                            u831 102C  
                          u911 1406                            u680 125E                            u840 104A  
                          u760 0E44                            u920 19E6                            u681 125A  
                          u841 1046                            u761 0E3E                            u921 19DE  
                          u690 129C                            u850 105A                            u770 0E46  
                          u691 1298                            u851 1056                            u940 1A7C  
                          u780 0E58                            u860 1AEC                            u941 1A78  
                          u781 0E54                            u861 1AE8                            u790 0E94  
                          u950 1924                            u870 1B02                            u791 0E90  
                          u951 1920                            u871 1AFE                            u880 1B7E  
                          u881 1B7A                            u890 13A2                            u938 19E8  
                          u891 139E                            _abs 19FE                            _pad 1596  
                  _tricolorLED 1B84                            wreg 000FE8                           l1102 1594  
                         l1110 19BA                           l1113 1BC8                           l1025 179E  
                         l1051 160E                           ?_abs 0014                           l1070 1090  
                         l1047 15B8                           l2031 1614                           l1056 0EA0  
                         l2025 1680                           l2041 162C                           l2033 1618  
                         l1090 1A3C                           l1058 0EA8                           l1059 0EEE  
                         l1083 192C                           l2027 16E2                           l2043 1638  
                         l2035 161A                           l1077 14CA                           l2045 164E  
                         l2037 161C                           l2029 1610                           l1087 1A34  
                         l2047 1670                           l2039 1620                           l1611 14F0  
                         l1701 132C                           l1613 14FA                           l1621 1978  
                         l1631 1096                           l1703 133C                           l1615 1518  
                         l1607 14CC                           l1623 1984                           l1711 15A4  
                         l1641 10F6                           l1633 10A4                           l1705 135C  
                         l1617 154E                           l1609 14DE                           l1625 1996  
                         l1721 15FA                           l1713 15B0                           l1801 140A  
                         l1651 1140                           l1643 10FA                           l1635 10C4  
                         l1723 19FE                           l1627 199A                           l1715 15C4  
                         l1731 0E48                           l1803 1460                           l1811 14A2  
                         l1661 11B0                           l1653 114E                           l1645 1106  
                         l1637 10C8                           l1629 1092                           l1725 1A18  
                         l1717 15D8                           l1709 1596                           l1741 0EC0  
                         l1733 0E58                           l1821 1B9C                           l1903 1B04  
                         l1663 11C2                           l1655 1160                           l1647 1124  
                         l1639 10D6                           l1719 15DC                           l1751 0EF6  
                         l1743 0EC6                           l1735 0E78                           l1727 0E14  
                         l1807 1490                           l1911 1768                           l1823 1BA0  
                         l1831 1BAA                           l1905 1B1C                           l1657 118E  
                         l1649 112C                           l1665 11C8                           l1681 1250  
                         l1673 121A                           l1761 0F94                           l1753 0F00  
                         l1745 0ED6                           l1737 0E94                           l1729 0E34  
                         l1913 1770                           l1817 1BBA                           l1825 1BB0  
                         l1921 1A82                           l1841 19F8                           l1833 19BE  
                         l1851 1A5C                           l1667 11D8                           l1659 11AE  
                         l1691 12B8                           l1683 125E                           l1675 121E  
                         l1771 105A                           l1755 0F06                           l1763 0FF8  
                         l1747 0EE2                           l1739 0EB0                           l1915 178C  
                         l1907 174E                           l1819 1BBE                           l1827 1BB4  
                         l1923 1A8C                           l1843 19FA                           l1835 19C2  
                         l1853 1A60                           l1669 11F8                           l1693 12C6  
                         l1685 127E                           l1677 122C                           l1773 1060  
                         l1765 1012                           l1757 0F88                           l1749 0EEA  
                         l1861 1924                           l1909 1760                           l1781 1AEC  
                         l1925 1A9C                           l1837 19CA                           l1829 1BA6  
                         l1941 1B36                           l1783 1B6E                           l1847 1A3E  
                         l1695 12F4                           l1687 129C                           l1679 124C  
                         l1775 1070                           l1767 1030                           l1759 0F8E  
                         l1791 13B0                           l1855 18E0                           l1871 1AC4  
                         l1927 1AA6                           l1919 1A7E                           l1839 19D2  
                         l1951 1B48                           l1943 1B40                           l1935 1B84  
                         l1785 1B7E                           l1849 1A4A                           l1697 1314  
                         l1689 12A4                           l1769 104A                           l1793 13BE  
                         l1857 18EC                           l1873 1AC6                           l1865 1AB2  
                         l1881 17E6                           l1929 16F0                           l1945 1B42  
                         l1937 1B2A                           l1699 1326                           l1795 13C2  
                         l1787 137E                           l1859 1908                           l1875 1AC8  
                         l1867 1ABC                           l1779 1ADC                           l1891 1890  
                         l1947 1B44                           l1939 1B34                           l1797 13D2  
                         l1789 13A2                           l1869 1AC2                           l1877 1B4E  
                         l1893 18D6                           l1885 17F0                           l1949 1B46  
                         ?_pad 0012                           l1799 13EE                           l1887 1836  
                         l1879 17A0                           l1897 1840                           l1899 1886  
                         STR_1 0E01                   ?_RGBC2Serial 0007                           u1047 1A92  
                         u1057 1B0E                   _BAUD4CONbits 000EE9                           _T2PR 000FBC  
                         abs@a 0014                           _dbuf 0150                           _main 1610  
                         _dtoa 0E14                           _prec 00F0                           pad@i 0019  
                         pad@p 0016                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001B  
                         fsr2l 000FD9                           btemp 005D                           start 0046  
       __end_of_color_read_Red 17F0                __end_of_HighISR 0046                   ___param_bank 000000  
                        ??_abs 0016                          ??_pad 0018               ?_colorVal2String 0079  
              __end_of___aodiv 121A                          ?_main 0001                          ?_dtoa 001D  
              __end_of___aomod 137E                          i2l330 0042                   vfpfcnvrt@fmt 0042  
                        _TMR0H 000FD4                          _TMR0L 000FD3        __end_of_sendCharSerial4 1B84  
   __end_of_I2C_2_Master_Start 1BC4     __end_of_I2C_2_Master_Write 1BA6                          _flags 00F2  
                        _fputc 14CC                          _fputs 1978                          pad@fp 0012  
                        _width 00EE                          _putch 1BC8                          dtoa@d 001F  
                        dtoa@i 003D                          dtoa@n 0035                          dtoa@p 0031  
                        dtoa@s 003F                          dtoa@w 0033                          tablat 000FF5  
                        ttemp5 005E                          ttemp6 0061                          ttemp7 0065  
                        status 000FD8                          wtemp8 005E                __end_of_sprintf 17A0  
      __end_of_color_read_RGBC 174E        __end_of_color_read_Blue 18E0          _I2C_2_Master_RepStart 1BA6  
              ?_color_read_Red 0006                __initialization 192E                   __end_of_main 1680  
                 __end_of_dtoa 1092                         ??_main 005A                         ??_dtoa 0027  
                __activetblptr 000001                         ?_fputc 0002                         ?_fputs 000B  
                       _CCPR1H 000FAA                         _CCPR2H 000FA6                         _CCPR3H 000F25  
                       _CCPR4H 000F21                         ?_putch 0001                         _RC0PPS 000E62  
                       _RC4REG 000EE3                         _RE2PPS 000E74                         _RD5PPS 000E6F  
                       _RC7PPS 000E69                         _RE4PPS 000E76                         _RD6PPS 000E70  
                       i2l1591 000A                         i2l1593 001A                         i2l1595 003E  
                       _RG6PPS 000E88                      ??_HighISR 0001       __end_of_color_click_init 1AB2  
                       _RX4PPS 000E15                         _TX4REG 000EE4                   _CCPTMRS0bits 000FAD  
                 vfprintf@cfmt 0058                      ??___aodiv 0012                      ??___aomod 0012  
                       clear_0 1952                         clear_1 195E                         isa$std 000001  
                       pad@buf 0014                         dtoa@fp 001D                         fputc@c 0002  
                       fputs@c 000F                         fputs@i 0010                         fputs@s 000B  
                 __mediumconst 0000                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8               ?_sendCharSerial4 0001                         putch@c 0001  
             __end_of_vfprintf 192E                      ??_sprintf 005A                     __accesstop 0060  
      __end_of__initialization 1966       __end_of_color_read_Clear 1890       __end_of_color_read_Green 1840  
       ?_I2C_2_Master_RepStart 0001                  ___rparam_used 000001               ?_color_read_RGBC 000D  
             ?_color_read_Blue 0006                 __pcstackCOMRAM 0001                   __pidataBANK0 1BC4  
                __end_of_fputc 1596                  __end_of_fputs 19BC                  __end_of_putch 1BCA  
                 ?_tricolorLED 0001                        ??_fputc 0006                        ??_fputs 000F  
                      ??_putch 0002                     __pbssBANK0 00EE                     __pbssBANK1 0100  
            _color_writetoaddr 1B4C                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0004  
          ??_color_writetoaddr 0005                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      i2u52_40 001A                        i2u52_41 0016                        i2u53_40 002C  
                      i2u53_41 0024                        i2u54_48 002E                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5         color_writetoaddr@value 0004               ??_color_read_Red 0008  
                      _HighISR 0008      __end_of_color_writetoaddr 1B6C             _I2C_2_Master_Start 1BBA  
                   _initUSART4 1B2A             _I2C_2_Master_Write 1B9A                        __Hparam 0000  
                      __Lparam 0000              color_read_Red@tmp 000B        sendStringSerial4@string 0003  
                      ___aodiv 1092                        ___aomod 121A            ?_I2C_2_Master_Start 0001  
          ?_I2C_2_Master_Write 0001                      ?_vfprintf 0052                   __psmallconst 0E00  
                      __pcinit 192E                        __ramtop 0E00                        __ptext0 1610  
                      __ptext1 1B84                        __ptext2 1B2A                        __ptext3 16F0  
                      __ptext4 17A0                        __ptext5 17F0                        __ptext6 1840  
                      __ptext7 1890                        __ptext8 1BA6                        __ptext9 19BC  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE                  _RxBufWriteCnt 00F5  
                      main@buf 007D                        _sprintf 174E           ??_I2C_2_Master_Start 0003  
         ??_I2C_2_Master_Write 0003           end_of_initialization 1966                        fputc@fp 0004  
                      fputs@fp 000D              ?_color_click_init 0001             ??_color_click_init 0006  
            __end_of_vfpfcnvrt 14CC                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE               vfpfcnvrt@convarg 0048  
                   main@F14297 00F6                     ??_vfprintf 0058            color_read_RGBC@temp 000D  
                    _TRISAbits 000F81                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87       color_writetoaddr@address 0005  
      ??_I2C_2_Master_RepStart 0003             sendStringSerial4@i 0005                    _CCP1CONbits 000FAB  
            ?_color_read_Clear 0006                   _EUSART4RXbuf 013C                   _EUSART4TXbuf 0100  
                  _CCP2CONbits 000FA7              ?_color_read_Green 0006                    _CCP3CONbits 000F26  
                  ?_initUSART4 0001                    _CCP4CONbits 000F22      sendCharSerial4@charToSend 0002  
           ??_color_read_Clear 0008             ??_color_read_Green 0008                    vfpfcnvrt@ap 0044  
                  vfpfcnvrt@cp 0050                    vfpfcnvrt@fp 0040            color_read_Clear@tmp 000B  
          start_initialization 192E                    __end_of_abs 1A3E                    __end_of_pad 1610  
                _TxBufWriteCnt 005C                  ??_RGBC2Serial 0009              ??_colorVal2String 005A  
          color_read_Green@tmp 000B                    vfprintf@fmt 0054                    __pdataBANK0 00F6  
                  __pbssCOMRAM 005C                  __pcstackBANK0 0060               ___aodiv@dividend 0002  
                     ?_HighISR 0001            __end_of_RGBC2Serial 1B2A                      _main$2528 00E4  
                    _dtoa$2202 002F                      __pintcode 0008                       ?___aodiv 0002  
                     ?___aomod 0002               ___aodiv@quotient 0014           I2C_2_Master_Read@ack 0004  
         I2C_2_Master_Read@tmp 0005                    __smallconst 0E00              _I2C_2_Master_Idle 1ADC  
            _I2C_2_Master_Init 1AB2              _I2C_2_Master_Read 19BC              _I2C_2_Master_Stop 1BB0  
                 _RxBufReadCnt 00F4             ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001  
           ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001                       ?_sprintf 0060  
            _sendStringSerial4 1A3E            ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002  
          ??_I2C_2_Master_Read 0003                       _LATAbits 000F79            ??_I2C_2_Master_Stop 0003  
                     _LATDbits 000F7C                       _LATEbits 000F7D                       _LATFbits 000F7E  
                     _LATGbits 000F7F                       _LATHbits 000F80                       _PIE0bits 000E29  
           ?_sendStringSerial4 0003                       _PIE4bits 000E2D                       _PIR0bits 000E33  
                     _PIR4bits 000E37              ??_sendCharSerial4 0002                       _SSP2CON2 000EDA  
          ??_sendStringSerial4 0005                       _SSP2STAT 000ED8                      _vfpfcnvrt 137E  
    __end_of_I2C_2_Master_Idle 1B04      __end_of_I2C_2_Master_Init 1ADC      __end_of_I2C_2_Master_Read 19FE  
    __end_of_I2C_2_Master_Stop 1BBA    I2C_2_Master_Write@data_byte 0003              ??_color_read_RGBC 000F  
            ??_color_read_Blue 0008                   _TxBufReadCnt 00F3      __end_of_sendStringSerial4 1A7E  
              main@rgb_address 00E1                    _RGBC2Serial 1B04  __end_of_I2C_2_Master_RepStart 1BB0  
           color_read_Blue@tmp 000B                   ??_initUSART4 0002            colorVal2String@temp 007B  
                     __Hrparam 0000                     vfprintf@ap 0056                       __Lrparam 0000  
                   vfprintf@fp 0052                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0040  
              ___aodiv@divisor 000A                ___aodiv@counter 0012                     _ANSELDbits 000EA7  
                ??_tricolorLED 0002                     sprintf@fmt 0062                _colorVal2String 1680  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6             __end_of_initUSART4 1B4C  
                     __ptext10 1A7E                       __ptext11 1B4C                       __ptext20 137E  
                     __ptext12 1B9A                       __ptext21 0E14                       __ptext13 1BB0  
                     __ptext30 1A3E                       __ptext22 1596                       __ptext14 1BBA  
                     __ptext31 1B6C                       __ptext23 1978                       __ptext15 1ADC  
                     __ptext24 14CC                       __ptext16 1AB2                       __ptext25 1BC8  
                     __ptext17 1680                       __ptext26 19FE                       __ptext18 174E  
                     __ptext27 121A                       __ptext19 18E0                       __ptext28 1092  
                     __ptext29 1B04                   _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA  
                     isa$xinst 000000                     _RC4STAbits 000EE7                       main@RGBC 00E6  
                     int$flags 005D                       _vfprintf 18E0               ___aomod@dividend 0002  
                   _INTCONbits 000FF2             colorVal2String@buf 0079            __end_of_tricolorLED 1B9A  
                     intlevel2 0000                      sprintf@ap 006C                ___aomod@divisor 000A  
      __end_of_colorVal2String 16F0                    ??_vfpfcnvrt 0046                ___aomod@counter 0012  
             _color_click_init 1A7E                       sprintf@f 006E                       sprintf@s 0060  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C                     _TX4STAbits 000EE8  
                 ___aodiv@sign 0013                _sendCharSerial4 1B6C                 RGBC2Serial@str 0007  
                 ___aomod@sign 0013  
