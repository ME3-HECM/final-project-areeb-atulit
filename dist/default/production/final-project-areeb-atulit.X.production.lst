

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 14 12:00:02 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,delta=1
    62                           	psect	text49,global,reloc=2,class=CODE,delta=1
    63                           	psect	text50,global,reloc=2,class=CODE,delta=1
    64                           	psect	text51,global,reloc=2,class=CODE,delta=1
    65                           	psect	text52,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 06/04/2022 GMT
    73                           ; 
    74                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F67K40 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataBANK0
   108   003548                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _upperThreshold
   112   003548  076C               	dw	1900
   113   000000                     _TRISCbits	set	3971
   114   000000                     _TRISBbits	set	3970
   115   000000                     _TX4REG	set	3812
   116   000000                     _RC4STAbits	set	3815
   117   000000                     _SP4BRGH	set	3814
   118   000000                     _TRISFbits	set	3974
   119   000000                     _LATHbits	set	3968
   120   000000                     _TRISDbits	set	3972
   121   000000                     _LATFbits	set	3966
   122   000000                     _TRISAbits	set	3969
   123   000000                     _TRISEbits	set	3973
   124   000000                     _SSP2CON2bits	set	3802
   125   000000                     _RX4PPS	set	3605
   126   000000                     _SSP2CLKPPS	set	3612
   127   000000                     _SSP2DATPPS	set	3613
   128   000000                     _ANSELDbits	set	3751
   129   000000                     _SSP2ADD	set	3798
   130   000000                     _SSP2CON1bits	set	3801
   131   000000                     _LATAbits	set	3961
   132   000000                     _LATEbits	set	3965
   133   000000                     _LATGbits	set	3967
   134   000000                     _TRISGbits	set	3975
   135   000000                     _T2PR	set	4028
   136   000000                     _T2CONbits	set	4029
   137   000000                     _TMR0L	set	4051
   138   000000                     _TMR0H	set	4052
   139   000000                     _T0CON0bits	set	4053
   140   000000                     _T0CON1bits	set	4054
   141   000000                     _INTCONbits	set	4082
   142   000000                     _TRISHbits	set	3976
   143   000000                     _CCPR2H	set	4006
   144   000000                     _CCPR1H	set	4010
   145   000000                     _LATDbits	set	3964
   146   000000                     _RC4REG	set	3811
   147   000000                     _SP4BRGL	set	3813
   148   000000                     _TX4STAbits	set	3816
   149   000000                     _BAUD4CONbits	set	3817
   150   000000                     _SSP2CON2	set	3802
   151   000000                     _SSP2STAT	set	3800
   152   000000                     _SSP2BUF	set	3797
   153   000000                     _IPR0bits	set	3615
   154   000000                     _PIE0bits	set	3625
   155   000000                     _PIE4bits	set	3629
   156   000000                     _RC0PPS	set	3682
   157   000000                     _RD5PPS	set	3695
   158   000000                     _RE2PPS	set	3700
   159   000000                     _ANSELBbits	set	3738
   160   000000                     _RD6PPS	set	3696
   161   000000                     _RC7PPS	set	3689
   162   000000                     _CCPR4H	set	3873
   163   000000                     _CCPR3H	set	3877
   164   000000                     _PIR0bits	set	3635
   165   000000                     _PIR4bits	set	3639
   166   000000                     _RE4PPS	set	3702
   167   000000                     _RG6PPS	set	3720
   168   000000                     _T2CLKCONbits	set	4031
   169   000000                     _T2HLTbits	set	4030
   170   000000                     _CCP1CONbits	set	4011
   171   000000                     _CCPTMRS0bits	set	4013
   172   000000                     _CCP2CONbits	set	4007
   173   000000                     _CCP3CONbits	set	3878
   174   000000                     _CCP4CONbits	set	3874
   175                           
   176                           	psect	smallconst
   177   000E00                     __psmallconst:
   178                           	callstack 0
   179   000E00  00                 	db	0
   180   000E01                     
   181                           ; BSR set to: 14
   182   000E01  52                 	db	82	;'R'
   183   000E02  47                 	db	71	;'G'
   184   000E03  42                 	db	66	;'B'
   185   000E04  43                 	db	67	;'C'
   186   000E05  3A                 	db	58	;':'
   187   000E06  25                 	db	37
   188   000E07  66                 	db	102	;'f'
   189   000E08  20                 	db	32
   190   000E09  25                 	db	37
   191   000E0A  66                 	db	102	;'f'
   192   000E0B  20                 	db	32
   193   000E0C  25                 	db	37
   194   000E0D  66                 	db	102	;'f'
   195   000E0E  20                 	db	32
   196   000E0F  25                 	db	37
   197   000E10  66                 	db	102	;'f'
   198   000E11  20                 	db	32
   199   000E12  0A                 	db	10
   200   000E13  00                 	db	0
   201   000E14  00                 	db	0	; dummy byte at the end
   202   000000                     
   203                           ; #config settings
   204                           
   205                           	psect	cinit
   206   003222                     __pcinit:
   207                           	callstack 0
   208   003222                     start_initialization:
   209                           	callstack 0
   210   003222                     __initialization:
   211                           	callstack 0
   212                           
   213                           ; Initialize objects allocated to BANK0 (2 bytes)
   214                           ; load TBLPTR registers with __pidataBANK0
   215   003222  0E48               	movlw	low __pidataBANK0
   216   003224  6EF6               	movwf	tblptrl,c
   217   003226  0E35               	movlw	high __pidataBANK0
   218   003228  6EF7               	movwf	tblptrh,c
   219   00322A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   220   00322C  6EF8               	movwf	tblptru,c
   221   00322E  0009               	tblrd		*+	;fetch initializer
   222   003230  CFF5 F0F6          	movff	tablat,__pdataBANK0
   223   003234  0009               	tblrd		*+	;fetch initializer
   224   003236  CFF5 F0F7          	movff	tablat,__pdataBANK0+1
   225                           
   226                           ; Clear objects allocated to BANK0 (100 bytes)
   227   00323A  EE00  F060         	lfsr	0,__pbssBANK0
   228   00323E  0E64               	movlw	100
   229   003240                     clear_0:
   230   003240  6AEE               	clrf	postinc0,c
   231   003242  06E8               	decf	wreg,f,c
   232   003244  E1FD               	bnz	clear_0
   233                           
   234                           ; Clear objects allocated to COMRAM (18 bytes)
   235   003246  EE00  F03F         	lfsr	0,__pbssCOMRAM
   236   00324A  0E12               	movlw	18
   237   00324C                     clear_1:
   238   00324C  6AEE               	clrf	postinc0,c
   239   00324E  06E8               	decf	wreg,f,c
   240   003250  E1FD               	bnz	clear_1
   241   003252                     end_of_initialization:
   242                           	callstack 0
   243   003252                     __end_of__initialization:
   244                           	callstack 0
   245   003252  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   246   003254  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   247   003256  0E00               	movlw	low (__Lsmallconst shr (0+16))
   248   003258  6EF8               	movwf	tblptru,c
   249   00325A  0E0E               	movlw	high __Lsmallconst
   250   00325C  6EF7               	movwf	tblptrh,c
   251   00325E  0100               	movlb	0
   252   003260  EFEC  F010         	goto	_main	;jump to C main() function
   253                           
   254                           	psect	bssCOMRAM
   255   00003F                     __pbssCOMRAM:
   256                           	callstack 0
   257   00003F                     _amb_clear:
   258                           	callstack 0
   259   00003F                     	ds	2
   260   000041                     _amb_blue:
   261                           	callstack 0
   262   000041                     	ds	2
   263   000043                     _amb_green:
   264                           	callstack 0
   265   000043                     	ds	2
   266   000045                     _amb_red:
   267                           	callstack 0
   268   000045                     	ds	2
   269   000047                     _lost_ctr:
   270                           	callstack 0
   271   000047                     	ds	2
   272   000049                     _buggy_step:
   273                           	callstack 0
   274   000049                     	ds	2
   275   00004B                     _interrupt_flag:
   276                           	callstack 0
   277   00004B                     	ds	2
   278   00004D                     _TxBufReadCnt:
   279                           	callstack 0
   280   00004D                     	ds	1
   281   00004E                     _TxBufWriteCnt:
   282                           	callstack 0
   283   00004E                     	ds	1
   284   00004F                     _RxBufReadCnt:
   285                           	callstack 0
   286   00004F                     	ds	1
   287   000050                     _RxBufWriteCnt:
   288                           	callstack 0
   289   000050                     	ds	1
   290                           
   291                           	psect	bssBANK0
   292   000060                     __pbssBANK0:
   293                           	callstack 0
   294   000060                     _EUSART4TXbuf:
   295                           	callstack 0
   296   000060                     	ds	60
   297   00009C                     _EUSART4RXbuf:
   298                           	callstack 0
   299   00009C                     	ds	20
   300   0000B0                     _lowerThreshold:
   301                           	callstack 0
   302   0000B0                     	ds	2
   303   0000B2                     _interrupt_ctr:
   304                           	callstack 0
   305   0000B2                     	ds	2
   306   0000B4                     _motor_return:
   307                           	callstack 0
   308   0000B4                     	ds	1
   309   0000B5                     _buggy_path:
   310                           	callstack 0
   311   0000B5                     	ds	15
   312                           
   313                           	psect	dataBANK0
   314   0000F6                     __pdataBANK0:
   315                           	callstack 0
   316   0000F6                     _upperThreshold:
   317                           	callstack 0
   318   0000F6                     	ds	2
   319                           
   320                           	psect	cstackBANK0
   321   0000C4                     __pcstackBANK0:
   322                           	callstack 0
   323   0000C4                     main@RGBC:
   324                           	callstack 0
   325                           
   326                           ; 32 bytes @ 0x0
   327   0000C4                     	ds	32
   328   0000E4                     main@mL:
   329                           	callstack 0
   330                           
   331                           ; 9 bytes @ 0x20
   332   0000E4                     	ds	9
   333   0000ED                     main@mR:
   334                           	callstack 0
   335                           
   336                           ; 9 bytes @ 0x29
   337   0000ED                     	ds	9
   338                           
   339                           	psect	cstackCOMRAM
   340   000001                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000001                     ??i2_I2C_2_Master_Idle:
   343   000001                     
   344                           ; 1 bytes @ 0x0
   345   000001                     	ds	1
   346   000002                     i2I2C_2_Master_Write@data_byte:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1
   350   000002                     	ds	1
   351   000003                     i2color_writetoaddr@value:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x2
   355   000003                     	ds	1
   356   000004                     i2color_writetoaddr@address:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x3
   360   000004                     	ds	1
   361   000005                     ??i2_Color_Interrupts_init:
   362   000005                     i2Color_Interrupts_threshold@upperThreshold:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366   000005                     	ds	2
   367   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371   000007                     	ds	2
   372   000009                     ??_I2C_2_Master_Idle:
   373   000009                     ?___wmul:
   374                           	callstack 0
   375   000009                     initDCmotorsPWM@PWMperiod:
   376                           	callstack 0
   377   000009                     motorLinit@mL:
   378                           	callstack 0
   379   000009                     motorRinit@mR:
   380                           	callstack 0
   381   000009                     motorTRIS@mL:
   382                           	callstack 0
   383   000009                     ___wmul@multiplier:
   384                           	callstack 0
   385   000009                     ___flge@ff1:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x8
   389   000009                     	ds	1
   390   00000A                     ??_I2C_2_Master_Read:
   391   00000A                     I2C_2_Master_Write@data_byte:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x9
   395   00000A                     	ds	1
   396   00000B                     color_writetoaddr@value:
   397                           	callstack 0
   398   00000B                     I2C_2_Master_Read@ack:
   399                           	callstack 0
   400   00000B                     motorTRIS@mR:
   401                           	callstack 0
   402   00000B                     ___wmul@multiplicand:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xA
   406   00000B                     	ds	1
   407   00000C                     color_writetoaddr@address:
   408                           	callstack 0
   409   00000C                     I2C_2_Master_Read@tmp:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0xB
   413   00000C                     	ds	1
   414   00000D                     ??_Color_Interrupts_init:
   415   00000D                     ??_color_click_init:
   416   00000D                     ?_color_read_Red:
   417                           	callstack 0
   418   00000D                     ?_color_read_Green:
   419                           	callstack 0
   420   00000D                     ?_color_read_Blue:
   421                           	callstack 0
   422   00000D                     ?_color_read_Clear:
   423                           	callstack 0
   424   00000D                     Color_Interrupts_threshold@upperThreshold:
   425                           	callstack 0
   426   00000D                     ___wmul@product:
   427                           	callstack 0
   428   00000D                     ___flge@ff2:
   429                           	callstack 0
   430                           
   431                           ; 4 bytes @ 0xC
   432   00000D                     	ds	2
   433   00000F                     ??_color_read_Red:
   434   00000F                     ??_color_read_Green:
   435   00000F                     ??_color_read_Blue:
   436   00000F                     ??_color_read_Clear:
   437   00000F                     ?___lwdiv:
   438                           	callstack 0
   439   00000F                     Color_Interrupts_threshold@lowerThreshold:
   440                           	callstack 0
   441   00000F                     ___lwdiv@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xE
   445   00000F                     	ds	2
   446   000011                     ??___flge:
   447   000011                     ___lwdiv@divisor:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x10
   451   000011                     	ds	1
   452   000012                     color_read_Red@tmp:
   453                           	callstack 0
   454   000012                     color_read_Green@tmp:
   455                           	callstack 0
   456   000012                     color_read_Blue@tmp:
   457                           	callstack 0
   458   000012                     color_read_Clear@tmp:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x11
   462   000012                     	ds	1
   463   000013                     ___lwdiv@quotient:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x12
   467   000013                     	ds	1
   468   000014                     ?___xxtofl:
   469                           	callstack 0
   470   000014                     ___xxtofl@val:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x13
   474   000014                     	ds	1
   475   000015                     ___lwdiv@counter:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x14
   479   000015                     	ds	1
   480   000016                     setMotorPWM@m:
   481                           	callstack 0
   482                           
   483                           ; 2 bytes @ 0x15
   484   000016                     	ds	2
   485   000018                     ??_setMotorPWM:
   486   000018                     ??___xxtofl:
   487                           
   488                           ; 1 bytes @ 0x17
   489   000018                     	ds	2
   490   00001A                     setMotorPWM@posDuty:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x19
   494   00001A                     	ds	1
   495   00001B                     setMotorPWM@negDuty:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x1A
   499   00001B                     	ds	1
   500   00001C                     ___xxtofl@sign:
   501                           	callstack 0
   502   00001C                     norm_stop@mL:
   503                           	callstack 0
   504   00001C                     turnLeft@mL:
   505                           	callstack 0
   506   00001C                     turnRight@mL:
   507                           	callstack 0
   508   00001C                     fullSpeedAhead@mL:
   509                           	callstack 0
   510   00001C                     wallSmash@mL:
   511                           	callstack 0
   512   00001C                     reverse@mL:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x1B
   516   00001C                     	ds	1
   517   00001D                     ___xxtofl@exp:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x1C
   521   00001D                     	ds	1
   522   00001E                     norm_stop@mR:
   523                           	callstack 0
   524   00001E                     turnLeft@mR:
   525                           	callstack 0
   526   00001E                     turnRight@mR:
   527                           	callstack 0
   528   00001E                     fullSpeedAhead@mR:
   529                           	callstack 0
   530   00001E                     wallSmash@mR:
   531                           	callstack 0
   532   00001E                     reverse@mR:
   533                           	callstack 0
   534   00001E                     ___xxtofl@arg:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x1D
   538   00001E                     	ds	2
   539   000020                     ??_reverse:
   540   000020                     
   541                           ; 1 bytes @ 0x1F
   542   000020                     	ds	1
   543   000021                     turnPrep@mL:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x20
   547   000021                     	ds	1
   548   000022                     ?___fldiv:
   549                           	callstack 0
   550   000022                     color_read_RGBC@temp:
   551                           	callstack 0
   552   000022                     ___fldiv@b:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x21
   556   000022                     	ds	1
   557   000023                     turnPrep@mR:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x22
   561   000023                     	ds	1
   562   000024                     
   563                           ; 1 bytes @ 0x23
   564   000024                     	ds	1
   565   000025                     ??_turnPrep:
   566                           
   567                           ; 1 bytes @ 0x24
   568   000025                     	ds	1
   569   000026                     ___fldiv@a:
   570                           	callstack 0
   571                           
   572                           ; 4 bytes @ 0x25
   573   000026                     	ds	1
   574   000027                     motor_response@temp:
   575                           	callstack 0
   576   000027                     motor_retrace@buggy_path:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x26
   580   000027                     	ds	2
   581   000029                     motor_response@mL:
   582                           	callstack 0
   583   000029                     motor_retrace@mL:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x28
   587   000029                     	ds	1
   588   00002A                     ??___fldiv:
   589                           
   590                           ; 1 bytes @ 0x29
   591   00002A                     	ds	1
   592   00002B                     motor_response@mR:
   593                           	callstack 0
   594   00002B                     motor_retrace@mR:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x2A
   598   00002B                     	ds	2
   599   00002D                     ??_motor_response:
   600   00002D                     ??_motor_retrace:
   601                           
   602                           ; 1 bytes @ 0x2C
   603   00002D                     	ds	1
   604   00002E                     ___fldiv@rem:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x2D
   608   00002E                     	ds	1
   609   00002F                     motor_response@j:
   610                           	callstack 0
   611                           
   612                           ; 2 bytes @ 0x2E
   613   00002F                     	ds	3
   614   000032                     ___fldiv@sign:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x31
   618   000032                     	ds	1
   619   000033                     ___fldiv@new_exp:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x32
   623   000033                     	ds	2
   624   000035                     ___fldiv@grs:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x34
   628   000035                     	ds	4
   629   000039                     ___fldiv@bexp:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x38
   633   000039                     	ds	1
   634   00003A                     ___fldiv@aexp:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x39
   638   00003A                     	ds	1
   639   00003B                     color_normalise@RGBC:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x3A
   643   00003B                     	ds	2
   644   00003D                     ??_main:
   645                           
   646                           ; 1 bytes @ 0x3C
   647   00003D                     	ds	2
   648                           
   649 ;;
   650 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   651 ;;
   652 ;; *************** function _main *****************
   653 ;; Defined at:
   654 ;;		line 22 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  buf           100    0        unsigned char [100]
   659 ;;  RGBC           32    0[BANK0 ] struct RGBC_val
   660 ;;  mR              9   41[BANK0 ] struct DC_motor
   661 ;;  mL              9   32[BANK0 ] struct DC_motor
   662 ;; Return value:  Size  Location     Type
   663 ;;                  1    wreg      void 
   664 ;; Registers used:
   665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   666 ;; Tracked objects:
   667 ;;		On entry : 0/0
   668 ;;		On exit  : 0/0
   669 ;;		Unchanged: 0/0
   670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   672 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;Total ram usage:       52 bytes
   676 ;; Hardware stack levels required when called: 11
   677 ;; This function calls:
   678 ;;		_Color_Interrupts_init
   679 ;;		_Color_Interrupts_threshold
   680 ;;		_Interrupts_init
   681 ;;		_color_click_init
   682 ;;		_color_normalise
   683 ;;		_color_read_RGBC
   684 ;;		_fullSpeedAhead
   685 ;;		_initDCmotorsPWM
   686 ;;		_motorLinit
   687 ;;		_motorRinit
   688 ;;		_motorTRIS
   689 ;;		_motor_response
   690 ;;		_motor_retrace
   691 ;;		_norm_stop
   692 ;;		_persistence_register
   693 ;;		_tricolorLED
   694 ;;		_turnLeft
   695 ;;		_wallSmash
   696 ;; This function is called by:
   697 ;;		Startup code after reset
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text0
   702   0021D8                     __ptext0:
   703                           	callstack 0
   704   0021D8                     _main:
   705                           	callstack 20
   706   0021D8                     
   707                           ;main.c: 24:     RGBC_val RGBC;;main.c: 25:     char buf[100];;main.c: 26:     motor_ret
      +                          urn = 0;
   708   0021D8  0E00               	movlw	0
   709   0021DA  0100               	movlb	0	; () banked
   710   0021DC  6FB4               	movwf	_motor_return& (0+255),b
   711                           
   712                           ;main.c: 27:     buggy_step=0;
   713   0021DE  0E00               	movlw	0
   714   0021E0  6E4A               	movwf	(_buggy_step+1)^0,c
   715   0021E2  0E00               	movlw	0
   716   0021E4  6E49               	movwf	_buggy_step^0,c
   717                           
   718                           ;main.c: 28:     lost_ctr=0;
   719   0021E6  0E00               	movlw	0
   720   0021E8  6E48               	movwf	(_lost_ctr+1)^0,c
   721   0021EA  0E00               	movlw	0
   722   0021EC  6E47               	movwf	_lost_ctr^0,c
   723                           
   724                           ;main.c: 29:     interrupt_ctr=0;
   725   0021EE  0E00               	movlw	0
   726   0021F0  6FB3               	movwf	(_interrupt_ctr+1)& (0+255),b
   727   0021F2  0E00               	movlw	0
   728   0021F4  6FB2               	movwf	_interrupt_ctr& (0+255),b
   729   0021F6                     
   730                           ; BSR set to: 0
   731                           ;main.c: 38:     color_click_init();
   732   0021F6  EC53  F019         	call	_color_click_init	;wreg free
   733   0021FA                     
   734                           ;main.c: 39:     Interrupts_init();
   735   0021FA  EC53  F01A         	call	_Interrupts_init	;wreg free
   736   0021FE                     
   737                           ;main.c: 40:     tricolorLED();
   738   0021FE  EC5E  F01A         	call	_tricolorLED	;wreg free
   739   002202                     
   740                           ;main.c: 42:     Color_Interrupts_init();
   741   002202  EC39  F01A         	call	_Color_Interrupts_init	;wreg free
   742   002206                     
   743                           ;main.c: 43:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   744   002206  C0F6  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   745   00220A  C0F7  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   746   00220E  C0B0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   747   002212  C0B1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   748   002216  ECB4  F019         	call	_Color_Interrupts_threshold	;wreg free
   749   00221A                     
   750                           ;main.c: 44:     persistence_register();
   751   00221A  EC65  F01A         	call	_persistence_register	;wreg free
   752   00221E                     
   753                           ;main.c: 47:     initDCmotorsPWM(200);
   754   00221E  0E00               	movlw	0
   755   002220  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   756   002222  0EC8               	movlw	200
   757   002224  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   758   002226  ECF0  F016         	call	_initDCmotorsPWM	;wreg free
   759   00222A                     
   760                           ;main.c: 48:     DC_motor mL, mR;;main.c: 49:     motorLinit(&mL);
   761   00222A  0EE4               	movlw	low main@mL
   762   00222C  6E09               	movwf	motorLinit@mL^0,c
   763   00222E  0E00               	movlw	high main@mL
   764   002230  6E0A               	movwf	(motorLinit@mL+1)^0,c
   765   002232  EC11  F018         	call	_motorLinit	;wreg free
   766   002236                     
   767                           ;main.c: 50:     motorRinit(&mR);
   768   002236  0EED               	movlw	low main@mR
   769   002238  6E09               	movwf	motorRinit@mR^0,c
   770   00223A  0E00               	movlw	high main@mR
   771   00223C  6E0A               	movwf	(motorRinit@mR+1)^0,c
   772   00223E  ECDC  F017         	call	_motorRinit	;wreg free
   773   002242                     
   774                           ;main.c: 53:     motorTRIS(&mL,&mR);
   775   002242  0EE4               	movlw	low main@mL
   776   002244  6E09               	movwf	motorTRIS@mL^0,c
   777   002246  0E00               	movlw	high main@mL
   778   002248  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   779   00224A  0EED               	movlw	low main@mR
   780   00224C  6E0B               	movwf	motorTRIS@mR^0,c
   781   00224E  0E00               	movlw	high main@mR
   782   002250  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   783   002252  EC7D  F01A         	call	_motorTRIS	;wreg free
   784   002256                     
   785                           ;main.c: 57:     TRISDbits.TRISD7 = 0;
   786   002256  9E84               	bcf	132,7,c	;volatile
   787   002258                     
   788                           ;main.c: 58:     LATDbits.LATD7 = 0;
   789   002258  9E7C               	bcf	124,7,c	;volatile
   790   00225A                     
   791                           ;main.c: 59:     TRISHbits.TRISH3 = 0;
   792   00225A  9688               	bcf	136,3,c	;volatile
   793   00225C                     
   794                           ;main.c: 60:     LATHbits.LATH3 = 0;
   795   00225C  9680               	bcf	128,3,c	;volatile
   796   00225E                     
   797                           ;main.c: 64:     TRISHbits.TRISH0 = 0;
   798   00225E  9088               	bcf	136,0,c	;volatile
   799   002260                     
   800                           ;main.c: 65:     LATHbits.LATH0 = 0;
   801   002260  9080               	bcf	128,0,c	;volatile
   802   002262                     
   803                           ;main.c: 68:     TRISFbits.TRISF0 = 0;
   804   002262  9086               	bcf	134,0,c	;volatile
   805   002264                     
   806                           ;main.c: 69:     LATFbits.LATF0 = 0;
   807   002264  907E               	bcf	126,0,c	;volatile
   808   002266                     
   809                           ;main.c: 72:     TRISDbits.TRISD4 = 0;
   810   002266  9884               	bcf	132,4,c	;volatile
   811   002268                     
   812                           ;main.c: 73:     LATDbits.LATD4 = 0;
   813   002268  987C               	bcf	124,4,c	;volatile
   814   00226A                     
   815                           ;main.c: 76:     TRISDbits.TRISD3 = 0;
   816   00226A  9684               	bcf	132,3,c	;volatile
   817   00226C                     
   818                           ;main.c: 77:     LATDbits.LATD3 = 0;
   819   00226C  967C               	bcf	124,3,c	;volatile
   820   00226E                     l308:
   821                           
   822                           ;main.c: 80:        if(buggy_step==0) LATDbits.LATD3 = 1;
   823   00226E  5049               	movf	_buggy_step^0,w,c
   824   002270  104A               	iorwf	(_buggy_step+1)^0,w,c
   825   002272  A4D8               	btfss	status,2,c
   826   002274  EF3E  F011         	goto	u2291
   827   002278  EF40  F011         	goto	u2290
   828   00227C                     u2291:
   829   00227C  EF41  F011         	goto	l3244
   830   002280                     u2290:
   831   002280  867C               	bsf	124,3,c	;volatile
   832   002282                     l3244:
   833                           
   834                           ;main.c: 81:        if(buggy_step==1) LATDbits.LATD4 = 1;
   835   002282  0449               	decf	_buggy_step^0,w,c
   836   002284  104A               	iorwf	(_buggy_step+1)^0,w,c
   837   002286  A4D8               	btfss	status,2,c
   838   002288  EF48  F011         	goto	u2301
   839   00228C  EF4A  F011         	goto	u2300
   840   002290                     u2301:
   841   002290  EF4B  F011         	goto	l3248
   842   002294                     u2300:
   843   002294  887C               	bsf	124,4,c	;volatile
   844   002296                     l3248:
   845                           
   846                           ;main.c: 82:        if(buggy_step==2) LATHbits.LATH0 = 1;
   847   002296  0E02               	movlw	2
   848   002298  1849               	xorwf	_buggy_step^0,w,c
   849   00229A  104A               	iorwf	(_buggy_step+1)^0,w,c
   850   00229C  A4D8               	btfss	status,2,c
   851   00229E  EF53  F011         	goto	u2311
   852   0022A2  EF55  F011         	goto	u2310
   853   0022A6                     u2311:
   854   0022A6  EF56  F011         	goto	l3252
   855   0022AA                     u2310:
   856   0022AA  8080               	bsf	128,0,c	;volatile
   857   0022AC                     l3252:
   858                           
   859                           ;main.c: 84:         fullSpeedAhead(&mL, &mR);
   860   0022AC  0EE4               	movlw	low main@mL
   861   0022AE  6E1C               	movwf	fullSpeedAhead@mL^0,c
   862   0022B0  0E00               	movlw	high main@mL
   863   0022B2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   864   0022B4  0EED               	movlw	low main@mR
   865   0022B6  6E1E               	movwf	fullSpeedAhead@mR^0,c
   866   0022B8  0E00               	movlw	high main@mR
   867   0022BA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   868   0022BC  EC18  F016         	call	_fullSpeedAhead	;wreg free
   869   0022C0                     
   870                           ;main.c: 85:         if (interrupt_flag == 1 && interrupt_ctr>1) {
   871   0022C0  044B               	decf	_interrupt_flag^0,w,c
   872   0022C2  104C               	iorwf	(_interrupt_flag+1)^0,w,c
   873   0022C4  A4D8               	btfss	status,2,c
   874   0022C6  EF67  F011         	goto	u2321
   875   0022CA  EF69  F011         	goto	u2320
   876   0022CE                     u2321:
   877   0022CE  EF37  F011         	goto	l308
   878   0022D2                     u2320:
   879   0022D2  0100               	movlb	0	; () banked
   880   0022D4  BFB3               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   881   0022D6  EF76  F011         	goto	u2331
   882   0022DA  51B3               	movf	(_interrupt_ctr+1)& (0+255),w,b
   883   0022DC  E109               	bnz	u2330
   884   0022DE  0E02               	movlw	2
   885   0022E0  5DB2               	subwf	_interrupt_ctr& (0+255),w,b
   886   0022E2  A0D8               	btfss	status,0,c
   887   0022E4  EF76  F011         	goto	u2331
   888   0022E8  EF78  F011         	goto	u2330
   889   0022EC                     u2331:
   890   0022EC  EF37  F011         	goto	l308
   891   0022F0                     u2330:
   892   0022F0                     
   893                           ; BSR set to: 0
   894                           ;main.c: 86:             norm_stop(&mL, &mR);
   895   0022F0  0EE4               	movlw	low main@mL
   896   0022F2  6E1C               	movwf	norm_stop@mL^0,c
   897   0022F4  0E00               	movlw	high main@mL
   898   0022F6  6E1D               	movwf	(norm_stop@mL+1)^0,c
   899   0022F8  0EED               	movlw	low main@mR
   900   0022FA  6E1E               	movwf	norm_stop@mR^0,c
   901   0022FC  0E00               	movlw	high main@mR
   902   0022FE  6E1F               	movwf	(norm_stop@mR+1)^0,c
   903   002300  EC6D  F019         	call	_norm_stop	;wreg free
   904   002304                     
   905                           ;main.c: 87:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   906   002304  0E52               	movlw	82
   907   002306  6E3E               	movwf	(??_main+1)^0,c
   908   002308  0E2B               	movlw	43
   909   00230A  6E3D               	movwf	??_main^0,c
   910   00230C  0E00               	movlw	0
   911   00230E                     u2477:
   912   00230E  2EE8               	decfsz	wreg,f,c
   913   002310  D7FE               	bra	u2477
   914   002312  2E3D               	decfsz	??_main^0,f,c
   915   002314  D7FC               	bra	u2477
   916   002316  2E3E               	decfsz	(??_main+1)^0,f,c
   917   002318  D7FA               	bra	u2477
   918   00231A  D000               	nop2	
   919   00231C                     
   920                           ;main.c: 89:             LATDbits.LATD7 = 0;
   921   00231C  9E7C               	bcf	124,7,c	;volatile
   922   00231E                     
   923                           ;main.c: 90:             if(motor_return == 0){
   924   00231E  0100               	movlb	0	; () banked
   925   002320  51B4               	movf	_motor_return& (0+255),w,b
   926   002322  A4D8               	btfss	status,2,c
   927   002324  EF96  F011         	goto	u2341
   928   002328  EF98  F011         	goto	u2340
   929   00232C                     u2341:
   930   00232C  EFE6  F011         	goto	l3278
   931   002330                     u2340:
   932   002330                     
   933                           ; BSR set to: 0
   934                           ;main.c: 91:                 wallSmash(&mL, &mR);
   935   002330  0EE4               	movlw	low main@mL
   936   002332  6E1C               	movwf	wallSmash@mL^0,c
   937   002334  0E00               	movlw	high main@mL
   938   002336  6E1D               	movwf	(wallSmash@mL+1)^0,c
   939   002338  0EED               	movlw	low main@mR
   940   00233A  6E1E               	movwf	wallSmash@mR^0,c
   941   00233C  0E00               	movlw	high main@mR
   942   00233E  6E1F               	movwf	(wallSmash@mR+1)^0,c
   943   002340  ECA3  F015         	call	_wallSmash	;wreg free
   944   002344                     
   945                           ;main.c: 92:                 _delay((unsigned long)((600)*(64000000/4000.0)));
   946   002344  0E31               	movlw	49
   947   002346  6E3E               	movwf	(??_main+1)^0,c
   948   002348  0EB4               	movlw	180
   949   00234A  6E3D               	movwf	??_main^0,c
   950   00234C  0E66               	movlw	102
   951   00234E                     u2487:
   952   00234E  2EE8               	decfsz	wreg,f,c
   953   002350  D7FE               	bra	u2487
   954   002352  2E3D               	decfsz	??_main^0,f,c
   955   002354  D7FC               	bra	u2487
   956   002356  2E3E               	decfsz	(??_main+1)^0,f,c
   957   002358  D7FA               	bra	u2487
   958   00235A                     
   959                           ;main.c: 93:                 color_read_RGBC(&RGBC);
   960   00235A  0EC4               	movlw	low main@RGBC
   961   00235C  6E22               	movwf	color_read_RGBC@temp^0,c
   962   00235E  0E00               	movlw	high main@RGBC
   963   002360  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   964   002362  EC8D  F016         	call	_color_read_RGBC	;wreg free
   965   002366                     
   966                           ;main.c: 94:                 color_normalise(&RGBC);
   967   002366  0EC4               	movlw	low main@RGBC
   968   002368  6E3B               	movwf	color_normalise@RGBC^0,c
   969   00236A  0E00               	movlw	high main@RGBC
   970   00236C  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
   971   00236E  EC37  F013         	call	_color_normalise	;wreg free
   972   002372                     
   973                           ;main.c: 95:                 LATHbits.LATH3 = !LATHbits.LATH3;
   974   002372  A680               	btfss	128,3,c	;volatile
   975   002374  EFBE  F011         	goto	u2351
   976   002378  EFC2  F011         	goto	u2350
   977   00237C                     u2351:
   978   00237C  6A3D               	clrf	??_main^0,c
   979   00237E  2A3D               	incf	??_main^0,f,c
   980   002380  EFC3  F011         	goto	u2368
   981   002384                     u2350:
   982   002384  6A3D               	clrf	??_main^0,c
   983   002386                     u2368:
   984   002386  463D               	rlncf	??_main^0,f,c
   985   002388  463D               	rlncf	??_main^0,f,c
   986   00238A  463D               	rlncf	??_main^0,f,c
   987   00238C  5080               	movf	128,w,c	;volatile
   988   00238E  183D               	xorwf	??_main^0,w,c
   989   002390  0BF7               	andlw	-9
   990   002392  183D               	xorwf	??_main^0,w,c
   991   002394  6E80               	movwf	128,c	;volatile
   992   002396                     
   993                           ;main.c: 96:                 buggy_path[buggy_step] = motor_response(&RGBC,&mL,&mR);
   994   002396  0EC4               	movlw	low main@RGBC
   995   002398  6E27               	movwf	motor_response@temp^0,c
   996   00239A  0E00               	movlw	high main@RGBC
   997   00239C  6E28               	movwf	(motor_response@temp+1)^0,c
   998   00239E  0EE4               	movlw	low main@mL
   999   0023A0  6E29               	movwf	motor_response@mL^0,c
  1000   0023A2  0E00               	movlw	high main@mL
  1001   0023A4  6E2A               	movwf	(motor_response@mL+1)^0,c
  1002   0023A6  0EED               	movlw	low main@mR
  1003   0023A8  6E2B               	movwf	motor_response@mR^0,c
  1004   0023AA  0E00               	movlw	high main@mR
  1005   0023AC  6E2C               	movwf	(motor_response@mR+1)^0,c
  1006   0023AE  EC0B  F007         	call	_motor_response	;wreg free
  1007   0023B2  6E3D               	movwf	??_main^0,c
  1008   0023B4  0EB5               	movlw	low _buggy_path
  1009   0023B6  2449               	addwf	_buggy_step^0,w,c
  1010   0023B8  6ED9               	movwf	fsr2l,c
  1011   0023BA  0E00               	movlw	high _buggy_path
  1012   0023BC  204A               	addwfc	(_buggy_step+1)^0,w,c
  1013   0023BE  6EDA               	movwf	fsr2h,c
  1014   0023C0  C03D  FFDF         	movff	??_main,indf2
  1015                           
  1016                           ;main.c: 97:                 buggy_step++;
  1017   0023C4  4A49               	infsnz	_buggy_step^0,f,c
  1018   0023C6  2A4A               	incf	(_buggy_step+1)^0,f,c
  1019                           
  1020                           ;main.c: 98:             } else {
  1021   0023C8  EF54  F012         	goto	l3300
  1022   0023CC                     l3278:
  1023                           
  1024                           ; BSR set to: 0
  1025                           ;main.c: 99:                 motor_retrace(&buggy_path, &mL, &mR);
  1026   0023CC  0EB5               	movlw	low _buggy_path
  1027   0023CE  6E27               	movwf	motor_retrace@buggy_path^0,c
  1028   0023D0  0E00               	movlw	high _buggy_path
  1029   0023D2  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1030   0023D4  0EE4               	movlw	low main@mL
  1031   0023D6  6E29               	movwf	motor_retrace@mL^0,c
  1032   0023D8  0E00               	movlw	high main@mL
  1033   0023DA  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1034   0023DC  0EED               	movlw	low main@mR
  1035   0023DE  6E2B               	movwf	motor_retrace@mR^0,c
  1036   0023E0  0E00               	movlw	high main@mR
  1037   0023E2  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1038   0023E4  EC14  F00D         	call	_motor_retrace	;wreg free
  1039   0023E8                     
  1040                           ;main.c: 100:                 buggy_step--;
  1041   0023E8  0649               	decf	_buggy_step^0,f,c
  1042   0023EA  A0D8               	btfss	status,0,c
  1043   0023EC  064A               	decf	(_buggy_step+1)^0,f,c
  1044   0023EE                     
  1045                           ;main.c: 102:                 if (buggy_step == 1) {
  1046   0023EE  0449               	decf	_buggy_step^0,w,c
  1047   0023F0  104A               	iorwf	(_buggy_step+1)^0,w,c
  1048   0023F2  A4D8               	btfss	status,2,c
  1049   0023F4  EFFE  F011         	goto	u2371
  1050   0023F8  EF00  F012         	goto	u2370
  1051   0023FC                     u2371:
  1052   0023FC  EF54  F012         	goto	l3300
  1053   002400                     u2370:
  1054   002400                     
  1055                           ;main.c: 105:                     motor_return = 0;
  1056   002400  0E00               	movlw	0
  1057   002402  0100               	movlb	0	; () banked
  1058   002404  6FB4               	movwf	_motor_return& (0+255),b
  1059   002406                     
  1060                           ; BSR set to: 0
  1061                           ;main.c: 106:                     norm_stop(&mL, &mR);
  1062   002406  0EE4               	movlw	low main@mL
  1063   002408  6E1C               	movwf	norm_stop@mL^0,c
  1064   00240A  0E00               	movlw	high main@mL
  1065   00240C  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1066   00240E  0EED               	movlw	low main@mR
  1067   002410  6E1E               	movwf	norm_stop@mR^0,c
  1068   002412  0E00               	movlw	high main@mR
  1069   002414  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1070   002416  EC6D  F019         	call	_norm_stop	;wreg free
  1071   00241A                     
  1072                           ;main.c: 107:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1073   00241A  0E29               	movlw	41
  1074   00241C  6E3E               	movwf	(??_main+1)^0,c
  1075   00241E  0E96               	movlw	150
  1076   002420  6E3D               	movwf	??_main^0,c
  1077   002422  0E7F               	movlw	127
  1078   002424                     u2497:
  1079   002424  2EE8               	decfsz	wreg,f,c
  1080   002426  D7FE               	bra	u2497
  1081   002428  2E3D               	decfsz	??_main^0,f,c
  1082   00242A  D7FC               	bra	u2497
  1083   00242C  2E3E               	decfsz	(??_main+1)^0,f,c
  1084   00242E  D7FA               	bra	u2497
  1085   002430  F000               	nop	
  1086   002432                     
  1087                           ;main.c: 108:                     turnLeft(&mL, &mR);
  1088   002432  0EE4               	movlw	low main@mL
  1089   002434  6E1C               	movwf	turnLeft@mL^0,c
  1090   002436  0E00               	movlw	high main@mL
  1091   002438  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1092   00243A  0EED               	movlw	low main@mR
  1093   00243C  6E1E               	movwf	turnLeft@mR^0,c
  1094   00243E  0E00               	movlw	high main@mR
  1095   002440  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1096   002442  ECA3  F017         	call	_turnLeft	;wreg free
  1097   002446                     
  1098                           ;main.c: 109:                     _delay((unsigned long)((490)*(64000000/4000.0)));
  1099   002446  0E28               	movlw	40
  1100   002448  6E3E               	movwf	(??_main+1)^0,c
  1101   00244A  0EC6               	movlw	198
  1102   00244C  6E3D               	movwf	??_main^0,c
  1103   00244E  0EB5               	movlw	181
  1104   002450                     u2507:
  1105   002450  2EE8               	decfsz	wreg,f,c
  1106   002452  D7FE               	bra	u2507
  1107   002454  2E3D               	decfsz	??_main^0,f,c
  1108   002456  D7FC               	bra	u2507
  1109   002458  2E3E               	decfsz	(??_main+1)^0,f,c
  1110   00245A  D7FA               	bra	u2507
  1111   00245C  F000               	nop	
  1112   00245E                     
  1113                           ;main.c: 110:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1114   00245E  A080               	btfss	128,0,c	;volatile
  1115   002460  EF34  F012         	goto	u2381
  1116   002464  EF38  F012         	goto	u2380
  1117   002468                     u2381:
  1118   002468  6A3D               	clrf	??_main^0,c
  1119   00246A  2A3D               	incf	??_main^0,f,c
  1120   00246C  EF39  F012         	goto	u2398
  1121   002470                     u2380:
  1122   002470  6A3D               	clrf	??_main^0,c
  1123   002472                     u2398:
  1124   002472  5080               	movf	128,w,c	;volatile
  1125   002474  183D               	xorwf	??_main^0,w,c
  1126   002476  0BFE               	andlw	-2
  1127   002478  183D               	xorwf	??_main^0,w,c
  1128   00247A  6E80               	movwf	128,c	;volatile
  1129   00247C                     
  1130                           ;main.c: 111:                     norm_stop(&mL, &mR);
  1131   00247C  0EE4               	movlw	low main@mL
  1132   00247E  6E1C               	movwf	norm_stop@mL^0,c
  1133   002480  0E00               	movlw	high main@mL
  1134   002482  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1135   002484  0EED               	movlw	low main@mR
  1136   002486  6E1E               	movwf	norm_stop@mR^0,c
  1137   002488  0E00               	movlw	high main@mR
  1138   00248A  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1139   00248C  EC6D  F019         	call	_norm_stop	;wreg free
  1140   002490                     
  1141                           ;main.c: 112:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1142   002490  0EA3               	movlw	163
  1143   002492  6E3E               	movwf	(??_main+1)^0,c
  1144   002494  0E57               	movlw	87
  1145   002496  6E3D               	movwf	??_main^0,c
  1146   002498  0E02               	movlw	2
  1147   00249A                     u2517:
  1148   00249A  2EE8               	decfsz	wreg,f,c
  1149   00249C  D7FE               	bra	u2517
  1150   00249E  2E3D               	decfsz	??_main^0,f,c
  1151   0024A0  D7FC               	bra	u2517
  1152   0024A2  2E3E               	decfsz	(??_main+1)^0,f,c
  1153   0024A4  D7FA               	bra	u2517
  1154   0024A6  D000               	nop2	
  1155   0024A8                     l3300:
  1156                           
  1157                           ;main.c: 115:             LATHbits.LATH3 = 0;
  1158   0024A8  9680               	bcf	128,3,c	;volatile
  1159   0024AA                     
  1160                           ;main.c: 116:             interrupt_flag = 0;
  1161   0024AA  0E00               	movlw	0
  1162   0024AC  6E4C               	movwf	(_interrupt_flag+1)^0,c
  1163   0024AE  0E00               	movlw	0
  1164   0024B0  6E4B               	movwf	_interrupt_flag^0,c
  1165   0024B2  EF37  F011         	goto	l308
  1166   0024B6  EF1B  F000         	goto	start
  1167   0024BA                     __end_of_main:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _wallSmash *****************
  1171 ;; Defined at:
  1172 ;;		line 200 in file "dc_motor.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1175 ;;		 -> main@mL(9), 
  1176 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1177 ;;		 -> main@mR(9), 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1189 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1192 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;Total ram usage:        5 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; Hardware stack levels required when called: 8
  1196 ;; This function calls:
  1197 ;;		_setMotorPWM
  1198 ;; This function is called by:
  1199 ;;		_main
  1200 ;; This function uses a non-reentrant model
  1201 ;;
  1202                           
  1203                           	psect	text1
  1204   002B46                     __ptext1:
  1205                           	callstack 0
  1206   002B46                     _wallSmash:
  1207                           	callstack 22
  1208   002B46                     
  1209                           ;dc_motor.c: 200: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 201: {;dc_motor
      +                          .c: 202:     mL->power =30;
  1210   002B46  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1211   002B4A  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1212   002B4E  0E1E               	movlw	30
  1213   002B50  6EDF               	movwf	indf2,c
  1214                           
  1215                           ;dc_motor.c: 203:     mR->power = 30;
  1216   002B52  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1217   002B56  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1218   002B5A  0E1E               	movlw	30
  1219   002B5C  6EDF               	movwf	indf2,c
  1220   002B5E                     
  1221                           ;dc_motor.c: 204:     mR->direction = 1;
  1222   002B5E  EE20 F001          	lfsr	2,1
  1223   002B62  501E               	movf	wallSmash@mR^0,w,c
  1224   002B64  26D9               	addwf	fsr2l,f,c
  1225   002B66  501F               	movf	(wallSmash@mR+1)^0,w,c
  1226   002B68  22DA               	addwfc	fsr2h,f,c
  1227   002B6A  0E01               	movlw	1
  1228   002B6C  6EDF               	movwf	indf2,c
  1229   002B6E                     
  1230                           ;dc_motor.c: 205:     mL->direction = 1;
  1231   002B6E  EE20 F001          	lfsr	2,1
  1232   002B72  501C               	movf	wallSmash@mL^0,w,c
  1233   002B74  26D9               	addwf	fsr2l,f,c
  1234   002B76  501D               	movf	(wallSmash@mL+1)^0,w,c
  1235   002B78  22DA               	addwfc	fsr2h,f,c
  1236   002B7A  0E01               	movlw	1
  1237   002B7C  6EDF               	movwf	indf2,c
  1238   002B7E                     
  1239                           ;dc_motor.c: 206:     mL->brakemode = 1;
  1240   002B7E  EE20 F002          	lfsr	2,2
  1241   002B82  501C               	movf	wallSmash@mL^0,w,c
  1242   002B84  26D9               	addwf	fsr2l,f,c
  1243   002B86  501D               	movf	(wallSmash@mL+1)^0,w,c
  1244   002B88  22DA               	addwfc	fsr2h,f,c
  1245   002B8A  0E01               	movlw	1
  1246   002B8C  6EDF               	movwf	indf2,c
  1247   002B8E                     
  1248                           ;dc_motor.c: 207:     mR->brakemode = 1;
  1249   002B8E  EE20 F002          	lfsr	2,2
  1250   002B92  501E               	movf	wallSmash@mR^0,w,c
  1251   002B94  26D9               	addwf	fsr2l,f,c
  1252   002B96  501F               	movf	(wallSmash@mR+1)^0,w,c
  1253   002B98  22DA               	addwfc	fsr2h,f,c
  1254   002B9A  0E01               	movlw	1
  1255   002B9C  6EDF               	movwf	indf2,c
  1256                           
  1257                           ;dc_motor.c: 208:     while (mL->power <= 70 && mR->power <=70)
  1258   002B9E  EFE7  F015         	goto	l3176
  1259   002BA2                     l3170:
  1260                           
  1261                           ;dc_motor.c: 209:     {;dc_motor.c: 210:         mL->power++;
  1262   002BA2  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1263   002BA6  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1264   002BAA  2ADF               	incf	indf2,f,c
  1265                           
  1266                           ;dc_motor.c: 211:         mR->power++;
  1267   002BAC  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1268   002BB0  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1269   002BB4  2ADF               	incf	indf2,f,c
  1270   002BB6                     
  1271                           ;dc_motor.c: 213:         setMotorPWM(mL);
  1272   002BB6  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1273   002BBA  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1274   002BBE  ECEF  F013         	call	_setMotorPWM	;wreg free
  1275   002BC2                     
  1276                           ;dc_motor.c: 214:         setMotorPWM(mR);
  1277   002BC2  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1278   002BC6  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1279   002BCA  ECEF  F013         	call	_setMotorPWM	;wreg free
  1280   002BCE                     l3176:
  1281                           
  1282                           ;dc_motor.c: 208:     while (mL->power <= 70 && mR->power <=70)
  1283   002BCE  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1284   002BD2  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1285   002BD6  0E47               	movlw	71
  1286   002BD8  60DF               	cpfslt	indf2,c
  1287   002BDA  EFF1  F015         	goto	u2261
  1288   002BDE  EFF3  F015         	goto	u2260
  1289   002BE2                     u2261:
  1290   002BE2  EFFF  F015         	goto	l3180
  1291   002BE6                     u2260:
  1292   002BE6  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1293   002BEA  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1294   002BEE  0E46               	movlw	70
  1295   002BF0  64DF               	cpfsgt	indf2,c
  1296   002BF2  EFFD  F015         	goto	u2271
  1297   002BF6  EFFF  F015         	goto	u2270
  1298   002BFA                     u2271:
  1299   002BFA  EFD1  F015         	goto	l3170
  1300   002BFE                     u2270:
  1301   002BFE                     l3180:
  1302                           
  1303                           ;dc_motor.c: 216:     mL->power = 70;
  1304   002BFE  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1305   002C02  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1306   002C06  0E46               	movlw	70
  1307   002C08  6EDF               	movwf	indf2,c
  1308                           
  1309                           ;dc_motor.c: 217:     mR->power = 70;
  1310   002C0A  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1311   002C0E  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1312   002C12  0E46               	movlw	70
  1313   002C14  6EDF               	movwf	indf2,c
  1314   002C16                     
  1315                           ;dc_motor.c: 218:     setMotorPWM(mL);
  1316   002C16  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1317   002C1A  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1318   002C1E  ECEF  F013         	call	_setMotorPWM	;wreg free
  1319   002C22                     
  1320                           ;dc_motor.c: 219:     setMotorPWM(mR);
  1321   002C22  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1322   002C26  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1323   002C2A  ECEF  F013         	call	_setMotorPWM	;wreg free
  1324   002C2E  0012               	return		;funcret
  1325   002C30                     __end_of_wallSmash:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _tricolorLED *****************
  1329 ;; Defined at:
  1330 ;;		line 115 in file "color.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 7
  1351 ;; This function calls:
  1352 ;;		_bLED
  1353 ;;		_gLED
  1354 ;;		_rLED
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text2
  1361   0034BC                     __ptext2:
  1362                           	callstack 0
  1363   0034BC                     _tricolorLED:
  1364                           	callstack 23
  1365   0034BC                     
  1366                           ;color.c: 117:     rLED();
  1367   0034BC  EC9B  F01A         	call	_rLED	;wreg free
  1368                           
  1369                           ;color.c: 118:     gLED();
  1370   0034C0  EC9E  F01A         	call	_gLED	;wreg free
  1371                           
  1372                           ;color.c: 119:     bLED();
  1373   0034C4  ECA1  F01A         	call	_bLED	;wreg free
  1374   0034C8  0012               	return		;funcret
  1375   0034CA                     __end_of_tricolorLED:
  1376                           	callstack 0
  1377                           
  1378 ;; *************** function _rLED *****************
  1379 ;; Defined at:
  1380 ;;		line 123 in file "color.c"
  1381 ;; Parameters:    Size  Location     Type
  1382 ;;		None
  1383 ;; Auto vars:     Size  Location     Type
  1384 ;;		None
  1385 ;; Return value:  Size  Location     Type
  1386 ;;                  1    wreg      void 
  1387 ;; Registers used:
  1388 ;;		None
  1389 ;; Tracked objects:
  1390 ;;		On entry : 0/0
  1391 ;;		On exit  : 0/0
  1392 ;;		Unchanged: 0/0
  1393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;Total ram usage:        0 bytes
  1399 ;; Hardware stack levels used: 1
  1400 ;; Hardware stack levels required when called: 6
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_tricolorLED
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           	psect	text3
  1409   003536                     __ptext3:
  1410                           	callstack 0
  1411   003536                     _rLED:
  1412                           	callstack 23
  1413   003536                     
  1414                           ;color.c: 124:     TRISGbits.TRISG0 = 0;
  1415   003536  9087               	bcf	135,0,c	;volatile
  1416                           
  1417                           ;color.c: 125:     LATGbits.LATG0 = 1;
  1418   003538  807F               	bsf	127,0,c	;volatile
  1419   00353A  0012               	return		;funcret
  1420   00353C                     __end_of_rLED:
  1421                           	callstack 0
  1422                           
  1423 ;; *************** function _gLED *****************
  1424 ;; Defined at:
  1425 ;;		line 129 in file "color.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		None
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1443 ;;Total ram usage:        0 bytes
  1444 ;; Hardware stack levels used: 1
  1445 ;; Hardware stack levels required when called: 6
  1446 ;; This function calls:
  1447 ;;		Nothing
  1448 ;; This function is called by:
  1449 ;;		_tricolorLED
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text4
  1454   00353C                     __ptext4:
  1455                           	callstack 0
  1456   00353C                     _gLED:
  1457                           	callstack 23
  1458   00353C                     
  1459                           ;color.c: 130:     TRISEbits.TRISE7 = 0;
  1460   00353C  9E85               	bcf	133,7,c	;volatile
  1461                           
  1462                           ;color.c: 131:     LATEbits.LATE7 = 1;
  1463   00353E  8E7D               	bsf	125,7,c	;volatile
  1464   003540  0012               	return		;funcret
  1465   003542                     __end_of_gLED:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _bLED *****************
  1469 ;; Defined at:
  1470 ;;		line 135 in file "color.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		None
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 6
  1491 ;; This function calls:
  1492 ;;		Nothing
  1493 ;; This function is called by:
  1494 ;;		_tricolorLED
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           	psect	text5
  1499   003542                     __ptext5:
  1500                           	callstack 0
  1501   003542                     _bLED:
  1502                           	callstack 23
  1503   003542                     
  1504                           ;color.c: 136:     TRISAbits.TRISA3 = 0;
  1505   003542  9681               	bcf	129,3,c	;volatile
  1506                           
  1507                           ;color.c: 137:     LATAbits.LATA3 = 1;
  1508   003544  8679               	bsf	121,3,c	;volatile
  1509   003546  0012               	return		;funcret
  1510   003548                     __end_of_bLED:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _persistence_register *****************
  1514 ;; Defined at:
  1515 ;;		line 46 in file "interrupts.c"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;		None
  1518 ;; Auto vars:     Size  Location     Type
  1519 ;;		None
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1533 ;;Total ram usage:        0 bytes
  1534 ;; Hardware stack levels used: 1
  1535 ;; Hardware stack levels required when called: 9
  1536 ;; This function calls:
  1537 ;;		_color_writetoaddr
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text6
  1544   0034CA                     __ptext6:
  1545                           	callstack 0
  1546   0034CA                     _persistence_register:
  1547                           	callstack 21
  1548   0034CA                     
  1549                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  1550   0034CA  0E02               	movlw	2
  1551   0034CC  6E0B               	movwf	color_writetoaddr@value^0,c
  1552   0034CE  0E0C               	movlw	12
  1553   0034D0  EC19  F01A         	call	_color_writetoaddr
  1554   0034D4  0012               	return		;funcret
  1555   0034D6                     __end_of_persistence_register:
  1556                           	callstack 0
  1557                           
  1558 ;; *************** function _motor_retrace *****************
  1559 ;; Defined at:
  1560 ;;		line 254 in file "color.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  1563 ;;		 -> buggy_path(15), 
  1564 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  1565 ;;		 -> main@mL(9), 
  1566 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  1567 ;;		 -> main@mR(9), 
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1579 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1581 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;Total ram usage:        9 bytes
  1584 ;; Hardware stack levels used: 1
  1585 ;; Hardware stack levels required when called: 10
  1586 ;; This function calls:
  1587 ;;		_fullSpeedAhead
  1588 ;;		_norm_stop
  1589 ;;		_reverse
  1590 ;;		_turnLeft
  1591 ;;		_turnPrep
  1592 ;;		_turnRight
  1593 ;; This function is called by:
  1594 ;;		_main
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text7
  1599   001A28                     __ptext7:
  1600                           	callstack 0
  1601   001A28                     _motor_retrace:
  1602                           	callstack 20
  1603   001A28                     
  1604                           ;color.c: 255:         if (buggy_path[buggy_step - 2] == 1) {
  1605   001A28  5049               	movf	_buggy_step^0,w,c
  1606   001A2A  2427               	addwf	motor_retrace@buggy_path^0,w,c
  1607   001A2C  6E2D               	movwf	??_motor_retrace^0,c
  1608   001A2E  504A               	movf	(_buggy_step+1)^0,w,c
  1609   001A30  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1610   001A32  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1611   001A34  0EFE               	movlw	254
  1612   001A36  242D               	addwf	??_motor_retrace^0,w,c
  1613   001A38  6ED9               	movwf	fsr2l,c
  1614   001A3A  0EFF               	movlw	255
  1615   001A3C  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  1616   001A3E  6EDA               	movwf	fsr2h,c
  1617   001A40  04DE               	decf	postinc2,w,c
  1618   001A42  A4D8               	btfss	status,2,c
  1619   001A44  EF26  F00D         	goto	u2191
  1620   001A48  EF28  F00D         	goto	u2190
  1621   001A4C                     u2191:
  1622   001A4C  EF4A  F00D         	goto	l3046
  1623   001A50                     u2190:
  1624   001A50                     
  1625                           ;color.c: 256:             turnPrep(mL, mR);
  1626   001A50  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  1627   001A54  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  1628   001A58  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  1629   001A5C  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  1630   001A60  EC46  F018         	call	_turnPrep	;wreg free
  1631                           
  1632                           ;color.c: 257:             turnLeft(mL, mR);
  1633   001A64  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1634   001A68  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1635   001A6C  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1636   001A70  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1637   001A74  ECA3  F017         	call	_turnLeft	;wreg free
  1638   001A78                     l3044:
  1639                           
  1640                           ;color.c: 258:             _delay((unsigned long)((280)*(64000000/4000.0)));
  1641   001A78  0E17               	movlw	23
  1642   001A7A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1643   001A7C  0EBB               	movlw	187
  1644   001A7E  6E2D               	movwf	??_motor_retrace^0,c
  1645   001A80  0E1D               	movlw	29
  1646   001A82                     u2527:
  1647   001A82  2EE8               	decfsz	wreg,f,c
  1648   001A84  D7FE               	bra	u2527
  1649   001A86  2E2D               	decfsz	??_motor_retrace^0,f,c
  1650   001A88  D7FC               	bra	u2527
  1651   001A8A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1652   001A8C  D7FA               	bra	u2527
  1653   001A8E  F000               	nop	
  1654                           
  1655                           ;color.c: 260:         } else if (buggy_path[buggy_step - 2] == 2) {
  1656   001A90  EF1E  F00F         	goto	l169
  1657   001A94                     l3046:
  1658   001A94  5049               	movf	_buggy_step^0,w,c
  1659   001A96  2427               	addwf	motor_retrace@buggy_path^0,w,c
  1660   001A98  6E2D               	movwf	??_motor_retrace^0,c
  1661   001A9A  504A               	movf	(_buggy_step+1)^0,w,c
  1662   001A9C  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1663   001A9E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1664   001AA0  0EFE               	movlw	254
  1665   001AA2  242D               	addwf	??_motor_retrace^0,w,c
  1666   001AA4  6ED9               	movwf	fsr2l,c
  1667   001AA6  0EFF               	movlw	255
  1668   001AA8  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  1669   001AAA  6EDA               	movwf	fsr2h,c
  1670   001AAC  0E02               	movlw	2
  1671   001AAE  18DE               	xorwf	postinc2,w,c
  1672   001AB0  A4D8               	btfss	status,2,c
  1673   001AB2  EF5D  F00D         	goto	u2201
  1674   001AB6  EF5F  F00D         	goto	u2200
  1675   001ABA                     u2201:
  1676   001ABA  EF75  F00D         	goto	l3052
  1677   001ABE                     u2200:
  1678   001ABE                     
  1679                           ;color.c: 261:             turnPrep(mL, mR);
  1680   001ABE  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  1681   001AC2  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  1682   001AC6  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  1683   001ACA  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  1684   001ACE  EC46  F018         	call	_turnPrep	;wreg free
  1685                           
  1686                           ;color.c: 262:             turnRight(mL, mR);
  1687   001AD2  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  1688   001AD6  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1689   001ADA  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  1690   001ADE  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1691   001AE2  EC6A  F017         	call	_turnRight	;wreg free
  1692   001AE6  EF3C  F00D         	goto	l3044
  1693   001AEA                     l3052:
  1694   001AEA  5049               	movf	_buggy_step^0,w,c
  1695   001AEC  2427               	addwf	motor_retrace@buggy_path^0,w,c
  1696   001AEE  6E2D               	movwf	??_motor_retrace^0,c
  1697   001AF0  504A               	movf	(_buggy_step+1)^0,w,c
  1698   001AF2  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1699   001AF4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1700   001AF6  0EFE               	movlw	254
  1701   001AF8  242D               	addwf	??_motor_retrace^0,w,c
  1702   001AFA  6ED9               	movwf	fsr2l,c
  1703   001AFC  0EFF               	movlw	255
  1704   001AFE  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  1705   001B00  6EDA               	movwf	fsr2h,c
  1706   001B02  0E03               	movlw	3
  1707   001B04  18DE               	xorwf	postinc2,w,c
  1708   001B06  A4D8               	btfss	status,2,c
  1709   001B08  EF88  F00D         	goto	u2211
  1710   001B0C  EF8A  F00D         	goto	u2210
  1711   001B10                     u2211:
  1712   001B10  EFAB  F00D         	goto	l3058
  1713   001B14                     u2210:
  1714   001B14                     
  1715                           ;color.c: 266:             turnPrep(mL, mR);
  1716   001B14  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  1717   001B18  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  1718   001B1C  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  1719   001B20  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  1720   001B24  EC46  F018         	call	_turnPrep	;wreg free
  1721                           
  1722                           ;color.c: 267:             turnRight(mL, mR);
  1723   001B28  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  1724   001B2C  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1725   001B30  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  1726   001B34  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1727   001B38  EC6A  F017         	call	_turnRight	;wreg free
  1728   001B3C                     
  1729                           ;color.c: 268:             _delay((unsigned long)((495)*(64000000/4000.0)));
  1730   001B3C  0E29               	movlw	41
  1731   001B3E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1732   001B40  0E2E               	movlw	46
  1733   001B42  6E2D               	movwf	??_motor_retrace^0,c
  1734   001B44  0E9A               	movlw	154
  1735   001B46                     u2537:
  1736   001B46  2EE8               	decfsz	wreg,f,c
  1737   001B48  D7FE               	bra	u2537
  1738   001B4A  2E2D               	decfsz	??_motor_retrace^0,f,c
  1739   001B4C  D7FC               	bra	u2537
  1740   001B4E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1741   001B50  D7FA               	bra	u2537
  1742                           
  1743                           ;color.c: 270:         } else if (buggy_path[buggy_step - 2] == 4) {
  1744   001B52  EF1E  F00F         	goto	l169
  1745   001B56                     l3058:
  1746   001B56  5049               	movf	_buggy_step^0,w,c
  1747   001B58  2427               	addwf	motor_retrace@buggy_path^0,w,c
  1748   001B5A  6E2D               	movwf	??_motor_retrace^0,c
  1749   001B5C  504A               	movf	(_buggy_step+1)^0,w,c
  1750   001B5E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1751   001B60  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1752   001B62  0EFE               	movlw	254
  1753   001B64  242D               	addwf	??_motor_retrace^0,w,c
  1754   001B66  6ED9               	movwf	fsr2l,c
  1755   001B68  0EFF               	movlw	255
  1756   001B6A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  1757   001B6C  6EDA               	movwf	fsr2h,c
  1758   001B6E  0E04               	movlw	4
  1759   001B70  18DE               	xorwf	postinc2,w,c
  1760   001B72  A4D8               	btfss	status,2,c
  1761   001B74  EFBE  F00D         	goto	u2221
  1762   001B78  EFC0  F00D         	goto	u2220
  1763   001B7C                     u2221:
  1764   001B7C  EF4D  F00E         	goto	l3078
  1765   001B80                     u2220:
  1766   001B80                     
  1767                           ;color.c: 271:             turnPrep(mL,mR);
  1768   001B80  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  1769   001B84  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  1770   001B88  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  1771   001B8C  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  1772   001B90  EC46  F018         	call	_turnPrep	;wreg free
  1773                           
  1774                           ;color.c: 272:             turnRight(mL, mR);
  1775   001B94  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  1776   001B98  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1777   001B9C  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  1778   001BA0  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1779   001BA4  EC6A  F017         	call	_turnRight	;wreg free
  1780   001BA8                     
  1781                           ;color.c: 273:             _delay((unsigned long)((280)*(64000000/4000.0)));
  1782   001BA8  0E17               	movlw	23
  1783   001BAA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1784   001BAC  0EBB               	movlw	187
  1785   001BAE  6E2D               	movwf	??_motor_retrace^0,c
  1786   001BB0  0E1D               	movlw	29
  1787   001BB2                     u2547:
  1788   001BB2  2EE8               	decfsz	wreg,f,c
  1789   001BB4  D7FE               	bra	u2547
  1790   001BB6  2E2D               	decfsz	??_motor_retrace^0,f,c
  1791   001BB8  D7FC               	bra	u2547
  1792   001BBA  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1793   001BBC  D7FA               	bra	u2547
  1794   001BBE  F000               	nop	
  1795   001BC0                     
  1796                           ;color.c: 274:             norm_stop(mL, mR);
  1797   001BC0  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1798   001BC4  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1799   001BC8  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1800   001BCC  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1801   001BD0  EC6D  F019         	call	_norm_stop	;wreg free
  1802                           
  1803                           ;color.c: 275:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1804   001BD4  0E09               	movlw	9
  1805   001BD6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1806   001BD8  0E1E               	movlw	30
  1807   001BDA  6E2D               	movwf	??_motor_retrace^0,c
  1808   001BDC  0EE4               	movlw	228
  1809   001BDE                     u2557:
  1810   001BDE  2EE8               	decfsz	wreg,f,c
  1811   001BE0  D7FE               	bra	u2557
  1812   001BE2  2E2D               	decfsz	??_motor_retrace^0,f,c
  1813   001BE4  D7FC               	bra	u2557
  1814   001BE6  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1815   001BE8  D7FA               	bra	u2557
  1816   001BEA  D000               	nop2	
  1817   001BEC                     
  1818                           ;color.c: 276:             fullSpeedAhead(mL, mR);
  1819   001BEC  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  1820   001BF0  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  1821   001BF4  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  1822   001BF8  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  1823   001BFC  EC18  F016         	call	_fullSpeedAhead	;wreg free
  1824   001C00                     
  1825                           ;color.c: 277:             _delay((unsigned long)((1200)*(64000000/4000.0)));
  1826   001C00  0E62               	movlw	98
  1827   001C02  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1828   001C04  0E67               	movlw	103
  1829   001C06  6E2D               	movwf	??_motor_retrace^0,c
  1830   001C08  0ECE               	movlw	206
  1831   001C0A                     u2567:
  1832   001C0A  2EE8               	decfsz	wreg,f,c
  1833   001C0C  D7FE               	bra	u2567
  1834   001C0E  2E2D               	decfsz	??_motor_retrace^0,f,c
  1835   001C10  D7FC               	bra	u2567
  1836   001C12  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1837   001C14  D7FA               	bra	u2567
  1838                           
  1839                           ;color.c: 278:             reverse(mL, mR);
  1840   001C16  C029  F01C         	movff	motor_retrace@mL,reverse@mL
  1841   001C1A  C02A  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1842   001C1E  C02B  F01E         	movff	motor_retrace@mR,reverse@mR
  1843   001C22  C02C  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1844   001C26  EC27  F015         	call	_reverse	;wreg free
  1845   001C2A                     
  1846                           ;color.c: 279:             _delay((unsigned long)((600)*(64000000/4000.0)));
  1847   001C2A  0E31               	movlw	49
  1848   001C2C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1849   001C2E  0EB4               	movlw	180
  1850   001C30  6E2D               	movwf	??_motor_retrace^0,c
  1851   001C32  0E66               	movlw	102
  1852   001C34                     u2577:
  1853   001C34  2EE8               	decfsz	wreg,f,c
  1854   001C36  D7FE               	bra	u2577
  1855   001C38  2E2D               	decfsz	??_motor_retrace^0,f,c
  1856   001C3A  D7FC               	bra	u2577
  1857   001C3C  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1858   001C3E  D7FA               	bra	u2577
  1859   001C40                     
  1860                           ;color.c: 280:             turnLeft(mL, mR);
  1861   001C40  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1862   001C44  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1863   001C48  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1864   001C4C  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1865   001C50  ECA3  F017         	call	_turnLeft	;wreg free
  1866                           
  1867                           ;color.c: 281:             _delay((unsigned long)((285)*(64000000/4000.0)));
  1868   001C54  0E18               	movlw	24
  1869   001C56  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1870   001C58  0E23               	movlw	35
  1871   001C5A  6E2D               	movwf	??_motor_retrace^0,c
  1872   001C5C  0E02               	movlw	2
  1873   001C5E                     u2587:
  1874   001C5E  2EE8               	decfsz	wreg,f,c
  1875   001C60  D7FE               	bra	u2587
  1876   001C62  2E2D               	decfsz	??_motor_retrace^0,f,c
  1877   001C64  D7FC               	bra	u2587
  1878   001C66  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1879   001C68  D7FA               	bra	u2587
  1880   001C6A                     
  1881                           ;color.c: 282:             norm_stop(mL, mR);
  1882   001C6A  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1883   001C6E  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1884   001C72  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1885   001C76  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1886   001C7A  EC6D  F019         	call	_norm_stop	;wreg free
  1887   001C7E                     
  1888                           ;color.c: 283:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1889   001C7E  0E09               	movlw	9
  1890   001C80  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1891   001C82  0E1E               	movlw	30
  1892   001C84  6E2D               	movwf	??_motor_retrace^0,c
  1893   001C86  0EE4               	movlw	228
  1894   001C88                     u2597:
  1895   001C88  2EE8               	decfsz	wreg,f,c
  1896   001C8A  D7FE               	bra	u2597
  1897   001C8C  2E2D               	decfsz	??_motor_retrace^0,f,c
  1898   001C8E  D7FC               	bra	u2597
  1899   001C90  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1900   001C92  D7FA               	bra	u2597
  1901   001C94  D000               	nop2	
  1902                           
  1903                           ;color.c: 285:         } else if (buggy_path[buggy_step - 2] == 5) {
  1904   001C96  EF1E  F00F         	goto	l169
  1905   001C9A                     l3078:
  1906   001C9A  5049               	movf	_buggy_step^0,w,c
  1907   001C9C  2427               	addwf	motor_retrace@buggy_path^0,w,c
  1908   001C9E  6E2D               	movwf	??_motor_retrace^0,c
  1909   001CA0  504A               	movf	(_buggy_step+1)^0,w,c
  1910   001CA2  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1911   001CA4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1912   001CA6  0EFE               	movlw	254
  1913   001CA8  242D               	addwf	??_motor_retrace^0,w,c
  1914   001CAA  6ED9               	movwf	fsr2l,c
  1915   001CAC  0EFF               	movlw	255
  1916   001CAE  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  1917   001CB0  6EDA               	movwf	fsr2h,c
  1918   001CB2  0E05               	movlw	5
  1919   001CB4  18DE               	xorwf	postinc2,w,c
  1920   001CB6  A4D8               	btfss	status,2,c
  1921   001CB8  EF60  F00E         	goto	u2231
  1922   001CBC  EF62  F00E         	goto	u2230
  1923   001CC0                     u2231:
  1924   001CC0  EFBC  F00E         	goto	l3092
  1925   001CC4                     u2230:
  1926   001CC4                     
  1927                           ;color.c: 286:             norm_stop(mL, mR);
  1928   001CC4  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1929   001CC8  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1930   001CCC  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1931   001CD0  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1932   001CD4  EC6D  F019         	call	_norm_stop	;wreg free
  1933   001CD8                     
  1934                           ;color.c: 287:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1935   001CD8  0E09               	movlw	9
  1936   001CDA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1937   001CDC  0E1E               	movlw	30
  1938   001CDE  6E2D               	movwf	??_motor_retrace^0,c
  1939   001CE0  0EE4               	movlw	228
  1940   001CE2                     u2607:
  1941   001CE2  2EE8               	decfsz	wreg,f,c
  1942   001CE4  D7FE               	bra	u2607
  1943   001CE6  2E2D               	decfsz	??_motor_retrace^0,f,c
  1944   001CE8  D7FC               	bra	u2607
  1945   001CEA  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1946   001CEC  D7FA               	bra	u2607
  1947   001CEE  D000               	nop2	
  1948   001CF0                     
  1949                           ;color.c: 288:             turnLeft(mL, mR);
  1950   001CF0  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1951   001CF4  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1952   001CF8  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1953   001CFC  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1954   001D00  ECA3  F017         	call	_turnLeft	;wreg free
  1955                           
  1956                           ;color.c: 289:             _delay((unsigned long)((250)*(64000000/4000.0)));
  1957   001D04  0E15               	movlw	21
  1958   001D06  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1959   001D08  0E4B               	movlw	75
  1960   001D0A  6E2D               	movwf	??_motor_retrace^0,c
  1961   001D0C  0EBE               	movlw	190
  1962   001D0E                     u2617:
  1963   001D0E  2EE8               	decfsz	wreg,f,c
  1964   001D10  D7FE               	bra	u2617
  1965   001D12  2E2D               	decfsz	??_motor_retrace^0,f,c
  1966   001D14  D7FC               	bra	u2617
  1967   001D16  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1968   001D18  D7FA               	bra	u2617
  1969   001D1A  D000               	nop2	
  1970   001D1C                     
  1971                           ;color.c: 290:             norm_stop(mL, mR);
  1972   001D1C  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1973   001D20  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1974   001D24  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1975   001D28  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1976   001D2C  EC6D  F019         	call	_norm_stop	;wreg free
  1977   001D30                     
  1978                           ;color.c: 291:             _delay((unsigned long)((100)*(64000000/4000.0)));
  1979   001D30  0E09               	movlw	9
  1980   001D32  6E2E               	movwf	(??_motor_retrace+1)^0,c
  1981   001D34  0E1E               	movlw	30
  1982   001D36  6E2D               	movwf	??_motor_retrace^0,c
  1983   001D38  0EE4               	movlw	228
  1984   001D3A                     u2627:
  1985   001D3A  2EE8               	decfsz	wreg,f,c
  1986   001D3C  D7FE               	bra	u2627
  1987   001D3E  2E2D               	decfsz	??_motor_retrace^0,f,c
  1988   001D40  D7FC               	bra	u2627
  1989   001D42  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  1990   001D44  D7FA               	bra	u2627
  1991   001D46  D000               	nop2	
  1992                           
  1993                           ;color.c: 292:             fullSpeedAhead(mL, mR);
  1994   001D48  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  1995   001D4C  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  1996   001D50  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  1997   001D54  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  1998   001D58  EC18  F016         	call	_fullSpeedAhead	;wreg free
  1999   001D5C                     
  2000                           ;color.c: 293:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  2001   001D5C  0EA3               	movlw	163
  2002   001D5E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  2003   001D60  0E57               	movlw	87
  2004   001D62  6E2D               	movwf	??_motor_retrace^0,c
  2005   001D64  0E02               	movlw	2
  2006   001D66                     u2637:
  2007   001D66  2EE8               	decfsz	wreg,f,c
  2008   001D68  D7FE               	bra	u2637
  2009   001D6A  2E2D               	decfsz	??_motor_retrace^0,f,c
  2010   001D6C  D7FC               	bra	u2637
  2011   001D6E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  2012   001D70  D7FA               	bra	u2637
  2013   001D72  D000               	nop2	
  2014                           
  2015                           ;color.c: 295:         } else if (buggy_path[buggy_step - 2] == 6) {
  2016   001D74  EF1E  F00F         	goto	l169
  2017   001D78                     l3092:
  2018   001D78  5049               	movf	_buggy_step^0,w,c
  2019   001D7A  2427               	addwf	motor_retrace@buggy_path^0,w,c
  2020   001D7C  6E2D               	movwf	??_motor_retrace^0,c
  2021   001D7E  504A               	movf	(_buggy_step+1)^0,w,c
  2022   001D80  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  2023   001D82  6E2E               	movwf	(??_motor_retrace+1)^0,c
  2024   001D84  0EFE               	movlw	254
  2025   001D86  242D               	addwf	??_motor_retrace^0,w,c
  2026   001D88  6ED9               	movwf	fsr2l,c
  2027   001D8A  0EFF               	movlw	255
  2028   001D8C  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  2029   001D8E  6EDA               	movwf	fsr2h,c
  2030   001D90  0E06               	movlw	6
  2031   001D92  18DE               	xorwf	postinc2,w,c
  2032   001D94  A4D8               	btfss	status,2,c
  2033   001D96  EFCF  F00E         	goto	u2241
  2034   001D9A  EFD1  F00E         	goto	u2240
  2035   001D9E                     u2241:
  2036   001D9E  EFF3  F00E         	goto	l3098
  2037   001DA2                     u2240:
  2038   001DA2                     
  2039                           ;color.c: 296:             turnPrep(mL, mR);
  2040   001DA2  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  2041   001DA6  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  2042   001DAA  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  2043   001DAE  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  2044   001DB2  EC46  F018         	call	_turnPrep	;wreg free
  2045                           
  2046                           ;color.c: 297:             turnLeft(mL, mR);
  2047   001DB6  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  2048   001DBA  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  2049   001DBE  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  2050   001DC2  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  2051   001DC6  ECA3  F017         	call	_turnLeft	;wreg free
  2052   001DCA                     l3096:
  2053                           
  2054                           ;color.c: 298:             _delay((unsigned long)((350)*(64000000/4000.0)));
  2055   001DCA  0E1D               	movlw	29
  2056   001DCC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  2057   001DCE  0E69               	movlw	105
  2058   001DD0  6E2D               	movwf	??_motor_retrace^0,c
  2059   001DD2  0EA5               	movlw	165
  2060   001DD4                     u2647:
  2061   001DD4  2EE8               	decfsz	wreg,f,c
  2062   001DD6  D7FE               	bra	u2647
  2063   001DD8  2E2D               	decfsz	??_motor_retrace^0,f,c
  2064   001DDA  D7FC               	bra	u2647
  2065   001DDC  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  2066   001DDE  D7FA               	bra	u2647
  2067   001DE0  F000               	nop	
  2068                           
  2069                           ;color.c: 299:         } else if (buggy_path[buggy_step - 2] == 7) {
  2070   001DE2  EF1E  F00F         	goto	l169
  2071   001DE6                     l3098:
  2072   001DE6  5049               	movf	_buggy_step^0,w,c
  2073   001DE8  2427               	addwf	motor_retrace@buggy_path^0,w,c
  2074   001DEA  6E2D               	movwf	??_motor_retrace^0,c
  2075   001DEC  504A               	movf	(_buggy_step+1)^0,w,c
  2076   001DEE  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  2077   001DF0  6E2E               	movwf	(??_motor_retrace+1)^0,c
  2078   001DF2  0EFE               	movlw	254
  2079   001DF4  242D               	addwf	??_motor_retrace^0,w,c
  2080   001DF6  6ED9               	movwf	fsr2l,c
  2081   001DF8  0EFF               	movlw	255
  2082   001DFA  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  2083   001DFC  6EDA               	movwf	fsr2h,c
  2084   001DFE  0E07               	movlw	7
  2085   001E00  18DE               	xorwf	postinc2,w,c
  2086   001E02  A4D8               	btfss	status,2,c
  2087   001E04  EF06  F00F         	goto	u2251
  2088   001E08  EF08  F00F         	goto	u2250
  2089   001E0C                     u2251:
  2090   001E0C  EF1E  F00F         	goto	l163
  2091   001E10                     u2250:
  2092   001E10                     
  2093                           ;color.c: 300:             turnPrep(mL, mR);
  2094   001E10  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  2095   001E14  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  2096   001E18  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  2097   001E1C  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  2098   001E20  EC46  F018         	call	_turnPrep	;wreg free
  2099                           
  2100                           ;color.c: 301:             turnRight(mL, mR);
  2101   001E24  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  2102   001E28  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  2103   001E2C  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  2104   001E30  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  2105   001E34  EC6A  F017         	call	_turnRight	;wreg free
  2106   001E38  EFE5  F00E         	goto	l3096
  2107   001E3C                     l163:
  2108   001E3C                     l169:
  2109   001E3C  0012               	return		;funcret
  2110   001E3E                     __end_of_motor_retrace:
  2111                           	callstack 0
  2112                           
  2113 ;; *************** function _fullSpeedAhead *****************
  2114 ;; Defined at:
  2115 ;;		line 178 in file "dc_motor.c"
  2116 ;; Parameters:    Size  Location     Type
  2117 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2118 ;;		 -> main@mL(9), 
  2119 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2120 ;;		 -> main@mR(9), 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;		None
  2123 ;; Return value:  Size  Location     Type
  2124 ;;                  1    wreg      void 
  2125 ;; Registers used:
  2126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2127 ;; Tracked objects:
  2128 ;;		On entry : 0/0
  2129 ;;		On exit  : 0/0
  2130 ;;		Unchanged: 0/0
  2131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2132 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2135 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2136 ;;Total ram usage:        5 bytes
  2137 ;; Hardware stack levels used: 1
  2138 ;; Hardware stack levels required when called: 8
  2139 ;; This function calls:
  2140 ;;		_setMotorPWM
  2141 ;; This function is called by:
  2142 ;;		_motor_retrace
  2143 ;;		_main
  2144 ;; This function uses a non-reentrant model
  2145 ;;
  2146                           
  2147                           	psect	text8
  2148   002C30                     __ptext8:
  2149                           	callstack 0
  2150   002C30                     _fullSpeedAhead:
  2151                           	callstack 21
  2152   002C30                     
  2153                           ;dc_motor.c: 178: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 179: {;dc_
      +                          motor.c: 180:     mL->power =5;
  2154   002C30  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2155   002C34  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2156   002C38  0E05               	movlw	5
  2157   002C3A  6EDF               	movwf	indf2,c
  2158                           
  2159                           ;dc_motor.c: 181:     mR->power = 5;
  2160   002C3C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2161   002C40  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2162   002C44  0E05               	movlw	5
  2163   002C46  6EDF               	movwf	indf2,c
  2164   002C48                     
  2165                           ;dc_motor.c: 182:     mR->direction = 1;
  2166   002C48  EE20 F001          	lfsr	2,1
  2167   002C4C  501E               	movf	fullSpeedAhead@mR^0,w,c
  2168   002C4E  26D9               	addwf	fsr2l,f,c
  2169   002C50  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2170   002C52  22DA               	addwfc	fsr2h,f,c
  2171   002C54  0E01               	movlw	1
  2172   002C56  6EDF               	movwf	indf2,c
  2173   002C58                     
  2174                           ;dc_motor.c: 183:     mL->direction = 1;
  2175   002C58  EE20 F001          	lfsr	2,1
  2176   002C5C  501C               	movf	fullSpeedAhead@mL^0,w,c
  2177   002C5E  26D9               	addwf	fsr2l,f,c
  2178   002C60  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2179   002C62  22DA               	addwfc	fsr2h,f,c
  2180   002C64  0E01               	movlw	1
  2181   002C66  6EDF               	movwf	indf2,c
  2182   002C68                     
  2183                           ;dc_motor.c: 184:     mL->brakemode = 1;
  2184   002C68  EE20 F002          	lfsr	2,2
  2185   002C6C  501C               	movf	fullSpeedAhead@mL^0,w,c
  2186   002C6E  26D9               	addwf	fsr2l,f,c
  2187   002C70  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2188   002C72  22DA               	addwfc	fsr2h,f,c
  2189   002C74  0E01               	movlw	1
  2190   002C76  6EDF               	movwf	indf2,c
  2191   002C78                     
  2192                           ;dc_motor.c: 185:     mR->brakemode = 1;
  2193   002C78  EE20 F002          	lfsr	2,2
  2194   002C7C  501E               	movf	fullSpeedAhead@mR^0,w,c
  2195   002C7E  26D9               	addwf	fsr2l,f,c
  2196   002C80  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2197   002C82  22DA               	addwfc	fsr2h,f,c
  2198   002C84  0E01               	movlw	1
  2199   002C86  6EDF               	movwf	indf2,c
  2200                           
  2201                           ;dc_motor.c: 186:     while (mL->power <= 45 && mR->power <=45)
  2202   002C88  EF5C  F016         	goto	l2604
  2203   002C8C                     l2598:
  2204                           
  2205                           ;dc_motor.c: 187:     {;dc_motor.c: 188:         mL->power++;
  2206   002C8C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2207   002C90  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2208   002C94  2ADF               	incf	indf2,f,c
  2209                           
  2210                           ;dc_motor.c: 189:         mR->power++;
  2211   002C96  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2212   002C9A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2213   002C9E  2ADF               	incf	indf2,f,c
  2214   002CA0                     
  2215                           ;dc_motor.c: 191:         setMotorPWM(mL);
  2216   002CA0  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2217   002CA4  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2218   002CA8  ECEF  F013         	call	_setMotorPWM	;wreg free
  2219   002CAC                     
  2220                           ;dc_motor.c: 192:         setMotorPWM(mR);
  2221   002CAC  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2222   002CB0  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2223   002CB4  ECEF  F013         	call	_setMotorPWM	;wreg free
  2224   002CB8                     l2604:
  2225                           
  2226                           ;dc_motor.c: 186:     while (mL->power <= 45 && mR->power <=45)
  2227   002CB8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2228   002CBC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2229   002CC0  0E2E               	movlw	46
  2230   002CC2  60DF               	cpfslt	indf2,c
  2231   002CC4  EF66  F016         	goto	u1401
  2232   002CC8  EF68  F016         	goto	u1400
  2233   002CCC                     u1401:
  2234   002CCC  EF74  F016         	goto	l2608
  2235   002CD0                     u1400:
  2236   002CD0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2237   002CD4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2238   002CD8  0E2D               	movlw	45
  2239   002CDA  64DF               	cpfsgt	indf2,c
  2240   002CDC  EF72  F016         	goto	u1411
  2241   002CE0  EF74  F016         	goto	u1410
  2242   002CE4                     u1411:
  2243   002CE4  EF46  F016         	goto	l2598
  2244   002CE8                     u1410:
  2245   002CE8                     l2608:
  2246                           
  2247                           ;dc_motor.c: 194:     mL->power = 45;
  2248   002CE8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2249   002CEC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2250   002CF0  0E2D               	movlw	45
  2251   002CF2  6EDF               	movwf	indf2,c
  2252                           
  2253                           ;dc_motor.c: 195:     mR->power = 45;
  2254   002CF4  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2255   002CF8  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2256   002CFC  0E2D               	movlw	45
  2257   002CFE  6EDF               	movwf	indf2,c
  2258   002D00                     
  2259                           ;dc_motor.c: 196:     setMotorPWM(mL);
  2260   002D00  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2261   002D04  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2262   002D08  ECEF  F013         	call	_setMotorPWM	;wreg free
  2263   002D0C                     
  2264                           ;dc_motor.c: 197:     setMotorPWM(mR);
  2265   002D0C  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2266   002D10  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2267   002D14  ECEF  F013         	call	_setMotorPWM	;wreg free
  2268   002D18  0012               	return		;funcret
  2269   002D1A                     __end_of_fullSpeedAhead:
  2270                           	callstack 0
  2271                           
  2272 ;; *************** function _motor_response *****************
  2273 ;; Defined at:
  2274 ;;		line 149 in file "color.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  2277 ;;		 -> main@RGBC(32), 
  2278 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  2279 ;;		 -> main@mL(9), 
  2280 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  2281 ;;		 -> main@mR(9), 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  j               2   46[COMRAM] int 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  1    wreg      unsigned char 
  2286 ;; Registers used:
  2287 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2293 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2296 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2297 ;;Total ram usage:       10 bytes
  2298 ;; Hardware stack levels used: 1
  2299 ;; Hardware stack levels required when called: 10
  2300 ;; This function calls:
  2301 ;;		___flge
  2302 ;;		_norm_stop
  2303 ;;		_reverse
  2304 ;;		_turnLeft
  2305 ;;		_turnPrep
  2306 ;;		_turnRight
  2307 ;; This function is called by:
  2308 ;;		_main
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           	psect	text9
  2313   000E16                     __ptext9:
  2314                           	callstack 0
  2315   000E16                     _motor_response:
  2316                           	callstack 20
  2317   000E16                     
  2318                           ;color.c: 150:         if (temp->norm_C <9 && temp->norm_C >6){
  2319   000E16  EE20 F01C          	lfsr	2,28
  2320   000E1A  5027               	movf	motor_response@temp^0,w,c
  2321   000E1C  26D9               	addwf	fsr2l,f,c
  2322   000E1E  5028               	movf	(motor_response@temp+1)^0,w,c
  2323   000E20  22DA               	addwfc	fsr2h,f,c
  2324   000E22  CFDE F009          	movff	postinc2,___flge@ff1
  2325   000E26  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2326   000E2A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2327   000E2E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2328   000E32  0E00               	movlw	0
  2329   000E34  6E0D               	movwf	___flge@ff2^0,c
  2330   000E36  0E00               	movlw	0
  2331   000E38  6E0E               	movwf	(___flge@ff2+1)^0,c
  2332   000E3A  0E10               	movlw	16
  2333   000E3C  6E0F               	movwf	(___flge@ff2+2)^0,c
  2334   000E3E  0E41               	movlw	65
  2335   000E40  6E10               	movwf	(___flge@ff2+3)^0,c
  2336   000E42  ECA5  F014         	call	___flge	;wreg free
  2337   000E46  B0D8               	btfsc	status,0,c
  2338   000E48  EF28  F007         	goto	u1801
  2339   000E4C  EF2A  F007         	goto	u1800
  2340   000E50                     u1801:
  2341   000E50  EF06  F00A         	goto	l2928
  2342   000E54                     u1800:
  2343   000E54  0E00               	movlw	0
  2344   000E56  6E09               	movwf	___flge@ff1^0,c
  2345   000E58  0E00               	movlw	0
  2346   000E5A  6E0A               	movwf	(___flge@ff1+1)^0,c
  2347   000E5C  0EC0               	movlw	192
  2348   000E5E  6E0B               	movwf	(___flge@ff1+2)^0,c
  2349   000E60  0E40               	movlw	64
  2350   000E62  6E0C               	movwf	(___flge@ff1+3)^0,c
  2351   000E64  EE20 F01C          	lfsr	2,28
  2352   000E68  5027               	movf	motor_response@temp^0,w,c
  2353   000E6A  26D9               	addwf	fsr2l,f,c
  2354   000E6C  5028               	movf	(motor_response@temp+1)^0,w,c
  2355   000E6E  22DA               	addwfc	fsr2h,f,c
  2356   000E70  CFDE F00D          	movff	postinc2,___flge@ff2
  2357   000E74  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2358   000E78  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2359   000E7C  CFDE F010          	movff	postinc2,___flge@ff2+3
  2360   000E80  ECA5  F014         	call	___flge	;wreg free
  2361   000E84  B0D8               	btfsc	status,0,c
  2362   000E86  EF47  F007         	goto	u1811
  2363   000E8A  EF49  F007         	goto	u1810
  2364   000E8E                     u1811:
  2365   000E8E  EF06  F00A         	goto	l2928
  2366   000E92                     u1810:
  2367   000E92                     
  2368                           ;color.c: 152:          if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2
      +                           && temp->norm_G > 3 && temp->norm_G < 3.5) {
  2369   000E92  EE20 F018          	lfsr	2,24
  2370   000E96  5027               	movf	motor_response@temp^0,w,c
  2371   000E98  26D9               	addwf	fsr2l,f,c
  2372   000E9A  5028               	movf	(motor_response@temp+1)^0,w,c
  2373   000E9C  22DA               	addwfc	fsr2h,f,c
  2374   000E9E  CFDE F009          	movff	postinc2,___flge@ff1
  2375   000EA2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2376   000EA6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2377   000EAA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2378   000EAE  0E00               	movlw	0
  2379   000EB0  6E0D               	movwf	___flge@ff2^0,c
  2380   000EB2  0E00               	movlw	0
  2381   000EB4  6E0E               	movwf	(___flge@ff2+1)^0,c
  2382   000EB6  0EA0               	movlw	160
  2383   000EB8  6E0F               	movwf	(___flge@ff2+2)^0,c
  2384   000EBA  0E40               	movlw	64
  2385   000EBC  6E10               	movwf	(___flge@ff2+3)^0,c
  2386   000EBE  ECA5  F014         	call	___flge	;wreg free
  2387   000EC2  B0D8               	btfsc	status,0,c
  2388   000EC4  EF66  F007         	goto	u1821
  2389   000EC8  EF68  F007         	goto	u1820
  2390   000ECC                     u1821:
  2391   000ECC  EF29  F008         	goto	l2880
  2392   000ED0                     u1820:
  2393   000ED0  0E9A               	movlw	154
  2394   000ED2  6E09               	movwf	___flge@ff1^0,c
  2395   000ED4  0E99               	movlw	153
  2396   000ED6  6E0A               	movwf	(___flge@ff1+1)^0,c
  2397   000ED8  0ED9               	movlw	217
  2398   000EDA  6E0B               	movwf	(___flge@ff1+2)^0,c
  2399   000EDC  0E3F               	movlw	63
  2400   000EDE  6E0C               	movwf	(___flge@ff1+3)^0,c
  2401   000EE0  EE20 F010          	lfsr	2,16
  2402   000EE4  5027               	movf	motor_response@temp^0,w,c
  2403   000EE6  26D9               	addwf	fsr2l,f,c
  2404   000EE8  5028               	movf	(motor_response@temp+1)^0,w,c
  2405   000EEA  22DA               	addwfc	fsr2h,f,c
  2406   000EEC  CFDE F00D          	movff	postinc2,___flge@ff2
  2407   000EF0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2408   000EF4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2409   000EF8  CFDE F010          	movff	postinc2,___flge@ff2+3
  2410   000EFC  ECA5  F014         	call	___flge	;wreg free
  2411   000F00  B0D8               	btfsc	status,0,c
  2412   000F02  EF85  F007         	goto	u1831
  2413   000F06  EF87  F007         	goto	u1830
  2414   000F0A                     u1831:
  2415   000F0A  EF29  F008         	goto	l2880
  2416   000F0E                     u1830:
  2417   000F0E  EE20 F010          	lfsr	2,16
  2418   000F12  5027               	movf	motor_response@temp^0,w,c
  2419   000F14  26D9               	addwf	fsr2l,f,c
  2420   000F16  5028               	movf	(motor_response@temp+1)^0,w,c
  2421   000F18  22DA               	addwfc	fsr2h,f,c
  2422   000F1A  CFDE F009          	movff	postinc2,___flge@ff1
  2423   000F1E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2424   000F22  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2425   000F26  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2426   000F2A  0ECD               	movlw	205
  2427   000F2C  6E0D               	movwf	___flge@ff2^0,c
  2428   000F2E  0ECC               	movlw	204
  2429   000F30  6E0E               	movwf	(___flge@ff2+1)^0,c
  2430   000F32  0E0C               	movlw	12
  2431   000F34  6E0F               	movwf	(___flge@ff2+2)^0,c
  2432   000F36  0E40               	movlw	64
  2433   000F38  6E10               	movwf	(___flge@ff2+3)^0,c
  2434   000F3A  ECA5  F014         	call	___flge	;wreg free
  2435   000F3E  B0D8               	btfsc	status,0,c
  2436   000F40  EFA4  F007         	goto	u1841
  2437   000F44  EFA6  F007         	goto	u1840
  2438   000F48                     u1841:
  2439   000F48  EF29  F008         	goto	l2880
  2440   000F4C                     u1840:
  2441   000F4C  0E00               	movlw	0
  2442   000F4E  6E09               	movwf	___flge@ff1^0,c
  2443   000F50  0E00               	movlw	0
  2444   000F52  6E0A               	movwf	(___flge@ff1+1)^0,c
  2445   000F54  0E40               	movlw	64
  2446   000F56  6E0B               	movwf	(___flge@ff1+2)^0,c
  2447   000F58  0E40               	movlw	64
  2448   000F5A  6E0C               	movwf	(___flge@ff1+3)^0,c
  2449   000F5C  EE20 F014          	lfsr	2,20
  2450   000F60  5027               	movf	motor_response@temp^0,w,c
  2451   000F62  26D9               	addwf	fsr2l,f,c
  2452   000F64  5028               	movf	(motor_response@temp+1)^0,w,c
  2453   000F66  22DA               	addwfc	fsr2h,f,c
  2454   000F68  CFDE F00D          	movff	postinc2,___flge@ff2
  2455   000F6C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2456   000F70  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2457   000F74  CFDE F010          	movff	postinc2,___flge@ff2+3
  2458   000F78  ECA5  F014         	call	___flge	;wreg free
  2459   000F7C  B0D8               	btfsc	status,0,c
  2460   000F7E  EFC3  F007         	goto	u1851
  2461   000F82  EFC5  F007         	goto	u1850
  2462   000F86                     u1851:
  2463   000F86  EF29  F008         	goto	l2880
  2464   000F8A                     u1850:
  2465   000F8A  EE20 F014          	lfsr	2,20
  2466   000F8E  5027               	movf	motor_response@temp^0,w,c
  2467   000F90  26D9               	addwf	fsr2l,f,c
  2468   000F92  5028               	movf	(motor_response@temp+1)^0,w,c
  2469   000F94  22DA               	addwfc	fsr2h,f,c
  2470   000F96  CFDE F009          	movff	postinc2,___flge@ff1
  2471   000F9A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2472   000F9E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2473   000FA2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2474   000FA6  0E00               	movlw	0
  2475   000FA8  6E0D               	movwf	___flge@ff2^0,c
  2476   000FAA  0E00               	movlw	0
  2477   000FAC  6E0E               	movwf	(___flge@ff2+1)^0,c
  2478   000FAE  0E60               	movlw	96
  2479   000FB0  6E0F               	movwf	(___flge@ff2+2)^0,c
  2480   000FB2  0E40               	movlw	64
  2481   000FB4  6E10               	movwf	(___flge@ff2+3)^0,c
  2482   000FB6  ECA5  F014         	call	___flge	;wreg free
  2483   000FBA  B0D8               	btfsc	status,0,c
  2484   000FBC  EFE2  F007         	goto	u1861
  2485   000FC0  EFE4  F007         	goto	u1860
  2486   000FC4                     u1861:
  2487   000FC4  EF29  F008         	goto	l2880
  2488   000FC8                     u1860:
  2489   000FC8                     
  2490                           ;color.c: 153:              reverse(mL, mR);
  2491   000FC8  C029  F01C         	movff	motor_response@mL,reverse@mL
  2492   000FCC  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  2493   000FD0  C02B  F01E         	movff	motor_response@mR,reverse@mR
  2494   000FD4  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  2495   000FD8  EC27  F015         	call	_reverse	;wreg free
  2496   000FDC                     
  2497                           ;color.c: 154:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  2498   000FDC  0EF4               	movlw	244
  2499   000FDE  6E2E               	movwf	(??_motor_response+1)^0,c
  2500   000FE0  0E82               	movlw	130
  2501   000FE2  6E2D               	movwf	??_motor_response^0,c
  2502   000FE4  0E05               	movlw	5
  2503   000FE6                     u2657:
  2504   000FE6  2EE8               	decfsz	wreg,f,c
  2505   000FE8  D7FE               	bra	u2657
  2506   000FEA  2E2D               	decfsz	??_motor_response^0,f,c
  2507   000FEC  D7FC               	bra	u2657
  2508   000FEE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2509   000FF0  D7FA               	bra	u2657
  2510   000FF2  F000               	nop	
  2511   000FF4                     
  2512                           ;color.c: 155:         norm_stop(mL, mR);
  2513   000FF4  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  2514   000FF8  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2515   000FFC  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  2516   001000  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2517   001004  EC6D  F019         	call	_norm_stop	;wreg free
  2518                           
  2519                           ;color.c: 156:         _delay((unsigned long)((100)*(64000000/4000.0)));
  2520   001008  0E09               	movlw	9
  2521   00100A  6E2E               	movwf	(??_motor_response+1)^0,c
  2522   00100C  0E1E               	movlw	30
  2523   00100E  6E2D               	movwf	??_motor_response^0,c
  2524   001010  0EE4               	movlw	228
  2525   001012                     u2667:
  2526   001012  2EE8               	decfsz	wreg,f,c
  2527   001014  D7FE               	bra	u2667
  2528   001016  2E2D               	decfsz	??_motor_response^0,f,c
  2529   001018  D7FC               	bra	u2667
  2530   00101A  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2531   00101C  D7FA               	bra	u2667
  2532   00101E  D000               	nop2	
  2533   001020                     
  2534                           ;color.c: 157:         turnLeft(mL, mR);
  2535   001020  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  2536   001024  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2537   001028  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  2538   00102C  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2539   001030  ECA3  F017         	call	_turnLeft	;wreg free
  2540   001034                     
  2541                           ;color.c: 158:         _delay((unsigned long)((250)*(64000000/4000.0)));
  2542   001034  0E15               	movlw	21
  2543   001036  6E2E               	movwf	(??_motor_response+1)^0,c
  2544   001038  0E4B               	movlw	75
  2545   00103A  6E2D               	movwf	??_motor_response^0,c
  2546   00103C  0EBE               	movlw	190
  2547   00103E                     u2677:
  2548   00103E  2EE8               	decfsz	wreg,f,c
  2549   001040  D7FE               	bra	u2677
  2550   001042  2E2D               	decfsz	??_motor_response^0,f,c
  2551   001044  D7FC               	bra	u2677
  2552   001046  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2553   001048  D7FA               	bra	u2677
  2554   00104A  D000               	nop2	
  2555   00104C                     
  2556                           ;color.c: 159:         return 5;
  2557   00104C  0E05               	movlw	5
  2558   00104E  EF13  F00D         	goto	l138
  2559   001052                     l2880:
  2560                           
  2561                           ;color.c: 162:          if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4
      +                           && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  2562   001052  0E00               	movlw	0
  2563   001054  6E09               	movwf	___flge@ff1^0,c
  2564   001056  0E00               	movlw	0
  2565   001058  6E0A               	movwf	(___flge@ff1+1)^0,c
  2566   00105A  0EB0               	movlw	176
  2567   00105C  6E0B               	movwf	(___flge@ff1+2)^0,c
  2568   00105E  0E40               	movlw	64
  2569   001060  6E0C               	movwf	(___flge@ff1+3)^0,c
  2570   001062  EE20 F018          	lfsr	2,24
  2571   001066  5027               	movf	motor_response@temp^0,w,c
  2572   001068  26D9               	addwf	fsr2l,f,c
  2573   00106A  5028               	movf	(motor_response@temp+1)^0,w,c
  2574   00106C  22DA               	addwfc	fsr2h,f,c
  2575   00106E  CFDE F00D          	movff	postinc2,___flge@ff2
  2576   001072  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2577   001076  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2578   00107A  CFDE F010          	movff	postinc2,___flge@ff2+3
  2579   00107E  ECA5  F014         	call	___flge	;wreg free
  2580   001082  B0D8               	btfsc	status,0,c
  2581   001084  EF46  F008         	goto	u1871
  2582   001088  EF48  F008         	goto	u1870
  2583   00108C                     u1871:
  2584   00108C  EF05  F009         	goto	l2900
  2585   001090                     u1870:
  2586   001090  EE20 F018          	lfsr	2,24
  2587   001094  5027               	movf	motor_response@temp^0,w,c
  2588   001096  26D9               	addwf	fsr2l,f,c
  2589   001098  5028               	movf	(motor_response@temp+1)^0,w,c
  2590   00109A  22DA               	addwfc	fsr2h,f,c
  2591   00109C  CFDE F009          	movff	postinc2,___flge@ff1
  2592   0010A0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2593   0010A4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2594   0010A8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2595   0010AC  0E00               	movlw	0
  2596   0010AE  6E0D               	movwf	___flge@ff2^0,c
  2597   0010B0  0E00               	movlw	0
  2598   0010B2  6E0E               	movwf	(___flge@ff2+1)^0,c
  2599   0010B4  0EC0               	movlw	192
  2600   0010B6  6E0F               	movwf	(___flge@ff2+2)^0,c
  2601   0010B8  0E40               	movlw	64
  2602   0010BA  6E10               	movwf	(___flge@ff2+3)^0,c
  2603   0010BC  ECA5  F014         	call	___flge	;wreg free
  2604   0010C0  B0D8               	btfsc	status,0,c
  2605   0010C2  EF65  F008         	goto	u1881
  2606   0010C6  EF67  F008         	goto	u1880
  2607   0010CA                     u1881:
  2608   0010CA  EF05  F009         	goto	l2900
  2609   0010CE                     u1880:
  2610   0010CE  0E33               	movlw	51
  2611   0010D0  6E09               	movwf	___flge@ff1^0,c
  2612   0010D2  0E33               	movlw	51
  2613   0010D4  6E0A               	movwf	(___flge@ff1+1)^0,c
  2614   0010D6  0EB3               	movlw	179
  2615   0010D8  6E0B               	movwf	(___flge@ff1+2)^0,c
  2616   0010DA  0E3F               	movlw	63
  2617   0010DC  6E0C               	movwf	(___flge@ff1+3)^0,c
  2618   0010DE  EE20 F010          	lfsr	2,16
  2619   0010E2  5027               	movf	motor_response@temp^0,w,c
  2620   0010E4  26D9               	addwf	fsr2l,f,c
  2621   0010E6  5028               	movf	(motor_response@temp+1)^0,w,c
  2622   0010E8  22DA               	addwfc	fsr2h,f,c
  2623   0010EA  CFDE F00D          	movff	postinc2,___flge@ff2
  2624   0010EE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2625   0010F2  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2626   0010F6  CFDE F010          	movff	postinc2,___flge@ff2+3
  2627   0010FA  ECA5  F014         	call	___flge	;wreg free
  2628   0010FE  B0D8               	btfsc	status,0,c
  2629   001100  EF84  F008         	goto	u1891
  2630   001104  EF86  F008         	goto	u1890
  2631   001108                     u1891:
  2632   001108  EF05  F009         	goto	l2900
  2633   00110C                     u1890:
  2634   00110C  EE20 F010          	lfsr	2,16
  2635   001110  5027               	movf	motor_response@temp^0,w,c
  2636   001112  26D9               	addwf	fsr2l,f,c
  2637   001114  5028               	movf	(motor_response@temp+1)^0,w,c
  2638   001116  22DA               	addwfc	fsr2h,f,c
  2639   001118  CFDE F009          	movff	postinc2,___flge@ff1
  2640   00111C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2641   001120  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2642   001124  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2643   001128  0E9A               	movlw	154
  2644   00112A  6E0D               	movwf	___flge@ff2^0,c
  2645   00112C  0E99               	movlw	153
  2646   00112E  6E0E               	movwf	(___flge@ff2+1)^0,c
  2647   001130  0ED9               	movlw	217
  2648   001132  6E0F               	movwf	(___flge@ff2+2)^0,c
  2649   001134  0E3F               	movlw	63
  2650   001136  6E10               	movwf	(___flge@ff2+3)^0,c
  2651   001138  ECA5  F014         	call	___flge	;wreg free
  2652   00113C  B0D8               	btfsc	status,0,c
  2653   00113E  EFA3  F008         	goto	u1901
  2654   001142  EFA5  F008         	goto	u1900
  2655   001146                     u1901:
  2656   001146  EF05  F009         	goto	l2900
  2657   00114A                     u1900:
  2658   00114A  0E33               	movlw	51
  2659   00114C  6E09               	movwf	___flge@ff1^0,c
  2660   00114E  0E33               	movlw	51
  2661   001150  6E0A               	movwf	(___flge@ff1+1)^0,c
  2662   001152  0E83               	movlw	131
  2663   001154  6E0B               	movwf	(___flge@ff1+2)^0,c
  2664   001156  0E40               	movlw	64
  2665   001158  6E0C               	movwf	(___flge@ff1+3)^0,c
  2666   00115A  EE20 F014          	lfsr	2,20
  2667   00115E  5027               	movf	motor_response@temp^0,w,c
  2668   001160  26D9               	addwf	fsr2l,f,c
  2669   001162  5028               	movf	(motor_response@temp+1)^0,w,c
  2670   001164  22DA               	addwfc	fsr2h,f,c
  2671   001166  CFDE F00D          	movff	postinc2,___flge@ff2
  2672   00116A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2673   00116E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2674   001172  CFDE F010          	movff	postinc2,___flge@ff2+3
  2675   001176  ECA5  F014         	call	___flge	;wreg free
  2676   00117A  B0D8               	btfsc	status,0,c
  2677   00117C  EFC2  F008         	goto	u1911
  2678   001180  EFC4  F008         	goto	u1910
  2679   001184                     u1911:
  2680   001184  EF05  F009         	goto	l2900
  2681   001188                     u1910:
  2682   001188  EE20 F014          	lfsr	2,20
  2683   00118C  5027               	movf	motor_response@temp^0,w,c
  2684   00118E  26D9               	addwf	fsr2l,f,c
  2685   001190  5028               	movf	(motor_response@temp+1)^0,w,c
  2686   001192  22DA               	addwfc	fsr2h,f,c
  2687   001194  CFDE F009          	movff	postinc2,___flge@ff1
  2688   001198  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2689   00119C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2690   0011A0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2691   0011A4  0E00               	movlw	0
  2692   0011A6  6E0D               	movwf	___flge@ff2^0,c
  2693   0011A8  0E00               	movlw	0
  2694   0011AA  6E0E               	movwf	(___flge@ff2+1)^0,c
  2695   0011AC  0E90               	movlw	144
  2696   0011AE  6E0F               	movwf	(___flge@ff2+2)^0,c
  2697   0011B0  0E40               	movlw	64
  2698   0011B2  6E10               	movwf	(___flge@ff2+3)^0,c
  2699   0011B4  ECA5  F014         	call	___flge	;wreg free
  2700   0011B8  B0D8               	btfsc	status,0,c
  2701   0011BA  EFE1  F008         	goto	u1921
  2702   0011BE  EFE3  F008         	goto	u1920
  2703   0011C2                     u1921:
  2704   0011C2  EF05  F009         	goto	l2900
  2705   0011C6                     u1920:
  2706   0011C6                     
  2707                           ;color.c: 164:         turnPrep(mL, mR);
  2708   0011C6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  2709   0011CA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  2710   0011CE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  2711   0011D2  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  2712   0011D6  EC46  F018         	call	_turnPrep	;wreg free
  2713                           
  2714                           ;color.c: 165:         turnRight(mL, mR);
  2715   0011DA  C029  F01C         	movff	motor_response@mL,turnRight@mL
  2716   0011DE  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2717   0011E2  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  2718   0011E6  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2719   0011EA  EC6A  F017         	call	_turnRight	;wreg free
  2720   0011EE                     
  2721                           ;color.c: 166:         _delay((unsigned long)((430)*(64000000/4000.0)));
  2722   0011EE  0E23               	movlw	35
  2723   0011F0  6E2E               	movwf	(??_motor_response+1)^0,c
  2724   0011F2  0EE7               	movlw	231
  2725   0011F4  6E2D               	movwf	??_motor_response^0,c
  2726   0011F6  0EF8               	movlw	248
  2727   0011F8                     u2687:
  2728   0011F8  2EE8               	decfsz	wreg,f,c
  2729   0011FA  D7FE               	bra	u2687
  2730   0011FC  2E2D               	decfsz	??_motor_response^0,f,c
  2731   0011FE  D7FC               	bra	u2687
  2732   001200  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2733   001202  D7FA               	bra	u2687
  2734   001204                     
  2735                           ;color.c: 167:         return 6;
  2736   001204  0E06               	movlw	6
  2737   001206  EF13  F00D         	goto	l138
  2738   00120A                     l2900:
  2739                           
  2740                           ;color.c: 169:          if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2
      +                          .7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  2741   00120A  0E33               	movlw	51
  2742   00120C  6E09               	movwf	___flge@ff1^0,c
  2743   00120E  0E33               	movlw	51
  2744   001210  6E0A               	movwf	(___flge@ff1+1)^0,c
  2745   001212  0E53               	movlw	83
  2746   001214  6E0B               	movwf	(___flge@ff1+2)^0,c
  2747   001216  0E40               	movlw	64
  2748   001218  6E0C               	movwf	(___flge@ff1+3)^0,c
  2749   00121A  EE20 F018          	lfsr	2,24
  2750   00121E  5027               	movf	motor_response@temp^0,w,c
  2751   001220  26D9               	addwf	fsr2l,f,c
  2752   001222  5028               	movf	(motor_response@temp+1)^0,w,c
  2753   001224  22DA               	addwfc	fsr2h,f,c
  2754   001226  CFDE F00D          	movff	postinc2,___flge@ff2
  2755   00122A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2756   00122E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2757   001232  CFDE F010          	movff	postinc2,___flge@ff2+3
  2758   001236  ECA5  F014         	call	___flge	;wreg free
  2759   00123A  B0D8               	btfsc	status,0,c
  2760   00123C  EF22  F009         	goto	u1931
  2761   001240  EF24  F009         	goto	u1930
  2762   001244                     u1931:
  2763   001244  EF06  F00A         	goto	l2928
  2764   001248                     u1930:
  2765   001248  EE20 F018          	lfsr	2,24
  2766   00124C  5027               	movf	motor_response@temp^0,w,c
  2767   00124E  26D9               	addwf	fsr2l,f,c
  2768   001250  5028               	movf	(motor_response@temp+1)^0,w,c
  2769   001252  22DA               	addwfc	fsr2h,f,c
  2770   001254  CFDE F009          	movff	postinc2,___flge@ff1
  2771   001258  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2772   00125C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2773   001260  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2774   001264  0E9A               	movlw	154
  2775   001266  6E0D               	movwf	___flge@ff2^0,c
  2776   001268  0E99               	movlw	153
  2777   00126A  6E0E               	movwf	(___flge@ff2+1)^0,c
  2778   00126C  0E79               	movlw	121
  2779   00126E  6E0F               	movwf	(___flge@ff2+2)^0,c
  2780   001270  0E40               	movlw	64
  2781   001272  6E10               	movwf	(___flge@ff2+3)^0,c
  2782   001274  ECA5  F014         	call	___flge	;wreg free
  2783   001278  B0D8               	btfsc	status,0,c
  2784   00127A  EF41  F009         	goto	u1941
  2785   00127E  EF43  F009         	goto	u1940
  2786   001282                     u1941:
  2787   001282  EF06  F00A         	goto	l2928
  2788   001286                     u1940:
  2789   001286  0ECD               	movlw	205
  2790   001288  6E09               	movwf	___flge@ff1^0,c
  2791   00128A  0ECC               	movlw	204
  2792   00128C  6E0A               	movwf	(___flge@ff1+1)^0,c
  2793   00128E  0E2C               	movlw	44
  2794   001290  6E0B               	movwf	(___flge@ff1+2)^0,c
  2795   001292  0E40               	movlw	64
  2796   001294  6E0C               	movwf	(___flge@ff1+3)^0,c
  2797   001296  EE20 F010          	lfsr	2,16
  2798   00129A  5027               	movf	motor_response@temp^0,w,c
  2799   00129C  26D9               	addwf	fsr2l,f,c
  2800   00129E  5028               	movf	(motor_response@temp+1)^0,w,c
  2801   0012A0  22DA               	addwfc	fsr2h,f,c
  2802   0012A2  CFDE F00D          	movff	postinc2,___flge@ff2
  2803   0012A6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2804   0012AA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2805   0012AE  CFDE F010          	movff	postinc2,___flge@ff2+3
  2806   0012B2  ECA5  F014         	call	___flge	;wreg free
  2807   0012B6  B0D8               	btfsc	status,0,c
  2808   0012B8  EF60  F009         	goto	u1951
  2809   0012BC  EF62  F009         	goto	u1950
  2810   0012C0                     u1951:
  2811   0012C0  EF06  F00A         	goto	l2928
  2812   0012C4                     u1950:
  2813   0012C4  EE20 F010          	lfsr	2,16
  2814   0012C8  5027               	movf	motor_response@temp^0,w,c
  2815   0012CA  26D9               	addwf	fsr2l,f,c
  2816   0012CC  5028               	movf	(motor_response@temp+1)^0,w,c
  2817   0012CE  22DA               	addwfc	fsr2h,f,c
  2818   0012D0  CFDE F009          	movff	postinc2,___flge@ff1
  2819   0012D4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2820   0012D8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2821   0012DC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2822   0012E0  0ECD               	movlw	205
  2823   0012E2  6E0D               	movwf	___flge@ff2^0,c
  2824   0012E4  0ECC               	movlw	204
  2825   0012E6  6E0E               	movwf	(___flge@ff2+1)^0,c
  2826   0012E8  0E4C               	movlw	76
  2827   0012EA  6E0F               	movwf	(___flge@ff2+2)^0,c
  2828   0012EC  0E40               	movlw	64
  2829   0012EE  6E10               	movwf	(___flge@ff2+3)^0,c
  2830   0012F0  ECA5  F014         	call	___flge	;wreg free
  2831   0012F4  B0D8               	btfsc	status,0,c
  2832   0012F6  EF7F  F009         	goto	u1961
  2833   0012FA  EF81  F009         	goto	u1960
  2834   0012FE                     u1961:
  2835   0012FE  EF06  F00A         	goto	l2928
  2836   001302                     u1960:
  2837   001302  0E00               	movlw	0
  2838   001304  6E09               	movwf	___flge@ff1^0,c
  2839   001306  0E00               	movlw	0
  2840   001308  6E0A               	movwf	(___flge@ff1+1)^0,c
  2841   00130A  0E20               	movlw	32
  2842   00130C  6E0B               	movwf	(___flge@ff1+2)^0,c
  2843   00130E  0E40               	movlw	64
  2844   001310  6E0C               	movwf	(___flge@ff1+3)^0,c
  2845   001312  EE20 F014          	lfsr	2,20
  2846   001316  5027               	movf	motor_response@temp^0,w,c
  2847   001318  26D9               	addwf	fsr2l,f,c
  2848   00131A  5028               	movf	(motor_response@temp+1)^0,w,c
  2849   00131C  22DA               	addwfc	fsr2h,f,c
  2850   00131E  CFDE F00D          	movff	postinc2,___flge@ff2
  2851   001322  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2852   001326  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2853   00132A  CFDE F010          	movff	postinc2,___flge@ff2+3
  2854   00132E  ECA5  F014         	call	___flge	;wreg free
  2855   001332  B0D8               	btfsc	status,0,c
  2856   001334  EF9E  F009         	goto	u1971
  2857   001338  EFA0  F009         	goto	u1970
  2858   00133C                     u1971:
  2859   00133C  EF06  F00A         	goto	l2928
  2860   001340                     u1970:
  2861   001340  EE20 F014          	lfsr	2,20
  2862   001344  5027               	movf	motor_response@temp^0,w,c
  2863   001346  26D9               	addwf	fsr2l,f,c
  2864   001348  5028               	movf	(motor_response@temp+1)^0,w,c
  2865   00134A  22DA               	addwfc	fsr2h,f,c
  2866   00134C  CFDE F009          	movff	postinc2,___flge@ff1
  2867   001350  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2868   001354  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2869   001358  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2870   00135C  0E9A               	movlw	154
  2871   00135E  6E0D               	movwf	___flge@ff2^0,c
  2872   001360  0E99               	movlw	153
  2873   001362  6E0E               	movwf	(___flge@ff2+1)^0,c
  2874   001364  0E39               	movlw	57
  2875   001366  6E0F               	movwf	(___flge@ff2+2)^0,c
  2876   001368  0E40               	movlw	64
  2877   00136A  6E10               	movwf	(___flge@ff2+3)^0,c
  2878   00136C  ECA5  F014         	call	___flge	;wreg free
  2879   001370  B0D8               	btfsc	status,0,c
  2880   001372  EFBD  F009         	goto	u1981
  2881   001376  EFBF  F009         	goto	u1980
  2882   00137A                     u1981:
  2883   00137A  EF06  F00A         	goto	l2928
  2884   00137E                     u1980:
  2885   00137E                     
  2886                           ;color.c: 170:         LATFbits.LATF0 = !LATFbits.LATF0;
  2887   00137E  A07E               	btfss	126,0,c	;volatile
  2888   001380  EFC4  F009         	goto	u1991
  2889   001384  EFC8  F009         	goto	u1990
  2890   001388                     u1991:
  2891   001388  6A2D               	clrf	??_motor_response^0,c
  2892   00138A  2A2D               	incf	??_motor_response^0,f,c
  2893   00138C  EFC9  F009         	goto	u2008
  2894   001390                     u1990:
  2895   001390  6A2D               	clrf	??_motor_response^0,c
  2896   001392                     u2008:
  2897   001392  507E               	movf	126,w,c	;volatile
  2898   001394  182D               	xorwf	??_motor_response^0,w,c
  2899   001396  0BFE               	andlw	-2
  2900   001398  182D               	xorwf	??_motor_response^0,w,c
  2901   00139A  6E7E               	movwf	126,c	;volatile
  2902   00139C                     
  2903                           ;color.c: 171:         turnPrep(mL, mR);
  2904   00139C  C029  F021         	movff	motor_response@mL,turnPrep@mL
  2905   0013A0  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  2906   0013A4  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  2907   0013A8  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  2908   0013AC  EC46  F018         	call	_turnPrep	;wreg free
  2909   0013B0                     
  2910                           ;color.c: 172:         turnLeft(mL, mR);
  2911   0013B0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  2912   0013B4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2913   0013B8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  2914   0013BC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2915   0013C0  ECA3  F017         	call	_turnLeft	;wreg free
  2916   0013C4                     
  2917                           ;color.c: 173:         _delay((unsigned long)((430)*(64000000/4000.0)));
  2918   0013C4  0E23               	movlw	35
  2919   0013C6  6E2E               	movwf	(??_motor_response+1)^0,c
  2920   0013C8  0EE7               	movlw	231
  2921   0013CA  6E2D               	movwf	??_motor_response^0,c
  2922   0013CC  0EF8               	movlw	248
  2923   0013CE                     u2697:
  2924   0013CE  2EE8               	decfsz	wreg,f,c
  2925   0013D0  D7FE               	bra	u2697
  2926   0013D2  2E2D               	decfsz	??_motor_response^0,f,c
  2927   0013D4  D7FC               	bra	u2697
  2928   0013D6  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2929   0013D8  D7FA               	bra	u2697
  2930   0013DA                     
  2931                           ;color.c: 174:         norm_stop(mL, mR);
  2932   0013DA  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  2933   0013DE  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2934   0013E2  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  2935   0013E6  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2936   0013EA  EC6D  F019         	call	_norm_stop	;wreg free
  2937   0013EE                     
  2938                           ;color.c: 175:         _delay((unsigned long)((1000)*(64000000/4000.0)));
  2939   0013EE  0E52               	movlw	82
  2940   0013F0  6E2E               	movwf	(??_motor_response+1)^0,c
  2941   0013F2  0E2B               	movlw	43
  2942   0013F4  6E2D               	movwf	??_motor_response^0,c
  2943   0013F6  0E00               	movlw	0
  2944   0013F8                     u2707:
  2945   0013F8  2EE8               	decfsz	wreg,f,c
  2946   0013FA  D7FE               	bra	u2707
  2947   0013FC  2E2D               	decfsz	??_motor_response^0,f,c
  2948   0013FE  D7FC               	bra	u2707
  2949   001400  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  2950   001402  D7FA               	bra	u2707
  2951   001404  D000               	nop2	
  2952   001406                     
  2953                           ;color.c: 176:         return 7;
  2954   001406  0E07               	movlw	7
  2955   001408  EF13  F00D         	goto	l138
  2956   00140C                     l2928:
  2957                           
  2958                           ;color.c: 182:     if (temp->norm_C <6 && temp->norm_C >1.5){
  2959   00140C  EE20 F01C          	lfsr	2,28
  2960   001410  5027               	movf	motor_response@temp^0,w,c
  2961   001412  26D9               	addwf	fsr2l,f,c
  2962   001414  5028               	movf	(motor_response@temp+1)^0,w,c
  2963   001416  22DA               	addwfc	fsr2h,f,c
  2964   001418  CFDE F009          	movff	postinc2,___flge@ff1
  2965   00141C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2966   001420  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2967   001424  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2968   001428  0E00               	movlw	0
  2969   00142A  6E0D               	movwf	___flge@ff2^0,c
  2970   00142C  0E00               	movlw	0
  2971   00142E  6E0E               	movwf	(___flge@ff2+1)^0,c
  2972   001430  0EC0               	movlw	192
  2973   001432  6E0F               	movwf	(___flge@ff2+2)^0,c
  2974   001434  0E40               	movlw	64
  2975   001436  6E10               	movwf	(___flge@ff2+3)^0,c
  2976   001438  ECA5  F014         	call	___flge	;wreg free
  2977   00143C  B0D8               	btfsc	status,0,c
  2978   00143E  EF23  F00A         	goto	u2011
  2979   001442  EF25  F00A         	goto	u2010
  2980   001446                     u2011:
  2981   001446  EFC3  F00B         	goto	l2974
  2982   00144A                     u2010:
  2983   00144A  0E00               	movlw	0
  2984   00144C  6E09               	movwf	___flge@ff1^0,c
  2985   00144E  0E00               	movlw	0
  2986   001450  6E0A               	movwf	(___flge@ff1+1)^0,c
  2987   001452  0EC0               	movlw	192
  2988   001454  6E0B               	movwf	(___flge@ff1+2)^0,c
  2989   001456  0E3F               	movlw	63
  2990   001458  6E0C               	movwf	(___flge@ff1+3)^0,c
  2991   00145A  EE20 F01C          	lfsr	2,28
  2992   00145E  5027               	movf	motor_response@temp^0,w,c
  2993   001460  26D9               	addwf	fsr2l,f,c
  2994   001462  5028               	movf	(motor_response@temp+1)^0,w,c
  2995   001464  22DA               	addwfc	fsr2h,f,c
  2996   001466  CFDE F00D          	movff	postinc2,___flge@ff2
  2997   00146A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2998   00146E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2999   001472  CFDE F010          	movff	postinc2,___flge@ff2+3
  3000   001476  ECA5  F014         	call	___flge	;wreg free
  3001   00147A  B0D8               	btfsc	status,0,c
  3002   00147C  EF42  F00A         	goto	u2021
  3003   001480  EF44  F00A         	goto	u2020
  3004   001484                     u2021:
  3005   001484  EFC3  F00B         	goto	l2974
  3006   001488                     u2020:
  3007   001488                     
  3008                           ;color.c: 183:       if (temp->norm_G > 8) {
  3009   001488  0E00               	movlw	0
  3010   00148A  6E09               	movwf	___flge@ff1^0,c
  3011   00148C  0E00               	movlw	0
  3012   00148E  6E0A               	movwf	(___flge@ff1+1)^0,c
  3013   001490  0E00               	movlw	0
  3014   001492  6E0B               	movwf	(___flge@ff1+2)^0,c
  3015   001494  0E41               	movlw	65
  3016   001496  6E0C               	movwf	(___flge@ff1+3)^0,c
  3017   001498  EE20 F014          	lfsr	2,20
  3018   00149C  5027               	movf	motor_response@temp^0,w,c
  3019   00149E  26D9               	addwf	fsr2l,f,c
  3020   0014A0  5028               	movf	(motor_response@temp+1)^0,w,c
  3021   0014A2  22DA               	addwfc	fsr2h,f,c
  3022   0014A4  CFDE F00D          	movff	postinc2,___flge@ff2
  3023   0014A8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3024   0014AC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3025   0014B0  CFDE F010          	movff	postinc2,___flge@ff2+3
  3026   0014B4  ECA5  F014         	call	___flge	;wreg free
  3027   0014B8  B0D8               	btfsc	status,0,c
  3028   0014BA  EF61  F00A         	goto	u2031
  3029   0014BE  EF63  F00A         	goto	u2030
  3030   0014C2                     u2031:
  3031   0014C2  EF86  F00A         	goto	l2942
  3032   0014C6                     u2030:
  3033   0014C6                     
  3034                           ;color.c: 184:         turnPrep(mL, mR);
  3035   0014C6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  3036   0014CA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  3037   0014CE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  3038   0014D2  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  3039   0014D6  EC46  F018         	call	_turnPrep	;wreg free
  3040                           
  3041                           ;color.c: 185:         turnRight(mL, mR);
  3042   0014DA  C029  F01C         	movff	motor_response@mL,turnRight@mL
  3043   0014DE  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  3044   0014E2  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  3045   0014E6  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  3046   0014EA  EC6A  F017         	call	_turnRight	;wreg free
  3047   0014EE                     
  3048                           ;color.c: 186:         _delay((unsigned long)((280)*(64000000/4000.0)));
  3049   0014EE  0E17               	movlw	23
  3050   0014F0  6E2E               	movwf	(??_motor_response+1)^0,c
  3051   0014F2  0EBB               	movlw	187
  3052   0014F4  6E2D               	movwf	??_motor_response^0,c
  3053   0014F6  0E1D               	movlw	29
  3054   0014F8                     u2717:
  3055   0014F8  2EE8               	decfsz	wreg,f,c
  3056   0014FA  D7FE               	bra	u2717
  3057   0014FC  2E2D               	decfsz	??_motor_response^0,f,c
  3058   0014FE  D7FC               	bra	u2717
  3059   001500  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3060   001502  D7FA               	bra	u2717
  3061   001504  F000               	nop	
  3062   001506                     
  3063                           ;color.c: 187:         return 1;
  3064   001506  0E01               	movlw	1
  3065   001508  EF13  F00D         	goto	l138
  3066   00150C                     l2942:
  3067                           
  3068                           ;color.c: 189:     if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  3069   00150C  0E00               	movlw	0
  3070   00150E  6E09               	movwf	___flge@ff1^0,c
  3071   001510  0E00               	movlw	0
  3072   001512  6E0A               	movwf	(___flge@ff1+1)^0,c
  3073   001514  0E90               	movlw	144
  3074   001516  6E0B               	movwf	(___flge@ff1+2)^0,c
  3075   001518  0E40               	movlw	64
  3076   00151A  6E0C               	movwf	(___flge@ff1+3)^0,c
  3077   00151C  EE20 F018          	lfsr	2,24
  3078   001520  5027               	movf	motor_response@temp^0,w,c
  3079   001522  26D9               	addwf	fsr2l,f,c
  3080   001524  5028               	movf	(motor_response@temp+1)^0,w,c
  3081   001526  22DA               	addwfc	fsr2h,f,c
  3082   001528  CFDE F00D          	movff	postinc2,___flge@ff2
  3083   00152C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3084   001530  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3085   001534  CFDE F010          	movff	postinc2,___flge@ff2+3
  3086   001538  ECA5  F014         	call	___flge	;wreg free
  3087   00153C  B0D8               	btfsc	status,0,c
  3088   00153E  EFA3  F00A         	goto	u2041
  3089   001542  EFA5  F00A         	goto	u2040
  3090   001546                     u2041:
  3091   001546  EFE7  F00A         	goto	l2954
  3092   00154A                     u2040:
  3093   00154A  EE20 F018          	lfsr	2,24
  3094   00154E  5027               	movf	motor_response@temp^0,w,c
  3095   001550  26D9               	addwf	fsr2l,f,c
  3096   001552  5028               	movf	(motor_response@temp+1)^0,w,c
  3097   001554  22DA               	addwfc	fsr2h,f,c
  3098   001556  CFDE F009          	movff	postinc2,___flge@ff1
  3099   00155A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3100   00155E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3101   001562  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3102   001566  0E00               	movlw	0
  3103   001568  6E0D               	movwf	___flge@ff2^0,c
  3104   00156A  0E00               	movlw	0
  3105   00156C  6E0E               	movwf	(___flge@ff2+1)^0,c
  3106   00156E  0EB0               	movlw	176
  3107   001570  6E0F               	movwf	(___flge@ff2+2)^0,c
  3108   001572  0E40               	movlw	64
  3109   001574  6E10               	movwf	(___flge@ff2+3)^0,c
  3110   001576  ECA5  F014         	call	___flge	;wreg free
  3111   00157A  B0D8               	btfsc	status,0,c
  3112   00157C  EFC2  F00A         	goto	u2051
  3113   001580  EFC4  F00A         	goto	u2050
  3114   001584                     u2051:
  3115   001584  EFE7  F00A         	goto	l2954
  3116   001588                     u2050:
  3117   001588                     
  3118                           ;color.c: 190:         turnPrep(mL, mR);
  3119   001588  C029  F021         	movff	motor_response@mL,turnPrep@mL
  3120   00158C  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  3121   001590  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  3122   001594  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  3123   001598  EC46  F018         	call	_turnPrep	;wreg free
  3124                           
  3125                           ;color.c: 191:         turnLeft(mL, mR);
  3126   00159C  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  3127   0015A0  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3128   0015A4  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  3129   0015A8  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3130   0015AC  ECA3  F017         	call	_turnLeft	;wreg free
  3131   0015B0                     
  3132                           ;color.c: 192:         _delay((unsigned long)((270)*(64000000/4000.0)));
  3133   0015B0  0E16               	movlw	22
  3134   0015B2  6E2E               	movwf	(??_motor_response+1)^0,c
  3135   0015B4  0EEB               	movlw	235
  3136   0015B6  6E2D               	movwf	??_motor_response^0,c
  3137   0015B8  0E53               	movlw	83
  3138   0015BA                     u2727:
  3139   0015BA  2EE8               	decfsz	wreg,f,c
  3140   0015BC  D7FE               	bra	u2727
  3141   0015BE  2E2D               	decfsz	??_motor_response^0,f,c
  3142   0015C0  D7FC               	bra	u2727
  3143   0015C2  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3144   0015C4  D7FA               	bra	u2727
  3145   0015C6  F000               	nop	
  3146   0015C8                     
  3147                           ;color.c: 193:         return 2;
  3148   0015C8  0E02               	movlw	2
  3149   0015CA  EF13  F00D         	goto	l138
  3150   0015CE                     l2954:
  3151                           
  3152                           ;color.c: 195:     if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.7 &&
      +                           temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  3153   0015CE  0ECD               	movlw	205
  3154   0015D0  6E09               	movwf	___flge@ff1^0,c
  3155   0015D2  0ECC               	movlw	204
  3156   0015D4  6E0A               	movwf	(___flge@ff1+1)^0,c
  3157   0015D6  0E2C               	movlw	44
  3158   0015D8  6E0B               	movwf	(___flge@ff1+2)^0,c
  3159   0015DA  0E40               	movlw	64
  3160   0015DC  6E0C               	movwf	(___flge@ff1+3)^0,c
  3161   0015DE  EE20 F018          	lfsr	2,24
  3162   0015E2  5027               	movf	motor_response@temp^0,w,c
  3163   0015E4  26D9               	addwf	fsr2l,f,c
  3164   0015E6  5028               	movf	(motor_response@temp+1)^0,w,c
  3165   0015E8  22DA               	addwfc	fsr2h,f,c
  3166   0015EA  CFDE F00D          	movff	postinc2,___flge@ff2
  3167   0015EE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3168   0015F2  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3169   0015F6  CFDE F010          	movff	postinc2,___flge@ff2+3
  3170   0015FA  ECA5  F014         	call	___flge	;wreg free
  3171   0015FE  B0D8               	btfsc	status,0,c
  3172   001600  EF04  F00B         	goto	u2061
  3173   001604  EF06  F00B         	goto	u2060
  3174   001608                     u2061:
  3175   001608  EFC3  F00B         	goto	l2974
  3176   00160C                     u2060:
  3177   00160C  EE20 F018          	lfsr	2,24
  3178   001610  5027               	movf	motor_response@temp^0,w,c
  3179   001612  26D9               	addwf	fsr2l,f,c
  3180   001614  5028               	movf	(motor_response@temp+1)^0,w,c
  3181   001616  22DA               	addwfc	fsr2h,f,c
  3182   001618  CFDE F009          	movff	postinc2,___flge@ff1
  3183   00161C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3184   001620  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3185   001624  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3186   001628  0E33               	movlw	51
  3187   00162A  6E0D               	movwf	___flge@ff2^0,c
  3188   00162C  0E33               	movlw	51
  3189   00162E  6E0E               	movwf	(___flge@ff2+1)^0,c
  3190   001630  0E53               	movlw	83
  3191   001632  6E0F               	movwf	(___flge@ff2+2)^0,c
  3192   001634  0E40               	movlw	64
  3193   001636  6E10               	movwf	(___flge@ff2+3)^0,c
  3194   001638  ECA5  F014         	call	___flge	;wreg free
  3195   00163C  B0D8               	btfsc	status,0,c
  3196   00163E  EF23  F00B         	goto	u2071
  3197   001642  EF25  F00B         	goto	u2070
  3198   001646                     u2071:
  3199   001646  EFC3  F00B         	goto	l2974
  3200   00164A                     u2070:
  3201   00164A  0ECD               	movlw	205
  3202   00164C  6E09               	movwf	___flge@ff1^0,c
  3203   00164E  0ECC               	movlw	204
  3204   001650  6E0A               	movwf	(___flge@ff1+1)^0,c
  3205   001652  0E2C               	movlw	44
  3206   001654  6E0B               	movwf	(___flge@ff1+2)^0,c
  3207   001656  0E40               	movlw	64
  3208   001658  6E0C               	movwf	(___flge@ff1+3)^0,c
  3209   00165A  EE20 F010          	lfsr	2,16
  3210   00165E  5027               	movf	motor_response@temp^0,w,c
  3211   001660  26D9               	addwf	fsr2l,f,c
  3212   001662  5028               	movf	(motor_response@temp+1)^0,w,c
  3213   001664  22DA               	addwfc	fsr2h,f,c
  3214   001666  CFDE F00D          	movff	postinc2,___flge@ff2
  3215   00166A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3216   00166E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3217   001672  CFDE F010          	movff	postinc2,___flge@ff2+3
  3218   001676  ECA5  F014         	call	___flge	;wreg free
  3219   00167A  B0D8               	btfsc	status,0,c
  3220   00167C  EF42  F00B         	goto	u2081
  3221   001680  EF44  F00B         	goto	u2080
  3222   001684                     u2081:
  3223   001684  EFC3  F00B         	goto	l2974
  3224   001688                     u2080:
  3225   001688  EE20 F010          	lfsr	2,16
  3226   00168C  5027               	movf	motor_response@temp^0,w,c
  3227   00168E  26D9               	addwf	fsr2l,f,c
  3228   001690  5028               	movf	(motor_response@temp+1)^0,w,c
  3229   001692  22DA               	addwfc	fsr2h,f,c
  3230   001694  CFDE F009          	movff	postinc2,___flge@ff1
  3231   001698  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3232   00169C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3233   0016A0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3234   0016A4  0E33               	movlw	51
  3235   0016A6  6E0D               	movwf	___flge@ff2^0,c
  3236   0016A8  0E33               	movlw	51
  3237   0016AA  6E0E               	movwf	(___flge@ff2+1)^0,c
  3238   0016AC  0E53               	movlw	83
  3239   0016AE  6E0F               	movwf	(___flge@ff2+2)^0,c
  3240   0016B0  0E40               	movlw	64
  3241   0016B2  6E10               	movwf	(___flge@ff2+3)^0,c
  3242   0016B4  ECA5  F014         	call	___flge	;wreg free
  3243   0016B8  B0D8               	btfsc	status,0,c
  3244   0016BA  EF61  F00B         	goto	u2091
  3245   0016BE  EF63  F00B         	goto	u2090
  3246   0016C2                     u2091:
  3247   0016C2  EFC3  F00B         	goto	l2974
  3248   0016C6                     u2090:
  3249   0016C6  0ECD               	movlw	205
  3250   0016C8  6E09               	movwf	___flge@ff1^0,c
  3251   0016CA  0ECC               	movlw	204
  3252   0016CC  6E0A               	movwf	(___flge@ff1+1)^0,c
  3253   0016CE  0E2C               	movlw	44
  3254   0016D0  6E0B               	movwf	(___flge@ff1+2)^0,c
  3255   0016D2  0E40               	movlw	64
  3256   0016D4  6E0C               	movwf	(___flge@ff1+3)^0,c
  3257   0016D6  EE20 F014          	lfsr	2,20
  3258   0016DA  5027               	movf	motor_response@temp^0,w,c
  3259   0016DC  26D9               	addwf	fsr2l,f,c
  3260   0016DE  5028               	movf	(motor_response@temp+1)^0,w,c
  3261   0016E0  22DA               	addwfc	fsr2h,f,c
  3262   0016E2  CFDE F00D          	movff	postinc2,___flge@ff2
  3263   0016E6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3264   0016EA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3265   0016EE  CFDE F010          	movff	postinc2,___flge@ff2+3
  3266   0016F2  ECA5  F014         	call	___flge	;wreg free
  3267   0016F6  B0D8               	btfsc	status,0,c
  3268   0016F8  EF80  F00B         	goto	u2101
  3269   0016FC  EF82  F00B         	goto	u2100
  3270   001700                     u2101:
  3271   001700  EFC3  F00B         	goto	l2974
  3272   001704                     u2100:
  3273   001704  EE20 F014          	lfsr	2,20
  3274   001708  5027               	movf	motor_response@temp^0,w,c
  3275   00170A  26D9               	addwf	fsr2l,f,c
  3276   00170C  5028               	movf	(motor_response@temp+1)^0,w,c
  3277   00170E  22DA               	addwfc	fsr2h,f,c
  3278   001710  CFDE F009          	movff	postinc2,___flge@ff1
  3279   001714  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3280   001718  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3281   00171C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3282   001720  0E33               	movlw	51
  3283   001722  6E0D               	movwf	___flge@ff2^0,c
  3284   001724  0E33               	movlw	51
  3285   001726  6E0E               	movwf	(___flge@ff2+1)^0,c
  3286   001728  0E53               	movlw	83
  3287   00172A  6E0F               	movwf	(___flge@ff2+2)^0,c
  3288   00172C  0E40               	movlw	64
  3289   00172E  6E10               	movwf	(___flge@ff2+3)^0,c
  3290   001730  ECA5  F014         	call	___flge	;wreg free
  3291   001734  B0D8               	btfsc	status,0,c
  3292   001736  EF9F  F00B         	goto	u2111
  3293   00173A  EFA1  F00B         	goto	u2110
  3294   00173E                     u2111:
  3295   00173E  EFC3  F00B         	goto	l2974
  3296   001742                     u2110:
  3297   001742                     
  3298                           ;color.c: 196:         turnPrep(mL, mR);
  3299   001742  C029  F021         	movff	motor_response@mL,turnPrep@mL
  3300   001746  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  3301   00174A  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  3302   00174E  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  3303   001752  EC46  F018         	call	_turnPrep	;wreg free
  3304                           
  3305                           ;color.c: 197:         turnLeft(mL, mR);
  3306   001756  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  3307   00175A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3308   00175E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  3309   001762  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3310   001766  ECA3  F017         	call	_turnLeft	;wreg free
  3311   00176A                     
  3312                           ;color.c: 198:         _delay((unsigned long)((485)*(64000000/4000.0)));
  3313   00176A  0E28               	movlw	40
  3314   00176C  6E2E               	movwf	(??_motor_response+1)^0,c
  3315   00176E  0E5E               	movlw	94
  3316   001770  6E2D               	movwf	??_motor_response^0,c
  3317   001772  0ED0               	movlw	208
  3318   001774                     u2737:
  3319   001774  2EE8               	decfsz	wreg,f,c
  3320   001776  D7FE               	bra	u2737
  3321   001778  2E2D               	decfsz	??_motor_response^0,f,c
  3322   00177A  D7FC               	bra	u2737
  3323   00177C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3324   00177E  D7FA               	bra	u2737
  3325   001780                     
  3326                           ;color.c: 199:         return 3;
  3327   001780  0E03               	movlw	3
  3328   001782  EF13  F00D         	goto	l138
  3329   001786                     l2974:
  3330                           
  3331                           ;color.c: 202:     if (temp->norm_C >7){
  3332   001786  0E00               	movlw	0
  3333   001788  6E09               	movwf	___flge@ff1^0,c
  3334   00178A  0E00               	movlw	0
  3335   00178C  6E0A               	movwf	(___flge@ff1+1)^0,c
  3336   00178E  0EE0               	movlw	224
  3337   001790  6E0B               	movwf	(___flge@ff1+2)^0,c
  3338   001792  0E40               	movlw	64
  3339   001794  6E0C               	movwf	(___flge@ff1+3)^0,c
  3340   001796  EE20 F01C          	lfsr	2,28
  3341   00179A  5027               	movf	motor_response@temp^0,w,c
  3342   00179C  26D9               	addwf	fsr2l,f,c
  3343   00179E  5028               	movf	(motor_response@temp+1)^0,w,c
  3344   0017A0  22DA               	addwfc	fsr2h,f,c
  3345   0017A2  CFDE F00D          	movff	postinc2,___flge@ff2
  3346   0017A6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3347   0017AA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3348   0017AE  CFDE F010          	movff	postinc2,___flge@ff2+3
  3349   0017B2  ECA5  F014         	call	___flge	;wreg free
  3350   0017B6  B0D8               	btfsc	status,0,c
  3351   0017B8  EFE0  F00B         	goto	u2121
  3352   0017BC  EFE2  F00B         	goto	u2120
  3353   0017C0                     u2121:
  3354   0017C0  EF89  F00C         	goto	l3006
  3355   0017C4                     u2120:
  3356   0017C4                     
  3357                           ;color.c: 203:         if (temp->norm_B > 5) {
  3358   0017C4  0E00               	movlw	0
  3359   0017C6  6E09               	movwf	___flge@ff1^0,c
  3360   0017C8  0E00               	movlw	0
  3361   0017CA  6E0A               	movwf	(___flge@ff1+1)^0,c
  3362   0017CC  0EA0               	movlw	160
  3363   0017CE  6E0B               	movwf	(___flge@ff1+2)^0,c
  3364   0017D0  0E40               	movlw	64
  3365   0017D2  6E0C               	movwf	(___flge@ff1+3)^0,c
  3366   0017D4  EE20 F018          	lfsr	2,24
  3367   0017D8  5027               	movf	motor_response@temp^0,w,c
  3368   0017DA  26D9               	addwf	fsr2l,f,c
  3369   0017DC  5028               	movf	(motor_response@temp+1)^0,w,c
  3370   0017DE  22DA               	addwfc	fsr2h,f,c
  3371   0017E0  CFDE F00D          	movff	postinc2,___flge@ff2
  3372   0017E4  CFDE F00E          	movff	postinc2,___flge@ff2+1
  3373   0017E8  CFDE F00F          	movff	postinc2,___flge@ff2+2
  3374   0017EC  CFDE F010          	movff	postinc2,___flge@ff2+3
  3375   0017F0  ECA5  F014         	call	___flge	;wreg free
  3376   0017F4  B0D8               	btfsc	status,0,c
  3377   0017F6  EFFF  F00B         	goto	u2131
  3378   0017FA  EF01  F00C         	goto	u2130
  3379   0017FE                     u2131:
  3380   0017FE  EF45  F00C         	goto	l2992
  3381   001802                     u2130:
  3382   001802                     
  3383                           ;color.c: 204:         reverse(mL, mR);
  3384   001802  C029  F01C         	movff	motor_response@mL,reverse@mL
  3385   001806  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  3386   00180A  C02B  F01E         	movff	motor_response@mR,reverse@mR
  3387   00180E  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  3388   001812  EC27  F015         	call	_reverse	;wreg free
  3389   001816                     
  3390                           ;color.c: 205:         _delay((unsigned long)((3000)*(64000000/4000.0)));
  3391   001816  0EF4               	movlw	244
  3392   001818  6E2E               	movwf	(??_motor_response+1)^0,c
  3393   00181A  0E82               	movlw	130
  3394   00181C  6E2D               	movwf	??_motor_response^0,c
  3395   00181E  0E05               	movlw	5
  3396   001820                     u2747:
  3397   001820  2EE8               	decfsz	wreg,f,c
  3398   001822  D7FE               	bra	u2747
  3399   001824  2E2D               	decfsz	??_motor_response^0,f,c
  3400   001826  D7FC               	bra	u2747
  3401   001828  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3402   00182A  D7FA               	bra	u2747
  3403   00182C  F000               	nop	
  3404   00182E                     
  3405                           ;color.c: 206:         norm_stop(mL, mR);
  3406   00182E  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  3407   001832  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3408   001836  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  3409   00183A  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3410   00183E  EC6D  F019         	call	_norm_stop	;wreg free
  3411                           
  3412                           ;color.c: 207:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3413   001842  0E09               	movlw	9
  3414   001844  6E2E               	movwf	(??_motor_response+1)^0,c
  3415   001846  0E1E               	movlw	30
  3416   001848  6E2D               	movwf	??_motor_response^0,c
  3417   00184A  0EE4               	movlw	228
  3418   00184C                     u2757:
  3419   00184C  2EE8               	decfsz	wreg,f,c
  3420   00184E  D7FE               	bra	u2757
  3421   001850  2E2D               	decfsz	??_motor_response^0,f,c
  3422   001852  D7FC               	bra	u2757
  3423   001854  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3424   001856  D7FA               	bra	u2757
  3425   001858  D000               	nop2	
  3426   00185A                     
  3427                           ;color.c: 208:         turnRight(mL, mR);
  3428   00185A  C029  F01C         	movff	motor_response@mL,turnRight@mL
  3429   00185E  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  3430   001862  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  3431   001866  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  3432   00186A  EC6A  F017         	call	_turnRight	;wreg free
  3433   00186E                     
  3434                           ;color.c: 209:         _delay((unsigned long)((290)*(64000000/4000.0)));
  3435   00186E  0E18               	movlw	24
  3436   001870  6E2E               	movwf	(??_motor_response+1)^0,c
  3437   001872  0E8A               	movlw	138
  3438   001874  6E2D               	movwf	??_motor_response^0,c
  3439   001876  0EE8               	movlw	232
  3440   001878                     u2767:
  3441   001878  2EE8               	decfsz	wreg,f,c
  3442   00187A  D7FE               	bra	u2767
  3443   00187C  2E2D               	decfsz	??_motor_response^0,f,c
  3444   00187E  D7FC               	bra	u2767
  3445   001880  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3446   001882  D7FA               	bra	u2767
  3447   001884                     
  3448                           ;color.c: 210:         return 4;
  3449   001884  0E04               	movlw	4
  3450   001886  EF13  F00D         	goto	l138
  3451   00188A                     l2992:
  3452                           
  3453                           ;color.c: 222:         if (temp->norm_B < 5) {
  3454   00188A  EE20 F018          	lfsr	2,24
  3455   00188E  5027               	movf	motor_response@temp^0,w,c
  3456   001890  26D9               	addwf	fsr2l,f,c
  3457   001892  5028               	movf	(motor_response@temp+1)^0,w,c
  3458   001894  22DA               	addwfc	fsr2h,f,c
  3459   001896  CFDE F009          	movff	postinc2,___flge@ff1
  3460   00189A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  3461   00189E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  3462   0018A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  3463   0018A6  0E00               	movlw	0
  3464   0018A8  6E0D               	movwf	___flge@ff2^0,c
  3465   0018AA  0E00               	movlw	0
  3466   0018AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  3467   0018AE  0EA0               	movlw	160
  3468   0018B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  3469   0018B2  0E40               	movlw	64
  3470   0018B4  6E10               	movwf	(___flge@ff2+3)^0,c
  3471   0018B6  ECA5  F014         	call	___flge	;wreg free
  3472   0018BA  B0D8               	btfsc	status,0,c
  3473   0018BC  EF62  F00C         	goto	u2141
  3474   0018C0  EF64  F00C         	goto	u2140
  3475   0018C4                     u2141:
  3476   0018C4  EF13  F00D         	goto	l138
  3477   0018C8                     u2140:
  3478   0018C8                     
  3479                           ;color.c: 224:         motor_return = 1;
  3480   0018C8  0E01               	movlw	1
  3481   0018CA  0100               	movlb	0	; () banked
  3482   0018CC  6FB4               	movwf	_motor_return& (0+255),b
  3483   0018CE                     
  3484                           ; BSR set to: 0
  3485                           ;color.c: 225:         turnPrep(mL, mR);
  3486   0018CE  C029  F021         	movff	motor_response@mL,turnPrep@mL
  3487   0018D2  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  3488   0018D6  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  3489   0018DA  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  3490   0018DE  EC46  F018         	call	_turnPrep	;wreg free
  3491   0018E2                     
  3492                           ;color.c: 226:         turnLeft(mL, mR);
  3493   0018E2  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  3494   0018E6  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3495   0018EA  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  3496   0018EE  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3497   0018F2  ECA3  F017         	call	_turnLeft	;wreg free
  3498   0018F6                     
  3499                           ;color.c: 227:         _delay((unsigned long)((470)*(64000000/4000.0)));
  3500   0018F6  0E27               	movlw	39
  3501   0018F8  6E2E               	movwf	(??_motor_response+1)^0,c
  3502   0018FA  0E27               	movlw	39
  3503   0018FC  6E2D               	movwf	??_motor_response^0,c
  3504   0018FE  0E20               	movlw	32
  3505   001900                     u2777:
  3506   001900  2EE8               	decfsz	wreg,f,c
  3507   001902  D7FE               	bra	u2777
  3508   001904  2E2D               	decfsz	??_motor_response^0,f,c
  3509   001906  D7FC               	bra	u2777
  3510   001908  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3511   00190A  D7FA               	bra	u2777
  3512   00190C                     
  3513                           ;color.c: 228:         return 8;
  3514   00190C  0E08               	movlw	8
  3515   00190E  EF13  F00D         	goto	l138
  3516   001912                     l3006:
  3517                           
  3518                           ;color.c: 232:         if(lost_ctr<4){
  3519   001912  BE48               	btfsc	(_lost_ctr+1)^0,7,c
  3520   001914  EF97  F00C         	goto	u2150
  3521   001918  5048               	movf	(_lost_ctr+1)^0,w,c
  3522   00191A  E107               	bnz	u2151
  3523   00191C  0E04               	movlw	4
  3524   00191E  5C47               	subwf	_lost_ctr^0,w,c
  3525   001920  B0D8               	btfsc	status,0,c
  3526   001922  EF95  F00C         	goto	u2151
  3527   001926  EF97  F00C         	goto	u2150
  3528   00192A                     u2151:
  3529   00192A  EF9B  F00C         	goto	l3010
  3530   00192E                     u2150:
  3531   00192E                     
  3532                           ;color.c: 233:             lost_ctr++;
  3533   00192E  4A47               	infsnz	_lost_ctr^0,f,c
  3534   001930  2A48               	incf	(_lost_ctr+1)^0,f,c
  3535                           
  3536                           ;color.c: 234:         }
  3537   001932  EF03  F00D         	goto	l3030
  3538   001936                     l3010:
  3539                           
  3540                           ;color.c: 236:         norm_stop(mL, mR);
  3541   001936  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  3542   00193A  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3543   00193E  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  3544   001942  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3545   001946  EC6D  F019         	call	_norm_stop	;wreg free
  3546   00194A                     
  3547                           ;color.c: 237:         _delay((unsigned long)((80)*(64000000/4000.0)));
  3548   00194A  0E07               	movlw	7
  3549   00194C  6E2E               	movwf	(??_motor_response+1)^0,c
  3550   00194E  0E7F               	movlw	127
  3551   001950  6E2D               	movwf	??_motor_response^0,c
  3552   001952  0E50               	movlw	80
  3553   001954                     u2787:
  3554   001954  2EE8               	decfsz	wreg,f,c
  3555   001956  D7FE               	bra	u2787
  3556   001958  2E2D               	decfsz	??_motor_response^0,f,c
  3557   00195A  D7FC               	bra	u2787
  3558   00195C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3559   00195E  D7FA               	bra	u2787
  3560   001960                     
  3561                           ;color.c: 238:         for (int j = 0; j <= 90; j++) {
  3562   001960  0E00               	movlw	0
  3563   001962  6E30               	movwf	(motor_response@j+1)^0,c
  3564   001964  0E00               	movlw	0
  3565   001966  6E2F               	movwf	motor_response@j^0,c
  3566   001968  BE30               	btfsc	(motor_response@j+1)^0,7,c
  3567   00196A  EFC0  F00C         	goto	u2161
  3568   00196E  5030               	movf	(motor_response@j+1)^0,w,c
  3569   001970  E109               	bnz	u2160
  3570   001972  0E5B               	movlw	91
  3571   001974  5C2F               	subwf	motor_response@j^0,w,c
  3572   001976  A0D8               	btfss	status,0,c
  3573   001978  EFC0  F00C         	goto	u2161
  3574   00197C  EFC2  F00C         	goto	u2160
  3575   001980                     u2161:
  3576   001980  EFC4  F00C         	goto	l3020
  3577   001984                     u2160:
  3578   001984  EFFF  F00C         	goto	l3028
  3579   001988                     l3020:
  3580                           
  3581                           ;color.c: 239:             turnLeft(mL, mR);
  3582   001988  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  3583   00198C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  3584   001990  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  3585   001994  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  3586   001998  ECA3  F017         	call	_turnLeft	;wreg free
  3587   00199C                     
  3588                           ;color.c: 240:             _delay((unsigned long)((30)*(64000000/4000.0)));
  3589   00199C  0E03               	movlw	3
  3590   00199E  6E2E               	movwf	(??_motor_response+1)^0,c
  3591   0019A0  0E70               	movlw	112
  3592   0019A2  6E2D               	movwf	??_motor_response^0,c
  3593   0019A4  0E5C               	movlw	92
  3594   0019A6                     u2797:
  3595   0019A6  2EE8               	decfsz	wreg,f,c
  3596   0019A8  D7FE               	bra	u2797
  3597   0019AA  2E2D               	decfsz	??_motor_response^0,f,c
  3598   0019AC  D7FC               	bra	u2797
  3599   0019AE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3600   0019B0  D7FA               	bra	u2797
  3601   0019B2  D000               	nop2	
  3602   0019B4                     
  3603                           ;color.c: 241:             norm_stop(mL, mR);
  3604   0019B4  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  3605   0019B8  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  3606   0019BC  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  3607   0019C0  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  3608   0019C4  EC6D  F019         	call	_norm_stop	;wreg free
  3609                           
  3610                           ;color.c: 242:             _delay((unsigned long)((60)*(64000000/4000.0)));
  3611   0019C8  0E05               	movlw	5
  3612   0019CA  6E2E               	movwf	(??_motor_response+1)^0,c
  3613   0019CC  0EDF               	movlw	223
  3614   0019CE  6E2D               	movwf	??_motor_response^0,c
  3615   0019D0  0EBC               	movlw	188
  3616   0019D2                     u2807:
  3617   0019D2  2EE8               	decfsz	wreg,f,c
  3618   0019D4  D7FE               	bra	u2807
  3619   0019D6  2E2D               	decfsz	??_motor_response^0,f,c
  3620   0019D8  D7FC               	bra	u2807
  3621   0019DA  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  3622   0019DC  D7FA               	bra	u2807
  3623   0019DE                     
  3624                           ;color.c: 243:         }
  3625   0019DE  4A2F               	infsnz	motor_response@j^0,f,c
  3626   0019E0  2A30               	incf	(motor_response@j+1)^0,f,c
  3627   0019E2  BE30               	btfsc	(motor_response@j+1)^0,7,c
  3628   0019E4  EFFD  F00C         	goto	u2171
  3629   0019E8  5030               	movf	(motor_response@j+1)^0,w,c
  3630   0019EA  E109               	bnz	u2170
  3631   0019EC  0E5B               	movlw	91
  3632   0019EE  5C2F               	subwf	motor_response@j^0,w,c
  3633   0019F0  A0D8               	btfss	status,0,c
  3634   0019F2  EFFD  F00C         	goto	u2171
  3635   0019F6  EFFF  F00C         	goto	u2170
  3636   0019FA                     u2171:
  3637   0019FA  EFC4  F00C         	goto	l3020
  3638   0019FE                     u2170:
  3639   0019FE                     l3028:
  3640                           
  3641                           ;color.c: 244:         lost_ctr=0;
  3642   0019FE  0E00               	movlw	0
  3643   001A00  6E48               	movwf	(_lost_ctr+1)^0,c
  3644   001A02  0E00               	movlw	0
  3645   001A04  6E47               	movwf	_lost_ctr^0,c
  3646   001A06                     l3030:
  3647                           
  3648                           ;color.c: 246:         if (interrupt_flag == 0) {
  3649   001A06  504B               	movf	_interrupt_flag^0,w,c
  3650   001A08  104C               	iorwf	(_interrupt_flag+1)^0,w,c
  3651   001A0A  A4D8               	btfss	status,2,c
  3652   001A0C  EF0A  F00D         	goto	u2181
  3653   001A10  EF0C  F00D         	goto	u2180
  3654   001A14                     u2181:
  3655   001A14  EF0F  F00D         	goto	l3034
  3656   001A18                     u2180:
  3657   001A18                     
  3658                           ;color.c: 247:             motor_return = 1;
  3659   001A18  0E01               	movlw	1
  3660   001A1A  0100               	movlb	0	; () banked
  3661   001A1C  6FB4               	movwf	_motor_return& (0+255),b
  3662   001A1E                     l3034:
  3663                           
  3664                           ;color.c: 249:         buggy_step --;
  3665   001A1E  0649               	decf	_buggy_step^0,f,c
  3666   001A20  A0D8               	btfss	status,0,c
  3667   001A22  064A               	decf	(_buggy_step+1)^0,f,c
  3668   001A24                     
  3669                           ;color.c: 250:         return 9;
  3670   001A24  0E09               	movlw	9
  3671   001A26                     l138:
  3672   001A26  0012               	return		;funcret
  3673   001A28                     __end_of_motor_response:
  3674                           	callstack 0
  3675                           
  3676 ;; *************** function _turnRight *****************
  3677 ;; Defined at:
  3678 ;;		line 144 in file "dc_motor.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3681 ;;		 -> main@mL(9), 
  3682 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3683 ;;		 -> main@mR(9), 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;		None
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3699 ;;Total ram usage:        4 bytes
  3700 ;; Hardware stack levels used: 1
  3701 ;; Hardware stack levels required when called: 8
  3702 ;; This function calls:
  3703 ;;		_setMotorPWM
  3704 ;; This function is called by:
  3705 ;;		_motor_response
  3706 ;;		_motor_retrace
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           	psect	text10
  3711   002ED4                     __ptext10:
  3712                           	callstack 0
  3713   002ED4                     _turnRight:
  3714                           	callstack 21
  3715   002ED4                     
  3716                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  3717   002ED4  C01C  FFD9         	movff	turnRight@mL,fsr2l
  3718   002ED8  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  3719   002EDC  0E3C               	movlw	60
  3720   002EDE  6EDF               	movwf	indf2,c
  3721                           
  3722                           ;dc_motor.c: 147:     mR->power = 60;
  3723   002EE0  C01E  FFD9         	movff	turnRight@mR,fsr2l
  3724   002EE4  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  3725   002EE8  0E3C               	movlw	60
  3726   002EEA  6EDF               	movwf	indf2,c
  3727   002EEC                     
  3728                           ;dc_motor.c: 148:     mL->brakemode = 1;
  3729   002EEC  EE20 F002          	lfsr	2,2
  3730   002EF0  501C               	movf	turnRight@mL^0,w,c
  3731   002EF2  26D9               	addwf	fsr2l,f,c
  3732   002EF4  501D               	movf	(turnRight@mL+1)^0,w,c
  3733   002EF6  22DA               	addwfc	fsr2h,f,c
  3734   002EF8  0E01               	movlw	1
  3735   002EFA  6EDF               	movwf	indf2,c
  3736   002EFC                     
  3737                           ;dc_motor.c: 149:     mR->brakemode = 1;
  3738   002EFC  EE20 F002          	lfsr	2,2
  3739   002F00  501E               	movf	turnRight@mR^0,w,c
  3740   002F02  26D9               	addwf	fsr2l,f,c
  3741   002F04  501F               	movf	(turnRight@mR+1)^0,w,c
  3742   002F06  22DA               	addwfc	fsr2h,f,c
  3743   002F08  0E01               	movlw	1
  3744   002F0A  6EDF               	movwf	indf2,c
  3745   002F0C                     
  3746                           ;dc_motor.c: 150:     mR->direction = 0;
  3747   002F0C  EE20 F001          	lfsr	2,1
  3748   002F10  501E               	movf	turnRight@mR^0,w,c
  3749   002F12  26D9               	addwf	fsr2l,f,c
  3750   002F14  501F               	movf	(turnRight@mR+1)^0,w,c
  3751   002F16  22DA               	addwfc	fsr2h,f,c
  3752   002F18  0E00               	movlw	0
  3753   002F1A  6EDF               	movwf	indf2,c
  3754   002F1C                     
  3755                           ;dc_motor.c: 151:     mL->direction = 1;
  3756   002F1C  EE20 F001          	lfsr	2,1
  3757   002F20  501C               	movf	turnRight@mL^0,w,c
  3758   002F22  26D9               	addwf	fsr2l,f,c
  3759   002F24  501D               	movf	(turnRight@mL+1)^0,w,c
  3760   002F26  22DA               	addwfc	fsr2h,f,c
  3761   002F28  0E01               	movlw	1
  3762   002F2A  6EDF               	movwf	indf2,c
  3763   002F2C                     
  3764                           ;dc_motor.c: 152:     setMotorPWM(mL);
  3765   002F2C  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  3766   002F30  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  3767   002F34  ECEF  F013         	call	_setMotorPWM	;wreg free
  3768   002F38                     
  3769                           ;dc_motor.c: 153:     setMotorPWM(mR);
  3770   002F38  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  3771   002F3C  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  3772   002F40  ECEF  F013         	call	_setMotorPWM	;wreg free
  3773   002F44  0012               	return		;funcret
  3774   002F46                     __end_of_turnRight:
  3775                           	callstack 0
  3776                           
  3777 ;; *************** function _turnPrep *****************
  3778 ;; Defined at:
  3779 ;;		line 245 in file "dc_motor.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  3782 ;;		 -> main@mL(9), 
  3783 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  3784 ;;		 -> main@mR(9), 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;		None
  3787 ;; Return value:  Size  Location     Type
  3788 ;;                  1    wreg      void 
  3789 ;; Registers used:
  3790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3798 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;Total ram usage:        6 bytes
  3801 ;; Hardware stack levels used: 1
  3802 ;; Hardware stack levels required when called: 9
  3803 ;; This function calls:
  3804 ;;		_norm_stop
  3805 ;;		_reverse
  3806 ;; This function is called by:
  3807 ;;		_motor_response
  3808 ;;		_motor_retrace
  3809 ;; This function uses a non-reentrant model
  3810 ;;
  3811                           
  3812                           	psect	text11
  3813   00308C                     __ptext11:
  3814                           	callstack 0
  3815   00308C                     _turnPrep:
  3816                           	callstack 20
  3817   00308C                     
  3818                           ;dc_motor.c: 246:         reverse(mL, mR);
  3819   00308C  C021  F01C         	movff	turnPrep@mL,reverse@mL
  3820   003090  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  3821   003094  C023  F01E         	movff	turnPrep@mR,reverse@mR
  3822   003098  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  3823   00309C  EC27  F015         	call	_reverse	;wreg free
  3824   0030A0                     
  3825                           ;dc_motor.c: 247:         _delay((unsigned long)((600)*(64000000/4000.0)));
  3826   0030A0  0E31               	movlw	49
  3827   0030A2  6E26               	movwf	(??_turnPrep+1)^0,c
  3828   0030A4  0EB4               	movlw	180
  3829   0030A6  6E25               	movwf	??_turnPrep^0,c
  3830   0030A8  0E66               	movlw	102
  3831   0030AA                     u2817:
  3832   0030AA  2EE8               	decfsz	wreg,f,c
  3833   0030AC  D7FE               	bra	u2817
  3834   0030AE  2E25               	decfsz	??_turnPrep^0,f,c
  3835   0030B0  D7FC               	bra	u2817
  3836   0030B2  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  3837   0030B4  D7FA               	bra	u2817
  3838   0030B6                     
  3839                           ;dc_motor.c: 248:         norm_stop(mL, mR);
  3840   0030B6  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  3841   0030BA  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  3842   0030BE  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  3843   0030C2  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  3844   0030C6  EC6D  F019         	call	_norm_stop	;wreg free
  3845                           
  3846                           ;dc_motor.c: 249:         _delay((unsigned long)((300)*(64000000/4000.0)));
  3847   0030CA  0E19               	movlw	25
  3848   0030CC  6E26               	movwf	(??_turnPrep+1)^0,c
  3849   0030CE  0E5A               	movlw	90
  3850   0030D0  6E25               	movwf	??_turnPrep^0,c
  3851   0030D2  0EB2               	movlw	178
  3852   0030D4                     u2827:
  3853   0030D4  2EE8               	decfsz	wreg,f,c
  3854   0030D6  D7FE               	bra	u2827
  3855   0030D8  2E25               	decfsz	??_turnPrep^0,f,c
  3856   0030DA  D7FC               	bra	u2827
  3857   0030DC  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  3858   0030DE  D7FA               	bra	u2827
  3859   0030E0  0012               	return		;funcret
  3860   0030E2                     __end_of_turnPrep:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _reverse *****************
  3864 ;; Defined at:
  3865 ;;		line 222 in file "dc_motor.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3868 ;;		 -> main@mL(9), 
  3869 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3870 ;;		 -> main@mR(9), 
  3871 ;; Auto vars:     Size  Location     Type
  3872 ;;		None
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  1    wreg      void 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3885 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3886 ;;Total ram usage:        5 bytes
  3887 ;; Hardware stack levels used: 1
  3888 ;; Hardware stack levels required when called: 8
  3889 ;; This function calls:
  3890 ;;		_setMotorPWM
  3891 ;; This function is called by:
  3892 ;;		_motor_response
  3893 ;;		_motor_retrace
  3894 ;;		_turnPrep
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text12
  3899   002A4E                     __ptext12:
  3900                           	callstack 0
  3901   002A4E                     _reverse:
  3902                           	callstack 20
  3903   002A4E                     
  3904                           ;dc_motor.c: 222: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 223: {;dc_motor.c
      +                          : 224:     mL->power = 5;
  3905   002A4E  C01C  FFD9         	movff	reverse@mL,fsr2l
  3906   002A52  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3907   002A56  0E05               	movlw	5
  3908   002A58  6EDF               	movwf	indf2,c
  3909                           
  3910                           ;dc_motor.c: 225:     mR->power = 5;
  3911   002A5A  C01E  FFD9         	movff	reverse@mR,fsr2l
  3912   002A5E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3913   002A62  0E05               	movlw	5
  3914   002A64  6EDF               	movwf	indf2,c
  3915   002A66                     
  3916                           ;dc_motor.c: 226:     mR->direction = 0;
  3917   002A66  EE20 F001          	lfsr	2,1
  3918   002A6A  501E               	movf	reverse@mR^0,w,c
  3919   002A6C  26D9               	addwf	fsr2l,f,c
  3920   002A6E  501F               	movf	(reverse@mR+1)^0,w,c
  3921   002A70  22DA               	addwfc	fsr2h,f,c
  3922   002A72  0E00               	movlw	0
  3923   002A74  6EDF               	movwf	indf2,c
  3924   002A76                     
  3925                           ;dc_motor.c: 227:     mL->direction = 0;
  3926   002A76  EE20 F001          	lfsr	2,1
  3927   002A7A  501C               	movf	reverse@mL^0,w,c
  3928   002A7C  26D9               	addwf	fsr2l,f,c
  3929   002A7E  501D               	movf	(reverse@mL+1)^0,w,c
  3930   002A80  22DA               	addwfc	fsr2h,f,c
  3931   002A82  0E00               	movlw	0
  3932   002A84  6EDF               	movwf	indf2,c
  3933   002A86                     
  3934                           ;dc_motor.c: 228:     mL->brakemode = 1;
  3935   002A86  EE20 F002          	lfsr	2,2
  3936   002A8A  501C               	movf	reverse@mL^0,w,c
  3937   002A8C  26D9               	addwf	fsr2l,f,c
  3938   002A8E  501D               	movf	(reverse@mL+1)^0,w,c
  3939   002A90  22DA               	addwfc	fsr2h,f,c
  3940   002A92  0E01               	movlw	1
  3941   002A94  6EDF               	movwf	indf2,c
  3942   002A96                     
  3943                           ;dc_motor.c: 229:     mR->brakemode = 1;
  3944   002A96  EE20 F002          	lfsr	2,2
  3945   002A9A  501E               	movf	reverse@mR^0,w,c
  3946   002A9C  26D9               	addwf	fsr2l,f,c
  3947   002A9E  501F               	movf	(reverse@mR+1)^0,w,c
  3948   002AA0  22DA               	addwfc	fsr2h,f,c
  3949   002AA2  0E01               	movlw	1
  3950   002AA4  6EDF               	movwf	indf2,c
  3951                           
  3952                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  3953   002AA6  EF72  F015         	goto	l636
  3954   002AAA                     l2486:
  3955                           
  3956                           ;dc_motor.c: 231:     {;dc_motor.c: 232:         mL->power++;
  3957   002AAA  C01C  FFD9         	movff	reverse@mL,fsr2l
  3958   002AAE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3959   002AB2  2ADF               	incf	indf2,f,c
  3960                           
  3961                           ;dc_motor.c: 233:         mR->power++;
  3962   002AB4  C01E  FFD9         	movff	reverse@mR,fsr2l
  3963   002AB8  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3964   002ABC  2ADF               	incf	indf2,f,c
  3965   002ABE                     
  3966                           ;dc_motor.c: 234:         _delay((unsigned long)((10)*(64000000/4000.0)));
  3967   002ABE  0ED0               	movlw	208
  3968   002AC0  6E20               	movwf	??_reverse^0,c
  3969   002AC2  0ECA               	movlw	202
  3970   002AC4                     u2837:
  3971   002AC4  2EE8               	decfsz	wreg,f,c
  3972   002AC6  D7FE               	bra	u2837
  3973   002AC8  2E20               	decfsz	??_reverse^0,f,c
  3974   002ACA  D7FC               	bra	u2837
  3975   002ACC                     
  3976                           ;dc_motor.c: 235:         setMotorPWM(mL);
  3977   002ACC  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  3978   002AD0  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  3979   002AD4  ECEF  F013         	call	_setMotorPWM	;wreg free
  3980   002AD8                     
  3981                           ;dc_motor.c: 236:         setMotorPWM(mR);
  3982   002AD8  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  3983   002ADC  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  3984   002AE0  ECEF  F013         	call	_setMotorPWM	;wreg free
  3985   002AE4                     l636:
  3986                           
  3987                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  3988   002AE4  C01C  FFD9         	movff	reverse@mL,fsr2l
  3989   002AE8  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  3990   002AEC  0E15               	movlw	21
  3991   002AEE  60DF               	cpfslt	indf2,c
  3992   002AF0  EF7C  F015         	goto	u1381
  3993   002AF4  EF7E  F015         	goto	u1380
  3994   002AF8                     u1381:
  3995   002AF8  EF8A  F015         	goto	l2496
  3996   002AFC                     u1380:
  3997   002AFC  C01E  FFD9         	movff	reverse@mR,fsr2l
  3998   002B00  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  3999   002B04  0E14               	movlw	20
  4000   002B06  64DF               	cpfsgt	indf2,c
  4001   002B08  EF88  F015         	goto	u1391
  4002   002B0C  EF8A  F015         	goto	u1390
  4003   002B10                     u1391:
  4004   002B10  EF55  F015         	goto	l2486
  4005   002B14                     u1390:
  4006   002B14                     l2496:
  4007                           
  4008                           ;dc_motor.c: 238:     mL->power = 20;
  4009   002B14  C01C  FFD9         	movff	reverse@mL,fsr2l
  4010   002B18  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  4011   002B1C  0E14               	movlw	20
  4012   002B1E  6EDF               	movwf	indf2,c
  4013                           
  4014                           ;dc_motor.c: 239:     mR->power = 20;
  4015   002B20  C01E  FFD9         	movff	reverse@mR,fsr2l
  4016   002B24  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  4017   002B28  0E14               	movlw	20
  4018   002B2A  6EDF               	movwf	indf2,c
  4019   002B2C                     
  4020                           ;dc_motor.c: 240:     setMotorPWM(mL);
  4021   002B2C  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  4022   002B30  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  4023   002B34  ECEF  F013         	call	_setMotorPWM	;wreg free
  4024   002B38                     
  4025                           ;dc_motor.c: 241:     setMotorPWM(mR);
  4026   002B38  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  4027   002B3C  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  4028   002B40  ECEF  F013         	call	_setMotorPWM	;wreg free
  4029   002B44  0012               	return		;funcret
  4030   002B46                     __end_of_reverse:
  4031                           	callstack 0
  4032                           
  4033 ;; *************** function _norm_stop *****************
  4034 ;; Defined at:
  4035 ;;		line 118 in file "dc_motor.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4038 ;;		 -> main@mL(9), 
  4039 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4040 ;;		 -> main@mR(9), 
  4041 ;; Auto vars:     Size  Location     Type
  4042 ;;		None
  4043 ;; Return value:  Size  Location     Type
  4044 ;;                  1    wreg      void 
  4045 ;; Registers used:
  4046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4047 ;; Tracked objects:
  4048 ;;		On entry : 0/0
  4049 ;;		On exit  : 0/0
  4050 ;;		Unchanged: 0/0
  4051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4052 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;Total ram usage:        4 bytes
  4057 ;; Hardware stack levels used: 1
  4058 ;; Hardware stack levels required when called: 8
  4059 ;; This function calls:
  4060 ;;		_setMotorPWM
  4061 ;; This function is called by:
  4062 ;;		_motor_response
  4063 ;;		_motor_retrace
  4064 ;;		_main
  4065 ;;		_turnPrep
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text13
  4070   0032DA                     __ptext13:
  4071                           	callstack 0
  4072   0032DA                     _norm_stop:
  4073                           	callstack 22
  4074   0032DA                     
  4075                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  4076   0032DA  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  4077   0032DE  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  4078   0032E2  0E00               	movlw	0
  4079   0032E4  6EDF               	movwf	indf2,c
  4080                           
  4081                           ;dc_motor.c: 125:     mR->power = 0;
  4082   0032E6  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  4083   0032EA  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  4084   0032EE  0E00               	movlw	0
  4085   0032F0  6EDF               	movwf	indf2,c
  4086   0032F2                     
  4087                           ;dc_motor.c: 126:     setMotorPWM(mL);
  4088   0032F2  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  4089   0032F6  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  4090   0032FA  ECEF  F013         	call	_setMotorPWM	;wreg free
  4091   0032FE                     
  4092                           ;dc_motor.c: 127:     setMotorPWM(mR);
  4093   0032FE  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  4094   003302  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  4095   003306  ECEF  F013         	call	_setMotorPWM	;wreg free
  4096   00330A  0012               	return		;funcret
  4097   00330C                     __end_of_norm_stop:
  4098                           	callstack 0
  4099                           
  4100 ;; *************** function _turnLeft *****************
  4101 ;; Defined at:
  4102 ;;		line 131 in file "dc_motor.c"
  4103 ;; Parameters:    Size  Location     Type
  4104 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4105 ;;		 -> main@mL(9), 
  4106 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4107 ;;		 -> main@mR(9), 
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4119 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;Total ram usage:        4 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 8
  4126 ;; This function calls:
  4127 ;;		_setMotorPWM
  4128 ;; This function is called by:
  4129 ;;		_motor_response
  4130 ;;		_motor_retrace
  4131 ;;		_main
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text14
  4136   002F46                     __ptext14:
  4137                           	callstack 0
  4138   002F46                     _turnLeft:
  4139                           	callstack 22
  4140   002F46                     
  4141                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  4142   002F46  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  4143   002F4A  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  4144   002F4E  0E3C               	movlw	60
  4145   002F50  6EDF               	movwf	indf2,c
  4146                           
  4147                           ;dc_motor.c: 134:     mR->power = 60;
  4148   002F52  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  4149   002F56  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  4150   002F5A  0E3C               	movlw	60
  4151   002F5C  6EDF               	movwf	indf2,c
  4152   002F5E                     
  4153                           ;dc_motor.c: 135:     mL->brakemode = 1;
  4154   002F5E  EE20 F002          	lfsr	2,2
  4155   002F62  501C               	movf	turnLeft@mL^0,w,c
  4156   002F64  26D9               	addwf	fsr2l,f,c
  4157   002F66  501D               	movf	(turnLeft@mL+1)^0,w,c
  4158   002F68  22DA               	addwfc	fsr2h,f,c
  4159   002F6A  0E01               	movlw	1
  4160   002F6C  6EDF               	movwf	indf2,c
  4161   002F6E                     
  4162                           ;dc_motor.c: 136:     mR->brakemode = 1;
  4163   002F6E  EE20 F002          	lfsr	2,2
  4164   002F72  501E               	movf	turnLeft@mR^0,w,c
  4165   002F74  26D9               	addwf	fsr2l,f,c
  4166   002F76  501F               	movf	(turnLeft@mR+1)^0,w,c
  4167   002F78  22DA               	addwfc	fsr2h,f,c
  4168   002F7A  0E01               	movlw	1
  4169   002F7C  6EDF               	movwf	indf2,c
  4170   002F7E                     
  4171                           ;dc_motor.c: 137:     mL->direction = 0;
  4172   002F7E  EE20 F001          	lfsr	2,1
  4173   002F82  501C               	movf	turnLeft@mL^0,w,c
  4174   002F84  26D9               	addwf	fsr2l,f,c
  4175   002F86  501D               	movf	(turnLeft@mL+1)^0,w,c
  4176   002F88  22DA               	addwfc	fsr2h,f,c
  4177   002F8A  0E00               	movlw	0
  4178   002F8C  6EDF               	movwf	indf2,c
  4179   002F8E                     
  4180                           ;dc_motor.c: 138:     mR->direction = 1;
  4181   002F8E  EE20 F001          	lfsr	2,1
  4182   002F92  501E               	movf	turnLeft@mR^0,w,c
  4183   002F94  26D9               	addwf	fsr2l,f,c
  4184   002F96  501F               	movf	(turnLeft@mR+1)^0,w,c
  4185   002F98  22DA               	addwfc	fsr2h,f,c
  4186   002F9A  0E01               	movlw	1
  4187   002F9C  6EDF               	movwf	indf2,c
  4188   002F9E                     
  4189                           ;dc_motor.c: 139:     setMotorPWM(mL);
  4190   002F9E  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  4191   002FA2  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  4192   002FA6  ECEF  F013         	call	_setMotorPWM	;wreg free
  4193   002FAA                     
  4194                           ;dc_motor.c: 140:     setMotorPWM(mR);
  4195   002FAA  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  4196   002FAE  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  4197   002FB2  ECEF  F013         	call	_setMotorPWM	;wreg free
  4198   002FB6  0012               	return		;funcret
  4199   002FB8                     __end_of_turnLeft:
  4200                           	callstack 0
  4201                           
  4202 ;; *************** function _setMotorPWM *****************
  4203 ;; Defined at:
  4204 ;;		line 56 in file "dc_motor.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  m               2   21[COMRAM] PTR struct DC_motor
  4207 ;;		 -> main@mR(9), main@mL(9), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  negDuty         1   26[COMRAM] unsigned char 
  4210 ;;  posDuty         1   25[COMRAM] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1    wreg      void 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4220 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4222 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4223 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4224 ;;Total ram usage:        6 bytes
  4225 ;; Hardware stack levels used: 1
  4226 ;; Hardware stack levels required when called: 7
  4227 ;; This function calls:
  4228 ;;		___lwdiv
  4229 ;;		___wmul
  4230 ;; This function is called by:
  4231 ;;		_norm_stop
  4232 ;;		_turnLeft
  4233 ;;		_turnRight
  4234 ;;		_fullSpeedAhead
  4235 ;;		_wallSmash
  4236 ;;		_reverse
  4237 ;;		_stop
  4238 ;;		_slowSearch
  4239 ;;		_uturn
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text15
  4244   0027DE                     __ptext15:
  4245                           	callstack 0
  4246   0027DE                     _setMotorPWM:
  4247                           	callstack 22
  4248   0027DE                     
  4249                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  4250   0027DE  EE20 F002          	lfsr	2,2
  4251   0027E2  5016               	movf	setMotorPWM@m^0,w,c
  4252   0027E4  26D9               	addwf	fsr2l,f,c
  4253   0027E6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4254   0027E8  22DA               	addwfc	fsr2h,f,c
  4255   0027EA  50DF               	movf	indf2,w,c
  4256   0027EC  B4D8               	btfsc	status,2,c
  4257   0027EE  EFFB  F013         	goto	u1341
  4258   0027F2  EFFD  F013         	goto	u1340
  4259   0027F6                     u1341:
  4260   0027F6  EF31  F014         	goto	l2424
  4261   0027FA                     u1340:
  4262   0027FA                     
  4263                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  4264   0027FA  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  4265   0027FE  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4266   002802  50DF               	movf	indf2,w,c
  4267   002804  6E18               	movwf	??_setMotorPWM^0,c
  4268   002806  5018               	movf	??_setMotorPWM^0,w,c
  4269   002808  6E09               	movwf	___wmul@multiplier^0,c
  4270   00280A  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  4271   00280C  EE20 F003          	lfsr	2,3
  4272   002810  5016               	movf	setMotorPWM@m^0,w,c
  4273   002812  26D9               	addwf	fsr2l,f,c
  4274   002814  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4275   002816  22DA               	addwfc	fsr2h,f,c
  4276   002818  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  4277   00281C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  4278   002820  EC06  F01A         	call	___wmul	;wreg free
  4279   002824  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  4280   002828  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  4281   00282C  0E00               	movlw	0
  4282   00282E  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  4283   002830  0E64               	movlw	100
  4284   002832  6E11               	movwf	___lwdiv@divisor^0,c
  4285   002834  EC30  F017         	call	___lwdiv	;wreg free
  4286   002838  EE20 F003          	lfsr	2,3
  4287   00283C  5016               	movf	setMotorPWM@m^0,w,c
  4288   00283E  26D9               	addwf	fsr2l,f,c
  4289   002840  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4290   002842  22DA               	addwfc	fsr2h,f,c
  4291   002844  50DF               	movf	indf2,w,c
  4292   002846  6E19               	movwf	(??_setMotorPWM+1)^0,c
  4293   002848  500F               	movf	?___lwdiv^0,w,c
  4294   00284A  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  4295   00284C  6E1A               	movwf	setMotorPWM@posDuty^0,c
  4296   00284E                     
  4297                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  4298   00284E  EE20 F003          	lfsr	2,3
  4299   002852  5016               	movf	setMotorPWM@m^0,w,c
  4300   002854  26D9               	addwf	fsr2l,f,c
  4301   002856  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4302   002858  22DA               	addwfc	fsr2h,f,c
  4303   00285A  50DF               	movf	indf2,w,c
  4304   00285C  6E1B               	movwf	setMotorPWM@negDuty^0,c
  4305                           
  4306                           ;dc_motor.c: 63:     }
  4307   00285E  EF54  F014         	goto	l2428
  4308   002862                     l2424:
  4309                           
  4310                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  4311   002862  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  4312   002866  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  4313   00286A  50DF               	movf	indf2,w,c
  4314   00286C  6E18               	movwf	??_setMotorPWM^0,c
  4315   00286E  5018               	movf	??_setMotorPWM^0,w,c
  4316   002870  6E09               	movwf	___wmul@multiplier^0,c
  4317   002872  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  4318   002874  EE20 F003          	lfsr	2,3
  4319   002878  5016               	movf	setMotorPWM@m^0,w,c
  4320   00287A  26D9               	addwf	fsr2l,f,c
  4321   00287C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4322   00287E  22DA               	addwfc	fsr2h,f,c
  4323   002880  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  4324   002884  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  4325   002888  EC06  F01A         	call	___wmul	;wreg free
  4326   00288C  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  4327   002890  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  4328   002894  0E00               	movlw	0
  4329   002896  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  4330   002898  0E64               	movlw	100
  4331   00289A  6E11               	movwf	___lwdiv@divisor^0,c
  4332   00289C  EC30  F017         	call	___lwdiv	;wreg free
  4333   0028A0  500F               	movf	?___lwdiv^0,w,c
  4334   0028A2  6E1A               	movwf	setMotorPWM@posDuty^0,c
  4335   0028A4                     
  4336                           ;dc_motor.c: 66:         negDuty=0;
  4337   0028A4  0E00               	movlw	0
  4338   0028A6  6E1B               	movwf	setMotorPWM@negDuty^0,c
  4339   0028A8                     l2428:
  4340                           
  4341                           ;dc_motor.c: 69:     if (m->direction) {
  4342   0028A8  EE20 F001          	lfsr	2,1
  4343   0028AC  5016               	movf	setMotorPWM@m^0,w,c
  4344   0028AE  26D9               	addwf	fsr2l,f,c
  4345   0028B0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4346   0028B2  22DA               	addwfc	fsr2h,f,c
  4347   0028B4  50DF               	movf	indf2,w,c
  4348   0028B6  B4D8               	btfsc	status,2,c
  4349   0028B8  EF60  F014         	goto	u1351
  4350   0028BC  EF62  F014         	goto	u1350
  4351   0028C0                     u1351:
  4352   0028C0  EF84  F014         	goto	l2432
  4353   0028C4                     u1350:
  4354   0028C4                     
  4355                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  4356   0028C4  EE20 F005          	lfsr	2,5
  4357   0028C8  5016               	movf	setMotorPWM@m^0,w,c
  4358   0028CA  26D9               	addwf	fsr2l,f,c
  4359   0028CC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4360   0028CE  22DA               	addwfc	fsr2h,f,c
  4361   0028D0  CFDE F018          	movff	postinc2,??_setMotorPWM
  4362   0028D4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  4363   0028D8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  4364   0028DC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4365   0028E0  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  4366                           
  4367                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  4368   0028E4  EE20 F007          	lfsr	2,7
  4369   0028E8  5016               	movf	setMotorPWM@m^0,w,c
  4370   0028EA  26D9               	addwf	fsr2l,f,c
  4371   0028EC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4372   0028EE  22DA               	addwfc	fsr2h,f,c
  4373   0028F0  CFDE F018          	movff	postinc2,??_setMotorPWM
  4374   0028F4  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  4375   0028F8  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  4376   0028FC  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4377   002900  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  4378                           
  4379                           ;dc_motor.c: 72:     } else {
  4380   002904  EFA4  F014         	goto	l588
  4381   002908                     l2432:
  4382                           
  4383                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  4384   002908  EE20 F005          	lfsr	2,5
  4385   00290C  5016               	movf	setMotorPWM@m^0,w,c
  4386   00290E  26D9               	addwf	fsr2l,f,c
  4387   002910  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4388   002912  22DA               	addwfc	fsr2h,f,c
  4389   002914  CFDE F018          	movff	postinc2,??_setMotorPWM
  4390   002918  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  4391   00291C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  4392   002920  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4393   002924  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  4394                           
  4395                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  4396   002928  EE20 F007          	lfsr	2,7
  4397   00292C  5016               	movf	setMotorPWM@m^0,w,c
  4398   00292E  26D9               	addwf	fsr2l,f,c
  4399   002930  5017               	movf	(setMotorPWM@m+1)^0,w,c
  4400   002932  22DA               	addwfc	fsr2h,f,c
  4401   002934  CFDE F018          	movff	postinc2,??_setMotorPWM
  4402   002938  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  4403   00293C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  4404   002940  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  4405   002944  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  4406   002948                     l588:
  4407   002948  0012               	return		;funcret
  4408   00294A                     __end_of_setMotorPWM:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function ___wmul *****************
  4412 ;; Defined at:
  4413 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  multiplier      2    8[COMRAM] unsigned int 
  4416 ;;  multiplicand    2   10[COMRAM] unsigned int 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  product         2   12[COMRAM] unsigned int 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  2    8[COMRAM] unsigned int 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, prodl, prodh
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4428 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4432 ;;Total ram usage:        6 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 6
  4435 ;; This function calls:
  4436 ;;		Nothing
  4437 ;; This function is called by:
  4438 ;;		_setMotorPWM
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text16
  4443   00340C                     __ptext16:
  4444                           	callstack 0
  4445   00340C                     ___wmul:
  4446                           	callstack 22
  4447   00340C  5009               	movf	___wmul@multiplier^0,w,c
  4448   00340E  020B               	mulwf	___wmul@multiplicand^0,c
  4449   003410  CFF3 F00D          	movff	prodl,___wmul@product
  4450   003414  CFF4 F00E          	movff	prodh,___wmul@product+1
  4451   003418  5009               	movf	___wmul@multiplier^0,w,c
  4452   00341A  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  4453   00341C  50F3               	movf	243,w,c
  4454   00341E  260E               	addwf	(___wmul@product+1)^0,f,c
  4455   003420  500A               	movf	(___wmul@multiplier+1)^0,w,c
  4456   003422  020B               	mulwf	___wmul@multiplicand^0,c
  4457   003424  50F3               	movf	243,w,c
  4458   003426  260E               	addwf	(___wmul@product+1)^0,f,c
  4459   003428  C00D  F009         	movff	___wmul@product,?___wmul
  4460   00342C  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  4461   003430  0012               	return		;funcret
  4462   003432                     __end_of___wmul:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function ___lwdiv *****************
  4466 ;; Defined at:
  4467 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  dividend        2   14[COMRAM] unsigned int 
  4470 ;;  divisor         2   16[COMRAM] unsigned int 
  4471 ;; Auto vars:     Size  Location     Type
  4472 ;;  quotient        2   18[COMRAM] unsigned int 
  4473 ;;  counter         1   20[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  2   14[COMRAM] unsigned int 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4483 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4484 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;Total ram usage:        7 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; Hardware stack levels required when called: 6
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_setMotorPWM
  4494 ;; This function uses a non-reentrant model
  4495 ;;
  4496                           
  4497                           	psect	text17
  4498   002E60                     __ptext17:
  4499                           	callstack 0
  4500   002E60                     ___lwdiv:
  4501                           	callstack 22
  4502   002E60  0E00               	movlw	0
  4503   002E62  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  4504   002E64  0E00               	movlw	0
  4505   002E66  6E13               	movwf	___lwdiv@quotient^0,c
  4506   002E68  5011               	movf	___lwdiv@divisor^0,w,c
  4507   002E6A  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4508   002E6C  B4D8               	btfsc	status,2,c
  4509   002E6E  EF3B  F017         	goto	u1271
  4510   002E72  EF3D  F017         	goto	u1270
  4511   002E76                     u1271:
  4512   002E76  EF65  F017         	goto	l1141
  4513   002E7A                     u1270:
  4514   002E7A  0E01               	movlw	1
  4515   002E7C  6E15               	movwf	___lwdiv@counter^0,c
  4516   002E7E  EF45  F017         	goto	l2396
  4517   002E82                     l2394:
  4518   002E82  90D8               	bcf	status,0,c
  4519   002E84  3611               	rlcf	___lwdiv@divisor^0,f,c
  4520   002E86  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4521   002E88  2A15               	incf	___lwdiv@counter^0,f,c
  4522   002E8A                     l2396:
  4523   002E8A  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  4524   002E8C  EF4A  F017         	goto	u1281
  4525   002E90  EF4C  F017         	goto	u1280
  4526   002E94                     u1281:
  4527   002E94  EF41  F017         	goto	l2394
  4528   002E98                     u1280:
  4529   002E98                     l2398:
  4530   002E98  90D8               	bcf	status,0,c
  4531   002E9A  3613               	rlcf	___lwdiv@quotient^0,f,c
  4532   002E9C  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4533   002E9E  5011               	movf	___lwdiv@divisor^0,w,c
  4534   002EA0  5C0F               	subwf	___lwdiv@dividend^0,w,c
  4535   002EA2  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  4536   002EA4  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4537   002EA6  A0D8               	btfss	status,0,c
  4538   002EA8  EF58  F017         	goto	u1291
  4539   002EAC  EF5A  F017         	goto	u1290
  4540   002EB0                     u1291:
  4541   002EB0  EF5F  F017         	goto	l2406
  4542   002EB4                     u1290:
  4543   002EB4  5011               	movf	___lwdiv@divisor^0,w,c
  4544   002EB6  5E0F               	subwf	___lwdiv@dividend^0,f,c
  4545   002EB8  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  4546   002EBA  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4547   002EBC  8013               	bsf	___lwdiv@quotient^0,0,c
  4548   002EBE                     l2406:
  4549   002EBE  90D8               	bcf	status,0,c
  4550   002EC0  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4551   002EC2  3211               	rrcf	___lwdiv@divisor^0,f,c
  4552   002EC4  2E15               	decfsz	___lwdiv@counter^0,f,c
  4553   002EC6  EF4C  F017         	goto	l2398
  4554   002ECA                     l1141:
  4555   002ECA  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  4556   002ECE  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4557   002ED2  0012               	return		;funcret
  4558   002ED4                     __end_of___lwdiv:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function ___flge *****************
  4562 ;; Defined at:
  4563 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  ff1             4    8[COMRAM] unsigned int 
  4566 ;;  ff2             4   12[COMRAM] unsigned int 
  4567 ;; Auto vars:     Size  Location     Type
  4568 ;;		None
  4569 ;; Return value:  Size  Location     Type
  4570 ;;		None               void
  4571 ;; Registers used:
  4572 ;;		wreg, status,2, status,0
  4573 ;; Tracked objects:
  4574 ;;		On entry : 0/0
  4575 ;;		On exit  : 0/0
  4576 ;;		Unchanged: 0/0
  4577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4581 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4582 ;;Total ram usage:       12 bytes
  4583 ;; Hardware stack levels used: 1
  4584 ;; Hardware stack levels required when called: 6
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_motor_response
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text18
  4593   00294A                     __ptext18:
  4594                           	callstack 0
  4595   00294A                     ___flge:
  4596                           	callstack 23
  4597   00294A  0E00               	movlw	0
  4598   00294C  1409               	andwf	___flge@ff1^0,w,c
  4599   00294E  6E11               	movwf	??___flge^0,c
  4600   002950  0E00               	movlw	0
  4601   002952  140A               	andwf	(___flge@ff1+1)^0,w,c
  4602   002954  6E12               	movwf	(??___flge+1)^0,c
  4603   002956  0E80               	movlw	128
  4604   002958  140B               	andwf	(___flge@ff1+2)^0,w,c
  4605   00295A  6E13               	movwf	(??___flge+2)^0,c
  4606   00295C  0E7F               	movlw	127
  4607   00295E  140C               	andwf	(___flge@ff1+3)^0,w,c
  4608   002960  6E14               	movwf	(??___flge+3)^0,c
  4609   002962  5011               	movf	??___flge^0,w,c
  4610   002964  1012               	iorwf	(??___flge+1)^0,w,c
  4611   002966  1013               	iorwf	(??___flge+2)^0,w,c
  4612   002968  1014               	iorwf	(??___flge+3)^0,w,c
  4613   00296A  A4D8               	btfss	status,2,c
  4614   00296C  EFBA  F014         	goto	u1651
  4615   002970  EFBC  F014         	goto	u1650
  4616   002974                     u1651:
  4617   002974  EFC4  F014         	goto	l2756
  4618   002978                     u1650:
  4619   002978  0E00               	movlw	0
  4620   00297A  6E09               	movwf	___flge@ff1^0,c
  4621   00297C  0E00               	movlw	0
  4622   00297E  6E0A               	movwf	(___flge@ff1+1)^0,c
  4623   002980  0E00               	movlw	0
  4624   002982  6E0B               	movwf	(___flge@ff1+2)^0,c
  4625   002984  0E00               	movlw	0
  4626   002986  6E0C               	movwf	(___flge@ff1+3)^0,c
  4627   002988                     l2756:
  4628   002988  0E00               	movlw	0
  4629   00298A  140D               	andwf	___flge@ff2^0,w,c
  4630   00298C  6E11               	movwf	??___flge^0,c
  4631   00298E  0E00               	movlw	0
  4632   002990  140E               	andwf	(___flge@ff2+1)^0,w,c
  4633   002992  6E12               	movwf	(??___flge+1)^0,c
  4634   002994  0E80               	movlw	128
  4635   002996  140F               	andwf	(___flge@ff2+2)^0,w,c
  4636   002998  6E13               	movwf	(??___flge+2)^0,c
  4637   00299A  0E7F               	movlw	127
  4638   00299C  1410               	andwf	(___flge@ff2+3)^0,w,c
  4639   00299E  6E14               	movwf	(??___flge+3)^0,c
  4640   0029A0  5011               	movf	??___flge^0,w,c
  4641   0029A2  1012               	iorwf	(??___flge+1)^0,w,c
  4642   0029A4  1013               	iorwf	(??___flge+2)^0,w,c
  4643   0029A6  1014               	iorwf	(??___flge+3)^0,w,c
  4644   0029A8  A4D8               	btfss	status,2,c
  4645   0029AA  EFD9  F014         	goto	u1661
  4646   0029AE  EFDB  F014         	goto	u1660
  4647   0029B2                     u1661:
  4648   0029B2  EFE3  F014         	goto	l2760
  4649   0029B6                     u1660:
  4650   0029B6  0E00               	movlw	0
  4651   0029B8  6E0D               	movwf	___flge@ff2^0,c
  4652   0029BA  0E00               	movlw	0
  4653   0029BC  6E0E               	movwf	(___flge@ff2+1)^0,c
  4654   0029BE  0E00               	movlw	0
  4655   0029C0  6E0F               	movwf	(___flge@ff2+2)^0,c
  4656   0029C2  0E00               	movlw	0
  4657   0029C4  6E10               	movwf	(___flge@ff2+3)^0,c
  4658   0029C6                     l2760:
  4659   0029C6  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  4660   0029C8  EFE8  F014         	goto	u1671
  4661   0029CC  EFEA  F014         	goto	u1670
  4662   0029D0                     u1671:
  4663   0029D0  EFF3  F014         	goto	l2764
  4664   0029D4                     u1670:
  4665   0029D4  6C09               	negf	___flge@ff1^0,c
  4666   0029D6  1E0A               	comf	(___flge@ff1+1)^0,f,c
  4667   0029D8  B0D8               	btfsc	status,0,c
  4668   0029DA  2A0A               	incf	(___flge@ff1+1)^0,f,c
  4669   0029DC  1E0B               	comf	(___flge@ff1+2)^0,f,c
  4670   0029DE  B0D8               	btfsc	status,0,c
  4671   0029E0  2A0B               	incf	(___flge@ff1+2)^0,f,c
  4672   0029E2  0E80               	movlw	128
  4673   0029E4  560C               	subfwb	(___flge@ff1+3)^0,f,c
  4674   0029E6                     l2764:
  4675   0029E6  AE10               	btfss	(___flge@ff2+3)^0,7,c
  4676   0029E8  EFF8  F014         	goto	u1681
  4677   0029EC  EFFA  F014         	goto	u1680
  4678   0029F0                     u1681:
  4679   0029F0  EF03  F015         	goto	l915
  4680   0029F4                     u1680:
  4681   0029F4  6C0D               	negf	___flge@ff2^0,c
  4682   0029F6  1E0E               	comf	(___flge@ff2+1)^0,f,c
  4683   0029F8  B0D8               	btfsc	status,0,c
  4684   0029FA  2A0E               	incf	(___flge@ff2+1)^0,f,c
  4685   0029FC  1E0F               	comf	(___flge@ff2+2)^0,f,c
  4686   0029FE  B0D8               	btfsc	status,0,c
  4687   002A00  2A0F               	incf	(___flge@ff2+2)^0,f,c
  4688   002A02  0E80               	movlw	128
  4689   002A04  5610               	subfwb	(___flge@ff2+3)^0,f,c
  4690   002A06                     l915:
  4691   002A06  0E00               	movlw	0
  4692   002A08  1A09               	xorwf	___flge@ff1^0,f,c
  4693   002A0A  0E00               	movlw	0
  4694   002A0C  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  4695   002A0E  0E00               	movlw	0
  4696   002A10  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  4697   002A12  0E80               	movlw	128
  4698   002A14  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  4699   002A16  0E00               	movlw	0
  4700   002A18  1A0D               	xorwf	___flge@ff2^0,f,c
  4701   002A1A  0E00               	movlw	0
  4702   002A1C  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  4703   002A1E  0E00               	movlw	0
  4704   002A20  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  4705   002A22  0E80               	movlw	128
  4706   002A24  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  4707   002A26  500D               	movf	___flge@ff2^0,w,c
  4708   002A28  5C09               	subwf	___flge@ff1^0,w,c
  4709   002A2A  500E               	movf	(___flge@ff2+1)^0,w,c
  4710   002A2C  580A               	subwfb	(___flge@ff1+1)^0,w,c
  4711   002A2E  500F               	movf	(___flge@ff2+2)^0,w,c
  4712   002A30  580B               	subwfb	(___flge@ff1+2)^0,w,c
  4713   002A32  5010               	movf	(___flge@ff2+3)^0,w,c
  4714   002A34  580C               	subwfb	(___flge@ff1+3)^0,w,c
  4715   002A36  B0D8               	btfsc	status,0,c
  4716   002A38  EF20  F015         	goto	u1691
  4717   002A3C  EF22  F015         	goto	u1690
  4718   002A40                     u1691:
  4719   002A40  EF25  F015         	goto	l2770
  4720   002A44                     u1690:
  4721   002A44  90D8               	bcf	status,0,c
  4722   002A46  EF26  F015         	goto	l920
  4723   002A4A                     l2770:
  4724   002A4A  80D8               	bsf	status,0,c
  4725   002A4C                     l920:
  4726   002A4C  0012               	return		;funcret
  4727   002A4E                     __end_of___flge:
  4728                           	callstack 0
  4729                           
  4730 ;; *************** function _motorTRIS *****************
  4731 ;; Defined at:
  4732 ;;		line 252 in file "dc_motor.c"
  4733 ;; Parameters:    Size  Location     Type
  4734 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  4735 ;;		 -> main@mL(9), 
  4736 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  4737 ;;		 -> main@mR(9), 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  1    wreg      void 
  4742 ;; Registers used:
  4743 ;;		None
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4749 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;Total ram usage:        4 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; Hardware stack levels required when called: 6
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           
  4763                           	psect	text19
  4764   0034FA                     __ptext19:
  4765                           	callstack 0
  4766   0034FA                     _motorTRIS:
  4767                           	callstack 24
  4768   0034FA                     
  4769                           ;dc_motor.c: 253:     TRISEbits.TRISE2 = 0;
  4770   0034FA  9485               	bcf	133,2,c	;volatile
  4771                           
  4772                           ;dc_motor.c: 254:     TRISEbits.TRISE4 = 0;
  4773   0034FC  9885               	bcf	133,4,c	;volatile
  4774                           
  4775                           ;dc_motor.c: 255:     TRISCbits.TRISC7 = 0;
  4776   0034FE  9E83               	bcf	131,7,c	;volatile
  4777                           
  4778                           ;dc_motor.c: 256:     TRISGbits.TRISG6 = 0;
  4779   003500  9C87               	bcf	135,6,c	;volatile
  4780   003502  0012               	return		;funcret
  4781   003504                     __end_of_motorTRIS:
  4782                           	callstack 0
  4783                           
  4784 ;; *************** function _motorRinit *****************
  4785 ;; Defined at:
  4786 ;;		line 88 in file "dc_motor.c"
  4787 ;; Parameters:    Size  Location     Type
  4788 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  4789 ;;		 -> main@mR(9), 
  4790 ;; Auto vars:     Size  Location     Type
  4791 ;;		None
  4792 ;; Return value:  Size  Location     Type
  4793 ;;                  1    wreg      void 
  4794 ;; Registers used:
  4795 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4796 ;; Tracked objects:
  4797 ;;		On entry : 0/0
  4798 ;;		On exit  : 0/0
  4799 ;;		Unchanged: 0/0
  4800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4805 ;;Total ram usage:        2 bytes
  4806 ;; Hardware stack levels used: 1
  4807 ;; Hardware stack levels required when called: 6
  4808 ;; This function calls:
  4809 ;;		Nothing
  4810 ;; This function is called by:
  4811 ;;		_main
  4812 ;; This function uses a non-reentrant model
  4813 ;;
  4814                           
  4815                           	psect	text20
  4816   002FB8                     __ptext20:
  4817                           	callstack 0
  4818   002FB8                     _motorRinit:
  4819                           	callstack 24
  4820   002FB8                     
  4821                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  4822   002FB8  C009  FFD9         	movff	motorRinit@mR,fsr2l
  4823   002FBC  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  4824   002FC0  0E32               	movlw	50
  4825   002FC2  6EDF               	movwf	indf2,c
  4826   002FC4                     
  4827                           ;dc_motor.c: 91:     mR->direction = 1;
  4828   002FC4  EE20 F001          	lfsr	2,1
  4829   002FC8  5009               	movf	motorRinit@mR^0,w,c
  4830   002FCA  26D9               	addwf	fsr2l,f,c
  4831   002FCC  500A               	movf	(motorRinit@mR+1)^0,w,c
  4832   002FCE  22DA               	addwfc	fsr2h,f,c
  4833   002FD0  0E01               	movlw	1
  4834   002FD2  6EDF               	movwf	indf2,c
  4835   002FD4                     
  4836                           ;dc_motor.c: 92:     mR->brakemode = 1;
  4837   002FD4  EE20 F002          	lfsr	2,2
  4838   002FD8  5009               	movf	motorRinit@mR^0,w,c
  4839   002FDA  26D9               	addwf	fsr2l,f,c
  4840   002FDC  500A               	movf	(motorRinit@mR+1)^0,w,c
  4841   002FDE  22DA               	addwfc	fsr2h,f,c
  4842   002FE0  0E01               	movlw	1
  4843   002FE2  6EDF               	movwf	indf2,c
  4844   002FE4                     
  4845                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  4846   002FE4  EE20 F005          	lfsr	2,5
  4847   002FE8  5009               	movf	motorRinit@mR^0,w,c
  4848   002FEA  26D9               	addwf	fsr2l,f,c
  4849   002FEC  500A               	movf	(motorRinit@mR+1)^0,w,c
  4850   002FEE  22DA               	addwfc	fsr2h,f,c
  4851   002FF0  0E25               	movlw	37
  4852   002FF2  6EDE               	movwf	postinc2,c
  4853   002FF4  0E0F               	movlw	15
  4854   002FF6  6EDD               	movwf	postdec2,c
  4855   002FF8                     
  4856                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  4857   002FF8  EE20 F007          	lfsr	2,7
  4858   002FFC  5009               	movf	motorRinit@mR^0,w,c
  4859   002FFE  26D9               	addwf	fsr2l,f,c
  4860   003000  500A               	movf	(motorRinit@mR+1)^0,w,c
  4861   003002  22DA               	addwfc	fsr2h,f,c
  4862   003004  0E21               	movlw	33
  4863   003006  6EDE               	movwf	postinc2,c
  4864   003008  0E0F               	movlw	15
  4865   00300A  6EDD               	movwf	postdec2,c
  4866   00300C                     
  4867                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  4868   00300C  EE20 F003          	lfsr	2,3
  4869   003010  5009               	movf	motorRinit@mR^0,w,c
  4870   003012  26D9               	addwf	fsr2l,f,c
  4871   003014  500A               	movf	(motorRinit@mR+1)^0,w,c
  4872   003016  22DA               	addwfc	fsr2h,f,c
  4873   003018  0EC8               	movlw	200
  4874   00301A  6EDE               	movwf	postinc2,c
  4875   00301C  0E00               	movlw	0
  4876   00301E  6EDD               	movwf	postdec2,c
  4877   003020  0012               	return		;funcret
  4878   003022                     __end_of_motorRinit:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _motorLinit *****************
  4882 ;; Defined at:
  4883 ;;		line 78 in file "dc_motor.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  4886 ;;		 -> main@mL(9), 
  4887 ;; Auto vars:     Size  Location     Type
  4888 ;;		None
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  1    wreg      void 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;Total ram usage:        2 bytes
  4903 ;; Hardware stack levels used: 1
  4904 ;; Hardware stack levels required when called: 6
  4905 ;; This function calls:
  4906 ;;		Nothing
  4907 ;; This function is called by:
  4908 ;;		_main
  4909 ;; This function uses a non-reentrant model
  4910 ;;
  4911                           
  4912                           	psect	text21
  4913   003022                     __ptext21:
  4914                           	callstack 0
  4915   003022                     _motorLinit:
  4916                           	callstack 24
  4917   003022                     
  4918                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  4919   003022  C009  FFD9         	movff	motorLinit@mL,fsr2l
  4920   003026  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  4921   00302A  0E32               	movlw	50
  4922   00302C  6EDF               	movwf	indf2,c
  4923   00302E                     
  4924                           ;dc_motor.c: 81:     mL->direction = 1;
  4925   00302E  EE20 F001          	lfsr	2,1
  4926   003032  5009               	movf	motorLinit@mL^0,w,c
  4927   003034  26D9               	addwf	fsr2l,f,c
  4928   003036  500A               	movf	(motorLinit@mL+1)^0,w,c
  4929   003038  22DA               	addwfc	fsr2h,f,c
  4930   00303A  0E01               	movlw	1
  4931   00303C  6EDF               	movwf	indf2,c
  4932   00303E                     
  4933                           ;dc_motor.c: 82:     mL->brakemode = 1;
  4934   00303E  EE20 F002          	lfsr	2,2
  4935   003042  5009               	movf	motorLinit@mL^0,w,c
  4936   003044  26D9               	addwf	fsr2l,f,c
  4937   003046  500A               	movf	(motorLinit@mL+1)^0,w,c
  4938   003048  22DA               	addwfc	fsr2h,f,c
  4939   00304A  0E01               	movlw	1
  4940   00304C  6EDF               	movwf	indf2,c
  4941   00304E                     
  4942                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  4943   00304E  EE20 F005          	lfsr	2,5
  4944   003052  5009               	movf	motorLinit@mL^0,w,c
  4945   003054  26D9               	addwf	fsr2l,f,c
  4946   003056  500A               	movf	(motorLinit@mL+1)^0,w,c
  4947   003058  22DA               	addwfc	fsr2h,f,c
  4948   00305A  0EAA               	movlw	170
  4949   00305C  6EDE               	movwf	postinc2,c
  4950   00305E  0E0F               	movlw	15
  4951   003060  6EDD               	movwf	postdec2,c
  4952   003062                     
  4953                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  4954   003062  EE20 F007          	lfsr	2,7
  4955   003066  5009               	movf	motorLinit@mL^0,w,c
  4956   003068  26D9               	addwf	fsr2l,f,c
  4957   00306A  500A               	movf	(motorLinit@mL+1)^0,w,c
  4958   00306C  22DA               	addwfc	fsr2h,f,c
  4959   00306E  0EA6               	movlw	166
  4960   003070  6EDE               	movwf	postinc2,c
  4961   003072  0E0F               	movlw	15
  4962   003074  6EDD               	movwf	postdec2,c
  4963   003076                     
  4964                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  4965   003076  EE20 F003          	lfsr	2,3
  4966   00307A  5009               	movf	motorLinit@mL^0,w,c
  4967   00307C  26D9               	addwf	fsr2l,f,c
  4968   00307E  500A               	movf	(motorLinit@mL+1)^0,w,c
  4969   003080  22DA               	addwfc	fsr2h,f,c
  4970   003082  0EC8               	movlw	200
  4971   003084  6EDE               	movwf	postinc2,c
  4972   003086  0E00               	movlw	0
  4973   003088  6EDD               	movwf	postdec2,c
  4974   00308A  0012               	return		;funcret
  4975   00308C                     __end_of_motorLinit:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _initDCmotorsPWM *****************
  4979 ;; Defined at:
  4980 ;;		line 5 in file "dc_motor.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4994 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:        2 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; Hardware stack levels required when called: 6
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;; This function uses a non-reentrant model
  5006 ;;
  5007                           
  5008                           	psect	text22
  5009   002DE0                     __ptext22:
  5010                           	callstack 0
  5011   002DE0                     _initDCmotorsPWM:
  5012                           	callstack 24
  5013   002DE0                     
  5014                           ;dc_motor.c: 9:     RE2PPS=0x05;
  5015   002DE0  0E05               	movlw	5
  5016   002DE2  010E               	movlb	14	; () banked
  5017   002DE4  6F74               	movwf	116,b	;volatile
  5018                           
  5019                           ;dc_motor.c: 10:     RE4PPS=0x06;
  5020   002DE6  0E06               	movlw	6
  5021   002DE8  6F76               	movwf	118,b	;volatile
  5022                           
  5023                           ;dc_motor.c: 11:     RC7PPS=0x07;
  5024   002DEA  0E07               	movlw	7
  5025   002DEC  6F69               	movwf	105,b	;volatile
  5026                           
  5027                           ;dc_motor.c: 12:     RG6PPS=0x08;
  5028   002DEE  0E08               	movlw	8
  5029   002DF0  6F88               	movwf	136,b	;volatile
  5030                           
  5031                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  5032   002DF2  50BD               	movf	189,w,c	;volatile
  5033   002DF4  0B8F               	andlw	-113
  5034   002DF6  0930               	iorlw	48
  5035   002DF8  6EBD               	movwf	189,c	;volatile
  5036                           
  5037                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  5038   002DFA  0EE0               	movlw	-32
  5039   002DFC  16BE               	andwf	190,f,c	;volatile
  5040                           
  5041                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  5042   002DFE  50BF               	movf	191,w,c	;volatile
  5043   002E00  0BF0               	andlw	-16
  5044   002E02  0901               	iorlw	1
  5045   002E04  6EBF               	movwf	191,c	;volatile
  5046                           
  5047                           ;dc_motor.c: 21:     T2PR=200;
  5048   002E06  0EC8               	movlw	200
  5049   002E08  6EBC               	movwf	188,c	;volatile
  5050   002E0A                     
  5051                           ; BSR set to: 14
  5052                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  5053   002E0A  8EBD               	bsf	189,7,c	;volatile
  5054                           
  5055                           ;dc_motor.c: 26:     CCPR1H=0;
  5056   002E0C  0E00               	movlw	0
  5057   002E0E  6EAA               	movwf	170,c	;volatile
  5058                           
  5059                           ;dc_motor.c: 27:     CCPR2H=0;
  5060   002E10  0E00               	movlw	0
  5061   002E12  6EA6               	movwf	166,c	;volatile
  5062                           
  5063                           ;dc_motor.c: 28:     CCPR3H=0;
  5064   002E14  0E00               	movlw	0
  5065   002E16  010F               	movlb	15	; () banked
  5066   002E18  6F25               	movwf	37,b	;volatile
  5067                           
  5068                           ;dc_motor.c: 29:     CCPR4H=0;
  5069   002E1A  0E00               	movlw	0
  5070   002E1C  6F21               	movwf	33,b	;volatile
  5071                           
  5072                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  5073   002E1E  0EFC               	movlw	-4
  5074   002E20  16AD               	andwf	173,f,c	;volatile
  5075                           
  5076                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  5077   002E22  0EF3               	movlw	-13
  5078   002E24  16AD               	andwf	173,f,c	;volatile
  5079                           
  5080                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  5081   002E26  0ECF               	movlw	-49
  5082   002E28  16AD               	andwf	173,f,c	;volatile
  5083                           
  5084                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  5085   002E2A  0E3F               	movlw	-193
  5086   002E2C  16AD               	andwf	173,f,c	;volatile
  5087   002E2E                     
  5088                           ; BSR set to: 15
  5089                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  5090   002E2E  88AB               	bsf	171,4,c	;volatile
  5091                           
  5092                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  5093   002E30  50AB               	movf	171,w,c	;volatile
  5094   002E32  0BF0               	andlw	-16
  5095   002E34  090C               	iorlw	12
  5096   002E36  6EAB               	movwf	171,c	;volatile
  5097   002E38                     
  5098                           ; BSR set to: 15
  5099                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  5100   002E38  8EAB               	bsf	171,7,c	;volatile
  5101   002E3A                     
  5102                           ; BSR set to: 15
  5103                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  5104   002E3A  88A7               	bsf	167,4,c	;volatile
  5105                           
  5106                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  5107   002E3C  50A7               	movf	167,w,c	;volatile
  5108   002E3E  0BF0               	andlw	-16
  5109   002E40  090C               	iorlw	12
  5110   002E42  6EA7               	movwf	167,c	;volatile
  5111   002E44                     
  5112                           ; BSR set to: 15
  5113                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  5114   002E44  8EA7               	bsf	167,7,c	;volatile
  5115   002E46                     
  5116                           ; BSR set to: 15
  5117                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  5118   002E46  8926               	bsf	38,4,b	;volatile
  5119                           
  5120                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  5121   002E48  5126               	movf	38,w,b	;volatile
  5122   002E4A  0BF0               	andlw	-16
  5123   002E4C  090C               	iorlw	12
  5124   002E4E  6F26               	movwf	38,b	;volatile
  5125   002E50                     
  5126                           ; BSR set to: 15
  5127                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  5128   002E50  8F26               	bsf	38,7,b	;volatile
  5129   002E52                     
  5130                           ; BSR set to: 15
  5131                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  5132   002E52  8922               	bsf	34,4,b	;volatile
  5133                           
  5134                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  5135   002E54  5122               	movf	34,w,b	;volatile
  5136   002E56  0BF0               	andlw	-16
  5137   002E58  090C               	iorlw	12
  5138   002E5A  6F22               	movwf	34,b	;volatile
  5139   002E5C                     
  5140                           ; BSR set to: 15
  5141                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  5142   002E5C  8F22               	bsf	34,7,b	;volatile
  5143   002E5E                     
  5144                           ; BSR set to: 15
  5145   002E5E  0012               	return		;funcret
  5146   002E60                     __end_of_initDCmotorsPWM:
  5147                           	callstack 0
  5148                           
  5149 ;; *************** function _color_read_RGBC *****************
  5150 ;; Defined at:
  5151 ;;		line 91 in file "color.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  5154 ;;		 -> main@RGBC(32), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;Total ram usage:        2 bytes
  5171 ;; Hardware stack levels used: 1
  5172 ;; Hardware stack levels required when called: 9
  5173 ;; This function calls:
  5174 ;;		___xxtofl
  5175 ;;		_color_read_Blue
  5176 ;;		_color_read_Clear
  5177 ;;		_color_read_Green
  5178 ;;		_color_read_Red
  5179 ;; This function is called by:
  5180 ;;		_main
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text23
  5185   002D1A                     __ptext23:
  5186                           	callstack 0
  5187   002D1A                     _color_read_RGBC:
  5188                           	callstack 21
  5189   002D1A                     
  5190                           ;color.c: 92:     temp->R = color_read_Red();
  5191   002D1A  EC71  F018         	call	_color_read_Red	;wreg free
  5192   002D1E  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  5193   002D22  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  5194   002D26  6A16               	clrf	(___xxtofl@val+2)^0,c
  5195   002D28  6A17               	clrf	(___xxtofl@val+3)^0,c
  5196   002D2A  0E00               	movlw	0
  5197   002D2C  EC5D  F012         	call	___xxtofl
  5198   002D30  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  5199   002D34  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  5200   002D38  C014  FFDE         	movff	?___xxtofl,postinc2
  5201   002D3C  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5202   002D40  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5203   002D44  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5204                           
  5205                           ;color.c: 93:     temp->B = color_read_Blue();
  5206   002D48  ECE9  F018         	call	_color_read_Blue	;wreg free
  5207   002D4C  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  5208   002D50  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  5209   002D54  6A16               	clrf	(___xxtofl@val+2)^0,c
  5210   002D56  6A17               	clrf	(___xxtofl@val+3)^0,c
  5211   002D58  0E00               	movlw	0
  5212   002D5A  EC5D  F012         	call	___xxtofl
  5213   002D5E  EE20 F008          	lfsr	2,8
  5214   002D62  5022               	movf	color_read_RGBC@temp^0,w,c
  5215   002D64  26D9               	addwf	fsr2l,f,c
  5216   002D66  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5217   002D68  22DA               	addwfc	fsr2h,f,c
  5218   002D6A  C014  FFDE         	movff	?___xxtofl,postinc2
  5219   002D6E  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5220   002D72  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5221   002D76  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5222                           
  5223                           ;color.c: 94:     temp->G = color_read_Green();
  5224   002D7A  EC99  F018         	call	_color_read_Green	;wreg free
  5225   002D7E  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  5226   002D82  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  5227   002D86  6A16               	clrf	(___xxtofl@val+2)^0,c
  5228   002D88  6A17               	clrf	(___xxtofl@val+3)^0,c
  5229   002D8A  0E00               	movlw	0
  5230   002D8C  EC5D  F012         	call	___xxtofl
  5231   002D90  EE20 F004          	lfsr	2,4
  5232   002D94  5022               	movf	color_read_RGBC@temp^0,w,c
  5233   002D96  26D9               	addwf	fsr2l,f,c
  5234   002D98  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5235   002D9A  22DA               	addwfc	fsr2h,f,c
  5236   002D9C  C014  FFDE         	movff	?___xxtofl,postinc2
  5237   002DA0  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5238   002DA4  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5239   002DA8  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5240                           
  5241                           ;color.c: 95:     temp->C = color_read_Clear();
  5242   002DAC  ECC1  F018         	call	_color_read_Clear	;wreg free
  5243   002DB0  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  5244   002DB4  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  5245   002DB8  6A16               	clrf	(___xxtofl@val+2)^0,c
  5246   002DBA  6A17               	clrf	(___xxtofl@val+3)^0,c
  5247   002DBC  0E00               	movlw	0
  5248   002DBE  EC5D  F012         	call	___xxtofl
  5249   002DC2  EE20 F00C          	lfsr	2,12
  5250   002DC6  5022               	movf	color_read_RGBC@temp^0,w,c
  5251   002DC8  26D9               	addwf	fsr2l,f,c
  5252   002DCA  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  5253   002DCC  22DA               	addwfc	fsr2h,f,c
  5254   002DCE  C014  FFDE         	movff	?___xxtofl,postinc2
  5255   002DD2  C015  FFDE         	movff	?___xxtofl+1,postinc2
  5256   002DD6  C016  FFDE         	movff	?___xxtofl+2,postinc2
  5257   002DDA  C017  FFDE         	movff	?___xxtofl+3,postinc2
  5258   002DDE  0012               	return		;funcret
  5259   002DE0                     __end_of_color_read_RGBC:
  5260                           	callstack 0
  5261                           
  5262 ;; *************** function _color_read_Red *****************
  5263 ;; Defined at:
  5264 ;;		line 32 in file "color.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  tmp             2   17[COMRAM] unsigned int 
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2   12[COMRAM] unsigned int 
  5271 ;; Registers used:
  5272 ;;		wreg, status,2, status,0, cstack
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5278 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;Total ram usage:        7 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; Hardware stack levels required when called: 8
  5285 ;; This function calls:
  5286 ;;		_I2C_2_Master_Read
  5287 ;;		_I2C_2_Master_RepStart
  5288 ;;		_I2C_2_Master_Start
  5289 ;;		_I2C_2_Master_Stop
  5290 ;;		_I2C_2_Master_Write
  5291 ;; This function is called by:
  5292 ;;		_color_read_RGBC
  5293 ;; This function uses a non-reentrant model
  5294 ;;
  5295                           
  5296                           	psect	text24
  5297   0030E2                     __ptext24:
  5298                           	callstack 0
  5299   0030E2                     _color_read_Red:
  5300                           	callstack 21
  5301   0030E2                     
  5302                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  5303   0030E2  EC8C  F01A         	call	_I2C_2_Master_Start	;wreg free
  5304                           
  5305                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  5306   0030E6  0E52               	movlw	82
  5307   0030E8  EC6B  F01A         	call	_I2C_2_Master_Write
  5308                           
  5309                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  5310   0030EC  0EB6               	movlw	182
  5311   0030EE  EC6B  F01A         	call	_I2C_2_Master_Write
  5312                           
  5313                           ;color.c: 37:     I2C_2_Master_RepStart();
  5314   0030F2  EC82  F01A         	call	_I2C_2_Master_RepStart	;wreg free
  5315                           
  5316                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  5317   0030F6  0E53               	movlw	83
  5318   0030F8  EC6B  F01A         	call	_I2C_2_Master_Write
  5319                           
  5320                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  5321   0030FC  0E01               	movlw	1
  5322   0030FE  EC32  F019         	call	_I2C_2_Master_Read
  5323   003102  6E0F               	movwf	??_color_read_Red^0,c
  5324   003104  500F               	movf	??_color_read_Red^0,w,c
  5325   003106  6E12               	movwf	color_read_Red@tmp^0,c
  5326   003108  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  5327                           
  5328                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  5329   00310A  0E00               	movlw	0
  5330   00310C  EC32  F019         	call	_I2C_2_Master_Read
  5331   003110  6E0F               	movwf	??_color_read_Red^0,c
  5332   003112  500F               	movf	??_color_read_Red^0,w,c
  5333   003114  6E11               	movwf	(??_color_read_Red+2)^0,c
  5334   003116  6A10               	clrf	(??_color_read_Red+1)^0,c
  5335   003118  5012               	movf	color_read_Red@tmp^0,w,c
  5336   00311A  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  5337   00311C  6E12               	movwf	color_read_Red@tmp^0,c
  5338   00311E  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  5339   003120  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  5340   003122  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  5341                           
  5342                           ;color.c: 41:     I2C_2_Master_Stop();
  5343   003124  EC87  F01A         	call	_I2C_2_Master_Stop	;wreg free
  5344   003128                     
  5345                           ;color.c: 42:     return tmp;
  5346   003128  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  5347   00312C  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  5348   003130  0012               	return		;funcret
  5349   003132                     __end_of_color_read_Red:
  5350                           	callstack 0
  5351                           
  5352 ;; *************** function _color_read_Green *****************
  5353 ;; Defined at:
  5354 ;;		line 45 in file "color.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;		None
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  tmp             2   17[COMRAM] unsigned int 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;                  2   12[COMRAM] unsigned int 
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5369 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5370 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5371 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5372 ;;Total ram usage:        7 bytes
  5373 ;; Hardware stack levels used: 1
  5374 ;; Hardware stack levels required when called: 8
  5375 ;; This function calls:
  5376 ;;		_I2C_2_Master_Read
  5377 ;;		_I2C_2_Master_RepStart
  5378 ;;		_I2C_2_Master_Start
  5379 ;;		_I2C_2_Master_Stop
  5380 ;;		_I2C_2_Master_Write
  5381 ;; This function is called by:
  5382 ;;		_color_read_RGBC
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           	psect	text25
  5387   003132                     __ptext25:
  5388                           	callstack 0
  5389   003132                     _color_read_Green:
  5390                           	callstack 21
  5391   003132                     
  5392                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  5393   003132  EC8C  F01A         	call	_I2C_2_Master_Start	;wreg free
  5394                           
  5395                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  5396   003136  0E52               	movlw	82
  5397   003138  EC6B  F01A         	call	_I2C_2_Master_Write
  5398                           
  5399                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  5400   00313C  0EB8               	movlw	184
  5401   00313E  EC6B  F01A         	call	_I2C_2_Master_Write
  5402                           
  5403                           ;color.c: 50:     I2C_2_Master_RepStart();
  5404   003142  EC82  F01A         	call	_I2C_2_Master_RepStart	;wreg free
  5405                           
  5406                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  5407   003146  0E53               	movlw	83
  5408   003148  EC6B  F01A         	call	_I2C_2_Master_Write
  5409                           
  5410                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  5411   00314C  0E01               	movlw	1
  5412   00314E  EC32  F019         	call	_I2C_2_Master_Read
  5413   003152  6E0F               	movwf	??_color_read_Green^0,c
  5414   003154  500F               	movf	??_color_read_Green^0,w,c
  5415   003156  6E12               	movwf	color_read_Green@tmp^0,c
  5416   003158  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  5417                           
  5418                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  5419   00315A  0E00               	movlw	0
  5420   00315C  EC32  F019         	call	_I2C_2_Master_Read
  5421   003160  6E0F               	movwf	??_color_read_Green^0,c
  5422   003162  500F               	movf	??_color_read_Green^0,w,c
  5423   003164  6E11               	movwf	(??_color_read_Green+2)^0,c
  5424   003166  6A10               	clrf	(??_color_read_Green+1)^0,c
  5425   003168  5012               	movf	color_read_Green@tmp^0,w,c
  5426   00316A  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  5427   00316C  6E12               	movwf	color_read_Green@tmp^0,c
  5428   00316E  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  5429   003170  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  5430   003172  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  5431                           
  5432                           ;color.c: 54:     I2C_2_Master_Stop();
  5433   003174  EC87  F01A         	call	_I2C_2_Master_Stop	;wreg free
  5434   003178                     
  5435                           ;color.c: 55:     return tmp;
  5436   003178  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  5437   00317C  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  5438   003180  0012               	return		;funcret
  5439   003182                     __end_of_color_read_Green:
  5440                           	callstack 0
  5441                           
  5442 ;; *************** function _color_read_Clear *****************
  5443 ;; Defined at:
  5444 ;;		line 71 in file "color.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;		None
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  tmp             2   17[COMRAM] unsigned int 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;                  2   12[COMRAM] unsigned int 
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5462 ;;Total ram usage:        7 bytes
  5463 ;; Hardware stack levels used: 1
  5464 ;; Hardware stack levels required when called: 8
  5465 ;; This function calls:
  5466 ;;		_I2C_2_Master_Read
  5467 ;;		_I2C_2_Master_RepStart
  5468 ;;		_I2C_2_Master_Start
  5469 ;;		_I2C_2_Master_Stop
  5470 ;;		_I2C_2_Master_Write
  5471 ;; This function is called by:
  5472 ;;		_color_read_RGBC
  5473 ;; This function uses a non-reentrant model
  5474 ;;
  5475                           
  5476                           	psect	text26
  5477   003182                     __ptext26:
  5478                           	callstack 0
  5479   003182                     _color_read_Clear:
  5480                           	callstack 21
  5481   003182                     
  5482                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  5483   003182  EC8C  F01A         	call	_I2C_2_Master_Start	;wreg free
  5484                           
  5485                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  5486   003186  0E52               	movlw	82
  5487   003188  EC6B  F01A         	call	_I2C_2_Master_Write
  5488                           
  5489                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  5490   00318C  0EB4               	movlw	180
  5491   00318E  EC6B  F01A         	call	_I2C_2_Master_Write
  5492                           
  5493                           ;color.c: 76:     I2C_2_Master_RepStart();
  5494   003192  EC82  F01A         	call	_I2C_2_Master_RepStart	;wreg free
  5495                           
  5496                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  5497   003196  0E53               	movlw	83
  5498   003198  EC6B  F01A         	call	_I2C_2_Master_Write
  5499                           
  5500                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  5501   00319C  0E01               	movlw	1
  5502   00319E  EC32  F019         	call	_I2C_2_Master_Read
  5503   0031A2  6E0F               	movwf	??_color_read_Clear^0,c
  5504   0031A4  500F               	movf	??_color_read_Clear^0,w,c
  5505   0031A6  6E12               	movwf	color_read_Clear@tmp^0,c
  5506   0031A8  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  5507                           
  5508                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  5509   0031AA  0E00               	movlw	0
  5510   0031AC  EC32  F019         	call	_I2C_2_Master_Read
  5511   0031B0  6E0F               	movwf	??_color_read_Clear^0,c
  5512   0031B2  500F               	movf	??_color_read_Clear^0,w,c
  5513   0031B4  6E11               	movwf	(??_color_read_Clear+2)^0,c
  5514   0031B6  6A10               	clrf	(??_color_read_Clear+1)^0,c
  5515   0031B8  5012               	movf	color_read_Clear@tmp^0,w,c
  5516   0031BA  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  5517   0031BC  6E12               	movwf	color_read_Clear@tmp^0,c
  5518   0031BE  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  5519   0031C0  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  5520   0031C2  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  5521                           
  5522                           ;color.c: 80:     I2C_2_Master_Stop();
  5523   0031C4  EC87  F01A         	call	_I2C_2_Master_Stop	;wreg free
  5524   0031C8                     
  5525                           ;color.c: 81:     return tmp;
  5526   0031C8  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  5527   0031CC  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  5528   0031D0  0012               	return		;funcret
  5529   0031D2                     __end_of_color_read_Clear:
  5530                           	callstack 0
  5531                           
  5532 ;; *************** function _color_read_Blue *****************
  5533 ;; Defined at:
  5534 ;;		line 58 in file "color.c"
  5535 ;; Parameters:    Size  Location     Type
  5536 ;;		None
  5537 ;; Auto vars:     Size  Location     Type
  5538 ;;  tmp             2   17[COMRAM] unsigned int 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  2   12[COMRAM] unsigned int 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5548 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5549 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5550 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5551 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5552 ;;Total ram usage:        7 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 8
  5555 ;; This function calls:
  5556 ;;		_I2C_2_Master_Read
  5557 ;;		_I2C_2_Master_RepStart
  5558 ;;		_I2C_2_Master_Start
  5559 ;;		_I2C_2_Master_Stop
  5560 ;;		_I2C_2_Master_Write
  5561 ;; This function is called by:
  5562 ;;		_color_read_RGBC
  5563 ;; This function uses a non-reentrant model
  5564 ;;
  5565                           
  5566                           	psect	text27
  5567   0031D2                     __ptext27:
  5568                           	callstack 0
  5569   0031D2                     _color_read_Blue:
  5570                           	callstack 21
  5571   0031D2                     
  5572                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  5573   0031D2  EC8C  F01A         	call	_I2C_2_Master_Start	;wreg free
  5574                           
  5575                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  5576   0031D6  0E52               	movlw	82
  5577   0031D8  EC6B  F01A         	call	_I2C_2_Master_Write
  5578                           
  5579                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  5580   0031DC  0EBA               	movlw	186
  5581   0031DE  EC6B  F01A         	call	_I2C_2_Master_Write
  5582                           
  5583                           ;color.c: 63:     I2C_2_Master_RepStart();
  5584   0031E2  EC82  F01A         	call	_I2C_2_Master_RepStart	;wreg free
  5585                           
  5586                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  5587   0031E6  0E53               	movlw	83
  5588   0031E8  EC6B  F01A         	call	_I2C_2_Master_Write
  5589                           
  5590                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  5591   0031EC  0E01               	movlw	1
  5592   0031EE  EC32  F019         	call	_I2C_2_Master_Read
  5593   0031F2  6E0F               	movwf	??_color_read_Blue^0,c
  5594   0031F4  500F               	movf	??_color_read_Blue^0,w,c
  5595   0031F6  6E12               	movwf	color_read_Blue@tmp^0,c
  5596   0031F8  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  5597                           
  5598                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  5599   0031FA  0E00               	movlw	0
  5600   0031FC  EC32  F019         	call	_I2C_2_Master_Read
  5601   003200  6E0F               	movwf	??_color_read_Blue^0,c
  5602   003202  500F               	movf	??_color_read_Blue^0,w,c
  5603   003204  6E11               	movwf	(??_color_read_Blue+2)^0,c
  5604   003206  6A10               	clrf	(??_color_read_Blue+1)^0,c
  5605   003208  5012               	movf	color_read_Blue@tmp^0,w,c
  5606   00320A  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  5607   00320C  6E12               	movwf	color_read_Blue@tmp^0,c
  5608   00320E  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  5609   003210  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  5610   003212  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  5611                           
  5612                           ;color.c: 67:     I2C_2_Master_Stop();
  5613   003214  EC87  F01A         	call	_I2C_2_Master_Stop	;wreg free
  5614   003218                     
  5615                           ;color.c: 68:     return tmp;
  5616   003218  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  5617   00321C  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  5618   003220  0012               	return		;funcret
  5619   003222                     __end_of_color_read_Blue:
  5620                           	callstack 0
  5621                           
  5622 ;; *************** function _I2C_2_Master_RepStart *****************
  5623 ;; Defined at:
  5624 ;;		line 33 in file "i2c.c"
  5625 ;; Parameters:    Size  Location     Type
  5626 ;;		None
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;		None
  5629 ;; Return value:  Size  Location     Type
  5630 ;;                  1    wreg      void 
  5631 ;; Registers used:
  5632 ;;		wreg, status,2, status,0, cstack
  5633 ;; Tracked objects:
  5634 ;;		On entry : 0/0
  5635 ;;		On exit  : 0/0
  5636 ;;		Unchanged: 0/0
  5637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;Total ram usage:        0 bytes
  5643 ;; Hardware stack levels used: 1
  5644 ;; Hardware stack levels required when called: 7
  5645 ;; This function calls:
  5646 ;;		_I2C_2_Master_Idle
  5647 ;; This function is called by:
  5648 ;;		_color_read_Red
  5649 ;;		_color_read_Green
  5650 ;;		_color_read_Blue
  5651 ;;		_color_read_Clear
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text28
  5656   003504                     __ptext28:
  5657                           	callstack 0
  5658   003504                     _I2C_2_Master_RepStart:
  5659                           	callstack 21
  5660   003504                     
  5661                           ;i2c.c: 35:   I2C_2_Master_Idle();
  5662   003504  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  5663   003508                     
  5664                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  5665   003508  010E               	movlb	14	; () banked
  5666   00350A  83DA               	bsf	218,1,b	;volatile
  5667   00350C                     
  5668                           ; BSR set to: 14
  5669   00350C  0012               	return		;funcret
  5670   00350E                     __end_of_I2C_2_Master_RepStart:
  5671                           	callstack 0
  5672                           
  5673 ;; *************** function _I2C_2_Master_Read *****************
  5674 ;; Defined at:
  5675 ;;		line 51 in file "i2c.c"
  5676 ;; Parameters:    Size  Location     Type
  5677 ;;  ack             1    wreg     unsigned char 
  5678 ;; Auto vars:     Size  Location     Type
  5679 ;;  ack             1   10[COMRAM] unsigned char 
  5680 ;;  tmp             1   11[COMRAM] unsigned char 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      unsigned char 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5693 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5694 ;;Total ram usage:        3 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 7
  5697 ;; This function calls:
  5698 ;;		_I2C_2_Master_Idle
  5699 ;; This function is called by:
  5700 ;;		_color_read_Red
  5701 ;;		_color_read_Green
  5702 ;;		_color_read_Blue
  5703 ;;		_color_read_Clear
  5704 ;; This function uses a non-reentrant model
  5705 ;;
  5706                           
  5707                           	psect	text29
  5708   003264                     __ptext29:
  5709                           	callstack 0
  5710   003264                     _I2C_2_Master_Read:
  5711                           	callstack 21
  5712                           
  5713                           ; BSR set to: 14
  5714                           ;incstack = 0
  5715                           ;I2C_2_Master_Read@ack stored from wreg
  5716   003264  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  5717   003266                     
  5718                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  5719   003266  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  5720   00326A                     
  5721                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  5722   00326A  010E               	movlb	14	; () banked
  5723   00326C  87DA               	bsf	218,3,b	;volatile
  5724                           
  5725                           ;i2c.c: 56:   I2C_2_Master_Idle();
  5726   00326E  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  5727   003272                     
  5728                           ;i2c.c: 57:   tmp = SSP2BUF;
  5729   003272  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  5730                           
  5731                           ;i2c.c: 58:   I2C_2_Master_Idle();
  5732   003276  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  5733   00327A                     
  5734                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  5735   00327A  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  5736   00327C  B4D8               	btfsc	status,2,c
  5737   00327E  EF43  F019         	goto	u1361
  5738   003282  EF47  F019         	goto	u1360
  5739   003286                     u1361:
  5740   003286  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5741   003288  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  5742   00328A  EF48  F019         	goto	u1378
  5743   00328E                     u1360:
  5744   00328E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  5745   003290                     u1378:
  5746   003290  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  5747   003292  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  5748   003294  010E               	movlb	14	; () banked
  5749   003296  51DA               	movf	218,w,b	;volatile
  5750   003298  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5751   00329A  0BDF               	andlw	-33
  5752   00329C  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  5753   00329E  6FDA               	movwf	218,b	;volatile
  5754   0032A0                     
  5755                           ; BSR set to: 14
  5756                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  5757   0032A0  89DA               	bsf	218,4,b	;volatile
  5758   0032A2                     
  5759                           ; BSR set to: 14
  5760                           ;i2c.c: 61:   return tmp;
  5761   0032A2  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  5762   0032A4                     
  5763                           ; BSR set to: 14
  5764   0032A4  0012               	return		;funcret
  5765   0032A6                     __end_of_I2C_2_Master_Read:
  5766                           	callstack 0
  5767                           
  5768 ;; *************** function _color_normalise *****************
  5769 ;; Defined at:
  5770 ;;		line 99 in file "color.c"
  5771 ;; Parameters:    Size  Location     Type
  5772 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  5773 ;;		 -> main@RGBC(32), 
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5788 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5789 ;;Total ram usage:        2 bytes
  5790 ;; Hardware stack levels used: 1
  5791 ;; Hardware stack levels required when called: 7
  5792 ;; This function calls:
  5793 ;;		___fldiv
  5794 ;;		___xxtofl
  5795 ;; This function is called by:
  5796 ;;		_main
  5797 ;; This function uses a non-reentrant model
  5798 ;;
  5799                           
  5800                           	psect	text30
  5801   00266E                     __ptext30:
  5802                           	callstack 0
  5803   00266E                     _color_normalise:
  5804                           	callstack 23
  5805   00266E                     
  5806                           ;color.c: 100:     amb_clear = 2385;
  5807   00266E  0E09               	movlw	9
  5808   002670  6E40               	movwf	(_amb_clear+1)^0,c
  5809   002672  0E51               	movlw	81
  5810   002674  6E3F               	movwf	_amb_clear^0,c
  5811   002676                     
  5812                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  5813   002676  EE20 F00C          	lfsr	2,12
  5814   00267A  503B               	movf	color_normalise@RGBC^0,w,c
  5815   00267C  26D9               	addwf	fsr2l,f,c
  5816   00267E  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5817   002680  22DA               	addwfc	fsr2h,f,c
  5818   002682  CFDE F022          	movff	postinc2,___fldiv@b
  5819   002686  CFDE F023          	movff	postinc2,___fldiv@b+1
  5820   00268A  CFDE F024          	movff	postinc2,___fldiv@b+2
  5821   00268E  CFDE F025          	movff	postinc2,___fldiv@b+3
  5822   002692  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  5823   002696  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  5824   00269A  CFDE F026          	movff	postinc2,___fldiv@a
  5825   00269E  CFDE F027          	movff	postinc2,___fldiv@a+1
  5826   0026A2  CFDE F028          	movff	postinc2,___fldiv@a+2
  5827   0026A6  CFDE F029          	movff	postinc2,___fldiv@a+3
  5828   0026AA  EC1F  F00F         	call	___fldiv	;wreg free
  5829   0026AE  EE20 F010          	lfsr	2,16
  5830   0026B2  503B               	movf	color_normalise@RGBC^0,w,c
  5831   0026B4  26D9               	addwf	fsr2l,f,c
  5832   0026B6  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5833   0026B8  22DA               	addwfc	fsr2h,f,c
  5834   0026BA  C022  FFDE         	movff	?___fldiv,postinc2
  5835   0026BE  C023  FFDE         	movff	?___fldiv+1,postinc2
  5836   0026C2  C024  FFDE         	movff	?___fldiv+2,postinc2
  5837   0026C6  C025  FFDE         	movff	?___fldiv+3,postinc2
  5838   0026CA                     
  5839                           ;color.c: 102:     RGBC->norm_G = RGBC->C / RGBC->G;
  5840   0026CA  EE20 F00C          	lfsr	2,12
  5841   0026CE  503B               	movf	color_normalise@RGBC^0,w,c
  5842   0026D0  26D9               	addwf	fsr2l,f,c
  5843   0026D2  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5844   0026D4  22DA               	addwfc	fsr2h,f,c
  5845   0026D6  CFDE F022          	movff	postinc2,___fldiv@b
  5846   0026DA  CFDE F023          	movff	postinc2,___fldiv@b+1
  5847   0026DE  CFDE F024          	movff	postinc2,___fldiv@b+2
  5848   0026E2  CFDE F025          	movff	postinc2,___fldiv@b+3
  5849   0026E6  EE20 F004          	lfsr	2,4
  5850   0026EA  503B               	movf	color_normalise@RGBC^0,w,c
  5851   0026EC  26D9               	addwf	fsr2l,f,c
  5852   0026EE  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5853   0026F0  22DA               	addwfc	fsr2h,f,c
  5854   0026F2  CFDE F026          	movff	postinc2,___fldiv@a
  5855   0026F6  CFDE F027          	movff	postinc2,___fldiv@a+1
  5856   0026FA  CFDE F028          	movff	postinc2,___fldiv@a+2
  5857   0026FE  CFDE F029          	movff	postinc2,___fldiv@a+3
  5858   002702  EC1F  F00F         	call	___fldiv	;wreg free
  5859   002706  EE20 F014          	lfsr	2,20
  5860   00270A  503B               	movf	color_normalise@RGBC^0,w,c
  5861   00270C  26D9               	addwf	fsr2l,f,c
  5862   00270E  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5863   002710  22DA               	addwfc	fsr2h,f,c
  5864   002712  C022  FFDE         	movff	?___fldiv,postinc2
  5865   002716  C023  FFDE         	movff	?___fldiv+1,postinc2
  5866   00271A  C024  FFDE         	movff	?___fldiv+2,postinc2
  5867   00271E  C025  FFDE         	movff	?___fldiv+3,postinc2
  5868   002722                     
  5869                           ;color.c: 103:     RGBC->norm_B = RGBC->C / RGBC->B;
  5870   002722  EE20 F00C          	lfsr	2,12
  5871   002726  503B               	movf	color_normalise@RGBC^0,w,c
  5872   002728  26D9               	addwf	fsr2l,f,c
  5873   00272A  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5874   00272C  22DA               	addwfc	fsr2h,f,c
  5875   00272E  CFDE F022          	movff	postinc2,___fldiv@b
  5876   002732  CFDE F023          	movff	postinc2,___fldiv@b+1
  5877   002736  CFDE F024          	movff	postinc2,___fldiv@b+2
  5878   00273A  CFDE F025          	movff	postinc2,___fldiv@b+3
  5879   00273E  EE20 F008          	lfsr	2,8
  5880   002742  503B               	movf	color_normalise@RGBC^0,w,c
  5881   002744  26D9               	addwf	fsr2l,f,c
  5882   002746  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5883   002748  22DA               	addwfc	fsr2h,f,c
  5884   00274A  CFDE F026          	movff	postinc2,___fldiv@a
  5885   00274E  CFDE F027          	movff	postinc2,___fldiv@a+1
  5886   002752  CFDE F028          	movff	postinc2,___fldiv@a+2
  5887   002756  CFDE F029          	movff	postinc2,___fldiv@a+3
  5888   00275A  EC1F  F00F         	call	___fldiv	;wreg free
  5889   00275E  EE20 F018          	lfsr	2,24
  5890   002762  503B               	movf	color_normalise@RGBC^0,w,c
  5891   002764  26D9               	addwf	fsr2l,f,c
  5892   002766  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5893   002768  22DA               	addwfc	fsr2h,f,c
  5894   00276A  C022  FFDE         	movff	?___fldiv,postinc2
  5895   00276E  C023  FFDE         	movff	?___fldiv+1,postinc2
  5896   002772  C024  FFDE         	movff	?___fldiv+2,postinc2
  5897   002776  C025  FFDE         	movff	?___fldiv+3,postinc2
  5898   00277A                     
  5899                           ;color.c: 104:     RGBC->norm_C = RGBC->C / amb_clear;
  5900   00277A  EE20 F00C          	lfsr	2,12
  5901   00277E  503B               	movf	color_normalise@RGBC^0,w,c
  5902   002780  26D9               	addwf	fsr2l,f,c
  5903   002782  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5904   002784  22DA               	addwfc	fsr2h,f,c
  5905   002786  CFDE F022          	movff	postinc2,___fldiv@b
  5906   00278A  CFDE F023          	movff	postinc2,___fldiv@b+1
  5907   00278E  CFDE F024          	movff	postinc2,___fldiv@b+2
  5908   002792  CFDE F025          	movff	postinc2,___fldiv@b+3
  5909   002796  0E51               	movlw	81
  5910   002798  6E14               	movwf	___xxtofl@val^0,c
  5911   00279A  0E09               	movlw	9
  5912   00279C  6E15               	movwf	(___xxtofl@val+1)^0,c
  5913   00279E  0E00               	movlw	0
  5914   0027A0  6E16               	movwf	(___xxtofl@val+2)^0,c
  5915   0027A2  0E00               	movlw	0
  5916   0027A4  6E17               	movwf	(___xxtofl@val+3)^0,c
  5917   0027A6  0E01               	movlw	1
  5918   0027A8  EC5D  F012         	call	___xxtofl
  5919   0027AC  C014  F026         	movff	?___xxtofl,___fldiv@a
  5920   0027B0  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  5921   0027B4  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  5922   0027B8  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  5923   0027BC  EC1F  F00F         	call	___fldiv	;wreg free
  5924   0027C0  EE20 F01C          	lfsr	2,28
  5925   0027C4  503B               	movf	color_normalise@RGBC^0,w,c
  5926   0027C6  26D9               	addwf	fsr2l,f,c
  5927   0027C8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  5928   0027CA  22DA               	addwfc	fsr2h,f,c
  5929   0027CC  C022  FFDE         	movff	?___fldiv,postinc2
  5930   0027D0  C023  FFDE         	movff	?___fldiv+1,postinc2
  5931   0027D4  C024  FFDE         	movff	?___fldiv+2,postinc2
  5932   0027D8  C025  FFDE         	movff	?___fldiv+3,postinc2
  5933   0027DC  0012               	return		;funcret
  5934   0027DE                     __end_of_color_normalise:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function ___xxtofl *****************
  5938 ;; Defined at:
  5939 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  sign            1    wreg     unsigned char 
  5942 ;;  val             4   19[COMRAM] long 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  sign            1   27[COMRAM] unsigned char 
  5945 ;;  arg             4   29[COMRAM] unsigned long 
  5946 ;;  exp             1   28[COMRAM] unsigned char 
  5947 ;; Return value:  Size  Location     Type
  5948 ;;                  4   19[COMRAM] unsigned char 
  5949 ;; Registers used:
  5950 ;;		wreg, status,2, status,0
  5951 ;; Tracked objects:
  5952 ;;		On entry : 0/0
  5953 ;;		On exit  : 0/0
  5954 ;;		Unchanged: 0/0
  5955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5956 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5958 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5959 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5960 ;;Total ram usage:       14 bytes
  5961 ;; Hardware stack levels used: 1
  5962 ;; Hardware stack levels required when called: 6
  5963 ;; This function calls:
  5964 ;;		Nothing
  5965 ;; This function is called by:
  5966 ;;		_color_read_RGBC
  5967 ;;		_color_normalise
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text31
  5972   0024BA                     __ptext31:
  5973                           	callstack 0
  5974   0024BA                     ___xxtofl:
  5975                           	callstack 23
  5976                           
  5977                           ;incstack = 0
  5978                           ;___xxtofl@sign stored from wreg
  5979   0024BA  6E1C               	movwf	___xxtofl@sign^0,c
  5980   0024BC  501C               	movf	___xxtofl@sign^0,w,c
  5981   0024BE  B4D8               	btfsc	status,2,c
  5982   0024C0  EF64  F012         	goto	u1701
  5983   0024C4  EF66  F012         	goto	u1700
  5984   0024C8                     u1701:
  5985   0024C8  EF88  F012         	goto	l1305
  5986   0024CC                     u1700:
  5987   0024CC  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  5988   0024CE  EF6D  F012         	goto	u1710
  5989   0024D2  EF6B  F012         	goto	u1711
  5990   0024D6                     u1711:
  5991   0024D6  EF88  F012         	goto	l1305
  5992   0024DA                     u1710:
  5993   0024DA  C014  F018         	movff	___xxtofl@val,??___xxtofl
  5994   0024DE  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  5995   0024E2  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  5996   0024E6  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  5997   0024EA  1E18               	comf	??___xxtofl^0,f,c
  5998   0024EC  1E19               	comf	(??___xxtofl+1)^0,f,c
  5999   0024EE  1E1A               	comf	(??___xxtofl+2)^0,f,c
  6000   0024F0  1E1B               	comf	(??___xxtofl+3)^0,f,c
  6001   0024F2  2A18               	incf	??___xxtofl^0,f,c
  6002   0024F4  0E00               	movlw	0
  6003   0024F6  2219               	addwfc	(??___xxtofl+1)^0,f,c
  6004   0024F8  221A               	addwfc	(??___xxtofl+2)^0,f,c
  6005   0024FA  221B               	addwfc	(??___xxtofl+3)^0,f,c
  6006   0024FC  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  6007   002500  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  6008   002504  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  6009   002508  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  6010   00250C  EF90  F012         	goto	l2780
  6011   002510                     l1305:
  6012   002510  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  6013   002514  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6014   002518  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6015   00251C  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6016   002520                     l2780:
  6017   002520  5014               	movf	___xxtofl@val^0,w,c
  6018   002522  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  6019   002524  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  6020   002526  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  6021   002528  A4D8               	btfss	status,2,c
  6022   00252A  EF99  F012         	goto	u1721
  6023   00252E  EF9B  F012         	goto	u1720
  6024   002532                     u1721:
  6025   002532  EFA5  F012         	goto	l2786
  6026   002536                     u1720:
  6027   002536  0E00               	movlw	0
  6028   002538  6E14               	movwf	?___xxtofl^0,c
  6029   00253A  0E00               	movlw	0
  6030   00253C  6E15               	movwf	(?___xxtofl+1)^0,c
  6031   00253E  0E00               	movlw	0
  6032   002540  6E16               	movwf	(?___xxtofl+2)^0,c
  6033   002542  0E00               	movlw	0
  6034   002544  6E17               	movwf	(?___xxtofl+3)^0,c
  6035   002546  EF36  F013         	goto	l1308
  6036   00254A                     l2786:
  6037   00254A  0E96               	movlw	150
  6038   00254C  6E1D               	movwf	___xxtofl@exp^0,c
  6039   00254E  EFAF  F012         	goto	l2790
  6040   002552                     l2788:
  6041   002552  2A1D               	incf	___xxtofl@exp^0,f,c
  6042   002554  90D8               	bcf	status,0,c
  6043   002556  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  6044   002558  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  6045   00255A  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6046   00255C  321E               	rrcf	___xxtofl@arg^0,f,c
  6047   00255E                     l2790:
  6048   00255E  0E00               	movlw	0
  6049   002560  141E               	andwf	___xxtofl@arg^0,w,c
  6050   002562  6E18               	movwf	??___xxtofl^0,c
  6051   002564  0E00               	movlw	0
  6052   002566  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  6053   002568  6E19               	movwf	(??___xxtofl+1)^0,c
  6054   00256A  0E00               	movlw	0
  6055   00256C  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  6056   00256E  6E1A               	movwf	(??___xxtofl+2)^0,c
  6057   002570  0EFE               	movlw	254
  6058   002572  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  6059   002574  6E1B               	movwf	(??___xxtofl+3)^0,c
  6060   002576  5018               	movf	??___xxtofl^0,w,c
  6061   002578  1019               	iorwf	(??___xxtofl+1)^0,w,c
  6062   00257A  101A               	iorwf	(??___xxtofl+2)^0,w,c
  6063   00257C  101B               	iorwf	(??___xxtofl+3)^0,w,c
  6064   00257E  A4D8               	btfss	status,2,c
  6065   002580  EFC4  F012         	goto	u1731
  6066   002584  EFC6  F012         	goto	u1730
  6067   002588                     u1731:
  6068   002588  EFA9  F012         	goto	l2788
  6069   00258C                     u1730:
  6070   00258C  EFD4  F012         	goto	l1312
  6071   002590                     l2792:
  6072   002590  2A1D               	incf	___xxtofl@exp^0,f,c
  6073   002592  0E01               	movlw	1
  6074   002594  261E               	addwf	___xxtofl@arg^0,f,c
  6075   002596  0E00               	movlw	0
  6076   002598  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  6077   00259A  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  6078   00259C  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  6079   00259E  90D8               	bcf	status,0,c
  6080   0025A0  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  6081   0025A2  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  6082   0025A4  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  6083   0025A6  321E               	rrcf	___xxtofl@arg^0,f,c
  6084   0025A8                     l1312:
  6085   0025A8  0E00               	movlw	0
  6086   0025AA  141E               	andwf	___xxtofl@arg^0,w,c
  6087   0025AC  6E18               	movwf	??___xxtofl^0,c
  6088   0025AE  0E00               	movlw	0
  6089   0025B0  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  6090   0025B2  6E19               	movwf	(??___xxtofl+1)^0,c
  6091   0025B4  0E00               	movlw	0
  6092   0025B6  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  6093   0025B8  6E1A               	movwf	(??___xxtofl+2)^0,c
  6094   0025BA  0EFF               	movlw	255
  6095   0025BC  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  6096   0025BE  6E1B               	movwf	(??___xxtofl+3)^0,c
  6097   0025C0  5018               	movf	??___xxtofl^0,w,c
  6098   0025C2  1019               	iorwf	(??___xxtofl+1)^0,w,c
  6099   0025C4  101A               	iorwf	(??___xxtofl+2)^0,w,c
  6100   0025C6  101B               	iorwf	(??___xxtofl+3)^0,w,c
  6101   0025C8  A4D8               	btfss	status,2,c
  6102   0025CA  EFE9  F012         	goto	u1741
  6103   0025CE  EFEB  F012         	goto	u1740
  6104   0025D2                     u1741:
  6105   0025D2  EFC8  F012         	goto	l2792
  6106   0025D6                     u1740:
  6107   0025D6  EFF3  F012         	goto	l2800
  6108   0025DA                     l2798:
  6109   0025DA  061D               	decf	___xxtofl@exp^0,f,c
  6110   0025DC  90D8               	bcf	status,0,c
  6111   0025DE  361E               	rlcf	___xxtofl@arg^0,f,c
  6112   0025E0  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  6113   0025E2  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  6114   0025E4  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  6115   0025E6                     l2800:
  6116   0025E6  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  6117   0025E8  EFF8  F012         	goto	u1751
  6118   0025EC  EFFA  F012         	goto	u1750
  6119   0025F0                     u1751:
  6120   0025F0  EF02  F013         	goto	l1319
  6121   0025F4                     u1750:
  6122   0025F4  0E02               	movlw	2
  6123   0025F6  601D               	cpfslt	___xxtofl@exp^0,c
  6124   0025F8  EF00  F013         	goto	u1761
  6125   0025FC  EF02  F013         	goto	u1760
  6126   002600                     u1761:
  6127   002600  EFED  F012         	goto	l2798
  6128   002604                     u1760:
  6129   002604                     l1319:
  6130   002604  B01D               	btfsc	___xxtofl@exp^0,0,c
  6131   002606  EF07  F013         	goto	u1771
  6132   00260A  EF09  F013         	goto	u1770
  6133   00260E                     u1771:
  6134   00260E  EF0A  F013         	goto	l2806
  6135   002612                     u1770:
  6136   002612  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  6137   002614                     l2806:
  6138   002614  90D8               	bcf	status,0,c
  6139   002616  321D               	rrcf	___xxtofl@exp^0,f,c
  6140   002618  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  6141   00261C  6A19               	clrf	(??___xxtofl+1)^0,c
  6142   00261E  6A1A               	clrf	(??___xxtofl+2)^0,c
  6143   002620  6A1B               	clrf	(??___xxtofl+3)^0,c
  6144   002622  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  6145   002626  6A1A               	clrf	(??___xxtofl+2)^0,c
  6146   002628  6A19               	clrf	(??___xxtofl+1)^0,c
  6147   00262A  6A18               	clrf	??___xxtofl^0,c
  6148   00262C  5018               	movf	??___xxtofl^0,w,c
  6149   00262E  121E               	iorwf	___xxtofl@arg^0,f,c
  6150   002630  5019               	movf	(??___xxtofl+1)^0,w,c
  6151   002632  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  6152   002634  501A               	movf	(??___xxtofl+2)^0,w,c
  6153   002636  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  6154   002638  501B               	movf	(??___xxtofl+3)^0,w,c
  6155   00263A  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  6156   00263C  501C               	movf	___xxtofl@sign^0,w,c
  6157   00263E  B4D8               	btfsc	status,2,c
  6158   002640  EF24  F013         	goto	u1781
  6159   002644  EF26  F013         	goto	u1780
  6160   002648                     u1781:
  6161   002648  EF2E  F013         	goto	l2816
  6162   00264C                     u1780:
  6163   00264C  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  6164   00264E  EF2D  F013         	goto	u1790
  6165   002652  EF2B  F013         	goto	u1791
  6166   002656                     u1791:
  6167   002656  EF2E  F013         	goto	l2816
  6168   00265A                     u1790:
  6169   00265A  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  6170   00265C                     l2816:
  6171   00265C  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  6172   002660  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  6173   002664  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  6174   002668  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  6175   00266C                     l1308:
  6176   00266C  0012               	return		;funcret
  6177   00266E                     __end_of___xxtofl:
  6178                           	callstack 0
  6179                           
  6180 ;; *************** function ___fldiv *****************
  6181 ;; Defined at:
  6182 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  6183 ;; Parameters:    Size  Location     Type
  6184 ;;  b               4   33[COMRAM] unsigned char 
  6185 ;;  a               4   37[COMRAM] unsigned char 
  6186 ;; Auto vars:     Size  Location     Type
  6187 ;;  grs             4   52[COMRAM] unsigned long 
  6188 ;;  rem             4   45[COMRAM] unsigned long 
  6189 ;;  new_exp         2   50[COMRAM] short 
  6190 ;;  aexp            1   57[COMRAM] unsigned char 
  6191 ;;  bexp            1   56[COMRAM] unsigned char 
  6192 ;;  sign            1   49[COMRAM] unsigned char 
  6193 ;; Return value:  Size  Location     Type
  6194 ;;                  4   33[COMRAM] unsigned char 
  6195 ;; Registers used:
  6196 ;;		wreg, status,2, status,0
  6197 ;; Tracked objects:
  6198 ;;		On entry : 0/0
  6199 ;;		On exit  : 0/0
  6200 ;;		Unchanged: 0/0
  6201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6202 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6204 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6205 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6206 ;;Total ram usage:       25 bytes
  6207 ;; Hardware stack levels used: 1
  6208 ;; Hardware stack levels required when called: 6
  6209 ;; This function calls:
  6210 ;;		Nothing
  6211 ;; This function is called by:
  6212 ;;		_color_normalise
  6213 ;; This function uses a non-reentrant model
  6214 ;;
  6215                           
  6216                           	psect	text32
  6217   001E3E                     __ptext32:
  6218                           	callstack 0
  6219   001E3E                     ___fldiv:
  6220                           	callstack 23
  6221   001E3E  5025               	movf	(___fldiv@b+3)^0,w,c
  6222   001E40  0B80               	andlw	128
  6223   001E42  6E32               	movwf	___fldiv@sign^0,c
  6224   001E44  5025               	movf	(___fldiv@b+3)^0,w,c
  6225   001E46  2425               	addwf	(___fldiv@b+3)^0,w,c
  6226   001E48  6E39               	movwf	___fldiv@bexp^0,c
  6227   001E4A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6228   001E4C  EF2A  F00F         	goto	u1421
  6229   001E50  EF2C  F00F         	goto	u1420
  6230   001E54                     u1421:
  6231   001E54  EF2D  F00F         	goto	l2620
  6232   001E58                     u1420:
  6233   001E58  8039               	bsf	___fldiv@bexp^0,0,c
  6234   001E5A                     l2620:
  6235   001E5A  5039               	movf	___fldiv@bexp^0,w,c
  6236   001E5C  B4D8               	btfsc	status,2,c
  6237   001E5E  EF33  F00F         	goto	u1431
  6238   001E62  EF35  F00F         	goto	u1430
  6239   001E66                     u1431:
  6240   001E66  EF4A  F00F         	goto	l2630
  6241   001E6A                     u1430:
  6242   001E6A  2839               	incf	___fldiv@bexp^0,w,c
  6243   001E6C  A4D8               	btfss	status,2,c
  6244   001E6E  EF3B  F00F         	goto	u1441
  6245   001E72  EF3D  F00F         	goto	u1440
  6246   001E76                     u1441:
  6247   001E76  EF45  F00F         	goto	l2626
  6248   001E7A                     u1440:
  6249   001E7A  0E00               	movlw	0
  6250   001E7C  6E22               	movwf	___fldiv@b^0,c
  6251   001E7E  0E00               	movlw	0
  6252   001E80  6E23               	movwf	(___fldiv@b+1)^0,c
  6253   001E82  0E00               	movlw	0
  6254   001E84  6E24               	movwf	(___fldiv@b+2)^0,c
  6255   001E86  0E00               	movlw	0
  6256   001E88  6E25               	movwf	(___fldiv@b+3)^0,c
  6257   001E8A                     l2626:
  6258   001E8A  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6259   001E8C  0E00               	movlw	0
  6260   001E8E  6E25               	movwf	(___fldiv@b+3)^0,c
  6261   001E90  EF52  F00F         	goto	l2632
  6262   001E94                     l2630:
  6263   001E94  0E00               	movlw	0
  6264   001E96  6E22               	movwf	___fldiv@b^0,c
  6265   001E98  0E00               	movlw	0
  6266   001E9A  6E23               	movwf	(___fldiv@b+1)^0,c
  6267   001E9C  0E00               	movlw	0
  6268   001E9E  6E24               	movwf	(___fldiv@b+2)^0,c
  6269   001EA0  0E00               	movlw	0
  6270   001EA2  6E25               	movwf	(___fldiv@b+3)^0,c
  6271   001EA4                     l2632:
  6272   001EA4  5029               	movf	(___fldiv@a+3)^0,w,c
  6273   001EA6  0B80               	andlw	128
  6274   001EA8  1A32               	xorwf	___fldiv@sign^0,f,c
  6275   001EAA  5029               	movf	(___fldiv@a+3)^0,w,c
  6276   001EAC  2429               	addwf	(___fldiv@a+3)^0,w,c
  6277   001EAE  6E3A               	movwf	___fldiv@aexp^0,c
  6278   001EB0  AE28               	btfss	(___fldiv@a+2)^0,7,c
  6279   001EB2  EF5D  F00F         	goto	u1451
  6280   001EB6  EF5F  F00F         	goto	u1450
  6281   001EBA                     u1451:
  6282   001EBA  EF60  F00F         	goto	l2640
  6283   001EBE                     u1450:
  6284   001EBE  803A               	bsf	___fldiv@aexp^0,0,c
  6285   001EC0                     l2640:
  6286   001EC0  503A               	movf	___fldiv@aexp^0,w,c
  6287   001EC2  B4D8               	btfsc	status,2,c
  6288   001EC4  EF66  F00F         	goto	u1461
  6289   001EC8  EF68  F00F         	goto	u1460
  6290   001ECC                     u1461:
  6291   001ECC  EF7D  F00F         	goto	l2650
  6292   001ED0                     u1460:
  6293   001ED0  283A               	incf	___fldiv@aexp^0,w,c
  6294   001ED2  A4D8               	btfss	status,2,c
  6295   001ED4  EF6E  F00F         	goto	u1471
  6296   001ED8  EF70  F00F         	goto	u1470
  6297   001EDC                     u1471:
  6298   001EDC  EF78  F00F         	goto	l2646
  6299   001EE0                     u1470:
  6300   001EE0  0E00               	movlw	0
  6301   001EE2  6E26               	movwf	___fldiv@a^0,c
  6302   001EE4  0E00               	movlw	0
  6303   001EE6  6E27               	movwf	(___fldiv@a+1)^0,c
  6304   001EE8  0E00               	movlw	0
  6305   001EEA  6E28               	movwf	(___fldiv@a+2)^0,c
  6306   001EEC  0E00               	movlw	0
  6307   001EEE  6E29               	movwf	(___fldiv@a+3)^0,c
  6308   001EF0                     l2646:
  6309   001EF0  8E28               	bsf	(___fldiv@a+2)^0,7,c
  6310   001EF2  0E00               	movlw	0
  6311   001EF4  6E29               	movwf	(___fldiv@a+3)^0,c
  6312   001EF6  EF85  F00F         	goto	l2652
  6313   001EFA                     l2650:
  6314   001EFA  0E00               	movlw	0
  6315   001EFC  6E26               	movwf	___fldiv@a^0,c
  6316   001EFE  0E00               	movlw	0
  6317   001F00  6E27               	movwf	(___fldiv@a+1)^0,c
  6318   001F02  0E00               	movlw	0
  6319   001F04  6E28               	movwf	(___fldiv@a+2)^0,c
  6320   001F06  0E00               	movlw	0
  6321   001F08  6E29               	movwf	(___fldiv@a+3)^0,c
  6322   001F0A                     l2652:
  6323   001F0A  5026               	movf	___fldiv@a^0,w,c
  6324   001F0C  1027               	iorwf	(___fldiv@a+1)^0,w,c
  6325   001F0E  1028               	iorwf	(___fldiv@a+2)^0,w,c
  6326   001F10  1029               	iorwf	(___fldiv@a+3)^0,w,c
  6327   001F12  A4D8               	btfss	status,2,c
  6328   001F14  EF8E  F00F         	goto	u1481
  6329   001F18  EF90  F00F         	goto	u1480
  6330   001F1C                     u1481:
  6331   001F1C  EFA8  F00F         	goto	l2664
  6332   001F20                     u1480:
  6333   001F20  0E00               	movlw	0
  6334   001F22  6E22               	movwf	___fldiv@b^0,c
  6335   001F24  0E00               	movlw	0
  6336   001F26  6E23               	movwf	(___fldiv@b+1)^0,c
  6337   001F28  0E00               	movlw	0
  6338   001F2A  6E24               	movwf	(___fldiv@b+2)^0,c
  6339   001F2C  0E00               	movlw	0
  6340   001F2E  6E25               	movwf	(___fldiv@b+3)^0,c
  6341   001F30  0E80               	movlw	128
  6342   001F32  1224               	iorwf	(___fldiv@b+2)^0,f,c
  6343   001F34  0E7F               	movlw	127
  6344   001F36  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6345   001F38                     l2658:
  6346   001F38  5032               	movf	___fldiv@sign^0,w,c
  6347   001F3A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  6348   001F3C  C022  F022         	movff	___fldiv@b,?___fldiv
  6349   001F40  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  6350   001F44  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  6351   001F48  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  6352   001F4C  EFEB  F010         	goto	l1232
  6353   001F50                     l2664:
  6354   001F50  5039               	movf	___fldiv@bexp^0,w,c
  6355   001F52  A4D8               	btfss	status,2,c
  6356   001F54  EFAE  F00F         	goto	u1491
  6357   001F58  EFB0  F00F         	goto	u1490
  6358   001F5C                     u1491:
  6359   001F5C  EFBA  F00F         	goto	l2672
  6360   001F60                     u1490:
  6361   001F60  0E00               	movlw	0
  6362   001F62  6E22               	movwf	?___fldiv^0,c
  6363   001F64  0E00               	movlw	0
  6364   001F66  6E23               	movwf	(?___fldiv+1)^0,c
  6365   001F68  0E00               	movlw	0
  6366   001F6A  6E24               	movwf	(?___fldiv+2)^0,c
  6367   001F6C  0E00               	movlw	0
  6368   001F6E  6E25               	movwf	(?___fldiv+3)^0,c
  6369   001F70  EFEB  F010         	goto	l1232
  6370   001F74                     l2672:
  6371   001F74  503A               	movf	___fldiv@aexp^0,w,c
  6372   001F76  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  6373   001F7A  6A2B               	clrf	(??___fldiv+1)^0,c
  6374   001F7C  5E2A               	subwf	??___fldiv^0,f,c
  6375   001F7E  0E00               	movlw	0
  6376   001F80  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  6377   001F82  0E7F               	movlw	127
  6378   001F84  242A               	addwf	??___fldiv^0,w,c
  6379   001F86  6E33               	movwf	___fldiv@new_exp^0,c
  6380   001F88  0E00               	movlw	0
  6381   001F8A  202B               	addwfc	(??___fldiv+1)^0,w,c
  6382   001F8C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6383   001F8E  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  6384   001F92  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  6385   001F96  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  6386   001F9A  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  6387   001F9E  0E00               	movlw	0
  6388   001FA0  6E22               	movwf	___fldiv@b^0,c
  6389   001FA2  0E00               	movlw	0
  6390   001FA4  6E23               	movwf	(___fldiv@b+1)^0,c
  6391   001FA6  0E00               	movlw	0
  6392   001FA8  6E24               	movwf	(___fldiv@b+2)^0,c
  6393   001FAA  0E00               	movlw	0
  6394   001FAC  6E25               	movwf	(___fldiv@b+3)^0,c
  6395   001FAE  0E00               	movlw	0
  6396   001FB0  6E35               	movwf	___fldiv@grs^0,c
  6397   001FB2  0E00               	movlw	0
  6398   001FB4  6E36               	movwf	(___fldiv@grs+1)^0,c
  6399   001FB6  0E00               	movlw	0
  6400   001FB8  6E37               	movwf	(___fldiv@grs+2)^0,c
  6401   001FBA  0E00               	movlw	0
  6402   001FBC  6E38               	movwf	(___fldiv@grs+3)^0,c
  6403   001FBE  0E00               	movlw	0
  6404   001FC0  6E3A               	movwf	___fldiv@aexp^0,c
  6405   001FC2  EF1B  F010         	goto	l1234
  6406   001FC6                     l2682:
  6407   001FC6  503A               	movf	___fldiv@aexp^0,w,c
  6408   001FC8  B4D8               	btfsc	status,2,c
  6409   001FCA  EFE9  F00F         	goto	u1501
  6410   001FCE  EFEB  F00F         	goto	u1500
  6411   001FD2                     u1501:
  6412   001FD2  EF02  F010         	goto	l2690
  6413   001FD6                     u1500:
  6414   001FD6  90D8               	bcf	status,0,c
  6415   001FD8  362E               	rlcf	___fldiv@rem^0,f,c
  6416   001FDA  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  6417   001FDC  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  6418   001FDE  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  6419   001FE0  90D8               	bcf	status,0,c
  6420   001FE2  3622               	rlcf	___fldiv@b^0,f,c
  6421   001FE4  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6422   001FE6  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6423   001FE8  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6424   001FEA  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6425   001FEC  EFFA  F00F         	goto	u1511
  6426   001FF0  EFFC  F00F         	goto	u1510
  6427   001FF4                     u1511:
  6428   001FF4  EFFD  F00F         	goto	l1237
  6429   001FF8                     u1510:
  6430   001FF8  8022               	bsf	___fldiv@b^0,0,c
  6431   001FFA                     l1237:
  6432   001FFA  90D8               	bcf	status,0,c
  6433   001FFC  3635               	rlcf	___fldiv@grs^0,f,c
  6434   001FFE  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6435   002000  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6436   002002  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6437   002004                     l2690:
  6438   002004  5026               	movf	___fldiv@a^0,w,c
  6439   002006  5C2E               	subwf	___fldiv@rem^0,w,c
  6440   002008  5027               	movf	(___fldiv@a+1)^0,w,c
  6441   00200A  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  6442   00200C  5028               	movf	(___fldiv@a+2)^0,w,c
  6443   00200E  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  6444   002010  5029               	movf	(___fldiv@a+3)^0,w,c
  6445   002012  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  6446   002014  A0D8               	btfss	status,0,c
  6447   002016  EF0F  F010         	goto	u1521
  6448   00201A  EF11  F010         	goto	u1520
  6449   00201E                     u1521:
  6450   00201E  EF1A  F010         	goto	l2696
  6451   002022                     u1520:
  6452   002022  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  6453   002024  5026               	movf	___fldiv@a^0,w,c
  6454   002026  5E2E               	subwf	___fldiv@rem^0,f,c
  6455   002028  5027               	movf	(___fldiv@a+1)^0,w,c
  6456   00202A  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  6457   00202C  5028               	movf	(___fldiv@a+2)^0,w,c
  6458   00202E  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  6459   002030  5029               	movf	(___fldiv@a+3)^0,w,c
  6460   002032  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  6461   002034                     l2696:
  6462   002034  2A3A               	incf	___fldiv@aexp^0,f,c
  6463   002036                     l1234:
  6464   002036  0E19               	movlw	25
  6465   002038  643A               	cpfsgt	___fldiv@aexp^0,c
  6466   00203A  EF21  F010         	goto	u1531
  6467   00203E  EF23  F010         	goto	u1530
  6468   002042                     u1531:
  6469   002042  EFE3  F00F         	goto	l2682
  6470   002046                     u1530:
  6471   002046  502E               	movf	___fldiv@rem^0,w,c
  6472   002048  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  6473   00204A  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  6474   00204C  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  6475   00204E  B4D8               	btfsc	status,2,c
  6476   002050  EF2C  F010         	goto	u1541
  6477   002054  EF2E  F010         	goto	u1540
  6478   002058                     u1541:
  6479   002058  EF46  F010         	goto	l2708
  6480   00205C                     u1540:
  6481   00205C  8035               	bsf	___fldiv@grs^0,0,c
  6482   00205E  EF46  F010         	goto	l2708
  6483   002062                     l2702:
  6484   002062  90D8               	bcf	status,0,c
  6485   002064  3622               	rlcf	___fldiv@b^0,f,c
  6486   002066  3623               	rlcf	(___fldiv@b+1)^0,f,c
  6487   002068  3624               	rlcf	(___fldiv@b+2)^0,f,c
  6488   00206A  3625               	rlcf	(___fldiv@b+3)^0,f,c
  6489   00206C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6490   00206E  EF3B  F010         	goto	u1551
  6491   002072  EF3D  F010         	goto	u1550
  6492   002076                     u1551:
  6493   002076  EF3E  F010         	goto	l1243
  6494   00207A                     u1550:
  6495   00207A  8022               	bsf	___fldiv@b^0,0,c
  6496   00207C                     l1243:
  6497   00207C  90D8               	bcf	status,0,c
  6498   00207E  3635               	rlcf	___fldiv@grs^0,f,c
  6499   002080  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  6500   002082  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  6501   002084  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  6502   002086  0633               	decf	___fldiv@new_exp^0,f,c
  6503   002088  A0D8               	btfss	status,0,c
  6504   00208A  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  6505   00208C                     l2708:
  6506   00208C  AE24               	btfss	(___fldiv@b+2)^0,7,c
  6507   00208E  EF4B  F010         	goto	u1561
  6508   002092  EF4D  F010         	goto	u1560
  6509   002096                     u1561:
  6510   002096  EF31  F010         	goto	l2702
  6511   00209A                     u1560:
  6512   00209A  0E00               	movlw	0
  6513   00209C  6E3A               	movwf	___fldiv@aexp^0,c
  6514   00209E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  6515   0020A0  EF54  F010         	goto	u1571
  6516   0020A4  EF56  F010         	goto	u1570
  6517   0020A8                     u1571:
  6518   0020A8  EF7A  F010         	goto	l1245
  6519   0020AC                     u1570:
  6520   0020AC  0EFF               	movlw	255
  6521   0020AE  1435               	andwf	___fldiv@grs^0,w,c
  6522   0020B0  6E2A               	movwf	??___fldiv^0,c
  6523   0020B2  0EFF               	movlw	255
  6524   0020B4  1436               	andwf	(___fldiv@grs+1)^0,w,c
  6525   0020B6  6E2B               	movwf	(??___fldiv+1)^0,c
  6526   0020B8  0EFF               	movlw	255
  6527   0020BA  1437               	andwf	(___fldiv@grs+2)^0,w,c
  6528   0020BC  6E2C               	movwf	(??___fldiv+2)^0,c
  6529   0020BE  0E7F               	movlw	127
  6530   0020C0  1438               	andwf	(___fldiv@grs+3)^0,w,c
  6531   0020C2  6E2D               	movwf	(??___fldiv+3)^0,c
  6532   0020C4  502A               	movf	??___fldiv^0,w,c
  6533   0020C6  102B               	iorwf	(??___fldiv+1)^0,w,c
  6534   0020C8  102C               	iorwf	(??___fldiv+2)^0,w,c
  6535   0020CA  102D               	iorwf	(??___fldiv+3)^0,w,c
  6536   0020CC  B4D8               	btfsc	status,2,c
  6537   0020CE  EF6B  F010         	goto	u1581
  6538   0020D2  EF6D  F010         	goto	u1580
  6539   0020D6                     u1581:
  6540   0020D6  EF71  F010         	goto	l1246
  6541   0020DA                     u1580:
  6542   0020DA                     l2716:
  6543   0020DA  0E01               	movlw	1
  6544   0020DC  6E3A               	movwf	___fldiv@aexp^0,c
  6545   0020DE  EF7A  F010         	goto	l1245
  6546   0020E2                     l1246:
  6547   0020E2  A022               	btfss	___fldiv@b^0,0,c
  6548   0020E4  EF76  F010         	goto	u1591
  6549   0020E8  EF78  F010         	goto	u1590
  6550   0020EC                     u1591:
  6551   0020EC  EF7A  F010         	goto	l1245
  6552   0020F0                     u1590:
  6553   0020F0  EF6D  F010         	goto	l2716
  6554   0020F4                     l1245:
  6555   0020F4  503A               	movf	___fldiv@aexp^0,w,c
  6556   0020F6  B4D8               	btfsc	status,2,c
  6557   0020F8  EF80  F010         	goto	u1601
  6558   0020FC  EF82  F010         	goto	u1600
  6559   002100                     u1601:
  6560   002100  EFA6  F010         	goto	l2728
  6561   002104                     u1600:
  6562   002104  0E01               	movlw	1
  6563   002106  2622               	addwf	___fldiv@b^0,f,c
  6564   002108  0E00               	movlw	0
  6565   00210A  2223               	addwfc	(___fldiv@b+1)^0,f,c
  6566   00210C  2224               	addwfc	(___fldiv@b+2)^0,f,c
  6567   00210E  2225               	addwfc	(___fldiv@b+3)^0,f,c
  6568   002110  A025               	btfss	(___fldiv@b+3)^0,0,c
  6569   002112  EF8D  F010         	goto	u1611
  6570   002116  EF8F  F010         	goto	u1610
  6571   00211A                     u1611:
  6572   00211A  EFA6  F010         	goto	l2728
  6573   00211E                     u1610:
  6574   00211E  C022  F02A         	movff	___fldiv@b,??___fldiv
  6575   002122  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  6576   002126  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  6577   00212A  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  6578   00212E  342D               	rlcf	(??___fldiv+3)^0,w,c
  6579   002130  322D               	rrcf	(??___fldiv+3)^0,f,c
  6580   002132  322C               	rrcf	(??___fldiv+2)^0,f,c
  6581   002134  322B               	rrcf	(??___fldiv+1)^0,f,c
  6582   002136  322A               	rrcf	??___fldiv^0,f,c
  6583   002138  C02A  F022         	movff	??___fldiv,___fldiv@b
  6584   00213C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  6585   002140  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  6586   002144  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  6587   002148  4A33               	infsnz	___fldiv@new_exp^0,f,c
  6588   00214A  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  6589   00214C                     l2728:
  6590   00214C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6591   00214E  EFB1  F010         	goto	u1621
  6592   002152  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6593   002154  E108               	bnz	u1620
  6594   002156  2833               	incf	___fldiv@new_exp^0,w,c
  6595   002158  A0D8               	btfss	status,0,c
  6596   00215A  EFB1  F010         	goto	u1621
  6597   00215E  EFB3  F010         	goto	u1620
  6598   002162                     u1621:
  6599   002162  EFBE  F010         	goto	l2732
  6600   002166                     u1620:
  6601   002166  0E00               	movlw	0
  6602   002168  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6603   00216A  6833               	setf	___fldiv@new_exp^0,c
  6604   00216C  0E00               	movlw	0
  6605   00216E  6E22               	movwf	___fldiv@b^0,c
  6606   002170  0E00               	movlw	0
  6607   002172  6E23               	movwf	(___fldiv@b+1)^0,c
  6608   002174  0E00               	movlw	0
  6609   002176  6E24               	movwf	(___fldiv@b+2)^0,c
  6610   002178  0E00               	movlw	0
  6611   00217A  6E25               	movwf	(___fldiv@b+3)^0,c
  6612   00217C                     l2732:
  6613   00217C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6614   00217E  EFCB  F010         	goto	u1630
  6615   002182  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  6616   002184  E106               	bnz	u1631
  6617   002186  0433               	decf	___fldiv@new_exp^0,w,c
  6618   002188  B0D8               	btfsc	status,0,c
  6619   00218A  EFC9  F010         	goto	u1631
  6620   00218E  EFCB  F010         	goto	u1630
  6621   002192                     u1631:
  6622   002192  EFD9  F010         	goto	l2736
  6623   002196                     u1630:
  6624   002196  0E00               	movlw	0
  6625   002198  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  6626   00219A  0E00               	movlw	0
  6627   00219C  6E33               	movwf	___fldiv@new_exp^0,c
  6628   00219E  0E00               	movlw	0
  6629   0021A0  6E22               	movwf	___fldiv@b^0,c
  6630   0021A2  0E00               	movlw	0
  6631   0021A4  6E23               	movwf	(___fldiv@b+1)^0,c
  6632   0021A6  0E00               	movlw	0
  6633   0021A8  6E24               	movwf	(___fldiv@b+2)^0,c
  6634   0021AA  0E00               	movlw	0
  6635   0021AC  6E25               	movwf	(___fldiv@b+3)^0,c
  6636   0021AE  0E00               	movlw	0
  6637   0021B0  6E32               	movwf	___fldiv@sign^0,c
  6638   0021B2                     l2736:
  6639   0021B2  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  6640   0021B6  A039               	btfss	___fldiv@bexp^0,0,c
  6641   0021B8  EFE0  F010         	goto	u1641
  6642   0021BC  EFE2  F010         	goto	u1640
  6643   0021C0                     u1641:
  6644   0021C0  EFE5  F010         	goto	l2742
  6645   0021C4                     u1640:
  6646   0021C4  8E24               	bsf	(___fldiv@b+2)^0,7,c
  6647   0021C6  EFE6  F010         	goto	l2744
  6648   0021CA                     l2742:
  6649   0021CA  9E24               	bcf	(___fldiv@b+2)^0,7,c
  6650   0021CC                     l2744:
  6651   0021CC  90D8               	bcf	status,0,c
  6652   0021CE  3039               	rrcf	___fldiv@bexp^0,w,c
  6653   0021D0  6E25               	movwf	(___fldiv@b+3)^0,c
  6654   0021D2  EF9C  F00F         	goto	l2658
  6655   0021D6                     l1232:
  6656   0021D6  0012               	return		;funcret
  6657   0021D8                     __end_of___fldiv:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _color_click_init *****************
  6661 ;; Defined at:
  6662 ;;		line 9 in file "color.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;		None
  6665 ;; Auto vars:     Size  Location     Type
  6666 ;;		None
  6667 ;; Return value:  Size  Location     Type
  6668 ;;                  1    wreg      void 
  6669 ;; Registers used:
  6670 ;;		wreg, status,2, status,0, cstack
  6671 ;; Tracked objects:
  6672 ;;		On entry : 0/0
  6673 ;;		On exit  : 0/0
  6674 ;;		Unchanged: 0/0
  6675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6680 ;;Total ram usage:        1 bytes
  6681 ;; Hardware stack levels used: 1
  6682 ;; Hardware stack levels required when called: 9
  6683 ;; This function calls:
  6684 ;;		_I2C_2_Master_Init
  6685 ;;		_color_writetoaddr
  6686 ;; This function is called by:
  6687 ;;		_main
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           	psect	text33
  6692   0032A6                     __ptext33:
  6693                           	callstack 0
  6694   0032A6                     _color_click_init:
  6695                           	callstack 21
  6696   0032A6                     
  6697                           ;color.c: 11:     I2C_2_Master_Init();
  6698   0032A6  EC9F  F019         	call	_I2C_2_Master_Init	;wreg free
  6699   0032AA                     
  6700                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  6701   0032AA  0E01               	movlw	1
  6702   0032AC  6E0B               	movwf	color_writetoaddr@value^0,c
  6703   0032AE  0E00               	movlw	0
  6704   0032B0  EC19  F01A         	call	_color_writetoaddr
  6705   0032B4                     
  6706                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  6707   0032B4  0E3F               	movlw	63
  6708   0032B6  6E0D               	movwf	??_color_click_init^0,c
  6709   0032B8  0E55               	movlw	85
  6710   0032BA                     u2847:
  6711   0032BA  2EE8               	decfsz	wreg,f,c
  6712   0032BC  D7FE               	bra	u2847
  6713   0032BE  2E0D               	decfsz	??_color_click_init^0,f,c
  6714   0032C0  D7FC               	bra	u2847
  6715   0032C2  F000               	nop	
  6716   0032C4                     
  6717                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  6718   0032C4  0E03               	movlw	3
  6719   0032C6  6E0B               	movwf	color_writetoaddr@value^0,c
  6720   0032C8  0E00               	movlw	0
  6721   0032CA  EC19  F01A         	call	_color_writetoaddr
  6722   0032CE                     
  6723                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  6724   0032CE  0ED5               	movlw	213
  6725   0032D0  6E0B               	movwf	color_writetoaddr@value^0,c
  6726   0032D2  0E01               	movlw	1
  6727   0032D4  EC19  F01A         	call	_color_writetoaddr
  6728   0032D8  0012               	return		;funcret
  6729   0032DA                     __end_of_color_click_init:
  6730                           	callstack 0
  6731                           
  6732 ;; *************** function _I2C_2_Master_Init *****************
  6733 ;; Defined at:
  6734 ;;		line 4 in file "i2c.c"
  6735 ;; Parameters:    Size  Location     Type
  6736 ;;		None
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  1    wreg      void 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6752 ;;Total ram usage:        0 bytes
  6753 ;; Hardware stack levels used: 1
  6754 ;; Hardware stack levels required when called: 6
  6755 ;; This function calls:
  6756 ;;		Nothing
  6757 ;; This function is called by:
  6758 ;;		_color_click_init
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text34
  6763   00333E                     __ptext34:
  6764                           	callstack 0
  6765   00333E                     _I2C_2_Master_Init:
  6766                           	callstack 23
  6767   00333E                     
  6768                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  6769   00333E  010E               	movlb	14	; () banked
  6770   003340  51D9               	movf	217,w,b	;volatile
  6771   003342  0BF0               	andlw	-16
  6772   003344  0908               	iorlw	8
  6773   003346  6FD9               	movwf	217,b	;volatile
  6774   003348                     
  6775                           ; BSR set to: 14
  6776                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  6777   003348  8BD9               	bsf	217,5,b	;volatile
  6778                           
  6779                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  6780   00334A  0E9F               	movlw	159
  6781   00334C  6FD6               	movwf	214,b	;volatile
  6782   00334E                     
  6783                           ; BSR set to: 14
  6784                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  6785   00334E  8A84               	bsf	132,5,c	;volatile
  6786   003350                     
  6787                           ; BSR set to: 14
  6788                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  6789   003350  8C84               	bsf	132,6,c	;volatile
  6790   003352                     
  6791                           ; BSR set to: 14
  6792                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  6793   003352  9BA7               	bcf	167,5,b	;volatile
  6794   003354                     
  6795                           ; BSR set to: 14
  6796                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  6797   003354  9DA7               	bcf	167,6,b	;volatile
  6798                           
  6799                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  6800   003356  0E1D               	movlw	29
  6801   003358  6F1D               	movwf	29,b	;volatile
  6802                           
  6803                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  6804   00335A  0E1E               	movlw	30
  6805   00335C  6F1C               	movwf	28,b	;volatile
  6806                           
  6807                           ;i2c.c: 18:   RD5PPS=0x1C;
  6808   00335E  0E1C               	movlw	28
  6809   003360  6F6F               	movwf	111,b	;volatile
  6810                           
  6811                           ;i2c.c: 19:   RD6PPS=0x1B;
  6812   003362  0E1B               	movlw	27
  6813   003364  6F70               	movwf	112,b	;volatile
  6814   003366                     
  6815                           ; BSR set to: 14
  6816   003366  0012               	return		;funcret
  6817   003368                     __end_of_I2C_2_Master_Init:
  6818                           	callstack 0
  6819                           
  6820 ;; *************** function _Interrupts_init *****************
  6821 ;; Defined at:
  6822 ;;		line 10 in file "interrupts.c"
  6823 ;; Parameters:    Size  Location     Type
  6824 ;;		None
  6825 ;; Auto vars:     Size  Location     Type
  6826 ;;		None
  6827 ;; Return value:  Size  Location     Type
  6828 ;;                  1    wreg      void 
  6829 ;; Registers used:
  6830 ;;		None
  6831 ;; Tracked objects:
  6832 ;;		On entry : 0/0
  6833 ;;		On exit  : 0/0
  6834 ;;		Unchanged: 0/0
  6835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6840 ;;Total ram usage:        0 bytes
  6841 ;; Hardware stack levels used: 1
  6842 ;; Hardware stack levels required when called: 6
  6843 ;; This function calls:
  6844 ;;		Nothing
  6845 ;; This function is called by:
  6846 ;;		_main
  6847 ;; This function uses a non-reentrant model
  6848 ;;
  6849                           
  6850                           	psect	text35
  6851   0034A6                     __ptext35:
  6852                           	callstack 0
  6853   0034A6                     _Interrupts_init:
  6854                           	callstack 24
  6855   0034A6                     
  6856                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  6857   0034A6  8082               	bsf	130,0,c	;volatile
  6858                           
  6859                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  6860   0034A8  010E               	movlb	14	; () banked
  6861   0034AA  919A               	bcf	154,0,b	;volatile
  6862                           
  6863                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  6864   0034AC  9133               	bcf	51,0,b	;volatile
  6865                           
  6866                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  6867   0034AE  8129               	bsf	41,0,b	;volatile
  6868                           
  6869                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  6870   0034B0  811F               	bsf	31,0,b	;volatile
  6871                           
  6872                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  6873   0034B2  90F2               	bcf	242,0,c	;volatile
  6874                           
  6875                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  6876   0034B4  8AF2               	bsf	242,5,c	;volatile
  6877                           
  6878                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  6879   0034B6  8CF2               	bsf	242,6,c	;volatile
  6880                           
  6881                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  6882   0034B8  8EF2               	bsf	242,7,c	;volatile
  6883   0034BA                     
  6884                           ; BSR set to: 14
  6885   0034BA  0012               	return		;funcret
  6886   0034BC                     __end_of_Interrupts_init:
  6887                           	callstack 0
  6888                           
  6889 ;; *************** function _Color_Interrupts_threshold *****************
  6890 ;; Defined at:
  6891 ;;		line 38 in file "interrupts.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  upperThresho    2   12[COMRAM] unsigned int 
  6894 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;		None
  6897 ;; Return value:  Size  Location     Type
  6898 ;;                  1    wreg      void 
  6899 ;; Registers used:
  6900 ;;		wreg, status,2, status,0, cstack
  6901 ;; Tracked objects:
  6902 ;;		On entry : 0/0
  6903 ;;		On exit  : 0/0
  6904 ;;		Unchanged: 0/0
  6905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6909 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6910 ;;Total ram usage:        4 bytes
  6911 ;; Hardware stack levels used: 1
  6912 ;; Hardware stack levels required when called: 9
  6913 ;; This function calls:
  6914 ;;		_color_writetoaddr
  6915 ;; This function is called by:
  6916 ;;		_main
  6917 ;; This function uses a non-reentrant model
  6918 ;;
  6919                           
  6920                           	psect	text36
  6921   003368                     __ptext36:
  6922                           	callstack 0
  6923   003368                     _Color_Interrupts_threshold:
  6924                           	callstack 21
  6925   003368                     
  6926                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  6927   003368  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  6928   00336C  0E04               	movlw	4
  6929   00336E  EC19  F01A         	call	_color_writetoaddr
  6930                           
  6931                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  6932   003372  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  6933   003374  6E0B               	movwf	color_writetoaddr@value^0,c
  6934   003376  0E05               	movlw	5
  6935   003378  EC19  F01A         	call	_color_writetoaddr
  6936                           
  6937                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  6938   00337C  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  6939   003380  0E06               	movlw	6
  6940   003382  EC19  F01A         	call	_color_writetoaddr
  6941                           
  6942                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  6943   003386  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  6944   003388  6E0B               	movwf	color_writetoaddr@value^0,c
  6945   00338A  0E07               	movlw	7
  6946   00338C  EC19  F01A         	call	_color_writetoaddr
  6947   003390  0012               	return		;funcret
  6948   003392                     __end_of_Color_Interrupts_threshold:
  6949                           	callstack 0
  6950                           
  6951 ;; *************** function _Color_Interrupts_init *****************
  6952 ;; Defined at:
  6953 ;;		line 29 in file "interrupts.c"
  6954 ;; Parameters:    Size  Location     Type
  6955 ;;		None
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;		None
  6958 ;; Return value:  Size  Location     Type
  6959 ;;                  1    wreg      void 
  6960 ;; Registers used:
  6961 ;;		wreg, status,2, status,0, cstack
  6962 ;; Tracked objects:
  6963 ;;		On entry : 0/0
  6964 ;;		On exit  : 0/0
  6965 ;;		Unchanged: 0/0
  6966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6971 ;;Total ram usage:        1 bytes
  6972 ;; Hardware stack levels used: 1
  6973 ;; Hardware stack levels required when called: 9
  6974 ;; This function calls:
  6975 ;;		_color_writetoaddr
  6976 ;; This function is called by:
  6977 ;;		_main
  6978 ;; This function uses a non-reentrant model
  6979 ;;
  6980                           
  6981                           	psect	text37
  6982   003472                     __ptext37:
  6983                           	callstack 0
  6984   003472                     _Color_Interrupts_init:
  6985                           	callstack 21
  6986   003472                     
  6987                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  6988   003472  0E13               	movlw	19
  6989   003474  6E0B               	movwf	color_writetoaddr@value^0,c
  6990   003476  0E00               	movlw	0
  6991   003478  EC19  F01A         	call	_color_writetoaddr
  6992   00347C                     
  6993                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  6994   00347C  0ED0               	movlw	208
  6995   00347E  6E0D               	movwf	??_Color_Interrupts_init^0,c
  6996   003480  0ECA               	movlw	202
  6997   003482                     u2857:
  6998   003482  2EE8               	decfsz	wreg,f,c
  6999   003484  D7FE               	bra	u2857
  7000   003486  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  7001   003488  D7FC               	bra	u2857
  7002   00348A  0012               	return		;funcret
  7003   00348C                     __end_of_Color_Interrupts_init:
  7004                           	callstack 0
  7005                           
  7006 ;; *************** function _color_writetoaddr *****************
  7007 ;; Defined at:
  7008 ;;		line 24 in file "color.c"
  7009 ;; Parameters:    Size  Location     Type
  7010 ;;  address         1    wreg     unsigned char 
  7011 ;;  value           1   10[COMRAM] unsigned char 
  7012 ;; Auto vars:     Size  Location     Type
  7013 ;;  address         1   11[COMRAM] unsigned char 
  7014 ;; Return value:  Size  Location     Type
  7015 ;;                  1    wreg      void 
  7016 ;; Registers used:
  7017 ;;		wreg, status,2, status,0, cstack
  7018 ;; Tracked objects:
  7019 ;;		On entry : 0/0
  7020 ;;		On exit  : 0/0
  7021 ;;		Unchanged: 0/0
  7022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7023 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7027 ;;Total ram usage:        2 bytes
  7028 ;; Hardware stack levels used: 1
  7029 ;; Hardware stack levels required when called: 8
  7030 ;; This function calls:
  7031 ;;		_I2C_2_Master_Start
  7032 ;;		_I2C_2_Master_Stop
  7033 ;;		_I2C_2_Master_Write
  7034 ;; This function is called by:
  7035 ;;		_color_click_init
  7036 ;;		_Color_Interrupts_init
  7037 ;;		_Color_Interrupts_threshold
  7038 ;;		_persistence_register
  7039 ;; This function uses a non-reentrant model
  7040 ;;
  7041                           
  7042                           	psect	text38
  7043   003432                     __ptext38:
  7044                           	callstack 0
  7045   003432                     _color_writetoaddr:
  7046                           	callstack 21
  7047                           
  7048                           ;incstack = 0
  7049                           ;color_writetoaddr@address stored from wreg
  7050   003432  6E0C               	movwf	color_writetoaddr@address^0,c
  7051   003434                     
  7052                           ;color.c: 25:     I2C_2_Master_Start();
  7053   003434  EC8C  F01A         	call	_I2C_2_Master_Start	;wreg free
  7054                           
  7055                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7056   003438  0E52               	movlw	82
  7057   00343A  EC6B  F01A         	call	_I2C_2_Master_Write
  7058                           
  7059                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7060   00343E  500C               	movf	color_writetoaddr@address^0,w,c
  7061   003440  0980               	iorlw	128
  7062   003442  EC6B  F01A         	call	_I2C_2_Master_Write
  7063                           
  7064                           ;color.c: 28:     I2C_2_Master_Write(value);
  7065   003446  500B               	movf	color_writetoaddr@value^0,w,c
  7066   003448  EC6B  F01A         	call	_I2C_2_Master_Write
  7067                           
  7068                           ;color.c: 29:     I2C_2_Master_Stop();
  7069   00344C  EC87  F01A         	call	_I2C_2_Master_Stop	;wreg free
  7070   003450  0012               	return		;funcret
  7071   003452                     __end_of_color_writetoaddr:
  7072                           	callstack 0
  7073                           
  7074 ;; *************** function _I2C_2_Master_Write *****************
  7075 ;; Defined at:
  7076 ;;		line 45 in file "i2c.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  data_byte       1    wreg     unsigned char 
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;  data_byte       1    9[COMRAM] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7094 ;;Total ram usage:        1 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 7
  7097 ;; This function calls:
  7098 ;;		_I2C_2_Master_Idle
  7099 ;; This function is called by:
  7100 ;;		_color_writetoaddr
  7101 ;;		_color_read_Red
  7102 ;;		_color_read_Green
  7103 ;;		_color_read_Blue
  7104 ;;		_color_read_Clear
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           	psect	text39
  7109   0034D6                     __ptext39:
  7110                           	callstack 0
  7111   0034D6                     _I2C_2_Master_Write:
  7112                           	callstack 21
  7113                           
  7114                           ;incstack = 0
  7115                           ;I2C_2_Master_Write@data_byte stored from wreg
  7116   0034D6  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  7117   0034D8                     
  7118                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7119   0034D8  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  7120   0034DC                     
  7121                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7122   0034DC  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  7123   0034E0  0012               	return		;funcret
  7124   0034E2                     __end_of_I2C_2_Master_Write:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _I2C_2_Master_Stop *****************
  7128 ;; Defined at:
  7129 ;;		line 39 in file "i2c.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;		None
  7132 ;; Auto vars:     Size  Location     Type
  7133 ;;		None
  7134 ;; Return value:  Size  Location     Type
  7135 ;;                  1    wreg      void 
  7136 ;; Registers used:
  7137 ;;		wreg, status,2, status,0, cstack
  7138 ;; Tracked objects:
  7139 ;;		On entry : 0/0
  7140 ;;		On exit  : 0/0
  7141 ;;		Unchanged: 0/0
  7142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7147 ;;Total ram usage:        0 bytes
  7148 ;; Hardware stack levels used: 1
  7149 ;; Hardware stack levels required when called: 7
  7150 ;; This function calls:
  7151 ;;		_I2C_2_Master_Idle
  7152 ;; This function is called by:
  7153 ;;		_color_writetoaddr
  7154 ;;		_color_read_Red
  7155 ;;		_color_read_Green
  7156 ;;		_color_read_Blue
  7157 ;;		_color_read_Clear
  7158 ;; This function uses a non-reentrant model
  7159 ;;
  7160                           
  7161                           	psect	text40
  7162   00350E                     __ptext40:
  7163                           	callstack 0
  7164   00350E                     _I2C_2_Master_Stop:
  7165                           	callstack 21
  7166   00350E                     
  7167                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7168   00350E  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  7169   003512                     
  7170                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7171   003512  010E               	movlb	14	; () banked
  7172   003514  85DA               	bsf	218,2,b	;volatile
  7173   003516                     
  7174                           ; BSR set to: 14
  7175   003516  0012               	return		;funcret
  7176   003518                     __end_of_I2C_2_Master_Stop:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function _I2C_2_Master_Start *****************
  7180 ;; Defined at:
  7181 ;;		line 27 in file "i2c.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		wreg, status,2, status,0, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7199 ;;Total ram usage:        0 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 7
  7202 ;; This function calls:
  7203 ;;		_I2C_2_Master_Idle
  7204 ;; This function is called by:
  7205 ;;		_color_writetoaddr
  7206 ;;		_color_read_Red
  7207 ;;		_color_read_Green
  7208 ;;		_color_read_Blue
  7209 ;;		_color_read_Clear
  7210 ;; This function uses a non-reentrant model
  7211 ;;
  7212                           
  7213                           	psect	text41
  7214   003518                     __ptext41:
  7215                           	callstack 0
  7216   003518                     _I2C_2_Master_Start:
  7217                           	callstack 21
  7218   003518                     
  7219                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7220   003518  ECDE  F019         	call	_I2C_2_Master_Idle	;wreg free
  7221   00351C                     
  7222                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7223   00351C  010E               	movlb	14	; () banked
  7224   00351E  81DA               	bsf	218,0,b	;volatile
  7225   003520                     
  7226                           ; BSR set to: 14
  7227   003520  0012               	return		;funcret
  7228   003522                     __end_of_I2C_2_Master_Start:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _I2C_2_Master_Idle *****************
  7232 ;; Defined at:
  7233 ;;		line 22 in file "i2c.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;		None
  7238 ;; Return value:  Size  Location     Type
  7239 ;;                  1    wreg      void 
  7240 ;; Registers used:
  7241 ;;		wreg, status,2, status,0
  7242 ;; Tracked objects:
  7243 ;;		On entry : 0/0
  7244 ;;		On exit  : 0/0
  7245 ;;		Unchanged: 0/0
  7246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7249 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7250 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7251 ;;Total ram usage:        1 bytes
  7252 ;; Hardware stack levels used: 1
  7253 ;; Hardware stack levels required when called: 6
  7254 ;; This function calls:
  7255 ;;		Nothing
  7256 ;; This function is called by:
  7257 ;;		_I2C_2_Master_Start
  7258 ;;		_I2C_2_Master_RepStart
  7259 ;;		_I2C_2_Master_Stop
  7260 ;;		_I2C_2_Master_Write
  7261 ;;		_I2C_2_Master_Read
  7262 ;; This function uses a non-reentrant model
  7263 ;;
  7264                           
  7265                           	psect	text42
  7266   0033BC                     __ptext42:
  7267                           	callstack 0
  7268   0033BC                     _I2C_2_Master_Idle:
  7269                           	callstack 21
  7270   0033BC                     l199:
  7271   0033BC  010E               	movlb	14	; () banked
  7272   0033BE  B5D8               	btfsc	216,2,b	;volatile
  7273   0033C0  EFE4  F019         	goto	u1321
  7274   0033C4  EFE6  F019         	goto	u1320
  7275   0033C8                     u1321:
  7276   0033C8  EFDE  F019         	goto	l199
  7277   0033CC                     u1320:
  7278   0033CC                     
  7279                           ; BSR set to: 14
  7280   0033CC  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  7281   0033D0  0E1F               	movlw	31
  7282   0033D2  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  7283   0033D4  A4D8               	btfss	status,2,c
  7284   0033D6  EFEF  F019         	goto	u1331
  7285   0033DA  EFF1  F019         	goto	u1330
  7286   0033DE                     u1331:
  7287   0033DE  EFDE  F019         	goto	l199
  7288   0033E2                     u1330:
  7289   0033E2                     
  7290                           ; BSR set to: 14
  7291   0033E2  0012               	return		;funcret
  7292   0033E4                     __end_of_I2C_2_Master_Idle:
  7293                           	callstack 0
  7294                           
  7295 ;; *************** function _HighISR *****************
  7296 ;; Defined at:
  7297 ;;		line 71 in file "interrupts.c"
  7298 ;; Parameters:    Size  Location     Type
  7299 ;;		None
  7300 ;; Auto vars:     Size  Location     Type
  7301 ;;		None
  7302 ;; Return value:  Size  Location     Type
  7303 ;;                  1    wreg      void 
  7304 ;; Registers used:
  7305 ;;		wreg, status,2, status,0, cstack
  7306 ;; Tracked objects:
  7307 ;;		On entry : 0/0
  7308 ;;		On exit  : 0/0
  7309 ;;		Unchanged: 0/0
  7310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7315 ;;Total ram usage:        0 bytes
  7316 ;; Hardware stack levels used: 1
  7317 ;; Hardware stack levels required when called: 5
  7318 ;; This function calls:
  7319 ;;		_Color_Interrupts_clear
  7320 ;; This function is called by:
  7321 ;;		Interrupt level 2
  7322 ;; This function uses a non-reentrant model
  7323 ;;
  7324                           
  7325                           	psect	intcode
  7326   000008                     __pintcode:
  7327                           	callstack 0
  7328   000008                     _HighISR:
  7329                           	callstack 20
  7330                           
  7331                           ; BSR set to: 14
  7332                           ;incstack = 0
  7333   000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  7334   00000A                     
  7335                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  7336   00000A  010E               	movlb	14	; () banked
  7337   00000C  A133               	btfss	51,0,b	;volatile
  7338   00000E  EF0B  F000         	goto	i2u244_41
  7339   000012  EF0D  F000         	goto	i2u244_40
  7340   000016                     i2u244_41:
  7341   000016  EF19  F000         	goto	i2l486
  7342   00001A                     i2u244_40:
  7343   00001A                     
  7344                           ; BSR set to: 14
  7345                           ;interrupts.c: 77:         LATDbits.LATD7 = 1;
  7346   00001A  8E7C               	bsf	124,7,c	;volatile
  7347   00001C                     
  7348                           ; BSR set to: 14
  7349                           ;interrupts.c: 78:         interrupt_flag = 1;
  7350   00001C  0E00               	movlw	0
  7351   00001E  6E4C               	movwf	(_interrupt_flag+1)^0,c
  7352   000020  0E01               	movlw	1
  7353   000022  6E4B               	movwf	_interrupt_flag^0,c
  7354   000024                     
  7355                           ; BSR set to: 14
  7356                           ;interrupts.c: 79:         interrupt_ctr++;
  7357   000024  0100               	movlb	0	; () banked
  7358   000026  4BB2               	infsnz	_interrupt_ctr& (0+255),f,b
  7359   000028  2BB3               	incf	(_interrupt_ctr+1)& (0+255),f,b
  7360   00002A                     
  7361                           ; BSR set to: 0
  7362                           ;interrupts.c: 80:         Color_Interrupts_clear();
  7363   00002A  EC86  F019         	call	_Color_Interrupts_clear	;wreg free
  7364   00002E                     
  7365                           ;interrupts.c: 81:         PIR0bits.INT0IF = 0;
  7366   00002E  010E               	movlb	14	; () banked
  7367   000030  9133               	bcf	51,0,b	;volatile
  7368   000032                     i2l486:
  7369                           
  7370                           ; BSR set to: 14
  7371   000032  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  7372   000034  0011               	retfie		f
  7373   000036                     __end_of_HighISR:
  7374                           	callstack 0
  7375                           
  7376 ;; *************** function _Color_Interrupts_clear *****************
  7377 ;; Defined at:
  7378 ;;		line 51 in file "interrupts.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;		None
  7381 ;; Auto vars:     Size  Location     Type
  7382 ;;		None
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  1    wreg      void 
  7385 ;; Registers used:
  7386 ;;		wreg, status,2, status,0, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;Total ram usage:        0 bytes
  7397 ;; Hardware stack levels used: 1
  7398 ;; Hardware stack levels required when called: 4
  7399 ;; This function calls:
  7400 ;;		i2_Color_Interrupts_init
  7401 ;;		i2_Color_Interrupts_threshold
  7402 ;;		i2_I2C_2_Master_Start
  7403 ;;		i2_I2C_2_Master_Stop
  7404 ;;		i2_I2C_2_Master_Write
  7405 ;;		i2_persistence_register
  7406 ;; This function is called by:
  7407 ;;		_HighISR
  7408 ;; This function uses a non-reentrant model
  7409 ;;
  7410                           
  7411                           	psect	text44
  7412   00330C                     __ptext44:
  7413                           	callstack 0
  7414   00330C                     _Color_Interrupts_clear:
  7415                           	callstack 20
  7416   00330C                     
  7417                           ;interrupts.c: 55:     I2C_2_Master_Start();
  7418   00330C  EC96  F01A         	call	i2_I2C_2_Master_Start	;wreg free
  7419                           
  7420                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  7421   003310  0E52               	movlw	82
  7422   003312  EC77  F01A         	call	i2_I2C_2_Master_Write
  7423                           
  7424                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  7425   003316  0EE6               	movlw	230
  7426   003318  EC77  F01A         	call	i2_I2C_2_Master_Write
  7427                           
  7428                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  7429   00331C  EC91  F01A         	call	i2_I2C_2_Master_Stop	;wreg free
  7430                           
  7431                           ;interrupts.c: 61:     Color_Interrupts_init();
  7432   003320  EC46  F01A         	call	i2_Color_Interrupts_init	;wreg free
  7433                           
  7434                           ;interrupts.c: 62:     persistence_register();
  7435   003324  EC71  F01A         	call	i2_persistence_register	;wreg free
  7436                           
  7437                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  7438   003328  C0F6  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  7439   00332C  C0F7  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  7440   003330  C0B0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  7441   003334  C0B1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  7442   003338  ECC9  F019         	call	i2_Color_Interrupts_threshold	;wreg free
  7443   00333C  0012               	return		;funcret
  7444   00333E                     __end_of_Color_Interrupts_clear:
  7445                           	callstack 0
  7446                           
  7447 ;; *************** function i2_persistence_register *****************
  7448 ;; Defined at:
  7449 ;;		line 46 in file "interrupts.c"
  7450 ;; Parameters:    Size  Location     Type
  7451 ;;		None
  7452 ;; Auto vars:     Size  Location     Type
  7453 ;;		None
  7454 ;; Return value:  Size  Location     Type
  7455 ;;                  1    wreg      void 
  7456 ;; Registers used:
  7457 ;;		wreg, status,2, status,0, cstack
  7458 ;; Tracked objects:
  7459 ;;		On entry : 0/0
  7460 ;;		On exit  : 0/0
  7461 ;;		Unchanged: 0/0
  7462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7467 ;;Total ram usage:        0 bytes
  7468 ;; Hardware stack levels used: 1
  7469 ;; Hardware stack levels required when called: 3
  7470 ;; This function calls:
  7471 ;;		i2_color_writetoaddr
  7472 ;; This function is called by:
  7473 ;;		_Color_Interrupts_clear
  7474 ;; This function uses a non-reentrant model
  7475 ;;
  7476                           
  7477                           	psect	text45
  7478   0034E2                     __ptext45:
  7479                           	callstack 0
  7480   0034E2                     i2_persistence_register:
  7481                           	callstack 20
  7482   0034E2                     
  7483                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  7484   0034E2  0E02               	movlw	2
  7485   0034E4  6E03               	movwf	i2color_writetoaddr@value^0,c
  7486   0034E6  0E0C               	movlw	12
  7487   0034E8  EC29  F01A         	call	i2_color_writetoaddr
  7488   0034EC  0012               	return		;funcret
  7489   0034EE                     __end_ofi2_persistence_register:
  7490                           	callstack 0
  7491                           
  7492 ;; *************** function i2_Color_Interrupts_threshold *****************
  7493 ;; Defined at:
  7494 ;;		line 38 in file "interrupts.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;  upperThresho    2    4[COMRAM] unsigned int 
  7497 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  7498 ;; Auto vars:     Size  Location     Type
  7499 ;;		None
  7500 ;; Return value:  Size  Location     Type
  7501 ;;                  1    wreg      void 
  7502 ;; Registers used:
  7503 ;;		wreg, status,2, status,0, cstack
  7504 ;; Tracked objects:
  7505 ;;		On entry : 0/0
  7506 ;;		On exit  : 0/0
  7507 ;;		Unchanged: 0/0
  7508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7509 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7512 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7513 ;;Total ram usage:        4 bytes
  7514 ;; Hardware stack levels used: 1
  7515 ;; Hardware stack levels required when called: 3
  7516 ;; This function calls:
  7517 ;;		i2_color_writetoaddr
  7518 ;; This function is called by:
  7519 ;;		_Color_Interrupts_clear
  7520 ;; This function uses a non-reentrant model
  7521 ;;
  7522                           
  7523                           	psect	text46
  7524   003392                     __ptext46:
  7525                           	callstack 0
  7526   003392                     i2_Color_Interrupts_threshold:
  7527                           	callstack 20
  7528   003392                     
  7529                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7530   003392  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  7531   003396  0E04               	movlw	4
  7532   003398  EC29  F01A         	call	i2_color_writetoaddr
  7533                           
  7534                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7535   00339C  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7536   00339E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7537   0033A0  0E05               	movlw	5
  7538   0033A2  EC29  F01A         	call	i2_color_writetoaddr
  7539                           
  7540                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7541   0033A6  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  7542   0033AA  0E06               	movlw	6
  7543   0033AC  EC29  F01A         	call	i2_color_writetoaddr
  7544                           
  7545                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7546   0033B0  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7547   0033B2  6E03               	movwf	i2color_writetoaddr@value^0,c
  7548   0033B4  0E07               	movlw	7
  7549   0033B6  EC29  F01A         	call	i2_color_writetoaddr
  7550   0033BA  0012               	return		;funcret
  7551   0033BC                     __end_ofi2_Color_Interrupts_threshold:
  7552                           	callstack 0
  7553                           
  7554 ;; *************** function i2_Color_Interrupts_init *****************
  7555 ;; Defined at:
  7556 ;;		line 29 in file "interrupts.c"
  7557 ;; Parameters:    Size  Location     Type
  7558 ;;		None
  7559 ;; Auto vars:     Size  Location     Type
  7560 ;;		None
  7561 ;; Return value:  Size  Location     Type
  7562 ;;                  1    wreg      void 
  7563 ;; Registers used:
  7564 ;;		wreg, status,2, status,0, cstack
  7565 ;; Tracked objects:
  7566 ;;		On entry : 0/0
  7567 ;;		On exit  : 0/0
  7568 ;;		Unchanged: 0/0
  7569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7572 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7574 ;;Total ram usage:        1 bytes
  7575 ;; Hardware stack levels used: 1
  7576 ;; Hardware stack levels required when called: 3
  7577 ;; This function calls:
  7578 ;;		i2_color_writetoaddr
  7579 ;; This function is called by:
  7580 ;;		_Color_Interrupts_clear
  7581 ;; This function uses a non-reentrant model
  7582 ;;
  7583                           
  7584                           	psect	text47
  7585   00348C                     __ptext47:
  7586                           	callstack 0
  7587   00348C                     i2_Color_Interrupts_init:
  7588                           	callstack 20
  7589   00348C                     
  7590                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7591   00348C  0E13               	movlw	19
  7592   00348E  6E03               	movwf	i2color_writetoaddr@value^0,c
  7593   003490  0E00               	movlw	0
  7594   003492  EC29  F01A         	call	i2_color_writetoaddr
  7595   003496                     
  7596                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7597   003496  0ED0               	movlw	208
  7598   003498  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  7599   00349A  0ECA               	movlw	202
  7600   00349C                     i2u286_47:
  7601   00349C  2EE8               	decfsz	wreg,f,c
  7602   00349E  D7FE               	bra	i2u286_47
  7603   0034A0  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  7604   0034A2  D7FC               	bra	i2u286_47
  7605   0034A4  0012               	return		;funcret
  7606   0034A6                     __end_ofi2_Color_Interrupts_init:
  7607                           	callstack 0
  7608                           
  7609 ;; *************** function i2_color_writetoaddr *****************
  7610 ;; Defined at:
  7611 ;;		line 24 in file "color.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  address         1    wreg     unsigned char 
  7614 ;;  value           1    2[COMRAM] unsigned char 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  address         1    3[COMRAM] unsigned char 
  7617 ;; Return value:  Size  Location     Type
  7618 ;;                  1    wreg      void 
  7619 ;; Registers used:
  7620 ;;		wreg, status,2, status,0, cstack
  7621 ;; Tracked objects:
  7622 ;;		On entry : 0/0
  7623 ;;		On exit  : 0/0
  7624 ;;		Unchanged: 0/0
  7625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7626 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7629 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7630 ;;Total ram usage:        2 bytes
  7631 ;; Hardware stack levels used: 1
  7632 ;; Hardware stack levels required when called: 2
  7633 ;; This function calls:
  7634 ;;		i2_I2C_2_Master_Start
  7635 ;;		i2_I2C_2_Master_Stop
  7636 ;;		i2_I2C_2_Master_Write
  7637 ;; This function is called by:
  7638 ;;		i2_Color_Interrupts_init
  7639 ;;		i2_Color_Interrupts_threshold
  7640 ;;		i2_persistence_register
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text48
  7645   003452                     __ptext48:
  7646                           	callstack 0
  7647   003452                     i2_color_writetoaddr:
  7648                           	callstack 20
  7649                           
  7650                           ;incstack = 0
  7651                           ;i2color_writetoaddr@address stored from wreg
  7652   003452  6E04               	movwf	i2color_writetoaddr@address^0,c
  7653   003454                     
  7654                           ;color.c: 25:     I2C_2_Master_Start();
  7655   003454  EC96  F01A         	call	i2_I2C_2_Master_Start	;wreg free
  7656                           
  7657                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7658   003458  0E52               	movlw	82
  7659   00345A  EC77  F01A         	call	i2_I2C_2_Master_Write
  7660                           
  7661                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7662   00345E  5004               	movf	i2color_writetoaddr@address^0,w,c
  7663   003460  0980               	iorlw	128
  7664   003462  EC77  F01A         	call	i2_I2C_2_Master_Write
  7665                           
  7666                           ;color.c: 28:     I2C_2_Master_Write(value);
  7667   003466  5003               	movf	i2color_writetoaddr@value^0,w,c
  7668   003468  EC77  F01A         	call	i2_I2C_2_Master_Write
  7669                           
  7670                           ;color.c: 29:     I2C_2_Master_Stop();
  7671   00346C  EC91  F01A         	call	i2_I2C_2_Master_Stop	;wreg free
  7672   003470  0012               	return		;funcret
  7673   003472                     __end_ofi2_color_writetoaddr:
  7674                           	callstack 0
  7675                           
  7676 ;; *************** function i2_I2C_2_Master_Write *****************
  7677 ;; Defined at:
  7678 ;;		line 45 in file "i2c.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  data_byte       1    wreg     unsigned char 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  data_byte       1    1[COMRAM] unsigned char 
  7683 ;; Return value:  Size  Location     Type
  7684 ;;                  1    wreg      void 
  7685 ;; Registers used:
  7686 ;;		wreg, status,2, status,0, cstack
  7687 ;; Tracked objects:
  7688 ;;		On entry : 0/0
  7689 ;;		On exit  : 0/0
  7690 ;;		Unchanged: 0/0
  7691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7696 ;;Total ram usage:        1 bytes
  7697 ;; Hardware stack levels used: 1
  7698 ;; Hardware stack levels required when called: 1
  7699 ;; This function calls:
  7700 ;;		i2_I2C_2_Master_Idle
  7701 ;; This function is called by:
  7702 ;;		_Color_Interrupts_clear
  7703 ;;		i2_color_writetoaddr
  7704 ;; This function uses a non-reentrant model
  7705 ;;
  7706                           
  7707                           	psect	text49
  7708   0034EE                     __ptext49:
  7709                           	callstack 0
  7710   0034EE                     i2_I2C_2_Master_Write:
  7711                           	callstack 20
  7712                           
  7713                           ;incstack = 0
  7714                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  7715   0034EE  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  7716   0034F0                     
  7717                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  7718   0034F0  ECF2  F019         	call	i2_I2C_2_Master_Idle	;wreg free
  7719   0034F4                     
  7720                           ;i2c.c: 48:   SSP2BUF = data_byte;
  7721   0034F4  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  7722   0034F8  0012               	return		;funcret
  7723   0034FA                     __end_ofi2_I2C_2_Master_Write:
  7724                           	callstack 0
  7725                           
  7726 ;; *************** function i2_I2C_2_Master_Stop *****************
  7727 ;; Defined at:
  7728 ;;		line 39 in file "i2c.c"
  7729 ;; Parameters:    Size  Location     Type
  7730 ;;		None
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;		None
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, status,2, status,0, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;Total ram usage:        0 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 1
  7749 ;; This function calls:
  7750 ;;		i2_I2C_2_Master_Idle
  7751 ;; This function is called by:
  7752 ;;		_Color_Interrupts_clear
  7753 ;;		i2_color_writetoaddr
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text50
  7758   003522                     __ptext50:
  7759                           	callstack 0
  7760   003522                     i2_I2C_2_Master_Stop:
  7761                           	callstack 20
  7762   003522                     
  7763                           ;i2c.c: 41:   I2C_2_Master_Idle();
  7764   003522  ECF2  F019         	call	i2_I2C_2_Master_Idle	;wreg free
  7765   003526                     
  7766                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  7767   003526  010E               	movlb	14	; () banked
  7768   003528  85DA               	bsf	218,2,b	;volatile
  7769   00352A                     
  7770                           ; BSR set to: 14
  7771   00352A  0012               	return		;funcret
  7772   00352C                     __end_ofi2_I2C_2_Master_Stop:
  7773                           	callstack 0
  7774                           
  7775 ;; *************** function i2_I2C_2_Master_Start *****************
  7776 ;; Defined at:
  7777 ;;		line 27 in file "i2c.c"
  7778 ;; Parameters:    Size  Location     Type
  7779 ;;		None
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;		None
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0, cstack
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7794 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7795 ;;Total ram usage:        0 bytes
  7796 ;; Hardware stack levels used: 1
  7797 ;; Hardware stack levels required when called: 1
  7798 ;; This function calls:
  7799 ;;		i2_I2C_2_Master_Idle
  7800 ;; This function is called by:
  7801 ;;		_Color_Interrupts_clear
  7802 ;;		i2_color_writetoaddr
  7803 ;; This function uses a non-reentrant model
  7804 ;;
  7805                           
  7806                           	psect	text51
  7807   00352C                     __ptext51:
  7808                           	callstack 0
  7809   00352C                     i2_I2C_2_Master_Start:
  7810                           	callstack 20
  7811   00352C                     
  7812                           ;i2c.c: 29:   I2C_2_Master_Idle();
  7813   00352C  ECF2  F019         	call	i2_I2C_2_Master_Idle	;wreg free
  7814   003530                     
  7815                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  7816   003530  010E               	movlb	14	; () banked
  7817   003532  81DA               	bsf	218,0,b	;volatile
  7818   003534                     
  7819                           ; BSR set to: 14
  7820   003534  0012               	return		;funcret
  7821   003536                     __end_ofi2_I2C_2_Master_Start:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function i2_I2C_2_Master_Idle *****************
  7825 ;; Defined at:
  7826 ;;		line 22 in file "i2c.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7844 ;;Total ram usage:        1 bytes
  7845 ;; Hardware stack levels used: 1
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		i2_I2C_2_Master_Start
  7850 ;;		i2_I2C_2_Master_Stop
  7851 ;;		i2_I2C_2_Master_Write
  7852 ;; This function uses a non-reentrant model
  7853 ;;
  7854                           
  7855                           	psect	text52
  7856   0033E4                     __ptext52:
  7857                           	callstack 0
  7858   0033E4                     i2_I2C_2_Master_Idle:
  7859                           	callstack 20
  7860   0033E4                     i2l199:
  7861   0033E4  010E               	movlb	14	; () banked
  7862   0033E6  B5D8               	btfsc	216,2,b	;volatile
  7863   0033E8  EFF8  F019         	goto	i2u130_41
  7864   0033EC  EFFA  F019         	goto	i2u130_40
  7865   0033F0                     i2u130_41:
  7866   0033F0  EFF2  F019         	goto	i2l199
  7867   0033F4                     i2u130_40:
  7868   0033F4                     
  7869                           ; BSR set to: 14
  7870   0033F4  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  7871   0033F8  0E1F               	movlw	31
  7872   0033FA  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  7873   0033FC  A4D8               	btfss	status,2,c
  7874   0033FE  EF03  F01A         	goto	i2u131_41
  7875   003402  EF05  F01A         	goto	i2u131_40
  7876   003406                     i2u131_41:
  7877   003406  EFF2  F019         	goto	i2l199
  7878   00340A                     i2u131_40:
  7879   00340A                     
  7880                           ; BSR set to: 14
  7881   00340A  0012               	return		;funcret
  7882   00340C                     __end_ofi2_I2C_2_Master_Idle:
  7883                           	callstack 0
  7884                           
  7885                           	psect	rparam
  7886   000000                     
  7887                           	psect	temp
  7888   000051                     btemp:
  7889                           	callstack 0
  7890   000051                     	ds	1
  7891   000000                     int$flags	set	btemp
  7892   000000                     wtemp8	set	btemp+1
  7893   000000                     ttemp5	set	btemp+1
  7894   000000                     ttemp6	set	btemp+4
  7895   000000                     ttemp7	set	btemp+8
  7896                           
  7897                           	psect	idloc
  7898                           
  7899                           ;Config register IDLOC0 @ 0x200000
  7900                           ;	unspecified, using default values
  7901   200000                     	org	2097152
  7902   200000  0FFF               	dw	4095
  7903                           
  7904                           ;Config register IDLOC1 @ 0x200002
  7905                           ;	unspecified, using default values
  7906   200002                     	org	2097154
  7907   200002  0FFF               	dw	4095
  7908                           
  7909                           ;Config register IDLOC2 @ 0x200004
  7910                           ;	unspecified, using default values
  7911   200004                     	org	2097156
  7912   200004  0FFF               	dw	4095
  7913                           
  7914                           ;Config register IDLOC3 @ 0x200006
  7915                           ;	unspecified, using default values
  7916   200006                     	org	2097158
  7917   200006  0FFF               	dw	4095
  7918                           
  7919                           ;Config register IDLOC4 @ 0x200008
  7920                           ;	unspecified, using default values
  7921   200008                     	org	2097160
  7922   200008  0FFF               	dw	4095
  7923                           
  7924                           ;Config register IDLOC5 @ 0x20000A
  7925                           ;	unspecified, using default values
  7926   20000A                     	org	2097162
  7927   20000A  0FFF               	dw	4095
  7928                           
  7929                           ;Config register IDLOC6 @ 0x20000C
  7930                           ;	unspecified, using default values
  7931   20000C                     	org	2097164
  7932   20000C  0FFF               	dw	4095
  7933                           
  7934                           ;Config register IDLOC7 @ 0x20000E
  7935                           ;	unspecified, using default values
  7936   20000E                     	org	2097166
  7937   20000E  0FFF               	dw	4095
  7938                           
  7939                           	psect	config
  7940                           
  7941                           ;Config register CONFIG1L @ 0x300000
  7942                           ;	External Oscillator mode Selection bits
  7943                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  7944                           ;	Power-up default value for COSC bits
  7945                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  7946   300000                     	org	3145728
  7947   300000  AA                 	db	170
  7948                           
  7949                           ;Config register CONFIG1H @ 0x300001
  7950                           ;	unspecified, using default values
  7951                           ;	Clock Out Enable bit
  7952                           ;	CLKOUTEN = 0x1, unprogrammed default
  7953                           ;	Clock Switch Enable bit
  7954                           ;	CSWEN = 0x1, unprogrammed default
  7955                           ;	Fail-Safe Clock Monitor Enable bit
  7956                           ;	FCMEN = 0x1, unprogrammed default
  7957   300001                     	org	3145729
  7958   300001  FF                 	db	255
  7959                           
  7960                           ;Config register CONFIG2L @ 0x300002
  7961                           ;	unspecified, using default values
  7962                           ;	Master Clear Enable bit
  7963                           ;	MCLRE = 0x1, unprogrammed default
  7964                           ;	Power-up Timer Enable bit
  7965                           ;	PWRTE = 0x1, unprogrammed default
  7966                           ;	Low-power BOR enable bit
  7967                           ;	LPBOREN = 0x1, unprogrammed default
  7968                           ;	Brown-out Reset Enable bits
  7969                           ;	BOREN = 0x3, unprogrammed default
  7970   300002                     	org	3145730
  7971   300002  FF                 	db	255
  7972                           
  7973                           ;Config register CONFIG2H @ 0x300003
  7974                           ;	unspecified, using default values
  7975                           ;	Brown Out Reset Voltage selection bits
  7976                           ;	BORV = 0x3, unprogrammed default
  7977                           ;	ZCD Disable bit
  7978                           ;	ZCD = 0x1, unprogrammed default
  7979                           ;	PPSLOCK bit One-Way Set Enable bit
  7980                           ;	PPS1WAY = 0x1, unprogrammed default
  7981                           ;	Stack Full/Underflow Reset Enable bit
  7982                           ;	STVREN = 0x1, unprogrammed default
  7983                           ;	Debugger Enable bit
  7984                           ;	DEBUG = 0x1, unprogrammed default
  7985                           ;	Extended Instruction Set Enable bit
  7986                           ;	XINST = 0x1, unprogrammed default
  7987   300003                     	org	3145731
  7988   300003  FF                 	db	255
  7989                           
  7990                           ;Config register CONFIG3L @ 0x300004
  7991                           ;	WDT Period Select bits
  7992                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7993                           ;	WDT operating mode
  7994                           ;	WDTE = OFF, WDT Disabled
  7995   300004                     	org	3145732
  7996   300004  9F                 	db	159
  7997                           
  7998                           ;Config register CONFIG3H @ 0x300005
  7999                           ;	unspecified, using default values
  8000                           ;	WDT Window Select bits
  8001                           ;	WDTCWS = 0x7, unprogrammed default
  8002                           ;	WDT input clock selector
  8003                           ;	WDTCCS = 0x7, unprogrammed default
  8004   300005                     	org	3145733
  8005   300005  FF                 	db	255
  8006                           
  8007                           ;Config register CONFIG4L @ 0x300006
  8008                           ;	unspecified, using default values
  8009                           ;	Write Protection Block 0
  8010                           ;	WRT0 = 0x1, unprogrammed default
  8011                           ;	Write Protection Block 1
  8012                           ;	WRT1 = 0x1, unprogrammed default
  8013                           ;	Write Protection Block 2
  8014                           ;	WRT2 = 0x1, unprogrammed default
  8015                           ;	Write Protection Block 3
  8016                           ;	WRT3 = 0x1, unprogrammed default
  8017                           ;	Write Protection Block 3
  8018                           ;	WRT4 = 0x1, unprogrammed default
  8019                           ;	Write Protection Block 3
  8020                           ;	WRT5 = 0x1, unprogrammed default
  8021                           ;	Write Protection Block 3
  8022                           ;	WRT6 = 0x1, unprogrammed default
  8023                           ;	Write Protection Block 3
  8024                           ;	WRT7 = 0x1, unprogrammed default
  8025   300006                     	org	3145734
  8026   300006  FF                 	db	255
  8027                           
  8028                           ;Config register CONFIG4H @ 0x300007
  8029                           ;	unspecified, using default values
  8030                           ;	Configuration Register Write Protection bit
  8031                           ;	WRTC = 0x1, unprogrammed default
  8032                           ;	Boot Block Write Protection bit
  8033                           ;	WRTB = 0x1, unprogrammed default
  8034                           ;	Data EEPROM Write Protection bit
  8035                           ;	WRTD = 0x1, unprogrammed default
  8036                           ;	Scanner Enable bit
  8037                           ;	SCANE = 0x1, unprogrammed default
  8038                           ;	Low Voltage Programming Enable bit
  8039                           ;	LVP = 0x1, unprogrammed default
  8040   300007                     	org	3145735
  8041   300007  FF                 	db	255
  8042                           
  8043                           ;Config register CONFIG5L @ 0x300008
  8044                           ;	unspecified, using default values
  8045                           ;	UserNVM Program Memory Code Protection bit
  8046                           ;	CP = 0x1, unprogrammed default
  8047                           ;	DataNVM Memory Code Protection bit
  8048                           ;	CPD = 0x1, unprogrammed default
  8049   300008                     	org	3145736
  8050   300008  FF                 	db	255
  8051                           
  8052                           ;Config register CONFIG5H @ 0x300009
  8053                           ;	unspecified, using default values
  8054   300009                     	org	3145737
  8055   300009  FF                 	db	255
  8056                           
  8057                           ;Config register CONFIG6L @ 0x30000A
  8058                           ;	unspecified, using default values
  8059                           ;	Table Read Protection Block 0
  8060                           ;	EBTR0 = 0x1, unprogrammed default
  8061                           ;	Table Read Protection Block 1
  8062                           ;	EBTR1 = 0x1, unprogrammed default
  8063                           ;	Table Read Protection Block 2
  8064                           ;	EBTR2 = 0x1, unprogrammed default
  8065                           ;	Table Read Protection Block 3
  8066                           ;	EBTR3 = 0x1, unprogrammed default
  8067                           ;	Table Read Protection Block 4
  8068                           ;	EBTR4 = 0x1, unprogrammed default
  8069                           ;	Table Read Protection Block 5
  8070                           ;	EBTR5 = 0x1, unprogrammed default
  8071                           ;	Table Read Protection Block 6
  8072                           ;	EBTR6 = 0x1, unprogrammed default
  8073                           ;	Table Read Protection Block 7
  8074                           ;	EBTR7 = 0x1, unprogrammed default
  8075   30000A                     	org	3145738
  8076   30000A  FF                 	db	255
  8077                           
  8078                           ;Config register CONFIG6H @ 0x30000B
  8079                           ;	unspecified, using default values
  8080                           ;	Boot Block Table Read Protection bit
  8081                           ;	EBTRB = 0x1, unprogrammed default
  8082   30000B                     	org	3145739
  8083   30000B  FF                 	db	255
  8084                           tosu	equ	0xFFF
  8085                           tosh	equ	0xFFE
  8086                           tosl	equ	0xFFD
  8087                           stkptr	equ	0xFFC
  8088                           pclatu	equ	0xFFB
  8089                           pclath	equ	0xFFA
  8090                           pcl	equ	0xFF9
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           prodh	equ	0xFF4
  8096                           prodl	equ	0xFF3
  8097                           indf0	equ	0xFEF
  8098                           postinc0	equ	0xFEE
  8099                           postdec0	equ	0xFED
  8100                           preinc0	equ	0xFEC
  8101                           plusw0	equ	0xFEB
  8102                           fsr0h	equ	0xFEA
  8103                           fsr0l	equ	0xFE9
  8104                           wreg	equ	0xFE8
  8105                           indf1	equ	0xFE7
  8106                           postinc1	equ	0xFE6
  8107                           postdec1	equ	0xFE5
  8108                           preinc1	equ	0xFE4
  8109                           plusw1	equ	0xFE3
  8110                           fsr1h	equ	0xFE2
  8111                           fsr1l	equ	0xFE1
  8112                           bsr	equ	0xFE0
  8113                           indf2	equ	0xFDF
  8114                           postinc2	equ	0xFDE
  8115                           postdec2	equ	0xFDD
  8116                           preinc2	equ	0xFDC
  8117                           plusw2	equ	0xFDB
  8118                           fsr2h	equ	0xFDA
  8119                           fsr2l	equ	0xFD9
  8120                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        2
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      80
    BANK0           160     50     152
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_1(CODE[19]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2639$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2639$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S271DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S271DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_color_normalise
    _wallSmash->_setMotorPWM
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0   95248
                                             60 COMRAM     2     2      0
                                              0 BANK0     50    50      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3549
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   34477
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34702
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4285
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11026
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5109
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    4893
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3416
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1318
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    2659
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     702
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _reverse
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash
     _setMotorPWM

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      50       1       85.1%
BITBIGSFRllllhh     52      0       0      40        0.0%
BITBIGSFRllllhh     37      0       0      42        0.0%
BITBIGSFRllllll     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRllllhl      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRllllhh      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRlllllh      1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      61        0.0%
DATA                 0      0      E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 14 12:00:02 2022

                            _color_read_Red 30E2                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 2D1A  
                              ___fldiv@sign 0032                             _color_read_Blue 31D2  
                                        l91 32D8                                          l94 3450  
                                        l97 3130                             ??_motor_retrace 002D  
                       ___wmul@multiplicand 000B                            _color_read_Clear 3182  
                          _color_read_Green 3132                           ??_Interrupts_init 0009  
                                       l100 3180                                         l103 3220  
                                       l112 2DDE                                         l121 34C8  
                                       l202 33E2                                         l106 31D0  
                                       l130 3546                                         l211 3516  
                                       l115 27DC                                         l124 353A  
                                       l205 3520                                         l214 34E0  
                                       l127 3540                                         l208 350C  
                                       l217 32A4                                         l138 1A26  
                                       l163 1E3C                                         l308 226E  
                                       l169 1E3C                                         l611 2F44  
                                       l196 3366                                         l605 330A  
                                       l199 33BC                                         l471 348A  
                                       l608 2FB6                                         l641 2B44  
                                       l625 2D18                                         l633 2C2E  
                                       l474 3390                                         l650 3430  
                                       l468 34BA                                         l636 2AE4  
                                       l644 30E0                                         l581 2E5E  
                                       l477 34D4                                         l591 308A  
                                       l647 3502                                         l920 2A4C  
                                       l594 3020                                         l915 2A06  
                                       l588 2948                            ??_motor_response 002D  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 34BC  
                       i2_color_writetoaddr 3452                                         wreg 000FE8  
                           _color_normalise 266E                                        l1141 2ECA  
                                      l1232 21D6                                        l1312 25A8  
                                      l3000 18F6                                        l1305 2510  
                                      l1234 2036                                        l3010 1936  
                                      l3002 190C                                        l1243 207C  
                                      l1308 266C                                        l1148 2ED2  
                                      l3020 1988                                        l3012 194A  
                                      l3100 1E10                                        l1245 20F4  
                                      l1237 1FFA                                        l3110 3368  
                                      l1246 20E2                                        l3022 199C  
                                      l3014 1960                                        l3030 1A06  
                                      l3006 1912                                        l1319 2604  
                                      l3104 34A6                                        l3120 2E38  
                                      l2400 2E9E                                        l3032 1A18  
                                      l3024 19B4                                        l3016 1968  
                                      l3008 192E                                        l3040 1A28  
                                      l3112 34CA                                        l3200 21FA  
                                      l3106 3472                                        l3130 2E52  
                                      l3122 2E3A                                        l3114 2DE0  
                                      l2402 2EB4                                        l3034 1A1E  
                                      l3026 19DE                                        l3042 1A50  
                                      l3210 221E                                        l3202 21FE  
                                      l3108 347C                                        l3132 2E5C  
                                      l3124 2E44                                        l3116 2E0A  
                                      l3140 304E                                        l2404 2EBC  
                                      l2420 27FA                                        l2500 2B38  
                                      l3036 1A24                                        l3028 19FE  
                                      l3060 1B80                                        l3052 1AEA  
                                      l3044 1A78                                        l3300 24A8  
                                      l3220 2258                                        l3212 222A  
                                      l3204 2202                                        l2414 33BC  
                                      l2510 333E                                        l3126 2E46  
                                      l3118 2E2E                                        l3142 3062  
                                      l3134 3022                                        l3150 2FD4  
                                      l2406 2EBE                                        l2430 28C4  
                                      l2422 284E                                        l2502 32DA  
                                      l3070 1C2A                                        l3062 1BA8  
                                      l3054 1B14                                        l3046 1A94  
                                      l3302 24AA                                        l3230 2262  
                                      l3222 225A                                        l3214 2236  
                                      l3206 2206                                        l2416 33CC  
                                      l2520 3354                                        l2512 3348  
                                      l3128 2E50                                        l3144 3076  
                                      l3136 302E                                        l3152 2FE4  
                                      l2408 2EC4                                        l2432 2908  
                                      l2424 2862                                        l2504 32F2  
                                      l2600 2CA0                                        l3080 1CC4  
                                      l3072 1C40                                        l3064 1BC0  
                                      l3056 1B3C                                        l3048 1ABE  
                                      l3160 2B46                                        l3240 226C  
                                      l3232 2264                                        l3224 225C  
                                      l3216 2242                                        l3208 221A  
                                      l2450 34D8                                        l2522 3434  
                                      l2514 334E                                        l2530 3132  
                                      l3138 303E                                        l3154 2FF8  
                                      l3146 2FB8                                        l2426 28A4  
                                      l2418 27DE                                        l2506 32FE  
                                      l2610 2D00                                        l2602 2CAC  
                                      l3090 1D5C                                        l3082 1CD8  
                                      l3074 1C6A                                        l3066 1BEC  
                                      l3058 1B56                                        l3170 2BA2  
                                      l3162 2B5E                                        l3250 22AA  
                                      l3242 2280                                        l3234 2266  
                                      l3226 225E                                        l3218 2256  
                                      l2452 34DC                                        l2516 3350  
                                      l2700 205C                                        l2620 1E5A  
                                      l2460 3508                                        l2532 3178  
                                      l2524 30E2                                        l3156 300C  
                                      l3148 2FC4                                        l2428 28A8  
                                      l2612 2D0C                                        l2604 2CB8  
                                      l3084 1CF0                                        l3092 1D78  
                                      l3076 1C7E                                        l3068 1C00  
                                      l3180 2BFE                                        l3172 2BB6  
                                      l3164 2B6E                                        l3260 2304  
                                      l3252 22AC                                        l3244 2282  
                                      l3236 2268                                        l3228 2260  
                                      l2446 3518                                        l2454 350E  
                                      l2518 3352                                        l2710 209A  
                                      l2702 2062                                        l2622 1E6A  
                                      l2630 1E94                                        l2614 1E3E  
                                      l2470 32A0                                        l2462 3266  
                                      l2542 3182                                        l2526 3128  
                                      l3158 34FA                                        l2390 2E68  
                                      l2382 340C                                        l2606 2CD0  
                                      l3094 1DA2                                        l3086 1D1C  
                                      l3078 1C9A                                        l2550 353C  
                                      l3182 2C16                                        l3174 2BC2  
                                      l3166 2B7E                                        l3270 235A  
                                      l3262 231C                                        l3254 22C0  
                                      l3246 2294                                        l3238 226A  
                                      l2448 351C                                        l2456 3512  
                                      l2720 2104                                        l2712 209E  
                                      l2704 206C                                        l2640 1EC0  
                                      l2632 1EA4                                        l2624 1E7A  
                                      l2616 1E4A                                        l2800 25E6  
                                      l2472 32A2                                        l2464 326A  
                                      l2536 31D2                                        l2544 31C8  
                                      l2392 2E7A                                        l2384 3428  
                                      l2560 2F7E                                        l2480 2A76  
                                      l2608 2CE8                                        l3096 1DCA  
                                      l3088 1D30                                        l2552 3542  
                                      l3184 2C22                                        l3176 2BCE  
                                      l3168 2B8E                                        l3280 23E8  
                                      l3272 2366                                        l3264 231E  
                                      l3256 22D2                                        l3248 2296  
                                      l2730 2166                                        l2722 2110  
                                      l2714 20AC                                        l2706 207A  
                                      l2642 1ED0                                        l2650 1EFA  
                                      l2634 1EAA                                        l2626 1E8A  
                                      l2618 1E58                                        l2810 263C  
                                      l2802 25F4                                        l2466 3272  
                                      l2458 3504                                        l2538 3218  
                                      l2394 2E82                                        l2562 2F8E  
                                      l2554 2F46                                        l2490 2ACC  
                                      l2482 2A86                                        l2570 30A0  
                                      l3098 1DE6                                        l3178 2BE6  
                                      l3290 2432                                        l3282 23EE  
                                      l3274 2372                                        l3266 2330  
                                      l3258 22F0                                        l2740 21C4  
                                      l2732 217C                                        l2724 211E  
                                      l2716 20DA                                        l2708 208C  
                                      l2660 1F3C                                        l2652 1F0A  
                                      l2644 1EE0                                        l2636 1EB0  
                                      l2628 1E8C                                        l2812 264C  
                                      l2804 2612                                        l2468 327A  
                                      l2396 2E8A                                        l2388 2E60  
                                      l2564 2F9E                                        l2556 2F5E  
                                      l2492 2AD8                                        l2484 2A96  
                                      l2476 2A4E                                        l2572 30B6  
                                      l2580 2F0C                                        l2900 120A  
                                      l2548 3536                                        l3292 2446  
                                      l3284 2400                                        l3276 2396  
                                      l3268 2344                                        l3196 21D8  
                                      l2830 32AA                                        l2742 21CA  
                                      l2734 2196                                        l2726 2148  
                                      l2654 1F20                                        l2646 1EF0  
                                      l2638 1EBE                                        l2814 265A  
                                      l2806 2614                                        l2398 2E98  
                                      l2566 2FAA                                        l2558 2F6E  
                                      l2494 2AFC                                        l2486 2AAA  
                                      l2478 2A66                                        l2582 2F1C  
                                      l2574 2ED4                                        l2910 1340  
                                      l2902 1248                                        l2590 2C48  
                                      l3294 245E                                        l3286 2406  
                                      l3278 23CC                                        l3198 21F6  
                                      l2832 32B4                                        l2744 21CC  
                                      l2736 21B2                                        l2728 214C  
                                      l2680 1FBE                                        l2672 1F74  
                                      l2656 1F30                                        l2664 1F50  
                                      l2648 1EF2                                        l2816 265C  
                                      l2808 2618                                        l2840 266E  
                                      l2760 29C6                                        l2752 294A  
                                      l2496 2B14                                        l2488 2ABE  
                                      l2568 308C                                        l2584 2F2C  
                                      l2576 2EEC                                        l2920 13DA  
                                      l2912 137E                                        l2904 1286  
                                      l2592 2C58                                        l3296 247C  
                                      l3288 241A                                        l2834 32C4  
                                      l2738 21B6                                        l2690 2004  
                                      l2682 1FC6                                        l2674 1F8E  
                                      l2666 1F60                                        l2658 1F38  
                                      l2842 2676                                        l2770 2A4A  
                                      l2762 29D4                                        l2754 2978  
                                      l2498 2B2C                                        l2586 2F38  
                                      l2578 2EFC                                        l2930 144A  
                                      l2922 13EE                                        l2914 139C  
                                      l2906 12C4                                        l2594 2C68  
                                      l2850 34BC                                        l3298 2490  
                                      l2836 32CE                                        l2828 32A6  
                                      l2692 2022                                        l2684 1FD6  
                                      l2676 1F9E                                        l2668 1F60  
                                      l2780 2520                                        l2844 26CA  
                                      l2764 29E6                                        l2756 2988  
                                      l2932 1488                                        l2924 1406  
                                      l2916 13B0                                        l2908 1302  
                                      l2860 0F0E                                        l2852 0E16  
                                      l2596 2C78                                        l2588 2C30  
                                      l2694 2024                                        l2686 1FEA  
                                      l2678 1FAE                                        l2790 255E  
                                      l2782 2536                                        l2774 24BC  
                                      l2846 2722                                        l2838 2D1A  
                                      l2766 29F4                                        l2758 29B6  
                                      l2950 15C8                                        l2934 14C6  
                                      l2942 150C                                        l2918 13C4  
                                      l2870 0FF4                                        l2862 0F4C  
                                      l2854 0E54                                        l2598 2C8C  
                                      l2696 2034                                        l2688 1FF8  
                                      l2792 2590                                        l2776 24CC  
                                      l2848 277A                                        l2768 2A44  
                                      l2960 1688                                        l2944 154A  
                                      l2936 14EE                                        l2872 1020  
                                      l2864 0F8A                                        l2880 1052  
                                      l2856 0E92                                        l2928 140C  
                                      l2698 2046                                        l2794 2592  
                                      l2786 254A                                        l2778 24DA  
                                      l2970 1780                                        l2962 16C6  
                                      l2946 1588                                        l2954 15CE  
                                      l2938 1506                                        l2890 1188  
                                      l2882 1090                                        l2874 1034  
                                      l2866 0FC8                                        l2858 0ED0  
                                      l2796 259E                                        l2788 2552  
                                      l2980 1816                                        l2964 1704  
                                      l2956 160C                                        l2948 15B0  
                                      l2892 11C6                                        l2884 10CE  
                                      l2876 104C                                        l2868 0FDC  
                                      l2798 25DA                                        l2982 182E  
                                      l2966 1742                                        l2958 164A  
                                      l2974 1786                                        l2894 11EE  
                                      l2886 110C                                        l2984 185A  
                                      l2992 188A                                        l2976 17C4  
                                      l2968 176A                                        l2896 1204  
                                      l2888 114A                                        l2994 18C8  
                                      l2986 186E                                        l2978 1802  
                                      l2996 18CE                                        l2988 1884  
                                      l2998 18E2                                        STR_1 0E01  
                                      u2010 144A                                        u2011 1446  
                                      u2100 1704                                        u2020 1488  
                                      u2101 1700                                        u2021 1484  
                                      u2110 1742                                        u2030 14C6  
                                      u2111 173E                                        u2031 14C2  
                                      u1320 33CC                                        u2120 17C4  
                                      u2040 154A                                        u2008 1392  
                                      u1400 2CD0                                        u2200 1ABE  
                                      u1321 33C8                                        u2121 17C0  
                                      u2041 1546                                        u1401 2CCC  
                                      u2201 1ABA                                        u1330 33E2  
                                      u2130 1802                                        u2050 1588  
                                      u1410 2CE8                                        u2210 1B14  
                                      u1331 33DE                                        u2131 17FE  
                                      u2051 1584                                        u1411 2CE4  
                                      u2211 1B10                                        u1500 1FD6  
                                      u1420 1E58                                        u1340 27FA  
                                      u2140 18C8                                        u2060 160C  
                                      u2220 1B80                                        u2300 2294  
                                      u1501 1FD2                                        u1421 1E54  
                                      u1341 27F6                                        u2141 18C4  
                                      u2061 1608                                        u2221 1B7C  
                                      u2301 2290                                        u1510 1FF8  
                                      u1430 1E6A                                        u1270 2E7A  
                                      u1350 28C4                                        u2150 192E  
                                      u2070 164A                                        u2230 1CC4  
                                      u2310 22AA                                        u1511 1FF4  
                                      u1431 1E66                                        u1271 2E76  
                                      u1351 28C0                                        u2151 192A  
                                      u2071 1646                                        u2231 1CC0  
                                      u2311 22A6                                        u1600 2104  
                                      u1520 2022                                        u1440 1E7A  
                                      u1360 328E                                        u1280 2E98  
                                      u2160 1984                                        u2080 1688  
                                      u2240 1DA2                                        u2320 22D2  
                              _BAUD4CONbits 000EE9                                        u1601 2100  
                                      u1521 201E                                        u1441 1E76  
                                      u1361 3286                                        u1281 2E94  
                                      u2161 1980                                        u2081 1684  
                                      u2241 1D9E                                        u2321 22CE  
                                      u1610 211E                                        u1530 2046  
                                      u1450 1EBE                                        u1290 2EB4  
                                      u2170 19FE                                        u2090 16C6  
                                      u2250 1E10                                        u2330 22F0  
                                      u1611 211A                                        u1531 2042  
                                      u1451 1EBA                                        u1291 2EB0  
                                      u2171 19FA                                        u2091 16C2  
                                      u2251 1E0C                                        u2331 22EC  
                                      u1620 2166                                        u1540 205C  
                                      u1460 1ED0                                        u1700 24CC  
                                      u1380 2AFC                                        u2180 1A18  
                                      u2260 2BE6                                        u2340 2330  
                                      u1621 2162                                        u1541 2058  
                                      u1461 1ECC                                        u1701 24C8  
                                      u1381 2AF8                                        u2181 1A14  
                                      u2261 2BE2                                        u2341 232C  
                                      u1630 2196                                        u1550 207A  
                                      u1470 1EE0                                        u1710 24DA  
                                      u1390 2B14                                        u2190 1A50  
                                      u2270 2BFE                                        u2350 2384  
                                      u1631 2192                                        u1551 2076  
                                      u1471 1EDC                                        u1711 24D6  
                                      u1391 2B10                                        u2191 1A4C  
                                      u2271 2BFA                                        u2351 237C  
                                      u1640 21C4                                        u1560 209A  
                                      u1480 1F20                                        u1720 2536  
                                      u1800 0E54                                        u1641 21C0  
                                      u1561 2096                                        u1481 1F1C  
                                      u1721 2532                                        u1801 0E50  
                                      u1570 20AC                                        u1490 1F60  
                                      u1730 258C                                        u1378 3290  
                                      u1650 2978                                        u1810 0E92  
                                      u2370 2400                                        u2290 2280  
                                      _T2PR 000FBC                                        u1571 20A8  
                                      u1491 1F5C                                        u1731 2588  
                                      u1651 2974                                        u1811 0E8E  
                                      u2507 2450                                        u2371 23FC  
                                      u2291 227C                                        u1580 20DA  
                                      u1740 25D6                                        u1660 29B6  
                                      u1900 114A                                        u1820 0ED0  
                                      u2380 2470                                        u1581 20D6  
                                      u1741 25D2                                        u1661 29B2  
                                      u1901 1146                                        u1821 0ECC  
                                      u2517 249A                                        u2381 2468  
                                      u1590 20F0                                        u1750 25F4  
                                      u1670 29D4                                        u1910 1188  
                                      u1830 0F0E                                        u1591 20EC  
                                      u1751 25F0                                        u1671 29D0  
                                      u1911 1184                                        u1831 0F0A  
                                      u2607 1CE2                                        u2527 1A82  
                                      u1760 2604                                        u1680 29F4  
                                      u1920 11C6                                        u1840 0F4C  
                                      u2368 2386                                        u1761 2600  
                                      u1681 29F0                                        u1921 11C2  
                                      u1841 0F48                                        u2617 1D0E  
                                      u2537 1B46                                        u1770 2612  
                                      u1690 2A44                                        u1930 1248  
                                      u1850 0F8A                                        u1771 260E  
                                      u1691 2A40                                        u2707 13F8  
                                      u1931 1244                                        u1851 0F86  
                                      u2627 1D3A                                        u2547 1BB2  
                                      u1780 264C                                        u1940 1286  
                                      u1860 0FC8                                        u1781 2648  
                                      u2717 14F8                                        u1941 1282  
                                      u1861 0FC4                                        u2637 1D66  
                                      u2557 1BDE                                        u2477 230E  
                                      u1790 265A                                        u1950 12C4  
                                      u1870 1090                                        u2398 2472  
                                      u1791 2656                                        u2807 19D2  
                                      u2727 15BA                                        u1951 12C0  
                                      u1871 108C                                        u2647 1DD4  
                                      u2567 1C0A                                        u2487 234E  
                                      u1960 1302                                        u1880 10CE  
                                      u2817 30AA                                        u2737 1774  
                                      u1961 12FE                                        u1881 10CA  
                                      u2657 0FE6                                        u2577 1C34  
                                      u2497 2424                                        u1970 1340  
                                      u1890 110C                                        u2827 30D4  
                                      u2747 1820                                        u1971 133C  
                                      u1891 1108                                        u2667 1012  
                                      u2587 1C5E                                        u1980 137E  
                                      u2837 2AC4                                        u2757 184C  
                                      u1981 137A                                        u2677 103E  
                                      u2597 1C88                                        u1990 1390  
                                      u2847 32BA                                        u2767 1878  
                                      u1991 1388                                        u2687 11F8  
                                      u2857 3482                                        u2777 1900  
                                      u2697 13CE                                        u2787 1954  
                                      u2797 19A6                                        i2l94 3470  
                                      _bLED 3542                                        _gLED 353C  
                                      _rLED 3536                                        _main 21D8  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0051  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0036                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 0033                      __end_of_color_read_Red 3132  
                           __end_of_HighISR 0036                                ___param_bank 000000  
                                     ?_bLED 0001                                       ?_gLED 0001  
                                     ?_rLED 0001                                       ?_main 0001  
                           __end_of___fldiv 21D8                             __end_of___lwdiv 2ED4  
                                     i2l202 340A                                       i2l211 352A  
                                     i2l205 3534                                       i2l214 34F8  
                                     i2l199 33E4                                       i2l471 34A4  
                                     i2l480 333C                                       i2l474 33BA  
                                     i2l477 34EC                                       i2l486 0032  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 3522                  __end_of_I2C_2_Master_Write 34E2  
                                     tablat 000FF5                       _Color_Interrupts_init 3472  
                           __end_of_reverse 2B46                                       ttemp5 0052  
                                     ttemp6 0055                                       ttemp7 0059  
                                     status 000FD8                                       wtemp8 0052  
                   __end_of_color_read_RGBC 2DE0                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 3222                       _I2C_2_Master_RepStart 3504  
                           ?_color_read_Red 000D                                __end_of_bLED 3548  
                              __end_of_gLED 3542                             __initialization 3222  
                              __end_of_rLED 353C                                __end_of_main 24BA  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                                      ??_rLED 0009  
                                    ??_main 003D                               __activetblptr 000001  
                   __end_of_color_normalise 27DE                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l2410 33E4  
                                    i2l2412 33F4                                      i2l2440 3526  
                                    i2l2434 352C                                      i2l2442 34F0  
                                    i2l2436 3530                                      i2l2444 34F4  
                                    i2l2508 3454                                      i2l3340 000A  
                                    i2l2438 3522                                      i2l3350 002E  
                                    i2l3342 001A                                      i2l3344 001C  
                                    i2l3194 330C                                      i2l3346 0024  
                                    i2l2820 348C                                      i2l3348 002A  
                                    i2l2822 3496                                      i2l2824 3392  
                                    i2l2826 34E2                                      _RG6PPS 000E88  
                                 ??_HighISR 0009                    __end_of_color_click_init 32DA  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 266E    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 34D6  
                              _CCPTMRS0bits 000FAD                                      ___flge 294A  
                                    ___wmul 340C                                   ??___fldiv 002A  
                                 ??___lwdiv 0013                                      clear_0 3240  
                                    clear_1 324C                                      isa$std 000001  
                                    main@mL 00E4                                      main@mR 00ED  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 330C  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_reverse 0020    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 2FB8                            __end_of_turnPrep 30E2  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 3252                    __end_of_color_read_Clear 31D2  
                  __end_of_color_read_Green 3182                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 34A6  
                            __pcstackCOMRAM 0001                                __pidataBANK0 3548  
            __end_ofi2_persistence_register 34EE                                ?_tricolorLED 0001  
                          ?_color_normalise 003B                     i2_Color_Interrupts_init 348C  
                                __pbssBANK0 0060                           _color_writetoaddr 3432  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0027                       __end_of_motor_retrace 1E3E  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 34CA                                  _buggy_path 00B5  
                                _buggy_step 0049                     __end_of_Interrupts_init 34BC  
                            _lowerThreshold 00B0                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 3452                          _I2C_2_Master_Start 3518  
                       i2_I2C_2_Master_Idle 33E4                          _I2C_2_Master_Write 34D6  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 3522  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fldiv 1E3E                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 2E60                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 0045  
                                   __pcinit 3222                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                   ?_turnPrep 0021  
                                   __ptext0 21D8                                     __ptext1 2B46  
                                   __ptext2 34BC                                     __ptext3 3536  
                                   __ptext4 353C                                     __ptext5 3542  
                                   __ptext6 34CA                                     __ptext7 1A28  
                                   __ptext8 2C30                                     __ptext9 0E16  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00F6                                     _reverse 2A4E  
                             _RxBufWriteCnt 0050                                 motorTRIS@mL 0009  
                     ?_persistence_register 0001                                 motorTRIS@mR 000B  
                               wallSmash@mL 001C                                 wallSmash@mR 001E  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 3252                 __end_ofi2_color_writetoaddr 3472  
                         ?_color_click_init 0001                           __end_of_motorTRIS 3504  
                         __end_of_wallSmash 2C30                           __end_of_norm_stop 330C  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 3022                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 2FB8  
                             _interrupt_ctr 00B2                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 2DE0                                  ??_turnLeft 0020  
                                ??_turnPrep 0025                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 2F46                       ??i2_I2C_2_Master_Stop 0002  
                             ___xxtofl@sign 001C                     ??_Color_Interrupts_init 000D  
                                 _TRISAbits 000F81                          setMotorPWM@posDuty 001A  
                                 _TRISBbits 000F82                                   _TRISCbits 000F83  
                                 _TRISDbits 000F84                                   _TRISEbits 000F85  
                                 _TRISFbits 000F86                                   _TRISGbits 000F87  
                                 _TRISHbits 000F88                                 ___fldiv@grs 0035  
                               ___fldiv@rem 002E                            fullSpeedAhead@mL 001C  
                          fullSpeedAhead@mR 001E                    color_writetoaddr@address 000C  
                   ??_I2C_2_Master_RepStart 000A                            ?_Interrupts_init 0001  
                               _CCP1CONbits 000FAB                           ?_color_read_Clear 000D  
                              _EUSART4RXbuf 009C                                _EUSART4TXbuf 0060  
                               _CCP2CONbits 000FA7                           ?_color_read_Green 000D  
                               _CCP3CONbits 000F26                                 _CCP4CONbits 000F22  
                        ??_color_read_Clear 000F                          ??_color_read_Green 000F  
            __end_of_Color_Interrupts_clear 333E                              __end_of___flge 2A4E  
                            _fullSpeedAhead 2C30                              __end_of___wmul 3432  
                       color_read_Clear@tmp 0012                         start_initialization 3222  
                    ??_persistence_register 000D                               _TxBufWriteCnt 004E  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 2E60  
                    __end_of_fullSpeedAhead 2D1A                                    ??___flge 0011  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009                         color_normalise@RGBC 003B  
                               __pdataBANK0 00F6               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 3536                __end_ofi2_I2C_2_Master_Write 34FA  
                                 ___fldiv@a 0026                                   ___fldiv@b 0022  
                               __pbssCOMRAM 003F                               __pcstackBANK0 00C4  
                            _motor_response 0E16                                    ?_HighISR 0001  
                                 _amb_clear 003F                                   _amb_green 0043  
                           motor_retrace@mL 0029                             motor_retrace@mR 002B  
                          ___lwdiv@dividend 000F                             motor_response@j 002F  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fldiv 0022                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 33BC                           _I2C_2_Master_Init 333E  
                         _I2C_2_Master_Read 3264                           _I2C_2_Master_Stop 350E  
                              _RxBufReadCnt 004F                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 1A28                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                                  i2u130_40 33F4                                    i2u130_41 33F0  
                                  i2u131_40 340A                                    i2u131_41 3406  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u244_40 001A                                    i2u244_41 0016  
                                  _PIR0bits 000E33                                    i2u286_47 349C  
                                  _PIR4bits 000E37                                   _motorTRIS 34FA  
                                 _wallSmash 2B46                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 32DA  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 33E4                   __end_of_I2C_2_Master_Init 3368  
                 __end_of_I2C_2_Master_Read 32A6                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3518                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 004D  
                  i2color_writetoaddr@value 0003                                   _turnRight 2ED4  
             __end_of_Color_Interrupts_init 348C                             ?_motor_response 0027  
             __end_of_I2C_2_Master_RepStart 350E                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 294A                        i2_I2C_2_Master_Start 352C  
                      i2_I2C_2_Master_Write 34EE                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0027                           ??_color_normalise 003D  
                                ?_motorTRIS 0009                                    __Lrparam 0000  
                                ?_wallSmash 001C                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 33BC  
              i2_Color_Interrupts_threshold 3392                 __end_ofi2_I2C_2_Master_Idle 340C  
               __end_ofi2_I2C_2_Master_Stop 352C                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 1A28                               ??_tricolorLED 0009  
                                  _amb_blue 0041                                    ___xxtofl 24BA  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 2ED4  
                                  __ptext11 308C                                    __ptext20 2FB8  
                                  __ptext12 2A4E                                    __ptext21 3022  
                                  __ptext13 32DA                                    __ptext30 266E  
                                  __ptext22 2DE0                                    __ptext14 2F46  
                                  __ptext31 24BA                                    __ptext23 2D1A  
                                  __ptext15 27DE                                    __ptext40 350E  
                                  __ptext32 1E3E                                    __ptext24 30E2  
                                  __ptext16 340C                                    __ptext41 3518  
                                  __ptext33 32A6                                    __ptext25 3132  
                                  __ptext17 2E60                                    __ptext50 3522  
                                  __ptext42 33BC                                    __ptext34 333E  
                                  __ptext26 3182                                    __ptext18 294A  
                                  __ptext51 352C                                    __ptext35 34A6  
                                  __ptext27 31D2                                    __ptext19 34FA  
                                  __ptext52 33E4                                    __ptext44 330C  
                                  __ptext36 3368                                    __ptext28 3504  
                                  __ptext45 34E2                                    __ptext37 3472  
                                  __ptext29 3264                                    __ptext46 3392  
                                  __ptext38 3432                                    __ptext47 348C  
                                  __ptext39 34D6                                    __ptext48 3452  
                                  __ptext49 34EE                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                   reverse@mL 001C  
                                 reverse@mR 001E                                    _lost_ctr 0047  
                                turnPrep@mL 0021                                  turnPrep@mR 0023  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 00C4                                    int$flags 0051  
        __end_of_Color_Interrupts_threshold 3392               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 3368                                    _turnLeft 2F46  
                                  _turnPrep 308C                              ?_motor_retrace 0027  
                                _INTCONbits 000FF2                                 _setMotorPWM 27DE  
                              motorLinit@mL 0009                         __end_of_tricolorLED 34CA  
                                  intlevel2 0000                                _motor_return 00B4  
                        __end_of_motorLinit 308C                          __end_of_motorRinit 3022  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 34A6  
                          _color_click_init 32A6                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 004B  
                    i2_persistence_register 34E2                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
