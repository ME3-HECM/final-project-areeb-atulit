

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 01:22:47 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   003C96                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _upperThreshold
   116   003C96  07D0               	dw	2000
   117   000000                     _TRISCbits	set	3971
   118   000000                     _TRISBbits	set	3970
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATFbits	set	3966
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISAbits	set	3969
   127   000000                     _TRISEbits	set	3973
   128   000000                     _SSP2CON2bits	set	3802
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _ANSELFbits	set	3764
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _TRISGbits	set	3975
   138   000000                     _TRISHbits	set	3976
   139   000000                     _PORTFbits	set	3982
   140   000000                     _LATDbits	set	3964
   141   000000                     _T2PR	set	4028
   142   000000                     _T2CONbits	set	4029
   143   000000                     _TMR0L	set	4051
   144   000000                     _TMR0H	set	4052
   145   000000                     _T0CON0bits	set	4053
   146   000000                     _T0CON1bits	set	4054
   147   000000                     _INTCONbits	set	4082
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _RC4REG	set	3811
   154   000000                     _SP4BRGL	set	3813
   155   000000                     _TX4STAbits	set	3816
   156   000000                     _BAUD4CONbits	set	3817
   157   000000                     _SSP2CON2	set	3802
   158   000000                     _SSP2STAT	set	3800
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _PIE4bits	set	3629
   162   000000                     _RC0PPS	set	3682
   163   000000                     _RD5PPS	set	3695
   164   000000                     _RE2PPS	set	3700
   165   000000                     _ANSELBbits	set	3738
   166   000000                     _RD6PPS	set	3696
   167   000000                     _RC7PPS	set	3689
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _PIR0bits	set	3635
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181                           
   182                           	psect	smallconst
   183   000E00                     __psmallconst:
   184                           	callstack 0
   185   000E00  00                 	db	0
   186   000E01                     
   187                           ; BSR set to: 14
   188   000E01  52                 	db	82	;'R'
   189   000E02  47                 	db	71	;'G'
   190   000E03  42                 	db	66	;'B'
   191   000E04  43                 	db	67	;'C'
   192   000E05  3A                 	db	58	;':'
   193   000E06  25                 	db	37
   194   000E07  66                 	db	102	;'f'
   195   000E08  20                 	db	32
   196   000E09  25                 	db	37
   197   000E0A  66                 	db	102	;'f'
   198   000E0B  20                 	db	32
   199   000E0C  25                 	db	37
   200   000E0D  66                 	db	102	;'f'
   201   000E0E  20                 	db	32
   202   000E0F  25                 	db	37
   203   000E10  66                 	db	102	;'f'
   204   000E11  20                 	db	32
   205   000E12  25                 	db	37
   206   000E13  66                 	db	102	;'f'
   207   000E14  0A                 	db	10
   208   000E15  00                 	db	0
   209   000E16  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214   00395C                     __pcinit:
   215                           	callstack 0
   216   00395C                     start_initialization:
   217                           	callstack 0
   218   00395C                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (2 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223   00395C  0E96               	movlw	low __pidataBANK0
   224   00395E  6EF6               	movwf	tblptrl,c
   225   003960  0E3C               	movlw	high __pidataBANK0
   226   003962  6EF7               	movwf	tblptrh,c
   227   003964  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228   003966  6EF8               	movwf	tblptru,c
   229   003968  0009               	tblrd		*+	;fetch initializer
   230   00396A  CFF5 F0EA          	movff	tablat,__pdataBANK0
   231   00396E  0009               	tblrd		*+	;fetch initializer
   232   003970  CFF5 F0EB          	movff	tablat,__pdataBANK0+1
   233                           
   234                           ; Clear objects allocated to BANK1 (60 bytes)
   235   003974  EE01  F000         	lfsr	0,__pbssBANK1
   236   003978  0E3C               	movlw	60
   237   00397A                     clear_0:
   238   00397A  6AEE               	clrf	postinc0,c
   239   00397C  06E8               	decf	wreg,f,c
   240   00397E  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (54 bytes)
   243   003980  EE00  F0B4         	lfsr	0,__pbssBANK0
   244   003984  0E36               	movlw	54
   245   003986                     clear_1:
   246   003986  6AEE               	clrf	postinc0,c
   247   003988  06E8               	decf	wreg,f,c
   248   00398A  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (24 bytes)
   251   00398C  EE00  F03F         	lfsr	0,__pbssCOMRAM
   252   003990  0E18               	movlw	24
   253   003992                     clear_2:
   254   003992  6AEE               	clrf	postinc0,c
   255   003994  06E8               	decf	wreg,f,c
   256   003996  E1FD               	bnz	clear_2
   257   003998                     end_of_initialization:
   258                           	callstack 0
   259   003998                     __end_of__initialization:
   260                           	callstack 0
   261   003998  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262   00399A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263   00399C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   264   00399E  6EF8               	movwf	tblptru,c
   265   0039A0  0E0E               	movlw	high __Lsmallconst
   266   0039A2  6EF7               	movwf	tblptrh,c
   267   0039A4  0100               	movlb	0
   268   0039A6  EF49  F013         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00003F                     __pbssCOMRAM:
   272                           	callstack 0
   273   00003F                     _CR2L:
   274                           	callstack 0
   275   00003F                     	ds	4
   276   000043                     _CR2U:
   277                           	callstack 0
   278   000043                     	ds	4
   279   000047                     _CR1L:
   280                           	callstack 0
   281   000047                     	ds	4
   282   00004B                     _amb_clear:
   283                           	callstack 0
   284   00004B                     	ds	2
   285   00004D                     _amb_red:
   286                           	callstack 0
   287   00004D                     	ds	2
   288   00004F                     _lost_ctr:
   289                           	callstack 0
   290   00004F                     	ds	2
   291   000051                     _buggy_step:
   292                           	callstack 0
   293   000051                     	ds	2
   294   000053                     _TxBufReadCnt:
   295                           	callstack 0
   296   000053                     	ds	1
   297   000054                     _TxBufWriteCnt:
   298                           	callstack 0
   299   000054                     	ds	1
   300   000055                     _RxBufReadCnt:
   301                           	callstack 0
   302   000055                     	ds	1
   303   000056                     _RxBufWriteCnt:
   304                           	callstack 0
   305   000056                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308   0000B4                     __pbssBANK0:
   309                           	callstack 0
   310   0000B4                     _EUSART4RXbuf:
   311                           	callstack 0
   312   0000B4                     	ds	20
   313   0000C8                     _CR3L:
   314                           	callstack 0
   315   0000C8                     	ds	4
   316   0000CC                     _CR3U:
   317                           	callstack 0
   318   0000CC                     	ds	4
   319   0000D0                     _lowerThreshold:
   320                           	callstack 0
   321   0000D0                     	ds	2
   322   0000D2                     _amb_blue:
   323                           	callstack 0
   324   0000D2                     	ds	2
   325   0000D4                     _amb_green:
   326                           	callstack 0
   327   0000D4                     	ds	2
   328   0000D6                     _interrupt_ctr:
   329                           	callstack 0
   330   0000D6                     	ds	2
   331   0000D8                     _interrupt_flag:
   332                           	callstack 0
   333   0000D8                     	ds	2
   334   0000DA                     _motor_return:
   335                           	callstack 0
   336   0000DA                     	ds	1
   337   0000DB                     _buggy_path:
   338                           	callstack 0
   339   0000DB                     	ds	15
   340                           
   341                           	psect	dataBANK0
   342   0000EA                     __pdataBANK0:
   343                           	callstack 0
   344   0000EA                     _upperThreshold:
   345                           	callstack 0
   346   0000EA                     	ds	2
   347                           
   348                           	psect	bssBANK1
   349   000100                     __pbssBANK1:
   350                           	callstack 0
   351   000100                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000100                     	ds	60
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     rangeCalibrate@RGBC:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000060                     	ds	2
   363   000062                     rangeCalibrate@mL:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000062                     	ds	2
   368   000064                     rangeCalibrate@mR:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372   000064                     	ds	2
   373   000066                     rangeCalibrate@clearArr:
   374                           	callstack 0
   375                           
   376                           ; 24 bytes @ 0x6
   377   000066                     	ds	24
   378   00007E                     rangeCalibrate@calibCtr:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1E
   382   00007E                     	ds	2
   383   000080                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x20
   386   000080                     	ds	2
   387   000082                     main@RGBC:
   388                           	callstack 0
   389                           
   390                           ; 32 bytes @ 0x22
   391   000082                     	ds	32
   392   0000A2                     main@mL:
   393                           	callstack 0
   394                           
   395                           ; 9 bytes @ 0x42
   396   0000A2                     	ds	9
   397   0000AB                     main@mR:
   398                           	callstack 0
   399                           
   400                           ; 9 bytes @ 0x4B
   401   0000AB                     	ds	9
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ??i2_I2C_2_Master_Idle:
   407   000001                     
   408                           ; 1 bytes @ 0x0
   409   000001                     	ds	1
   410   000002                     i2I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414   000002                     	ds	1
   415   000003                     i2color_writetoaddr@value:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     i2color_writetoaddr@address:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x3
   424   000004                     	ds	1
   425   000005                     ??i2_Color_Interrupts_init:
   426   000005                     i2Color_Interrupts_threshold@upperThreshold:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x4
   430   000005                     	ds	2
   431   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435   000007                     	ds	2
   436   000009                     ??_I2C_2_Master_Idle:
   437   000009                     ?___wmul:
   438                           	callstack 0
   439   000009                     ?___fladd:
   440                           	callstack 0
   441   000009                     initDCmotorsPWM@PWMperiod:
   442                           	callstack 0
   443   000009                     motorLinit@mL:
   444                           	callstack 0
   445   000009                     motorRinit@mR:
   446                           	callstack 0
   447   000009                     motorTRIS@mL:
   448                           	callstack 0
   449   000009                     ___wmul@multiplier:
   450                           	callstack 0
   451   000009                     ___flge@ff1:
   452                           	callstack 0
   453   000009                     ___fladd@b:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x8
   457   000009                     	ds	1
   458   00000A                     ??_I2C_2_Master_Read:
   459   00000A                     I2C_2_Master_Write@data_byte:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x9
   463   00000A                     	ds	1
   464   00000B                     color_writetoaddr@value:
   465                           	callstack 0
   466   00000B                     I2C_2_Master_Read@ack:
   467                           	callstack 0
   468   00000B                     motorTRIS@mR:
   469                           	callstack 0
   470   00000B                     ___wmul@multiplicand:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474   00000B                     	ds	1
   475   00000C                     color_writetoaddr@address:
   476                           	callstack 0
   477   00000C                     I2C_2_Master_Read@tmp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xB
   481   00000C                     	ds	1
   482   00000D                     ??_Color_Interrupts_init:
   483   00000D                     ??_color_click_init:
   484   00000D                     ?_color_read_Red:
   485                           	callstack 0
   486   00000D                     ?_color_read_Green:
   487                           	callstack 0
   488   00000D                     ?_color_read_Blue:
   489                           	callstack 0
   490   00000D                     ?_color_read_Clear:
   491                           	callstack 0
   492   00000D                     Color_Interrupts_threshold@upperThreshold:
   493                           	callstack 0
   494   00000D                     ___wmul@product:
   495                           	callstack 0
   496   00000D                     ___flge@ff2:
   497                           	callstack 0
   498   00000D                     ___fladd@a:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0xC
   502   00000D                     	ds	2
   503   00000F                     ??_color_read_Red:
   504   00000F                     ??_color_read_Green:
   505   00000F                     ??_color_read_Blue:
   506   00000F                     ??_color_read_Clear:
   507   00000F                     ?___lwdiv:
   508                           	callstack 0
   509   00000F                     Color_Interrupts_threshold@lowerThreshold:
   510                           	callstack 0
   511   00000F                     ___lwdiv@dividend:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515   00000F                     	ds	2
   516   000011                     ??___fladd:
   517   000011                     ??___flge:
   518   000011                     ___lwdiv@divisor:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522   000011                     	ds	1
   523   000012                     color_read_Red@tmp:
   524                           	callstack 0
   525   000012                     color_read_Green@tmp:
   526                           	callstack 0
   527   000012                     color_read_Blue@tmp:
   528                           	callstack 0
   529   000012                     color_read_Clear@tmp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x11
   533   000012                     	ds	1
   534   000013                     ___lwdiv@quotient:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538   000013                     	ds	1
   539   000014                     ?___xxtofl:
   540                           	callstack 0
   541   000014                     ___xxtofl@val:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x13
   545   000014                     	ds	1
   546   000015                     ___lwdiv@counter:
   547                           	callstack 0
   548   000015                     ___fladd@signs:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x14
   552   000015                     	ds	1
   553   000016                     ___fladd@aexp:
   554                           	callstack 0
   555   000016                     setMotorPWM@m:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x15
   559   000016                     	ds	1
   560   000017                     ___fladd@bexp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x16
   564   000017                     	ds	1
   565   000018                     ??_setMotorPWM:
   566   000018                     ??___xxtofl:
   567   000018                     ___fladd@grs:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x17
   571   000018                     	ds	2
   572   00001A                     setMotorPWM@posDuty:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576   00001A                     	ds	1
   577   00001B                     setMotorPWM@negDuty:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581   00001B                     	ds	1
   582   00001C                     ___xxtofl@sign:
   583                           	callstack 0
   584   00001C                     norm_stop@mL:
   585                           	callstack 0
   586   00001C                     turnLeft@mL:
   587                           	callstack 0
   588   00001C                     turnRight@mL:
   589                           	callstack 0
   590   00001C                     fullSpeedAhead@mL:
   591                           	callstack 0
   592   00001C                     wallSmash@mL:
   593                           	callstack 0
   594   00001C                     reverse@mL:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   00001C                     	ds	1
   599   00001D                     ___xxtofl@exp:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1C
   603   00001D                     	ds	1
   604   00001E                     norm_stop@mR:
   605                           	callstack 0
   606   00001E                     turnLeft@mR:
   607                           	callstack 0
   608   00001E                     turnRight@mR:
   609                           	callstack 0
   610   00001E                     fullSpeedAhead@mR:
   611                           	callstack 0
   612   00001E                     wallSmash@mR:
   613                           	callstack 0
   614   00001E                     reverse@mR:
   615                           	callstack 0
   616   00001E                     ___xxtofl@arg:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1D
   620   00001E                     	ds	2
   621   000020                     ??_reverse:
   622   000020                     
   623                           ; 1 bytes @ 0x1F
   624   000020                     	ds	1
   625   000021                     turnPrep@mL:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x20
   629   000021                     	ds	1
   630   000022                     ?___fldiv:
   631                           	callstack 0
   632   000022                     color_read_RGBC@temp:
   633                           	callstack 0
   634   000022                     ___fldiv@b:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x21
   638   000022                     	ds	1
   639   000023                     turnPrep@mR:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x22
   643   000023                     	ds	1
   644   000024                     
   645                           ; 1 bytes @ 0x23
   646   000024                     	ds	1
   647   000025                     ??_turnPrep:
   648                           
   649                           ; 1 bytes @ 0x24
   650   000025                     	ds	1
   651   000026                     ___fldiv@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x25
   655   000026                     	ds	1
   656   000027                     motor_response@temp:
   657                           	callstack 0
   658   000027                     motor_retrace@buggy_path:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x26
   662   000027                     	ds	2
   663   000029                     motor_response@mL:
   664                           	callstack 0
   665   000029                     motor_retrace@mL:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x28
   669   000029                     	ds	1
   670   00002A                     ??___fldiv:
   671                           
   672                           ; 1 bytes @ 0x29
   673   00002A                     	ds	1
   674   00002B                     motor_response@mR:
   675                           	callstack 0
   676   00002B                     motor_retrace@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2A
   680   00002B                     	ds	2
   681   00002D                     ??_motor_response:
   682   00002D                     ??_motor_retrace:
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@rem:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2D
   690   00002E                     	ds	1
   691   00002F                     motor_response@j:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2E
   695   00002F                     	ds	3
   696   000032                     ___fldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x31
   700   000032                     	ds	1
   701   000033                     ___fldiv@new_exp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x32
   705   000033                     	ds	2
   706   000035                     ___fldiv@grs:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x34
   710   000035                     	ds	4
   711   000039                     ___fldiv@bexp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x38
   715   000039                     	ds	1
   716   00003A                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x39
   720   00003A                     	ds	1
   721   00003B                     color_normalise@RGBC:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3A
   725   00003B                     	ds	2
   726   00003D                     ??_rangeCalibrate:
   727                           
   728                           ; 1 bytes @ 0x3C
   729   00003D                     	ds	2
   730                           
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 21 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  buf           100    0        unsigned char [100]
   741 ;;  RGBC           32   34[BANK0 ] struct RGBC_val
   742 ;;  mR              9   75[BANK0 ] struct DC_motor
   743 ;;  mL              9   66[BANK0 ] struct DC_motor
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;Total ram usage:       52 bytes
   758 ;; Hardware stack levels required when called: 11
   759 ;; This function calls:
   760 ;;		_Color_Interrupts_init
   761 ;;		_Color_Interrupts_threshold
   762 ;;		_Interrupts_init
   763 ;;		_calibSwitchInit
   764 ;;		_color_click_init
   765 ;;		_color_normalise
   766 ;;		_color_read_RGBC
   767 ;;		_fullSpeedAhead
   768 ;;		_initDCmotorsPWM
   769 ;;		_motorLinit
   770 ;;		_motorRinit
   771 ;;		_motorTRIS
   772 ;;		_motor_response
   773 ;;		_motor_retrace
   774 ;;		_norm_stop
   775 ;;		_persistence_register
   776 ;;		_rangeCalibrate
   777 ;;		_tricolorLED
   778 ;;		_turnLeft
   779 ;;		_wallSmash
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786   002692                     __ptext0:
   787                           	callstack 0
   788   002692                     _main:
   789                           	callstack 20
   790   002692                     
   791                           ;main.c: 22:     tricolorLED();
   792   002692  EC01  F01E         	call	_tricolorLED	;wreg free
   793   002696                     
   794                           ;main.c: 23:     color_click_init();
   795   002696  ECF6  F01C         	call	_color_click_init	;wreg free
   796   00269A                     
   797                           ;main.c: 26:     initDCmotorsPWM(200);
   798   00269A  0E00               	movlw	0
   799   00269C  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   800   00269E  0EC8               	movlw	200
   801   0026A0  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   802   0026A2  EC8D  F01A         	call	_initDCmotorsPWM	;wreg free
   803   0026A6                     
   804                           ;main.c: 27:     DC_motor mL, mR;;main.c: 28:     motorLinit(&mL);
   805   0026A6  0EA2               	movlw	low main@mL
   806   0026A8  6E09               	movwf	motorLinit@mL^0,c
   807   0026AA  0E00               	movlw	high main@mL
   808   0026AC  6E0A               	movwf	(motorLinit@mL+1)^0,c
   809   0026AE  ECAE  F01B         	call	_motorLinit	;wreg free
   810   0026B2                     
   811                           ;main.c: 29:     motorRinit(&mR);
   812   0026B2  0EAB               	movlw	low main@mR
   813   0026B4  6E09               	movwf	motorRinit@mR^0,c
   814   0026B6  0E00               	movlw	high main@mR
   815   0026B8  6E0A               	movwf	(motorRinit@mR+1)^0,c
   816   0026BA  EC79  F01B         	call	_motorRinit	;wreg free
   817   0026BE                     
   818                           ;main.c: 30:     motorTRIS(&mL, &mR);
   819   0026BE  0EA2               	movlw	low main@mL
   820   0026C0  6E09               	movwf	motorTRIS@mL^0,c
   821   0026C2  0E00               	movlw	high main@mL
   822   0026C4  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   823   0026C6  0EAB               	movlw	low main@mR
   824   0026C8  6E0B               	movwf	motorTRIS@mR^0,c
   825   0026CA  0E00               	movlw	high main@mR
   826   0026CC  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   827   0026CE  EC25  F01E         	call	_motorTRIS	;wreg free
   828   0026D2                     
   829                           ;main.c: 34:     TRISDbits.TRISD7 = 0;
   830   0026D2  9E84               	bcf	132,7,c	;volatile
   831   0026D4                     
   832                           ;main.c: 35:     LATDbits.LATD7 = 0;
   833   0026D4  9E7C               	bcf	124,7,c	;volatile
   834   0026D6                     
   835                           ;main.c: 36:     TRISHbits.TRISH3 = 0;
   836   0026D6  9688               	bcf	136,3,c	;volatile
   837   0026D8                     
   838                           ;main.c: 37:     LATHbits.LATH3 = 0;
   839   0026D8  9680               	bcf	128,3,c	;volatile
   840   0026DA                     
   841                           ;main.c: 40:     RGBC_val RGBC;;main.c: 41:     calibSwitchInit();
   842   0026DA  EC3E  F01E         	call	_calibSwitchInit	;wreg free
   843   0026DE                     
   844                           ;main.c: 42:     rangeCalibrate(&RGBC,&mL, &mR);
   845   0026DE  0E82               	movlw	low main@RGBC
   846   0026E0  0100               	movlb	0	; () banked
   847   0026E2  6F60               	movwf	rangeCalibrate@RGBC& (0+255),b
   848   0026E4  0E00               	movlw	high main@RGBC
   849   0026E6  6F61               	movwf	(rangeCalibrate@RGBC+1)& (0+255),b
   850   0026E8  0EA2               	movlw	low main@mL
   851   0026EA  6F62               	movwf	rangeCalibrate@mL& (0+255),b
   852   0026EC  0E00               	movlw	high main@mL
   853   0026EE  6F63               	movwf	(rangeCalibrate@mL+1)& (0+255),b
   854   0026F0  0EAB               	movlw	low main@mR
   855   0026F2  6F64               	movwf	rangeCalibrate@mR& (0+255),b
   856   0026F4  0E00               	movlw	high main@mR
   857   0026F6  6F65               	movwf	(rangeCalibrate@mR+1)& (0+255),b
   858   0026F8  ECD3  F014         	call	_rangeCalibrate	;wreg free
   859   0026FC                     
   860                           ;main.c: 44:     Interrupts_init();
   861   0026FC  ECF6  F01D         	call	_Interrupts_init	;wreg free
   862   002700                     
   863                           ;main.c: 45:     Color_Interrupts_init();
   864   002700  ECDC  F01D         	call	_Color_Interrupts_init	;wreg free
   865   002704                     
   866                           ;main.c: 46:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   867   002704  C0EA  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   868   002708  C0EB  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   869   00270C  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   870   002710  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   871   002714  EC57  F01D         	call	_Color_Interrupts_threshold	;wreg free
   872   002718                     
   873                           ;main.c: 47:     persistence_register();
   874   002718  EC08  F01E         	call	_persistence_register	;wreg free
   875   00271C                     
   876                           ;main.c: 49:     char buf[100];;main.c: 50:     motor_return = 0;
   877   00271C  0E00               	movlw	0
   878   00271E  0100               	movlb	0	; () banked
   879   002720  6FDA               	movwf	_motor_return& (0+255),b
   880   002722                     
   881                           ; BSR set to: 0
   882                           ;main.c: 51:     buggy_step = 0;
   883   002722  0E00               	movlw	0
   884   002724  6E52               	movwf	(_buggy_step+1)^0,c
   885   002726  0E00               	movlw	0
   886   002728  6E51               	movwf	_buggy_step^0,c
   887   00272A                     
   888                           ; BSR set to: 0
   889                           ;main.c: 52:     lost_ctr = 0;
   890   00272A  0E00               	movlw	0
   891   00272C  6E50               	movwf	(_lost_ctr+1)^0,c
   892   00272E  0E00               	movlw	0
   893   002730  6E4F               	movwf	_lost_ctr^0,c
   894   002732                     
   895                           ; BSR set to: 0
   896                           ;main.c: 53:     interrupt_ctr = 0;
   897   002732  0E00               	movlw	0
   898   002734  6FD7               	movwf	(_interrupt_ctr+1)& (0+255),b
   899   002736  0E00               	movlw	0
   900   002738  6FD6               	movwf	_interrupt_ctr& (0+255),b
   901   00273A                     
   902                           ; BSR set to: 0
   903                           ;main.c: 57:     TRISHbits.TRISH0 = 0;
   904   00273A  9088               	bcf	136,0,c	;volatile
   905   00273C                     
   906                           ; BSR set to: 0
   907                           ;main.c: 58:     LATHbits.LATH0 = 0;
   908   00273C  9080               	bcf	128,0,c	;volatile
   909   00273E                     
   910                           ; BSR set to: 0
   911                           ;main.c: 61:     TRISFbits.TRISF0 = 0;
   912   00273E  9086               	bcf	134,0,c	;volatile
   913   002740                     
   914                           ; BSR set to: 0
   915                           ;main.c: 62:     LATFbits.LATF0 = 0;
   916   002740  907E               	bcf	126,0,c	;volatile
   917   002742                     
   918                           ; BSR set to: 0
   919                           ;main.c: 65:     TRISDbits.TRISD4 = 0;
   920   002742  9884               	bcf	132,4,c	;volatile
   921   002744                     
   922                           ; BSR set to: 0
   923                           ;main.c: 66:     LATDbits.LATD4 = 0;
   924   002744  987C               	bcf	124,4,c	;volatile
   925   002746                     
   926                           ; BSR set to: 0
   927                           ;main.c: 69:     TRISDbits.TRISD3 = 0;
   928   002746  9684               	bcf	132,3,c	;volatile
   929   002748                     
   930                           ; BSR set to: 0
   931                           ;main.c: 70:     LATDbits.LATD3 = 0;
   932   002748  967C               	bcf	124,3,c	;volatile
   933   00274A                     l4034:
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 74:         fullSpeedAhead(&mL, &mR);
   937   00274A  0EA2               	movlw	low main@mL
   938   00274C  6E1C               	movwf	fullSpeedAhead@mL^0,c
   939   00274E  0E00               	movlw	high main@mL
   940   002750  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   941   002752  0EAB               	movlw	low main@mR
   942   002754  6E1E               	movwf	fullSpeedAhead@mR^0,c
   943   002756  0E00               	movlw	high main@mR
   944   002758  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   945   00275A  ECB5  F019         	call	_fullSpeedAhead	;wreg free
   946   00275E                     
   947                           ;main.c: 75:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
   948   00275E  0100               	movlb	0	; () banked
   949   002760  05D8               	decf	_interrupt_flag& (0+255),w,b
   950   002762  11D9               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   951   002764  A4D8               	btfss	status,2,c
   952   002766  EFB7  F013         	goto	u3221
   953   00276A  EFB9  F013         	goto	u3220
   954   00276E                     u3221:
   955   00276E  EFA5  F013         	goto	l4034
   956   002772                     u3220:
   957   002772                     
   958                           ; BSR set to: 0
   959   002772  BFD7               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   960   002774  EFC5  F013         	goto	u3231
   961   002778  51D7               	movf	(_interrupt_ctr+1)& (0+255),w,b
   962   00277A  E109               	bnz	u3230
   963   00277C  0E02               	movlw	2
   964   00277E  5DD6               	subwf	_interrupt_ctr& (0+255),w,b
   965   002780  A0D8               	btfss	status,0,c
   966   002782  EFC5  F013         	goto	u3231
   967   002786  EFC7  F013         	goto	u3230
   968   00278A                     u3231:
   969   00278A  EFA5  F013         	goto	l4034
   970   00278E                     u3230:
   971   00278E                     
   972                           ; BSR set to: 0
   973                           ;main.c: 77:             norm_stop(&mL, &mR);
   974   00278E  0EA2               	movlw	low main@mL
   975   002790  6E1C               	movwf	norm_stop@mL^0,c
   976   002792  0E00               	movlw	high main@mL
   977   002794  6E1D               	movwf	(norm_stop@mL+1)^0,c
   978   002796  0EAB               	movlw	low main@mR
   979   002798  6E1E               	movwf	norm_stop@mR^0,c
   980   00279A  0E00               	movlw	high main@mR
   981   00279C  6E1F               	movwf	(norm_stop@mR+1)^0,c
   982   00279E  EC10  F01D         	call	_norm_stop	;wreg free
   983   0027A2                     
   984                           ;main.c: 78:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   985   0027A2  0E52               	movlw	82
   986   0027A4  0100               	movlb	0	; () banked
   987   0027A6  6F81               	movwf	(??_main+1)& (0+255),b
   988   0027A8  0E2B               	movlw	43
   989   0027AA  6F80               	movwf	??_main& (0+255),b
   990   0027AC  0E00               	movlw	0
   991   0027AE                     u3287:
   992   0027AE  2EE8               	decfsz	wreg,f,c
   993   0027B0  D7FE               	bra	u3287
   994   0027B2  2F80               	decfsz	??_main& (0+255),f,b
   995   0027B4  D7FC               	bra	u3287
   996   0027B6  2F81               	decfsz	(??_main+1)& (0+255),f,b
   997   0027B8  D7FA               	bra	u3287
   998   0027BA  F000               	nop	
   999   0027BC                     
  1000                           ;main.c: 79:             LATDbits.LATD7 = 0;
  1001   0027BC  9E7C               	bcf	124,7,c	;volatile
  1002   0027BE                     
  1003                           ;main.c: 80:             if (motor_return == 0) {
  1004   0027BE  0100               	movlb	0	; () banked
  1005   0027C0  51DA               	movf	_motor_return& (0+255),w,b
  1006   0027C2  A4D8               	btfss	status,2,c
  1007   0027C4  EFE6  F013         	goto	u3241
  1008   0027C8  EFE8  F013         	goto	u3240
  1009   0027CC                     u3241:
  1010   0027CC  EF28  F014         	goto	l355
  1011   0027D0                     u3240:
  1012   0027D0                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 81:                 LATHbits.LATH3 = 1;
  1015   0027D0  8680               	bsf	128,3,c	;volatile
  1016   0027D2                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 82:                 wallSmash(&mL, &mR);
  1019   0027D2  0EA2               	movlw	low main@mL
  1020   0027D4  6E1C               	movwf	wallSmash@mL^0,c
  1021   0027D6  0E00               	movlw	high main@mL
  1022   0027D8  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1023   0027DA  0EAB               	movlw	low main@mR
  1024   0027DC  6E1E               	movwf	wallSmash@mR^0,c
  1025   0027DE  0E00               	movlw	high main@mR
  1026   0027E0  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1027   0027E2  EC40  F019         	call	_wallSmash	;wreg free
  1028   0027E6                     
  1029                           ;main.c: 83:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1030   0027E6  0E31               	movlw	49
  1031   0027E8  0100               	movlb	0	; () banked
  1032   0027EA  6F81               	movwf	(??_main+1)& (0+255),b
  1033   0027EC  0EB4               	movlw	180
  1034   0027EE  6F80               	movwf	??_main& (0+255),b
  1035   0027F0  0E65               	movlw	101
  1036   0027F2                     u3297:
  1037   0027F2  2EE8               	decfsz	wreg,f,c
  1038   0027F4  D7FE               	bra	u3297
  1039   0027F6  2F80               	decfsz	??_main& (0+255),f,b
  1040   0027F8  D7FC               	bra	u3297
  1041   0027FA  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1042   0027FC  D7FA               	bra	u3297
  1043   0027FE  D000               	nop2	
  1044   002800                     
  1045                           ;main.c: 84:                 color_read_RGBC(&RGBC);
  1046   002800  0E82               	movlw	low main@RGBC
  1047   002802  6E22               	movwf	color_read_RGBC@temp^0,c
  1048   002804  0E00               	movlw	high main@RGBC
  1049   002806  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1050   002808  EC2A  F01A         	call	_color_read_RGBC	;wreg free
  1051   00280C                     
  1052                           ;main.c: 85:                 color_normalise(&RGBC);
  1053   00280C  0E82               	movlw	low main@RGBC
  1054   00280E  6E3B               	movwf	color_normalise@RGBC^0,c
  1055   002810  0E00               	movlw	high main@RGBC
  1056   002812  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1057   002814  ECD4  F016         	call	_color_normalise	;wreg free
  1058   002818                     
  1059                           ;main.c: 86:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1060   002818  0E82               	movlw	low main@RGBC
  1061   00281A  6E27               	movwf	motor_response@temp^0,c
  1062   00281C  0E00               	movlw	high main@RGBC
  1063   00281E  6E28               	movwf	(motor_response@temp+1)^0,c
  1064   002820  0EA2               	movlw	low main@mL
  1065   002822  6E29               	movwf	motor_response@mL^0,c
  1066   002824  0E00               	movlw	high main@mL
  1067   002826  6E2A               	movwf	(motor_response@mL+1)^0,c
  1068   002828  0EAB               	movlw	low main@mR
  1069   00282A  6E2B               	movwf	motor_response@mR^0,c
  1070   00282C  0E00               	movlw	high main@mR
  1071   00282E  6E2C               	movwf	(motor_response@mR+1)^0,c
  1072   002830  EC0C  F007         	call	_motor_response	;wreg free
  1073   002834  0100               	movlb	0	; () banked
  1074   002836  6F80               	movwf	??_main& (0+255),b
  1075   002838  0EDB               	movlw	low _buggy_path
  1076   00283A  2451               	addwf	_buggy_step^0,w,c
  1077   00283C  6ED9               	movwf	fsr2l,c
  1078   00283E  0E00               	movlw	high _buggy_path
  1079   002840  2052               	addwfc	(_buggy_step+1)^0,w,c
  1080   002842  6EDA               	movwf	fsr2h,c
  1081   002844  C080  FFDF         	movff	??_main,indf2
  1082   002848                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 87:                 buggy_step++;
  1085   002848  4A51               	infsnz	_buggy_step^0,f,c
  1086   00284A  2A52               	incf	(_buggy_step+1)^0,f,c
  1087                           
  1088                           ;main.c: 88:             } else {
  1089   00284C  EFC9  F014         	goto	l4092
  1090   002850                     l355:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 89:                 LATDbits.LATD7 = 1;
  1094   002850  8E7C               	bsf	124,7,c	;volatile
  1095   002852                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 90:                 wallSmash(&mL, &mR);
  1098   002852  0EA2               	movlw	low main@mL
  1099   002854  6E1C               	movwf	wallSmash@mL^0,c
  1100   002856  0E00               	movlw	high main@mL
  1101   002858  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1102   00285A  0EAB               	movlw	low main@mR
  1103   00285C  6E1E               	movwf	wallSmash@mR^0,c
  1104   00285E  0E00               	movlw	high main@mR
  1105   002860  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1106   002862  EC40  F019         	call	_wallSmash	;wreg free
  1107   002866                     
  1108                           ;main.c: 91:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1109   002866  0E31               	movlw	49
  1110   002868  0100               	movlb	0	; () banked
  1111   00286A  6F81               	movwf	(??_main+1)& (0+255),b
  1112   00286C  0EB4               	movlw	180
  1113   00286E  6F80               	movwf	??_main& (0+255),b
  1114   002870  0E65               	movlw	101
  1115   002872                     u3307:
  1116   002872  2EE8               	decfsz	wreg,f,c
  1117   002874  D7FE               	bra	u3307
  1118   002876  2F80               	decfsz	??_main& (0+255),f,b
  1119   002878  D7FC               	bra	u3307
  1120   00287A  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1121   00287C  D7FA               	bra	u3307
  1122   00287E  D000               	nop2	
  1123   002880                     
  1124                           ;main.c: 92:                 motor_retrace(&buggy_path, &mL, &mR);
  1125   002880  0EDB               	movlw	low _buggy_path
  1126   002882  6E27               	movwf	motor_retrace@buggy_path^0,c
  1127   002884  0E00               	movlw	high _buggy_path
  1128   002886  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1129   002888  0EA2               	movlw	low main@mL
  1130   00288A  6E29               	movwf	motor_retrace@mL^0,c
  1131   00288C  0E00               	movlw	high main@mL
  1132   00288E  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1133   002890  0EAB               	movlw	low main@mR
  1134   002892  6E2B               	movwf	motor_retrace@mR^0,c
  1135   002894  0E00               	movlw	high main@mR
  1136   002896  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1137   002898  ECA7  F00F         	call	_motor_retrace	;wreg free
  1138   00289C                     
  1139                           ;main.c: 93:                 buggy_step--;
  1140   00289C  0651               	decf	_buggy_step^0,f,c
  1141   00289E  A0D8               	btfss	status,0,c
  1142   0028A0  0652               	decf	(_buggy_step+1)^0,f,c
  1143                           
  1144                           ;main.c: 95:                 if (buggy_step == 1) {
  1145   0028A2  0451               	decf	_buggy_step^0,w,c
  1146   0028A4  1052               	iorwf	(_buggy_step+1)^0,w,c
  1147   0028A6  A4D8               	btfss	status,2,c
  1148   0028A8  EF58  F014         	goto	u3251
  1149   0028AC  EF5A  F014         	goto	u3250
  1150   0028B0                     u3251:
  1151   0028B0  EFC9  F014         	goto	l4092
  1152   0028B4                     u3250:
  1153   0028B4                     
  1154                           ;main.c: 96:                     motor_return = 0;
  1155   0028B4  0E00               	movlw	0
  1156   0028B6  0100               	movlb	0	; () banked
  1157   0028B8  6FDA               	movwf	_motor_return& (0+255),b
  1158   0028BA                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 97:                     LATDbits.LATD4 = 0;
  1161   0028BA  987C               	bcf	124,4,c	;volatile
  1162   0028BC                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 98:                     fullSpeedAhead(&mL, &mR);
  1165   0028BC  0EA2               	movlw	low main@mL
  1166   0028BE  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1167   0028C0  0E00               	movlw	high main@mL
  1168   0028C2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1169   0028C4  0EAB               	movlw	low main@mR
  1170   0028C6  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1171   0028C8  0E00               	movlw	high main@mR
  1172   0028CA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1173   0028CC  ECB5  F019         	call	_fullSpeedAhead	;wreg free
  1174   0028D0                     
  1175                           ;main.c: 99:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1176   0028D0  0E29               	movlw	41
  1177   0028D2  0100               	movlb	0	; () banked
  1178   0028D4  6F81               	movwf	(??_main+1)& (0+255),b
  1179   0028D6  0E96               	movlw	150
  1180   0028D8  6F80               	movwf	??_main& (0+255),b
  1181   0028DA  0E7F               	movlw	127
  1182   0028DC                     u3317:
  1183   0028DC  2EE8               	decfsz	wreg,f,c
  1184   0028DE  D7FE               	bra	u3317
  1185   0028E0  2F80               	decfsz	??_main& (0+255),f,b
  1186   0028E2  D7FC               	bra	u3317
  1187   0028E4  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1188   0028E6  D7FA               	bra	u3317
  1189   0028E8                     
  1190                           ;main.c: 100:                     norm_stop(&mL, &mR);
  1191   0028E8  0EA2               	movlw	low main@mL
  1192   0028EA  6E1C               	movwf	norm_stop@mL^0,c
  1193   0028EC  0E00               	movlw	high main@mL
  1194   0028EE  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1195   0028F0  0EAB               	movlw	low main@mR
  1196   0028F2  6E1E               	movwf	norm_stop@mR^0,c
  1197   0028F4  0E00               	movlw	high main@mR
  1198   0028F6  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1199   0028F8  EC10  F01D         	call	_norm_stop	;wreg free
  1200   0028FC                     
  1201                           ;main.c: 101:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1202   0028FC  0E29               	movlw	41
  1203   0028FE  0100               	movlb	0	; () banked
  1204   002900  6F81               	movwf	(??_main+1)& (0+255),b
  1205   002902  0E96               	movlw	150
  1206   002904  6F80               	movwf	??_main& (0+255),b
  1207   002906  0E7F               	movlw	127
  1208   002908                     u3327:
  1209   002908  2EE8               	decfsz	wreg,f,c
  1210   00290A  D7FE               	bra	u3327
  1211   00290C  2F80               	decfsz	??_main& (0+255),f,b
  1212   00290E  D7FC               	bra	u3327
  1213   002910  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1214   002912  D7FA               	bra	u3327
  1215   002914                     
  1216                           ;main.c: 102:                     turnLeft(&mL, &mR);
  1217   002914  0EA2               	movlw	low main@mL
  1218   002916  6E1C               	movwf	turnLeft@mL^0,c
  1219   002918  0E00               	movlw	high main@mL
  1220   00291A  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1221   00291C  0EAB               	movlw	low main@mR
  1222   00291E  6E1E               	movwf	turnLeft@mR^0,c
  1223   002920  0E00               	movlw	high main@mR
  1224   002922  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1225   002924  EC40  F01B         	call	_turnLeft	;wreg free
  1226   002928                     
  1227                           ;main.c: 103:                     _delay((unsigned long)((430)*(64000000/4000.0)));
  1228   002928  0E23               	movlw	35
  1229   00292A  0100               	movlb	0	; () banked
  1230   00292C  6F81               	movwf	(??_main+1)& (0+255),b
  1231   00292E  0EE7               	movlw	231
  1232   002930  6F80               	movwf	??_main& (0+255),b
  1233   002932  0EF7               	movlw	247
  1234   002934                     u3337:
  1235   002934  2EE8               	decfsz	wreg,f,c
  1236   002936  D7FE               	bra	u3337
  1237   002938  2F80               	decfsz	??_main& (0+255),f,b
  1238   00293A  D7FC               	bra	u3337
  1239   00293C  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1240   00293E  D7FA               	bra	u3337
  1241   002940  D000               	nop2	
  1242   002942                     
  1243                           ;main.c: 104:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1244   002942  A080               	btfss	128,0,c	;volatile
  1245   002944  EFA6  F014         	goto	u3261
  1246   002948  EFAB  F014         	goto	u3260
  1247   00294C                     u3261:
  1248   00294C  0100               	movlb	0	; () banked
  1249   00294E  6B80               	clrf	??_main& (0+255),b
  1250   002950  2B80               	incf	??_main& (0+255),f,b
  1251   002952  EFAD  F014         	goto	u3278
  1252   002956                     u3260:
  1253   002956  0100               	movlb	0	; () banked
  1254   002958  6B80               	clrf	??_main& (0+255),b
  1255   00295A                     u3278:
  1256   00295A  5080               	movf	128,w,c	;volatile
  1257   00295C  1980               	xorwf	??_main& (0+255),w,b
  1258   00295E  0BFE               	andlw	-2
  1259   002960  1980               	xorwf	??_main& (0+255),w,b
  1260   002962  6E80               	movwf	128,c	;volatile
  1261   002964                     
  1262                           ; BSR set to: 0
  1263                           ;main.c: 105:                     norm_stop(&mL, &mR);
  1264   002964  0EA2               	movlw	low main@mL
  1265   002966  6E1C               	movwf	norm_stop@mL^0,c
  1266   002968  0E00               	movlw	high main@mL
  1267   00296A  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1268   00296C  0EAB               	movlw	low main@mR
  1269   00296E  6E1E               	movwf	norm_stop@mR^0,c
  1270   002970  0E00               	movlw	high main@mR
  1271   002972  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1272   002974  EC10  F01D         	call	_norm_stop	;wreg free
  1273   002978                     
  1274                           ;main.c: 106:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1275   002978  0EA3               	movlw	163
  1276   00297A  0100               	movlb	0	; () banked
  1277   00297C  6F81               	movwf	(??_main+1)& (0+255),b
  1278   00297E  0E57               	movlw	87
  1279   002980  6F80               	movwf	??_main& (0+255),b
  1280   002982  0E02               	movlw	2
  1281   002984                     u3347:
  1282   002984  2EE8               	decfsz	wreg,f,c
  1283   002986  D7FE               	bra	u3347
  1284   002988  2F80               	decfsz	??_main& (0+255),f,b
  1285   00298A  D7FC               	bra	u3347
  1286   00298C  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1287   00298E  D7FA               	bra	u3347
  1288   002990  F000               	nop	
  1289   002992                     l4092:
  1290                           
  1291                           ;main.c: 109:             LATHbits.LATH3 = 0;
  1292   002992  9680               	bcf	128,3,c	;volatile
  1293   002994                     
  1294                           ;main.c: 110:             interrupt_flag = 0;
  1295   002994  0E00               	movlw	0
  1296   002996  0100               	movlb	0	; () banked
  1297   002998  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  1298   00299A  0E00               	movlw	0
  1299   00299C  6FD8               	movwf	_interrupt_flag& (0+255),b
  1300   00299E  EFA5  F013         	goto	l4034
  1301   0029A2  EF1A  F000         	goto	start
  1302   0029A6                     __end_of_main:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _tricolorLED *****************
  1306 ;; Defined at:
  1307 ;;		line 121 in file "color.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 7
  1328 ;; This function calls:
  1329 ;;		_bLED
  1330 ;;		_gLED
  1331 ;;		_rLED
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338   003C02                     __ptext1:
  1339                           	callstack 0
  1340   003C02                     _tricolorLED:
  1341                           	callstack 23
  1342   003C02                     
  1343                           ;color.c: 123:     rLED();
  1344   003C02  EC42  F01E         	call	_rLED	;wreg free
  1345                           
  1346                           ;color.c: 124:     gLED();
  1347   003C06  EC45  F01E         	call	_gLED	;wreg free
  1348                           
  1349                           ;color.c: 125:     bLED();
  1350   003C0A  EC48  F01E         	call	_bLED	;wreg free
  1351   003C0E  0012               	return		;funcret
  1352   003C10                     __end_of_tricolorLED:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _rLED *****************
  1356 ;; Defined at:
  1357 ;;		line 130 in file "color.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		None
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 6
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_tricolorLED
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text2
  1386   003C84                     __ptext2:
  1387                           	callstack 0
  1388   003C84                     _rLED:
  1389                           	callstack 23
  1390   003C84                     
  1391                           ;color.c: 131:     TRISGbits.TRISG0 = 0;
  1392   003C84  9087               	bcf	135,0,c	;volatile
  1393                           
  1394                           ;color.c: 132:     LATGbits.LATG0 = 1;
  1395   003C86  807F               	bsf	127,0,c	;volatile
  1396   003C88  0012               	return		;funcret
  1397   003C8A                     __end_of_rLED:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _gLED *****************
  1401 ;; Defined at:
  1402 ;;		line 137 in file "color.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		None
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 6
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_tricolorLED
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text3
  1431   003C8A                     __ptext3:
  1432                           	callstack 0
  1433   003C8A                     _gLED:
  1434                           	callstack 23
  1435   003C8A                     
  1436                           ;color.c: 138:     TRISEbits.TRISE7 = 0;
  1437   003C8A  9E85               	bcf	133,7,c	;volatile
  1438                           
  1439                           ;color.c: 139:     LATEbits.LATE7 = 1;
  1440   003C8C  8E7D               	bsf	125,7,c	;volatile
  1441   003C8E  0012               	return		;funcret
  1442   003C90                     __end_of_gLED:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _bLED *****************
  1446 ;; Defined at:
  1447 ;;		line 144 in file "color.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		None
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 6
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_tricolorLED
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text4
  1476   003C90                     __ptext4:
  1477                           	callstack 0
  1478   003C90                     _bLED:
  1479                           	callstack 23
  1480   003C90                     
  1481                           ;color.c: 145:     TRISAbits.TRISA3 = 0;
  1482   003C90  9681               	bcf	129,3,c	;volatile
  1483                           
  1484                           ;color.c: 146:     LATAbits.LATA3 = 1;
  1485   003C92  8679               	bsf	121,3,c	;volatile
  1486   003C94  0012               	return		;funcret
  1487   003C96                     __end_of_bLED:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _rangeCalibrate *****************
  1491 ;; Defined at:
  1492 ;;		line 159 in file "color.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  RGBC            2    0[BANK0 ] PTR struct RGBC_val
  1495 ;;		 -> main@RGBC(32), 
  1496 ;;  mL              2    2[BANK0 ] PTR struct DC_motor
  1497 ;;		 -> main@mL(9), 
  1498 ;;  mR              2    4[BANK0 ] PTR struct DC_motor
  1499 ;;		 -> main@mR(9), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  calibCtr        2   30[BANK0 ] int 
  1502 ;;  clearArr       24    6[BANK0 ] float [6]
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:       34 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 10
  1519 ;; This function calls:
  1520 ;;		___fladd
  1521 ;;		_color_normalise
  1522 ;;		_color_read_RGBC
  1523 ;;		_norm_stop
  1524 ;;		_wallSmash
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text5
  1531   0029A6                     __ptext5:
  1532                           	callstack 0
  1533   0029A6                     _rangeCalibrate:
  1534                           	callstack 20
  1535   0029A6                     
  1536                           ;color.c: 161:     float clearArr[6];;color.c: 162:     for (int calibCtr=0;calibCtr < 6
      +                          ;){
  1537   0029A6  0E00               	movlw	0
  1538   0029A8  0100               	movlb	0	; () banked
  1539   0029AA  6F7F               	movwf	(rangeCalibrate@calibCtr+1)& (0+255),b
  1540   0029AC  0E00               	movlw	0
  1541   0029AE  6F7E               	movwf	rangeCalibrate@calibCtr& (0+255),b
  1542   0029B0                     l158:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;color.c: 163:         if (!PORTFbits.RF2) {
  1546   0029B0  B48E               	btfsc	142,2,c	;volatile
  1547   0029B2  EFDD  F014         	goto	u3191
  1548   0029B6  EFDF  F014         	goto	u3190
  1549   0029BA                     u3191:
  1550   0029BA  EF5D  F015         	goto	l3972
  1551   0029BE                     u3190:
  1552   0029BE                     
  1553                           ; BSR set to: 0
  1554                           ;color.c: 164:             if(calibCtr!=5){
  1555   0029BE  0E05               	movlw	5
  1556   0029C0  197E               	xorwf	rangeCalibrate@calibCtr& (0+255),w,b
  1557   0029C2  117F               	iorwf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1558   0029C4  B4D8               	btfsc	status,2,c
  1559   0029C6  EFE7  F014         	goto	u3201
  1560   0029CA  EFE9  F014         	goto	u3200
  1561   0029CE                     u3201:
  1562   0029CE  EFF3  F014         	goto	l3950
  1563   0029D2                     u3200:
  1564   0029D2                     
  1565                           ; BSR set to: 0
  1566                           ;color.c: 165:             wallSmash(mL, mR);}
  1567   0029D2  C062  F01C         	movff	rangeCalibrate@mL,wallSmash@mL
  1568   0029D6  C063  F01D         	movff	rangeCalibrate@mL+1,wallSmash@mL+1
  1569   0029DA  C064  F01E         	movff	rangeCalibrate@mR,wallSmash@mR
  1570   0029DE  C065  F01F         	movff	rangeCalibrate@mR+1,wallSmash@mR+1
  1571   0029E2  EC40  F019         	call	_wallSmash	;wreg free
  1572   0029E6                     l3950:
  1573                           
  1574                           ;color.c: 166:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1575   0029E6  0E29               	movlw	41
  1576   0029E8  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1577   0029EA  0E96               	movlw	150
  1578   0029EC  6E3D               	movwf	??_rangeCalibrate^0,c
  1579   0029EE  0E7F               	movlw	127
  1580   0029F0                     u3357:
  1581   0029F0  2EE8               	decfsz	wreg,f,c
  1582   0029F2  D7FE               	bra	u3357
  1583   0029F4  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1584   0029F6  D7FC               	bra	u3357
  1585   0029F8  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1586   0029FA  D7FA               	bra	u3357
  1587   0029FC  F000               	nop	
  1588   0029FE                     
  1589                           ;color.c: 167:             LATHbits.LATH3 = 1;
  1590   0029FE  8680               	bsf	128,3,c	;volatile
  1591   002A00                     
  1592                           ;color.c: 168:             color_read_RGBC(RGBC);
  1593   002A00  C060  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1594   002A04  C061  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1595   002A08  EC2A  F01A         	call	_color_read_RGBC	;wreg free
  1596   002A0C                     
  1597                           ;color.c: 169:             color_normalise(RGBC);
  1598   002A0C  C060  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1599   002A10  C061  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1600   002A14  ECD4  F016         	call	_color_normalise	;wreg free
  1601   002A18                     
  1602                           ;color.c: 170:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1603   002A18  0E29               	movlw	41
  1604   002A1A  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1605   002A1C  0E96               	movlw	150
  1606   002A1E  6E3D               	movwf	??_rangeCalibrate^0,c
  1607   002A20  0E7F               	movlw	127
  1608   002A22                     u3367:
  1609   002A22  2EE8               	decfsz	wreg,f,c
  1610   002A24  D7FE               	bra	u3367
  1611   002A26  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1612   002A28  D7FC               	bra	u3367
  1613   002A2A  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1614   002A2C  D7FA               	bra	u3367
  1615   002A2E  F000               	nop	
  1616   002A30                     
  1617                           ;color.c: 171:             LATHbits.LATH3 = 0;
  1618   002A30  9680               	bcf	128,3,c	;volatile
  1619   002A32                     
  1620                           ;color.c: 172:             clearArr[calibCtr] = RGBC->norm_C;
  1621   002A32  0100               	movlb	0	; () banked
  1622   002A34  EE20 F01C          	lfsr	2,28
  1623   002A38  5160               	movf	rangeCalibrate@RGBC& (0+255),w,b
  1624   002A3A  26D9               	addwf	fsr2l,f,c
  1625   002A3C  5161               	movf	(rangeCalibrate@RGBC+1)& (0+255),w,b
  1626   002A3E  22DA               	addwfc	fsr2h,f,c
  1627   002A40  0E66               	movlw	low rangeCalibrate@clearArr
  1628   002A42  6E3D               	movwf	??_rangeCalibrate^0,c
  1629   002A44  0E00               	movlw	high rangeCalibrate@clearArr
  1630   002A46  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1631   002A48  90D8               	bcf	status,0,c
  1632   002A4A  357E               	rlcf	rangeCalibrate@calibCtr& (0+255),w,b
  1633   002A4C  6EE1               	movwf	fsr1l,c
  1634   002A4E  357F               	rlcf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1635   002A50  6EE2               	movwf	fsr1h,c
  1636   002A52  90D8               	bcf	status,0,c
  1637   002A54  36E1               	rlcf	fsr1l,f,c
  1638   002A56  36E2               	rlcf	fsr1h,f,c
  1639   002A58  503D               	movf	??_rangeCalibrate^0,w,c
  1640   002A5A  26E1               	addwf	fsr1l,f,c
  1641   002A5C  503E               	movf	(??_rangeCalibrate+1)^0,w,c
  1642   002A5E  22E2               	addwfc	fsr1h,f,c
  1643   002A60  CFDE FFE6          	movff	postinc2,postinc1
  1644   002A64  CFDE FFE6          	movff	postinc2,postinc1
  1645   002A68  CFDE FFE6          	movff	postinc2,postinc1
  1646   002A6C  CFDE FFE6          	movff	postinc2,postinc1
  1647   002A70                     
  1648                           ; BSR set to: 0
  1649                           ;color.c: 173:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1650   002A70  0E29               	movlw	41
  1651   002A72  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1652   002A74  0E96               	movlw	150
  1653   002A76  6E3D               	movwf	??_rangeCalibrate^0,c
  1654   002A78  0E7F               	movlw	127
  1655   002A7A                     u3377:
  1656   002A7A  2EE8               	decfsz	wreg,f,c
  1657   002A7C  D7FE               	bra	u3377
  1658   002A7E  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1659   002A80  D7FC               	bra	u3377
  1660   002A82  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1661   002A84  D7FA               	bra	u3377
  1662   002A86  F000               	nop	
  1663   002A88                     
  1664                           ;color.c: 174:             norm_stop(mL, mR);
  1665   002A88  C062  F01C         	movff	rangeCalibrate@mL,norm_stop@mL
  1666   002A8C  C063  F01D         	movff	rangeCalibrate@mL+1,norm_stop@mL+1
  1667   002A90  C064  F01E         	movff	rangeCalibrate@mR,norm_stop@mR
  1668   002A94  C065  F01F         	movff	rangeCalibrate@mR+1,norm_stop@mR+1
  1669   002A98  EC10  F01D         	call	_norm_stop	;wreg free
  1670   002A9C                     
  1671                           ;color.c: 175:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1672   002A9C  0E29               	movlw	41
  1673   002A9E  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1674   002AA0  0E96               	movlw	150
  1675   002AA2  6E3D               	movwf	??_rangeCalibrate^0,c
  1676   002AA4  0E7F               	movlw	127
  1677   002AA6                     u3387:
  1678   002AA6  2EE8               	decfsz	wreg,f,c
  1679   002AA8  D7FE               	bra	u3387
  1680   002AAA  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1681   002AAC  D7FC               	bra	u3387
  1682   002AAE  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1683   002AB0  D7FA               	bra	u3387
  1684   002AB2  F000               	nop	
  1685   002AB4                     
  1686                           ;color.c: 176:             calibCtr++;
  1687   002AB4  0100               	movlb	0	; () banked
  1688   002AB6  4B7E               	infsnz	rangeCalibrate@calibCtr& (0+255),f,b
  1689   002AB8  2B7F               	incf	(rangeCalibrate@calibCtr+1)& (0+255),f,b
  1690   002ABA                     l3972:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;color.c: 178:     }
  1694   002ABA  BF7F               	btfsc	(rangeCalibrate@calibCtr+1)& (0+255),7,b
  1695   002ABC  EF69  F015         	goto	u3211
  1696   002AC0  517F               	movf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1697   002AC2  E109               	bnz	u3210
  1698   002AC4  0E06               	movlw	6
  1699   002AC6  5D7E               	subwf	rangeCalibrate@calibCtr& (0+255),w,b
  1700   002AC8  A0D8               	btfss	status,0,c
  1701   002ACA  EF69  F015         	goto	u3211
  1702   002ACE  EF6B  F015         	goto	u3210
  1703   002AD2                     u3211:
  1704   002AD2  EFD8  F014         	goto	l158
  1705   002AD6                     u3210:
  1706   002AD6                     
  1707                           ; BSR set to: 0
  1708                           ;color.c: 180:             CR1L = clearArr[0]-0.4;
  1709   002AD6  C066  F009         	movff	rangeCalibrate@clearArr,___fladd@b
  1710   002ADA  C067  F00A         	movff	rangeCalibrate@clearArr+1,___fladd@b+1
  1711   002ADE  C068  F00B         	movff	rangeCalibrate@clearArr+2,___fladd@b+2
  1712   002AE2  C069  F00C         	movff	rangeCalibrate@clearArr+3,___fladd@b+3
  1713   002AE6  0ECD               	movlw	205
  1714   002AE8  6E0D               	movwf	___fladd@a^0,c
  1715   002AEA  0ECC               	movlw	204
  1716   002AEC  6E0E               	movwf	(___fladd@a+1)^0,c
  1717   002AEE  0ECC               	movlw	204
  1718   002AF0  6E0F               	movwf	(___fladd@a+2)^0,c
  1719   002AF2  0EBE               	movlw	190
  1720   002AF4  6E10               	movwf	(___fladd@a+3)^0,c
  1721   002AF6  EC47  F00D         	call	___fladd	;wreg free
  1722   002AFA  C009  F047         	movff	?___fladd,_CR1L
  1723   002AFE  C00A  F048         	movff	?___fladd+1,_CR1L+1
  1724   002B02  C00B  F049         	movff	?___fladd+2,_CR1L+2
  1725   002B06  C00C  F04A         	movff	?___fladd+3,_CR1L+3
  1726                           
  1727                           ;color.c: 181:             CR2U = clearArr[1]+0.3;
  1728   002B0A  C06A  F009         	movff	rangeCalibrate@clearArr+4,___fladd@b
  1729   002B0E  C06B  F00A         	movff	rangeCalibrate@clearArr+5,___fladd@b+1
  1730   002B12  C06C  F00B         	movff	rangeCalibrate@clearArr+6,___fladd@b+2
  1731   002B16  C06D  F00C         	movff	rangeCalibrate@clearArr+7,___fladd@b+3
  1732   002B1A  0E9A               	movlw	154
  1733   002B1C  6E0D               	movwf	___fladd@a^0,c
  1734   002B1E  0E99               	movlw	153
  1735   002B20  6E0E               	movwf	(___fladd@a+1)^0,c
  1736   002B22  0E99               	movlw	153
  1737   002B24  6E0F               	movwf	(___fladd@a+2)^0,c
  1738   002B26  0E3E               	movlw	62
  1739   002B28  6E10               	movwf	(___fladd@a+3)^0,c
  1740   002B2A  EC47  F00D         	call	___fladd	;wreg free
  1741   002B2E  C009  F043         	movff	?___fladd,_CR2U
  1742   002B32  C00A  F044         	movff	?___fladd+1,_CR2U+1
  1743   002B36  C00B  F045         	movff	?___fladd+2,_CR2U+2
  1744   002B3A  C00C  F046         	movff	?___fladd+3,_CR2U+3
  1745                           
  1746                           ;color.c: 182:             CR2L = clearArr[2]-0.3;
  1747   002B3E  C06E  F009         	movff	rangeCalibrate@clearArr+8,___fladd@b
  1748   002B42  C06F  F00A         	movff	rangeCalibrate@clearArr+9,___fladd@b+1
  1749   002B46  C070  F00B         	movff	rangeCalibrate@clearArr+10,___fladd@b+2
  1750   002B4A  C071  F00C         	movff	rangeCalibrate@clearArr+11,___fladd@b+3
  1751   002B4E  0E9A               	movlw	154
  1752   002B50  6E0D               	movwf	___fladd@a^0,c
  1753   002B52  0E99               	movlw	153
  1754   002B54  6E0E               	movwf	(___fladd@a+1)^0,c
  1755   002B56  0E99               	movlw	153
  1756   002B58  6E0F               	movwf	(___fladd@a+2)^0,c
  1757   002B5A  0EBE               	movlw	190
  1758   002B5C  6E10               	movwf	(___fladd@a+3)^0,c
  1759   002B5E  EC47  F00D         	call	___fladd	;wreg free
  1760   002B62  C009  F03F         	movff	?___fladd,_CR2L
  1761   002B66  C00A  F040         	movff	?___fladd+1,_CR2L+1
  1762   002B6A  C00B  F041         	movff	?___fladd+2,_CR2L+2
  1763   002B6E  C00C  F042         	movff	?___fladd+3,_CR2L+3
  1764                           
  1765                           ;color.c: 183:             CR3U = clearArr[3]+0.4;
  1766   002B72  C072  F009         	movff	rangeCalibrate@clearArr+12,___fladd@b
  1767   002B76  C073  F00A         	movff	rangeCalibrate@clearArr+13,___fladd@b+1
  1768   002B7A  C074  F00B         	movff	rangeCalibrate@clearArr+14,___fladd@b+2
  1769   002B7E  C075  F00C         	movff	rangeCalibrate@clearArr+15,___fladd@b+3
  1770   002B82  0ECD               	movlw	205
  1771   002B84  6E0D               	movwf	___fladd@a^0,c
  1772   002B86  0ECC               	movlw	204
  1773   002B88  6E0E               	movwf	(___fladd@a+1)^0,c
  1774   002B8A  0ECC               	movlw	204
  1775   002B8C  6E0F               	movwf	(___fladd@a+2)^0,c
  1776   002B8E  0E3E               	movlw	62
  1777   002B90  6E10               	movwf	(___fladd@a+3)^0,c
  1778   002B92  EC47  F00D         	call	___fladd	;wreg free
  1779   002B96  C009  F0CC         	movff	?___fladd,_CR3U
  1780   002B9A  C00A  F0CD         	movff	?___fladd+1,_CR3U+1
  1781   002B9E  C00B  F0CE         	movff	?___fladd+2,_CR3U+2
  1782   002BA2  C00C  F0CF         	movff	?___fladd+3,_CR3U+3
  1783                           
  1784                           ;color.c: 184:             CR3L = clearArr[4]-0.2;
  1785   002BA6  C076  F009         	movff	rangeCalibrate@clearArr+16,___fladd@b
  1786   002BAA  C077  F00A         	movff	rangeCalibrate@clearArr+17,___fladd@b+1
  1787   002BAE  C078  F00B         	movff	rangeCalibrate@clearArr+18,___fladd@b+2
  1788   002BB2  C079  F00C         	movff	rangeCalibrate@clearArr+19,___fladd@b+3
  1789   002BB6  0ECD               	movlw	205
  1790   002BB8  6E0D               	movwf	___fladd@a^0,c
  1791   002BBA  0ECC               	movlw	204
  1792   002BBC  6E0E               	movwf	(___fladd@a+1)^0,c
  1793   002BBE  0E4C               	movlw	76
  1794   002BC0  6E0F               	movwf	(___fladd@a+2)^0,c
  1795   002BC2  0EBE               	movlw	190
  1796   002BC4  6E10               	movwf	(___fladd@a+3)^0,c
  1797   002BC6  EC47  F00D         	call	___fladd	;wreg free
  1798   002BCA  C009  F0C8         	movff	?___fladd,_CR3L
  1799   002BCE  C00A  F0C9         	movff	?___fladd+1,_CR3L+1
  1800   002BD2  C00B  F0CA         	movff	?___fladd+2,_CR3L+2
  1801   002BD6  C00C  F0CB         	movff	?___fladd+3,_CR3L+3
  1802   002BDA                     
  1803                           ;color.c: 185:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1804   002BDA  0EA3               	movlw	163
  1805   002BDC  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1806   002BDE  0E57               	movlw	87
  1807   002BE0  6E3D               	movwf	??_rangeCalibrate^0,c
  1808   002BE2  0E02               	movlw	2
  1809   002BE4                     u3397:
  1810   002BE4  2EE8               	decfsz	wreg,f,c
  1811   002BE6  D7FE               	bra	u3397
  1812   002BE8  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1813   002BEA  D7FC               	bra	u3397
  1814   002BEC  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1815   002BEE  D7FA               	bra	u3397
  1816   002BF0  D000               	nop2	
  1817   002BF2  0012               	return		;funcret
  1818   002BF4                     __end_of_rangeCalibrate:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _wallSmash *****************
  1822 ;; Defined at:
  1823 ;;		line 200 in file "dc_motor.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1826 ;;		 -> main@mL(9), 
  1827 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1828 ;;		 -> main@mR(9), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;Total ram usage:        5 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 8
  1847 ;; This function calls:
  1848 ;;		_setMotorPWM
  1849 ;; This function is called by:
  1850 ;;		_rangeCalibrate
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text6
  1856   003280                     __ptext6:
  1857                           	callstack 0
  1858   003280                     _wallSmash:
  1859                           	callstack 22
  1860   003280                     
  1861                           ;dc_motor.c: 200: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 201: {;dc_motor
      +                          .c: 202:     mL->power =50;
  1862   003280  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1863   003284  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1864   003288  0E32               	movlw	50
  1865   00328A  6EDF               	movwf	indf2,c
  1866                           
  1867                           ;dc_motor.c: 203:     mR->power = 50;
  1868   00328C  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1869   003290  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1870   003294  0E32               	movlw	50
  1871   003296  6EDF               	movwf	indf2,c
  1872   003298                     
  1873                           ;dc_motor.c: 204:     mR->direction = 1;
  1874   003298  EE20 F001          	lfsr	2,1
  1875   00329C  501E               	movf	wallSmash@mR^0,w,c
  1876   00329E  26D9               	addwf	fsr2l,f,c
  1877   0032A0  501F               	movf	(wallSmash@mR+1)^0,w,c
  1878   0032A2  22DA               	addwfc	fsr2h,f,c
  1879   0032A4  0E01               	movlw	1
  1880   0032A6  6EDF               	movwf	indf2,c
  1881   0032A8                     
  1882                           ;dc_motor.c: 205:     mL->direction = 1;
  1883   0032A8  EE20 F001          	lfsr	2,1
  1884   0032AC  501C               	movf	wallSmash@mL^0,w,c
  1885   0032AE  26D9               	addwf	fsr2l,f,c
  1886   0032B0  501D               	movf	(wallSmash@mL+1)^0,w,c
  1887   0032B2  22DA               	addwfc	fsr2h,f,c
  1888   0032B4  0E01               	movlw	1
  1889   0032B6  6EDF               	movwf	indf2,c
  1890   0032B8                     
  1891                           ;dc_motor.c: 206:     mL->brakemode = 1;
  1892   0032B8  EE20 F002          	lfsr	2,2
  1893   0032BC  501C               	movf	wallSmash@mL^0,w,c
  1894   0032BE  26D9               	addwf	fsr2l,f,c
  1895   0032C0  501D               	movf	(wallSmash@mL+1)^0,w,c
  1896   0032C2  22DA               	addwfc	fsr2h,f,c
  1897   0032C4  0E01               	movlw	1
  1898   0032C6  6EDF               	movwf	indf2,c
  1899   0032C8                     
  1900                           ;dc_motor.c: 207:     mR->brakemode = 1;
  1901   0032C8  EE20 F002          	lfsr	2,2
  1902   0032CC  501E               	movf	wallSmash@mR^0,w,c
  1903   0032CE  26D9               	addwf	fsr2l,f,c
  1904   0032D0  501F               	movf	(wallSmash@mR+1)^0,w,c
  1905   0032D2  22DA               	addwfc	fsr2h,f,c
  1906   0032D4  0E01               	movlw	1
  1907   0032D6  6EDF               	movwf	indf2,c
  1908                           
  1909                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1910   0032D8  EF84  F019         	goto	l3074
  1911   0032DC                     l3068:
  1912                           
  1913                           ;dc_motor.c: 209:     {;dc_motor.c: 210:         mL->power++;
  1914   0032DC  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1915   0032E0  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1916   0032E4  2ADF               	incf	indf2,f,c
  1917                           
  1918                           ;dc_motor.c: 211:         mR->power++;
  1919   0032E6  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1920   0032EA  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1921   0032EE  2ADF               	incf	indf2,f,c
  1922   0032F0                     
  1923                           ;dc_motor.c: 213:         setMotorPWM(mL);
  1924   0032F0  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1925   0032F4  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1926   0032F8  EC8C  F017         	call	_setMotorPWM	;wreg free
  1927   0032FC                     
  1928                           ;dc_motor.c: 214:         setMotorPWM(mR);
  1929   0032FC  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1930   003300  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1931   003304  EC8C  F017         	call	_setMotorPWM	;wreg free
  1932   003308                     l3074:
  1933                           
  1934                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1935   003308  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1936   00330C  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1937   003310  0E56               	movlw	86
  1938   003312  60DF               	cpfslt	indf2,c
  1939   003314  EF8E  F019         	goto	u2091
  1940   003318  EF90  F019         	goto	u2090
  1941   00331C                     u2091:
  1942   00331C  EF9C  F019         	goto	l3078
  1943   003320                     u2090:
  1944   003320  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1945   003324  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1946   003328  0E55               	movlw	85
  1947   00332A  64DF               	cpfsgt	indf2,c
  1948   00332C  EF9A  F019         	goto	u2101
  1949   003330  EF9C  F019         	goto	u2100
  1950   003334                     u2101:
  1951   003334  EF6E  F019         	goto	l3068
  1952   003338                     u2100:
  1953   003338                     l3078:
  1954                           
  1955                           ;dc_motor.c: 216:     mL->power = 85;
  1956   003338  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1957   00333C  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1958   003340  0E55               	movlw	85
  1959   003342  6EDF               	movwf	indf2,c
  1960                           
  1961                           ;dc_motor.c: 217:     mR->power = 85;
  1962   003344  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1963   003348  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1964   00334C  0E55               	movlw	85
  1965   00334E  6EDF               	movwf	indf2,c
  1966   003350                     
  1967                           ;dc_motor.c: 218:     setMotorPWM(mL);
  1968   003350  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1969   003354  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1970   003358  EC8C  F017         	call	_setMotorPWM	;wreg free
  1971   00335C                     
  1972                           ;dc_motor.c: 219:     setMotorPWM(mR);
  1973   00335C  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1974   003360  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1975   003364  EC8C  F017         	call	_setMotorPWM	;wreg free
  1976   003368  0012               	return		;funcret
  1977   00336A                     __end_of_wallSmash:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _color_read_RGBC *****************
  1981 ;; Defined at:
  1982 ;;		line 93 in file "color.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1985 ;;		 -> main@RGBC(32), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 9
  2004 ;; This function calls:
  2005 ;;		___xxtofl
  2006 ;;		_color_read_Blue
  2007 ;;		_color_read_Clear
  2008 ;;		_color_read_Green
  2009 ;;		_color_read_Red
  2010 ;; This function is called by:
  2011 ;;		_rangeCalibrate
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text7
  2017   003454                     __ptext7:
  2018                           	callstack 0
  2019   003454                     _color_read_RGBC:
  2020                           	callstack 20
  2021   003454                     
  2022                           ;color.c: 94:     temp->R = color_read_Red();
  2023   003454  EC0E  F01C         	call	_color_read_Red	;wreg free
  2024   003458  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2025   00345C  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2026   003460  6A16               	clrf	(___xxtofl@val+2)^0,c
  2027   003462  6A17               	clrf	(___xxtofl@val+3)^0,c
  2028   003464  0E00               	movlw	0
  2029   003466  ECFA  F015         	call	___xxtofl
  2030   00346A  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2031   00346E  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2032   003472  C014  FFDE         	movff	?___xxtofl,postinc2
  2033   003476  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2034   00347A  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2035   00347E  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2036                           
  2037                           ;color.c: 95:     temp->B = color_read_Blue();
  2038   003482  EC86  F01C         	call	_color_read_Blue	;wreg free
  2039   003486  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2040   00348A  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2041   00348E  6A16               	clrf	(___xxtofl@val+2)^0,c
  2042   003490  6A17               	clrf	(___xxtofl@val+3)^0,c
  2043   003492  0E00               	movlw	0
  2044   003494  ECFA  F015         	call	___xxtofl
  2045   003498  EE20 F008          	lfsr	2,8
  2046   00349C  5022               	movf	color_read_RGBC@temp^0,w,c
  2047   00349E  26D9               	addwf	fsr2l,f,c
  2048   0034A0  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2049   0034A2  22DA               	addwfc	fsr2h,f,c
  2050   0034A4  C014  FFDE         	movff	?___xxtofl,postinc2
  2051   0034A8  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2052   0034AC  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2053   0034B0  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2054                           
  2055                           ;color.c: 96:     temp->G = color_read_Green();
  2056   0034B4  EC36  F01C         	call	_color_read_Green	;wreg free
  2057   0034B8  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2058   0034BC  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2059   0034C0  6A16               	clrf	(___xxtofl@val+2)^0,c
  2060   0034C2  6A17               	clrf	(___xxtofl@val+3)^0,c
  2061   0034C4  0E00               	movlw	0
  2062   0034C6  ECFA  F015         	call	___xxtofl
  2063   0034CA  EE20 F004          	lfsr	2,4
  2064   0034CE  5022               	movf	color_read_RGBC@temp^0,w,c
  2065   0034D0  26D9               	addwf	fsr2l,f,c
  2066   0034D2  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2067   0034D4  22DA               	addwfc	fsr2h,f,c
  2068   0034D6  C014  FFDE         	movff	?___xxtofl,postinc2
  2069   0034DA  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2070   0034DE  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2071   0034E2  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2072                           
  2073                           ;color.c: 97:     temp->C = color_read_Clear();
  2074   0034E6  EC5E  F01C         	call	_color_read_Clear	;wreg free
  2075   0034EA  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2076   0034EE  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2077   0034F2  6A16               	clrf	(___xxtofl@val+2)^0,c
  2078   0034F4  6A17               	clrf	(___xxtofl@val+3)^0,c
  2079   0034F6  0E00               	movlw	0
  2080   0034F8  ECFA  F015         	call	___xxtofl
  2081   0034FC  EE20 F00C          	lfsr	2,12
  2082   003500  5022               	movf	color_read_RGBC@temp^0,w,c
  2083   003502  26D9               	addwf	fsr2l,f,c
  2084   003504  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2085   003506  22DA               	addwfc	fsr2h,f,c
  2086   003508  C014  FFDE         	movff	?___xxtofl,postinc2
  2087   00350C  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2088   003510  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2089   003514  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2090   003518  0012               	return		;funcret
  2091   00351A                     __end_of_color_read_RGBC:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _color_read_Red *****************
  2095 ;; Defined at:
  2096 ;;		line 32 in file "color.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  tmp             2   17[COMRAM] unsigned int 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2   12[COMRAM] unsigned int 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;Total ram usage:        7 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 8
  2117 ;; This function calls:
  2118 ;;		_I2C_2_Master_Read
  2119 ;;		_I2C_2_Master_RepStart
  2120 ;;		_I2C_2_Master_Start
  2121 ;;		_I2C_2_Master_Stop
  2122 ;;		_I2C_2_Master_Write
  2123 ;; This function is called by:
  2124 ;;		_color_read_RGBC
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text8
  2129   00381C                     __ptext8:
  2130                           	callstack 0
  2131   00381C                     _color_read_Red:
  2132                           	callstack 20
  2133   00381C                     
  2134                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  2135   00381C  EC2F  F01E         	call	_I2C_2_Master_Start	;wreg free
  2136                           
  2137                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2138   003820  0E52               	movlw	82
  2139   003822  EC0E  F01E         	call	_I2C_2_Master_Write
  2140                           
  2141                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  2142   003826  0EB6               	movlw	182
  2143   003828  EC0E  F01E         	call	_I2C_2_Master_Write
  2144                           
  2145                           ;color.c: 37:     I2C_2_Master_RepStart();
  2146   00382C  EC20  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2147                           
  2148                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  2149   003830  0E53               	movlw	83
  2150   003832  EC0E  F01E         	call	_I2C_2_Master_Write
  2151                           
  2152                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  2153   003836  0E01               	movlw	1
  2154   003838  ECD5  F01C         	call	_I2C_2_Master_Read
  2155   00383C  6E0F               	movwf	??_color_read_Red^0,c
  2156   00383E  500F               	movf	??_color_read_Red^0,w,c
  2157   003840  6E12               	movwf	color_read_Red@tmp^0,c
  2158   003842  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2159                           
  2160                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2161   003844  0E00               	movlw	0
  2162   003846  ECD5  F01C         	call	_I2C_2_Master_Read
  2163   00384A  6E0F               	movwf	??_color_read_Red^0,c
  2164   00384C  500F               	movf	??_color_read_Red^0,w,c
  2165   00384E  6E11               	movwf	(??_color_read_Red+2)^0,c
  2166   003850  6A10               	clrf	(??_color_read_Red+1)^0,c
  2167   003852  5012               	movf	color_read_Red@tmp^0,w,c
  2168   003854  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2169   003856  6E12               	movwf	color_read_Red@tmp^0,c
  2170   003858  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2171   00385A  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2172   00385C  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2173                           
  2174                           ;color.c: 41:     I2C_2_Master_Stop();
  2175   00385E  EC2A  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2176   003862                     
  2177                           ;color.c: 42:     return tmp;
  2178   003862  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2179   003866  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2180   00386A  0012               	return		;funcret
  2181   00386C                     __end_of_color_read_Red:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _color_read_Green *****************
  2185 ;; Defined at:
  2186 ;;		line 45 in file "color.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  tmp             2   17[COMRAM] unsigned int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   12[COMRAM] unsigned int 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;Total ram usage:        7 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 8
  2207 ;; This function calls:
  2208 ;;		_I2C_2_Master_Read
  2209 ;;		_I2C_2_Master_RepStart
  2210 ;;		_I2C_2_Master_Start
  2211 ;;		_I2C_2_Master_Stop
  2212 ;;		_I2C_2_Master_Write
  2213 ;; This function is called by:
  2214 ;;		_color_read_RGBC
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text9
  2219   00386C                     __ptext9:
  2220                           	callstack 0
  2221   00386C                     _color_read_Green:
  2222                           	callstack 20
  2223   00386C                     
  2224                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  2225   00386C  EC2F  F01E         	call	_I2C_2_Master_Start	;wreg free
  2226                           
  2227                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  2228   003870  0E52               	movlw	82
  2229   003872  EC0E  F01E         	call	_I2C_2_Master_Write
  2230                           
  2231                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  2232   003876  0EB8               	movlw	184
  2233   003878  EC0E  F01E         	call	_I2C_2_Master_Write
  2234                           
  2235                           ;color.c: 50:     I2C_2_Master_RepStart();
  2236   00387C  EC20  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2237                           
  2238                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  2239   003880  0E53               	movlw	83
  2240   003882  EC0E  F01E         	call	_I2C_2_Master_Write
  2241                           
  2242                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  2243   003886  0E01               	movlw	1
  2244   003888  ECD5  F01C         	call	_I2C_2_Master_Read
  2245   00388C  6E0F               	movwf	??_color_read_Green^0,c
  2246   00388E  500F               	movf	??_color_read_Green^0,w,c
  2247   003890  6E12               	movwf	color_read_Green@tmp^0,c
  2248   003892  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2249                           
  2250                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2251   003894  0E00               	movlw	0
  2252   003896  ECD5  F01C         	call	_I2C_2_Master_Read
  2253   00389A  6E0F               	movwf	??_color_read_Green^0,c
  2254   00389C  500F               	movf	??_color_read_Green^0,w,c
  2255   00389E  6E11               	movwf	(??_color_read_Green+2)^0,c
  2256   0038A0  6A10               	clrf	(??_color_read_Green+1)^0,c
  2257   0038A2  5012               	movf	color_read_Green@tmp^0,w,c
  2258   0038A4  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2259   0038A6  6E12               	movwf	color_read_Green@tmp^0,c
  2260   0038A8  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2261   0038AA  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2262   0038AC  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2263                           
  2264                           ;color.c: 54:     I2C_2_Master_Stop();
  2265   0038AE  EC2A  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2266   0038B2                     
  2267                           ;color.c: 55:     return tmp;
  2268   0038B2  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2269   0038B6  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2270   0038BA  0012               	return		;funcret
  2271   0038BC                     __end_of_color_read_Green:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _color_read_Clear *****************
  2275 ;; Defined at:
  2276 ;;		line 71 in file "color.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  tmp             2   17[COMRAM] unsigned int 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2   12[COMRAM] unsigned int 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:        7 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 8
  2297 ;; This function calls:
  2298 ;;		_I2C_2_Master_Read
  2299 ;;		_I2C_2_Master_RepStart
  2300 ;;		_I2C_2_Master_Start
  2301 ;;		_I2C_2_Master_Stop
  2302 ;;		_I2C_2_Master_Write
  2303 ;; This function is called by:
  2304 ;;		_color_read_RGBC
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text10
  2309   0038BC                     __ptext10:
  2310                           	callstack 0
  2311   0038BC                     _color_read_Clear:
  2312                           	callstack 20
  2313   0038BC                     
  2314                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  2315   0038BC  EC2F  F01E         	call	_I2C_2_Master_Start	;wreg free
  2316                           
  2317                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  2318   0038C0  0E52               	movlw	82
  2319   0038C2  EC0E  F01E         	call	_I2C_2_Master_Write
  2320                           
  2321                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  2322   0038C6  0EB4               	movlw	180
  2323   0038C8  EC0E  F01E         	call	_I2C_2_Master_Write
  2324                           
  2325                           ;color.c: 76:     I2C_2_Master_RepStart();
  2326   0038CC  EC20  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2327                           
  2328                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  2329   0038D0  0E53               	movlw	83
  2330   0038D2  EC0E  F01E         	call	_I2C_2_Master_Write
  2331                           
  2332                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  2333   0038D6  0E01               	movlw	1
  2334   0038D8  ECD5  F01C         	call	_I2C_2_Master_Read
  2335   0038DC  6E0F               	movwf	??_color_read_Clear^0,c
  2336   0038DE  500F               	movf	??_color_read_Clear^0,w,c
  2337   0038E0  6E12               	movwf	color_read_Clear@tmp^0,c
  2338   0038E2  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2339                           
  2340                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2341   0038E4  0E00               	movlw	0
  2342   0038E6  ECD5  F01C         	call	_I2C_2_Master_Read
  2343   0038EA  6E0F               	movwf	??_color_read_Clear^0,c
  2344   0038EC  500F               	movf	??_color_read_Clear^0,w,c
  2345   0038EE  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2346   0038F0  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2347   0038F2  5012               	movf	color_read_Clear@tmp^0,w,c
  2348   0038F4  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2349   0038F6  6E12               	movwf	color_read_Clear@tmp^0,c
  2350   0038F8  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2351   0038FA  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2352   0038FC  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2353                           
  2354                           ;color.c: 80:     I2C_2_Master_Stop();
  2355   0038FE  EC2A  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2356   003902                     
  2357                           ;color.c: 81:     return tmp;
  2358   003902  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2359   003906  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2360   00390A  0012               	return		;funcret
  2361   00390C                     __end_of_color_read_Clear:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _color_read_Blue *****************
  2365 ;; Defined at:
  2366 ;;		line 58 in file "color.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  tmp             2   17[COMRAM] unsigned int 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   12[COMRAM] unsigned int 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;Total ram usage:        7 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 8
  2387 ;; This function calls:
  2388 ;;		_I2C_2_Master_Read
  2389 ;;		_I2C_2_Master_RepStart
  2390 ;;		_I2C_2_Master_Start
  2391 ;;		_I2C_2_Master_Stop
  2392 ;;		_I2C_2_Master_Write
  2393 ;; This function is called by:
  2394 ;;		_color_read_RGBC
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text11
  2399   00390C                     __ptext11:
  2400                           	callstack 0
  2401   00390C                     _color_read_Blue:
  2402                           	callstack 20
  2403   00390C                     
  2404                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  2405   00390C  EC2F  F01E         	call	_I2C_2_Master_Start	;wreg free
  2406                           
  2407                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  2408   003910  0E52               	movlw	82
  2409   003912  EC0E  F01E         	call	_I2C_2_Master_Write
  2410                           
  2411                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  2412   003916  0EBA               	movlw	186
  2413   003918  EC0E  F01E         	call	_I2C_2_Master_Write
  2414                           
  2415                           ;color.c: 63:     I2C_2_Master_RepStart();
  2416   00391C  EC20  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2417                           
  2418                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  2419   003920  0E53               	movlw	83
  2420   003922  EC0E  F01E         	call	_I2C_2_Master_Write
  2421                           
  2422                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  2423   003926  0E01               	movlw	1
  2424   003928  ECD5  F01C         	call	_I2C_2_Master_Read
  2425   00392C  6E0F               	movwf	??_color_read_Blue^0,c
  2426   00392E  500F               	movf	??_color_read_Blue^0,w,c
  2427   003930  6E12               	movwf	color_read_Blue@tmp^0,c
  2428   003932  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2429                           
  2430                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2431   003934  0E00               	movlw	0
  2432   003936  ECD5  F01C         	call	_I2C_2_Master_Read
  2433   00393A  6E0F               	movwf	??_color_read_Blue^0,c
  2434   00393C  500F               	movf	??_color_read_Blue^0,w,c
  2435   00393E  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2436   003940  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2437   003942  5012               	movf	color_read_Blue@tmp^0,w,c
  2438   003944  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2439   003946  6E12               	movwf	color_read_Blue@tmp^0,c
  2440   003948  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2441   00394A  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2442   00394C  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2443                           
  2444                           ;color.c: 67:     I2C_2_Master_Stop();
  2445   00394E  EC2A  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2446   003952                     
  2447                           ;color.c: 68:     return tmp;
  2448   003952  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2449   003956  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2450   00395A  0012               	return		;funcret
  2451   00395C                     __end_of_color_read_Blue:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _I2C_2_Master_RepStart *****************
  2455 ;; Defined at:
  2456 ;;		line 33 in file "i2c.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 7
  2477 ;; This function calls:
  2478 ;;		_I2C_2_Master_Idle
  2479 ;; This function is called by:
  2480 ;;		_color_read_Red
  2481 ;;		_color_read_Green
  2482 ;;		_color_read_Blue
  2483 ;;		_color_read_Clear
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text12
  2488   003C40                     __ptext12:
  2489                           	callstack 0
  2490   003C40                     _I2C_2_Master_RepStart:
  2491                           	callstack 20
  2492   003C40                     
  2493                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2494   003C40  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2495   003C44                     
  2496                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2497   003C44  010E               	movlb	14	; () banked
  2498   003C46  83DA               	bsf	218,1,b	;volatile
  2499   003C48                     
  2500                           ; BSR set to: 14
  2501   003C48  0012               	return		;funcret
  2502   003C4A                     __end_of_I2C_2_Master_RepStart:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _I2C_2_Master_Read *****************
  2506 ;; Defined at:
  2507 ;;		line 51 in file "i2c.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  ack             1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  ack             1   10[COMRAM] unsigned char 
  2512 ;;  tmp             1   11[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 7
  2529 ;; This function calls:
  2530 ;;		_I2C_2_Master_Idle
  2531 ;; This function is called by:
  2532 ;;		_color_read_Red
  2533 ;;		_color_read_Green
  2534 ;;		_color_read_Blue
  2535 ;;		_color_read_Clear
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text13
  2540   0039AA                     __ptext13:
  2541                           	callstack 0
  2542   0039AA                     _I2C_2_Master_Read:
  2543                           	callstack 20
  2544                           
  2545                           ; BSR set to: 14
  2546                           ;incstack = 0
  2547                           ;I2C_2_Master_Read@ack stored from wreg
  2548   0039AA  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2549   0039AC                     
  2550                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2551   0039AC  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2552   0039B0                     
  2553                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2554   0039B0  010E               	movlb	14	; () banked
  2555   0039B2  87DA               	bsf	218,3,b	;volatile
  2556                           
  2557                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2558   0039B4  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2559   0039B8                     
  2560                           ;i2c.c: 57:   tmp = SSP2BUF;
  2561   0039B8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2562                           
  2563                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2564   0039BC  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2565   0039C0                     
  2566                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2567   0039C0  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2568   0039C2  B4D8               	btfsc	status,2,c
  2569   0039C4  EFE6  F01C         	goto	u1701
  2570   0039C8  EFEA  F01C         	goto	u1700
  2571   0039CC                     u1701:
  2572   0039CC  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2573   0039CE  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2574   0039D0  EFEB  F01C         	goto	u1718
  2575   0039D4                     u1700:
  2576   0039D4  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2577   0039D6                     u1718:
  2578   0039D6  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2579   0039D8  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2580   0039DA  010E               	movlb	14	; () banked
  2581   0039DC  51DA               	movf	218,w,b	;volatile
  2582   0039DE  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2583   0039E0  0BDF               	andlw	-33
  2584   0039E2  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2585   0039E4  6FDA               	movwf	218,b	;volatile
  2586   0039E6                     
  2587                           ; BSR set to: 14
  2588                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2589   0039E6  89DA               	bsf	218,4,b	;volatile
  2590   0039E8                     
  2591                           ; BSR set to: 14
  2592                           ;i2c.c: 61:   return tmp;
  2593   0039E8  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2594   0039EA                     
  2595                           ; BSR set to: 14
  2596   0039EA  0012               	return		;funcret
  2597   0039EC                     __end_of_I2C_2_Master_Read:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _color_normalise *****************
  2601 ;; Defined at:
  2602 ;;		line 102 in file "color.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2605 ;;		 -> main@RGBC(32), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 7
  2624 ;; This function calls:
  2625 ;;		___fldiv
  2626 ;;		___xxtofl
  2627 ;; This function is called by:
  2628 ;;		_rangeCalibrate
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text14
  2634   002DA8                     __ptext14:
  2635                           	callstack 0
  2636   002DA8                     _color_normalise:
  2637                           	callstack 22
  2638   002DA8                     
  2639                           ;color.c: 103:     amb_clear = 2385;
  2640   002DA8  0E09               	movlw	9
  2641   002DAA  6E4C               	movwf	(_amb_clear+1)^0,c
  2642   002DAC  0E51               	movlw	81
  2643   002DAE  6E4B               	movwf	_amb_clear^0,c
  2644   002DB0                     
  2645                           ;color.c: 104:     RGBC->norm_R = RGBC->C / RGBC->R;
  2646   002DB0  EE20 F00C          	lfsr	2,12
  2647   002DB4  503B               	movf	color_normalise@RGBC^0,w,c
  2648   002DB6  26D9               	addwf	fsr2l,f,c
  2649   002DB8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2650   002DBA  22DA               	addwfc	fsr2h,f,c
  2651   002DBC  CFDE F022          	movff	postinc2,___fldiv@b
  2652   002DC0  CFDE F023          	movff	postinc2,___fldiv@b+1
  2653   002DC4  CFDE F024          	movff	postinc2,___fldiv@b+2
  2654   002DC8  CFDE F025          	movff	postinc2,___fldiv@b+3
  2655   002DCC  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2656   002DD0  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2657   002DD4  CFDE F026          	movff	postinc2,___fldiv@a
  2658   002DD8  CFDE F027          	movff	postinc2,___fldiv@a+1
  2659   002DDC  CFDE F028          	movff	postinc2,___fldiv@a+2
  2660   002DE0  CFDE F029          	movff	postinc2,___fldiv@a+3
  2661   002DE4  EC7C  F011         	call	___fldiv	;wreg free
  2662   002DE8  EE20 F010          	lfsr	2,16
  2663   002DEC  503B               	movf	color_normalise@RGBC^0,w,c
  2664   002DEE  26D9               	addwf	fsr2l,f,c
  2665   002DF0  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2666   002DF2  22DA               	addwfc	fsr2h,f,c
  2667   002DF4  C022  FFDE         	movff	?___fldiv,postinc2
  2668   002DF8  C023  FFDE         	movff	?___fldiv+1,postinc2
  2669   002DFC  C024  FFDE         	movff	?___fldiv+2,postinc2
  2670   002E00  C025  FFDE         	movff	?___fldiv+3,postinc2
  2671   002E04                     
  2672                           ;color.c: 105:     RGBC->norm_G = RGBC->C / RGBC->G;
  2673   002E04  EE20 F00C          	lfsr	2,12
  2674   002E08  503B               	movf	color_normalise@RGBC^0,w,c
  2675   002E0A  26D9               	addwf	fsr2l,f,c
  2676   002E0C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2677   002E0E  22DA               	addwfc	fsr2h,f,c
  2678   002E10  CFDE F022          	movff	postinc2,___fldiv@b
  2679   002E14  CFDE F023          	movff	postinc2,___fldiv@b+1
  2680   002E18  CFDE F024          	movff	postinc2,___fldiv@b+2
  2681   002E1C  CFDE F025          	movff	postinc2,___fldiv@b+3
  2682   002E20  EE20 F004          	lfsr	2,4
  2683   002E24  503B               	movf	color_normalise@RGBC^0,w,c
  2684   002E26  26D9               	addwf	fsr2l,f,c
  2685   002E28  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2686   002E2A  22DA               	addwfc	fsr2h,f,c
  2687   002E2C  CFDE F026          	movff	postinc2,___fldiv@a
  2688   002E30  CFDE F027          	movff	postinc2,___fldiv@a+1
  2689   002E34  CFDE F028          	movff	postinc2,___fldiv@a+2
  2690   002E38  CFDE F029          	movff	postinc2,___fldiv@a+3
  2691   002E3C  EC7C  F011         	call	___fldiv	;wreg free
  2692   002E40  EE20 F014          	lfsr	2,20
  2693   002E44  503B               	movf	color_normalise@RGBC^0,w,c
  2694   002E46  26D9               	addwf	fsr2l,f,c
  2695   002E48  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2696   002E4A  22DA               	addwfc	fsr2h,f,c
  2697   002E4C  C022  FFDE         	movff	?___fldiv,postinc2
  2698   002E50  C023  FFDE         	movff	?___fldiv+1,postinc2
  2699   002E54  C024  FFDE         	movff	?___fldiv+2,postinc2
  2700   002E58  C025  FFDE         	movff	?___fldiv+3,postinc2
  2701   002E5C                     
  2702                           ;color.c: 106:     RGBC->norm_B = RGBC->C / RGBC->B;
  2703   002E5C  EE20 F00C          	lfsr	2,12
  2704   002E60  503B               	movf	color_normalise@RGBC^0,w,c
  2705   002E62  26D9               	addwf	fsr2l,f,c
  2706   002E64  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2707   002E66  22DA               	addwfc	fsr2h,f,c
  2708   002E68  CFDE F022          	movff	postinc2,___fldiv@b
  2709   002E6C  CFDE F023          	movff	postinc2,___fldiv@b+1
  2710   002E70  CFDE F024          	movff	postinc2,___fldiv@b+2
  2711   002E74  CFDE F025          	movff	postinc2,___fldiv@b+3
  2712   002E78  EE20 F008          	lfsr	2,8
  2713   002E7C  503B               	movf	color_normalise@RGBC^0,w,c
  2714   002E7E  26D9               	addwf	fsr2l,f,c
  2715   002E80  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2716   002E82  22DA               	addwfc	fsr2h,f,c
  2717   002E84  CFDE F026          	movff	postinc2,___fldiv@a
  2718   002E88  CFDE F027          	movff	postinc2,___fldiv@a+1
  2719   002E8C  CFDE F028          	movff	postinc2,___fldiv@a+2
  2720   002E90  CFDE F029          	movff	postinc2,___fldiv@a+3
  2721   002E94  EC7C  F011         	call	___fldiv	;wreg free
  2722   002E98  EE20 F018          	lfsr	2,24
  2723   002E9C  503B               	movf	color_normalise@RGBC^0,w,c
  2724   002E9E  26D9               	addwf	fsr2l,f,c
  2725   002EA0  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2726   002EA2  22DA               	addwfc	fsr2h,f,c
  2727   002EA4  C022  FFDE         	movff	?___fldiv,postinc2
  2728   002EA8  C023  FFDE         	movff	?___fldiv+1,postinc2
  2729   002EAC  C024  FFDE         	movff	?___fldiv+2,postinc2
  2730   002EB0  C025  FFDE         	movff	?___fldiv+3,postinc2
  2731   002EB4                     
  2732                           ;color.c: 107:     RGBC->norm_C = RGBC->C / amb_clear;
  2733   002EB4  EE20 F00C          	lfsr	2,12
  2734   002EB8  503B               	movf	color_normalise@RGBC^0,w,c
  2735   002EBA  26D9               	addwf	fsr2l,f,c
  2736   002EBC  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2737   002EBE  22DA               	addwfc	fsr2h,f,c
  2738   002EC0  CFDE F022          	movff	postinc2,___fldiv@b
  2739   002EC4  CFDE F023          	movff	postinc2,___fldiv@b+1
  2740   002EC8  CFDE F024          	movff	postinc2,___fldiv@b+2
  2741   002ECC  CFDE F025          	movff	postinc2,___fldiv@b+3
  2742   002ED0  0E51               	movlw	81
  2743   002ED2  6E14               	movwf	___xxtofl@val^0,c
  2744   002ED4  0E09               	movlw	9
  2745   002ED6  6E15               	movwf	(___xxtofl@val+1)^0,c
  2746   002ED8  0E00               	movlw	0
  2747   002EDA  6E16               	movwf	(___xxtofl@val+2)^0,c
  2748   002EDC  0E00               	movlw	0
  2749   002EDE  6E17               	movwf	(___xxtofl@val+3)^0,c
  2750   002EE0  0E01               	movlw	1
  2751   002EE2  ECFA  F015         	call	___xxtofl
  2752   002EE6  C014  F026         	movff	?___xxtofl,___fldiv@a
  2753   002EEA  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2754   002EEE  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2755   002EF2  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2756   002EF6  EC7C  F011         	call	___fldiv	;wreg free
  2757   002EFA  EE20 F01C          	lfsr	2,28
  2758   002EFE  503B               	movf	color_normalise@RGBC^0,w,c
  2759   002F00  26D9               	addwf	fsr2l,f,c
  2760   002F02  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2761   002F04  22DA               	addwfc	fsr2h,f,c
  2762   002F06  C022  FFDE         	movff	?___fldiv,postinc2
  2763   002F0A  C023  FFDE         	movff	?___fldiv+1,postinc2
  2764   002F0E  C024  FFDE         	movff	?___fldiv+2,postinc2
  2765   002F12  C025  FFDE         	movff	?___fldiv+3,postinc2
  2766   002F16  0012               	return		;funcret
  2767   002F18                     __end_of_color_normalise:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function ___xxtofl *****************
  2771 ;; Defined at:
  2772 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  sign            1    wreg     unsigned char 
  2775 ;;  val             4   19[COMRAM] long 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  sign            1   27[COMRAM] unsigned char 
  2778 ;;  arg             4   29[COMRAM] unsigned long 
  2779 ;;  exp             1   28[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  4   19[COMRAM] unsigned char 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:       14 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 6
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_color_read_RGBC
  2800 ;;		_color_normalise
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text15
  2805   002BF4                     __ptext15:
  2806                           	callstack 0
  2807   002BF4                     ___xxtofl:
  2808                           	callstack 22
  2809                           
  2810                           ;incstack = 0
  2811                           ;___xxtofl@sign stored from wreg
  2812   002BF4  6E1C               	movwf	___xxtofl@sign^0,c
  2813   002BF6  501C               	movf	___xxtofl@sign^0,w,c
  2814   002BF8  B4D8               	btfsc	status,2,c
  2815   002BFA  EF01  F016         	goto	u1991
  2816   002BFE  EF03  F016         	goto	u1990
  2817   002C02                     u1991:
  2818   002C02  EF25  F016         	goto	l1365
  2819   002C06                     u1990:
  2820   002C06  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2821   002C08  EF0A  F016         	goto	u2000
  2822   002C0C  EF08  F016         	goto	u2001
  2823   002C10                     u2001:
  2824   002C10  EF25  F016         	goto	l1365
  2825   002C14                     u2000:
  2826   002C14  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2827   002C18  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2828   002C1C  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2829   002C20  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2830   002C24  1E18               	comf	??___xxtofl^0,f,c
  2831   002C26  1E19               	comf	(??___xxtofl+1)^0,f,c
  2832   002C28  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2833   002C2A  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2834   002C2C  2A18               	incf	??___xxtofl^0,f,c
  2835   002C2E  0E00               	movlw	0
  2836   002C30  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2837   002C32  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2838   002C34  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2839   002C36  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2840   002C3A  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2841   002C3E  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2842   002C42  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2843   002C46  EF2D  F016         	goto	l2984
  2844   002C4A                     l1365:
  2845   002C4A  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2846   002C4E  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2847   002C52  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2848   002C56  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2849   002C5A                     l2984:
  2850   002C5A  5014               	movf	___xxtofl@val^0,w,c
  2851   002C5C  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2852   002C5E  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2853   002C60  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2854   002C62  A4D8               	btfss	status,2,c
  2855   002C64  EF36  F016         	goto	u2011
  2856   002C68  EF38  F016         	goto	u2010
  2857   002C6C                     u2011:
  2858   002C6C  EF42  F016         	goto	l2990
  2859   002C70                     u2010:
  2860   002C70  0E00               	movlw	0
  2861   002C72  6E14               	movwf	?___xxtofl^0,c
  2862   002C74  0E00               	movlw	0
  2863   002C76  6E15               	movwf	(?___xxtofl+1)^0,c
  2864   002C78  0E00               	movlw	0
  2865   002C7A  6E16               	movwf	(?___xxtofl+2)^0,c
  2866   002C7C  0E00               	movlw	0
  2867   002C7E  6E17               	movwf	(?___xxtofl+3)^0,c
  2868   002C80  EFD3  F016         	goto	l1368
  2869   002C84                     l2990:
  2870   002C84  0E96               	movlw	150
  2871   002C86  6E1D               	movwf	___xxtofl@exp^0,c
  2872   002C88  EF4C  F016         	goto	l2994
  2873   002C8C                     l2992:
  2874   002C8C  2A1D               	incf	___xxtofl@exp^0,f,c
  2875   002C8E  90D8               	bcf	status,0,c
  2876   002C90  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2877   002C92  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2878   002C94  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2879   002C96  321E               	rrcf	___xxtofl@arg^0,f,c
  2880   002C98                     l2994:
  2881   002C98  0E00               	movlw	0
  2882   002C9A  141E               	andwf	___xxtofl@arg^0,w,c
  2883   002C9C  6E18               	movwf	??___xxtofl^0,c
  2884   002C9E  0E00               	movlw	0
  2885   002CA0  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2886   002CA2  6E19               	movwf	(??___xxtofl+1)^0,c
  2887   002CA4  0E00               	movlw	0
  2888   002CA6  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2889   002CA8  6E1A               	movwf	(??___xxtofl+2)^0,c
  2890   002CAA  0EFE               	movlw	254
  2891   002CAC  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2892   002CAE  6E1B               	movwf	(??___xxtofl+3)^0,c
  2893   002CB0  5018               	movf	??___xxtofl^0,w,c
  2894   002CB2  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2895   002CB4  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2896   002CB6  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2897   002CB8  A4D8               	btfss	status,2,c
  2898   002CBA  EF61  F016         	goto	u2021
  2899   002CBE  EF63  F016         	goto	u2020
  2900   002CC2                     u2021:
  2901   002CC2  EF46  F016         	goto	l2992
  2902   002CC6                     u2020:
  2903   002CC6  EF71  F016         	goto	l1372
  2904   002CCA                     l2996:
  2905   002CCA  2A1D               	incf	___xxtofl@exp^0,f,c
  2906   002CCC  0E01               	movlw	1
  2907   002CCE  261E               	addwf	___xxtofl@arg^0,f,c
  2908   002CD0  0E00               	movlw	0
  2909   002CD2  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2910   002CD4  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2911   002CD6  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2912   002CD8  90D8               	bcf	status,0,c
  2913   002CDA  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2914   002CDC  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2915   002CDE  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2916   002CE0  321E               	rrcf	___xxtofl@arg^0,f,c
  2917   002CE2                     l1372:
  2918   002CE2  0E00               	movlw	0
  2919   002CE4  141E               	andwf	___xxtofl@arg^0,w,c
  2920   002CE6  6E18               	movwf	??___xxtofl^0,c
  2921   002CE8  0E00               	movlw	0
  2922   002CEA  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2923   002CEC  6E19               	movwf	(??___xxtofl+1)^0,c
  2924   002CEE  0E00               	movlw	0
  2925   002CF0  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2926   002CF2  6E1A               	movwf	(??___xxtofl+2)^0,c
  2927   002CF4  0EFF               	movlw	255
  2928   002CF6  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2929   002CF8  6E1B               	movwf	(??___xxtofl+3)^0,c
  2930   002CFA  5018               	movf	??___xxtofl^0,w,c
  2931   002CFC  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2932   002CFE  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2933   002D00  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2934   002D02  A4D8               	btfss	status,2,c
  2935   002D04  EF86  F016         	goto	u2031
  2936   002D08  EF88  F016         	goto	u2030
  2937   002D0C                     u2031:
  2938   002D0C  EF65  F016         	goto	l2996
  2939   002D10                     u2030:
  2940   002D10  EF90  F016         	goto	l3004
  2941   002D14                     l3002:
  2942   002D14  061D               	decf	___xxtofl@exp^0,f,c
  2943   002D16  90D8               	bcf	status,0,c
  2944   002D18  361E               	rlcf	___xxtofl@arg^0,f,c
  2945   002D1A  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2946   002D1C  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2947   002D1E  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2948   002D20                     l3004:
  2949   002D20  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2950   002D22  EF95  F016         	goto	u2041
  2951   002D26  EF97  F016         	goto	u2040
  2952   002D2A                     u2041:
  2953   002D2A  EF9F  F016         	goto	l1379
  2954   002D2E                     u2040:
  2955   002D2E  0E02               	movlw	2
  2956   002D30  601D               	cpfslt	___xxtofl@exp^0,c
  2957   002D32  EF9D  F016         	goto	u2051
  2958   002D36  EF9F  F016         	goto	u2050
  2959   002D3A                     u2051:
  2960   002D3A  EF8A  F016         	goto	l3002
  2961   002D3E                     u2050:
  2962   002D3E                     l1379:
  2963   002D3E  B01D               	btfsc	___xxtofl@exp^0,0,c
  2964   002D40  EFA4  F016         	goto	u2061
  2965   002D44  EFA6  F016         	goto	u2060
  2966   002D48                     u2061:
  2967   002D48  EFA7  F016         	goto	l3010
  2968   002D4C                     u2060:
  2969   002D4C  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2970   002D4E                     l3010:
  2971   002D4E  90D8               	bcf	status,0,c
  2972   002D50  321D               	rrcf	___xxtofl@exp^0,f,c
  2973   002D52  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2974   002D56  6A19               	clrf	(??___xxtofl+1)^0,c
  2975   002D58  6A1A               	clrf	(??___xxtofl+2)^0,c
  2976   002D5A  6A1B               	clrf	(??___xxtofl+3)^0,c
  2977   002D5C  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2978   002D60  6A1A               	clrf	(??___xxtofl+2)^0,c
  2979   002D62  6A19               	clrf	(??___xxtofl+1)^0,c
  2980   002D64  6A18               	clrf	??___xxtofl^0,c
  2981   002D66  5018               	movf	??___xxtofl^0,w,c
  2982   002D68  121E               	iorwf	___xxtofl@arg^0,f,c
  2983   002D6A  5019               	movf	(??___xxtofl+1)^0,w,c
  2984   002D6C  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2985   002D6E  501A               	movf	(??___xxtofl+2)^0,w,c
  2986   002D70  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2987   002D72  501B               	movf	(??___xxtofl+3)^0,w,c
  2988   002D74  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2989   002D76  501C               	movf	___xxtofl@sign^0,w,c
  2990   002D78  B4D8               	btfsc	status,2,c
  2991   002D7A  EFC1  F016         	goto	u2071
  2992   002D7E  EFC3  F016         	goto	u2070
  2993   002D82                     u2071:
  2994   002D82  EFCB  F016         	goto	l3020
  2995   002D86                     u2070:
  2996   002D86  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2997   002D88  EFCA  F016         	goto	u2080
  2998   002D8C  EFC8  F016         	goto	u2081
  2999   002D90                     u2081:
  3000   002D90  EFCB  F016         	goto	l3020
  3001   002D94                     u2080:
  3002   002D94  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3003   002D96                     l3020:
  3004   002D96  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3005   002D9A  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3006   002D9E  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3007   002DA2  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3008   002DA6                     l1368:
  3009   002DA6  0012               	return		;funcret
  3010   002DA8                     __end_of___xxtofl:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function ___fldiv *****************
  3014 ;; Defined at:
  3015 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  b               4   33[COMRAM] unsigned char 
  3018 ;;  a               4   37[COMRAM] unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  grs             4   52[COMRAM] unsigned long 
  3021 ;;  rem             4   45[COMRAM] unsigned long 
  3022 ;;  new_exp         2   50[COMRAM] short 
  3023 ;;  aexp            1   57[COMRAM] unsigned char 
  3024 ;;  bexp            1   56[COMRAM] unsigned char 
  3025 ;;  sign            1   49[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  4   33[COMRAM] unsigned char 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;Total ram usage:       25 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 6
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_color_normalise
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text16
  3050   0022F8                     __ptext16:
  3051                           	callstack 0
  3052   0022F8                     ___fldiv:
  3053                           	callstack 22
  3054   0022F8  5025               	movf	(___fldiv@b+3)^0,w,c
  3055   0022FA  0B80               	andlw	128
  3056   0022FC  6E32               	movwf	___fldiv@sign^0,c
  3057   0022FE  5025               	movf	(___fldiv@b+3)^0,w,c
  3058   002300  2425               	addwf	(___fldiv@b+3)^0,w,c
  3059   002302  6E39               	movwf	___fldiv@bexp^0,c
  3060   002304  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3061   002306  EF87  F011         	goto	u1761
  3062   00230A  EF89  F011         	goto	u1760
  3063   00230E                     u1761:
  3064   00230E  EF8A  F011         	goto	l2846
  3065   002312                     u1760:
  3066   002312  8039               	bsf	___fldiv@bexp^0,0,c
  3067   002314                     l2846:
  3068   002314  5039               	movf	___fldiv@bexp^0,w,c
  3069   002316  B4D8               	btfsc	status,2,c
  3070   002318  EF90  F011         	goto	u1771
  3071   00231C  EF92  F011         	goto	u1770
  3072   002320                     u1771:
  3073   002320  EFA7  F011         	goto	l2856
  3074   002324                     u1770:
  3075   002324  2839               	incf	___fldiv@bexp^0,w,c
  3076   002326  A4D8               	btfss	status,2,c
  3077   002328  EF98  F011         	goto	u1781
  3078   00232C  EF9A  F011         	goto	u1780
  3079   002330                     u1781:
  3080   002330  EFA2  F011         	goto	l2852
  3081   002334                     u1780:
  3082   002334  0E00               	movlw	0
  3083   002336  6E22               	movwf	___fldiv@b^0,c
  3084   002338  0E00               	movlw	0
  3085   00233A  6E23               	movwf	(___fldiv@b+1)^0,c
  3086   00233C  0E00               	movlw	0
  3087   00233E  6E24               	movwf	(___fldiv@b+2)^0,c
  3088   002340  0E00               	movlw	0
  3089   002342  6E25               	movwf	(___fldiv@b+3)^0,c
  3090   002344                     l2852:
  3091   002344  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3092   002346  0E00               	movlw	0
  3093   002348  6E25               	movwf	(___fldiv@b+3)^0,c
  3094   00234A  EFAF  F011         	goto	l2858
  3095   00234E                     l2856:
  3096   00234E  0E00               	movlw	0
  3097   002350  6E22               	movwf	___fldiv@b^0,c
  3098   002352  0E00               	movlw	0
  3099   002354  6E23               	movwf	(___fldiv@b+1)^0,c
  3100   002356  0E00               	movlw	0
  3101   002358  6E24               	movwf	(___fldiv@b+2)^0,c
  3102   00235A  0E00               	movlw	0
  3103   00235C  6E25               	movwf	(___fldiv@b+3)^0,c
  3104   00235E                     l2858:
  3105   00235E  5029               	movf	(___fldiv@a+3)^0,w,c
  3106   002360  0B80               	andlw	128
  3107   002362  1A32               	xorwf	___fldiv@sign^0,f,c
  3108   002364  5029               	movf	(___fldiv@a+3)^0,w,c
  3109   002366  2429               	addwf	(___fldiv@a+3)^0,w,c
  3110   002368  6E3A               	movwf	___fldiv@aexp^0,c
  3111   00236A  AE28               	btfss	(___fldiv@a+2)^0,7,c
  3112   00236C  EFBA  F011         	goto	u1791
  3113   002370  EFBC  F011         	goto	u1790
  3114   002374                     u1791:
  3115   002374  EFBD  F011         	goto	l2866
  3116   002378                     u1790:
  3117   002378  803A               	bsf	___fldiv@aexp^0,0,c
  3118   00237A                     l2866:
  3119   00237A  503A               	movf	___fldiv@aexp^0,w,c
  3120   00237C  B4D8               	btfsc	status,2,c
  3121   00237E  EFC3  F011         	goto	u1801
  3122   002382  EFC5  F011         	goto	u1800
  3123   002386                     u1801:
  3124   002386  EFDA  F011         	goto	l2876
  3125   00238A                     u1800:
  3126   00238A  283A               	incf	___fldiv@aexp^0,w,c
  3127   00238C  A4D8               	btfss	status,2,c
  3128   00238E  EFCB  F011         	goto	u1811
  3129   002392  EFCD  F011         	goto	u1810
  3130   002396                     u1811:
  3131   002396  EFD5  F011         	goto	l2872
  3132   00239A                     u1810:
  3133   00239A  0E00               	movlw	0
  3134   00239C  6E26               	movwf	___fldiv@a^0,c
  3135   00239E  0E00               	movlw	0
  3136   0023A0  6E27               	movwf	(___fldiv@a+1)^0,c
  3137   0023A2  0E00               	movlw	0
  3138   0023A4  6E28               	movwf	(___fldiv@a+2)^0,c
  3139   0023A6  0E00               	movlw	0
  3140   0023A8  6E29               	movwf	(___fldiv@a+3)^0,c
  3141   0023AA                     l2872:
  3142   0023AA  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3143   0023AC  0E00               	movlw	0
  3144   0023AE  6E29               	movwf	(___fldiv@a+3)^0,c
  3145   0023B0  EFE2  F011         	goto	l2878
  3146   0023B4                     l2876:
  3147   0023B4  0E00               	movlw	0
  3148   0023B6  6E26               	movwf	___fldiv@a^0,c
  3149   0023B8  0E00               	movlw	0
  3150   0023BA  6E27               	movwf	(___fldiv@a+1)^0,c
  3151   0023BC  0E00               	movlw	0
  3152   0023BE  6E28               	movwf	(___fldiv@a+2)^0,c
  3153   0023C0  0E00               	movlw	0
  3154   0023C2  6E29               	movwf	(___fldiv@a+3)^0,c
  3155   0023C4                     l2878:
  3156   0023C4  5026               	movf	___fldiv@a^0,w,c
  3157   0023C6  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3158   0023C8  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3159   0023CA  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3160   0023CC  A4D8               	btfss	status,2,c
  3161   0023CE  EFEB  F011         	goto	u1821
  3162   0023D2  EFED  F011         	goto	u1820
  3163   0023D6                     u1821:
  3164   0023D6  EF05  F012         	goto	l2890
  3165   0023DA                     u1820:
  3166   0023DA  0E00               	movlw	0
  3167   0023DC  6E22               	movwf	___fldiv@b^0,c
  3168   0023DE  0E00               	movlw	0
  3169   0023E0  6E23               	movwf	(___fldiv@b+1)^0,c
  3170   0023E2  0E00               	movlw	0
  3171   0023E4  6E24               	movwf	(___fldiv@b+2)^0,c
  3172   0023E6  0E00               	movlw	0
  3173   0023E8  6E25               	movwf	(___fldiv@b+3)^0,c
  3174   0023EA  0E80               	movlw	128
  3175   0023EC  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3176   0023EE  0E7F               	movlw	127
  3177   0023F0  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3178   0023F2                     l2884:
  3179   0023F2  5032               	movf	___fldiv@sign^0,w,c
  3180   0023F4  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3181   0023F6  C022  F022         	movff	___fldiv@b,?___fldiv
  3182   0023FA  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3183   0023FE  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3184   002402  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3185   002406  EF48  F013         	goto	l1292
  3186   00240A                     l2890:
  3187   00240A  5039               	movf	___fldiv@bexp^0,w,c
  3188   00240C  A4D8               	btfss	status,2,c
  3189   00240E  EF0B  F012         	goto	u1831
  3190   002412  EF0D  F012         	goto	u1830
  3191   002416                     u1831:
  3192   002416  EF17  F012         	goto	l2898
  3193   00241A                     u1830:
  3194   00241A  0E00               	movlw	0
  3195   00241C  6E22               	movwf	?___fldiv^0,c
  3196   00241E  0E00               	movlw	0
  3197   002420  6E23               	movwf	(?___fldiv+1)^0,c
  3198   002422  0E00               	movlw	0
  3199   002424  6E24               	movwf	(?___fldiv+2)^0,c
  3200   002426  0E00               	movlw	0
  3201   002428  6E25               	movwf	(?___fldiv+3)^0,c
  3202   00242A  EF48  F013         	goto	l1292
  3203   00242E                     l2898:
  3204   00242E  503A               	movf	___fldiv@aexp^0,w,c
  3205   002430  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3206   002434  6A2B               	clrf	(??___fldiv+1)^0,c
  3207   002436  5E2A               	subwf	??___fldiv^0,f,c
  3208   002438  0E00               	movlw	0
  3209   00243A  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3210   00243C  0E7F               	movlw	127
  3211   00243E  242A               	addwf	??___fldiv^0,w,c
  3212   002440  6E33               	movwf	___fldiv@new_exp^0,c
  3213   002442  0E00               	movlw	0
  3214   002444  202B               	addwfc	(??___fldiv+1)^0,w,c
  3215   002446  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3216   002448  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3217   00244C  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3218   002450  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3219   002454  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3220   002458  0E00               	movlw	0
  3221   00245A  6E22               	movwf	___fldiv@b^0,c
  3222   00245C  0E00               	movlw	0
  3223   00245E  6E23               	movwf	(___fldiv@b+1)^0,c
  3224   002460  0E00               	movlw	0
  3225   002462  6E24               	movwf	(___fldiv@b+2)^0,c
  3226   002464  0E00               	movlw	0
  3227   002466  6E25               	movwf	(___fldiv@b+3)^0,c
  3228   002468  0E00               	movlw	0
  3229   00246A  6E35               	movwf	___fldiv@grs^0,c
  3230   00246C  0E00               	movlw	0
  3231   00246E  6E36               	movwf	(___fldiv@grs+1)^0,c
  3232   002470  0E00               	movlw	0
  3233   002472  6E37               	movwf	(___fldiv@grs+2)^0,c
  3234   002474  0E00               	movlw	0
  3235   002476  6E38               	movwf	(___fldiv@grs+3)^0,c
  3236   002478  0E00               	movlw	0
  3237   00247A  6E3A               	movwf	___fldiv@aexp^0,c
  3238   00247C  EF78  F012         	goto	l1294
  3239   002480                     l2908:
  3240   002480  503A               	movf	___fldiv@aexp^0,w,c
  3241   002482  B4D8               	btfsc	status,2,c
  3242   002484  EF46  F012         	goto	u1841
  3243   002488  EF48  F012         	goto	u1840
  3244   00248C                     u1841:
  3245   00248C  EF5F  F012         	goto	l2916
  3246   002490                     u1840:
  3247   002490  90D8               	bcf	status,0,c
  3248   002492  362E               	rlcf	___fldiv@rem^0,f,c
  3249   002494  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3250   002496  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3251   002498  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3252   00249A  90D8               	bcf	status,0,c
  3253   00249C  3622               	rlcf	___fldiv@b^0,f,c
  3254   00249E  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3255   0024A0  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3256   0024A2  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3257   0024A4  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3258   0024A6  EF57  F012         	goto	u1851
  3259   0024AA  EF59  F012         	goto	u1850
  3260   0024AE                     u1851:
  3261   0024AE  EF5A  F012         	goto	l1297
  3262   0024B2                     u1850:
  3263   0024B2  8022               	bsf	___fldiv@b^0,0,c
  3264   0024B4                     l1297:
  3265   0024B4  90D8               	bcf	status,0,c
  3266   0024B6  3635               	rlcf	___fldiv@grs^0,f,c
  3267   0024B8  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3268   0024BA  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3269   0024BC  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3270   0024BE                     l2916:
  3271   0024BE  5026               	movf	___fldiv@a^0,w,c
  3272   0024C0  5C2E               	subwf	___fldiv@rem^0,w,c
  3273   0024C2  5027               	movf	(___fldiv@a+1)^0,w,c
  3274   0024C4  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3275   0024C6  5028               	movf	(___fldiv@a+2)^0,w,c
  3276   0024C8  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3277   0024CA  5029               	movf	(___fldiv@a+3)^0,w,c
  3278   0024CC  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3279   0024CE  A0D8               	btfss	status,0,c
  3280   0024D0  EF6C  F012         	goto	u1861
  3281   0024D4  EF6E  F012         	goto	u1860
  3282   0024D8                     u1861:
  3283   0024D8  EF77  F012         	goto	l2922
  3284   0024DC                     u1860:
  3285   0024DC  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3286   0024DE  5026               	movf	___fldiv@a^0,w,c
  3287   0024E0  5E2E               	subwf	___fldiv@rem^0,f,c
  3288   0024E2  5027               	movf	(___fldiv@a+1)^0,w,c
  3289   0024E4  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3290   0024E6  5028               	movf	(___fldiv@a+2)^0,w,c
  3291   0024E8  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3292   0024EA  5029               	movf	(___fldiv@a+3)^0,w,c
  3293   0024EC  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3294   0024EE                     l2922:
  3295   0024EE  2A3A               	incf	___fldiv@aexp^0,f,c
  3296   0024F0                     l1294:
  3297   0024F0  0E19               	movlw	25
  3298   0024F2  643A               	cpfsgt	___fldiv@aexp^0,c
  3299   0024F4  EF7E  F012         	goto	u1871
  3300   0024F8  EF80  F012         	goto	u1870
  3301   0024FC                     u1871:
  3302   0024FC  EF40  F012         	goto	l2908
  3303   002500                     u1870:
  3304   002500  502E               	movf	___fldiv@rem^0,w,c
  3305   002502  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3306   002504  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3307   002506  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3308   002508  B4D8               	btfsc	status,2,c
  3309   00250A  EF89  F012         	goto	u1881
  3310   00250E  EF8B  F012         	goto	u1880
  3311   002512                     u1881:
  3312   002512  EFA3  F012         	goto	l2934
  3313   002516                     u1880:
  3314   002516  8035               	bsf	___fldiv@grs^0,0,c
  3315   002518  EFA3  F012         	goto	l2934
  3316   00251C                     l2928:
  3317   00251C  90D8               	bcf	status,0,c
  3318   00251E  3622               	rlcf	___fldiv@b^0,f,c
  3319   002520  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3320   002522  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3321   002524  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3322   002526  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3323   002528  EF98  F012         	goto	u1891
  3324   00252C  EF9A  F012         	goto	u1890
  3325   002530                     u1891:
  3326   002530  EF9B  F012         	goto	l1303
  3327   002534                     u1890:
  3328   002534  8022               	bsf	___fldiv@b^0,0,c
  3329   002536                     l1303:
  3330   002536  90D8               	bcf	status,0,c
  3331   002538  3635               	rlcf	___fldiv@grs^0,f,c
  3332   00253A  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3333   00253C  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3334   00253E  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3335   002540  0633               	decf	___fldiv@new_exp^0,f,c
  3336   002542  A0D8               	btfss	status,0,c
  3337   002544  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3338   002546                     l2934:
  3339   002546  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3340   002548  EFA8  F012         	goto	u1901
  3341   00254C  EFAA  F012         	goto	u1900
  3342   002550                     u1901:
  3343   002550  EF8E  F012         	goto	l2928
  3344   002554                     u1900:
  3345   002554  0E00               	movlw	0
  3346   002556  6E3A               	movwf	___fldiv@aexp^0,c
  3347   002558  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3348   00255A  EFB1  F012         	goto	u1911
  3349   00255E  EFB3  F012         	goto	u1910
  3350   002562                     u1911:
  3351   002562  EFD7  F012         	goto	l1305
  3352   002566                     u1910:
  3353   002566  0EFF               	movlw	255
  3354   002568  1435               	andwf	___fldiv@grs^0,w,c
  3355   00256A  6E2A               	movwf	??___fldiv^0,c
  3356   00256C  0EFF               	movlw	255
  3357   00256E  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3358   002570  6E2B               	movwf	(??___fldiv+1)^0,c
  3359   002572  0EFF               	movlw	255
  3360   002574  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3361   002576  6E2C               	movwf	(??___fldiv+2)^0,c
  3362   002578  0E7F               	movlw	127
  3363   00257A  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3364   00257C  6E2D               	movwf	(??___fldiv+3)^0,c
  3365   00257E  502A               	movf	??___fldiv^0,w,c
  3366   002580  102B               	iorwf	(??___fldiv+1)^0,w,c
  3367   002582  102C               	iorwf	(??___fldiv+2)^0,w,c
  3368   002584  102D               	iorwf	(??___fldiv+3)^0,w,c
  3369   002586  B4D8               	btfsc	status,2,c
  3370   002588  EFC8  F012         	goto	u1921
  3371   00258C  EFCA  F012         	goto	u1920
  3372   002590                     u1921:
  3373   002590  EFCE  F012         	goto	l1306
  3374   002594                     u1920:
  3375   002594                     l2942:
  3376   002594  0E01               	movlw	1
  3377   002596  6E3A               	movwf	___fldiv@aexp^0,c
  3378   002598  EFD7  F012         	goto	l1305
  3379   00259C                     l1306:
  3380   00259C  A022               	btfss	___fldiv@b^0,0,c
  3381   00259E  EFD3  F012         	goto	u1931
  3382   0025A2  EFD5  F012         	goto	u1930
  3383   0025A6                     u1931:
  3384   0025A6  EFD7  F012         	goto	l1305
  3385   0025AA                     u1930:
  3386   0025AA  EFCA  F012         	goto	l2942
  3387   0025AE                     l1305:
  3388   0025AE  503A               	movf	___fldiv@aexp^0,w,c
  3389   0025B0  B4D8               	btfsc	status,2,c
  3390   0025B2  EFDD  F012         	goto	u1941
  3391   0025B6  EFDF  F012         	goto	u1940
  3392   0025BA                     u1941:
  3393   0025BA  EF03  F013         	goto	l2954
  3394   0025BE                     u1940:
  3395   0025BE  0E01               	movlw	1
  3396   0025C0  2622               	addwf	___fldiv@b^0,f,c
  3397   0025C2  0E00               	movlw	0
  3398   0025C4  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3399   0025C6  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3400   0025C8  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3401   0025CA  A025               	btfss	(___fldiv@b+3)^0,0,c
  3402   0025CC  EFEA  F012         	goto	u1951
  3403   0025D0  EFEC  F012         	goto	u1950
  3404   0025D4                     u1951:
  3405   0025D4  EF03  F013         	goto	l2954
  3406   0025D8                     u1950:
  3407   0025D8  C022  F02A         	movff	___fldiv@b,??___fldiv
  3408   0025DC  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3409   0025E0  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3410   0025E4  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3411   0025E8  342D               	rlcf	(??___fldiv+3)^0,w,c
  3412   0025EA  322D               	rrcf	(??___fldiv+3)^0,f,c
  3413   0025EC  322C               	rrcf	(??___fldiv+2)^0,f,c
  3414   0025EE  322B               	rrcf	(??___fldiv+1)^0,f,c
  3415   0025F0  322A               	rrcf	??___fldiv^0,f,c
  3416   0025F2  C02A  F022         	movff	??___fldiv,___fldiv@b
  3417   0025F6  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3418   0025FA  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3419   0025FE  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3420   002602  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3421   002604  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3422   002606                     l2954:
  3423   002606  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3424   002608  EF0E  F013         	goto	u1961
  3425   00260C  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3426   00260E  E108               	bnz	u1960
  3427   002610  2833               	incf	___fldiv@new_exp^0,w,c
  3428   002612  A0D8               	btfss	status,0,c
  3429   002614  EF0E  F013         	goto	u1961
  3430   002618  EF10  F013         	goto	u1960
  3431   00261C                     u1961:
  3432   00261C  EF1B  F013         	goto	l2958
  3433   002620                     u1960:
  3434   002620  0E00               	movlw	0
  3435   002622  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3436   002624  6833               	setf	___fldiv@new_exp^0,c
  3437   002626  0E00               	movlw	0
  3438   002628  6E22               	movwf	___fldiv@b^0,c
  3439   00262A  0E00               	movlw	0
  3440   00262C  6E23               	movwf	(___fldiv@b+1)^0,c
  3441   00262E  0E00               	movlw	0
  3442   002630  6E24               	movwf	(___fldiv@b+2)^0,c
  3443   002632  0E00               	movlw	0
  3444   002634  6E25               	movwf	(___fldiv@b+3)^0,c
  3445   002636                     l2958:
  3446   002636  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3447   002638  EF28  F013         	goto	u1970
  3448   00263C  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3449   00263E  E106               	bnz	u1971
  3450   002640  0433               	decf	___fldiv@new_exp^0,w,c
  3451   002642  B0D8               	btfsc	status,0,c
  3452   002644  EF26  F013         	goto	u1971
  3453   002648  EF28  F013         	goto	u1970
  3454   00264C                     u1971:
  3455   00264C  EF36  F013         	goto	l2962
  3456   002650                     u1970:
  3457   002650  0E00               	movlw	0
  3458   002652  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3459   002654  0E00               	movlw	0
  3460   002656  6E33               	movwf	___fldiv@new_exp^0,c
  3461   002658  0E00               	movlw	0
  3462   00265A  6E22               	movwf	___fldiv@b^0,c
  3463   00265C  0E00               	movlw	0
  3464   00265E  6E23               	movwf	(___fldiv@b+1)^0,c
  3465   002660  0E00               	movlw	0
  3466   002662  6E24               	movwf	(___fldiv@b+2)^0,c
  3467   002664  0E00               	movlw	0
  3468   002666  6E25               	movwf	(___fldiv@b+3)^0,c
  3469   002668  0E00               	movlw	0
  3470   00266A  6E32               	movwf	___fldiv@sign^0,c
  3471   00266C                     l2962:
  3472   00266C  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3473   002670  A039               	btfss	___fldiv@bexp^0,0,c
  3474   002672  EF3D  F013         	goto	u1981
  3475   002676  EF3F  F013         	goto	u1980
  3476   00267A                     u1981:
  3477   00267A  EF42  F013         	goto	l2968
  3478   00267E                     u1980:
  3479   00267E  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3480   002680  EF43  F013         	goto	l2970
  3481   002684                     l2968:
  3482   002684  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3483   002686                     l2970:
  3484   002686  90D8               	bcf	status,0,c
  3485   002688  3039               	rrcf	___fldiv@bexp^0,w,c
  3486   00268A  6E25               	movwf	(___fldiv@b+3)^0,c
  3487   00268C  EFF9  F011         	goto	l2884
  3488   002690                     l1292:
  3489   002690  0012               	return		;funcret
  3490   002692                     __end_of___fldiv:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function ___fladd *****************
  3494 ;; Defined at:
  3495 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  b               4    8[COMRAM] unsigned char 
  3498 ;;  a               4   12[COMRAM] unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  grs             1   23[COMRAM] unsigned char 
  3501 ;;  bexp            1   22[COMRAM] unsigned char 
  3502 ;;  aexp            1   21[COMRAM] unsigned char 
  3503 ;;  signs           1   20[COMRAM] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  4    8[COMRAM] unsigned char 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3513 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;Total ram usage:       16 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 6
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_rangeCalibrate
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text17
  3528   001A8E                     __ptext17:
  3529                           	callstack 0
  3530   001A8E                     ___fladd:
  3531                           	callstack 23
  3532   001A8E  500C               	movf	(___fladd@b+3)^0,w,c
  3533   001A90  0B80               	andlw	128
  3534   001A92  6E15               	movwf	___fladd@signs^0,c
  3535   001A94  500C               	movf	(___fladd@b+3)^0,w,c
  3536   001A96  240C               	addwf	(___fladd@b+3)^0,w,c
  3537   001A98  6E17               	movwf	___fladd@bexp^0,c
  3538   001A9A  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3539   001A9C  EF52  F00D         	goto	u2131
  3540   001AA0  EF54  F00D         	goto	u2130
  3541   001AA4                     u2131:
  3542   001AA4  EF55  F00D         	goto	l3150
  3543   001AA8                     u2130:
  3544   001AA8  8017               	bsf	___fladd@bexp^0,0,c
  3545   001AAA                     l3150:
  3546   001AAA  5017               	movf	___fladd@bexp^0,w,c
  3547   001AAC  B4D8               	btfsc	status,2,c
  3548   001AAE  EF5B  F00D         	goto	u2141
  3549   001AB2  EF5D  F00D         	goto	u2140
  3550   001AB6                     u2141:
  3551   001AB6  EF72  F00D         	goto	l3160
  3552   001ABA                     u2140:
  3553   001ABA  2817               	incf	___fladd@bexp^0,w,c
  3554   001ABC  A4D8               	btfss	status,2,c
  3555   001ABE  EF63  F00D         	goto	u2151
  3556   001AC2  EF65  F00D         	goto	u2150
  3557   001AC6                     u2151:
  3558   001AC6  EF6D  F00D         	goto	l3156
  3559   001ACA                     u2150:
  3560   001ACA  0E00               	movlw	0
  3561   001ACC  6E09               	movwf	___fladd@b^0,c
  3562   001ACE  0E00               	movlw	0
  3563   001AD0  6E0A               	movwf	(___fladd@b+1)^0,c
  3564   001AD2  0E00               	movlw	0
  3565   001AD4  6E0B               	movwf	(___fladd@b+2)^0,c
  3566   001AD6  0E00               	movlw	0
  3567   001AD8  6E0C               	movwf	(___fladd@b+3)^0,c
  3568   001ADA                     l3156:
  3569   001ADA  8E0B               	bsf	(___fladd@b+2)^0,7,c
  3570   001ADC  0E00               	movlw	0
  3571   001ADE  6E0C               	movwf	(___fladd@b+3)^0,c
  3572   001AE0  EF7A  F00D         	goto	l3162
  3573   001AE4                     l3160:
  3574   001AE4  0E00               	movlw	0
  3575   001AE6  6E09               	movwf	___fladd@b^0,c
  3576   001AE8  0E00               	movlw	0
  3577   001AEA  6E0A               	movwf	(___fladd@b+1)^0,c
  3578   001AEC  0E00               	movlw	0
  3579   001AEE  6E0B               	movwf	(___fladd@b+2)^0,c
  3580   001AF0  0E00               	movlw	0
  3581   001AF2  6E0C               	movwf	(___fladd@b+3)^0,c
  3582   001AF4                     l3162:
  3583   001AF4  5010               	movf	(___fladd@a+3)^0,w,c
  3584   001AF6  0B80               	andlw	128
  3585   001AF8  6E16               	movwf	___fladd@aexp^0,c
  3586   001AFA  5015               	movf	___fladd@signs^0,w,c
  3587   001AFC  1816               	xorwf	___fladd@aexp^0,w,c
  3588   001AFE  B4D8               	btfsc	status,2,c
  3589   001B00  EF84  F00D         	goto	u2161
  3590   001B04  EF86  F00D         	goto	u2160
  3591   001B08                     u2161:
  3592   001B08  EF87  F00D         	goto	l3168
  3593   001B0C                     u2160:
  3594   001B0C  8C15               	bsf	___fladd@signs^0,6,c
  3595   001B0E                     l3168:
  3596   001B0E  5010               	movf	(___fladd@a+3)^0,w,c
  3597   001B10  2410               	addwf	(___fladd@a+3)^0,w,c
  3598   001B12  6E16               	movwf	___fladd@aexp^0,c
  3599   001B14  AE0F               	btfss	(___fladd@a+2)^0,7,c
  3600   001B16  EF8F  F00D         	goto	u2171
  3601   001B1A  EF91  F00D         	goto	u2170
  3602   001B1E                     u2171:
  3603   001B1E  EF92  F00D         	goto	l3174
  3604   001B22                     u2170:
  3605   001B22  8016               	bsf	___fladd@aexp^0,0,c
  3606   001B24                     l3174:
  3607   001B24  5016               	movf	___fladd@aexp^0,w,c
  3608   001B26  B4D8               	btfsc	status,2,c
  3609   001B28  EF98  F00D         	goto	u2181
  3610   001B2C  EF9A  F00D         	goto	u2180
  3611   001B30                     u2181:
  3612   001B30  EFAF  F00D         	goto	l3184
  3613   001B34                     u2180:
  3614   001B34  2816               	incf	___fladd@aexp^0,w,c
  3615   001B36  A4D8               	btfss	status,2,c
  3616   001B38  EFA0  F00D         	goto	u2191
  3617   001B3C  EFA2  F00D         	goto	u2190
  3618   001B40                     u2191:
  3619   001B40  EFAA  F00D         	goto	l3180
  3620   001B44                     u2190:
  3621   001B44  0E00               	movlw	0
  3622   001B46  6E0D               	movwf	___fladd@a^0,c
  3623   001B48  0E00               	movlw	0
  3624   001B4A  6E0E               	movwf	(___fladd@a+1)^0,c
  3625   001B4C  0E00               	movlw	0
  3626   001B4E  6E0F               	movwf	(___fladd@a+2)^0,c
  3627   001B50  0E00               	movlw	0
  3628   001B52  6E10               	movwf	(___fladd@a+3)^0,c
  3629   001B54                     l3180:
  3630   001B54  8E0F               	bsf	(___fladd@a+2)^0,7,c
  3631   001B56  0E00               	movlw	0
  3632   001B58  6E10               	movwf	(___fladd@a+3)^0,c
  3633   001B5A  EFB7  F00D         	goto	l3186
  3634   001B5E                     l3184:
  3635   001B5E  0E00               	movlw	0
  3636   001B60  6E0D               	movwf	___fladd@a^0,c
  3637   001B62  0E00               	movlw	0
  3638   001B64  6E0E               	movwf	(___fladd@a+1)^0,c
  3639   001B66  0E00               	movlw	0
  3640   001B68  6E0F               	movwf	(___fladd@a+2)^0,c
  3641   001B6A  0E00               	movlw	0
  3642   001B6C  6E10               	movwf	(___fladd@a+3)^0,c
  3643   001B6E                     l3186:
  3644   001B6E  5017               	movf	___fladd@bexp^0,w,c
  3645   001B70  5C16               	subwf	___fladd@aexp^0,w,c
  3646   001B72  B0D8               	btfsc	status,0,c
  3647   001B74  EFBE  F00D         	goto	u2201
  3648   001B78  EFC0  F00D         	goto	u2200
  3649   001B7C                     u2201:
  3650   001B7C  EFE7  F00D         	goto	l3222
  3651   001B80                     u2200:
  3652   001B80  AC15               	btfss	___fladd@signs^0,6,c
  3653   001B82  EFC5  F00D         	goto	u2211
  3654   001B86  EFC7  F00D         	goto	u2210
  3655   001B8A                     u2211:
  3656   001B8A  EFC9  F00D         	goto	l3192
  3657   001B8E                     u2210:
  3658   001B8E  0E80               	movlw	128
  3659   001B90  1A15               	xorwf	___fladd@signs^0,f,c
  3660   001B92                     l3192:
  3661   001B92  C017  F018         	movff	___fladd@bexp,___fladd@grs
  3662   001B96  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3663   001B9A  C018  F016         	movff	___fladd@grs,___fladd@aexp
  3664   001B9E  C009  F018         	movff	___fladd@b,___fladd@grs
  3665   001BA2  C00D  F009         	movff	___fladd@a,___fladd@b
  3666   001BA6  C018  F00D         	movff	___fladd@grs,___fladd@a
  3667   001BAA  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  3668   001BAE  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  3669   001BB2  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  3670   001BB6  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  3671   001BBA  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  3672   001BBE  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  3673   001BC2  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  3674   001BC6  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  3675   001BCA  C018  F010         	movff	___fladd@grs,___fladd@a+3
  3676   001BCE                     l3222:
  3677   001BCE  0E00               	movlw	0
  3678   001BD0  6E18               	movwf	___fladd@grs^0,c
  3679   001BD2  5017               	movf	___fladd@bexp^0,w,c
  3680   001BD4  C016  F011         	movff	___fladd@aexp,??___fladd
  3681   001BD8  6A12               	clrf	(??___fladd+1)^0,c
  3682   001BDA  5E11               	subwf	??___fladd^0,f,c
  3683   001BDC  0E00               	movlw	0
  3684   001BDE  5A12               	subwfb	(??___fladd+1)^0,f,c
  3685   001BE0  BE12               	btfsc	(??___fladd+1)^0,7,c
  3686   001BE2  EFFC  F00D         	goto	u2221
  3687   001BE6  5012               	movf	(??___fladd+1)^0,w,c
  3688   001BE8  E109               	bnz	u2220
  3689   001BEA  0E1A               	movlw	26
  3690   001BEC  5C11               	subwf	??___fladd^0,w,c
  3691   001BEE  A0D8               	btfss	status,0,c
  3692   001BF0  EFFC  F00D         	goto	u2221
  3693   001BF4  EFFE  F00D         	goto	u2220
  3694   001BF8                     u2221:
  3695   001BF8  EF35  F00E         	goto	l1239
  3696   001BFC                     u2220:
  3697   001BFC  5009               	movf	___fladd@b^0,w,c
  3698   001BFE  100A               	iorwf	(___fladd@b+1)^0,w,c
  3699   001C00  100B               	iorwf	(___fladd@b+2)^0,w,c
  3700   001C02  100C               	iorwf	(___fladd@b+3)^0,w,c
  3701   001C04  A4D8               	btfss	status,2,c
  3702   001C06  EF07  F00E         	goto	u2231
  3703   001C0A  EF0A  F00E         	goto	u2230
  3704   001C0E                     u2231:
  3705   001C0E  0E01               	movlw	1
  3706   001C10  EF0B  F00E         	goto	u2240
  3707   001C14                     u2230:
  3708   001C14  0E00               	movlw	0
  3709   001C16                     u2240:
  3710   001C16  6E18               	movwf	___fladd@grs^0,c
  3711   001C18  0E00               	movlw	0
  3712   001C1A  6E09               	movwf	___fladd@b^0,c
  3713   001C1C  0E00               	movlw	0
  3714   001C1E  6E0A               	movwf	(___fladd@b+1)^0,c
  3715   001C20  0E00               	movlw	0
  3716   001C22  6E0B               	movwf	(___fladd@b+2)^0,c
  3717   001C24  0E00               	movlw	0
  3718   001C26  6E0C               	movwf	(___fladd@b+3)^0,c
  3719   001C28  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3720   001C2C  EF3E  F00E         	goto	l1238
  3721   001C30                     l1240:
  3722   001C30  A018               	btfss	___fladd@grs^0,0,c
  3723   001C32  EF1D  F00E         	goto	u2251
  3724   001C36  EF1F  F00E         	goto	u2250
  3725   001C3A                     u2251:
  3726   001C3A  EF25  F00E         	goto	l3234
  3727   001C3E                     u2250:
  3728   001C3E  90D8               	bcf	status,0,c
  3729   001C40  3018               	rrcf	___fladd@grs^0,w,c
  3730   001C42  0901               	iorlw	1
  3731   001C44  6E18               	movwf	___fladd@grs^0,c
  3732   001C46  EF27  F00E         	goto	l3236
  3733   001C4A                     l3234:
  3734   001C4A  90D8               	bcf	status,0,c
  3735   001C4C  3218               	rrcf	___fladd@grs^0,f,c
  3736   001C4E                     l3236:
  3737   001C4E  A009               	btfss	___fladd@b^0,0,c
  3738   001C50  EF2C  F00E         	goto	u2261
  3739   001C54  EF2E  F00E         	goto	u2260
  3740   001C58                     u2261:
  3741   001C58  EF2F  F00E         	goto	l3240
  3742   001C5C                     u2260:
  3743   001C5C  8E18               	bsf	___fladd@grs^0,7,c
  3744   001C5E                     l3240:
  3745   001C5E  340C               	rlcf	(___fladd@b+3)^0,w,c
  3746   001C60  320C               	rrcf	(___fladd@b+3)^0,f,c
  3747   001C62  320B               	rrcf	(___fladd@b+2)^0,f,c
  3748   001C64  320A               	rrcf	(___fladd@b+1)^0,f,c
  3749   001C66  3209               	rrcf	___fladd@b^0,f,c
  3750   001C68  2A17               	incf	___fladd@bexp^0,f,c
  3751   001C6A                     l1239:
  3752   001C6A  5016               	movf	___fladd@aexp^0,w,c
  3753   001C6C  5C17               	subwf	___fladd@bexp^0,w,c
  3754   001C6E  A0D8               	btfss	status,0,c
  3755   001C70  EF3C  F00E         	goto	u2271
  3756   001C74  EF3E  F00E         	goto	u2270
  3757   001C78                     u2271:
  3758   001C78  EF18  F00E         	goto	l1240
  3759   001C7C                     u2270:
  3760   001C7C                     l1238:
  3761   001C7C  BC15               	btfsc	___fladd@signs^0,6,c
  3762   001C7E  EF43  F00E         	goto	u2281
  3763   001C82  EF45  F00E         	goto	u2280
  3764   001C86                     u2281:
  3765   001C86  EF85  F00E         	goto	l3268
  3766   001C8A                     u2280:
  3767   001C8A  5017               	movf	___fladd@bexp^0,w,c
  3768   001C8C  A4D8               	btfss	status,2,c
  3769   001C8E  EF4B  F00E         	goto	u2291
  3770   001C92  EF4D  F00E         	goto	u2290
  3771   001C96                     u2291:
  3772   001C96  EF57  F00E         	goto	l3250
  3773   001C9A                     u2290:
  3774   001C9A  0E00               	movlw	0
  3775   001C9C  6E09               	movwf	?___fladd^0,c
  3776   001C9E  0E00               	movlw	0
  3777   001CA0  6E0A               	movwf	(?___fladd+1)^0,c
  3778   001CA2  0E00               	movlw	0
  3779   001CA4  6E0B               	movwf	(?___fladd+2)^0,c
  3780   001CA6  0E00               	movlw	0
  3781   001CA8  6E0C               	movwf	(?___fladd+3)^0,c
  3782   001CAA  EFA6  F00F         	goto	l1247
  3783   001CAE                     l3250:
  3784   001CAE  500D               	movf	___fladd@a^0,w,c
  3785   001CB0  2609               	addwf	___fladd@b^0,f,c
  3786   001CB2  500E               	movf	(___fladd@a+1)^0,w,c
  3787   001CB4  220A               	addwfc	(___fladd@b+1)^0,f,c
  3788   001CB6  500F               	movf	(___fladd@a+2)^0,w,c
  3789   001CB8  220B               	addwfc	(___fladd@b+2)^0,f,c
  3790   001CBA  5010               	movf	(___fladd@a+3)^0,w,c
  3791   001CBC  220C               	addwfc	(___fladd@b+3)^0,f,c
  3792   001CBE  A00C               	btfss	(___fladd@b+3)^0,0,c
  3793   001CC0  EF64  F00E         	goto	u2301
  3794   001CC4  EF66  F00E         	goto	u2300
  3795   001CC8                     u2301:
  3796   001CC8  EF12  F00F         	goto	l3304
  3797   001CCC                     u2300:
  3798   001CCC  A018               	btfss	___fladd@grs^0,0,c
  3799   001CCE  EF6B  F00E         	goto	u2311
  3800   001CD2  EF6D  F00E         	goto	u2310
  3801   001CD6                     u2311:
  3802   001CD6  EF73  F00E         	goto	l3258
  3803   001CDA                     u2310:
  3804   001CDA  90D8               	bcf	status,0,c
  3805   001CDC  3018               	rrcf	___fladd@grs^0,w,c
  3806   001CDE  0901               	iorlw	1
  3807   001CE0  6E18               	movwf	___fladd@grs^0,c
  3808   001CE2  EF75  F00E         	goto	l3260
  3809   001CE6                     l3258:
  3810   001CE6  90D8               	bcf	status,0,c
  3811   001CE8  3218               	rrcf	___fladd@grs^0,f,c
  3812   001CEA                     l3260:
  3813   001CEA  A009               	btfss	___fladd@b^0,0,c
  3814   001CEC  EF7A  F00E         	goto	u2321
  3815   001CF0  EF7C  F00E         	goto	u2320
  3816   001CF4                     u2321:
  3817   001CF4  EF7D  F00E         	goto	l3264
  3818   001CF8                     u2320:
  3819   001CF8  8E18               	bsf	___fladd@grs^0,7,c
  3820   001CFA                     l3264:
  3821   001CFA  340C               	rlcf	(___fladd@b+3)^0,w,c
  3822   001CFC  320C               	rrcf	(___fladd@b+3)^0,f,c
  3823   001CFE  320B               	rrcf	(___fladd@b+2)^0,f,c
  3824   001D00  320A               	rrcf	(___fladd@b+1)^0,f,c
  3825   001D02  3209               	rrcf	___fladd@b^0,f,c
  3826   001D04  2A17               	incf	___fladd@bexp^0,f,c
  3827   001D06  EF12  F00F         	goto	l3304
  3828   001D0A                     l3268:
  3829   001D0A  500D               	movf	___fladd@a^0,w,c
  3830   001D0C  5C09               	subwf	___fladd@b^0,w,c
  3831   001D0E  500E               	movf	(___fladd@a+1)^0,w,c
  3832   001D10  580A               	subwfb	(___fladd@b+1)^0,w,c
  3833   001D12  500F               	movf	(___fladd@a+2)^0,w,c
  3834   001D14  580B               	subwfb	(___fladd@b+2)^0,w,c
  3835   001D16  500C               	movf	(___fladd@b+3)^0,w,c
  3836   001D18  0A80               	xorlw	128
  3837   001D1A  6E11               	movwf	??___fladd^0,c
  3838   001D1C  5010               	movf	(___fladd@a+3)^0,w,c
  3839   001D1E  0A80               	xorlw	128
  3840   001D20  5811               	subwfb	??___fladd^0,w,c
  3841   001D22  B0D8               	btfsc	status,0,c
  3842   001D24  EF96  F00E         	goto	u2331
  3843   001D28  EF98  F00E         	goto	u2330
  3844   001D2C                     u2331:
  3845   001D2C  EFC3  F00E         	goto	l3278
  3846   001D30                     u2330:
  3847   001D30  5009               	movf	___fladd@b^0,w,c
  3848   001D32  5C0D               	subwf	___fladd@a^0,w,c
  3849   001D34  6E11               	movwf	??___fladd^0,c
  3850   001D36  500A               	movf	(___fladd@b+1)^0,w,c
  3851   001D38  580E               	subwfb	(___fladd@a+1)^0,w,c
  3852   001D3A  6E12               	movwf	(??___fladd+1)^0,c
  3853   001D3C  500B               	movf	(___fladd@b+2)^0,w,c
  3854   001D3E  580F               	subwfb	(___fladd@a+2)^0,w,c
  3855   001D40  6E13               	movwf	(??___fladd+2)^0,c
  3856   001D42  500C               	movf	(___fladd@b+3)^0,w,c
  3857   001D44  5810               	subwfb	(___fladd@a+3)^0,w,c
  3858   001D46  6E14               	movwf	(??___fladd+3)^0,c
  3859   001D48  0EFF               	movlw	255
  3860   001D4A  2411               	addwf	??___fladd^0,w,c
  3861   001D4C  6E09               	movwf	___fladd@b^0,c
  3862   001D4E  0EFF               	movlw	255
  3863   001D50  2012               	addwfc	(??___fladd+1)^0,w,c
  3864   001D52  6E0A               	movwf	(___fladd@b+1)^0,c
  3865   001D54  0EFF               	movlw	255
  3866   001D56  2013               	addwfc	(??___fladd+2)^0,w,c
  3867   001D58  6E0B               	movwf	(___fladd@b+2)^0,c
  3868   001D5A  0EFF               	movlw	255
  3869   001D5C  2014               	addwfc	(??___fladd+3)^0,w,c
  3870   001D5E  6E0C               	movwf	(___fladd@b+3)^0,c
  3871   001D60  0E80               	movlw	128
  3872   001D62  1A15               	xorwf	___fladd@signs^0,f,c
  3873   001D64  6C18               	negf	___fladd@grs^0,c
  3874   001D66  5018               	movf	___fladd@grs^0,w,c
  3875   001D68  A4D8               	btfss	status,2,c
  3876   001D6A  EFB9  F00E         	goto	u2341
  3877   001D6E  EFBB  F00E         	goto	u2340
  3878   001D72                     u2341:
  3879   001D72  EFCB  F00E         	goto	l1255
  3880   001D76                     u2340:
  3881   001D76  0E01               	movlw	1
  3882   001D78  2609               	addwf	___fladd@b^0,f,c
  3883   001D7A  0E00               	movlw	0
  3884   001D7C  220A               	addwfc	(___fladd@b+1)^0,f,c
  3885   001D7E  220B               	addwfc	(___fladd@b+2)^0,f,c
  3886   001D80  220C               	addwfc	(___fladd@b+3)^0,f,c
  3887   001D82  EFCB  F00E         	goto	l1255
  3888   001D86                     l3278:
  3889   001D86  500D               	movf	___fladd@a^0,w,c
  3890   001D88  5E09               	subwf	___fladd@b^0,f,c
  3891   001D8A  500E               	movf	(___fladd@a+1)^0,w,c
  3892   001D8C  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  3893   001D8E  500F               	movf	(___fladd@a+2)^0,w,c
  3894   001D90  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  3895   001D92  5010               	movf	(___fladd@a+3)^0,w,c
  3896   001D94  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  3897   001D96                     l1255:
  3898   001D96  5009               	movf	___fladd@b^0,w,c
  3899   001D98  100A               	iorwf	(___fladd@b+1)^0,w,c
  3900   001D9A  100B               	iorwf	(___fladd@b+2)^0,w,c
  3901   001D9C  100C               	iorwf	(___fladd@b+3)^0,w,c
  3902   001D9E  A4D8               	btfss	status,2,c
  3903   001DA0  EFD4  F00E         	goto	u2351
  3904   001DA4  EFD6  F00E         	goto	u2350
  3905   001DA8                     u2351:
  3906   001DA8  EF0B  F00F         	goto	l3302
  3907   001DAC                     u2350:
  3908   001DAC  5018               	movf	___fladd@grs^0,w,c
  3909   001DAE  A4D8               	btfss	status,2,c
  3910   001DB0  EFDC  F00E         	goto	u2361
  3911   001DB4  EFDE  F00E         	goto	u2360
  3912   001DB8                     u2361:
  3913   001DB8  EF0B  F00F         	goto	l3302
  3914   001DBC                     u2360:
  3915   001DBC  0E00               	movlw	0
  3916   001DBE  6E09               	movwf	?___fladd^0,c
  3917   001DC0  0E00               	movlw	0
  3918   001DC2  6E0A               	movwf	(?___fladd+1)^0,c
  3919   001DC4  0E00               	movlw	0
  3920   001DC6  6E0B               	movwf	(?___fladd+2)^0,c
  3921   001DC8  0E00               	movlw	0
  3922   001DCA  6E0C               	movwf	(?___fladd+3)^0,c
  3923   001DCC  EFA6  F00F         	goto	l1247
  3924   001DD0                     l3286:
  3925   001DD0  90D8               	bcf	status,0,c
  3926   001DD2  3609               	rlcf	___fladd@b^0,f,c
  3927   001DD4  360A               	rlcf	(___fladd@b+1)^0,f,c
  3928   001DD6  360B               	rlcf	(___fladd@b+2)^0,f,c
  3929   001DD8  360C               	rlcf	(___fladd@b+3)^0,f,c
  3930   001DDA  AE18               	btfss	___fladd@grs^0,7,c
  3931   001DDC  EFF2  F00E         	goto	u2371
  3932   001DE0  EFF4  F00E         	goto	u2370
  3933   001DE4                     u2371:
  3934   001DE4  EFF5  F00E         	goto	l3292
  3935   001DE8                     u2370:
  3936   001DE8  8009               	bsf	___fladd@b^0,0,c
  3937   001DEA                     l3292:
  3938   001DEA  A018               	btfss	___fladd@grs^0,0,c
  3939   001DEC  EFFA  F00E         	goto	u2381
  3940   001DF0  EFFC  F00E         	goto	u2380
  3941   001DF4                     u2381:
  3942   001DF4  EF00  F00F         	goto	l3296
  3943   001DF8                     u2380:
  3944   001DF8  80D8               	bsf	status,0,c
  3945   001DFA  3618               	rlcf	___fladd@grs^0,f,c
  3946   001DFC  EF02  F00F         	goto	l3298
  3947   001E00                     l3296:
  3948   001E00  90D8               	bcf	status,0,c
  3949   001E02  3618               	rlcf	___fladd@grs^0,f,c
  3950   001E04                     l3298:
  3951   001E04  5017               	movf	___fladd@bexp^0,w,c
  3952   001E06  B4D8               	btfsc	status,2,c
  3953   001E08  EF08  F00F         	goto	u2391
  3954   001E0C  EF0A  F00F         	goto	u2390
  3955   001E10                     u2391:
  3956   001E10  EF0B  F00F         	goto	l3302
  3957   001E14                     u2390:
  3958   001E14  0617               	decf	___fladd@bexp^0,f,c
  3959   001E16                     l3302:
  3960   001E16  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3961   001E18  EF10  F00F         	goto	u2401
  3962   001E1C  EF12  F00F         	goto	u2400
  3963   001E20                     u2401:
  3964   001E20  EFE8  F00E         	goto	l3286
  3965   001E24                     u2400:
  3966   001E24                     l3304:
  3967   001E24  0E00               	movlw	0
  3968   001E26  6E16               	movwf	___fladd@aexp^0,c
  3969   001E28  AE18               	btfss	___fladd@grs^0,7,c
  3970   001E2A  EF19  F00F         	goto	u2411
  3971   001E2E  EF1B  F00F         	goto	u2410
  3972   001E32                     u2411:
  3973   001E32  EF33  F00F         	goto	l1264
  3974   001E36                     u2410:
  3975   001E36  C018  F011         	movff	___fladd@grs,??___fladd
  3976   001E3A  0E7F               	movlw	127
  3977   001E3C  1611               	andwf	??___fladd^0,f,c
  3978   001E3E  B4D8               	btfsc	status,2,c
  3979   001E40  EF24  F00F         	goto	u2421
  3980   001E44  EF26  F00F         	goto	u2420
  3981   001E48                     u2421:
  3982   001E48  EF2A  F00F         	goto	l1265
  3983   001E4C                     u2420:
  3984   001E4C                     l3310:
  3985   001E4C  0E01               	movlw	1
  3986   001E4E  6E16               	movwf	___fladd@aexp^0,c
  3987   001E50  EF33  F00F         	goto	l1264
  3988   001E54                     l1265:
  3989   001E54  A009               	btfss	___fladd@b^0,0,c
  3990   001E56  EF2F  F00F         	goto	u2431
  3991   001E5A  EF31  F00F         	goto	u2430
  3992   001E5E                     u2431:
  3993   001E5E  EF33  F00F         	goto	l1264
  3994   001E62                     u2430:
  3995   001E62  EF26  F00F         	goto	l3310
  3996   001E66                     l1264:
  3997   001E66  5016               	movf	___fladd@aexp^0,w,c
  3998   001E68  B4D8               	btfsc	status,2,c
  3999   001E6A  EF39  F00F         	goto	u2441
  4000   001E6E  EF3B  F00F         	goto	u2440
  4001   001E72                     u2441:
  4002   001E72  EF66  F00F         	goto	l3322
  4003   001E76                     u2440:
  4004   001E76  0E01               	movlw	1
  4005   001E78  2609               	addwf	___fladd@b^0,f,c
  4006   001E7A  0E00               	movlw	0
  4007   001E7C  220A               	addwfc	(___fladd@b+1)^0,f,c
  4008   001E7E  220B               	addwfc	(___fladd@b+2)^0,f,c
  4009   001E80  220C               	addwfc	(___fladd@b+3)^0,f,c
  4010   001E82  A00C               	btfss	(___fladd@b+3)^0,0,c
  4011   001E84  EF46  F00F         	goto	u2451
  4012   001E88  EF48  F00F         	goto	u2450
  4013   001E8C                     u2451:
  4014   001E8C  EF66  F00F         	goto	l3322
  4015   001E90                     u2450:
  4016   001E90  C009  F011         	movff	___fladd@b,??___fladd
  4017   001E94  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  4018   001E98  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  4019   001E9C  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  4020   001EA0  3414               	rlcf	(??___fladd+3)^0,w,c
  4021   001EA2  3214               	rrcf	(??___fladd+3)^0,f,c
  4022   001EA4  3213               	rrcf	(??___fladd+2)^0,f,c
  4023   001EA6  3212               	rrcf	(??___fladd+1)^0,f,c
  4024   001EA8  3211               	rrcf	??___fladd^0,f,c
  4025   001EAA  C011  F009         	movff	??___fladd,___fladd@b
  4026   001EAE  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  4027   001EB2  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  4028   001EB6  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  4029   001EBA  2817               	incf	___fladd@bexp^0,w,c
  4030   001EBC  B4D8               	btfsc	status,2,c
  4031   001EBE  EF63  F00F         	goto	u2461
  4032   001EC2  EF65  F00F         	goto	u2460
  4033   001EC6                     u2461:
  4034   001EC6  EF66  F00F         	goto	l3322
  4035   001ECA                     u2460:
  4036   001ECA  2A17               	incf	___fladd@bexp^0,f,c
  4037   001ECC                     l3322:
  4038   001ECC  2817               	incf	___fladd@bexp^0,w,c
  4039   001ECE  B4D8               	btfsc	status,2,c
  4040   001ED0  EF6C  F00F         	goto	u2471
  4041   001ED4  EF6E  F00F         	goto	u2470
  4042   001ED8                     u2471:
  4043   001ED8  EF76  F00F         	goto	l3326
  4044   001EDC                     u2470:
  4045   001EDC  5017               	movf	___fladd@bexp^0,w,c
  4046   001EDE  A4D8               	btfss	status,2,c
  4047   001EE0  EF74  F00F         	goto	u2481
  4048   001EE4  EF76  F00F         	goto	u2480
  4049   001EE8                     u2481:
  4050   001EE8  EF88  F00F         	goto	l3330
  4051   001EEC                     u2480:
  4052   001EEC                     l3326:
  4053   001EEC  0E00               	movlw	0
  4054   001EEE  6E09               	movwf	___fladd@b^0,c
  4055   001EF0  0E00               	movlw	0
  4056   001EF2  6E0A               	movwf	(___fladd@b+1)^0,c
  4057   001EF4  0E00               	movlw	0
  4058   001EF6  6E0B               	movwf	(___fladd@b+2)^0,c
  4059   001EF8  0E00               	movlw	0
  4060   001EFA  6E0C               	movwf	(___fladd@b+3)^0,c
  4061   001EFC  5017               	movf	___fladd@bexp^0,w,c
  4062   001EFE  A4D8               	btfss	status,2,c
  4063   001F00  EF84  F00F         	goto	u2491
  4064   001F04  EF86  F00F         	goto	u2490
  4065   001F08                     u2491:
  4066   001F08  EF88  F00F         	goto	l3330
  4067   001F0C                     u2490:
  4068   001F0C  0E00               	movlw	0
  4069   001F0E  6E15               	movwf	___fladd@signs^0,c
  4070   001F10                     l3330:
  4071   001F10  A017               	btfss	___fladd@bexp^0,0,c
  4072   001F12  EF8D  F00F         	goto	u2501
  4073   001F16  EF8F  F00F         	goto	u2500
  4074   001F1A                     u2501:
  4075   001F1A  EF92  F00F         	goto	l3334
  4076   001F1E                     u2500:
  4077   001F1E  8E0B               	bsf	(___fladd@b+2)^0,7,c
  4078   001F20  EF93  F00F         	goto	l3336
  4079   001F24                     l3334:
  4080   001F24  9E0B               	bcf	(___fladd@b+2)^0,7,c
  4081   001F26                     l3336:
  4082   001F26  90D8               	bcf	status,0,c
  4083   001F28  3017               	rrcf	___fladd@bexp^0,w,c
  4084   001F2A  6E0C               	movwf	(___fladd@b+3)^0,c
  4085   001F2C  AE15               	btfss	___fladd@signs^0,7,c
  4086   001F2E  EF9B  F00F         	goto	u2511
  4087   001F32  EF9D  F00F         	goto	u2510
  4088   001F36                     u2511:
  4089   001F36  EF9E  F00F         	goto	l3342
  4090   001F3A                     u2510:
  4091   001F3A  8E0C               	bsf	(___fladd@b+3)^0,7,c
  4092   001F3C                     l3342:
  4093   001F3C  C009  F009         	movff	___fladd@b,?___fladd
  4094   001F40  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  4095   001F44  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  4096   001F48  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  4097   001F4C                     l1247:
  4098   001F4C  0012               	return		;funcret
  4099   001F4E                     __end_of___fladd:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _persistence_register *****************
  4103 ;; Defined at:
  4104 ;;		line 46 in file "interrupts.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 9
  4125 ;; This function calls:
  4126 ;;		_color_writetoaddr
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text18
  4133   003C10                     __ptext18:
  4134                           	callstack 0
  4135   003C10                     _persistence_register:
  4136                           	callstack 21
  4137   003C10                     
  4138                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  4139   003C10  0E02               	movlw	2
  4140   003C12  6E0B               	movwf	color_writetoaddr@value^0,c
  4141   003C14  0E0C               	movlw	12
  4142   003C16  ECBC  F01D         	call	_color_writetoaddr
  4143   003C1A  0012               	return		;funcret
  4144   003C1C                     __end_of_persistence_register:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _motor_retrace *****************
  4148 ;; Defined at:
  4149 ;;		line 293 in file "color.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  4152 ;;		 -> buggy_path(15), 
  4153 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4154 ;;		 -> main@mL(9), 
  4155 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4156 ;;		 -> main@mR(9), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;Total ram usage:        9 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 10
  4175 ;; This function calls:
  4176 ;;		_fullSpeedAhead
  4177 ;;		_norm_stop
  4178 ;;		_turnLeft
  4179 ;;		_turnPrep
  4180 ;;		_turnRight
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text19
  4187   001F4E                     __ptext19:
  4188                           	callstack 0
  4189   001F4E                     _motor_retrace:
  4190                           	callstack 20
  4191   001F4E                     
  4192                           ;color.c: 294:     if (buggy_path[buggy_step - 2] == 1) {
  4193   001F4E  5051               	movf	_buggy_step^0,w,c
  4194   001F50  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4195   001F52  6E2D               	movwf	??_motor_retrace^0,c
  4196   001F54  5052               	movf	(_buggy_step+1)^0,w,c
  4197   001F56  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4198   001F58  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4199   001F5A  0EFE               	movlw	254
  4200   001F5C  242D               	addwf	??_motor_retrace^0,w,c
  4201   001F5E  6ED9               	movwf	fsr2l,c
  4202   001F60  0EFF               	movlw	255
  4203   001F62  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4204   001F64  6EDA               	movwf	fsr2h,c
  4205   001F66  04DE               	decf	postinc2,w,c
  4206   001F68  A4D8               	btfss	status,2,c
  4207   001F6A  EFB9  F00F         	goto	u2981
  4208   001F6E  EFBB  F00F         	goto	u2980
  4209   001F72                     u2981:
  4210   001F72  EFDD  F00F         	goto	l3626
  4211   001F76                     u2980:
  4212   001F76                     
  4213                           ;color.c: 295:         turnPrep(mL, mR);
  4214   001F76  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4215   001F7A  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4216   001F7E  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4217   001F82  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4218   001F86  ECE3  F01B         	call	_turnPrep	;wreg free
  4219                           
  4220                           ;color.c: 296:         turnLeft(mL, mR);
  4221   001F8A  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4222   001F8E  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4223   001F92  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4224   001F96  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4225   001F9A  EC40  F01B         	call	_turnLeft	;wreg free
  4226   001F9E                     
  4227                           ;color.c: 297:         _delay((unsigned long)((215)*(64000000/4000.0)));
  4228   001F9E  0E12               	movlw	18
  4229   001FA0  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4230   001FA2  0E74               	movlw	116
  4231   001FA4  6E2D               	movwf	??_motor_retrace^0,c
  4232   001FA6  0E7A               	movlw	122
  4233   001FA8                     u3407:
  4234   001FA8  2EE8               	decfsz	wreg,f,c
  4235   001FAA  D7FE               	bra	u3407
  4236   001FAC  2E2D               	decfsz	??_motor_retrace^0,f,c
  4237   001FAE  D7FC               	bra	u3407
  4238   001FB0  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4239   001FB2  D7FA               	bra	u3407
  4240   001FB4  D000               	nop2	
  4241                           
  4242                           ;color.c: 299:     } else if (buggy_path[buggy_step - 2] == 2) {
  4243   001FB6  EF7B  F011         	goto	l197
  4244   001FBA                     l3626:
  4245   001FBA  5051               	movf	_buggy_step^0,w,c
  4246   001FBC  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4247   001FBE  6E2D               	movwf	??_motor_retrace^0,c
  4248   001FC0  5052               	movf	(_buggy_step+1)^0,w,c
  4249   001FC2  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4250   001FC4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4251   001FC6  0EFE               	movlw	254
  4252   001FC8  242D               	addwf	??_motor_retrace^0,w,c
  4253   001FCA  6ED9               	movwf	fsr2l,c
  4254   001FCC  0EFF               	movlw	255
  4255   001FCE  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4256   001FD0  6EDA               	movwf	fsr2h,c
  4257   001FD2  0E02               	movlw	2
  4258   001FD4  18DE               	xorwf	postinc2,w,c
  4259   001FD6  A4D8               	btfss	status,2,c
  4260   001FD8  EFF0  F00F         	goto	u2991
  4261   001FDC  EFF2  F00F         	goto	u2990
  4262   001FE0                     u2991:
  4263   001FE0  EF13  F010         	goto	l3632
  4264   001FE4                     u2990:
  4265   001FE4                     
  4266                           ;color.c: 300:         turnPrep(mL, mR);
  4267   001FE4  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4268   001FE8  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4269   001FEC  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4270   001FF0  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4271   001FF4  ECE3  F01B         	call	_turnPrep	;wreg free
  4272                           
  4273                           ;color.c: 301:         turnRight(mL, mR);
  4274   001FF8  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4275   001FFC  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4276   002000  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4277   002004  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4278   002008  EC07  F01B         	call	_turnRight	;wreg free
  4279   00200C                     
  4280                           ;color.c: 302:         _delay((unsigned long)((230)*(64000000/4000.0)));
  4281   00200C  0E13               	movlw	19
  4282   00200E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4283   002010  0EAC               	movlw	172
  4284   002012  6E2D               	movwf	??_motor_retrace^0,c
  4285   002014  0E2A               	movlw	42
  4286   002016                     u3417:
  4287   002016  2EE8               	decfsz	wreg,f,c
  4288   002018  D7FE               	bra	u3417
  4289   00201A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4290   00201C  D7FC               	bra	u3417
  4291   00201E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4292   002020  D7FA               	bra	u3417
  4293                           
  4294                           ;color.c: 304:     } else if (buggy_path[buggy_step - 2] == 3) {
  4295   002022  EF7B  F011         	goto	l197
  4296   002026                     l3632:
  4297   002026  5051               	movf	_buggy_step^0,w,c
  4298   002028  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4299   00202A  6E2D               	movwf	??_motor_retrace^0,c
  4300   00202C  5052               	movf	(_buggy_step+1)^0,w,c
  4301   00202E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4302   002030  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4303   002032  0EFE               	movlw	254
  4304   002034  242D               	addwf	??_motor_retrace^0,w,c
  4305   002036  6ED9               	movwf	fsr2l,c
  4306   002038  0EFF               	movlw	255
  4307   00203A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4308   00203C  6EDA               	movwf	fsr2h,c
  4309   00203E  0E03               	movlw	3
  4310   002040  18DE               	xorwf	postinc2,w,c
  4311   002042  A4D8               	btfss	status,2,c
  4312   002044  EF26  F010         	goto	u3001
  4313   002048  EF28  F010         	goto	u3000
  4314   00204C                     u3001:
  4315   00204C  EF49  F010         	goto	l3638
  4316   002050                     u3000:
  4317   002050                     
  4318                           ;color.c: 305:         turnPrep(mL, mR);
  4319   002050  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4320   002054  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4321   002058  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4322   00205C  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4323   002060  ECE3  F01B         	call	_turnPrep	;wreg free
  4324                           
  4325                           ;color.c: 306:         turnRight(mL, mR);
  4326   002064  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4327   002068  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4328   00206C  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4329   002070  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4330   002074  EC07  F01B         	call	_turnRight	;wreg free
  4331   002078                     
  4332                           ;color.c: 307:         _delay((unsigned long)((415)*(64000000/4000.0)));
  4333   002078  0E22               	movlw	34
  4334   00207A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4335   00207C  0EB0               	movlw	176
  4336   00207E  6E2D               	movwf	??_motor_retrace^0,c
  4337   002080  0E48               	movlw	72
  4338   002082                     u3427:
  4339   002082  2EE8               	decfsz	wreg,f,c
  4340   002084  D7FE               	bra	u3427
  4341   002086  2E2D               	decfsz	??_motor_retrace^0,f,c
  4342   002088  D7FC               	bra	u3427
  4343   00208A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4344   00208C  D7FA               	bra	u3427
  4345                           
  4346                           ;color.c: 309:     } else if (buggy_path[buggy_step - 2] == 4) {
  4347   00208E  EF7B  F011         	goto	l197
  4348   002092                     l3638:
  4349   002092  5051               	movf	_buggy_step^0,w,c
  4350   002094  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4351   002096  6E2D               	movwf	??_motor_retrace^0,c
  4352   002098  5052               	movf	(_buggy_step+1)^0,w,c
  4353   00209A  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4354   00209C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4355   00209E  0EFE               	movlw	254
  4356   0020A0  242D               	addwf	??_motor_retrace^0,w,c
  4357   0020A2  6ED9               	movwf	fsr2l,c
  4358   0020A4  0EFF               	movlw	255
  4359   0020A6  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4360   0020A8  6EDA               	movwf	fsr2h,c
  4361   0020AA  0E04               	movlw	4
  4362   0020AC  18DE               	xorwf	postinc2,w,c
  4363   0020AE  A4D8               	btfss	status,2,c
  4364   0020B0  EF5C  F010         	goto	u3011
  4365   0020B4  EF5E  F010         	goto	u3010
  4366   0020B8                     u3011:
  4367   0020B8  EFAB  F010         	goto	l3650
  4368   0020BC                     u3010:
  4369   0020BC                     
  4370                           ;color.c: 310:         turnPrep(mL, mR);
  4371   0020BC  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4372   0020C0  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4373   0020C4  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4374   0020C8  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4375   0020CC  ECE3  F01B         	call	_turnPrep	;wreg free
  4376                           
  4377                           ;color.c: 311:         turnLeft(mL, mR);
  4378   0020D0  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4379   0020D4  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4380   0020D8  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4381   0020DC  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4382   0020E0  EC40  F01B         	call	_turnLeft	;wreg free
  4383   0020E4                     
  4384                           ;color.c: 312:         _delay((unsigned long)((215)*(64000000/4000.0)));
  4385   0020E4  0E12               	movlw	18
  4386   0020E6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4387   0020E8  0E74               	movlw	116
  4388   0020EA  6E2D               	movwf	??_motor_retrace^0,c
  4389   0020EC  0E7A               	movlw	122
  4390   0020EE                     u3437:
  4391   0020EE  2EE8               	decfsz	wreg,f,c
  4392   0020F0  D7FE               	bra	u3437
  4393   0020F2  2E2D               	decfsz	??_motor_retrace^0,f,c
  4394   0020F4  D7FC               	bra	u3437
  4395   0020F6  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4396   0020F8  D7FA               	bra	u3437
  4397   0020FA  D000               	nop2	
  4398   0020FC                     
  4399                           ;color.c: 313:         norm_stop(mL, mR);
  4400   0020FC  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4401   002100  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4402   002104  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4403   002108  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4404   00210C  EC10  F01D         	call	_norm_stop	;wreg free
  4405                           
  4406                           ;color.c: 314:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4407   002110  0E09               	movlw	9
  4408   002112  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4409   002114  0E1E               	movlw	30
  4410   002116  6E2D               	movwf	??_motor_retrace^0,c
  4411   002118  0EE4               	movlw	228
  4412   00211A                     u3447:
  4413   00211A  2EE8               	decfsz	wreg,f,c
  4414   00211C  D7FE               	bra	u3447
  4415   00211E  2E2D               	decfsz	??_motor_retrace^0,f,c
  4416   002120  D7FC               	bra	u3447
  4417   002122  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4418   002124  D7FA               	bra	u3447
  4419   002126  D000               	nop2	
  4420   002128                     
  4421                           ;color.c: 315:         fullSpeedAhead(mL, mR);
  4422   002128  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4423   00212C  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4424   002130  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4425   002134  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4426   002138  ECB5  F019         	call	_fullSpeedAhead	;wreg free
  4427   00213C                     
  4428                           ;color.c: 316:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  4429   00213C  0E62               	movlw	98
  4430   00213E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4431   002140  0E67               	movlw	103
  4432   002142  6E2D               	movwf	??_motor_retrace^0,c
  4433   002144  0ECE               	movlw	206
  4434   002146                     u3457:
  4435   002146  2EE8               	decfsz	wreg,f,c
  4436   002148  D7FE               	bra	u3457
  4437   00214A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4438   00214C  D7FC               	bra	u3457
  4439   00214E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4440   002150  D7FA               	bra	u3457
  4441                           
  4442                           ;color.c: 318:     } else if (buggy_path[buggy_step - 2] == 5) {
  4443   002152  EF7B  F011         	goto	l197
  4444   002156                     l3650:
  4445   002156  5051               	movf	_buggy_step^0,w,c
  4446   002158  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4447   00215A  6E2D               	movwf	??_motor_retrace^0,c
  4448   00215C  5052               	movf	(_buggy_step+1)^0,w,c
  4449   00215E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4450   002160  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4451   002162  0EFE               	movlw	254
  4452   002164  242D               	addwf	??_motor_retrace^0,w,c
  4453   002166  6ED9               	movwf	fsr2l,c
  4454   002168  0EFF               	movlw	255
  4455   00216A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4456   00216C  6EDA               	movwf	fsr2h,c
  4457   00216E  0E05               	movlw	5
  4458   002170  18DE               	xorwf	postinc2,w,c
  4459   002172  A4D8               	btfss	status,2,c
  4460   002174  EFBE  F010         	goto	u3021
  4461   002178  EFC0  F010         	goto	u3020
  4462   00217C                     u3021:
  4463   00217C  EF19  F011         	goto	l3664
  4464   002180                     u3020:
  4465   002180                     
  4466                           ;color.c: 319:         norm_stop(mL, mR);
  4467   002180  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4468   002184  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4469   002188  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4470   00218C  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4471   002190  EC10  F01D         	call	_norm_stop	;wreg free
  4472   002194                     
  4473                           ;color.c: 320:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4474   002194  0E09               	movlw	9
  4475   002196  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4476   002198  0E1E               	movlw	30
  4477   00219A  6E2D               	movwf	??_motor_retrace^0,c
  4478   00219C  0EE4               	movlw	228
  4479   00219E                     u3467:
  4480   00219E  2EE8               	decfsz	wreg,f,c
  4481   0021A0  D7FE               	bra	u3467
  4482   0021A2  2E2D               	decfsz	??_motor_retrace^0,f,c
  4483   0021A4  D7FC               	bra	u3467
  4484   0021A6  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4485   0021A8  D7FA               	bra	u3467
  4486   0021AA  D000               	nop2	
  4487   0021AC                     
  4488                           ;color.c: 321:         turnRight(mL, mR);
  4489   0021AC  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4490   0021B0  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4491   0021B4  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4492   0021B8  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4493   0021BC  EC07  F01B         	call	_turnRight	;wreg free
  4494                           
  4495                           ;color.c: 322:         _delay((unsigned long)((230)*(64000000/4000.0)));
  4496   0021C0  0E13               	movlw	19
  4497   0021C2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4498   0021C4  0EAC               	movlw	172
  4499   0021C6  6E2D               	movwf	??_motor_retrace^0,c
  4500   0021C8  0E2A               	movlw	42
  4501   0021CA                     u3477:
  4502   0021CA  2EE8               	decfsz	wreg,f,c
  4503   0021CC  D7FE               	bra	u3477
  4504   0021CE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4505   0021D0  D7FC               	bra	u3477
  4506   0021D2  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4507   0021D4  D7FA               	bra	u3477
  4508   0021D6                     
  4509                           ;color.c: 323:         norm_stop(mL, mR);
  4510   0021D6  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4511   0021DA  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4512   0021DE  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4513   0021E2  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4514   0021E6  EC10  F01D         	call	_norm_stop	;wreg free
  4515   0021EA                     
  4516                           ;color.c: 324:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4517   0021EA  0E09               	movlw	9
  4518   0021EC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4519   0021EE  0E1E               	movlw	30
  4520   0021F0  6E2D               	movwf	??_motor_retrace^0,c
  4521   0021F2  0EE4               	movlw	228
  4522   0021F4                     u3487:
  4523   0021F4  2EE8               	decfsz	wreg,f,c
  4524   0021F6  D7FE               	bra	u3487
  4525   0021F8  2E2D               	decfsz	??_motor_retrace^0,f,c
  4526   0021FA  D7FC               	bra	u3487
  4527   0021FC  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4528   0021FE  D7FA               	bra	u3487
  4529   002200  D000               	nop2	
  4530                           
  4531                           ;color.c: 325:         fullSpeedAhead(mL, mR);
  4532   002202  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4533   002206  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4534   00220A  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4535   00220E  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4536   002212  ECB5  F019         	call	_fullSpeedAhead	;wreg free
  4537   002216                     
  4538                           ;color.c: 326:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  4539   002216  0EA3               	movlw	163
  4540   002218  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4541   00221A  0E57               	movlw	87
  4542   00221C  6E2D               	movwf	??_motor_retrace^0,c
  4543   00221E  0E02               	movlw	2
  4544   002220                     u3497:
  4545   002220  2EE8               	decfsz	wreg,f,c
  4546   002222  D7FE               	bra	u3497
  4547   002224  2E2D               	decfsz	??_motor_retrace^0,f,c
  4548   002226  D7FC               	bra	u3497
  4549   002228  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4550   00222A  D7FA               	bra	u3497
  4551   00222C  D000               	nop2	
  4552                           
  4553                           ;color.c: 328:     } else if (buggy_path[buggy_step - 2] == 6) {
  4554   00222E  EF7B  F011         	goto	l197
  4555   002232                     l3664:
  4556   002232  5051               	movf	_buggy_step^0,w,c
  4557   002234  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4558   002236  6E2D               	movwf	??_motor_retrace^0,c
  4559   002238  5052               	movf	(_buggy_step+1)^0,w,c
  4560   00223A  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4561   00223C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4562   00223E  0EFE               	movlw	254
  4563   002240  242D               	addwf	??_motor_retrace^0,w,c
  4564   002242  6ED9               	movwf	fsr2l,c
  4565   002244  0EFF               	movlw	255
  4566   002246  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4567   002248  6EDA               	movwf	fsr2h,c
  4568   00224A  0E06               	movlw	6
  4569   00224C  18DE               	xorwf	postinc2,w,c
  4570   00224E  A4D8               	btfss	status,2,c
  4571   002250  EF2C  F011         	goto	u3031
  4572   002254  EF2E  F011         	goto	u3030
  4573   002258                     u3031:
  4574   002258  EF50  F011         	goto	l3670
  4575   00225C                     u3030:
  4576   00225C                     
  4577                           ;color.c: 329:         turnPrep(mL, mR);
  4578   00225C  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4579   002260  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4580   002264  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4581   002268  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4582   00226C  ECE3  F01B         	call	_turnPrep	;wreg free
  4583                           
  4584                           ;color.c: 330:         turnLeft(mL, mR);
  4585   002270  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4586   002274  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4587   002278  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4588   00227C  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4589   002280  EC40  F01B         	call	_turnLeft	;wreg free
  4590   002284                     l3668:
  4591                           
  4592                           ;color.c: 331:         _delay((unsigned long)((350)*(64000000/4000.0)));
  4593   002284  0E1D               	movlw	29
  4594   002286  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4595   002288  0E69               	movlw	105
  4596   00228A  6E2D               	movwf	??_motor_retrace^0,c
  4597   00228C  0EA5               	movlw	165
  4598   00228E                     u3507:
  4599   00228E  2EE8               	decfsz	wreg,f,c
  4600   002290  D7FE               	bra	u3507
  4601   002292  2E2D               	decfsz	??_motor_retrace^0,f,c
  4602   002294  D7FC               	bra	u3507
  4603   002296  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4604   002298  D7FA               	bra	u3507
  4605   00229A  F000               	nop	
  4606                           
  4607                           ;color.c: 332:     } else if (buggy_path[buggy_step - 2] == 7) {
  4608   00229C  EF7B  F011         	goto	l197
  4609   0022A0                     l3670:
  4610   0022A0  5051               	movf	_buggy_step^0,w,c
  4611   0022A2  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4612   0022A4  6E2D               	movwf	??_motor_retrace^0,c
  4613   0022A6  5052               	movf	(_buggy_step+1)^0,w,c
  4614   0022A8  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4615   0022AA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4616   0022AC  0EFE               	movlw	254
  4617   0022AE  242D               	addwf	??_motor_retrace^0,w,c
  4618   0022B0  6ED9               	movwf	fsr2l,c
  4619   0022B2  0EFF               	movlw	255
  4620   0022B4  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4621   0022B6  6EDA               	movwf	fsr2h,c
  4622   0022B8  0E07               	movlw	7
  4623   0022BA  18DE               	xorwf	postinc2,w,c
  4624   0022BC  A4D8               	btfss	status,2,c
  4625   0022BE  EF63  F011         	goto	u3041
  4626   0022C2  EF65  F011         	goto	u3040
  4627   0022C6                     u3041:
  4628   0022C6  EF7B  F011         	goto	l191
  4629   0022CA                     u3040:
  4630   0022CA                     
  4631                           ;color.c: 333:         turnPrep(mL, mR);
  4632   0022CA  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4633   0022CE  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4634   0022D2  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4635   0022D6  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4636   0022DA  ECE3  F01B         	call	_turnPrep	;wreg free
  4637                           
  4638                           ;color.c: 334:         turnRight(mL, mR);
  4639   0022DE  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4640   0022E2  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4641   0022E6  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4642   0022EA  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4643   0022EE  EC07  F01B         	call	_turnRight	;wreg free
  4644   0022F2  EF42  F011         	goto	l3668
  4645   0022F6                     l191:
  4646   0022F6                     l197:
  4647   0022F6  0012               	return		;funcret
  4648   0022F8                     __end_of_motor_retrace:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _fullSpeedAhead *****************
  4652 ;; Defined at:
  4653 ;;		line 178 in file "dc_motor.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4656 ;;		 -> main@mL(9), 
  4657 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4658 ;;		 -> main@mR(9), 
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;		None
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      void 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4670 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4672 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4673 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4674 ;;Total ram usage:        5 bytes
  4675 ;; Hardware stack levels used: 1
  4676 ;; Hardware stack levels required when called: 8
  4677 ;; This function calls:
  4678 ;;		_setMotorPWM
  4679 ;; This function is called by:
  4680 ;;		_motor_retrace
  4681 ;;		_main
  4682 ;; This function uses a non-reentrant model
  4683 ;;
  4684                           
  4685                           	psect	text20
  4686   00336A                     __ptext20:
  4687                           	callstack 0
  4688   00336A                     _fullSpeedAhead:
  4689                           	callstack 21
  4690   00336A                     
  4691                           ;dc_motor.c: 178: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 179: {;dc_
      +                          motor.c: 180:     mL->power =5;
  4692   00336A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4693   00336E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4694   003372  0E05               	movlw	5
  4695   003374  6EDF               	movwf	indf2,c
  4696                           
  4697                           ;dc_motor.c: 181:     mR->power = 5;
  4698   003376  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4699   00337A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4700   00337E  0E05               	movlw	5
  4701   003380  6EDF               	movwf	indf2,c
  4702   003382                     
  4703                           ;dc_motor.c: 182:     mR->direction = 1;
  4704   003382  EE20 F001          	lfsr	2,1
  4705   003386  501E               	movf	fullSpeedAhead@mR^0,w,c
  4706   003388  26D9               	addwf	fsr2l,f,c
  4707   00338A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4708   00338C  22DA               	addwfc	fsr2h,f,c
  4709   00338E  0E01               	movlw	1
  4710   003390  6EDF               	movwf	indf2,c
  4711   003392                     
  4712                           ;dc_motor.c: 183:     mL->direction = 1;
  4713   003392  EE20 F001          	lfsr	2,1
  4714   003396  501C               	movf	fullSpeedAhead@mL^0,w,c
  4715   003398  26D9               	addwf	fsr2l,f,c
  4716   00339A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4717   00339C  22DA               	addwfc	fsr2h,f,c
  4718   00339E  0E01               	movlw	1
  4719   0033A0  6EDF               	movwf	indf2,c
  4720   0033A2                     
  4721                           ;dc_motor.c: 184:     mL->brakemode = 1;
  4722   0033A2  EE20 F002          	lfsr	2,2
  4723   0033A6  501C               	movf	fullSpeedAhead@mL^0,w,c
  4724   0033A8  26D9               	addwf	fsr2l,f,c
  4725   0033AA  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4726   0033AC  22DA               	addwfc	fsr2h,f,c
  4727   0033AE  0E01               	movlw	1
  4728   0033B0  6EDF               	movwf	indf2,c
  4729   0033B2                     
  4730                           ;dc_motor.c: 185:     mR->brakemode = 1;
  4731   0033B2  EE20 F002          	lfsr	2,2
  4732   0033B6  501E               	movf	fullSpeedAhead@mR^0,w,c
  4733   0033B8  26D9               	addwf	fsr2l,f,c
  4734   0033BA  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4735   0033BC  22DA               	addwfc	fsr2h,f,c
  4736   0033BE  0E01               	movlw	1
  4737   0033C0  6EDF               	movwf	indf2,c
  4738                           
  4739                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4740   0033C2  EFF9  F019         	goto	l3134
  4741   0033C6                     l3128:
  4742                           
  4743                           ;dc_motor.c: 187:     {;dc_motor.c: 188:         mL->power++;
  4744   0033C6  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4745   0033CA  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4746   0033CE  2ADF               	incf	indf2,f,c
  4747                           
  4748                           ;dc_motor.c: 189:         mR->power++;
  4749   0033D0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4750   0033D4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4751   0033D8  2ADF               	incf	indf2,f,c
  4752   0033DA                     
  4753                           ;dc_motor.c: 191:         setMotorPWM(mL);
  4754   0033DA  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4755   0033DE  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4756   0033E2  EC8C  F017         	call	_setMotorPWM	;wreg free
  4757   0033E6                     
  4758                           ;dc_motor.c: 192:         setMotorPWM(mR);
  4759   0033E6  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4760   0033EA  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4761   0033EE  EC8C  F017         	call	_setMotorPWM	;wreg free
  4762   0033F2                     l3134:
  4763                           
  4764                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4765   0033F2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4766   0033F6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4767   0033FA  0E33               	movlw	51
  4768   0033FC  60DF               	cpfslt	indf2,c
  4769   0033FE  EF03  F01A         	goto	u2111
  4770   003402  EF05  F01A         	goto	u2110
  4771   003406                     u2111:
  4772   003406  EF11  F01A         	goto	l3138
  4773   00340A                     u2110:
  4774   00340A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4775   00340E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4776   003412  0E32               	movlw	50
  4777   003414  64DF               	cpfsgt	indf2,c
  4778   003416  EF0F  F01A         	goto	u2121
  4779   00341A  EF11  F01A         	goto	u2120
  4780   00341E                     u2121:
  4781   00341E  EFE3  F019         	goto	l3128
  4782   003422                     u2120:
  4783   003422                     l3138:
  4784                           
  4785                           ;dc_motor.c: 194:     mL->power = 50;
  4786   003422  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4787   003426  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4788   00342A  0E32               	movlw	50
  4789   00342C  6EDF               	movwf	indf2,c
  4790                           
  4791                           ;dc_motor.c: 195:     mR->power = 50;
  4792   00342E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4793   003432  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4794   003436  0E32               	movlw	50
  4795   003438  6EDF               	movwf	indf2,c
  4796   00343A                     
  4797                           ;dc_motor.c: 196:     setMotorPWM(mL);
  4798   00343A  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4799   00343E  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4800   003442  EC8C  F017         	call	_setMotorPWM	;wreg free
  4801   003446                     
  4802                           ;dc_motor.c: 197:     setMotorPWM(mR);
  4803   003446  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4804   00344A  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4805   00344E  EC8C  F017         	call	_setMotorPWM	;wreg free
  4806   003452  0012               	return		;funcret
  4807   003454                     __end_of_fullSpeedAhead:
  4808                           	callstack 0
  4809                           
  4810 ;; *************** function _motor_response *****************
  4811 ;; Defined at:
  4812 ;;		line 190 in file "color.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4815 ;;		 -> main@RGBC(32), 
  4816 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4817 ;;		 -> main@mL(9), 
  4818 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4819 ;;		 -> main@mR(9), 
  4820 ;; Auto vars:     Size  Location     Type
  4821 ;;  j               2   46[COMRAM] int 
  4822 ;; Return value:  Size  Location     Type
  4823 ;;                  1    wreg      unsigned char 
  4824 ;; Registers used:
  4825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4826 ;; Tracked objects:
  4827 ;;		On entry : 0/0
  4828 ;;		On exit  : 0/0
  4829 ;;		Unchanged: 0/0
  4830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4831 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4832 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4833 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4834 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4835 ;;Total ram usage:       10 bytes
  4836 ;; Hardware stack levels used: 1
  4837 ;; Hardware stack levels required when called: 10
  4838 ;; This function calls:
  4839 ;;		___flge
  4840 ;;		_norm_stop
  4841 ;;		_reverse
  4842 ;;		_turnLeft
  4843 ;;		_turnPrep
  4844 ;;		_turnRight
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text21
  4851   000E18                     __ptext21:
  4852                           	callstack 0
  4853   000E18                     _motor_response:
  4854                           	callstack 20
  4855   000E18                     
  4856                           ;color.c: 192:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4857   000E18  EE20 F01C          	lfsr	2,28
  4858   000E1C  5027               	movf	motor_response@temp^0,w,c
  4859   000E1E  26D9               	addwf	fsr2l,f,c
  4860   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4861   000E22  22DA               	addwfc	fsr2h,f,c
  4862   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4863   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4864   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4865   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4866   000E34  C043  F00D         	movff	_CR2U,___flge@ff2
  4867   000E38  C044  F00E         	movff	_CR2U+1,___flge@ff2+1
  4868   000E3C  C045  F00F         	movff	_CR2U+2,___flge@ff2+2
  4869   000E40  C046  F010         	movff	_CR2U+3,___flge@ff2+3
  4870   000E44  EC42  F018         	call	___flge	;wreg free
  4871   000E48  B0D8               	btfsc	status,0,c
  4872   000E4A  EF29  F007         	goto	u2601
  4873   000E4E  EF2B  F007         	goto	u2600
  4874   000E52                     u2601:
  4875   000E52  EF1E  F00A         	goto	l3502
  4876   000E56                     u2600:
  4877   000E56  C03F  F009         	movff	_CR2L,___flge@ff1
  4878   000E5A  C040  F00A         	movff	_CR2L+1,___flge@ff1+1
  4879   000E5E  C041  F00B         	movff	_CR2L+2,___flge@ff1+2
  4880   000E62  C042  F00C         	movff	_CR2L+3,___flge@ff1+3
  4881   000E66  EE20 F01C          	lfsr	2,28
  4882   000E6A  5027               	movf	motor_response@temp^0,w,c
  4883   000E6C  26D9               	addwf	fsr2l,f,c
  4884   000E6E  5028               	movf	(motor_response@temp+1)^0,w,c
  4885   000E70  22DA               	addwfc	fsr2h,f,c
  4886   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  4887   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4888   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4889   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  4890   000E82  EC42  F018         	call	___flge	;wreg free
  4891   000E86  B0D8               	btfsc	status,0,c
  4892   000E88  EF48  F007         	goto	u2611
  4893   000E8C  EF4A  F007         	goto	u2610
  4894   000E90                     u2611:
  4895   000E90  EF1E  F00A         	goto	l3502
  4896   000E94                     u2610:
  4897   000E94                     
  4898                           ;color.c: 194:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4899   000E94  EE20 F018          	lfsr	2,24
  4900   000E98  5027               	movf	motor_response@temp^0,w,c
  4901   000E9A  26D9               	addwf	fsr2l,f,c
  4902   000E9C  5028               	movf	(motor_response@temp+1)^0,w,c
  4903   000E9E  22DA               	addwfc	fsr2h,f,c
  4904   000EA0  CFDE F009          	movff	postinc2,___flge@ff1
  4905   000EA4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4906   000EA8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4907   000EAC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4908   000EB0  0E00               	movlw	0
  4909   000EB2  6E0D               	movwf	___flge@ff2^0,c
  4910   000EB4  0E00               	movlw	0
  4911   000EB6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4912   000EB8  0EA0               	movlw	160
  4913   000EBA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4914   000EBC  0E40               	movlw	64
  4915   000EBE  6E10               	movwf	(___flge@ff2+3)^0,c
  4916   000EC0  EC42  F018         	call	___flge	;wreg free
  4917   000EC4  B0D8               	btfsc	status,0,c
  4918   000EC6  EF67  F007         	goto	u2621
  4919   000ECA  EF69  F007         	goto	u2620
  4920   000ECE                     u2621:
  4921   000ECE  EF29  F008         	goto	l3454
  4922   000ED2                     u2620:
  4923   000ED2  0E9A               	movlw	154
  4924   000ED4  6E09               	movwf	___flge@ff1^0,c
  4925   000ED6  0E99               	movlw	153
  4926   000ED8  6E0A               	movwf	(___flge@ff1+1)^0,c
  4927   000EDA  0ED9               	movlw	217
  4928   000EDC  6E0B               	movwf	(___flge@ff1+2)^0,c
  4929   000EDE  0E3F               	movlw	63
  4930   000EE0  6E0C               	movwf	(___flge@ff1+3)^0,c
  4931   000EE2  EE20 F010          	lfsr	2,16
  4932   000EE6  5027               	movf	motor_response@temp^0,w,c
  4933   000EE8  26D9               	addwf	fsr2l,f,c
  4934   000EEA  5028               	movf	(motor_response@temp+1)^0,w,c
  4935   000EEC  22DA               	addwfc	fsr2h,f,c
  4936   000EEE  CFDE F00D          	movff	postinc2,___flge@ff2
  4937   000EF2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4938   000EF6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4939   000EFA  CFDE F010          	movff	postinc2,___flge@ff2+3
  4940   000EFE  EC42  F018         	call	___flge	;wreg free
  4941   000F02  B0D8               	btfsc	status,0,c
  4942   000F04  EF86  F007         	goto	u2631
  4943   000F08  EF88  F007         	goto	u2630
  4944   000F0C                     u2631:
  4945   000F0C  EF29  F008         	goto	l3454
  4946   000F10                     u2630:
  4947   000F10  EE20 F010          	lfsr	2,16
  4948   000F14  5027               	movf	motor_response@temp^0,w,c
  4949   000F16  26D9               	addwf	fsr2l,f,c
  4950   000F18  5028               	movf	(motor_response@temp+1)^0,w,c
  4951   000F1A  22DA               	addwfc	fsr2h,f,c
  4952   000F1C  CFDE F009          	movff	postinc2,___flge@ff1
  4953   000F20  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4954   000F24  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4955   000F28  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4956   000F2C  0ECD               	movlw	205
  4957   000F2E  6E0D               	movwf	___flge@ff2^0,c
  4958   000F30  0ECC               	movlw	204
  4959   000F32  6E0E               	movwf	(___flge@ff2+1)^0,c
  4960   000F34  0E0C               	movlw	12
  4961   000F36  6E0F               	movwf	(___flge@ff2+2)^0,c
  4962   000F38  0E40               	movlw	64
  4963   000F3A  6E10               	movwf	(___flge@ff2+3)^0,c
  4964   000F3C  EC42  F018         	call	___flge	;wreg free
  4965   000F40  B0D8               	btfsc	status,0,c
  4966   000F42  EFA5  F007         	goto	u2641
  4967   000F46  EFA7  F007         	goto	u2640
  4968   000F4A                     u2641:
  4969   000F4A  EF29  F008         	goto	l3454
  4970   000F4E                     u2640:
  4971   000F4E  0E00               	movlw	0
  4972   000F50  6E09               	movwf	___flge@ff1^0,c
  4973   000F52  0E00               	movlw	0
  4974   000F54  6E0A               	movwf	(___flge@ff1+1)^0,c
  4975   000F56  0E40               	movlw	64
  4976   000F58  6E0B               	movwf	(___flge@ff1+2)^0,c
  4977   000F5A  0E40               	movlw	64
  4978   000F5C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4979   000F5E  EE20 F014          	lfsr	2,20
  4980   000F62  5027               	movf	motor_response@temp^0,w,c
  4981   000F64  26D9               	addwf	fsr2l,f,c
  4982   000F66  5028               	movf	(motor_response@temp+1)^0,w,c
  4983   000F68  22DA               	addwfc	fsr2h,f,c
  4984   000F6A  CFDE F00D          	movff	postinc2,___flge@ff2
  4985   000F6E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4986   000F72  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4987   000F76  CFDE F010          	movff	postinc2,___flge@ff2+3
  4988   000F7A  EC42  F018         	call	___flge	;wreg free
  4989   000F7E  B0D8               	btfsc	status,0,c
  4990   000F80  EFC4  F007         	goto	u2651
  4991   000F84  EFC6  F007         	goto	u2650
  4992   000F88                     u2651:
  4993   000F88  EF29  F008         	goto	l3454
  4994   000F8C                     u2650:
  4995   000F8C  EE20 F014          	lfsr	2,20
  4996   000F90  5027               	movf	motor_response@temp^0,w,c
  4997   000F92  26D9               	addwf	fsr2l,f,c
  4998   000F94  5028               	movf	(motor_response@temp+1)^0,w,c
  4999   000F96  22DA               	addwfc	fsr2h,f,c
  5000   000F98  CFDE F009          	movff	postinc2,___flge@ff1
  5001   000F9C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5002   000FA0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5003   000FA4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5004   000FA8  0E00               	movlw	0
  5005   000FAA  6E0D               	movwf	___flge@ff2^0,c
  5006   000FAC  0E00               	movlw	0
  5007   000FAE  6E0E               	movwf	(___flge@ff2+1)^0,c
  5008   000FB0  0E60               	movlw	96
  5009   000FB2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5010   000FB4  0E40               	movlw	64
  5011   000FB6  6E10               	movwf	(___flge@ff2+3)^0,c
  5012   000FB8  EC42  F018         	call	___flge	;wreg free
  5013   000FBC  B0D8               	btfsc	status,0,c
  5014   000FBE  EFE3  F007         	goto	u2661
  5015   000FC2  EFE5  F007         	goto	u2660
  5016   000FC6                     u2661:
  5017   000FC6  EF29  F008         	goto	l3454
  5018   000FCA                     u2660:
  5019   000FCA                     
  5020                           ;color.c: 195:             reverse(mL, mR);
  5021   000FCA  C029  F01C         	movff	motor_response@mL,reverse@mL
  5022   000FCE  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5023   000FD2  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5024   000FD6  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5025   000FDA  ECC4  F018         	call	_reverse	;wreg free
  5026   000FDE                     
  5027                           ;color.c: 196:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5028   000FDE  0EF4               	movlw	244
  5029   000FE0  6E2E               	movwf	(??_motor_response+1)^0,c
  5030   000FE2  0E82               	movlw	130
  5031   000FE4  6E2D               	movwf	??_motor_response^0,c
  5032   000FE6  0E05               	movlw	5
  5033   000FE8                     u3517:
  5034   000FE8  2EE8               	decfsz	wreg,f,c
  5035   000FEA  D7FE               	bra	u3517
  5036   000FEC  2E2D               	decfsz	??_motor_response^0,f,c
  5037   000FEE  D7FC               	bra	u3517
  5038   000FF0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5039   000FF2  D7FA               	bra	u3517
  5040   000FF4  F000               	nop	
  5041   000FF6                     
  5042                           ;color.c: 197:             norm_stop(mL, mR);
  5043   000FF6  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5044   000FFA  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5045   000FFE  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5046   001002  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5047   001006  EC10  F01D         	call	_norm_stop	;wreg free
  5048                           
  5049                           ;color.c: 198:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5050   00100A  0E09               	movlw	9
  5051   00100C  6E2E               	movwf	(??_motor_response+1)^0,c
  5052   00100E  0E1E               	movlw	30
  5053   001010  6E2D               	movwf	??_motor_response^0,c
  5054   001012  0EE4               	movlw	228
  5055   001014                     u3527:
  5056   001014  2EE8               	decfsz	wreg,f,c
  5057   001016  D7FE               	bra	u3527
  5058   001018  2E2D               	decfsz	??_motor_response^0,f,c
  5059   00101A  D7FC               	bra	u3527
  5060   00101C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5061   00101E  D7FA               	bra	u3527
  5062   001020  D000               	nop2	
  5063   001022                     
  5064                           ;color.c: 199:             turnLeft(mL, mR);
  5065   001022  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5066   001026  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5067   00102A  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5068   00102E  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5069   001032  EC40  F01B         	call	_turnLeft	;wreg free
  5070   001036                     
  5071                           ;color.c: 200:             _delay((unsigned long)((220)*(64000000/4000.0)));
  5072   001036  0E12               	movlw	18
  5073   001038  6E2E               	movwf	(??_motor_response+1)^0,c
  5074   00103A  0EDC               	movlw	220
  5075   00103C  6E2D               	movwf	??_motor_response^0,c
  5076   00103E  0E60               	movlw	96
  5077   001040                     u3537:
  5078   001040  2EE8               	decfsz	wreg,f,c
  5079   001042  D7FE               	bra	u3537
  5080   001044  2E2D               	decfsz	??_motor_response^0,f,c
  5081   001046  D7FC               	bra	u3537
  5082   001048  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5083   00104A  D7FA               	bra	u3537
  5084   00104C                     
  5085                           ;color.c: 201:             return 5;
  5086   00104C  0E05               	movlw	5
  5087   00104E  EF46  F00D         	goto	l167
  5088   001052                     l3454:
  5089                           
  5090                           ;color.c: 204:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  5091   001052  0E00               	movlw	0
  5092   001054  6E09               	movwf	___flge@ff1^0,c
  5093   001056  0E00               	movlw	0
  5094   001058  6E0A               	movwf	(___flge@ff1+1)^0,c
  5095   00105A  0EB0               	movlw	176
  5096   00105C  6E0B               	movwf	(___flge@ff1+2)^0,c
  5097   00105E  0E40               	movlw	64
  5098   001060  6E0C               	movwf	(___flge@ff1+3)^0,c
  5099   001062  EE20 F018          	lfsr	2,24
  5100   001066  5027               	movf	motor_response@temp^0,w,c
  5101   001068  26D9               	addwf	fsr2l,f,c
  5102   00106A  5028               	movf	(motor_response@temp+1)^0,w,c
  5103   00106C  22DA               	addwfc	fsr2h,f,c
  5104   00106E  CFDE F00D          	movff	postinc2,___flge@ff2
  5105   001072  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5106   001076  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5107   00107A  CFDE F010          	movff	postinc2,___flge@ff2+3
  5108   00107E  EC42  F018         	call	___flge	;wreg free
  5109   001082  B0D8               	btfsc	status,0,c
  5110   001084  EF46  F008         	goto	u2671
  5111   001088  EF48  F008         	goto	u2670
  5112   00108C                     u2671:
  5113   00108C  EF1C  F009         	goto	l3474
  5114   001090                     u2670:
  5115   001090  EE20 F018          	lfsr	2,24
  5116   001094  5027               	movf	motor_response@temp^0,w,c
  5117   001096  26D9               	addwf	fsr2l,f,c
  5118   001098  5028               	movf	(motor_response@temp+1)^0,w,c
  5119   00109A  22DA               	addwfc	fsr2h,f,c
  5120   00109C  CFDE F009          	movff	postinc2,___flge@ff1
  5121   0010A0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5122   0010A4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5123   0010A8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5124   0010AC  0E00               	movlw	0
  5125   0010AE  6E0D               	movwf	___flge@ff2^0,c
  5126   0010B0  0E00               	movlw	0
  5127   0010B2  6E0E               	movwf	(___flge@ff2+1)^0,c
  5128   0010B4  0EC0               	movlw	192
  5129   0010B6  6E0F               	movwf	(___flge@ff2+2)^0,c
  5130   0010B8  0E40               	movlw	64
  5131   0010BA  6E10               	movwf	(___flge@ff2+3)^0,c
  5132   0010BC  EC42  F018         	call	___flge	;wreg free
  5133   0010C0  B0D8               	btfsc	status,0,c
  5134   0010C2  EF65  F008         	goto	u2681
  5135   0010C6  EF67  F008         	goto	u2680
  5136   0010CA                     u2681:
  5137   0010CA  EF1C  F009         	goto	l3474
  5138   0010CE                     u2680:
  5139   0010CE  0E33               	movlw	51
  5140   0010D0  6E09               	movwf	___flge@ff1^0,c
  5141   0010D2  0E33               	movlw	51
  5142   0010D4  6E0A               	movwf	(___flge@ff1+1)^0,c
  5143   0010D6  0EB3               	movlw	179
  5144   0010D8  6E0B               	movwf	(___flge@ff1+2)^0,c
  5145   0010DA  0E3F               	movlw	63
  5146   0010DC  6E0C               	movwf	(___flge@ff1+3)^0,c
  5147   0010DE  EE20 F010          	lfsr	2,16
  5148   0010E2  5027               	movf	motor_response@temp^0,w,c
  5149   0010E4  26D9               	addwf	fsr2l,f,c
  5150   0010E6  5028               	movf	(motor_response@temp+1)^0,w,c
  5151   0010E8  22DA               	addwfc	fsr2h,f,c
  5152   0010EA  CFDE F00D          	movff	postinc2,___flge@ff2
  5153   0010EE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5154   0010F2  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5155   0010F6  CFDE F010          	movff	postinc2,___flge@ff2+3
  5156   0010FA  EC42  F018         	call	___flge	;wreg free
  5157   0010FE  B0D8               	btfsc	status,0,c
  5158   001100  EF84  F008         	goto	u2691
  5159   001104  EF86  F008         	goto	u2690
  5160   001108                     u2691:
  5161   001108  EF1C  F009         	goto	l3474
  5162   00110C                     u2690:
  5163   00110C  EE20 F010          	lfsr	2,16
  5164   001110  5027               	movf	motor_response@temp^0,w,c
  5165   001112  26D9               	addwf	fsr2l,f,c
  5166   001114  5028               	movf	(motor_response@temp+1)^0,w,c
  5167   001116  22DA               	addwfc	fsr2h,f,c
  5168   001118  CFDE F009          	movff	postinc2,___flge@ff1
  5169   00111C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5170   001120  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5171   001124  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5172   001128  0E9A               	movlw	154
  5173   00112A  6E0D               	movwf	___flge@ff2^0,c
  5174   00112C  0E99               	movlw	153
  5175   00112E  6E0E               	movwf	(___flge@ff2+1)^0,c
  5176   001130  0ED9               	movlw	217
  5177   001132  6E0F               	movwf	(___flge@ff2+2)^0,c
  5178   001134  0E3F               	movlw	63
  5179   001136  6E10               	movwf	(___flge@ff2+3)^0,c
  5180   001138  EC42  F018         	call	___flge	;wreg free
  5181   00113C  B0D8               	btfsc	status,0,c
  5182   00113E  EFA3  F008         	goto	u2701
  5183   001142  EFA5  F008         	goto	u2700
  5184   001146                     u2701:
  5185   001146  EF1C  F009         	goto	l3474
  5186   00114A                     u2700:
  5187   00114A  0E33               	movlw	51
  5188   00114C  6E09               	movwf	___flge@ff1^0,c
  5189   00114E  0E33               	movlw	51
  5190   001150  6E0A               	movwf	(___flge@ff1+1)^0,c
  5191   001152  0E83               	movlw	131
  5192   001154  6E0B               	movwf	(___flge@ff1+2)^0,c
  5193   001156  0E40               	movlw	64
  5194   001158  6E0C               	movwf	(___flge@ff1+3)^0,c
  5195   00115A  EE20 F014          	lfsr	2,20
  5196   00115E  5027               	movf	motor_response@temp^0,w,c
  5197   001160  26D9               	addwf	fsr2l,f,c
  5198   001162  5028               	movf	(motor_response@temp+1)^0,w,c
  5199   001164  22DA               	addwfc	fsr2h,f,c
  5200   001166  CFDE F00D          	movff	postinc2,___flge@ff2
  5201   00116A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5202   00116E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5203   001172  CFDE F010          	movff	postinc2,___flge@ff2+3
  5204   001176  EC42  F018         	call	___flge	;wreg free
  5205   00117A  B0D8               	btfsc	status,0,c
  5206   00117C  EFC2  F008         	goto	u2711
  5207   001180  EFC4  F008         	goto	u2710
  5208   001184                     u2711:
  5209   001184  EF1C  F009         	goto	l3474
  5210   001188                     u2710:
  5211   001188  EE20 F014          	lfsr	2,20
  5212   00118C  5027               	movf	motor_response@temp^0,w,c
  5213   00118E  26D9               	addwf	fsr2l,f,c
  5214   001190  5028               	movf	(motor_response@temp+1)^0,w,c
  5215   001192  22DA               	addwfc	fsr2h,f,c
  5216   001194  CFDE F009          	movff	postinc2,___flge@ff1
  5217   001198  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5218   00119C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5219   0011A0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5220   0011A4  0E00               	movlw	0
  5221   0011A6  6E0D               	movwf	___flge@ff2^0,c
  5222   0011A8  0E00               	movlw	0
  5223   0011AA  6E0E               	movwf	(___flge@ff2+1)^0,c
  5224   0011AC  0E90               	movlw	144
  5225   0011AE  6E0F               	movwf	(___flge@ff2+2)^0,c
  5226   0011B0  0E40               	movlw	64
  5227   0011B2  6E10               	movwf	(___flge@ff2+3)^0,c
  5228   0011B4  EC42  F018         	call	___flge	;wreg free
  5229   0011B8  B0D8               	btfsc	status,0,c
  5230   0011BA  EFE1  F008         	goto	u2721
  5231   0011BE  EFE3  F008         	goto	u2720
  5232   0011C2                     u2721:
  5233   0011C2  EF1C  F009         	goto	l3474
  5234   0011C6                     u2720:
  5235   0011C6                     
  5236                           ;color.c: 206:             turnPrep(mL, mR);
  5237   0011C6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5238   0011CA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5239   0011CE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5240   0011D2  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5241   0011D6  ECE3  F01B         	call	_turnPrep	;wreg free
  5242                           
  5243                           ;color.c: 207:             turnRight(mL, mR);
  5244   0011DA  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5245   0011DE  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5246   0011E2  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5247   0011E6  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5248   0011EA  EC07  F01B         	call	_turnRight	;wreg free
  5249   0011EE                     
  5250                           ;color.c: 208:             _delay((unsigned long)((330)*(64000000/4000.0)));
  5251   0011EE  0E1B               	movlw	27
  5252   0011F0  6E2E               	movwf	(??_motor_response+1)^0,c
  5253   0011F2  0ECA               	movlw	202
  5254   0011F4  6E2D               	movwf	??_motor_response^0,c
  5255   0011F6  0E10               	movlw	16
  5256   0011F8                     u3547:
  5257   0011F8  2EE8               	decfsz	wreg,f,c
  5258   0011FA  D7FE               	bra	u3547
  5259   0011FC  2E2D               	decfsz	??_motor_response^0,f,c
  5260   0011FE  D7FC               	bra	u3547
  5261   001200  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5262   001202  D7FA               	bra	u3547
  5263   001204  D000               	nop2	
  5264   001206                     
  5265                           ;color.c: 209:             norm_stop(mL, mR);
  5266   001206  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5267   00120A  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5268   00120E  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5269   001212  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5270   001216  EC10  F01D         	call	_norm_stop	;wreg free
  5271                           
  5272                           ;color.c: 210:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5273   00121A  0E52               	movlw	82
  5274   00121C  6E2E               	movwf	(??_motor_response+1)^0,c
  5275   00121E  0E2B               	movlw	43
  5276   001220  6E2D               	movwf	??_motor_response^0,c
  5277   001222  0E00               	movlw	0
  5278   001224                     u3557:
  5279   001224  2EE8               	decfsz	wreg,f,c
  5280   001226  D7FE               	bra	u3557
  5281   001228  2E2D               	decfsz	??_motor_response^0,f,c
  5282   00122A  D7FC               	bra	u3557
  5283   00122C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5284   00122E  D7FA               	bra	u3557
  5285   001230  D000               	nop2	
  5286                           
  5287                           ;color.c: 211:             return 6;
  5288   001232  0E06               	movlw	6
  5289   001234  EF46  F00D         	goto	l167
  5290   001238                     l3474:
  5291                           
  5292                           ;color.c: 213:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  5293   001238  0E33               	movlw	51
  5294   00123A  6E09               	movwf	___flge@ff1^0,c
  5295   00123C  0E33               	movlw	51
  5296   00123E  6E0A               	movwf	(___flge@ff1+1)^0,c
  5297   001240  0E53               	movlw	83
  5298   001242  6E0B               	movwf	(___flge@ff1+2)^0,c
  5299   001244  0E40               	movlw	64
  5300   001246  6E0C               	movwf	(___flge@ff1+3)^0,c
  5301   001248  EE20 F018          	lfsr	2,24
  5302   00124C  5027               	movf	motor_response@temp^0,w,c
  5303   00124E  26D9               	addwf	fsr2l,f,c
  5304   001250  5028               	movf	(motor_response@temp+1)^0,w,c
  5305   001252  22DA               	addwfc	fsr2h,f,c
  5306   001254  CFDE F00D          	movff	postinc2,___flge@ff2
  5307   001258  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5308   00125C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5309   001260  CFDE F010          	movff	postinc2,___flge@ff2+3
  5310   001264  EC42  F018         	call	___flge	;wreg free
  5311   001268  B0D8               	btfsc	status,0,c
  5312   00126A  EF39  F009         	goto	u2731
  5313   00126E  EF3B  F009         	goto	u2730
  5314   001272                     u2731:
  5315   001272  EF1E  F00A         	goto	l3502
  5316   001276                     u2730:
  5317   001276  EE20 F018          	lfsr	2,24
  5318   00127A  5027               	movf	motor_response@temp^0,w,c
  5319   00127C  26D9               	addwf	fsr2l,f,c
  5320   00127E  5028               	movf	(motor_response@temp+1)^0,w,c
  5321   001280  22DA               	addwfc	fsr2h,f,c
  5322   001282  CFDE F009          	movff	postinc2,___flge@ff1
  5323   001286  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5324   00128A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5325   00128E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5326   001292  0E9A               	movlw	154
  5327   001294  6E0D               	movwf	___flge@ff2^0,c
  5328   001296  0E99               	movlw	153
  5329   001298  6E0E               	movwf	(___flge@ff2+1)^0,c
  5330   00129A  0E79               	movlw	121
  5331   00129C  6E0F               	movwf	(___flge@ff2+2)^0,c
  5332   00129E  0E40               	movlw	64
  5333   0012A0  6E10               	movwf	(___flge@ff2+3)^0,c
  5334   0012A2  EC42  F018         	call	___flge	;wreg free
  5335   0012A6  B0D8               	btfsc	status,0,c
  5336   0012A8  EF58  F009         	goto	u2741
  5337   0012AC  EF5A  F009         	goto	u2740
  5338   0012B0                     u2741:
  5339   0012B0  EF1E  F00A         	goto	l3502
  5340   0012B4                     u2740:
  5341   0012B4  0ECD               	movlw	205
  5342   0012B6  6E09               	movwf	___flge@ff1^0,c
  5343   0012B8  0ECC               	movlw	204
  5344   0012BA  6E0A               	movwf	(___flge@ff1+1)^0,c
  5345   0012BC  0E2C               	movlw	44
  5346   0012BE  6E0B               	movwf	(___flge@ff1+2)^0,c
  5347   0012C0  0E40               	movlw	64
  5348   0012C2  6E0C               	movwf	(___flge@ff1+3)^0,c
  5349   0012C4  EE20 F010          	lfsr	2,16
  5350   0012C8  5027               	movf	motor_response@temp^0,w,c
  5351   0012CA  26D9               	addwf	fsr2l,f,c
  5352   0012CC  5028               	movf	(motor_response@temp+1)^0,w,c
  5353   0012CE  22DA               	addwfc	fsr2h,f,c
  5354   0012D0  CFDE F00D          	movff	postinc2,___flge@ff2
  5355   0012D4  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5356   0012D8  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5357   0012DC  CFDE F010          	movff	postinc2,___flge@ff2+3
  5358   0012E0  EC42  F018         	call	___flge	;wreg free
  5359   0012E4  B0D8               	btfsc	status,0,c
  5360   0012E6  EF77  F009         	goto	u2751
  5361   0012EA  EF79  F009         	goto	u2750
  5362   0012EE                     u2751:
  5363   0012EE  EF1E  F00A         	goto	l3502
  5364   0012F2                     u2750:
  5365   0012F2  EE20 F010          	lfsr	2,16
  5366   0012F6  5027               	movf	motor_response@temp^0,w,c
  5367   0012F8  26D9               	addwf	fsr2l,f,c
  5368   0012FA  5028               	movf	(motor_response@temp+1)^0,w,c
  5369   0012FC  22DA               	addwfc	fsr2h,f,c
  5370   0012FE  CFDE F009          	movff	postinc2,___flge@ff1
  5371   001302  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5372   001306  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5373   00130A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5374   00130E  0ECD               	movlw	205
  5375   001310  6E0D               	movwf	___flge@ff2^0,c
  5376   001312  0ECC               	movlw	204
  5377   001314  6E0E               	movwf	(___flge@ff2+1)^0,c
  5378   001316  0E4C               	movlw	76
  5379   001318  6E0F               	movwf	(___flge@ff2+2)^0,c
  5380   00131A  0E40               	movlw	64
  5381   00131C  6E10               	movwf	(___flge@ff2+3)^0,c
  5382   00131E  EC42  F018         	call	___flge	;wreg free
  5383   001322  B0D8               	btfsc	status,0,c
  5384   001324  EF96  F009         	goto	u2761
  5385   001328  EF98  F009         	goto	u2760
  5386   00132C                     u2761:
  5387   00132C  EF1E  F00A         	goto	l3502
  5388   001330                     u2760:
  5389   001330  0E00               	movlw	0
  5390   001332  6E09               	movwf	___flge@ff1^0,c
  5391   001334  0E00               	movlw	0
  5392   001336  6E0A               	movwf	(___flge@ff1+1)^0,c
  5393   001338  0E20               	movlw	32
  5394   00133A  6E0B               	movwf	(___flge@ff1+2)^0,c
  5395   00133C  0E40               	movlw	64
  5396   00133E  6E0C               	movwf	(___flge@ff1+3)^0,c
  5397   001340  EE20 F014          	lfsr	2,20
  5398   001344  5027               	movf	motor_response@temp^0,w,c
  5399   001346  26D9               	addwf	fsr2l,f,c
  5400   001348  5028               	movf	(motor_response@temp+1)^0,w,c
  5401   00134A  22DA               	addwfc	fsr2h,f,c
  5402   00134C  CFDE F00D          	movff	postinc2,___flge@ff2
  5403   001350  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5404   001354  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5405   001358  CFDE F010          	movff	postinc2,___flge@ff2+3
  5406   00135C  EC42  F018         	call	___flge	;wreg free
  5407   001360  B0D8               	btfsc	status,0,c
  5408   001362  EFB5  F009         	goto	u2771
  5409   001366  EFB7  F009         	goto	u2770
  5410   00136A                     u2771:
  5411   00136A  EF1E  F00A         	goto	l3502
  5412   00136E                     u2770:
  5413   00136E  EE20 F014          	lfsr	2,20
  5414   001372  5027               	movf	motor_response@temp^0,w,c
  5415   001374  26D9               	addwf	fsr2l,f,c
  5416   001376  5028               	movf	(motor_response@temp+1)^0,w,c
  5417   001378  22DA               	addwfc	fsr2h,f,c
  5418   00137A  CFDE F009          	movff	postinc2,___flge@ff1
  5419   00137E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5420   001382  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5421   001386  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5422   00138A  0E9A               	movlw	154
  5423   00138C  6E0D               	movwf	___flge@ff2^0,c
  5424   00138E  0E99               	movlw	153
  5425   001390  6E0E               	movwf	(___flge@ff2+1)^0,c
  5426   001392  0E39               	movlw	57
  5427   001394  6E0F               	movwf	(___flge@ff2+2)^0,c
  5428   001396  0E40               	movlw	64
  5429   001398  6E10               	movwf	(___flge@ff2+3)^0,c
  5430   00139A  EC42  F018         	call	___flge	;wreg free
  5431   00139E  B0D8               	btfsc	status,0,c
  5432   0013A0  EFD4  F009         	goto	u2781
  5433   0013A4  EFD6  F009         	goto	u2780
  5434   0013A8                     u2781:
  5435   0013A8  EF1E  F00A         	goto	l3502
  5436   0013AC                     u2780:
  5437   0013AC                     
  5438                           ;color.c: 214:             LATFbits.LATF0 = !LATFbits.LATF0;
  5439   0013AC  A07E               	btfss	126,0,c	;volatile
  5440   0013AE  EFDB  F009         	goto	u2791
  5441   0013B2  EFDF  F009         	goto	u2790
  5442   0013B6                     u2791:
  5443   0013B6  6A2D               	clrf	??_motor_response^0,c
  5444   0013B8  2A2D               	incf	??_motor_response^0,f,c
  5445   0013BA  EFE0  F009         	goto	u2808
  5446   0013BE                     u2790:
  5447   0013BE  6A2D               	clrf	??_motor_response^0,c
  5448   0013C0                     u2808:
  5449   0013C0  507E               	movf	126,w,c	;volatile
  5450   0013C2  182D               	xorwf	??_motor_response^0,w,c
  5451   0013C4  0BFE               	andlw	-2
  5452   0013C6  182D               	xorwf	??_motor_response^0,w,c
  5453   0013C8  6E7E               	movwf	126,c	;volatile
  5454   0013CA                     
  5455                           ;color.c: 215:             turnPrep(mL, mR);
  5456   0013CA  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5457   0013CE  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5458   0013D2  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5459   0013D6  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5460   0013DA  ECE3  F01B         	call	_turnPrep	;wreg free
  5461   0013DE                     
  5462                           ;color.c: 216:             turnLeft(mL, mR);
  5463   0013DE  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5464   0013E2  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5465   0013E6  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5466   0013EA  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5467   0013EE  EC40  F01B         	call	_turnLeft	;wreg free
  5468   0013F2                     
  5469                           ;color.c: 217:             _delay((unsigned long)((330)*(64000000/4000.0)));
  5470   0013F2  0E1B               	movlw	27
  5471   0013F4  6E2E               	movwf	(??_motor_response+1)^0,c
  5472   0013F6  0ECA               	movlw	202
  5473   0013F8  6E2D               	movwf	??_motor_response^0,c
  5474   0013FA  0E10               	movlw	16
  5475   0013FC                     u3567:
  5476   0013FC  2EE8               	decfsz	wreg,f,c
  5477   0013FE  D7FE               	bra	u3567
  5478   001400  2E2D               	decfsz	??_motor_response^0,f,c
  5479   001402  D7FC               	bra	u3567
  5480   001404  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5481   001406  D7FA               	bra	u3567
  5482   001408  D000               	nop2	
  5483   00140A                     
  5484                           ;color.c: 218:             norm_stop(mL, mR);
  5485   00140A  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5486   00140E  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5487   001412  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5488   001416  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5489   00141A  EC10  F01D         	call	_norm_stop	;wreg free
  5490   00141E                     
  5491                           ;color.c: 219:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5492   00141E  0E52               	movlw	82
  5493   001420  6E2E               	movwf	(??_motor_response+1)^0,c
  5494   001422  0E2B               	movlw	43
  5495   001424  6E2D               	movwf	??_motor_response^0,c
  5496   001426  0E00               	movlw	0
  5497   001428                     u3577:
  5498   001428  2EE8               	decfsz	wreg,f,c
  5499   00142A  D7FE               	bra	u3577
  5500   00142C  2E2D               	decfsz	??_motor_response^0,f,c
  5501   00142E  D7FC               	bra	u3577
  5502   001430  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5503   001432  D7FA               	bra	u3577
  5504   001434  D000               	nop2	
  5505   001436                     
  5506                           ;color.c: 220:             return 7;
  5507   001436  0E07               	movlw	7
  5508   001438  EF46  F00D         	goto	l167
  5509   00143C                     l3502:
  5510                           
  5511                           ;color.c: 226:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  5512   00143C  EE20 F01C          	lfsr	2,28
  5513   001440  5027               	movf	motor_response@temp^0,w,c
  5514   001442  26D9               	addwf	fsr2l,f,c
  5515   001444  5028               	movf	(motor_response@temp+1)^0,w,c
  5516   001446  22DA               	addwfc	fsr2h,f,c
  5517   001448  CFDE F009          	movff	postinc2,___flge@ff1
  5518   00144C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5519   001450  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5520   001454  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5521   001458  C0CC  F00D         	movff	_CR3U,___flge@ff2
  5522   00145C  C0CD  F00E         	movff	_CR3U+1,___flge@ff2+1
  5523   001460  C0CE  F00F         	movff	_CR3U+2,___flge@ff2+2
  5524   001464  C0CF  F010         	movff	_CR3U+3,___flge@ff2+3
  5525   001468  EC42  F018         	call	___flge	;wreg free
  5526   00146C  B0D8               	btfsc	status,0,c
  5527   00146E  EF3B  F00A         	goto	u2811
  5528   001472  EF3D  F00A         	goto	u2810
  5529   001476                     u2811:
  5530   001476  EFDB  F00B         	goto	l3548
  5531   00147A                     u2810:
  5532   00147A  C0C8  F009         	movff	_CR3L,___flge@ff1
  5533   00147E  C0C9  F00A         	movff	_CR3L+1,___flge@ff1+1
  5534   001482  C0CA  F00B         	movff	_CR3L+2,___flge@ff1+2
  5535   001486  C0CB  F00C         	movff	_CR3L+3,___flge@ff1+3
  5536   00148A  EE20 F01C          	lfsr	2,28
  5537   00148E  5027               	movf	motor_response@temp^0,w,c
  5538   001490  26D9               	addwf	fsr2l,f,c
  5539   001492  5028               	movf	(motor_response@temp+1)^0,w,c
  5540   001494  22DA               	addwfc	fsr2h,f,c
  5541   001496  CFDE F00D          	movff	postinc2,___flge@ff2
  5542   00149A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5543   00149E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5544   0014A2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5545   0014A6  EC42  F018         	call	___flge	;wreg free
  5546   0014AA  B0D8               	btfsc	status,0,c
  5547   0014AC  EF5A  F00A         	goto	u2821
  5548   0014B0  EF5C  F00A         	goto	u2820
  5549   0014B4                     u2821:
  5550   0014B4  EFDB  F00B         	goto	l3548
  5551   0014B8                     u2820:
  5552   0014B8                     
  5553                           ;color.c: 227:         if (temp->norm_G > 8) {
  5554   0014B8  0E00               	movlw	0
  5555   0014BA  6E09               	movwf	___flge@ff1^0,c
  5556   0014BC  0E00               	movlw	0
  5557   0014BE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5558   0014C0  0E00               	movlw	0
  5559   0014C2  6E0B               	movwf	(___flge@ff1+2)^0,c
  5560   0014C4  0E41               	movlw	65
  5561   0014C6  6E0C               	movwf	(___flge@ff1+3)^0,c
  5562   0014C8  EE20 F014          	lfsr	2,20
  5563   0014CC  5027               	movf	motor_response@temp^0,w,c
  5564   0014CE  26D9               	addwf	fsr2l,f,c
  5565   0014D0  5028               	movf	(motor_response@temp+1)^0,w,c
  5566   0014D2  22DA               	addwfc	fsr2h,f,c
  5567   0014D4  CFDE F00D          	movff	postinc2,___flge@ff2
  5568   0014D8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5569   0014DC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5570   0014E0  CFDE F010          	movff	postinc2,___flge@ff2+3
  5571   0014E4  EC42  F018         	call	___flge	;wreg free
  5572   0014E8  B0D8               	btfsc	status,0,c
  5573   0014EA  EF79  F00A         	goto	u2831
  5574   0014EE  EF7B  F00A         	goto	u2830
  5575   0014F2                     u2831:
  5576   0014F2  EF9D  F00A         	goto	l3516
  5577   0014F6                     u2830:
  5578   0014F6                     
  5579                           ;color.c: 228:             turnPrep(mL, mR);
  5580   0014F6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5581   0014FA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5582   0014FE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5583   001502  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5584   001506  ECE3  F01B         	call	_turnPrep	;wreg free
  5585                           
  5586                           ;color.c: 229:             turnRight(mL, mR);
  5587   00150A  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5588   00150E  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5589   001512  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5590   001516  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5591   00151A  EC07  F01B         	call	_turnRight	;wreg free
  5592   00151E                     
  5593                           ;color.c: 230:             _delay((unsigned long)((230)*(64000000/4000.0)));
  5594   00151E  0E13               	movlw	19
  5595   001520  6E2E               	movwf	(??_motor_response+1)^0,c
  5596   001522  0EAC               	movlw	172
  5597   001524  6E2D               	movwf	??_motor_response^0,c
  5598   001526  0E2A               	movlw	42
  5599   001528                     u3587:
  5600   001528  2EE8               	decfsz	wreg,f,c
  5601   00152A  D7FE               	bra	u3587
  5602   00152C  2E2D               	decfsz	??_motor_response^0,f,c
  5603   00152E  D7FC               	bra	u3587
  5604   001530  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5605   001532  D7FA               	bra	u3587
  5606   001534                     
  5607                           ;color.c: 231:             return 1;
  5608   001534  0E01               	movlw	1
  5609   001536  EF46  F00D         	goto	l167
  5610   00153A                     l3516:
  5611                           
  5612                           ;color.c: 233:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  5613   00153A  0E00               	movlw	0
  5614   00153C  6E09               	movwf	___flge@ff1^0,c
  5615   00153E  0E00               	movlw	0
  5616   001540  6E0A               	movwf	(___flge@ff1+1)^0,c
  5617   001542  0E90               	movlw	144
  5618   001544  6E0B               	movwf	(___flge@ff1+2)^0,c
  5619   001546  0E40               	movlw	64
  5620   001548  6E0C               	movwf	(___flge@ff1+3)^0,c
  5621   00154A  EE20 F018          	lfsr	2,24
  5622   00154E  5027               	movf	motor_response@temp^0,w,c
  5623   001550  26D9               	addwf	fsr2l,f,c
  5624   001552  5028               	movf	(motor_response@temp+1)^0,w,c
  5625   001554  22DA               	addwfc	fsr2h,f,c
  5626   001556  CFDE F00D          	movff	postinc2,___flge@ff2
  5627   00155A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5628   00155E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5629   001562  CFDE F010          	movff	postinc2,___flge@ff2+3
  5630   001566  EC42  F018         	call	___flge	;wreg free
  5631   00156A  B0D8               	btfsc	status,0,c
  5632   00156C  EFBA  F00A         	goto	u2841
  5633   001570  EFBC  F00A         	goto	u2840
  5634   001574                     u2841:
  5635   001574  EFFE  F00A         	goto	l3528
  5636   001578                     u2840:
  5637   001578  EE20 F018          	lfsr	2,24
  5638   00157C  5027               	movf	motor_response@temp^0,w,c
  5639   00157E  26D9               	addwf	fsr2l,f,c
  5640   001580  5028               	movf	(motor_response@temp+1)^0,w,c
  5641   001582  22DA               	addwfc	fsr2h,f,c
  5642   001584  CFDE F009          	movff	postinc2,___flge@ff1
  5643   001588  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5644   00158C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5645   001590  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5646   001594  0E00               	movlw	0
  5647   001596  6E0D               	movwf	___flge@ff2^0,c
  5648   001598  0E00               	movlw	0
  5649   00159A  6E0E               	movwf	(___flge@ff2+1)^0,c
  5650   00159C  0EB0               	movlw	176
  5651   00159E  6E0F               	movwf	(___flge@ff2+2)^0,c
  5652   0015A0  0E40               	movlw	64
  5653   0015A2  6E10               	movwf	(___flge@ff2+3)^0,c
  5654   0015A4  EC42  F018         	call	___flge	;wreg free
  5655   0015A8  B0D8               	btfsc	status,0,c
  5656   0015AA  EFD9  F00A         	goto	u2851
  5657   0015AE  EFDB  F00A         	goto	u2850
  5658   0015B2                     u2851:
  5659   0015B2  EFFE  F00A         	goto	l3528
  5660   0015B6                     u2850:
  5661   0015B6                     
  5662                           ;color.c: 234:             turnPrep(mL, mR);
  5663   0015B6  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5664   0015BA  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5665   0015BE  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5666   0015C2  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5667   0015C6  ECE3  F01B         	call	_turnPrep	;wreg free
  5668                           
  5669                           ;color.c: 235:             turnLeft(mL, mR);
  5670   0015CA  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5671   0015CE  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5672   0015D2  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5673   0015D6  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5674   0015DA  EC40  F01B         	call	_turnLeft	;wreg free
  5675   0015DE                     
  5676                           ;color.c: 236:             _delay((unsigned long)((215)*(64000000/4000.0)));
  5677   0015DE  0E12               	movlw	18
  5678   0015E0  6E2E               	movwf	(??_motor_response+1)^0,c
  5679   0015E2  0E74               	movlw	116
  5680   0015E4  6E2D               	movwf	??_motor_response^0,c
  5681   0015E6  0E7A               	movlw	122
  5682   0015E8                     u3597:
  5683   0015E8  2EE8               	decfsz	wreg,f,c
  5684   0015EA  D7FE               	bra	u3597
  5685   0015EC  2E2D               	decfsz	??_motor_response^0,f,c
  5686   0015EE  D7FC               	bra	u3597
  5687   0015F0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5688   0015F2  D7FA               	bra	u3597
  5689   0015F4  D000               	nop2	
  5690   0015F6                     
  5691                           ;color.c: 237:             return 2;
  5692   0015F6  0E02               	movlw	2
  5693   0015F8  EF46  F00D         	goto	l167
  5694   0015FC                     l3528:
  5695                           
  5696                           ;color.c: 239:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  5697   0015FC  0ECD               	movlw	205
  5698   0015FE  6E09               	movwf	___flge@ff1^0,c
  5699   001600  0ECC               	movlw	204
  5700   001602  6E0A               	movwf	(___flge@ff1+1)^0,c
  5701   001604  0E2C               	movlw	44
  5702   001606  6E0B               	movwf	(___flge@ff1+2)^0,c
  5703   001608  0E40               	movlw	64
  5704   00160A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5705   00160C  EE20 F018          	lfsr	2,24
  5706   001610  5027               	movf	motor_response@temp^0,w,c
  5707   001612  26D9               	addwf	fsr2l,f,c
  5708   001614  5028               	movf	(motor_response@temp+1)^0,w,c
  5709   001616  22DA               	addwfc	fsr2h,f,c
  5710   001618  CFDE F00D          	movff	postinc2,___flge@ff2
  5711   00161C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5712   001620  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5713   001624  CFDE F010          	movff	postinc2,___flge@ff2+3
  5714   001628  EC42  F018         	call	___flge	;wreg free
  5715   00162C  B0D8               	btfsc	status,0,c
  5716   00162E  EF1B  F00B         	goto	u2861
  5717   001632  EF1D  F00B         	goto	u2860
  5718   001636                     u2861:
  5719   001636  EFDB  F00B         	goto	l3548
  5720   00163A                     u2860:
  5721   00163A  EE20 F018          	lfsr	2,24
  5722   00163E  5027               	movf	motor_response@temp^0,w,c
  5723   001640  26D9               	addwf	fsr2l,f,c
  5724   001642  5028               	movf	(motor_response@temp+1)^0,w,c
  5725   001644  22DA               	addwfc	fsr2h,f,c
  5726   001646  CFDE F009          	movff	postinc2,___flge@ff1
  5727   00164A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5728   00164E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5729   001652  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5730   001656  0E33               	movlw	51
  5731   001658  6E0D               	movwf	___flge@ff2^0,c
  5732   00165A  0E33               	movlw	51
  5733   00165C  6E0E               	movwf	(___flge@ff2+1)^0,c
  5734   00165E  0E53               	movlw	83
  5735   001660  6E0F               	movwf	(___flge@ff2+2)^0,c
  5736   001662  0E40               	movlw	64
  5737   001664  6E10               	movwf	(___flge@ff2+3)^0,c
  5738   001666  EC42  F018         	call	___flge	;wreg free
  5739   00166A  B0D8               	btfsc	status,0,c
  5740   00166C  EF3A  F00B         	goto	u2871
  5741   001670  EF3C  F00B         	goto	u2870
  5742   001674                     u2871:
  5743   001674  EFDB  F00B         	goto	l3548
  5744   001678                     u2870:
  5745   001678  0ECD               	movlw	205
  5746   00167A  6E09               	movwf	___flge@ff1^0,c
  5747   00167C  0ECC               	movlw	204
  5748   00167E  6E0A               	movwf	(___flge@ff1+1)^0,c
  5749   001680  0E2C               	movlw	44
  5750   001682  6E0B               	movwf	(___flge@ff1+2)^0,c
  5751   001684  0E40               	movlw	64
  5752   001686  6E0C               	movwf	(___flge@ff1+3)^0,c
  5753   001688  EE20 F010          	lfsr	2,16
  5754   00168C  5027               	movf	motor_response@temp^0,w,c
  5755   00168E  26D9               	addwf	fsr2l,f,c
  5756   001690  5028               	movf	(motor_response@temp+1)^0,w,c
  5757   001692  22DA               	addwfc	fsr2h,f,c
  5758   001694  CFDE F00D          	movff	postinc2,___flge@ff2
  5759   001698  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5760   00169C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5761   0016A0  CFDE F010          	movff	postinc2,___flge@ff2+3
  5762   0016A4  EC42  F018         	call	___flge	;wreg free
  5763   0016A8  B0D8               	btfsc	status,0,c
  5764   0016AA  EF59  F00B         	goto	u2881
  5765   0016AE  EF5B  F00B         	goto	u2880
  5766   0016B2                     u2881:
  5767   0016B2  EFDB  F00B         	goto	l3548
  5768   0016B6                     u2880:
  5769   0016B6  EE20 F010          	lfsr	2,16
  5770   0016BA  5027               	movf	motor_response@temp^0,w,c
  5771   0016BC  26D9               	addwf	fsr2l,f,c
  5772   0016BE  5028               	movf	(motor_response@temp+1)^0,w,c
  5773   0016C0  22DA               	addwfc	fsr2h,f,c
  5774   0016C2  CFDE F009          	movff	postinc2,___flge@ff1
  5775   0016C6  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5776   0016CA  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5777   0016CE  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5778   0016D2  0E33               	movlw	51
  5779   0016D4  6E0D               	movwf	___flge@ff2^0,c
  5780   0016D6  0E33               	movlw	51
  5781   0016D8  6E0E               	movwf	(___flge@ff2+1)^0,c
  5782   0016DA  0E53               	movlw	83
  5783   0016DC  6E0F               	movwf	(___flge@ff2+2)^0,c
  5784   0016DE  0E40               	movlw	64
  5785   0016E0  6E10               	movwf	(___flge@ff2+3)^0,c
  5786   0016E2  EC42  F018         	call	___flge	;wreg free
  5787   0016E6  B0D8               	btfsc	status,0,c
  5788   0016E8  EF78  F00B         	goto	u2891
  5789   0016EC  EF7A  F00B         	goto	u2890
  5790   0016F0                     u2891:
  5791   0016F0  EFDB  F00B         	goto	l3548
  5792   0016F4                     u2890:
  5793   0016F4  0ECD               	movlw	205
  5794   0016F6  6E09               	movwf	___flge@ff1^0,c
  5795   0016F8  0ECC               	movlw	204
  5796   0016FA  6E0A               	movwf	(___flge@ff1+1)^0,c
  5797   0016FC  0E2C               	movlw	44
  5798   0016FE  6E0B               	movwf	(___flge@ff1+2)^0,c
  5799   001700  0E40               	movlw	64
  5800   001702  6E0C               	movwf	(___flge@ff1+3)^0,c
  5801   001704  EE20 F014          	lfsr	2,20
  5802   001708  5027               	movf	motor_response@temp^0,w,c
  5803   00170A  26D9               	addwf	fsr2l,f,c
  5804   00170C  5028               	movf	(motor_response@temp+1)^0,w,c
  5805   00170E  22DA               	addwfc	fsr2h,f,c
  5806   001710  CFDE F00D          	movff	postinc2,___flge@ff2
  5807   001714  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5808   001718  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5809   00171C  CFDE F010          	movff	postinc2,___flge@ff2+3
  5810   001720  EC42  F018         	call	___flge	;wreg free
  5811   001724  B0D8               	btfsc	status,0,c
  5812   001726  EF97  F00B         	goto	u2901
  5813   00172A  EF99  F00B         	goto	u2900
  5814   00172E                     u2901:
  5815   00172E  EFDB  F00B         	goto	l3548
  5816   001732                     u2900:
  5817   001732  EE20 F014          	lfsr	2,20
  5818   001736  5027               	movf	motor_response@temp^0,w,c
  5819   001738  26D9               	addwf	fsr2l,f,c
  5820   00173A  5028               	movf	(motor_response@temp+1)^0,w,c
  5821   00173C  22DA               	addwfc	fsr2h,f,c
  5822   00173E  CFDE F009          	movff	postinc2,___flge@ff1
  5823   001742  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5824   001746  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5825   00174A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5826   00174E  0E33               	movlw	51
  5827   001750  6E0D               	movwf	___flge@ff2^0,c
  5828   001752  0E33               	movlw	51
  5829   001754  6E0E               	movwf	(___flge@ff2+1)^0,c
  5830   001756  0E53               	movlw	83
  5831   001758  6E0F               	movwf	(___flge@ff2+2)^0,c
  5832   00175A  0E40               	movlw	64
  5833   00175C  6E10               	movwf	(___flge@ff2+3)^0,c
  5834   00175E  EC42  F018         	call	___flge	;wreg free
  5835   001762  B0D8               	btfsc	status,0,c
  5836   001764  EFB6  F00B         	goto	u2911
  5837   001768  EFB8  F00B         	goto	u2910
  5838   00176C                     u2911:
  5839   00176C  EFDB  F00B         	goto	l3548
  5840   001770                     u2910:
  5841   001770                     
  5842                           ;color.c: 240:             turnPrep(mL, mR);
  5843   001770  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5844   001774  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5845   001778  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5846   00177C  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5847   001780  ECE3  F01B         	call	_turnPrep	;wreg free
  5848                           
  5849                           ;color.c: 241:             turnLeft(mL, mR);
  5850   001784  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5851   001788  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5852   00178C  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5853   001790  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5854   001794  EC40  F01B         	call	_turnLeft	;wreg free
  5855   001798                     
  5856                           ;color.c: 242:             _delay((unsigned long)((400)*(64000000/4000.0)));
  5857   001798  0E21               	movlw	33
  5858   00179A  6E2E               	movwf	(??_motor_response+1)^0,c
  5859   00179C  0E78               	movlw	120
  5860   00179E  6E2D               	movwf	??_motor_response^0,c
  5861   0017A0  0E98               	movlw	152
  5862   0017A2                     u3607:
  5863   0017A2  2EE8               	decfsz	wreg,f,c
  5864   0017A4  D7FE               	bra	u3607
  5865   0017A6  2E2D               	decfsz	??_motor_response^0,f,c
  5866   0017A8  D7FC               	bra	u3607
  5867   0017AA  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5868   0017AC  D7FA               	bra	u3607
  5869   0017AE  D000               	nop2	
  5870   0017B0                     
  5871                           ;color.c: 243:             return 3;
  5872   0017B0  0E03               	movlw	3
  5873   0017B2  EF46  F00D         	goto	l167
  5874   0017B6                     l3548:
  5875                           
  5876                           ;color.c: 246:     if (temp->norm_C > CR1L) {
  5877   0017B6  C047  F009         	movff	_CR1L,___flge@ff1
  5878   0017BA  C048  F00A         	movff	_CR1L+1,___flge@ff1+1
  5879   0017BE  C049  F00B         	movff	_CR1L+2,___flge@ff1+2
  5880   0017C2  C04A  F00C         	movff	_CR1L+3,___flge@ff1+3
  5881   0017C6  EE20 F01C          	lfsr	2,28
  5882   0017CA  5027               	movf	motor_response@temp^0,w,c
  5883   0017CC  26D9               	addwf	fsr2l,f,c
  5884   0017CE  5028               	movf	(motor_response@temp+1)^0,w,c
  5885   0017D0  22DA               	addwfc	fsr2h,f,c
  5886   0017D2  CFDE F00D          	movff	postinc2,___flge@ff2
  5887   0017D6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5888   0017DA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5889   0017DE  CFDE F010          	movff	postinc2,___flge@ff2+3
  5890   0017E2  EC42  F018         	call	___flge	;wreg free
  5891   0017E6  B0D8               	btfsc	status,0,c
  5892   0017E8  EFF8  F00B         	goto	u2921
  5893   0017EC  EFFA  F00B         	goto	u2920
  5894   0017F0                     u2921:
  5895   0017F0  EFA4  F00C         	goto	l3584
  5896   0017F4                     u2920:
  5897   0017F4                     
  5898                           ;color.c: 247:         if (temp->norm_B > 5) {
  5899   0017F4  0E00               	movlw	0
  5900   0017F6  6E09               	movwf	___flge@ff1^0,c
  5901   0017F8  0E00               	movlw	0
  5902   0017FA  6E0A               	movwf	(___flge@ff1+1)^0,c
  5903   0017FC  0EA0               	movlw	160
  5904   0017FE  6E0B               	movwf	(___flge@ff1+2)^0,c
  5905   001800  0E40               	movlw	64
  5906   001802  6E0C               	movwf	(___flge@ff1+3)^0,c
  5907   001804  EE20 F018          	lfsr	2,24
  5908   001808  5027               	movf	motor_response@temp^0,w,c
  5909   00180A  26D9               	addwf	fsr2l,f,c
  5910   00180C  5028               	movf	(motor_response@temp+1)^0,w,c
  5911   00180E  22DA               	addwfc	fsr2h,f,c
  5912   001810  CFDE F00D          	movff	postinc2,___flge@ff2
  5913   001814  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5914   001818  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5915   00181C  CFDE F010          	movff	postinc2,___flge@ff2+3
  5916   001820  EC42  F018         	call	___flge	;wreg free
  5917   001824  B0D8               	btfsc	status,0,c
  5918   001826  EF17  F00C         	goto	u2931
  5919   00182A  EF19  F00C         	goto	u2930
  5920   00182E                     u2931:
  5921   00182E  EF5E  F00C         	goto	l3566
  5922   001832                     u2930:
  5923   001832                     
  5924                           ;color.c: 248:             reverse(mL, mR);
  5925   001832  C029  F01C         	movff	motor_response@mL,reverse@mL
  5926   001836  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5927   00183A  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5928   00183E  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5929   001842  ECC4  F018         	call	_reverse	;wreg free
  5930   001846                     
  5931                           ;color.c: 249:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5932   001846  0EF4               	movlw	244
  5933   001848  6E2E               	movwf	(??_motor_response+1)^0,c
  5934   00184A  0E82               	movlw	130
  5935   00184C  6E2D               	movwf	??_motor_response^0,c
  5936   00184E  0E05               	movlw	5
  5937   001850                     u3617:
  5938   001850  2EE8               	decfsz	wreg,f,c
  5939   001852  D7FE               	bra	u3617
  5940   001854  2E2D               	decfsz	??_motor_response^0,f,c
  5941   001856  D7FC               	bra	u3617
  5942   001858  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5943   00185A  D7FA               	bra	u3617
  5944   00185C  F000               	nop	
  5945   00185E                     
  5946                           ;color.c: 250:             norm_stop(mL, mR);
  5947   00185E  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5948   001862  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5949   001866  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5950   00186A  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5951   00186E  EC10  F01D         	call	_norm_stop	;wreg free
  5952                           
  5953                           ;color.c: 251:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5954   001872  0E09               	movlw	9
  5955   001874  6E2E               	movwf	(??_motor_response+1)^0,c
  5956   001876  0E1E               	movlw	30
  5957   001878  6E2D               	movwf	??_motor_response^0,c
  5958   00187A  0EE4               	movlw	228
  5959   00187C                     u3627:
  5960   00187C  2EE8               	decfsz	wreg,f,c
  5961   00187E  D7FE               	bra	u3627
  5962   001880  2E2D               	decfsz	??_motor_response^0,f,c
  5963   001882  D7FC               	bra	u3627
  5964   001884  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5965   001886  D7FA               	bra	u3627
  5966   001888  D000               	nop2	
  5967   00188A                     
  5968                           ;color.c: 252:             turnRight(mL, mR);
  5969   00188A  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5970   00188E  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5971   001892  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5972   001896  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5973   00189A  EC07  F01B         	call	_turnRight	;wreg free
  5974   00189E                     
  5975                           ;color.c: 253:             _delay((unsigned long)((215)*(64000000/4000.0)));
  5976   00189E  0E12               	movlw	18
  5977   0018A0  6E2E               	movwf	(??_motor_response+1)^0,c
  5978   0018A2  0E74               	movlw	116
  5979   0018A4  6E2D               	movwf	??_motor_response^0,c
  5980   0018A6  0E7A               	movlw	122
  5981   0018A8                     u3637:
  5982   0018A8  2EE8               	decfsz	wreg,f,c
  5983   0018AA  D7FE               	bra	u3637
  5984   0018AC  2E2D               	decfsz	??_motor_response^0,f,c
  5985   0018AE  D7FC               	bra	u3637
  5986   0018B0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5987   0018B2  D7FA               	bra	u3637
  5988   0018B4  D000               	nop2	
  5989   0018B6                     
  5990                           ;color.c: 254:             return 4;
  5991   0018B6  0E04               	movlw	4
  5992   0018B8  EF46  F00D         	goto	l167
  5993   0018BC                     l3566:
  5994                           
  5995                           ;color.c: 257:         if (temp->norm_B < 5) {
  5996   0018BC  EE20 F018          	lfsr	2,24
  5997   0018C0  5027               	movf	motor_response@temp^0,w,c
  5998   0018C2  26D9               	addwf	fsr2l,f,c
  5999   0018C4  5028               	movf	(motor_response@temp+1)^0,w,c
  6000   0018C6  22DA               	addwfc	fsr2h,f,c
  6001   0018C8  CFDE F009          	movff	postinc2,___flge@ff1
  6002   0018CC  CFDE F00A          	movff	postinc2,___flge@ff1+1
  6003   0018D0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  6004   0018D4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  6005   0018D8  0E00               	movlw	0
  6006   0018DA  6E0D               	movwf	___flge@ff2^0,c
  6007   0018DC  0E00               	movlw	0
  6008   0018DE  6E0E               	movwf	(___flge@ff2+1)^0,c
  6009   0018E0  0EA0               	movlw	160
  6010   0018E2  6E0F               	movwf	(___flge@ff2+2)^0,c
  6011   0018E4  0E40               	movlw	64
  6012   0018E6  6E10               	movwf	(___flge@ff2+3)^0,c
  6013   0018E8  EC42  F018         	call	___flge	;wreg free
  6014   0018EC  B0D8               	btfsc	status,0,c
  6015   0018EE  EF7B  F00C         	goto	u2941
  6016   0018F2  EF7D  F00C         	goto	u2940
  6017   0018F6                     u2941:
  6018   0018F6  EF46  F00D         	goto	l167
  6019   0018FA                     u2940:
  6020   0018FA                     
  6021                           ;color.c: 259:             motor_return = 1;
  6022   0018FA  0E01               	movlw	1
  6023   0018FC  0100               	movlb	0	; () banked
  6024   0018FE  6FDA               	movwf	_motor_return& (0+255),b
  6025   001900                     
  6026                           ; BSR set to: 0
  6027                           ;color.c: 260:             LATDbits.LATD4 = 1;
  6028   001900  887C               	bsf	124,4,c	;volatile
  6029   001902                     
  6030                           ; BSR set to: 0
  6031                           ;color.c: 261:             turnPrep(mL, mR);
  6032   001902  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6033   001906  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6034   00190A  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6035   00190E  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6036   001912  ECE3  F01B         	call	_turnPrep	;wreg free
  6037   001916                     
  6038                           ;color.c: 262:             turnLeft(mL, mR);
  6039   001916  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6040   00191A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6041   00191E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6042   001922  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6043   001926  EC40  F01B         	call	_turnLeft	;wreg free
  6044   00192A                     
  6045                           ;color.c: 263:             _delay((unsigned long)((430)*(64000000/4000.0)));
  6046   00192A  0E23               	movlw	35
  6047   00192C  6E2E               	movwf	(??_motor_response+1)^0,c
  6048   00192E  0EE7               	movlw	231
  6049   001930  6E2D               	movwf	??_motor_response^0,c
  6050   001932  0EF8               	movlw	248
  6051   001934                     u3647:
  6052   001934  2EE8               	decfsz	wreg,f,c
  6053   001936  D7FE               	bra	u3647
  6054   001938  2E2D               	decfsz	??_motor_response^0,f,c
  6055   00193A  D7FC               	bra	u3647
  6056   00193C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6057   00193E  D7FA               	bra	u3647
  6058   001940                     
  6059                           ;color.c: 264:             LATHbits.LATH3 = 0;
  6060   001940  9680               	bcf	128,3,c	;volatile
  6061   001942                     
  6062                           ;color.c: 265:             return 8;
  6063   001942  0E08               	movlw	8
  6064   001944  EF46  F00D         	goto	l167
  6065   001948                     l3584:
  6066                           
  6067                           ;color.c: 269:         if (lost_ctr < 2) {
  6068   001948  BE50               	btfsc	(_lost_ctr+1)^0,7,c
  6069   00194A  EFB2  F00C         	goto	u2950
  6070   00194E  5050               	movf	(_lost_ctr+1)^0,w,c
  6071   001950  E107               	bnz	u2951
  6072   001952  0E02               	movlw	2
  6073   001954  5C4F               	subwf	_lost_ctr^0,w,c
  6074   001956  B0D8               	btfsc	status,0,c
  6075   001958  EFB0  F00C         	goto	u2951
  6076   00195C  EFB2  F00C         	goto	u2950
  6077   001960                     u2951:
  6078   001960  EFB6  F00C         	goto	l3588
  6079   001964                     u2950:
  6080   001964                     
  6081                           ;color.c: 270:             lost_ctr++;
  6082   001964  4A4F               	infsnz	_lost_ctr^0,f,c
  6083   001966  2A50               	incf	(_lost_ctr+1)^0,f,c
  6084                           
  6085                           ;color.c: 271:         } else {
  6086   001968  EF46  F00D         	goto	l167
  6087   00196C                     l3588:
  6088                           
  6089                           ;color.c: 272:             turnPrep(mL, mR);
  6090   00196C  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6091   001970  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6092   001974  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6093   001978  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6094   00197C  ECE3  F01B         	call	_turnPrep	;wreg free
  6095   001980                     
  6096                           ;color.c: 274:             for (int j = 0; j <= 75; j++) {
  6097   001980  0E00               	movlw	0
  6098   001982  6E30               	movwf	(motor_response@j+1)^0,c
  6099   001984  0E00               	movlw	0
  6100   001986  6E2F               	movwf	motor_response@j^0,c
  6101   001988  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6102   00198A  EFD0  F00C         	goto	u2961
  6103   00198E  5030               	movf	(motor_response@j+1)^0,w,c
  6104   001990  E109               	bnz	u2960
  6105   001992  0E4C               	movlw	76
  6106   001994  5C2F               	subwf	motor_response@j^0,w,c
  6107   001996  A0D8               	btfss	status,0,c
  6108   001998  EFD0  F00C         	goto	u2961
  6109   00199C  EFD2  F00C         	goto	u2960
  6110   0019A0                     u2961:
  6111   0019A0  EFD4  F00C         	goto	l3596
  6112   0019A4                     u2960:
  6113   0019A4  EF0F  F00D         	goto	l3604
  6114   0019A8                     l3596:
  6115                           
  6116                           ;color.c: 275:                 turnLeft(mL, mR);
  6117   0019A8  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6118   0019AC  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6119   0019B0  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6120   0019B4  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6121   0019B8  EC40  F01B         	call	_turnLeft	;wreg free
  6122   0019BC                     
  6123                           ;color.c: 276:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  6124   0019BC  0E03               	movlw	3
  6125   0019BE  6E2E               	movwf	(??_motor_response+1)^0,c
  6126   0019C0  0E70               	movlw	112
  6127   0019C2  6E2D               	movwf	??_motor_response^0,c
  6128   0019C4  0E5C               	movlw	92
  6129   0019C6                     u3657:
  6130   0019C6  2EE8               	decfsz	wreg,f,c
  6131   0019C8  D7FE               	bra	u3657
  6132   0019CA  2E2D               	decfsz	??_motor_response^0,f,c
  6133   0019CC  D7FC               	bra	u3657
  6134   0019CE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6135   0019D0  D7FA               	bra	u3657
  6136   0019D2  D000               	nop2	
  6137   0019D4                     
  6138                           ;color.c: 277:                 norm_stop(mL, mR);
  6139   0019D4  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6140   0019D8  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6141   0019DC  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6142   0019E0  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6143   0019E4  EC10  F01D         	call	_norm_stop	;wreg free
  6144                           
  6145                           ;color.c: 278:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  6146   0019E8  0E05               	movlw	5
  6147   0019EA  6E2E               	movwf	(??_motor_response+1)^0,c
  6148   0019EC  0EDF               	movlw	223
  6149   0019EE  6E2D               	movwf	??_motor_response^0,c
  6150   0019F0  0EBC               	movlw	188
  6151   0019F2                     u3667:
  6152   0019F2  2EE8               	decfsz	wreg,f,c
  6153   0019F4  D7FE               	bra	u3667
  6154   0019F6  2E2D               	decfsz	??_motor_response^0,f,c
  6155   0019F8  D7FC               	bra	u3667
  6156   0019FA  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6157   0019FC  D7FA               	bra	u3667
  6158   0019FE                     
  6159                           ;color.c: 279:             }
  6160   0019FE  4A2F               	infsnz	motor_response@j^0,f,c
  6161   001A00  2A30               	incf	(motor_response@j+1)^0,f,c
  6162   001A02  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6163   001A04  EF0D  F00D         	goto	u2971
  6164   001A08  5030               	movf	(motor_response@j+1)^0,w,c
  6165   001A0A  E109               	bnz	u2970
  6166   001A0C  0E4C               	movlw	76
  6167   001A0E  5C2F               	subwf	motor_response@j^0,w,c
  6168   001A10  A0D8               	btfss	status,0,c
  6169   001A12  EF0D  F00D         	goto	u2971
  6170   001A16  EF0F  F00D         	goto	u2970
  6171   001A1A                     u2971:
  6172   001A1A  EFD4  F00C         	goto	l3596
  6173   001A1E                     u2970:
  6174   001A1E                     l3604:
  6175                           
  6176                           ;color.c: 280:             turnLeft(mL, mR);
  6177   001A1E  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6178   001A22  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6179   001A26  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6180   001A2A  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6181   001A2E  EC40  F01B         	call	_turnLeft	;wreg free
  6182   001A32                     
  6183                           ;color.c: 281:             _delay((unsigned long)((400)*(64000000/4000.0)));
  6184   001A32  0E21               	movlw	33
  6185   001A34  6E2E               	movwf	(??_motor_response+1)^0,c
  6186   001A36  0E78               	movlw	120
  6187   001A38  6E2D               	movwf	??_motor_response^0,c
  6188   001A3A  0E98               	movlw	152
  6189   001A3C                     u3677:
  6190   001A3C  2EE8               	decfsz	wreg,f,c
  6191   001A3E  D7FE               	bra	u3677
  6192   001A40  2E2D               	decfsz	??_motor_response^0,f,c
  6193   001A42  D7FC               	bra	u3677
  6194   001A44  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6195   001A46  D7FA               	bra	u3677
  6196   001A48  D000               	nop2	
  6197   001A4A                     
  6198                           ;color.c: 282:             norm_stop(mL, mR);
  6199   001A4A  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6200   001A4E  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6201   001A52  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6202   001A56  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6203   001A5A  EC10  F01D         	call	_norm_stop	;wreg free
  6204                           
  6205                           ;color.c: 283:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  6206   001A5E  0E52               	movlw	82
  6207   001A60  6E2E               	movwf	(??_motor_response+1)^0,c
  6208   001A62  0E2B               	movlw	43
  6209   001A64  6E2D               	movwf	??_motor_response^0,c
  6210   001A66  0E00               	movlw	0
  6211   001A68                     u3687:
  6212   001A68  2EE8               	decfsz	wreg,f,c
  6213   001A6A  D7FE               	bra	u3687
  6214   001A6C  2E2D               	decfsz	??_motor_response^0,f,c
  6215   001A6E  D7FC               	bra	u3687
  6216   001A70  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6217   001A72  D7FA               	bra	u3687
  6218   001A74  D000               	nop2	
  6219   001A76                     
  6220                           ;color.c: 284:             motor_return = 1;
  6221   001A76  0E01               	movlw	1
  6222   001A78  0100               	movlb	0	; () banked
  6223   001A7A  6FDA               	movwf	_motor_return& (0+255),b
  6224   001A7C                     
  6225                           ; BSR set to: 0
  6226                           ;color.c: 285:             buggy_step--;
  6227   001A7C  0651               	decf	_buggy_step^0,f,c
  6228   001A7E  A0D8               	btfss	status,0,c
  6229   001A80  0652               	decf	(_buggy_step+1)^0,f,c
  6230   001A82                     
  6231                           ; BSR set to: 0
  6232                           ;color.c: 286:             lost_ctr = 0;
  6233   001A82  0E00               	movlw	0
  6234   001A84  6E50               	movwf	(_lost_ctr+1)^0,c
  6235   001A86  0E00               	movlw	0
  6236   001A88  6E4F               	movwf	_lost_ctr^0,c
  6237   001A8A                     
  6238                           ; BSR set to: 0
  6239                           ;color.c: 287:             return 9;
  6240   001A8A  0E09               	movlw	9
  6241   001A8C                     l167:
  6242   001A8C  0012               	return		;funcret
  6243   001A8E                     __end_of_motor_response:
  6244                           	callstack 0
  6245                           
  6246 ;; *************** function _turnRight *****************
  6247 ;; Defined at:
  6248 ;;		line 144 in file "dc_motor.c"
  6249 ;; Parameters:    Size  Location     Type
  6250 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6251 ;;		 -> main@mL(9), 
  6252 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6253 ;;		 -> main@mR(9), 
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6268 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6269 ;;Total ram usage:        4 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 8
  6272 ;; This function calls:
  6273 ;;		_setMotorPWM
  6274 ;; This function is called by:
  6275 ;;		_motor_response
  6276 ;;		_motor_retrace
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           	psect	text22
  6281   00360E                     __ptext22:
  6282                           	callstack 0
  6283   00360E                     _turnRight:
  6284                           	callstack 21
  6285   00360E                     
  6286                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  6287   00360E  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6288   003612  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6289   003616  0E3C               	movlw	60
  6290   003618  6EDF               	movwf	indf2,c
  6291                           
  6292                           ;dc_motor.c: 147:     mR->power = 60;
  6293   00361A  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6294   00361E  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6295   003622  0E3C               	movlw	60
  6296   003624  6EDF               	movwf	indf2,c
  6297   003626                     
  6298                           ;dc_motor.c: 148:     mL->brakemode = 1;
  6299   003626  EE20 F002          	lfsr	2,2
  6300   00362A  501C               	movf	turnRight@mL^0,w,c
  6301   00362C  26D9               	addwf	fsr2l,f,c
  6302   00362E  501D               	movf	(turnRight@mL+1)^0,w,c
  6303   003630  22DA               	addwfc	fsr2h,f,c
  6304   003632  0E01               	movlw	1
  6305   003634  6EDF               	movwf	indf2,c
  6306   003636                     
  6307                           ;dc_motor.c: 149:     mR->brakemode = 1;
  6308   003636  EE20 F002          	lfsr	2,2
  6309   00363A  501E               	movf	turnRight@mR^0,w,c
  6310   00363C  26D9               	addwf	fsr2l,f,c
  6311   00363E  501F               	movf	(turnRight@mR+1)^0,w,c
  6312   003640  22DA               	addwfc	fsr2h,f,c
  6313   003642  0E01               	movlw	1
  6314   003644  6EDF               	movwf	indf2,c
  6315   003646                     
  6316                           ;dc_motor.c: 150:     mR->direction = 0;
  6317   003646  EE20 F001          	lfsr	2,1
  6318   00364A  501E               	movf	turnRight@mR^0,w,c
  6319   00364C  26D9               	addwf	fsr2l,f,c
  6320   00364E  501F               	movf	(turnRight@mR+1)^0,w,c
  6321   003650  22DA               	addwfc	fsr2h,f,c
  6322   003652  0E00               	movlw	0
  6323   003654  6EDF               	movwf	indf2,c
  6324   003656                     
  6325                           ;dc_motor.c: 151:     mL->direction = 1;
  6326   003656  EE20 F001          	lfsr	2,1
  6327   00365A  501C               	movf	turnRight@mL^0,w,c
  6328   00365C  26D9               	addwf	fsr2l,f,c
  6329   00365E  501D               	movf	(turnRight@mL+1)^0,w,c
  6330   003660  22DA               	addwfc	fsr2h,f,c
  6331   003662  0E01               	movlw	1
  6332   003664  6EDF               	movwf	indf2,c
  6333   003666                     
  6334                           ;dc_motor.c: 152:     setMotorPWM(mL);
  6335   003666  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  6336   00366A  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  6337   00366E  EC8C  F017         	call	_setMotorPWM	;wreg free
  6338   003672                     
  6339                           ;dc_motor.c: 153:     setMotorPWM(mR);
  6340   003672  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  6341   003676  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  6342   00367A  EC8C  F017         	call	_setMotorPWM	;wreg free
  6343   00367E  0012               	return		;funcret
  6344   003680                     __end_of_turnRight:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _turnPrep *****************
  6348 ;; Defined at:
  6349 ;;		line 245 in file "dc_motor.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6352 ;;		 -> main@mL(9), 
  6353 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6354 ;;		 -> main@mR(9), 
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6370 ;;Total ram usage:        6 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 9
  6373 ;; This function calls:
  6374 ;;		_norm_stop
  6375 ;;		_reverse
  6376 ;; This function is called by:
  6377 ;;		_motor_response
  6378 ;;		_motor_retrace
  6379 ;; This function uses a non-reentrant model
  6380 ;;
  6381                           
  6382                           	psect	text23
  6383   0037C6                     __ptext23:
  6384                           	callstack 0
  6385   0037C6                     _turnPrep:
  6386                           	callstack 20
  6387   0037C6                     
  6388                           ;dc_motor.c: 246:         reverse(mL, mR);
  6389   0037C6  C021  F01C         	movff	turnPrep@mL,reverse@mL
  6390   0037CA  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  6391   0037CE  C023  F01E         	movff	turnPrep@mR,reverse@mR
  6392   0037D2  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  6393   0037D6  ECC4  F018         	call	_reverse	;wreg free
  6394   0037DA                     
  6395                           ;dc_motor.c: 247:         _delay((unsigned long)((600)*(64000000/4000.0)));
  6396   0037DA  0E31               	movlw	49
  6397   0037DC  6E26               	movwf	(??_turnPrep+1)^0,c
  6398   0037DE  0EB4               	movlw	180
  6399   0037E0  6E25               	movwf	??_turnPrep^0,c
  6400   0037E2  0E66               	movlw	102
  6401   0037E4                     u3697:
  6402   0037E4  2EE8               	decfsz	wreg,f,c
  6403   0037E6  D7FE               	bra	u3697
  6404   0037E8  2E25               	decfsz	??_turnPrep^0,f,c
  6405   0037EA  D7FC               	bra	u3697
  6406   0037EC  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6407   0037EE  D7FA               	bra	u3697
  6408   0037F0                     
  6409                           ;dc_motor.c: 248:         norm_stop(mL, mR);
  6410   0037F0  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  6411   0037F4  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  6412   0037F8  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  6413   0037FC  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  6414   003800  EC10  F01D         	call	_norm_stop	;wreg free
  6415                           
  6416                           ;dc_motor.c: 249:         _delay((unsigned long)((300)*(64000000/4000.0)));
  6417   003804  0E19               	movlw	25
  6418   003806  6E26               	movwf	(??_turnPrep+1)^0,c
  6419   003808  0E5A               	movlw	90
  6420   00380A  6E25               	movwf	??_turnPrep^0,c
  6421   00380C  0EB2               	movlw	178
  6422   00380E                     u3707:
  6423   00380E  2EE8               	decfsz	wreg,f,c
  6424   003810  D7FE               	bra	u3707
  6425   003812  2E25               	decfsz	??_turnPrep^0,f,c
  6426   003814  D7FC               	bra	u3707
  6427   003816  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6428   003818  D7FA               	bra	u3707
  6429   00381A  0012               	return		;funcret
  6430   00381C                     __end_of_turnPrep:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _reverse *****************
  6434 ;; Defined at:
  6435 ;;		line 222 in file "dc_motor.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6438 ;;		 -> main@mL(9), 
  6439 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6440 ;;		 -> main@mR(9), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6452 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6455 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6456 ;;Total ram usage:        5 bytes
  6457 ;; Hardware stack levels used: 1
  6458 ;; Hardware stack levels required when called: 8
  6459 ;; This function calls:
  6460 ;;		_setMotorPWM
  6461 ;; This function is called by:
  6462 ;;		_motor_response
  6463 ;;		_turnPrep
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           
  6467                           	psect	text24
  6468   003188                     __ptext24:
  6469                           	callstack 0
  6470   003188                     _reverse:
  6471                           	callstack 20
  6472   003188                     
  6473                           ;dc_motor.c: 222: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 223: {;dc_motor.c
      +                          : 224:     mL->power = 5;
  6474   003188  C01C  FFD9         	movff	reverse@mL,fsr2l
  6475   00318C  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6476   003190  0E05               	movlw	5
  6477   003192  6EDF               	movwf	indf2,c
  6478                           
  6479                           ;dc_motor.c: 225:     mR->power = 5;
  6480   003194  C01E  FFD9         	movff	reverse@mR,fsr2l
  6481   003198  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6482   00319C  0E05               	movlw	5
  6483   00319E  6EDF               	movwf	indf2,c
  6484   0031A0                     
  6485                           ;dc_motor.c: 226:     mR->direction = 0;
  6486   0031A0  EE20 F001          	lfsr	2,1
  6487   0031A4  501E               	movf	reverse@mR^0,w,c
  6488   0031A6  26D9               	addwf	fsr2l,f,c
  6489   0031A8  501F               	movf	(reverse@mR+1)^0,w,c
  6490   0031AA  22DA               	addwfc	fsr2h,f,c
  6491   0031AC  0E00               	movlw	0
  6492   0031AE  6EDF               	movwf	indf2,c
  6493   0031B0                     
  6494                           ;dc_motor.c: 227:     mL->direction = 0;
  6495   0031B0  EE20 F001          	lfsr	2,1
  6496   0031B4  501C               	movf	reverse@mL^0,w,c
  6497   0031B6  26D9               	addwf	fsr2l,f,c
  6498   0031B8  501D               	movf	(reverse@mL+1)^0,w,c
  6499   0031BA  22DA               	addwfc	fsr2h,f,c
  6500   0031BC  0E00               	movlw	0
  6501   0031BE  6EDF               	movwf	indf2,c
  6502   0031C0                     
  6503                           ;dc_motor.c: 228:     mL->brakemode = 1;
  6504   0031C0  EE20 F002          	lfsr	2,2
  6505   0031C4  501C               	movf	reverse@mL^0,w,c
  6506   0031C6  26D9               	addwf	fsr2l,f,c
  6507   0031C8  501D               	movf	(reverse@mL+1)^0,w,c
  6508   0031CA  22DA               	addwfc	fsr2h,f,c
  6509   0031CC  0E01               	movlw	1
  6510   0031CE  6EDF               	movwf	indf2,c
  6511   0031D0                     
  6512                           ;dc_motor.c: 229:     mR->brakemode = 1;
  6513   0031D0  EE20 F002          	lfsr	2,2
  6514   0031D4  501E               	movf	reverse@mR^0,w,c
  6515   0031D6  26D9               	addwf	fsr2l,f,c
  6516   0031D8  501F               	movf	(reverse@mR+1)^0,w,c
  6517   0031DA  22DA               	addwfc	fsr2h,f,c
  6518   0031DC  0E01               	movlw	1
  6519   0031DE  6EDF               	movwf	indf2,c
  6520                           
  6521                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  6522   0031E0  EF0F  F019         	goto	l696
  6523   0031E4                     l2824:
  6524                           
  6525                           ;dc_motor.c: 231:     {;dc_motor.c: 232:         mL->power++;
  6526   0031E4  C01C  FFD9         	movff	reverse@mL,fsr2l
  6527   0031E8  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6528   0031EC  2ADF               	incf	indf2,f,c
  6529                           
  6530                           ;dc_motor.c: 233:         mR->power++;
  6531   0031EE  C01E  FFD9         	movff	reverse@mR,fsr2l
  6532   0031F2  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6533   0031F6  2ADF               	incf	indf2,f,c
  6534   0031F8                     
  6535                           ;dc_motor.c: 234:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6536   0031F8  0ED0               	movlw	208
  6537   0031FA  6E20               	movwf	??_reverse^0,c
  6538   0031FC  0ECA               	movlw	202
  6539   0031FE                     u3717:
  6540   0031FE  2EE8               	decfsz	wreg,f,c
  6541   003200  D7FE               	bra	u3717
  6542   003202  2E20               	decfsz	??_reverse^0,f,c
  6543   003204  D7FC               	bra	u3717
  6544   003206                     
  6545                           ;dc_motor.c: 235:         setMotorPWM(mL);
  6546   003206  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6547   00320A  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6548   00320E  EC8C  F017         	call	_setMotorPWM	;wreg free
  6549   003212                     
  6550                           ;dc_motor.c: 236:         setMotorPWM(mR);
  6551   003212  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6552   003216  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6553   00321A  EC8C  F017         	call	_setMotorPWM	;wreg free
  6554   00321E                     l696:
  6555                           
  6556                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  6557   00321E  C01C  FFD9         	movff	reverse@mL,fsr2l
  6558   003222  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6559   003226  0E15               	movlw	21
  6560   003228  60DF               	cpfslt	indf2,c
  6561   00322A  EF19  F019         	goto	u1741
  6562   00322E  EF1B  F019         	goto	u1740
  6563   003232                     u1741:
  6564   003232  EF27  F019         	goto	l2834
  6565   003236                     u1740:
  6566   003236  C01E  FFD9         	movff	reverse@mR,fsr2l
  6567   00323A  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6568   00323E  0E14               	movlw	20
  6569   003240  64DF               	cpfsgt	indf2,c
  6570   003242  EF25  F019         	goto	u1751
  6571   003246  EF27  F019         	goto	u1750
  6572   00324A                     u1751:
  6573   00324A  EFF2  F018         	goto	l2824
  6574   00324E                     u1750:
  6575   00324E                     l2834:
  6576                           
  6577                           ;dc_motor.c: 238:     mL->power = 20;
  6578   00324E  C01C  FFD9         	movff	reverse@mL,fsr2l
  6579   003252  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6580   003256  0E14               	movlw	20
  6581   003258  6EDF               	movwf	indf2,c
  6582                           
  6583                           ;dc_motor.c: 239:     mR->power = 20;
  6584   00325A  C01E  FFD9         	movff	reverse@mR,fsr2l
  6585   00325E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6586   003262  0E14               	movlw	20
  6587   003264  6EDF               	movwf	indf2,c
  6588   003266                     
  6589                           ;dc_motor.c: 240:     setMotorPWM(mL);
  6590   003266  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6591   00326A  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6592   00326E  EC8C  F017         	call	_setMotorPWM	;wreg free
  6593   003272                     
  6594                           ;dc_motor.c: 241:     setMotorPWM(mR);
  6595   003272  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6596   003276  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6597   00327A  EC8C  F017         	call	_setMotorPWM	;wreg free
  6598   00327E  0012               	return		;funcret
  6599   003280                     __end_of_reverse:
  6600                           	callstack 0
  6601                           
  6602 ;; *************** function _norm_stop *****************
  6603 ;; Defined at:
  6604 ;;		line 118 in file "dc_motor.c"
  6605 ;; Parameters:    Size  Location     Type
  6606 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6607 ;;		 -> main@mL(9), 
  6608 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6609 ;;		 -> main@mR(9), 
  6610 ;; Auto vars:     Size  Location     Type
  6611 ;;		None
  6612 ;; Return value:  Size  Location     Type
  6613 ;;                  1    wreg      void 
  6614 ;; Registers used:
  6615 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6616 ;; Tracked objects:
  6617 ;;		On entry : 0/0
  6618 ;;		On exit  : 0/0
  6619 ;;		Unchanged: 0/0
  6620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6624 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6625 ;;Total ram usage:        4 bytes
  6626 ;; Hardware stack levels used: 1
  6627 ;; Hardware stack levels required when called: 8
  6628 ;; This function calls:
  6629 ;;		_setMotorPWM
  6630 ;; This function is called by:
  6631 ;;		_rangeCalibrate
  6632 ;;		_motor_response
  6633 ;;		_motor_retrace
  6634 ;;		_main
  6635 ;;		_turnPrep
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text25
  6640   003A20                     __ptext25:
  6641                           	callstack 0
  6642   003A20                     _norm_stop:
  6643                           	callstack 21
  6644   003A20                     
  6645                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  6646   003A20  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  6647   003A24  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  6648   003A28  0E00               	movlw	0
  6649   003A2A  6EDF               	movwf	indf2,c
  6650                           
  6651                           ;dc_motor.c: 125:     mR->power = 0;
  6652   003A2C  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  6653   003A30  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  6654   003A34  0E00               	movlw	0
  6655   003A36  6EDF               	movwf	indf2,c
  6656   003A38                     
  6657                           ;dc_motor.c: 126:     setMotorPWM(mL);
  6658   003A38  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  6659   003A3C  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  6660   003A40  EC8C  F017         	call	_setMotorPWM	;wreg free
  6661   003A44                     
  6662                           ;dc_motor.c: 127:     setMotorPWM(mR);
  6663   003A44  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  6664   003A48  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  6665   003A4C  EC8C  F017         	call	_setMotorPWM	;wreg free
  6666   003A50  0012               	return		;funcret
  6667   003A52                     __end_of_norm_stop:
  6668                           	callstack 0
  6669                           
  6670 ;; *************** function _turnLeft *****************
  6671 ;; Defined at:
  6672 ;;		line 131 in file "dc_motor.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6675 ;;		 -> main@mL(9), 
  6676 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6677 ;;		 -> main@mR(9), 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;		None
  6680 ;; Return value:  Size  Location     Type
  6681 ;;                  1    wreg      void 
  6682 ;; Registers used:
  6683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6684 ;; Tracked objects:
  6685 ;;		On entry : 0/0
  6686 ;;		On exit  : 0/0
  6687 ;;		Unchanged: 0/0
  6688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6689 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6693 ;;Total ram usage:        4 bytes
  6694 ;; Hardware stack levels used: 1
  6695 ;; Hardware stack levels required when called: 8
  6696 ;; This function calls:
  6697 ;;		_setMotorPWM
  6698 ;; This function is called by:
  6699 ;;		_motor_response
  6700 ;;		_motor_retrace
  6701 ;;		_main
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           	psect	text26
  6706   003680                     __ptext26:
  6707                           	callstack 0
  6708   003680                     _turnLeft:
  6709                           	callstack 22
  6710   003680                     
  6711                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  6712   003680  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6713   003684  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6714   003688  0E3C               	movlw	60
  6715   00368A  6EDF               	movwf	indf2,c
  6716                           
  6717                           ;dc_motor.c: 134:     mR->power = 60;
  6718   00368C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6719   003690  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6720   003694  0E3C               	movlw	60
  6721   003696  6EDF               	movwf	indf2,c
  6722   003698                     
  6723                           ;dc_motor.c: 135:     mL->brakemode = 1;
  6724   003698  EE20 F002          	lfsr	2,2
  6725   00369C  501C               	movf	turnLeft@mL^0,w,c
  6726   00369E  26D9               	addwf	fsr2l,f,c
  6727   0036A0  501D               	movf	(turnLeft@mL+1)^0,w,c
  6728   0036A2  22DA               	addwfc	fsr2h,f,c
  6729   0036A4  0E01               	movlw	1
  6730   0036A6  6EDF               	movwf	indf2,c
  6731   0036A8                     
  6732                           ;dc_motor.c: 136:     mR->brakemode = 1;
  6733   0036A8  EE20 F002          	lfsr	2,2
  6734   0036AC  501E               	movf	turnLeft@mR^0,w,c
  6735   0036AE  26D9               	addwf	fsr2l,f,c
  6736   0036B0  501F               	movf	(turnLeft@mR+1)^0,w,c
  6737   0036B2  22DA               	addwfc	fsr2h,f,c
  6738   0036B4  0E01               	movlw	1
  6739   0036B6  6EDF               	movwf	indf2,c
  6740   0036B8                     
  6741                           ;dc_motor.c: 137:     mL->direction = 0;
  6742   0036B8  EE20 F001          	lfsr	2,1
  6743   0036BC  501C               	movf	turnLeft@mL^0,w,c
  6744   0036BE  26D9               	addwf	fsr2l,f,c
  6745   0036C0  501D               	movf	(turnLeft@mL+1)^0,w,c
  6746   0036C2  22DA               	addwfc	fsr2h,f,c
  6747   0036C4  0E00               	movlw	0
  6748   0036C6  6EDF               	movwf	indf2,c
  6749   0036C8                     
  6750                           ;dc_motor.c: 138:     mR->direction = 1;
  6751   0036C8  EE20 F001          	lfsr	2,1
  6752   0036CC  501E               	movf	turnLeft@mR^0,w,c
  6753   0036CE  26D9               	addwf	fsr2l,f,c
  6754   0036D0  501F               	movf	(turnLeft@mR+1)^0,w,c
  6755   0036D2  22DA               	addwfc	fsr2h,f,c
  6756   0036D4  0E01               	movlw	1
  6757   0036D6  6EDF               	movwf	indf2,c
  6758   0036D8                     
  6759                           ;dc_motor.c: 139:     setMotorPWM(mL);
  6760   0036D8  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6761   0036DC  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6762   0036E0  EC8C  F017         	call	_setMotorPWM	;wreg free
  6763   0036E4                     
  6764                           ;dc_motor.c: 140:     setMotorPWM(mR);
  6765   0036E4  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6766   0036E8  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6767   0036EC  EC8C  F017         	call	_setMotorPWM	;wreg free
  6768   0036F0  0012               	return		;funcret
  6769   0036F2                     __end_of_turnLeft:
  6770                           	callstack 0
  6771                           
  6772 ;; *************** function _setMotorPWM *****************
  6773 ;; Defined at:
  6774 ;;		line 56 in file "dc_motor.c"
  6775 ;; Parameters:    Size  Location     Type
  6776 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6777 ;;		 -> main@mR(9), main@mL(9), 
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  negDuty         1   26[COMRAM] unsigned char 
  6780 ;;  posDuty         1   25[COMRAM] unsigned char 
  6781 ;; Return value:  Size  Location     Type
  6782 ;;                  1    wreg      void 
  6783 ;; Registers used:
  6784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6785 ;; Tracked objects:
  6786 ;;		On entry : 0/0
  6787 ;;		On exit  : 0/0
  6788 ;;		Unchanged: 0/0
  6789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6794 ;;Total ram usage:        6 bytes
  6795 ;; Hardware stack levels used: 1
  6796 ;; Hardware stack levels required when called: 7
  6797 ;; This function calls:
  6798 ;;		___lwdiv
  6799 ;;		___wmul
  6800 ;; This function is called by:
  6801 ;;		_norm_stop
  6802 ;;		_turnLeft
  6803 ;;		_turnRight
  6804 ;;		_fullSpeedAhead
  6805 ;;		_wallSmash
  6806 ;;		_reverse
  6807 ;;		_stop
  6808 ;;		_slowSearch
  6809 ;;		_uturn
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text27
  6814   002F18                     __ptext27:
  6815                           	callstack 0
  6816   002F18                     _setMotorPWM:
  6817                           	callstack 22
  6818   002F18                     
  6819                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  6820   002F18  EE20 F002          	lfsr	2,2
  6821   002F1C  5016               	movf	setMotorPWM@m^0,w,c
  6822   002F1E  26D9               	addwf	fsr2l,f,c
  6823   002F20  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6824   002F22  22DA               	addwfc	fsr2h,f,c
  6825   002F24  50DF               	movf	indf2,w,c
  6826   002F26  B4D8               	btfsc	status,2,c
  6827   002F28  EF98  F017         	goto	u1721
  6828   002F2C  EF9A  F017         	goto	u1720
  6829   002F30                     u1721:
  6830   002F30  EFCE  F017         	goto	l2762
  6831   002F34                     u1720:
  6832   002F34                     
  6833                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6834   002F34  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6835   002F38  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6836   002F3C  50DF               	movf	indf2,w,c
  6837   002F3E  6E18               	movwf	??_setMotorPWM^0,c
  6838   002F40  5018               	movf	??_setMotorPWM^0,w,c
  6839   002F42  6E09               	movwf	___wmul@multiplier^0,c
  6840   002F44  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6841   002F46  EE20 F003          	lfsr	2,3
  6842   002F4A  5016               	movf	setMotorPWM@m^0,w,c
  6843   002F4C  26D9               	addwf	fsr2l,f,c
  6844   002F4E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6845   002F50  22DA               	addwfc	fsr2h,f,c
  6846   002F52  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6847   002F56  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6848   002F5A  ECA9  F01D         	call	___wmul	;wreg free
  6849   002F5E  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6850   002F62  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6851   002F66  0E00               	movlw	0
  6852   002F68  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6853   002F6A  0E64               	movlw	100
  6854   002F6C  6E11               	movwf	___lwdiv@divisor^0,c
  6855   002F6E  ECCD  F01A         	call	___lwdiv	;wreg free
  6856   002F72  EE20 F003          	lfsr	2,3
  6857   002F76  5016               	movf	setMotorPWM@m^0,w,c
  6858   002F78  26D9               	addwf	fsr2l,f,c
  6859   002F7A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6860   002F7C  22DA               	addwfc	fsr2h,f,c
  6861   002F7E  50DF               	movf	indf2,w,c
  6862   002F80  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6863   002F82  500F               	movf	?___lwdiv^0,w,c
  6864   002F84  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6865   002F86  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6866   002F88                     
  6867                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  6868   002F88  EE20 F003          	lfsr	2,3
  6869   002F8C  5016               	movf	setMotorPWM@m^0,w,c
  6870   002F8E  26D9               	addwf	fsr2l,f,c
  6871   002F90  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6872   002F92  22DA               	addwfc	fsr2h,f,c
  6873   002F94  50DF               	movf	indf2,w,c
  6874   002F96  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6875                           
  6876                           ;dc_motor.c: 63:     }
  6877   002F98  EFF1  F017         	goto	l2766
  6878   002F9C                     l2762:
  6879                           
  6880                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6881   002F9C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6882   002FA0  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6883   002FA4  50DF               	movf	indf2,w,c
  6884   002FA6  6E18               	movwf	??_setMotorPWM^0,c
  6885   002FA8  5018               	movf	??_setMotorPWM^0,w,c
  6886   002FAA  6E09               	movwf	___wmul@multiplier^0,c
  6887   002FAC  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6888   002FAE  EE20 F003          	lfsr	2,3
  6889   002FB2  5016               	movf	setMotorPWM@m^0,w,c
  6890   002FB4  26D9               	addwf	fsr2l,f,c
  6891   002FB6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6892   002FB8  22DA               	addwfc	fsr2h,f,c
  6893   002FBA  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6894   002FBE  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6895   002FC2  ECA9  F01D         	call	___wmul	;wreg free
  6896   002FC6  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6897   002FCA  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6898   002FCE  0E00               	movlw	0
  6899   002FD0  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6900   002FD2  0E64               	movlw	100
  6901   002FD4  6E11               	movwf	___lwdiv@divisor^0,c
  6902   002FD6  ECCD  F01A         	call	___lwdiv	;wreg free
  6903   002FDA  500F               	movf	?___lwdiv^0,w,c
  6904   002FDC  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6905   002FDE                     
  6906                           ;dc_motor.c: 66:         negDuty=0;
  6907   002FDE  0E00               	movlw	0
  6908   002FE0  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6909   002FE2                     l2766:
  6910                           
  6911                           ;dc_motor.c: 69:     if (m->direction) {
  6912   002FE2  EE20 F001          	lfsr	2,1
  6913   002FE6  5016               	movf	setMotorPWM@m^0,w,c
  6914   002FE8  26D9               	addwf	fsr2l,f,c
  6915   002FEA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6916   002FEC  22DA               	addwfc	fsr2h,f,c
  6917   002FEE  50DF               	movf	indf2,w,c
  6918   002FF0  B4D8               	btfsc	status,2,c
  6919   002FF2  EFFD  F017         	goto	u1731
  6920   002FF6  EFFF  F017         	goto	u1730
  6921   002FFA                     u1731:
  6922   002FFA  EF21  F018         	goto	l2770
  6923   002FFE                     u1730:
  6924   002FFE                     
  6925                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  6926   002FFE  EE20 F005          	lfsr	2,5
  6927   003002  5016               	movf	setMotorPWM@m^0,w,c
  6928   003004  26D9               	addwf	fsr2l,f,c
  6929   003006  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6930   003008  22DA               	addwfc	fsr2h,f,c
  6931   00300A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6932   00300E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6933   003012  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6934   003016  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6935   00301A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6936                           
  6937                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  6938   00301E  EE20 F007          	lfsr	2,7
  6939   003022  5016               	movf	setMotorPWM@m^0,w,c
  6940   003024  26D9               	addwf	fsr2l,f,c
  6941   003026  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6942   003028  22DA               	addwfc	fsr2h,f,c
  6943   00302A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6944   00302E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6945   003032  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6946   003036  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6947   00303A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6948                           
  6949                           ;dc_motor.c: 72:     } else {
  6950   00303E  EF41  F018         	goto	l648
  6951   003042                     l2770:
  6952                           
  6953                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  6954   003042  EE20 F005          	lfsr	2,5
  6955   003046  5016               	movf	setMotorPWM@m^0,w,c
  6956   003048  26D9               	addwf	fsr2l,f,c
  6957   00304A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6958   00304C  22DA               	addwfc	fsr2h,f,c
  6959   00304E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6960   003052  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6961   003056  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6962   00305A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6963   00305E  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6964                           
  6965                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  6966   003062  EE20 F007          	lfsr	2,7
  6967   003066  5016               	movf	setMotorPWM@m^0,w,c
  6968   003068  26D9               	addwf	fsr2l,f,c
  6969   00306A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6970   00306C  22DA               	addwfc	fsr2h,f,c
  6971   00306E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6972   003072  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6973   003076  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6974   00307A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6975   00307E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6976   003082                     l648:
  6977   003082  0012               	return		;funcret
  6978   003084                     __end_of_setMotorPWM:
  6979                           	callstack 0
  6980                           
  6981 ;; *************** function ___wmul *****************
  6982 ;; Defined at:
  6983 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6984 ;; Parameters:    Size  Location     Type
  6985 ;;  multiplier      2    8[COMRAM] unsigned int 
  6986 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6987 ;; Auto vars:     Size  Location     Type
  6988 ;;  product         2   12[COMRAM] unsigned int 
  6989 ;; Return value:  Size  Location     Type
  6990 ;;                  2    8[COMRAM] unsigned int 
  6991 ;; Registers used:
  6992 ;;		wreg, status,2, status,0, prodl, prodh
  6993 ;; Tracked objects:
  6994 ;;		On entry : 0/0
  6995 ;;		On exit  : 0/0
  6996 ;;		Unchanged: 0/0
  6997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6998 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6999 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;Total ram usage:        6 bytes
  7003 ;; Hardware stack levels used: 1
  7004 ;; Hardware stack levels required when called: 6
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_setMotorPWM
  7009 ;; This function uses a non-reentrant model
  7010 ;;
  7011                           
  7012                           	psect	text28
  7013   003B52                     __ptext28:
  7014                           	callstack 0
  7015   003B52                     ___wmul:
  7016                           	callstack 22
  7017   003B52  5009               	movf	___wmul@multiplier^0,w,c
  7018   003B54  020B               	mulwf	___wmul@multiplicand^0,c
  7019   003B56  CFF3 F00D          	movff	prodl,___wmul@product
  7020   003B5A  CFF4 F00E          	movff	prodh,___wmul@product+1
  7021   003B5E  5009               	movf	___wmul@multiplier^0,w,c
  7022   003B60  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7023   003B62  50F3               	movf	243,w,c
  7024   003B64  260E               	addwf	(___wmul@product+1)^0,f,c
  7025   003B66  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7026   003B68  020B               	mulwf	___wmul@multiplicand^0,c
  7027   003B6A  50F3               	movf	243,w,c
  7028   003B6C  260E               	addwf	(___wmul@product+1)^0,f,c
  7029   003B6E  C00D  F009         	movff	___wmul@product,?___wmul
  7030   003B72  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7031   003B76  0012               	return		;funcret
  7032   003B78                     __end_of___wmul:
  7033                           	callstack 0
  7034                           
  7035 ;; *************** function ___lwdiv *****************
  7036 ;; Defined at:
  7037 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7038 ;; Parameters:    Size  Location     Type
  7039 ;;  dividend        2   14[COMRAM] unsigned int 
  7040 ;;  divisor         2   16[COMRAM] unsigned int 
  7041 ;; Auto vars:     Size  Location     Type
  7042 ;;  quotient        2   18[COMRAM] unsigned int 
  7043 ;;  counter         1   20[COMRAM] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2   14[COMRAM] unsigned int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7053 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7054 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7057 ;;Total ram usage:        7 bytes
  7058 ;; Hardware stack levels used: 1
  7059 ;; Hardware stack levels required when called: 6
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_setMotorPWM
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text29
  7068   00359A                     __ptext29:
  7069                           	callstack 0
  7070   00359A                     ___lwdiv:
  7071                           	callstack 22
  7072   00359A  0E00               	movlw	0
  7073   00359C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7074   00359E  0E00               	movlw	0
  7075   0035A0  6E13               	movwf	___lwdiv@quotient^0,c
  7076   0035A2  5011               	movf	___lwdiv@divisor^0,w,c
  7077   0035A4  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7078   0035A6  B4D8               	btfsc	status,2,c
  7079   0035A8  EFD8  F01A         	goto	u1651
  7080   0035AC  EFDA  F01A         	goto	u1650
  7081   0035B0                     u1651:
  7082   0035B0  EF02  F01B         	goto	l1201
  7083   0035B4                     u1650:
  7084   0035B4  0E01               	movlw	1
  7085   0035B6  6E15               	movwf	___lwdiv@counter^0,c
  7086   0035B8  EFE2  F01A         	goto	l2708
  7087   0035BC                     l2706:
  7088   0035BC  90D8               	bcf	status,0,c
  7089   0035BE  3611               	rlcf	___lwdiv@divisor^0,f,c
  7090   0035C0  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7091   0035C2  2A15               	incf	___lwdiv@counter^0,f,c
  7092   0035C4                     l2708:
  7093   0035C4  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7094   0035C6  EFE7  F01A         	goto	u1661
  7095   0035CA  EFE9  F01A         	goto	u1660
  7096   0035CE                     u1661:
  7097   0035CE  EFDE  F01A         	goto	l2706
  7098   0035D2                     u1660:
  7099   0035D2                     l2710:
  7100   0035D2  90D8               	bcf	status,0,c
  7101   0035D4  3613               	rlcf	___lwdiv@quotient^0,f,c
  7102   0035D6  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7103   0035D8  5011               	movf	___lwdiv@divisor^0,w,c
  7104   0035DA  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7105   0035DC  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7106   0035DE  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7107   0035E0  A0D8               	btfss	status,0,c
  7108   0035E2  EFF5  F01A         	goto	u1671
  7109   0035E6  EFF7  F01A         	goto	u1670
  7110   0035EA                     u1671:
  7111   0035EA  EFFC  F01A         	goto	l2718
  7112   0035EE                     u1670:
  7113   0035EE  5011               	movf	___lwdiv@divisor^0,w,c
  7114   0035F0  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7115   0035F2  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7116   0035F4  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7117   0035F6  8013               	bsf	___lwdiv@quotient^0,0,c
  7118   0035F8                     l2718:
  7119   0035F8  90D8               	bcf	status,0,c
  7120   0035FA  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7121   0035FC  3211               	rrcf	___lwdiv@divisor^0,f,c
  7122   0035FE  2E15               	decfsz	___lwdiv@counter^0,f,c
  7123   003600  EFE9  F01A         	goto	l2710
  7124   003604                     l1201:
  7125   003604  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7126   003608  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7127   00360C  0012               	return		;funcret
  7128   00360E                     __end_of___lwdiv:
  7129                           	callstack 0
  7130                           
  7131 ;; *************** function ___flge *****************
  7132 ;; Defined at:
  7133 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7134 ;; Parameters:    Size  Location     Type
  7135 ;;  ff1             4    8[COMRAM] unsigned int 
  7136 ;;  ff2             4   12[COMRAM] unsigned int 
  7137 ;; Auto vars:     Size  Location     Type
  7138 ;;		None
  7139 ;; Return value:  Size  Location     Type
  7140 ;;		None               void
  7141 ;; Registers used:
  7142 ;;		wreg, status,2, status,0
  7143 ;; Tracked objects:
  7144 ;;		On entry : 0/0
  7145 ;;		On exit  : 0/0
  7146 ;;		Unchanged: 0/0
  7147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7148 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7150 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7151 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7152 ;;Total ram usage:       12 bytes
  7153 ;; Hardware stack levels used: 1
  7154 ;; Hardware stack levels required when called: 6
  7155 ;; This function calls:
  7156 ;;		Nothing
  7157 ;; This function is called by:
  7158 ;;		_motor_response
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text30
  7163   003084                     __ptext30:
  7164                           	callstack 0
  7165   003084                     ___flge:
  7166                           	callstack 23
  7167   003084  0E00               	movlw	0
  7168   003086  1409               	andwf	___flge@ff1^0,w,c
  7169   003088  6E11               	movwf	??___flge^0,c
  7170   00308A  0E00               	movlw	0
  7171   00308C  140A               	andwf	(___flge@ff1+1)^0,w,c
  7172   00308E  6E12               	movwf	(??___flge+1)^0,c
  7173   003090  0E80               	movlw	128
  7174   003092  140B               	andwf	(___flge@ff1+2)^0,w,c
  7175   003094  6E13               	movwf	(??___flge+2)^0,c
  7176   003096  0E7F               	movlw	127
  7177   003098  140C               	andwf	(___flge@ff1+3)^0,w,c
  7178   00309A  6E14               	movwf	(??___flge+3)^0,c
  7179   00309C  5011               	movf	??___flge^0,w,c
  7180   00309E  1012               	iorwf	(??___flge+1)^0,w,c
  7181   0030A0  1013               	iorwf	(??___flge+2)^0,w,c
  7182   0030A2  1014               	iorwf	(??___flge+3)^0,w,c
  7183   0030A4  A4D8               	btfss	status,2,c
  7184   0030A6  EF57  F018         	goto	u2521
  7185   0030AA  EF59  F018         	goto	u2520
  7186   0030AE                     u2521:
  7187   0030AE  EF61  F018         	goto	l3350
  7188   0030B2                     u2520:
  7189   0030B2  0E00               	movlw	0
  7190   0030B4  6E09               	movwf	___flge@ff1^0,c
  7191   0030B6  0E00               	movlw	0
  7192   0030B8  6E0A               	movwf	(___flge@ff1+1)^0,c
  7193   0030BA  0E00               	movlw	0
  7194   0030BC  6E0B               	movwf	(___flge@ff1+2)^0,c
  7195   0030BE  0E00               	movlw	0
  7196   0030C0  6E0C               	movwf	(___flge@ff1+3)^0,c
  7197   0030C2                     l3350:
  7198   0030C2  0E00               	movlw	0
  7199   0030C4  140D               	andwf	___flge@ff2^0,w,c
  7200   0030C6  6E11               	movwf	??___flge^0,c
  7201   0030C8  0E00               	movlw	0
  7202   0030CA  140E               	andwf	(___flge@ff2+1)^0,w,c
  7203   0030CC  6E12               	movwf	(??___flge+1)^0,c
  7204   0030CE  0E80               	movlw	128
  7205   0030D0  140F               	andwf	(___flge@ff2+2)^0,w,c
  7206   0030D2  6E13               	movwf	(??___flge+2)^0,c
  7207   0030D4  0E7F               	movlw	127
  7208   0030D6  1410               	andwf	(___flge@ff2+3)^0,w,c
  7209   0030D8  6E14               	movwf	(??___flge+3)^0,c
  7210   0030DA  5011               	movf	??___flge^0,w,c
  7211   0030DC  1012               	iorwf	(??___flge+1)^0,w,c
  7212   0030DE  1013               	iorwf	(??___flge+2)^0,w,c
  7213   0030E0  1014               	iorwf	(??___flge+3)^0,w,c
  7214   0030E2  A4D8               	btfss	status,2,c
  7215   0030E4  EF76  F018         	goto	u2531
  7216   0030E8  EF78  F018         	goto	u2530
  7217   0030EC                     u2531:
  7218   0030EC  EF80  F018         	goto	l3354
  7219   0030F0                     u2530:
  7220   0030F0  0E00               	movlw	0
  7221   0030F2  6E0D               	movwf	___flge@ff2^0,c
  7222   0030F4  0E00               	movlw	0
  7223   0030F6  6E0E               	movwf	(___flge@ff2+1)^0,c
  7224   0030F8  0E00               	movlw	0
  7225   0030FA  6E0F               	movwf	(___flge@ff2+2)^0,c
  7226   0030FC  0E00               	movlw	0
  7227   0030FE  6E10               	movwf	(___flge@ff2+3)^0,c
  7228   003100                     l3354:
  7229   003100  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  7230   003102  EF85  F018         	goto	u2541
  7231   003106  EF87  F018         	goto	u2540
  7232   00310A                     u2541:
  7233   00310A  EF90  F018         	goto	l3358
  7234   00310E                     u2540:
  7235   00310E  6C09               	negf	___flge@ff1^0,c
  7236   003110  1E0A               	comf	(___flge@ff1+1)^0,f,c
  7237   003112  B0D8               	btfsc	status,0,c
  7238   003114  2A0A               	incf	(___flge@ff1+1)^0,f,c
  7239   003116  1E0B               	comf	(___flge@ff1+2)^0,f,c
  7240   003118  B0D8               	btfsc	status,0,c
  7241   00311A  2A0B               	incf	(___flge@ff1+2)^0,f,c
  7242   00311C  0E80               	movlw	128
  7243   00311E  560C               	subfwb	(___flge@ff1+3)^0,f,c
  7244   003120                     l3358:
  7245   003120  AE10               	btfss	(___flge@ff2+3)^0,7,c
  7246   003122  EF95  F018         	goto	u2551
  7247   003126  EF97  F018         	goto	u2550
  7248   00312A                     u2551:
  7249   00312A  EFA0  F018         	goto	l975
  7250   00312E                     u2550:
  7251   00312E  6C0D               	negf	___flge@ff2^0,c
  7252   003130  1E0E               	comf	(___flge@ff2+1)^0,f,c
  7253   003132  B0D8               	btfsc	status,0,c
  7254   003134  2A0E               	incf	(___flge@ff2+1)^0,f,c
  7255   003136  1E0F               	comf	(___flge@ff2+2)^0,f,c
  7256   003138  B0D8               	btfsc	status,0,c
  7257   00313A  2A0F               	incf	(___flge@ff2+2)^0,f,c
  7258   00313C  0E80               	movlw	128
  7259   00313E  5610               	subfwb	(___flge@ff2+3)^0,f,c
  7260   003140                     l975:
  7261   003140  0E00               	movlw	0
  7262   003142  1A09               	xorwf	___flge@ff1^0,f,c
  7263   003144  0E00               	movlw	0
  7264   003146  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  7265   003148  0E00               	movlw	0
  7266   00314A  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  7267   00314C  0E80               	movlw	128
  7268   00314E  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  7269   003150  0E00               	movlw	0
  7270   003152  1A0D               	xorwf	___flge@ff2^0,f,c
  7271   003154  0E00               	movlw	0
  7272   003156  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  7273   003158  0E00               	movlw	0
  7274   00315A  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  7275   00315C  0E80               	movlw	128
  7276   00315E  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  7277   003160  500D               	movf	___flge@ff2^0,w,c
  7278   003162  5C09               	subwf	___flge@ff1^0,w,c
  7279   003164  500E               	movf	(___flge@ff2+1)^0,w,c
  7280   003166  580A               	subwfb	(___flge@ff1+1)^0,w,c
  7281   003168  500F               	movf	(___flge@ff2+2)^0,w,c
  7282   00316A  580B               	subwfb	(___flge@ff1+2)^0,w,c
  7283   00316C  5010               	movf	(___flge@ff2+3)^0,w,c
  7284   00316E  580C               	subwfb	(___flge@ff1+3)^0,w,c
  7285   003170  B0D8               	btfsc	status,0,c
  7286   003172  EFBD  F018         	goto	u2561
  7287   003176  EFBF  F018         	goto	u2560
  7288   00317A                     u2561:
  7289   00317A  EFC2  F018         	goto	l3364
  7290   00317E                     u2560:
  7291   00317E  90D8               	bcf	status,0,c
  7292   003180  EFC3  F018         	goto	l980
  7293   003184                     l3364:
  7294   003184  80D8               	bsf	status,0,c
  7295   003186                     l980:
  7296   003186  0012               	return		;funcret
  7297   003188                     __end_of___flge:
  7298                           	callstack 0
  7299                           
  7300 ;; *************** function _motorTRIS *****************
  7301 ;; Defined at:
  7302 ;;		line 252 in file "dc_motor.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7305 ;;		 -> main@mL(9), 
  7306 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  7307 ;;		 -> main@mR(9), 
  7308 ;; Auto vars:     Size  Location     Type
  7309 ;;		None
  7310 ;; Return value:  Size  Location     Type
  7311 ;;                  1    wreg      void 
  7312 ;; Registers used:
  7313 ;;		None
  7314 ;; Tracked objects:
  7315 ;;		On entry : 0/0
  7316 ;;		On exit  : 0/0
  7317 ;;		Unchanged: 0/0
  7318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7323 ;;Total ram usage:        4 bytes
  7324 ;; Hardware stack levels used: 1
  7325 ;; Hardware stack levels required when called: 6
  7326 ;; This function calls:
  7327 ;;		Nothing
  7328 ;; This function is called by:
  7329 ;;		_main
  7330 ;; This function uses a non-reentrant model
  7331 ;;
  7332                           
  7333                           	psect	text31
  7334   003C4A                     __ptext31:
  7335                           	callstack 0
  7336   003C4A                     _motorTRIS:
  7337                           	callstack 24
  7338   003C4A                     
  7339                           ;dc_motor.c: 253:     TRISEbits.TRISE2 = 0;
  7340   003C4A  9485               	bcf	133,2,c	;volatile
  7341                           
  7342                           ;dc_motor.c: 254:     TRISEbits.TRISE4 = 0;
  7343   003C4C  9885               	bcf	133,4,c	;volatile
  7344                           
  7345                           ;dc_motor.c: 255:     TRISCbits.TRISC7 = 0;
  7346   003C4E  9E83               	bcf	131,7,c	;volatile
  7347                           
  7348                           ;dc_motor.c: 256:     TRISGbits.TRISG6 = 0;
  7349   003C50  9C87               	bcf	135,6,c	;volatile
  7350   003C52  0012               	return		;funcret
  7351   003C54                     __end_of_motorTRIS:
  7352                           	callstack 0
  7353                           
  7354 ;; *************** function _motorRinit *****************
  7355 ;; Defined at:
  7356 ;;		line 88 in file "dc_motor.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  7359 ;;		 -> main@mR(9), 
  7360 ;; Auto vars:     Size  Location     Type
  7361 ;;		None
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  1    wreg      void 
  7364 ;; Registers used:
  7365 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7371 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;Total ram usage:        2 bytes
  7376 ;; Hardware stack levels used: 1
  7377 ;; Hardware stack levels required when called: 6
  7378 ;; This function calls:
  7379 ;;		Nothing
  7380 ;; This function is called by:
  7381 ;;		_main
  7382 ;; This function uses a non-reentrant model
  7383 ;;
  7384                           
  7385                           	psect	text32
  7386   0036F2                     __ptext32:
  7387                           	callstack 0
  7388   0036F2                     _motorRinit:
  7389                           	callstack 24
  7390   0036F2                     
  7391                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  7392   0036F2  C009  FFD9         	movff	motorRinit@mR,fsr2l
  7393   0036F6  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  7394   0036FA  0E32               	movlw	50
  7395   0036FC  6EDF               	movwf	indf2,c
  7396   0036FE                     
  7397                           ;dc_motor.c: 91:     mR->direction = 1;
  7398   0036FE  EE20 F001          	lfsr	2,1
  7399   003702  5009               	movf	motorRinit@mR^0,w,c
  7400   003704  26D9               	addwf	fsr2l,f,c
  7401   003706  500A               	movf	(motorRinit@mR+1)^0,w,c
  7402   003708  22DA               	addwfc	fsr2h,f,c
  7403   00370A  0E01               	movlw	1
  7404   00370C  6EDF               	movwf	indf2,c
  7405   00370E                     
  7406                           ;dc_motor.c: 92:     mR->brakemode = 1;
  7407   00370E  EE20 F002          	lfsr	2,2
  7408   003712  5009               	movf	motorRinit@mR^0,w,c
  7409   003714  26D9               	addwf	fsr2l,f,c
  7410   003716  500A               	movf	(motorRinit@mR+1)^0,w,c
  7411   003718  22DA               	addwfc	fsr2h,f,c
  7412   00371A  0E01               	movlw	1
  7413   00371C  6EDF               	movwf	indf2,c
  7414   00371E                     
  7415                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  7416   00371E  EE20 F005          	lfsr	2,5
  7417   003722  5009               	movf	motorRinit@mR^0,w,c
  7418   003724  26D9               	addwf	fsr2l,f,c
  7419   003726  500A               	movf	(motorRinit@mR+1)^0,w,c
  7420   003728  22DA               	addwfc	fsr2h,f,c
  7421   00372A  0E25               	movlw	37
  7422   00372C  6EDE               	movwf	postinc2,c
  7423   00372E  0E0F               	movlw	15
  7424   003730  6EDD               	movwf	postdec2,c
  7425   003732                     
  7426                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  7427   003732  EE20 F007          	lfsr	2,7
  7428   003736  5009               	movf	motorRinit@mR^0,w,c
  7429   003738  26D9               	addwf	fsr2l,f,c
  7430   00373A  500A               	movf	(motorRinit@mR+1)^0,w,c
  7431   00373C  22DA               	addwfc	fsr2h,f,c
  7432   00373E  0E21               	movlw	33
  7433   003740  6EDE               	movwf	postinc2,c
  7434   003742  0E0F               	movlw	15
  7435   003744  6EDD               	movwf	postdec2,c
  7436   003746                     
  7437                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  7438   003746  EE20 F003          	lfsr	2,3
  7439   00374A  5009               	movf	motorRinit@mR^0,w,c
  7440   00374C  26D9               	addwf	fsr2l,f,c
  7441   00374E  500A               	movf	(motorRinit@mR+1)^0,w,c
  7442   003750  22DA               	addwfc	fsr2h,f,c
  7443   003752  0EC8               	movlw	200
  7444   003754  6EDE               	movwf	postinc2,c
  7445   003756  0E00               	movlw	0
  7446   003758  6EDD               	movwf	postdec2,c
  7447   00375A  0012               	return		;funcret
  7448   00375C                     __end_of_motorRinit:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _motorLinit *****************
  7452 ;; Defined at:
  7453 ;;		line 78 in file "dc_motor.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7456 ;;		 -> main@mL(9), 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7472 ;;Total ram usage:        2 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; Hardware stack levels required when called: 6
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text33
  7483   00375C                     __ptext33:
  7484                           	callstack 0
  7485   00375C                     _motorLinit:
  7486                           	callstack 24
  7487   00375C                     
  7488                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  7489   00375C  C009  FFD9         	movff	motorLinit@mL,fsr2l
  7490   003760  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  7491   003764  0E32               	movlw	50
  7492   003766  6EDF               	movwf	indf2,c
  7493   003768                     
  7494                           ;dc_motor.c: 81:     mL->direction = 1;
  7495   003768  EE20 F001          	lfsr	2,1
  7496   00376C  5009               	movf	motorLinit@mL^0,w,c
  7497   00376E  26D9               	addwf	fsr2l,f,c
  7498   003770  500A               	movf	(motorLinit@mL+1)^0,w,c
  7499   003772  22DA               	addwfc	fsr2h,f,c
  7500   003774  0E01               	movlw	1
  7501   003776  6EDF               	movwf	indf2,c
  7502   003778                     
  7503                           ;dc_motor.c: 82:     mL->brakemode = 1;
  7504   003778  EE20 F002          	lfsr	2,2
  7505   00377C  5009               	movf	motorLinit@mL^0,w,c
  7506   00377E  26D9               	addwf	fsr2l,f,c
  7507   003780  500A               	movf	(motorLinit@mL+1)^0,w,c
  7508   003782  22DA               	addwfc	fsr2h,f,c
  7509   003784  0E01               	movlw	1
  7510   003786  6EDF               	movwf	indf2,c
  7511   003788                     
  7512                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  7513   003788  EE20 F005          	lfsr	2,5
  7514   00378C  5009               	movf	motorLinit@mL^0,w,c
  7515   00378E  26D9               	addwf	fsr2l,f,c
  7516   003790  500A               	movf	(motorLinit@mL+1)^0,w,c
  7517   003792  22DA               	addwfc	fsr2h,f,c
  7518   003794  0EAA               	movlw	170
  7519   003796  6EDE               	movwf	postinc2,c
  7520   003798  0E0F               	movlw	15
  7521   00379A  6EDD               	movwf	postdec2,c
  7522   00379C                     
  7523                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  7524   00379C  EE20 F007          	lfsr	2,7
  7525   0037A0  5009               	movf	motorLinit@mL^0,w,c
  7526   0037A2  26D9               	addwf	fsr2l,f,c
  7527   0037A4  500A               	movf	(motorLinit@mL+1)^0,w,c
  7528   0037A6  22DA               	addwfc	fsr2h,f,c
  7529   0037A8  0EA6               	movlw	166
  7530   0037AA  6EDE               	movwf	postinc2,c
  7531   0037AC  0E0F               	movlw	15
  7532   0037AE  6EDD               	movwf	postdec2,c
  7533   0037B0                     
  7534                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  7535   0037B0  EE20 F003          	lfsr	2,3
  7536   0037B4  5009               	movf	motorLinit@mL^0,w,c
  7537   0037B6  26D9               	addwf	fsr2l,f,c
  7538   0037B8  500A               	movf	(motorLinit@mL+1)^0,w,c
  7539   0037BA  22DA               	addwfc	fsr2h,f,c
  7540   0037BC  0EC8               	movlw	200
  7541   0037BE  6EDE               	movwf	postinc2,c
  7542   0037C0  0E00               	movlw	0
  7543   0037C2  6EDD               	movwf	postdec2,c
  7544   0037C4  0012               	return		;funcret
  7545   0037C6                     __end_of_motorLinit:
  7546                           	callstack 0
  7547                           
  7548 ;; *************** function _initDCmotorsPWM *****************
  7549 ;; Defined at:
  7550 ;;		line 5 in file "dc_motor.c"
  7551 ;; Parameters:    Size  Location     Type
  7552 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  7553 ;; Auto vars:     Size  Location     Type
  7554 ;;		None
  7555 ;; Return value:  Size  Location     Type
  7556 ;;                  1    wreg      void 
  7557 ;; Registers used:
  7558 ;;		wreg, status,2
  7559 ;; Tracked objects:
  7560 ;;		On entry : 0/0
  7561 ;;		On exit  : 0/0
  7562 ;;		Unchanged: 0/0
  7563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7564 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7568 ;;Total ram usage:        2 bytes
  7569 ;; Hardware stack levels used: 1
  7570 ;; Hardware stack levels required when called: 6
  7571 ;; This function calls:
  7572 ;;		Nothing
  7573 ;; This function is called by:
  7574 ;;		_main
  7575 ;; This function uses a non-reentrant model
  7576 ;;
  7577                           
  7578                           	psect	text34
  7579   00351A                     __ptext34:
  7580                           	callstack 0
  7581   00351A                     _initDCmotorsPWM:
  7582                           	callstack 24
  7583   00351A                     
  7584                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7585   00351A  0E05               	movlw	5
  7586   00351C  010E               	movlb	14	; () banked
  7587   00351E  6F74               	movwf	116,b	;volatile
  7588                           
  7589                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7590   003520  0E06               	movlw	6
  7591   003522  6F76               	movwf	118,b	;volatile
  7592                           
  7593                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7594   003524  0E07               	movlw	7
  7595   003526  6F69               	movwf	105,b	;volatile
  7596                           
  7597                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7598   003528  0E08               	movlw	8
  7599   00352A  6F88               	movwf	136,b	;volatile
  7600                           
  7601                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  7602   00352C  50BD               	movf	189,w,c	;volatile
  7603   00352E  0B8F               	andlw	-113
  7604   003530  0930               	iorlw	48
  7605   003532  6EBD               	movwf	189,c	;volatile
  7606                           
  7607                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  7608   003534  0EE0               	movlw	-32
  7609   003536  16BE               	andwf	190,f,c	;volatile
  7610                           
  7611                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  7612   003538  50BF               	movf	191,w,c	;volatile
  7613   00353A  0BF0               	andlw	-16
  7614   00353C  0901               	iorlw	1
  7615   00353E  6EBF               	movwf	191,c	;volatile
  7616                           
  7617                           ;dc_motor.c: 21:     T2PR=200;
  7618   003540  0EC8               	movlw	200
  7619   003542  6EBC               	movwf	188,c	;volatile
  7620   003544                     
  7621                           ; BSR set to: 14
  7622                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  7623   003544  8EBD               	bsf	189,7,c	;volatile
  7624                           
  7625                           ;dc_motor.c: 26:     CCPR1H=0;
  7626   003546  0E00               	movlw	0
  7627   003548  6EAA               	movwf	170,c	;volatile
  7628                           
  7629                           ;dc_motor.c: 27:     CCPR2H=0;
  7630   00354A  0E00               	movlw	0
  7631   00354C  6EA6               	movwf	166,c	;volatile
  7632                           
  7633                           ;dc_motor.c: 28:     CCPR3H=0;
  7634   00354E  0E00               	movlw	0
  7635   003550  010F               	movlb	15	; () banked
  7636   003552  6F25               	movwf	37,b	;volatile
  7637                           
  7638                           ;dc_motor.c: 29:     CCPR4H=0;
  7639   003554  0E00               	movlw	0
  7640   003556  6F21               	movwf	33,b	;volatile
  7641                           
  7642                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  7643   003558  0EFC               	movlw	-4
  7644   00355A  16AD               	andwf	173,f,c	;volatile
  7645                           
  7646                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  7647   00355C  0EF3               	movlw	-13
  7648   00355E  16AD               	andwf	173,f,c	;volatile
  7649                           
  7650                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  7651   003560  0ECF               	movlw	-49
  7652   003562  16AD               	andwf	173,f,c	;volatile
  7653                           
  7654                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  7655   003564  0E3F               	movlw	-193
  7656   003566  16AD               	andwf	173,f,c	;volatile
  7657   003568                     
  7658                           ; BSR set to: 15
  7659                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  7660   003568  88AB               	bsf	171,4,c	;volatile
  7661                           
  7662                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  7663   00356A  50AB               	movf	171,w,c	;volatile
  7664   00356C  0BF0               	andlw	-16
  7665   00356E  090C               	iorlw	12
  7666   003570  6EAB               	movwf	171,c	;volatile
  7667   003572                     
  7668                           ; BSR set to: 15
  7669                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  7670   003572  8EAB               	bsf	171,7,c	;volatile
  7671   003574                     
  7672                           ; BSR set to: 15
  7673                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  7674   003574  88A7               	bsf	167,4,c	;volatile
  7675                           
  7676                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  7677   003576  50A7               	movf	167,w,c	;volatile
  7678   003578  0BF0               	andlw	-16
  7679   00357A  090C               	iorlw	12
  7680   00357C  6EA7               	movwf	167,c	;volatile
  7681   00357E                     
  7682                           ; BSR set to: 15
  7683                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  7684   00357E  8EA7               	bsf	167,7,c	;volatile
  7685   003580                     
  7686                           ; BSR set to: 15
  7687                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  7688   003580  8926               	bsf	38,4,b	;volatile
  7689                           
  7690                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  7691   003582  5126               	movf	38,w,b	;volatile
  7692   003584  0BF0               	andlw	-16
  7693   003586  090C               	iorlw	12
  7694   003588  6F26               	movwf	38,b	;volatile
  7695   00358A                     
  7696                           ; BSR set to: 15
  7697                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  7698   00358A  8F26               	bsf	38,7,b	;volatile
  7699   00358C                     
  7700                           ; BSR set to: 15
  7701                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  7702   00358C  8922               	bsf	34,4,b	;volatile
  7703                           
  7704                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  7705   00358E  5122               	movf	34,w,b	;volatile
  7706   003590  0BF0               	andlw	-16
  7707   003592  090C               	iorlw	12
  7708   003594  6F22               	movwf	34,b	;volatile
  7709   003596                     
  7710                           ; BSR set to: 15
  7711                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  7712   003596  8F22               	bsf	34,7,b	;volatile
  7713   003598                     
  7714                           ; BSR set to: 15
  7715   003598  0012               	return		;funcret
  7716   00359A                     __end_of_initDCmotorsPWM:
  7717                           	callstack 0
  7718                           
  7719 ;; *************** function _color_click_init *****************
  7720 ;; Defined at:
  7721 ;;		line 9 in file "color.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;		None
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0, cstack
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7737 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7739 ;;Total ram usage:        1 bytes
  7740 ;; Hardware stack levels used: 1
  7741 ;; Hardware stack levels required when called: 9
  7742 ;; This function calls:
  7743 ;;		_I2C_2_Master_Init
  7744 ;;		_color_writetoaddr
  7745 ;; This function is called by:
  7746 ;;		_main
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text35
  7751   0039EC                     __ptext35:
  7752                           	callstack 0
  7753   0039EC                     _color_click_init:
  7754                           	callstack 21
  7755   0039EC                     
  7756                           ;color.c: 11:     I2C_2_Master_Init();
  7757   0039EC  EC42  F01D         	call	_I2C_2_Master_Init	;wreg free
  7758   0039F0                     
  7759                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  7760   0039F0  0E01               	movlw	1
  7761   0039F2  6E0B               	movwf	color_writetoaddr@value^0,c
  7762   0039F4  0E00               	movlw	0
  7763   0039F6  ECBC  F01D         	call	_color_writetoaddr
  7764   0039FA                     
  7765                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7766   0039FA  0E3F               	movlw	63
  7767   0039FC  6E0D               	movwf	??_color_click_init^0,c
  7768   0039FE  0E55               	movlw	85
  7769   003A00                     u3727:
  7770   003A00  2EE8               	decfsz	wreg,f,c
  7771   003A02  D7FE               	bra	u3727
  7772   003A04  2E0D               	decfsz	??_color_click_init^0,f,c
  7773   003A06  D7FC               	bra	u3727
  7774   003A08  F000               	nop	
  7775   003A0A                     
  7776                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  7777   003A0A  0E03               	movlw	3
  7778   003A0C  6E0B               	movwf	color_writetoaddr@value^0,c
  7779   003A0E  0E00               	movlw	0
  7780   003A10  ECBC  F01D         	call	_color_writetoaddr
  7781   003A14                     
  7782                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  7783   003A14  0ED5               	movlw	213
  7784   003A16  6E0B               	movwf	color_writetoaddr@value^0,c
  7785   003A18  0E01               	movlw	1
  7786   003A1A  ECBC  F01D         	call	_color_writetoaddr
  7787   003A1E  0012               	return		;funcret
  7788   003A20                     __end_of_color_click_init:
  7789                           	callstack 0
  7790                           
  7791 ;; *************** function _I2C_2_Master_Init *****************
  7792 ;; Defined at:
  7793 ;;		line 4 in file "i2c.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;		None
  7796 ;; Auto vars:     Size  Location     Type
  7797 ;;		None
  7798 ;; Return value:  Size  Location     Type
  7799 ;;                  1    wreg      void 
  7800 ;; Registers used:
  7801 ;;		wreg, status,2
  7802 ;; Tracked objects:
  7803 ;;		On entry : 0/0
  7804 ;;		On exit  : 0/0
  7805 ;;		Unchanged: 0/0
  7806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7811 ;;Total ram usage:        0 bytes
  7812 ;; Hardware stack levels used: 1
  7813 ;; Hardware stack levels required when called: 6
  7814 ;; This function calls:
  7815 ;;		Nothing
  7816 ;; This function is called by:
  7817 ;;		_color_click_init
  7818 ;; This function uses a non-reentrant model
  7819 ;;
  7820                           
  7821                           	psect	text36
  7822   003A84                     __ptext36:
  7823                           	callstack 0
  7824   003A84                     _I2C_2_Master_Init:
  7825                           	callstack 23
  7826   003A84                     
  7827                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7828   003A84  010E               	movlb	14	; () banked
  7829   003A86  51D9               	movf	217,w,b	;volatile
  7830   003A88  0BF0               	andlw	-16
  7831   003A8A  0908               	iorlw	8
  7832   003A8C  6FD9               	movwf	217,b	;volatile
  7833   003A8E                     
  7834                           ; BSR set to: 14
  7835                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7836   003A8E  8BD9               	bsf	217,5,b	;volatile
  7837                           
  7838                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7839   003A90  0E9F               	movlw	159
  7840   003A92  6FD6               	movwf	214,b	;volatile
  7841   003A94                     
  7842                           ; BSR set to: 14
  7843                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7844   003A94  8A84               	bsf	132,5,c	;volatile
  7845   003A96                     
  7846                           ; BSR set to: 14
  7847                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7848   003A96  8C84               	bsf	132,6,c	;volatile
  7849   003A98                     
  7850                           ; BSR set to: 14
  7851                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7852   003A98  9BA7               	bcf	167,5,b	;volatile
  7853   003A9A                     
  7854                           ; BSR set to: 14
  7855                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7856   003A9A  9DA7               	bcf	167,6,b	;volatile
  7857                           
  7858                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7859   003A9C  0E1D               	movlw	29
  7860   003A9E  6F1D               	movwf	29,b	;volatile
  7861                           
  7862                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7863   003AA0  0E1E               	movlw	30
  7864   003AA2  6F1C               	movwf	28,b	;volatile
  7865                           
  7866                           ;i2c.c: 18:   RD5PPS=0x1C;
  7867   003AA4  0E1C               	movlw	28
  7868   003AA6  6F6F               	movwf	111,b	;volatile
  7869                           
  7870                           ;i2c.c: 19:   RD6PPS=0x1B;
  7871   003AA8  0E1B               	movlw	27
  7872   003AAA  6F70               	movwf	112,b	;volatile
  7873   003AAC                     
  7874                           ; BSR set to: 14
  7875   003AAC  0012               	return		;funcret
  7876   003AAE                     __end_of_I2C_2_Master_Init:
  7877                           	callstack 0
  7878                           
  7879 ;; *************** function _calibSwitchInit *****************
  7880 ;; Defined at:
  7881 ;;		line 341 in file "color.c"
  7882 ;; Parameters:    Size  Location     Type
  7883 ;;		None
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;		None
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  1    wreg      void 
  7888 ;; Registers used:
  7889 ;;		None
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7899 ;;Total ram usage:        0 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 6
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_main
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text37
  7910   003C7C                     __ptext37:
  7911                           	callstack 0
  7912   003C7C                     _calibSwitchInit:
  7913                           	callstack 24
  7914   003C7C                     
  7915                           ;color.c: 342:     TRISFbits.TRISF2 = 1;
  7916   003C7C  8486               	bsf	134,2,c	;volatile
  7917                           
  7918                           ;color.c: 343:     ANSELFbits.ANSELF2 = 0;
  7919   003C7E  010E               	movlb	14	; () banked
  7920   003C80  95B4               	bcf	180,2,b	;volatile
  7921   003C82                     
  7922                           ; BSR set to: 14
  7923   003C82  0012               	return		;funcret
  7924   003C84                     __end_of_calibSwitchInit:
  7925                           	callstack 0
  7926                           
  7927 ;; *************** function _Interrupts_init *****************
  7928 ;; Defined at:
  7929 ;;		line 10 in file "interrupts.c"
  7930 ;; Parameters:    Size  Location     Type
  7931 ;;		None
  7932 ;; Auto vars:     Size  Location     Type
  7933 ;;		None
  7934 ;; Return value:  Size  Location     Type
  7935 ;;                  1    wreg      void 
  7936 ;; Registers used:
  7937 ;;		None
  7938 ;; Tracked objects:
  7939 ;;		On entry : 0/0
  7940 ;;		On exit  : 0/0
  7941 ;;		Unchanged: 0/0
  7942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7947 ;;Total ram usage:        0 bytes
  7948 ;; Hardware stack levels used: 1
  7949 ;; Hardware stack levels required when called: 6
  7950 ;; This function calls:
  7951 ;;		Nothing
  7952 ;; This function is called by:
  7953 ;;		_main
  7954 ;; This function uses a non-reentrant model
  7955 ;;
  7956                           
  7957                           	psect	text38
  7958   003BEC                     __ptext38:
  7959                           	callstack 0
  7960   003BEC                     _Interrupts_init:
  7961                           	callstack 24
  7962   003BEC                     
  7963                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7964   003BEC  8082               	bsf	130,0,c	;volatile
  7965                           
  7966                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  7967   003BEE  010E               	movlb	14	; () banked
  7968   003BF0  919A               	bcf	154,0,b	;volatile
  7969                           
  7970                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  7971   003BF2  9133               	bcf	51,0,b	;volatile
  7972                           
  7973                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  7974   003BF4  8129               	bsf	41,0,b	;volatile
  7975                           
  7976                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  7977   003BF6  811F               	bsf	31,0,b	;volatile
  7978                           
  7979                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  7980   003BF8  90F2               	bcf	242,0,c	;volatile
  7981                           
  7982                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  7983   003BFA  8AF2               	bsf	242,5,c	;volatile
  7984                           
  7985                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  7986   003BFC  8CF2               	bsf	242,6,c	;volatile
  7987                           
  7988                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  7989   003BFE  8EF2               	bsf	242,7,c	;volatile
  7990   003C00                     
  7991                           ; BSR set to: 14
  7992   003C00  0012               	return		;funcret
  7993   003C02                     __end_of_Interrupts_init:
  7994                           	callstack 0
  7995                           
  7996 ;; *************** function _Color_Interrupts_threshold *****************
  7997 ;; Defined at:
  7998 ;;		line 38 in file "interrupts.c"
  7999 ;; Parameters:    Size  Location     Type
  8000 ;;  upperThresho    2   12[COMRAM] unsigned int 
  8001 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      void 
  8006 ;; Registers used:
  8007 ;;		wreg, status,2, status,0, cstack
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8013 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;Total ram usage:        4 bytes
  8018 ;; Hardware stack levels used: 1
  8019 ;; Hardware stack levels required when called: 9
  8020 ;; This function calls:
  8021 ;;		_color_writetoaddr
  8022 ;; This function is called by:
  8023 ;;		_main
  8024 ;; This function uses a non-reentrant model
  8025 ;;
  8026                           
  8027                           	psect	text39
  8028   003AAE                     __ptext39:
  8029                           	callstack 0
  8030   003AAE                     _Color_Interrupts_threshold:
  8031                           	callstack 21
  8032   003AAE                     
  8033                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8034   003AAE  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  8035   003AB2  0E04               	movlw	4
  8036   003AB4  ECBC  F01D         	call	_color_writetoaddr
  8037                           
  8038                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  8039   003AB8  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8040   003ABA  6E0B               	movwf	color_writetoaddr@value^0,c
  8041   003ABC  0E05               	movlw	5
  8042   003ABE  ECBC  F01D         	call	_color_writetoaddr
  8043                           
  8044                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  8045   003AC2  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  8046   003AC6  0E06               	movlw	6
  8047   003AC8  ECBC  F01D         	call	_color_writetoaddr
  8048                           
  8049                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  8050   003ACC  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8051   003ACE  6E0B               	movwf	color_writetoaddr@value^0,c
  8052   003AD0  0E07               	movlw	7
  8053   003AD2  ECBC  F01D         	call	_color_writetoaddr
  8054   003AD6  0012               	return		;funcret
  8055   003AD8                     __end_of_Color_Interrupts_threshold:
  8056                           	callstack 0
  8057                           
  8058 ;; *************** function _Color_Interrupts_init *****************
  8059 ;; Defined at:
  8060 ;;		line 29 in file "interrupts.c"
  8061 ;; Parameters:    Size  Location     Type
  8062 ;;		None
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;		None
  8065 ;; Return value:  Size  Location     Type
  8066 ;;                  1    wreg      void 
  8067 ;; Registers used:
  8068 ;;		wreg, status,2, status,0, cstack
  8069 ;; Tracked objects:
  8070 ;;		On entry : 0/0
  8071 ;;		On exit  : 0/0
  8072 ;;		Unchanged: 0/0
  8073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;Total ram usage:        1 bytes
  8079 ;; Hardware stack levels used: 1
  8080 ;; Hardware stack levels required when called: 9
  8081 ;; This function calls:
  8082 ;;		_color_writetoaddr
  8083 ;; This function is called by:
  8084 ;;		_main
  8085 ;; This function uses a non-reentrant model
  8086 ;;
  8087                           
  8088                           	psect	text40
  8089   003BB8                     __ptext40:
  8090                           	callstack 0
  8091   003BB8                     _Color_Interrupts_init:
  8092                           	callstack 21
  8093   003BB8                     
  8094                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  8095   003BB8  0E13               	movlw	19
  8096   003BBA  6E0B               	movwf	color_writetoaddr@value^0,c
  8097   003BBC  0E00               	movlw	0
  8098   003BBE  ECBC  F01D         	call	_color_writetoaddr
  8099   003BC2                     
  8100                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8101   003BC2  0ED0               	movlw	208
  8102   003BC4  6E0D               	movwf	??_Color_Interrupts_init^0,c
  8103   003BC6  0ECA               	movlw	202
  8104   003BC8                     u3737:
  8105   003BC8  2EE8               	decfsz	wreg,f,c
  8106   003BCA  D7FE               	bra	u3737
  8107   003BCC  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  8108   003BCE  D7FC               	bra	u3737
  8109   003BD0  0012               	return		;funcret
  8110   003BD2                     __end_of_Color_Interrupts_init:
  8111                           	callstack 0
  8112                           
  8113 ;; *************** function _color_writetoaddr *****************
  8114 ;; Defined at:
  8115 ;;		line 24 in file "color.c"
  8116 ;; Parameters:    Size  Location     Type
  8117 ;;  address         1    wreg     unsigned char 
  8118 ;;  value           1   10[COMRAM] unsigned char 
  8119 ;; Auto vars:     Size  Location     Type
  8120 ;;  address         1   11[COMRAM] unsigned char 
  8121 ;; Return value:  Size  Location     Type
  8122 ;;                  1    wreg      void 
  8123 ;; Registers used:
  8124 ;;		wreg, status,2, status,0, cstack
  8125 ;; Tracked objects:
  8126 ;;		On entry : 0/0
  8127 ;;		On exit  : 0/0
  8128 ;;		Unchanged: 0/0
  8129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8130 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;Total ram usage:        2 bytes
  8135 ;; Hardware stack levels used: 1
  8136 ;; Hardware stack levels required when called: 8
  8137 ;; This function calls:
  8138 ;;		_I2C_2_Master_Start
  8139 ;;		_I2C_2_Master_Stop
  8140 ;;		_I2C_2_Master_Write
  8141 ;; This function is called by:
  8142 ;;		_color_click_init
  8143 ;;		_Color_Interrupts_init
  8144 ;;		_Color_Interrupts_threshold
  8145 ;;		_persistence_register
  8146 ;; This function uses a non-reentrant model
  8147 ;;
  8148                           
  8149                           	psect	text41
  8150   003B78                     __ptext41:
  8151                           	callstack 0
  8152   003B78                     _color_writetoaddr:
  8153                           	callstack 21
  8154                           
  8155                           ;incstack = 0
  8156                           ;color_writetoaddr@address stored from wreg
  8157   003B78  6E0C               	movwf	color_writetoaddr@address^0,c
  8158   003B7A                     
  8159                           ;color.c: 25:     I2C_2_Master_Start();
  8160   003B7A  EC2F  F01E         	call	_I2C_2_Master_Start	;wreg free
  8161                           
  8162                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8163   003B7E  0E52               	movlw	82
  8164   003B80  EC0E  F01E         	call	_I2C_2_Master_Write
  8165                           
  8166                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8167   003B84  500C               	movf	color_writetoaddr@address^0,w,c
  8168   003B86  0980               	iorlw	128
  8169   003B88  EC0E  F01E         	call	_I2C_2_Master_Write
  8170                           
  8171                           ;color.c: 28:     I2C_2_Master_Write(value);
  8172   003B8C  500B               	movf	color_writetoaddr@value^0,w,c
  8173   003B8E  EC0E  F01E         	call	_I2C_2_Master_Write
  8174                           
  8175                           ;color.c: 29:     I2C_2_Master_Stop();
  8176   003B92  EC2A  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8177   003B96  0012               	return		;funcret
  8178   003B98                     __end_of_color_writetoaddr:
  8179                           	callstack 0
  8180                           
  8181 ;; *************** function _I2C_2_Master_Write *****************
  8182 ;; Defined at:
  8183 ;;		line 45 in file "i2c.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  data_byte       1    wreg     unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  data_byte       1    9[COMRAM] unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8201 ;;Total ram usage:        1 bytes
  8202 ;; Hardware stack levels used: 1
  8203 ;; Hardware stack levels required when called: 7
  8204 ;; This function calls:
  8205 ;;		_I2C_2_Master_Idle
  8206 ;; This function is called by:
  8207 ;;		_color_writetoaddr
  8208 ;;		_color_read_Red
  8209 ;;		_color_read_Green
  8210 ;;		_color_read_Blue
  8211 ;;		_color_read_Clear
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text42
  8216   003C1C                     __ptext42:
  8217                           	callstack 0
  8218   003C1C                     _I2C_2_Master_Write:
  8219                           	callstack 20
  8220                           
  8221                           ;incstack = 0
  8222                           ;I2C_2_Master_Write@data_byte stored from wreg
  8223   003C1C  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8224   003C1E                     
  8225                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8226   003C1E  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8227   003C22                     
  8228                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8229   003C22  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8230   003C26  0012               	return		;funcret
  8231   003C28                     __end_of_I2C_2_Master_Write:
  8232                           	callstack 0
  8233                           
  8234 ;; *************** function _I2C_2_Master_Stop *****************
  8235 ;; Defined at:
  8236 ;;		line 39 in file "i2c.c"
  8237 ;; Parameters:    Size  Location     Type
  8238 ;;		None
  8239 ;; Auto vars:     Size  Location     Type
  8240 ;;		None
  8241 ;; Return value:  Size  Location     Type
  8242 ;;                  1    wreg      void 
  8243 ;; Registers used:
  8244 ;;		wreg, status,2, status,0, cstack
  8245 ;; Tracked objects:
  8246 ;;		On entry : 0/0
  8247 ;;		On exit  : 0/0
  8248 ;;		Unchanged: 0/0
  8249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8254 ;;Total ram usage:        0 bytes
  8255 ;; Hardware stack levels used: 1
  8256 ;; Hardware stack levels required when called: 7
  8257 ;; This function calls:
  8258 ;;		_I2C_2_Master_Idle
  8259 ;; This function is called by:
  8260 ;;		_color_writetoaddr
  8261 ;;		_color_read_Red
  8262 ;;		_color_read_Green
  8263 ;;		_color_read_Blue
  8264 ;;		_color_read_Clear
  8265 ;; This function uses a non-reentrant model
  8266 ;;
  8267                           
  8268                           	psect	text43
  8269   003C54                     __ptext43:
  8270                           	callstack 0
  8271   003C54                     _I2C_2_Master_Stop:
  8272                           	callstack 20
  8273   003C54                     
  8274                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8275   003C54  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8276   003C58                     
  8277                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8278   003C58  010E               	movlb	14	; () banked
  8279   003C5A  85DA               	bsf	218,2,b	;volatile
  8280   003C5C                     
  8281                           ; BSR set to: 14
  8282   003C5C  0012               	return		;funcret
  8283   003C5E                     __end_of_I2C_2_Master_Stop:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _I2C_2_Master_Start *****************
  8287 ;; Defined at:
  8288 ;;		line 27 in file "i2c.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;		None
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;		None
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  1    wreg      void 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, cstack
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8306 ;;Total ram usage:        0 bytes
  8307 ;; Hardware stack levels used: 1
  8308 ;; Hardware stack levels required when called: 7
  8309 ;; This function calls:
  8310 ;;		_I2C_2_Master_Idle
  8311 ;; This function is called by:
  8312 ;;		_color_writetoaddr
  8313 ;;		_color_read_Red
  8314 ;;		_color_read_Green
  8315 ;;		_color_read_Blue
  8316 ;;		_color_read_Clear
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text44
  8321   003C5E                     __ptext44:
  8322                           	callstack 0
  8323   003C5E                     _I2C_2_Master_Start:
  8324                           	callstack 20
  8325   003C5E                     
  8326                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8327   003C5E  EC81  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8328   003C62                     
  8329                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8330   003C62  010E               	movlb	14	; () banked
  8331   003C64  81DA               	bsf	218,0,b	;volatile
  8332   003C66                     
  8333                           ; BSR set to: 14
  8334   003C66  0012               	return		;funcret
  8335   003C68                     __end_of_I2C_2_Master_Start:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _I2C_2_Master_Idle *****************
  8339 ;; Defined at:
  8340 ;;		line 22 in file "i2c.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2, status,0
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8356 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8357 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8358 ;;Total ram usage:        1 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 6
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_I2C_2_Master_Start
  8365 ;;		_I2C_2_Master_RepStart
  8366 ;;		_I2C_2_Master_Stop
  8367 ;;		_I2C_2_Master_Write
  8368 ;;		_I2C_2_Master_Read
  8369 ;; This function uses a non-reentrant model
  8370 ;;
  8371                           
  8372                           	psect	text45
  8373   003B02                     __ptext45:
  8374                           	callstack 0
  8375   003B02                     _I2C_2_Master_Idle:
  8376                           	callstack 20
  8377   003B02                     l230:
  8378   003B02  010E               	movlb	14	; () banked
  8379   003B04  B5D8               	btfsc	216,2,b	;volatile
  8380   003B06  EF87  F01D         	goto	u1631
  8381   003B0A  EF89  F01D         	goto	u1630
  8382   003B0E                     u1631:
  8383   003B0E  EF81  F01D         	goto	l230
  8384   003B12                     u1630:
  8385   003B12                     
  8386                           ; BSR set to: 14
  8387   003B12  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8388   003B16  0E1F               	movlw	31
  8389   003B18  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8390   003B1A  A4D8               	btfss	status,2,c
  8391   003B1C  EF92  F01D         	goto	u1641
  8392   003B20  EF94  F01D         	goto	u1640
  8393   003B24                     u1641:
  8394   003B24  EF81  F01D         	goto	l230
  8395   003B28                     u1640:
  8396   003B28                     
  8397                           ; BSR set to: 14
  8398   003B28  0012               	return		;funcret
  8399   003B2A                     __end_of_I2C_2_Master_Idle:
  8400                           	callstack 0
  8401                           
  8402 ;; *************** function _HighISR *****************
  8403 ;; Defined at:
  8404 ;;		line 71 in file "interrupts.c"
  8405 ;; Parameters:    Size  Location     Type
  8406 ;;		None
  8407 ;; Auto vars:     Size  Location     Type
  8408 ;;		None
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  1    wreg      void 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8422 ;;Total ram usage:        0 bytes
  8423 ;; Hardware stack levels used: 1
  8424 ;; Hardware stack levels required when called: 5
  8425 ;; This function calls:
  8426 ;;		_Color_Interrupts_clear
  8427 ;; This function is called by:
  8428 ;;		Interrupt level 2
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	intcode
  8433   000008                     __pintcode:
  8434                           	callstack 0
  8435   000008                     _HighISR:
  8436                           	callstack 20
  8437                           
  8438                           ; BSR set to: 14
  8439                           ;incstack = 0
  8440   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8441   00000A                     
  8442                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  8443   00000A  010E               	movlb	14	; () banked
  8444   00000C  A133               	btfss	51,0,b	;volatile
  8445   00000E  EF0B  F000         	goto	i2u316_41
  8446   000012  EF0D  F000         	goto	i2u316_40
  8447   000016                     i2u316_41:
  8448   000016  EF18  F000         	goto	i2l536
  8449   00001A                     i2u316_40:
  8450   00001A                     
  8451                           ; BSR set to: 14
  8452                           ;interrupts.c: 77:         interrupt_flag = 1;
  8453   00001A  0E00               	movlw	0
  8454   00001C  0100               	movlb	0	; () banked
  8455   00001E  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  8456   000020  0E01               	movlw	1
  8457   000022  6FD8               	movwf	_interrupt_flag& (0+255),b
  8458   000024                     
  8459                           ; BSR set to: 0
  8460                           ;interrupts.c: 78:         interrupt_ctr++;
  8461   000024  4BD6               	infsnz	_interrupt_ctr& (0+255),f,b
  8462   000026  2BD7               	incf	(_interrupt_ctr+1)& (0+255),f,b
  8463   000028                     
  8464                           ; BSR set to: 0
  8465                           ;interrupts.c: 79:         Color_Interrupts_clear();
  8466   000028  EC29  F01D         	call	_Color_Interrupts_clear	;wreg free
  8467   00002C                     
  8468                           ;interrupts.c: 80:         PIR0bits.INT0IF = 0;
  8469   00002C  010E               	movlb	14	; () banked
  8470   00002E  9133               	bcf	51,0,b	;volatile
  8471   000030                     i2l536:
  8472                           
  8473                           ; BSR set to: 14
  8474   000030  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8475   000032  0011               	retfie		f
  8476   000034                     __end_of_HighISR:
  8477                           	callstack 0
  8478                           
  8479 ;; *************** function _Color_Interrupts_clear *****************
  8480 ;; Defined at:
  8481 ;;		line 51 in file "interrupts.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;		None
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, status,2, status,0, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used: 1
  8501 ;; Hardware stack levels required when called: 4
  8502 ;; This function calls:
  8503 ;;		i2_Color_Interrupts_init
  8504 ;;		i2_Color_Interrupts_threshold
  8505 ;;		i2_I2C_2_Master_Start
  8506 ;;		i2_I2C_2_Master_Stop
  8507 ;;		i2_I2C_2_Master_Write
  8508 ;;		i2_persistence_register
  8509 ;; This function is called by:
  8510 ;;		_HighISR
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           	psect	text47
  8515   003A52                     __ptext47:
  8516                           	callstack 0
  8517   003A52                     _Color_Interrupts_clear:
  8518                           	callstack 20
  8519   003A52                     
  8520                           ;interrupts.c: 55:     I2C_2_Master_Start();
  8521   003A52  EC39  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8522                           
  8523                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  8524   003A56  0E52               	movlw	82
  8525   003A58  EC1A  F01E         	call	i2_I2C_2_Master_Write
  8526                           
  8527                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  8528   003A5C  0EE6               	movlw	230
  8529   003A5E  EC1A  F01E         	call	i2_I2C_2_Master_Write
  8530                           
  8531                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  8532   003A62  EC34  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8533                           
  8534                           ;interrupts.c: 61:     Color_Interrupts_init();
  8535   003A66  ECE9  F01D         	call	i2_Color_Interrupts_init	;wreg free
  8536                           
  8537                           ;interrupts.c: 62:     persistence_register();
  8538   003A6A  EC14  F01E         	call	i2_persistence_register	;wreg free
  8539                           
  8540                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  8541   003A6E  C0EA  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  8542   003A72  C0EB  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  8543   003A76  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  8544   003A7A  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  8545   003A7E  EC6C  F01D         	call	i2_Color_Interrupts_threshold	;wreg free
  8546   003A82  0012               	return		;funcret
  8547   003A84                     __end_of_Color_Interrupts_clear:
  8548                           	callstack 0
  8549                           
  8550 ;; *************** function i2_persistence_register *****************
  8551 ;; Defined at:
  8552 ;;		line 46 in file "interrupts.c"
  8553 ;; Parameters:    Size  Location     Type
  8554 ;;		None
  8555 ;; Auto vars:     Size  Location     Type
  8556 ;;		None
  8557 ;; Return value:  Size  Location     Type
  8558 ;;                  1    wreg      void 
  8559 ;; Registers used:
  8560 ;;		wreg, status,2, status,0, cstack
  8561 ;; Tracked objects:
  8562 ;;		On entry : 0/0
  8563 ;;		On exit  : 0/0
  8564 ;;		Unchanged: 0/0
  8565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8570 ;;Total ram usage:        0 bytes
  8571 ;; Hardware stack levels used: 1
  8572 ;; Hardware stack levels required when called: 3
  8573 ;; This function calls:
  8574 ;;		i2_color_writetoaddr
  8575 ;; This function is called by:
  8576 ;;		_Color_Interrupts_clear
  8577 ;; This function uses a non-reentrant model
  8578 ;;
  8579                           
  8580                           	psect	text48
  8581   003C28                     __ptext48:
  8582                           	callstack 0
  8583   003C28                     i2_persistence_register:
  8584                           	callstack 20
  8585   003C28                     
  8586                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  8587   003C28  0E02               	movlw	2
  8588   003C2A  6E03               	movwf	i2color_writetoaddr@value^0,c
  8589   003C2C  0E0C               	movlw	12
  8590   003C2E  ECCC  F01D         	call	i2_color_writetoaddr
  8591   003C32  0012               	return		;funcret
  8592   003C34                     __end_ofi2_persistence_register:
  8593                           	callstack 0
  8594                           
  8595 ;; *************** function i2_Color_Interrupts_threshold *****************
  8596 ;; Defined at:
  8597 ;;		line 38 in file "interrupts.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;  upperThresho    2    4[COMRAM] unsigned int 
  8600 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  8601 ;; Auto vars:     Size  Location     Type
  8602 ;;		None
  8603 ;; Return value:  Size  Location     Type
  8604 ;;                  1    wreg      void 
  8605 ;; Registers used:
  8606 ;;		wreg, status,2, status,0, cstack
  8607 ;; Tracked objects:
  8608 ;;		On entry : 0/0
  8609 ;;		On exit  : 0/0
  8610 ;;		Unchanged: 0/0
  8611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8615 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8616 ;;Total ram usage:        4 bytes
  8617 ;; Hardware stack levels used: 1
  8618 ;; Hardware stack levels required when called: 3
  8619 ;; This function calls:
  8620 ;;		i2_color_writetoaddr
  8621 ;; This function is called by:
  8622 ;;		_Color_Interrupts_clear
  8623 ;; This function uses a non-reentrant model
  8624 ;;
  8625                           
  8626                           	psect	text49
  8627   003AD8                     __ptext49:
  8628                           	callstack 0
  8629   003AD8                     i2_Color_Interrupts_threshold:
  8630                           	callstack 20
  8631   003AD8                     
  8632                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8633   003AD8  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  8634   003ADC  0E04               	movlw	4
  8635   003ADE  ECCC  F01D         	call	i2_color_writetoaddr
  8636                           
  8637                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  8638   003AE2  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8639   003AE4  6E03               	movwf	i2color_writetoaddr@value^0,c
  8640   003AE6  0E05               	movlw	5
  8641   003AE8  ECCC  F01D         	call	i2_color_writetoaddr
  8642                           
  8643                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  8644   003AEC  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  8645   003AF0  0E06               	movlw	6
  8646   003AF2  ECCC  F01D         	call	i2_color_writetoaddr
  8647                           
  8648                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  8649   003AF6  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8650   003AF8  6E03               	movwf	i2color_writetoaddr@value^0,c
  8651   003AFA  0E07               	movlw	7
  8652   003AFC  ECCC  F01D         	call	i2_color_writetoaddr
  8653   003B00  0012               	return		;funcret
  8654   003B02                     __end_ofi2_Color_Interrupts_threshold:
  8655                           	callstack 0
  8656                           
  8657 ;; *************** function i2_Color_Interrupts_init *****************
  8658 ;; Defined at:
  8659 ;;		line 29 in file "interrupts.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;Total ram usage:        1 bytes
  8678 ;; Hardware stack levels used: 1
  8679 ;; Hardware stack levels required when called: 3
  8680 ;; This function calls:
  8681 ;;		i2_color_writetoaddr
  8682 ;; This function is called by:
  8683 ;;		_Color_Interrupts_clear
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text50
  8688   003BD2                     __ptext50:
  8689                           	callstack 0
  8690   003BD2                     i2_Color_Interrupts_init:
  8691                           	callstack 20
  8692   003BD2                     
  8693                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  8694   003BD2  0E13               	movlw	19
  8695   003BD4  6E03               	movwf	i2color_writetoaddr@value^0,c
  8696   003BD6  0E00               	movlw	0
  8697   003BD8  ECCC  F01D         	call	i2_color_writetoaddr
  8698   003BDC                     
  8699                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8700   003BDC  0ED0               	movlw	208
  8701   003BDE  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  8702   003BE0  0ECA               	movlw	202
  8703   003BE2                     i2u374_47:
  8704   003BE2  2EE8               	decfsz	wreg,f,c
  8705   003BE4  D7FE               	bra	i2u374_47
  8706   003BE6  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  8707   003BE8  D7FC               	bra	i2u374_47
  8708   003BEA  0012               	return		;funcret
  8709   003BEC                     __end_ofi2_Color_Interrupts_init:
  8710                           	callstack 0
  8711                           
  8712 ;; *************** function i2_color_writetoaddr *****************
  8713 ;; Defined at:
  8714 ;;		line 24 in file "color.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  address         1    wreg     unsigned char 
  8717 ;;  value           1    2[COMRAM] unsigned char 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  address         1    3[COMRAM] unsigned char 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, status,2, status,0, cstack
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8729 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8733 ;;Total ram usage:        2 bytes
  8734 ;; Hardware stack levels used: 1
  8735 ;; Hardware stack levels required when called: 2
  8736 ;; This function calls:
  8737 ;;		i2_I2C_2_Master_Start
  8738 ;;		i2_I2C_2_Master_Stop
  8739 ;;		i2_I2C_2_Master_Write
  8740 ;; This function is called by:
  8741 ;;		i2_Color_Interrupts_init
  8742 ;;		i2_Color_Interrupts_threshold
  8743 ;;		i2_persistence_register
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text51
  8748   003B98                     __ptext51:
  8749                           	callstack 0
  8750   003B98                     i2_color_writetoaddr:
  8751                           	callstack 20
  8752                           
  8753                           ;incstack = 0
  8754                           ;i2color_writetoaddr@address stored from wreg
  8755   003B98  6E04               	movwf	i2color_writetoaddr@address^0,c
  8756   003B9A                     
  8757                           ;color.c: 25:     I2C_2_Master_Start();
  8758   003B9A  EC39  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8759                           
  8760                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8761   003B9E  0E52               	movlw	82
  8762   003BA0  EC1A  F01E         	call	i2_I2C_2_Master_Write
  8763                           
  8764                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8765   003BA4  5004               	movf	i2color_writetoaddr@address^0,w,c
  8766   003BA6  0980               	iorlw	128
  8767   003BA8  EC1A  F01E         	call	i2_I2C_2_Master_Write
  8768                           
  8769                           ;color.c: 28:     I2C_2_Master_Write(value);
  8770   003BAC  5003               	movf	i2color_writetoaddr@value^0,w,c
  8771   003BAE  EC1A  F01E         	call	i2_I2C_2_Master_Write
  8772                           
  8773                           ;color.c: 29:     I2C_2_Master_Stop();
  8774   003BB2  EC34  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8775   003BB6  0012               	return		;funcret
  8776   003BB8                     __end_ofi2_color_writetoaddr:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function i2_I2C_2_Master_Write *****************
  8780 ;; Defined at:
  8781 ;;		line 45 in file "i2c.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  data_byte       1    wreg     unsigned char 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  data_byte       1    1[COMRAM] unsigned char 
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      void 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2, status,0, cstack
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8798 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8799 ;;Total ram usage:        1 bytes
  8800 ;; Hardware stack levels used: 1
  8801 ;; Hardware stack levels required when called: 1
  8802 ;; This function calls:
  8803 ;;		i2_I2C_2_Master_Idle
  8804 ;; This function is called by:
  8805 ;;		_Color_Interrupts_clear
  8806 ;;		i2_color_writetoaddr
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           	psect	text52
  8811   003C34                     __ptext52:
  8812                           	callstack 0
  8813   003C34                     i2_I2C_2_Master_Write:
  8814                           	callstack 20
  8815                           
  8816                           ;incstack = 0
  8817                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8818   003C34  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8819   003C36                     
  8820                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8821   003C36  EC95  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8822   003C3A                     
  8823                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8824   003C3A  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8825   003C3E  0012               	return		;funcret
  8826   003C40                     __end_ofi2_I2C_2_Master_Write:
  8827                           	callstack 0
  8828                           
  8829 ;; *************** function i2_I2C_2_Master_Stop *****************
  8830 ;; Defined at:
  8831 ;;		line 39 in file "i2c.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;		None
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;		None
  8836 ;; Return value:  Size  Location     Type
  8837 ;;                  1    wreg      void 
  8838 ;; Registers used:
  8839 ;;		wreg, status,2, status,0, cstack
  8840 ;; Tracked objects:
  8841 ;;		On entry : 0/0
  8842 ;;		On exit  : 0/0
  8843 ;;		Unchanged: 0/0
  8844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8849 ;;Total ram usage:        0 bytes
  8850 ;; Hardware stack levels used: 1
  8851 ;; Hardware stack levels required when called: 1
  8852 ;; This function calls:
  8853 ;;		i2_I2C_2_Master_Idle
  8854 ;; This function is called by:
  8855 ;;		_Color_Interrupts_clear
  8856 ;;		i2_color_writetoaddr
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text53
  8861   003C68                     __ptext53:
  8862                           	callstack 0
  8863   003C68                     i2_I2C_2_Master_Stop:
  8864                           	callstack 20
  8865   003C68                     
  8866                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8867   003C68  EC95  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8868   003C6C                     
  8869                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8870   003C6C  010E               	movlb	14	; () banked
  8871   003C6E  85DA               	bsf	218,2,b	;volatile
  8872   003C70                     
  8873                           ; BSR set to: 14
  8874   003C70  0012               	return		;funcret
  8875   003C72                     __end_ofi2_I2C_2_Master_Stop:
  8876                           	callstack 0
  8877                           
  8878 ;; *************** function i2_I2C_2_Master_Start *****************
  8879 ;; Defined at:
  8880 ;;		line 27 in file "i2c.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, status,2, status,0, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:        0 bytes
  8899 ;; Hardware stack levels used: 1
  8900 ;; Hardware stack levels required when called: 1
  8901 ;; This function calls:
  8902 ;;		i2_I2C_2_Master_Idle
  8903 ;; This function is called by:
  8904 ;;		_Color_Interrupts_clear
  8905 ;;		i2_color_writetoaddr
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           	psect	text54
  8910   003C72                     __ptext54:
  8911                           	callstack 0
  8912   003C72                     i2_I2C_2_Master_Start:
  8913                           	callstack 20
  8914   003C72                     
  8915                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8916   003C72  EC95  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8917   003C76                     
  8918                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8919   003C76  010E               	movlb	14	; () banked
  8920   003C78  81DA               	bsf	218,0,b	;volatile
  8921   003C7A                     
  8922                           ; BSR set to: 14
  8923   003C7A  0012               	return		;funcret
  8924   003C7C                     __end_ofi2_I2C_2_Master_Start:
  8925                           	callstack 0
  8926                           
  8927 ;; *************** function i2_I2C_2_Master_Idle *****************
  8928 ;; Defined at:
  8929 ;;		line 22 in file "i2c.c"
  8930 ;; Parameters:    Size  Location     Type
  8931 ;;		None
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;		None
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      void 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;Total ram usage:        1 bytes
  8948 ;; Hardware stack levels used: 1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		i2_I2C_2_Master_Start
  8953 ;;		i2_I2C_2_Master_Stop
  8954 ;;		i2_I2C_2_Master_Write
  8955 ;; This function uses a non-reentrant model
  8956 ;;
  8957                           
  8958                           	psect	text55
  8959   003B2A                     __ptext55:
  8960                           	callstack 0
  8961   003B2A                     i2_I2C_2_Master_Idle:
  8962                           	callstack 20
  8963   003B2A                     i2l230:
  8964   003B2A  010E               	movlb	14	; () banked
  8965   003B2C  B5D8               	btfsc	216,2,b	;volatile
  8966   003B2E  EF9B  F01D         	goto	i2u168_41
  8967   003B32  EF9D  F01D         	goto	i2u168_40
  8968   003B36                     i2u168_41:
  8969   003B36  EF95  F01D         	goto	i2l230
  8970   003B3A                     i2u168_40:
  8971   003B3A                     
  8972                           ; BSR set to: 14
  8973   003B3A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8974   003B3E  0E1F               	movlw	31
  8975   003B40  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8976   003B42  A4D8               	btfss	status,2,c
  8977   003B44  EFA6  F01D         	goto	i2u169_41
  8978   003B48  EFA8  F01D         	goto	i2u169_40
  8979   003B4C                     i2u169_41:
  8980   003B4C  EF95  F01D         	goto	i2l230
  8981   003B50                     i2u169_40:
  8982   003B50                     
  8983                           ; BSR set to: 14
  8984   003B50  0012               	return		;funcret
  8985   003B52                     __end_ofi2_I2C_2_Master_Idle:
  8986                           	callstack 0
  8987                           
  8988                           	psect	rparam
  8989   000000                     
  8990                           	psect	temp
  8991   000057                     btemp:
  8992                           	callstack 0
  8993   000057                     	ds	1
  8994   000000                     int$flags	set	btemp
  8995   000000                     wtemp8	set	btemp+1
  8996   000000                     ttemp5	set	btemp+1
  8997   000000                     ttemp6	set	btemp+4
  8998   000000                     ttemp7	set	btemp+8
  8999                           
  9000                           	psect	idloc
  9001                           
  9002                           ;Config register IDLOC0 @ 0x200000
  9003                           ;	unspecified, using default values
  9004   200000                     	org	2097152
  9005   200000  0FFF               	dw	4095
  9006                           
  9007                           ;Config register IDLOC1 @ 0x200002
  9008                           ;	unspecified, using default values
  9009   200002                     	org	2097154
  9010   200002  0FFF               	dw	4095
  9011                           
  9012                           ;Config register IDLOC2 @ 0x200004
  9013                           ;	unspecified, using default values
  9014   200004                     	org	2097156
  9015   200004  0FFF               	dw	4095
  9016                           
  9017                           ;Config register IDLOC3 @ 0x200006
  9018                           ;	unspecified, using default values
  9019   200006                     	org	2097158
  9020   200006  0FFF               	dw	4095
  9021                           
  9022                           ;Config register IDLOC4 @ 0x200008
  9023                           ;	unspecified, using default values
  9024   200008                     	org	2097160
  9025   200008  0FFF               	dw	4095
  9026                           
  9027                           ;Config register IDLOC5 @ 0x20000A
  9028                           ;	unspecified, using default values
  9029   20000A                     	org	2097162
  9030   20000A  0FFF               	dw	4095
  9031                           
  9032                           ;Config register IDLOC6 @ 0x20000C
  9033                           ;	unspecified, using default values
  9034   20000C                     	org	2097164
  9035   20000C  0FFF               	dw	4095
  9036                           
  9037                           ;Config register IDLOC7 @ 0x20000E
  9038                           ;	unspecified, using default values
  9039   20000E                     	org	2097166
  9040   20000E  0FFF               	dw	4095
  9041                           
  9042                           	psect	config
  9043                           
  9044                           ;Config register CONFIG1L @ 0x300000
  9045                           ;	External Oscillator mode Selection bits
  9046                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9047                           ;	Power-up default value for COSC bits
  9048                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9049   300000                     	org	3145728
  9050   300000  AA                 	db	170
  9051                           
  9052                           ;Config register CONFIG1H @ 0x300001
  9053                           ;	unspecified, using default values
  9054                           ;	Clock Out Enable bit
  9055                           ;	CLKOUTEN = 0x1, unprogrammed default
  9056                           ;	Clock Switch Enable bit
  9057                           ;	CSWEN = 0x1, unprogrammed default
  9058                           ;	Fail-Safe Clock Monitor Enable bit
  9059                           ;	FCMEN = 0x1, unprogrammed default
  9060   300001                     	org	3145729
  9061   300001  FF                 	db	255
  9062                           
  9063                           ;Config register CONFIG2L @ 0x300002
  9064                           ;	unspecified, using default values
  9065                           ;	Master Clear Enable bit
  9066                           ;	MCLRE = 0x1, unprogrammed default
  9067                           ;	Power-up Timer Enable bit
  9068                           ;	PWRTE = 0x1, unprogrammed default
  9069                           ;	Low-power BOR enable bit
  9070                           ;	LPBOREN = 0x1, unprogrammed default
  9071                           ;	Brown-out Reset Enable bits
  9072                           ;	BOREN = 0x3, unprogrammed default
  9073   300002                     	org	3145730
  9074   300002  FF                 	db	255
  9075                           
  9076                           ;Config register CONFIG2H @ 0x300003
  9077                           ;	unspecified, using default values
  9078                           ;	Brown Out Reset Voltage selection bits
  9079                           ;	BORV = 0x3, unprogrammed default
  9080                           ;	ZCD Disable bit
  9081                           ;	ZCD = 0x1, unprogrammed default
  9082                           ;	PPSLOCK bit One-Way Set Enable bit
  9083                           ;	PPS1WAY = 0x1, unprogrammed default
  9084                           ;	Stack Full/Underflow Reset Enable bit
  9085                           ;	STVREN = 0x1, unprogrammed default
  9086                           ;	Debugger Enable bit
  9087                           ;	DEBUG = 0x1, unprogrammed default
  9088                           ;	Extended Instruction Set Enable bit
  9089                           ;	XINST = 0x1, unprogrammed default
  9090   300003                     	org	3145731
  9091   300003  FF                 	db	255
  9092                           
  9093                           ;Config register CONFIG3L @ 0x300004
  9094                           ;	WDT Period Select bits
  9095                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9096                           ;	WDT operating mode
  9097                           ;	WDTE = OFF, WDT Disabled
  9098   300004                     	org	3145732
  9099   300004  9F                 	db	159
  9100                           
  9101                           ;Config register CONFIG3H @ 0x300005
  9102                           ;	unspecified, using default values
  9103                           ;	WDT Window Select bits
  9104                           ;	WDTCWS = 0x7, unprogrammed default
  9105                           ;	WDT input clock selector
  9106                           ;	WDTCCS = 0x7, unprogrammed default
  9107   300005                     	org	3145733
  9108   300005  FF                 	db	255
  9109                           
  9110                           ;Config register CONFIG4L @ 0x300006
  9111                           ;	unspecified, using default values
  9112                           ;	Write Protection Block 0
  9113                           ;	WRT0 = 0x1, unprogrammed default
  9114                           ;	Write Protection Block 1
  9115                           ;	WRT1 = 0x1, unprogrammed default
  9116                           ;	Write Protection Block 2
  9117                           ;	WRT2 = 0x1, unprogrammed default
  9118                           ;	Write Protection Block 3
  9119                           ;	WRT3 = 0x1, unprogrammed default
  9120                           ;	Write Protection Block 3
  9121                           ;	WRT4 = 0x1, unprogrammed default
  9122                           ;	Write Protection Block 3
  9123                           ;	WRT5 = 0x1, unprogrammed default
  9124                           ;	Write Protection Block 3
  9125                           ;	WRT6 = 0x1, unprogrammed default
  9126                           ;	Write Protection Block 3
  9127                           ;	WRT7 = 0x1, unprogrammed default
  9128   300006                     	org	3145734
  9129   300006  FF                 	db	255
  9130                           
  9131                           ;Config register CONFIG4H @ 0x300007
  9132                           ;	unspecified, using default values
  9133                           ;	Configuration Register Write Protection bit
  9134                           ;	WRTC = 0x1, unprogrammed default
  9135                           ;	Boot Block Write Protection bit
  9136                           ;	WRTB = 0x1, unprogrammed default
  9137                           ;	Data EEPROM Write Protection bit
  9138                           ;	WRTD = 0x1, unprogrammed default
  9139                           ;	Scanner Enable bit
  9140                           ;	SCANE = 0x1, unprogrammed default
  9141                           ;	Low Voltage Programming Enable bit
  9142                           ;	LVP = 0x1, unprogrammed default
  9143   300007                     	org	3145735
  9144   300007  FF                 	db	255
  9145                           
  9146                           ;Config register CONFIG5L @ 0x300008
  9147                           ;	unspecified, using default values
  9148                           ;	UserNVM Program Memory Code Protection bit
  9149                           ;	CP = 0x1, unprogrammed default
  9150                           ;	DataNVM Memory Code Protection bit
  9151                           ;	CPD = 0x1, unprogrammed default
  9152   300008                     	org	3145736
  9153   300008  FF                 	db	255
  9154                           
  9155                           ;Config register CONFIG5H @ 0x300009
  9156                           ;	unspecified, using default values
  9157   300009                     	org	3145737
  9158   300009  FF                 	db	255
  9159                           
  9160                           ;Config register CONFIG6L @ 0x30000A
  9161                           ;	unspecified, using default values
  9162                           ;	Table Read Protection Block 0
  9163                           ;	EBTR0 = 0x1, unprogrammed default
  9164                           ;	Table Read Protection Block 1
  9165                           ;	EBTR1 = 0x1, unprogrammed default
  9166                           ;	Table Read Protection Block 2
  9167                           ;	EBTR2 = 0x1, unprogrammed default
  9168                           ;	Table Read Protection Block 3
  9169                           ;	EBTR3 = 0x1, unprogrammed default
  9170                           ;	Table Read Protection Block 4
  9171                           ;	EBTR4 = 0x1, unprogrammed default
  9172                           ;	Table Read Protection Block 5
  9173                           ;	EBTR5 = 0x1, unprogrammed default
  9174                           ;	Table Read Protection Block 6
  9175                           ;	EBTR6 = 0x1, unprogrammed default
  9176                           ;	Table Read Protection Block 7
  9177                           ;	EBTR7 = 0x1, unprogrammed default
  9178   30000A                     	org	3145738
  9179   30000A  FF                 	db	255
  9180                           
  9181                           ;Config register CONFIG6H @ 0x30000B
  9182                           ;	unspecified, using default values
  9183                           ;	Boot Block Table Read Protection bit
  9184                           ;	EBTRB = 0x1, unprogrammed default
  9185   30000B                     	org	3145739
  9186   30000B  FF                 	db	255
  9187                           tosu	equ	0xFFF
  9188                           tosh	equ	0xFFE
  9189                           tosl	equ	0xFFD
  9190                           stkptr	equ	0xFFC
  9191                           pclatu	equ	0xFFB
  9192                           pclath	equ	0xFFA
  9193                           pcl	equ	0xFF9
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           indf0	equ	0xFEF
  9201                           postinc0	equ	0xFEE
  9202                           postdec0	equ	0xFED
  9203                           preinc0	equ	0xFEC
  9204                           plusw0	equ	0xFEB
  9205                           fsr0h	equ	0xFEA
  9206                           fsr0l	equ	0xFE9
  9207                           wreg	equ	0xFE8
  9208                           indf1	equ	0xFE7
  9209                           postinc1	equ	0xFE6
  9210                           postdec1	equ	0xFE5
  9211                           preinc1	equ	0xFE4
  9212                           plusw1	equ	0xFE3
  9213                           fsr1h	equ	0xFE2
  9214                           fsr1l	equ	0xFE1
  9215                           bsr	equ	0xFE0
  9216                           indf2	equ	0xFDF
  9217                           postinc2	equ	0xFDE
  9218                           postdec2	equ	0xFDD
  9219                           preinc2	equ	0xFDC
  9220                           plusw2	equ	0xFDB
  9221                           fsr2h	equ	0xFDA
  9222                           fsr2l	equ	0xFD9
  9223                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      86
    BANK0           160     84     140
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2781$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2781$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    rangeCalibrate@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _rangeCalibrate->_color_normalise
    _wallSmash->_setMotorPWM
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0  110494
                                             32 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                    _calibSwitchInit
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      34    28      6   17060
                                             60 COMRAM     2     2      0
                                              0 BANK0     32    26      6
                            ___fladd
                    _color_normalise
                    _color_read_RGBC
                          _norm_stop
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1394
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    2735
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1639
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2996
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   30796
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34986
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4285
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11178
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _norm_stop                                            4     0      4    5261
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    4893
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3416
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibSwitchInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _calibSwitchInit
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     ___fladd
     _color_normalise
     _color_read_RGBC
     _norm_stop
     _wallSmash
       _setMotorPWM
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllhl     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRlllllh      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      63        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 01:22:47 2022

                            _color_read_Red 381C                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 3454  
                              ___fldiv@sign 0032                             _color_read_Blue 390C  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 38BC                            _color_read_Green 386C  
                         ??_Interrupts_init 0009                                         l200 3C82  
                                       l113 3A1E                                         l122 38BA  
                                       l116 3B96                                         l125 395A  
                                       l230 3B02                                         l134 3518  
                                       l119 386A                                         l143 3C0E  
                                       l128 390A                                         l152 3C94  
                                       l233 3B28                                         l137 2F16  
                                       l242 3C5C                                         l162 2BF2  
                                       l146 3C88                                         l227 3AAC  
                                       l236 3C66                                         l245 3C26  
                                       l149 3C8E                                         l158 29B0  
                                       l167 1A8C                                         l191 22F6  
                                       l239 3C48                                         l248 39EA  
                                       l521 3BD0                                         l355 2850  
                                       l524 3AD6                                         l701 327E  
                                       l197 22F6                                         l518 3C00  
                                       l710 3B76                                         l527 3C1A  
                                       l704 381A                                         l641 3598  
                                       l651 37C4                                         l707 3C52  
                                       l654 375A                                         l671 367E  
                                       l648 3082                                         l665 3A50  
                                       l668 36F0                                         l685 3452  
                                       l693 3368                                         l696 321E  
                                       l980 3186                                         l975 3140  
                          ??_motor_response 002D              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 3C02                         i2_color_writetoaddr 3B98  
                                       wreg 000FE8                             _color_normalise 2DA8  
                                      l1201 3604                                        l1303 2536  
                                      l1208 360C                                        l1240 1C30  
                                      l3000 2CD8                                        l1305 25AE  
                                      l1306 259C                                        l3010 2D4E  
                                      l3002 2D14                                        l3100 37DA  
                                      l3020 2D96                                        l3012 2D52  
                                      l3004 2D20                                        l3030 3A94  
                                      l3102 37F0                                        l3110 3646  
                                      l1238 1C7C                                        l3014 2D76  
                                      l3006 2D2E                                        l1255 1D96  
                                      l1247 1F4C                                        l1239 1C6A  
                                      l3032 3A96                                        l3112 3656  
                                      l3104 360E                                        l3120 3382  
                                      l1264 1E66                                        l3200 1BA2  
                                      l3016 2D86                                        l3008 2D4C  
                                      l3040 3454                                        l4000 26DE  
                                      l1265 1E54                                        l3034 3A98  
                                      l3026 3A84                                        l3114 3666  
                                      l3106 3626                                        l3130 33DA  
                                      l3122 3392                                        l3210 1BB6  
                                      l3202 1BA6                                        l3018 2D94  
                                      l3050 2EB4                                        l3042 2DA8  
                                      l4010 271C                                        l4002 26FC  
                                      l3036 3A9A                                        l3028 3A8E  
                                      l3116 3672                                        l3108 3636  
                                      l3140 343A                                        l3132 33E6  
                                      l3124 33A2                                        l3300 1E14  
                                      l3220 1BCA                                        l3212 1BBA  
                                      l3204 1BAA                                        l1292 2690  
                                      l1372 2CE2                                        l3044 2DB0  
                                      l3060 3298                                        l3052 3C84  
                                      l4020 273C                                        l4012 2722  
                                      l4004 2700                                        l1365 2C4A  
                                      l3038 3B7A                                        l3142 3446  
                                      l3134 33F2                                        l3126 33B2  
                                      l3118 336A                                        l3310 1E4C  
                                      l3302 1E16                                        l3230 1C28  
                                      l3214 1BBE                                        l3206 1BAE  
                                      l3222 1BCE                                        l3150 1AAA  
                                      l1294 24F0                                        l3046 2E04  
                                      l3070 32F0                                        l3062 32A8  
                                      l3054 3C8A                                        l4030 2746  
                                      l4022 273E                                        l4014 272A  
                                      l4006 2704                                        l3136 340A  
                                      l3128 33C6                                        l3320 1ECA  
                                      l3304 1E24                                        l3240 1C5E  
                                      l3232 1C3E                                        l3224 1BD2  
                                      l3216 1BC2                                        l3208 1BB2  
                                      l3152 1ABA                                        l3160 1AE4  
                                      l3144 1A8E                                        l1368 2DA6  
                                      l3048 2E5C                                        l3080 3350  
                                      l3072 32FC                                        l3064 32B8  
                                      l3056 3C90                                        l4040 278E  
                                      l4032 2748                                        l4024 2740  
                                      l4016 2732                                        l4008 2718  
                                      l1297 24B4                                        l3090 36B8  
                                      l3138 3422                                        l3330 1F10  
                                      l3314 1E76                                        l3322 1ECC  
                                      l3306 1E28                                        l3250 1CAE  
                                      l3242 1C68                                        l3234 1C4A  
                                      l3226 1BFC                                        l3218 1BC6  
                                      l3170 1B14                                        l3162 1AF4  
                                      l3154 1ACA                                        l3146 1A9A  
                                      l3082 335C                                        l3074 3308  
                                      l3066 32C8                                        l3058 3280  
                                      l4050 27D2                                        l4042 27A2  
                                      l4034 274A                                        l4026 2742  
                                      l4018 273A                                        l1379 2D3E  
                                      l2700 359A                                        l3092 36C8  
                                      l3084 3680                                        l3340 1F3A  
                                      l3332 1F1E                                        l3324 1EDC  
                                      l3316 1E82                                        l3308 1E36  
                                      l3260 1CEA                                        l3252 1CBE  
                                      l3244 1C8A                                        l3236 1C4E  
                                      l3228 1C18                                        l3180 1B54  
                                      l3172 1B22                                        l3164 1AFA  
                                      l3156 1ADA                                        l3148 1AA8  
                                      l3076 3320                                        l3068 32DC  
                                      l4060 2848                                        l4052 27E6  
                                      l4044 27BC                                        l4036 275E  
                                      l4028 2744                                        l3350 30C2  
                                      l2710 35D2                                        l2702 35A2  
                                      l3094 36D8                                        l3086 3698  
                                      l3510 151E                                        l3430 0E94  
                                      l3502 143C                                        l3342 1F3C  
                                      l3334 1F24                                        l3326 1EEC  
                                      l3318 1E90                                        l3270 1D30  
                                      l3262 1CF8                                        l3254 1CCC  
                                      l3246 1C9A                                        l3238 1C5C  
                                      l3190 1B8E                                        l3182 1B56  
                                      l3174 1B24                                        l3166 1B0C  
                                      l3158 1ADC                                        l3078 3338  
                                      l4070 28B4                                        l4062 2852  
                                      l4054 2800                                        l4046 27BE  
                                      l4038 2772                                        l3360 312E  
                                      l3352 30F0                                        l2720 35FE  
                                      l2712 35D8                                        l2704 35B4  
                                      l3096 36E4                                        l3088 36A8  
                                      l3600 19D4                                        l3520 15B6  
                                      l3512 1534                                        l3504 147A  
                                      l3440 0FCA                                        l3432 0ED2  
                                      l3336 1F26                                        l3328 1F0C  
                                      l3280 1DAC                                        l3272 1D64  
                                      l3264 1CFA                                        l3256 1CDA  
                                      l3192 1B92                                        l3176 1B34  
                                      l3184 1B5E                                        l3168 1B0E  
                                      l4080 28FC                                        l4072 28BA  
                                      l4064 2866                                        l4056 280C  
                                      l4048 27D0                                        l2730 3C1E  
                                      l3362 317E                                        l3354 3100  
                                      l3346 3084                                        l2714 35EE  
                                      l2706 35BC                                        l2810 3A38  
                                      l3098 37C6                                        l3610 1A76  
                                      l3602 19FE                                        l3530 163A  
                                      l3522 15DE                                        l3506 14B8  
                                      l3450 104C                                        l3442 0FDE  
                                      l3434 0F10                                        l3426 0E18  
                                      l3338 1F2C                                        l3290 1DE8  
                                      l3282 1DBC                                        l3274 1D66  
                                      l3266 1D04                                        l3258 1CE6  
                                      l3194 1B96                                        l3186 1B6E  
                                      l3178 1B44                                        l2802 38BC  
                                      l4090 2978                                        l4082 2914  
                                      l4074 28BC                                        l4066 2880  
                                      l4058 2818                                        l2732 3C22  
                                      l3380 39FA                                        l3700 3768  
                                      l3364 3184                                        l3356 310E  
                                      l3348 30B2                                        l2716 35F6  
                                      l2708 35C4                                        l2812 3A44  
                                      l2820 31C0                                        l3612 1A7C  
                                      l3604 1A1E                                        l3540 1770  
                                      l3532 1678                                        l3524 15F6  
                                      l3508 14F6                                        l3516 153A  
                                      l3460 110C                                        l3444 0FF6  
                                      l3436 0F4E                                        l3428 0E56  
                                      l3620 1F4E                                        l3292 1DEA  
                                      l3276 1D76                                        l3268 1D0A  
                                      l3196 1B9A                                        l3188 1B80  
                                      l2900 2448                                        l2740 3C44  
                                      l2804 3902                                        l4084 2928  
                                      l4076 28D0                                        l4068 289C  
                                      l4092 2992                                        l2726 3C5E  
                                      l2734 3C54                                        l3382 3A0A  
                                      l3702 3778                                        l3710 36F2  
                                      l3358 3120                                        l2718 35F8  
                                      l2830 3212                                        l2822 31D0  
                                      l2814 3188                                        l3614 1A82  
                                      l3606 1A32                                        l3550 17F4  
                                      l3542 1798                                        l3534 16B6  
                                      l3518 1578                                        l3470 1206  
                                      l3462 114A                                        l3446 1022  
                                      l3438 0F8C                                        l3454 1052  
                                      l3630 200C                                        l3622 1F76  
                                      l3294 1DF8                                        l3286 1DD0  
                                      l3278 1D86                                        l3198 1B9E  
                                      l2910 2490                                        l2902 2458  
                                      l2750 39E6                                        l2742 39AC  
                                      l4094 2994                                        l4086 2942  
                                      l4078 28E8                                        l2728 3C62  
                                      l2736 3C58                                        l3384 3A14  
                                      l3376 39EC                                        l3704 3788  
                                      l3720 3746                                        l3712 36FE  
                                      l2760 2F88                                        l2808 3A20  
                                      l2832 3236                                        l2824 31E4  
                                      l2816 31A0                                        l3616 1A8A  
                                      l3608 1A4A                                        l3560 189E  
                                      l3552 1832                                        l3544 17B0  
                                      l3536 16F4                                        l3528 15FC  
                                      l3480 12F2                                        l3464 1188  
                                      l3456 1090                                        l3448 1036  
                                      l3640 20BC                                        l3632 2026  
                                      l3624 1F9E                                        l3296 1E00  
                                      l3288 1DDA                                        l2920 24DE  
                                      l2912 24A4                                        l2904 2468  
                                      l2840 22F8                                        l2752 39E8  
                                      l2744 39B0                                        l4088 2964  
                                      l2690 3B02                                        l3730 3AAE  
                                      l3378 39F0                                        l3706 379C  
                                      l3714 370E                                        l3722 3C4A  
                                      l2770 3042                                        l2762 2F9C  
                                      l2834 324E                                        l2826 31F8  
                                      l2818 31B0                                        l3570 1900  
                                      l3562 18B6                                        l3554 1846  
                                      l3538 1732                                        l3490 13DE  
                                      l3482 1330                                        l3466 11C6  
                                      l3458 10CE                                        l3474 1238  
                                      l3642 20E4                                        l3650 2156  
                                      l3634 2050                                        l3626 1FBA  
                                      l3298 1E04                                        l2930 2526  
                                      l2922 24EE                                        l2914 24B2  
                                      l2906 2478                                        l2850 2334  
                                      l2842 2304                                        l2746 39B8  
                                      l2738 3C40                                        l3386 3C02  
                                      l2692 3B12                                        l3724 3BEC  
                                      l3708 37B0                                        l3716 371E  
                                      l2764 2FDE                                        l2756 2F18  
                                      l2836 3266                                        l2828 3206  
                                      l3580 1942                                        l3572 1902  
                                      l3556 185E                                        l3548 17B6  
                                      l3492 13F2                                        l3484 136E  
                                      l3476 1276                                        l3468 11EE  
                                      l3660 21EA                                        l3652 2180  
                                      l3644 20FC                                        l3636 2078  
                                      l3628 1FE4                                        l3732 3C10  
                                      l2940 2566                                        l2932 2534  
                                      l2924 2500                                        l2916 24BE  
                                      l2908 2480                                        l2860 2364  
                                      l2852 2344                                        l2844 2312  
                                      l2748 39C0                                        l3726 3BB8  
                                      l3718 3732                                        l2694 3B52  
                                      l2766 2FE2                                        l2758 2F34  
                                      l2838 3272                                        l3590 1980  
                                      l3574 1916                                        l3558 188A  
                                      l3566 18BC                                        l3494 140A  
                                      l3486 13AC                                        l3478 12B4  
                                      l3670 22A0                                        l3662 2216  
                                      l3654 2194                                        l3646 2128  
                                      l3638 2092                                        l2950 25D8  
                                      l2942 2594                                        l2926 2516  
                                      l2934 2546                                        l2918 24DC  
                                      l2870 239A                                        l2862 236A  
                                      l2854 2346                                        l2846 2314  
                                      l2790 386C                                        l3728 3BC2  
                                      l3680 3544                                        l2696 3B6E  
                                      l2768 2FFE                                        l3592 1988  
                                      l3576 192A                                        l3568 18FA  
                                      l3584 1948                                        l3496 141E  
                                      l3488 13CA                                        l3672 22CA  
                                      l3656 21AC                                        l3664 2232  
                                      l3648 213C                                        l2960 2650  
                                      l2952 2602                                        l2936 2554  
                                      l2928 251C                                        l2880 23DA  
                                      l2872 23AA                                        l2864 2378  
                                      l2848 2324                                        l2856 234E  
                                      l2792 38B2                                        l2784 381C  
                                      l3690 3580                                        l3682 3568  
                                      l3586 1964                                        l3578 1940  
                                      l3498 1436                                        l3666 225C  
                                      l3658 21D6                                        l2970 2686  
                                      l2962 266C                                        l2946 25BE  
                                      l2954 2606                                        l2938 2558  
                                      l2882 23EA                                        l2890 240A  
                                      l2874 23AC                                        l2866 237A  
                                      l2858 235E                                        l2786 3862  
                                      l3676 3C7C                                        l3692 358A  
                                      l3684 3572                                        l3596 19A8  
                                      l3588 196C                                        l3668 2284  
                                      l2964 2670                                        l2956 2620  
                                      l2948 25CA                                        l2892 241A  
                                      l2884 23F2                                        l2868 238A  
                                      l2876 23B4                                        l2980 2C06  
                                      l2796 390C                                        l3940 29A6  
                                      l3694 358C                                        l3686 3574  
                                      l3678 351A                                        l3598 19BC  
                                      l2966 267E                                        l2958 2636  
                                      l2894 241A                                        l2886 23F6  
                                      l2878 23C4                                        l2990 2C84  
                                      l2982 2C14                                        l2798 3952  
                                      l3950 29E6                                        l3696 3596  
                                      l3688 357E                                        l2968 2684  
                                      l2992 2C8C                                        l2984 2C5A  
                                      l3960 2A30                                        l3952 29FE  
                                      l3698 375C                                        l2898 242E  
                                      l2994 2C98                                        l2986 2C70  
                                      l2978 2BF6                                        l3970 2AB4  
                                      l3962 2A32                                        l3954 2A00  
                                      l3946 29BE                                        l2996 2CCA  
                                      l3964 2A70                                        l3956 2A0C  
                                      l3948 29D2                                        l3972 2ABA  
                                      l3980 2696                                        l2998 2CCC  
                                      l3974 2AD6                                        l3966 2A88  
                                      l3958 2A18                                        l3990 26D2  
                                      l3982 269A                                        l3976 2BDA  
                                      l3968 2A9C                                        l3992 26D4  
                                      l3984 26A6                                        l3994 26D6  
                                      l3986 26B2                                        l3978 2692  
                                      l3996 26D8                                        l3988 26BE  
                                      l3998 26DA                                        _CR1L 0047  
                                      _CR2L 003F                                        _CR3L 00C8  
                                      STR_1 0E01                                        _CR2U 0043  
                                      _CR3U 00CC                                        u2000 2C14  
                                      u2001 2C10                                        u2010 2C70  
                                      u2011 2C6C                                        u2020 2CC6  
                                      u2100 3338                                        u2021 2CC2  
                                      u2101 3334                                        u2110 340A  
                                      u2030 2D10                                        u2111 3406  
                                      u2031 2D0C                                        u2120 3422  
                                      u3000 2050                                        u2200 1B80  
                                      u2040 2D2E                                        u2121 341E  
                                      u3001 204C                                        u2201 1B7C  
                                      u2041 2D2A                                        u3010 20BC  
                                      u2210 1B8E                                        u2130 1AA8  
                                      u2050 2D3E                                        u3011 20B8  
                                      u2211 1B8A                                        u2131 1AA4  
                                      u2051 2D3A                                        u3020 2180  
                                      u2300 1CCC                                        u2220 1BFC  
                                      u2140 1ABA                                        u2060 2D4C  
                                      u3021 217C                                        u2301 1CC8  
                                      u2221 1BF8                                        u2141 1AB6  
                                      u2061 2D48                                        u3030 225C  
                                      u2310 1CDA                                        u2230 1C14  
                                      u2150 1ACA                                        u2070 2D86  
                                      u3031 2258                                        u2311 1CD6  
                                      u2231 1C0E                                        u2151 1AC6  
                                      u2071 2D82                                        u3040 22CA  
                                      u2400 1E24                                        u2320 1CF8  
                                      u2240 1C16                                        u2160 1B0C  
                                      u2080 2D94                                        u3200 29D2  
                              _BAUD4CONbits 000EE9                                        u3041 22C6  
                                      u2401 1E20                                        u2321 1CF4  
                                      u2161 1B08                                        u2081 2D90  
                                      u3201 29CE                                        u2410 1E36  
                                      u2330 1D30                                        u2250 1C3E  
                                      u2170 1B22                                        u2090 3320  
                                      u3210 2AD6                                        u2411 1E32  
                                      u2331 1D2C                                        u2251 1C3A  
                                      u2171 1B1E                                        u2091 331C  
                                      u3211 2AD2                                        u2500 1F1E  
                                      u2420 1E4C                                        u2340 1D76  
                                      u2260 1C5C                                        u2180 1B34  
                                      u1700 39D4                                        u3220 2772  
                                      u2501 1F1A                                        u2421 1E48  
                                      u2341 1D72                                        u2261 1C58  
                                      u2181 1B30                                        u1701 39CC  
                                      u3221 276E                                        u1630 3B12  
                                      u2510 1F3A                                        u2430 1E62  
                                      u2350 1DAC                                        u2270 1C7C  
                                      u2190 1B44                                        u3230 278E  
                                      u1631 3B0E                                        u2511 1F36  
                                      u2431 1E5E                                        u2351 1DA8  
                                      u2271 1C78                                        u2191 1B40  
                                      u3231 278A                                        u1640 3B28  
                                      u2520 30B2                                        u1720 2F34  
                                      u2600 0E56                                        u2440 1E76  
                                      u2360 1DBC                                        u2280 1C8A  
                                      u1800 238A                                        u3240 27D0  
                                      u1641 3B24                                        u2521 30AE  
                                      u1721 2F30                                        u2601 0E52  
                                      u2441 1E72                                        u2361 1DB8  
                                      u2281 1C86                                        u1801 2386  
                                      u3241 27CC                                        u2530 30F0  
                                      u1650 35B4                                        u1730 2FFE  
                                      u2610 0E94                                        u2450 1E90  
                                      u2370 1DE8                                        u2290 1C9A  
                                      u1810 239A                                        u3250 28B4  
                                      _T2PR 000FBC                                        u2531 30EC  
                                      u1651 35B0                                        u1731 2FFA  
                                      u2611 0E90                                        u2451 1E8C  
                                      u2371 1DE4                                        u2291 1C96  
                                      u1811 2396                                        u3251 28B0  
                                      u3307 2872                                        u2540 310E  
                                      u1660 35D2                                        u1740 3236  
                                      u2700 114A                                        u2620 0ED2  
                                      u2460 1ECA                                        u2380 1DF8  
                                      u1900 2554                                        u1820 23DA  
                                      u3260 2956                                        u2541 310A  
                                      u1661 35CE                                        u1741 3232  
                                      u2701 1146                                        u2621 0ECE  
                                      u2461 1EC6                                        u2381 1DF4  
                                      u1901 2550                                        u1821 23D6  
                                      u3261 294C                                        u3317 28DC  
                                      u2550 312E                                        u1670 35EE  
                                      u1750 324E                                        u2710 1188  
                                      u2630 0F10                                        u2470 1EDC  
                                      u2390 1E14                                        u1910 2566  
                                      u1830 241A                                        u1718 39D6  
                                      u3190 29BE                                        u2551 312A  
                                      u1671 35EA                                        u1751 324A  
                                      u2711 1184                                        u2631 0F0C  
                                      u3407 1FA8                                        u2471 1ED8  
                                      u2391 1E10                                        u1911 2562  
                                      u1831 2416                                        u3191 29BA  
                                      u3327 2908                                        u2560 317E  
                                      u2720 11C6                                        u2640 0F4E  
                                      u2480 1EEC                                        u1920 2594  
                                      u1840 2490                                        u1760 2312  
                                      u2561 317A                                        u2721 11C2  
                                      u2641 0F4A                                        u3417 2016  
                                      u2481 1EE8                                        u1921 2590  
                                      u1841 248C                                        u1761 230E  
                                      u3337 2934                                        u2810 147A  
                                      u2730 1276                                        u2650 0F8C  
                                      u2490 1F0C                                        u1930 25AA  
                                      u1850 24B2                                        u1770 2324  
                                      u2811 1476                                        u2731 1272  
                                      u2651 0F88                                        u3507 228E  
                                      u3427 2082                                        u2491 1F08  
                                      u1931 25A6                                        u1851 24AE  
                                      u1771 2320                                        u3347 2984  
                                      u2900 1732                                        u2820 14B8  
                                      u2740 12B4                                        u2660 0FCA  
                                      u1940 25BE                                        u1860 24DC  
                                      u1780 2334                                        u2901 172E  
                                      u2821 14B4                                        u2741 12B0  
                                      u3517 0FE8                                        u2661 0FC6  
                                      u3437 20EE                                        u1941 25BA  
                                      u1861 24D8                                        u1781 2330  
                                      u3357 29F0                                        u2910 1770  
                                      u2830 14F6                                        u2750 12F2  
                                      u2670 1090                                        u1950 25D8  
                                      u1870 2500                                        u1790 2378  
                                      u3278 295A                                        u3607 17A2  
                                      u2911 176C                                        u2831 14F2  
                                      u2751 12EE                                        u2671 108C  
                                      u3527 1014                                        u3447 211A  
                                      u1951 25D4                                        u1871 24FC  
                                      u1791 2374                                        u3367 2A22  
                                      u3287 27AE                                        u2920 17F4  
                                      u2840 1578                                        u2808 13C0  
                                      u2760 1330                                        u2680 10CE  
                                      u1960 2620                                        u1880 2516  
                                      u3617 1850                                        u2921 17F0  
                                      u2841 1574                                        u2761 132C  
                                      u2681 10CA                                        u3537 1040  
                                      u3457 2146                                        u1961 261C  
                                      u1881 2512                                        u3377 2A7A  
                                      u3297 27F2                                        u2930 1832  
                                      u2850 15B6                                        u2770 136E  
                                      u2690 110C                                        u1970 2650  
                                      u1890 2534                                        u3707 380E  
                                      u3627 187C                                        u2931 182E  
                                      u2851 15B2                                        u2771 136A  
                                      u3547 11F8                                        u2691 1108  
                                      u3467 219E                                        u1971 264C  
                                      u1891 2530                                        u3387 2AA6  
                                      u2940 18FA                                        u2860 163A  
                                      u2780 13AC                                        u1980 267E  
                                      u3717 31FE                                        u2941 18F6  
                                      u3637 18A8                                        u2861 1636  
                                      u2781 13A8                                        u3557 1224  
                                      u3477 21CA                                        u1981 267A  
                                      u3397 2BE4                                        u2950 1964  
                                      u2870 1678                                        u2790 13BE  
                                      u1990 2C06                                        u3727 3A00  
                                      u2951 1960                                        u3647 1934  
                                      u2871 1674                                        u3567 13FC  
                                      u2791 13B6                                        u3487 21F4  
                                      u1991 2C02                                        u2960 19A4  
                                      u2880 16B6                                        u3737 3BC8  
                                      u3657 19C6                                        u2961 19A0  
                                      u2881 16B2                                        u3577 1428  
                                      u3497 2220                                        u2970 1A1E  
                                      u2890 16F4                                        u2971 1A1A  
                                      u3667 19F2                                        u2891 16F0  
                                      u3587 1528                                        u2980 1F76  
                                      u3677 1A3C                                        u3597 15E8  
                                      u2981 1F72                                        u2990 1FE4  
                                      u3687 1A68                                        u2991 1FE0  
                                      u3697 37E4                                        _bLED 3C90  
                                      _gLED 3C8A                                        _rLED 3C84  
                                      _main 2692                                        fsr1h 000FE2  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr1l 000FE1                                        fsr2l 000FD9  
                                      btemp 0057                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0034  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 0033  
                    __end_of_color_read_Red 386C                             __end_of_HighISR 0034  
                              ___param_bank 000000                      rangeCalibrate@calibCtr 007E  
                    rangeCalibrate@clearArr 0066                                       ?_bLED 0001  
                                     ?_gLED 0001                                       ?_rLED 0001  
                           __end_of___fladd 1F4E                                       ?_main 0001  
                           __end_of___fldiv 2692                             __end_of___lwdiv 360E  
                                     i2l116 3BB6                                       i2l230 3B2A  
                                     i2l233 3B50                                       i2l242 3C70  
                                     i2l236 3C7A                                       i2l245 3C3E  
                                     i2l521 3BEA                                       i2l530 3A82  
                                     i2l524 3B00                                       i2l527 3C32  
                                     i2l536 0030                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 3C68  
                __end_of_I2C_2_Master_Write 3C28                                       tablat 000FF5  
                     _Color_Interrupts_init 3BB8                             __end_of_reverse 3280  
                                     ttemp5 0058                                       ttemp6 005B  
                                     ttemp7 005F                                       status 000FD8  
                                     wtemp8 0058                     __end_of_color_read_RGBC 351A  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 395C  
                     _I2C_2_Master_RepStart 3C40                             ?_color_read_Red 000D  
                              __end_of_bLED 3C96                                __end_of_gLED 3C90  
                           __initialization 395C                                __end_of_rLED 3C8A  
                              __end_of_main 29A6                                      ??_bLED 0009  
               ?_Color_Interrupts_threshold 000D                                      ??_gLED 0009  
                          ??_rangeCalibrate 003D                                      ??_rLED 0009  
                                    ??_main 0080                               __activetblptr 000001  
                   __end_of_color_normalise 2F18                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l3024 3B9A  
                                    i2l2722 3B2A                                      i2l3370 3BDC  
                                    i2l2724 3B3A                                      i2l3372 3AD8  
                                    i2l3374 3C28                                      i2l3368 3BD2  
                                    i2l2772 3C72                                      i2l2780 3C36  
                                    i2l2774 3C76                                      i2l2782 3C3A  
                                    i2l3742 3A52                                      i2l2776 3C68  
                                    i2l3920 002C                                      i2l3912 000A  
                                    i2l2778 3C6C                                      i2l3914 001A  
                                    _RG6PPS 000E88                                      i2l3916 0024  
                                    i2l3918 0028                                   ??_HighISR 0009  
                  __end_of_color_click_init 3A20                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 2DA8  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 3C1C                                _CCPTMRS0bits 000FAD  
                                    ___flge 3084                                   ??___fladd 0011  
                                    ___wmul 3B52                                   ??___fldiv 002A  
                                 ??___lwdiv 0013                                      clear_0 397A  
                                    clear_1 3986                                      clear_2 3992  
                                    isa$std 000001                                      main@mL 00A2  
                                    main@mR 00AB                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 3A52                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 36F2  
                          __end_of_turnPrep 381C                                  ___flge@ff1 0009  
                                ___flge@ff2 000D                                ___xxtofl@arg 001E  
                              ___xxtofl@exp 001D                                ___xxtofl@val 0014  
                                __accesstop 0060                     __end_of__initialization 3998  
                  __end_of_color_read_Clear 390C                    __end_of_color_read_Green 38BC  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0022                            ?_color_read_Blue 000D  
                           _Interrupts_init 3BEC                              __pcstackCOMRAM 0001  
                              __pidataBANK0 3C96              __end_ofi2_persistence_register 3C34  
                              ?_tricolorLED 0001                            ?_color_normalise 003B  
                   i2_Color_Interrupts_init 3BD2                          rangeCalibrate@RGBC 0060  
                                __pbssBANK0 00B4                                  __pbssBANK1 0100  
                          rangeCalibrate@mL 0062                            rangeCalibrate@mR 0064  
                         _color_writetoaddr 3B78                                _T2CLKCONbits 000FBF  
                          motor_response@mL 0029                            motor_response@mR 002B  
                                   ?___flge 0009                          ?_color_writetoaddr 000B  
                                   ?___wmul 0009                           ??_calibSwitchInit 0009  
                        motor_response@temp 0027                       __end_of_motor_retrace 22F8  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 3C10                                  _buggy_path 00DB  
                                _buggy_step 0051                     __end_of_Interrupts_init 3C02  
                            _lowerThreshold 00D0                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 3B98                          _I2C_2_Master_Start 3C5E  
                       i2_I2C_2_Master_Idle 3B2A                          _I2C_2_Master_Write 3C1C  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 3C68  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fladd 1A8E                                     ___fldiv 22F8  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 359A  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 004D                                     __pcinit 395C  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                 ?_turnPrep 0021                                     __ptext0 2692  
                                   __ptext1 3C02                                     __ptext2 3C84  
                                   __ptext3 3C8A                                     __ptext4 3C90  
                                   __ptext5 29A6                                     __ptext6 3280  
                                   __ptext7 3454                                     __ptext8 381C  
                                   __ptext9 386C                        ?i2_I2C_2_Master_Idle 0001  
                                 _T2CONbits 000FBD                                  ??___xxtofl 0018  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                              _upperThreshold 00EA  
                                   _reverse 3188                               _RxBufWriteCnt 0056  
                               motorTRIS@mL 0009                       ?_persistence_register 0001  
                               motorTRIS@mR 000B                                 wallSmash@mL 001C  
                               wallSmash@mR 001E                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 3998  
               __end_ofi2_color_writetoaddr 3BB8                           ?_color_click_init 0001  
                         __end_of_motorTRIS 3C54                           __end_of_wallSmash 336A  
                         __end_of_norm_stop 3A52                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 375C  
                                   postinc0 000FEE                                     postinc1 000FE6  
                                   postinc2 000FDE                                  _motorRinit 36F2  
                             _interrupt_ctr 00D6                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 351A                                  ??_turnLeft 0020  
                                ??_turnPrep 0025                                   _PORTFbits 000F8E  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 3680  
                     ??i2_I2C_2_Master_Stop 0002                                 ___fladd@grs 0018  
                             ___xxtofl@sign 001C                     ??_Color_Interrupts_init 000D  
                                 _TRISAbits 000F81                          setMotorPWM@posDuty 001A  
                                 _TRISBbits 000F82                                   _TRISCbits 000F83  
                                 _TRISDbits 000F84                                   _TRISEbits 000F85  
                                 _TRISFbits 000F86                                   _TRISGbits 000F87  
                                 _TRISHbits 000F88                                 ___fldiv@grs 0035  
                               ___fldiv@rem 002E                            fullSpeedAhead@mL 001C  
                          fullSpeedAhead@mR 001E                    color_writetoaddr@address 000C  
                   ??_I2C_2_Master_RepStart 000A                            ?_Interrupts_init 0001  
                               _CCP1CONbits 000FAB                           ?_color_read_Clear 000D  
                              _EUSART4RXbuf 00B4                                _EUSART4TXbuf 0100  
                               _CCP2CONbits 000FA7                           ?_color_read_Green 000D  
                               _CCP3CONbits 000F26                                 _CCP4CONbits 000F22  
                        ??_color_read_Clear 000F                          ??_color_read_Green 000F  
            __end_of_Color_Interrupts_clear 3A84                              __end_of___flge 3188  
                            _fullSpeedAhead 336A                              __end_of___wmul 3B78  
                       color_read_Clear@tmp 0012                         start_initialization 395C  
                    ??_persistence_register 000D                               _TxBufWriteCnt 0054  
                           _calibSwitchInit 3C7C                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 359A                      __end_of_fullSpeedAhead 3454  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 003B                                 __pdataBANK0 00EA  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 3C7C  
              __end_ofi2_I2C_2_Master_Write 3C40                                   ___fladd@a 000D  
                                 ___fladd@b 0009                                   ___fldiv@a 0026  
                                 ___fldiv@b 0022                                 __pbssCOMRAM 003F  
                             __pcstackBANK0 0060                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 004B  
                                 _amb_green 00D4                             motor_retrace@mL 0029  
                           motor_retrace@mR 002B                            ___lwdiv@dividend 000F  
                           motor_response@j 002F                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fladd 0009  
                                  ?___fldiv 0022                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 3B02                           _I2C_2_Master_Init 3A84  
                         _I2C_2_Master_Read 39AA                           _I2C_2_Master_Stop 3C54  
                              _RxBufReadCnt 0055                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 1A8E                    initDCmotorsPWM@PWMperiod 0009  
                   __end_of_calibSwitchInit 3C84                         ??_I2C_2_Master_Idle 0009  
                       ??_I2C_2_Master_Init 0009                         ??_I2C_2_Master_Read 000A  
                            ___wmul@product 000D                                    _LATAbits 000F79  
                       ??_I2C_2_Master_Stop 000A                                    _LATDbits 000F7C  
                                  _LATEbits 000F7D                                    _LATFbits 000F7E  
                                  _LATGbits 000F7F                                    _LATHbits 000F80  
                                  _IPR0bits 000E1F                                    _PIE0bits 000E29  
                                  _PIE4bits 000E2D                                 turnRight@mL 001C  
                               turnRight@mR 001E                                    i2u316_40 001A  
                                  i2u316_41 0016                                    _PIR0bits 000E33  
                                  i2u168_40 3B3A                                    i2u168_41 3B36  
                                  i2u169_40 3B50                                    i2u169_41 3B4C  
                                  i2u374_47 3BE2                                    _PIR4bits 000E37  
                                 _motorTRIS 3C4A                                   _wallSmash 3280  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 3A20                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 3B2A  
                 __end_of_I2C_2_Master_Init 3AAE                   __end_of_I2C_2_Master_Read 39EC  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 3C5E  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0024                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 0053                    i2color_writetoaddr@value 0003  
                                 _turnRight 360E                              _rangeCalibrate 29A6  
             __end_of_Color_Interrupts_init 3BD2                             ?_motor_response 0027  
             __end_of_I2C_2_Master_RepStart 3C4A                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 3084                        i2_I2C_2_Master_Start 3C72  
                      i2_I2C_2_Master_Write 3C34                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0027                           ??_color_normalise 003D  
                                ?_motorTRIS 0009                                    __Lrparam 0000  
                                ?_wallSmash 001C                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 3B02  
              i2_Color_Interrupts_threshold 3AD8                 __end_ofi2_I2C_2_Master_Idle 3B52  
               __end_ofi2_I2C_2_Master_Stop 3C72                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 1F4E                                  _ANSELFbits 000EB4  
                             ??_tricolorLED 0009                                    _amb_blue 00D2  
                                  ___xxtofl 2BF4                                  _T0CON0bits 000FD5  
                                _T0CON1bits 000FD6                      __end_of_rangeCalibrate 2BF4  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 38BC  
                                  __ptext11 390C                                    __ptext20 336A  
                                  __ptext12 3C40                                    __ptext21 0E18  
                                  __ptext13 39AA                                    __ptext30 3084  
                                  __ptext22 360E                                    __ptext14 2DA8  
                                  __ptext31 3C4A                                    __ptext23 37C6  
                                  __ptext15 2BF4                                    __ptext40 3BB8  
                                  __ptext32 36F2                                    __ptext24 3188  
                                  __ptext16 22F8                                    __ptext41 3B78  
                                  __ptext33 375C                                    __ptext25 3A20  
                                  __ptext17 1A8E                                    __ptext50 3BD2  
                                  __ptext42 3C1C                                    __ptext34 351A  
                                  __ptext26 3680                                    __ptext18 3C10  
                                  __ptext51 3B98                                    __ptext43 3C54  
                                  __ptext35 39EC                                    __ptext27 2F18  
                                  __ptext19 1F4E                                    __ptext52 3C34  
                                  __ptext44 3C5E                                    __ptext36 3A84  
                                  __ptext28 3B52                                    __ptext53 3C68  
                                  __ptext45 3B02                                    __ptext37 3C7C  
                                  __ptext29 359A                                    __ptext54 3C72  
                                  __ptext38 3BEC                                    __ptext55 3B2A  
                                  __ptext47 3A52                                    __ptext39 3AAE  
                                  __ptext48 3C28                                    __ptext49 3AD8  
                          ?_calibSwitchInit 0001                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                   reverse@mL 001C  
                                 reverse@mR 001E                                    _lost_ctr 004F  
                                turnPrep@mL 0021                                  turnPrep@mR 0023  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 0082                                    int$flags 0057  
        __end_of_Color_Interrupts_threshold 3AD8               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 3AAE                                    _turnLeft 3680  
                                  _turnPrep 37C6                              ?_motor_retrace 0027  
                                _INTCONbits 000FF2                             ?_rangeCalibrate 0060  
                               _setMotorPWM 2F18                                motorLinit@mL 0009  
                       __end_of_tricolorLED 3C10                                    intlevel2 0000  
                              _motor_return 00DA                          __end_of_motorLinit 37C6  
                        __end_of_motorRinit 375C                                motorRinit@mR 0009  
                          ??_fullSpeedAhead 0020                                 ??_motorTRIS 000D  
                               ??_wallSmash 0020                                 ??_norm_stop 0020  
           __end_ofi2_Color_Interrupts_init 3BEC                            _color_click_init 39EC  
                                _SSP2DATPPS 000E1D                                  _SSP2CLKPPS 000E1C  
                            _interrupt_flag 00D8                      i2_persistence_register 3C28  
                               ??_turnRight 0020                               ___fladd@signs 0015  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                              ___fladd@aexp 0016                      ??i2_I2C_2_Master_Write 0002  
                              ___fladd@bexp 0017                    ??_Color_Interrupts_clear 0009  
