

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 29 12:13:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 06/04/2022 GMT
    23                           ; 
    24                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F67K40 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   01FE3B                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for main@F14259
    62   01FE3B  16                 	db	22
    63   01FE3C  18                 	db	24
    64   01FE3D  1A                 	db	26
    65   000000                     _LATEbits	set	3965
    66   000000                     _TRISEbits	set	3973
    67   000000                     _LATFbits	set	3966
    68   000000                     _TRISFbits	set	3974
    69   000000                     _LATGbits	set	3967
    70   000000                     _TRISGbits	set	3975
    71   000000                     _T2PR	set	4028
    72   000000                     _T2CONbits	set	4029
    73   000000                     _CCPR2H	set	4006
    74   000000                     _CCPR1H	set	4010
    75   000000                     _SSP2CON2bits	set	3802
    76   000000                     _SSP2CLKPPS	set	3612
    77   000000                     _SSP2DATPPS	set	3613
    78   000000                     _ANSELDbits	set	3751
    79   000000                     _SSP2ADD	set	3798
    80   000000                     _SSP2CON1bits	set	3801
    81   000000                     _SSP2CON2	set	3802
    82   000000                     _TRISDbits	set	3972
    83   000000                     _CCPR4H	set	3873
    84   000000                     _CCPR3H	set	3877
    85   000000                     _SSP2STAT	set	3800
    86   000000                     _SSP2BUF	set	3797
    87   000000                     _RC7PPS	set	3689
    88   000000                     _RD5PPS	set	3695
    89   000000                     _RE2PPS	set	3700
    90   000000                     _RD6PPS	set	3696
    91   000000                     _RE4PPS	set	3702
    92   000000                     _RG6PPS	set	3720
    93   000000                     _T2CLKCONbits	set	4031
    94   000000                     _T2HLTbits	set	4030
    95   000000                     _CCP1CONbits	set	4011
    96   000000                     _CCPTMRS0bits	set	4013
    97   000000                     _CCP2CONbits	set	4007
    98   000000                     _LATAbits	set	3961
    99   000000                     _LATDbits	set	3964
   100   000000                     _CCP3CONbits	set	3878
   101   000000                     _CCP4CONbits	set	3874
   102   000000                     _TRISAbits	set	3969
   103                           
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   01FE68                     __pcinit:
   108                           	callstack 0
   109   01FE68                     start_initialization:
   110                           	callstack 0
   111   01FE68                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Initialize objects allocated to COMRAM (3 bytes)
   115                           ; load TBLPTR registers with __pidataCOMRAM
   116   01FE68  0E3B               	movlw	low __pidataCOMRAM
   117   01FE6A  6EF6               	movwf	tblptrl,c
   118   01FE6C  0EFE               	movlw	high __pidataCOMRAM
   119   01FE6E  6EF7               	movwf	tblptrh,c
   120   01FE70  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
   121   01FE72  6EF8               	movwf	tblptru,c
   122   01FE74  0009               	tblrd		*+	;fetch initializer
   123   01FE76  CFF5 F018          	movff	tablat,__pdataCOMRAM
   124   01FE7A  0009               	tblrd		*+	;fetch initializer
   125   01FE7C  CFF5 F019          	movff	tablat,__pdataCOMRAM+1
   126   01FE80  0009               	tblrd		*+	;fetch initializer
   127   01FE82  CFF5 F01A          	movff	tablat,__pdataCOMRAM+2
   128   01FE86                     end_of_initialization:
   129                           	callstack 0
   130   01FE86                     __end_of__initialization:
   131                           	callstack 0
   132   01FE86  0100               	movlb	0
   133   01FE88  EFA5  F0FF         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	dataCOMRAM
   136   000018                     __pdataCOMRAM:
   137                           	callstack 0
   138   000018                     main@F14259:
   139                           	callstack 0
   140   000018                     	ds	3
   141                           
   142                           	psect	cstackCOMRAM
   143   000001                     __pcstackCOMRAM:
   144                           	callstack 0
   145   000001                     ??_I2C_2_Master_Idle:
   146   000001                     
   147                           ; 1 bytes @ 0x0
   148   000001                     	ds	1
   149   000002                     ??_I2C_2_Master_Read:
   150   000002                     I2C_2_Master_Write@data_byte:
   151                           	callstack 0
   152                           
   153                           ; 1 bytes @ 0x1
   154   000002                     	ds	1
   155   000003                     I2C_2_Master_Read@ack:
   156                           	callstack 0
   157                           
   158                           ; 1 bytes @ 0x2
   159   000003                     	ds	1
   160   000004                     I2C_2_Master_Read@tmp:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x3
   164   000004                     	ds	1
   165   000005                     ?_color_read:
   166                           	callstack 0
   167                           
   168                           ; 2 bytes @ 0x4
   169   000005                     	ds	2
   170   000007                     ??_color_read:
   171                           
   172                           ; 1 bytes @ 0x6
   173   000007                     	ds	3
   174   00000A                     color_read@address:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x9
   178   00000A                     	ds	1
   179   00000B                     color_read@tmp:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0xA
   183   00000B                     	ds	2
   184   00000D                     ??_main:
   185                           
   186                           ; 1 bytes @ 0xC
   187   00000D                     	ds	2
   188   00000F                     main@rgb_address:
   189                           	callstack 0
   190                           
   191                           ; 3 bytes @ 0xE
   192   00000F                     	ds	3
   193   000012                     main@red_val:
   194                           	callstack 0
   195                           
   196                           ; 2 bytes @ 0x11
   197   000012                     	ds	2
   198   000014                     main@blue_val:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x13
   202   000014                     	ds	2
   203   000016                     main@green_val:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x15
   207   000016                     	ds	2
   208                           
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 16 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;  rgb_address     3   14[COMRAM] unsigned char [3]
   219 ;;  green_val       2   21[COMRAM] volatile unsigned int 
   220 ;;  blue_val        2   19[COMRAM] volatile unsigned int 
   221 ;;  red_val         2   17[COMRAM] volatile unsigned int 
   222 ;; Return value:  Size  Location     Type
   223 ;;                  1    wreg      void 
   224 ;; Registers used:
   225 ;;		wreg, status,2, status,0, cstack
   226 ;; Tracked objects:
   227 ;;		On entry : 0/0
   228 ;;		On exit  : 0/0
   229 ;;		Unchanged: 0/0
   230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   232 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   233 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   234 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   235 ;;Total ram usage:       11 bytes
   236 ;; Hardware stack levels required when called: 3
   237 ;; This function calls:
   238 ;;		_color_read
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245   01FF4A                     __ptext0:
   246                           	callstack 0
   247   01FF4A                     _main:
   248                           	callstack 28
   249   01FF4A                     
   250                           ;main.c: 22:     TRISDbits.TRISD3 = 0;
   251   01FF4A  9684               	bcf	132,3,c	;volatile
   252                           
   253                           ;main.c: 23:     LATDbits.LATD3 = 1;
   254   01FF4C  867C               	bsf	124,3,c	;volatile
   255                           
   256                           ;main.c: 25:     TRISGbits.TRISG0 = 0;
   257   01FF4E  9087               	bcf	135,0,c	;volatile
   258                           
   259                           ;main.c: 26:     LATGbits.LATG0 = 1;
   260   01FF50  807F               	bsf	127,0,c	;volatile
   261                           
   262                           ;main.c: 27:     TRISAbits.TRISA4 = 0;
   263   01FF52  9881               	bcf	129,4,c	;volatile
   264                           
   265                           ;main.c: 28:     LATAbits.LATA4= 1;
   266   01FF54  8879               	bsf	121,4,c	;volatile
   267                           
   268                           ;main.c: 29:     TRISFbits.TRISF7 = 0;
   269   01FF56  9E86               	bcf	134,7,c	;volatile
   270                           
   271                           ;main.c: 30:     LATFbits.LATF7 = 1;
   272   01FF58  8E7E               	bsf	126,7,c	;volatile
   273                           
   274                           ;main.c: 31:     TRISAbits.TRISA3 = 0;
   275   01FF5A  9681               	bcf	129,3,c	;volatile
   276                           
   277                           ;main.c: 32:     LATAbits.LATA3 = 1;
   278   01FF5C  8679               	bsf	121,3,c	;volatile
   279                           
   280                           ;main.c: 33:     TRISEbits.TRISE7 = 0;
   281   01FF5E  9E85               	bcf	133,7,c	;volatile
   282                           
   283                           ;main.c: 34:     LATEbits.LATE7 = 1;
   284   01FF60  8E7D               	bsf	125,7,c	;volatile
   285                           
   286                           ;main.c: 35:     char rgb_address[]={0x16, 0x18, 0x1A};
   287   01FF62  C018  F00F         	movff	main@F14259,main@rgb_address
   288   01FF66  C019  F010         	movff	main@F14259+1,main@rgb_address+1
   289   01FF6A  C01A  F011         	movff	main@F14259+2,main@rgb_address+2
   290   01FF6E                     
   291                           ;main.c: 36:     volatile unsigned int red_val=0;
   292   01FF6E  0E00               	movlw	0
   293   01FF70  6E13               	movwf	(main@red_val+1)^0,c	;volatile
   294   01FF72  0E00               	movlw	0
   295   01FF74  6E12               	movwf	main@red_val^0,c	;volatile
   296                           
   297                           ;main.c: 37:     volatile unsigned int blue_val=0;
   298   01FF76  0E00               	movlw	0
   299   01FF78  6E15               	movwf	(main@blue_val+1)^0,c	;volatile
   300   01FF7A  0E00               	movlw	0
   301   01FF7C  6E14               	movwf	main@blue_val^0,c	;volatile
   302                           
   303                           ;main.c: 38:     volatile unsigned int green_val=0;
   304   01FF7E  0E00               	movlw	0
   305   01FF80  6E17               	movwf	(main@green_val+1)^0,c	;volatile
   306   01FF82  0E00               	movlw	0
   307   01FF84  6E16               	movwf	main@green_val^0,c	;volatile
   308   01FF86                     l998:
   309                           
   310                           ;main.c: 40:     {;main.c: 41:         red_val=color_read(rgb_address[0]);
   311   01FF86  500F               	movf	main@rgb_address^0,w,c
   312   01FF88  EC7B  F0FF         	call	_color_read
   313   01FF8C  C005  F012         	movff	?_color_read,main@red_val	;volatile
   314   01FF90  C006  F013         	movff	?_color_read+1,main@red_val+1	;volatile
   315   01FF94                     
   316                           ;main.c: 42:         _delay((unsigned long)((500)*(64000000/4000.0)));
   317   01FF94  0E29               	movlw	41
   318   01FF96  6E0E               	movwf	(??_main+1)^0,c
   319   01FF98  0E96               	movlw	150
   320   01FF9A  6E0D               	movwf	??_main^0,c
   321   01FF9C  0E7F               	movlw	127
   322   01FF9E                     u67:
   323   01FF9E  2EE8               	decfsz	wreg,f,c
   324   01FFA0  D7FE               	bra	u67
   325   01FFA2  2E0D               	decfsz	??_main^0,f,c
   326   01FFA4  D7FC               	bra	u67
   327   01FFA6  2E0E               	decfsz	(??_main+1)^0,f,c
   328   01FFA8  D7FA               	bra	u67
   329   01FFAA  F000               	nop	
   330   01FFAC                     
   331                           ;main.c: 43:         blue_val=color_read(rgb_address[1]);
   332   01FFAC  5010               	movf	(main@rgb_address+1)^0,w,c
   333   01FFAE  EC7B  F0FF         	call	_color_read
   334   01FFB2  C005  F014         	movff	?_color_read,main@blue_val	;volatile
   335   01FFB6  C006  F015         	movff	?_color_read+1,main@blue_val+1	;volatile
   336   01FFBA                     
   337                           ;main.c: 44:         _delay((unsigned long)((500)*(64000000/4000.0)));
   338   01FFBA  0E29               	movlw	41
   339   01FFBC  6E0E               	movwf	(??_main+1)^0,c
   340   01FFBE  0E96               	movlw	150
   341   01FFC0  6E0D               	movwf	??_main^0,c
   342   01FFC2  0E7F               	movlw	127
   343   01FFC4                     u77:
   344   01FFC4  2EE8               	decfsz	wreg,f,c
   345   01FFC6  D7FE               	bra	u77
   346   01FFC8  2E0D               	decfsz	??_main^0,f,c
   347   01FFCA  D7FC               	bra	u77
   348   01FFCC  2E0E               	decfsz	(??_main+1)^0,f,c
   349   01FFCE  D7FA               	bra	u77
   350   01FFD0  F000               	nop	
   351   01FFD2                     
   352                           ;main.c: 45:         green_val=color_read(rgb_address[2]);
   353   01FFD2  5011               	movf	(main@rgb_address+2)^0,w,c
   354   01FFD4  EC7B  F0FF         	call	_color_read
   355   01FFD8  C005  F016         	movff	?_color_read,main@green_val	;volatile
   356   01FFDC  C006  F017         	movff	?_color_read+1,main@green_val+1	;volatile
   357   01FFE0                     
   358                           ;main.c: 46:         _delay((unsigned long)((500)*(64000000/4000.0)));
   359   01FFE0  0E29               	movlw	41
   360   01FFE2  6E0E               	movwf	(??_main+1)^0,c
   361   01FFE4  0E96               	movlw	150
   362   01FFE6  6E0D               	movwf	??_main^0,c
   363   01FFE8  0E7F               	movlw	127
   364   01FFEA                     u87:
   365   01FFEA  2EE8               	decfsz	wreg,f,c
   366   01FFEC  D7FE               	bra	u87
   367   01FFEE  2E0D               	decfsz	??_main^0,f,c
   368   01FFF0  D7FC               	bra	u87
   369   01FFF2  2E0E               	decfsz	(??_main+1)^0,f,c
   370   01FFF4  D7FA               	bra	u87
   371   01FFF6  F000               	nop	
   372   01FFF8  EFC3  F0FF         	goto	l998
   373   01FFFC  EF01  F000         	goto	start
   374   020000                     __end_of_main:
   375                           	callstack 0
   376                           
   377 ;; *************** function _color_read *****************
   378 ;; Defined at:
   379 ;;		line 43 in file "color.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;  address         1    wreg     unsigned char 
   382 ;; Auto vars:     Size  Location     Type
   383 ;;  address         1    9[COMRAM] unsigned char 
   384 ;;  tmp             2   10[COMRAM] unsigned int 
   385 ;; Return value:  Size  Location     Type
   386 ;;                  2    4[COMRAM] unsigned int 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   395 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   397 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   398 ;;Total ram usage:        8 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 2
   401 ;; This function calls:
   402 ;;		_I2C_2_Master_Read
   403 ;;		_I2C_2_Master_RepStart
   404 ;;		_I2C_2_Master_Start
   405 ;;		_I2C_2_Master_Stop
   406 ;;		_I2C_2_Master_Write
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412                           	psect	text1
   413   01FEF6                     __ptext1:
   414                           	callstack 0
   415   01FEF6                     _color_read:
   416                           	callstack 28
   417                           
   418                           ;incstack = 0
   419                           ;color_read@address stored from wreg
   420   01FEF6  6E0A               	movwf	color_read@address^0,c
   421   01FEF8                     
   422                           ;color.c: 43: unsigned int color_read(char address);color.c: 44: {;color.c: 45:  unsigne
      +                          d int tmp;;color.c: 46:  I2C_2_Master_Start();
   423   01FEF8  EC24  F0FF         	call	_I2C_2_Master_Start	;wreg free
   424                           
   425                           ;color.c: 47:  I2C_2_Master_Write(0x52 | 0x00);
   426   01FEFC  0E52               	movlw	82
   427   01FEFE  EC2E  F0FF         	call	_I2C_2_Master_Write
   428                           
   429                           ;color.c: 48:  I2C_2_Master_Write(0xA0 | address);
   430   01FF02  500A               	movf	color_read@address^0,w,c
   431   01FF04  09A0               	iorlw	160
   432   01FF06  EC2E  F0FF         	call	_I2C_2_Master_Write
   433                           
   434                           ;color.c: 49:  I2C_2_Master_RepStart();
   435   01FF0A  EC1F  F0FF         	call	_I2C_2_Master_RepStart	;wreg free
   436                           
   437                           ;color.c: 50:  I2C_2_Master_Write(0x52 | 0x01);
   438   01FF0E  0E53               	movlw	83
   439   01FF10  EC2E  F0FF         	call	_I2C_2_Master_Write
   440                           
   441                           ;color.c: 51:  tmp=I2C_2_Master_Read(1);
   442   01FF14  0E01               	movlw	1
   443   01FF16  EC5A  F0FF         	call	_I2C_2_Master_Read
   444   01FF1A  6E07               	movwf	??_color_read^0,c
   445   01FF1C  5007               	movf	??_color_read^0,w,c
   446   01FF1E  6E0B               	movwf	color_read@tmp^0,c
   447   01FF20  6A0C               	clrf	(color_read@tmp+1)^0,c
   448                           
   449                           ;color.c: 52:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   450   01FF22  0E00               	movlw	0
   451   01FF24  EC5A  F0FF         	call	_I2C_2_Master_Read
   452   01FF28  6E07               	movwf	??_color_read^0,c
   453   01FF2A  5007               	movf	??_color_read^0,w,c
   454   01FF2C  6E09               	movwf	(??_color_read+2)^0,c
   455   01FF2E  6A08               	clrf	(??_color_read+1)^0,c
   456   01FF30  500B               	movf	color_read@tmp^0,w,c
   457   01FF32  1008               	iorwf	(??_color_read+1)^0,w,c
   458   01FF34  6E0B               	movwf	color_read@tmp^0,c
   459   01FF36  500C               	movf	(color_read@tmp+1)^0,w,c
   460   01FF38  1009               	iorwf	(??_color_read+2)^0,w,c
   461   01FF3A  6E0C               	movwf	(color_read@tmp+1)^0,c
   462                           
   463                           ;color.c: 53:  I2C_2_Master_Stop();
   464   01FF3C  EC29  F0FF         	call	_I2C_2_Master_Stop	;wreg free
   465   01FF40                     
   466                           ;color.c: 54:  return tmp;
   467   01FF40  C00B  F005         	movff	color_read@tmp,?_color_read
   468   01FF44  C00C  F006         	movff	color_read@tmp+1,?_color_read+1
   469   01FF48  0012               	return		;funcret
   470   01FF4A                     __end_of_color_read:
   471                           	callstack 0
   472                           
   473 ;; *************** function _I2C_2_Master_Write *****************
   474 ;; Defined at:
   475 ;;		line 45 in file "i2c.c"
   476 ;; Parameters:    Size  Location     Type
   477 ;;  data_byte       1    wreg     unsigned char 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  data_byte       1    1[COMRAM] unsigned char 
   480 ;; Return value:  Size  Location     Type
   481 ;;                  1    wreg      void 
   482 ;; Registers used:
   483 ;;		wreg, status,2, status,0, cstack
   484 ;; Tracked objects:
   485 ;;		On entry : 0/0
   486 ;;		On exit  : 0/0
   487 ;;		Unchanged: 0/0
   488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   493 ;;Total ram usage:        1 bytes
   494 ;; Hardware stack levels used: 1
   495 ;; Hardware stack levels required when called: 1
   496 ;; This function calls:
   497 ;;		_I2C_2_Master_Idle
   498 ;; This function is called by:
   499 ;;		_color_read
   500 ;;		_color_writetoaddr
   501 ;;		_color_read_Red
   502 ;;		_color_read_Blue
   503 ;; This function uses a non-reentrant model
   504 ;;
   505                           
   506                           	psect	text2
   507   01FE5C                     __ptext2:
   508                           	callstack 0
   509   01FE5C                     _I2C_2_Master_Write:
   510                           	callstack 28
   511                           
   512                           ;incstack = 0
   513                           ;I2C_2_Master_Write@data_byte stored from wreg
   514   01FE5C  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
   515   01FE5E                     
   516                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
   517   01FE5E  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   518   01FE62                     
   519                           ;i2c.c: 48:   SSP2BUF = data_byte;
   520   01FE62  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
   521   01FE66  0012               	return		;funcret
   522   01FE68                     __end_of_I2C_2_Master_Write:
   523                           	callstack 0
   524                           
   525 ;; *************** function _I2C_2_Master_Stop *****************
   526 ;; Defined at:
   527 ;;		line 39 in file "i2c.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   545 ;;Total ram usage:        0 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 1
   548 ;; This function calls:
   549 ;;		_I2C_2_Master_Idle
   550 ;; This function is called by:
   551 ;;		_color_read
   552 ;;		_color_writetoaddr
   553 ;;		_color_read_Red
   554 ;;		_color_read_Blue
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text3
   559   01FE52                     __ptext3:
   560                           	callstack 0
   561   01FE52                     _I2C_2_Master_Stop:
   562                           	callstack 28
   563   01FE52                     
   564                           ;i2c.c: 41:   I2C_2_Master_Idle();
   565   01FE52  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   566   01FE56                     
   567                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
   568   01FE56  010E               	movlb	14	; () banked
   569   01FE58  85DA               	bsf	218,2,b	;volatile
   570   01FE5A                     
   571                           ; BSR set to: 14
   572   01FE5A  0012               	return		;funcret
   573   01FE5C                     __end_of_I2C_2_Master_Stop:
   574                           	callstack 0
   575                           
   576 ;; *************** function _I2C_2_Master_Start *****************
   577 ;; Defined at:
   578 ;;		line 27 in file "i2c.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, status,2, status,0, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   596 ;;Total ram usage:        0 bytes
   597 ;; Hardware stack levels used: 1
   598 ;; Hardware stack levels required when called: 1
   599 ;; This function calls:
   600 ;;		_I2C_2_Master_Idle
   601 ;; This function is called by:
   602 ;;		_color_read
   603 ;;		_color_writetoaddr
   604 ;;		_color_read_Red
   605 ;;		_color_read_Blue
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           	psect	text4
   610   01FE48                     __ptext4:
   611                           	callstack 0
   612   01FE48                     _I2C_2_Master_Start:
   613                           	callstack 28
   614   01FE48                     
   615                           ;i2c.c: 29:   I2C_2_Master_Idle();
   616   01FE48  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   617   01FE4C                     
   618                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
   619   01FE4C  010E               	movlb	14	; () banked
   620   01FE4E  81DA               	bsf	218,0,b	;volatile
   621   01FE50                     
   622                           ; BSR set to: 14
   623   01FE50  0012               	return		;funcret
   624   01FE52                     __end_of_I2C_2_Master_Start:
   625                           	callstack 0
   626                           
   627 ;; *************** function _I2C_2_Master_RepStart *****************
   628 ;; Defined at:
   629 ;;		line 33 in file "i2c.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   647 ;;Total ram usage:        0 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 1
   650 ;; This function calls:
   651 ;;		_I2C_2_Master_Idle
   652 ;; This function is called by:
   653 ;;		_color_read
   654 ;;		_color_read_Red
   655 ;;		_color_read_Blue
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text5
   660   01FE3E                     __ptext5:
   661                           	callstack 0
   662   01FE3E                     _I2C_2_Master_RepStart:
   663                           	callstack 28
   664   01FE3E                     
   665                           ;i2c.c: 35:   I2C_2_Master_Idle();
   666   01FE3E  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   667   01FE42                     
   668                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
   669   01FE42  010E               	movlb	14	; () banked
   670   01FE44  83DA               	bsf	218,1,b	;volatile
   671   01FE46                     
   672                           ; BSR set to: 14
   673   01FE46  0012               	return		;funcret
   674   01FE48                     __end_of_I2C_2_Master_RepStart:
   675                           	callstack 0
   676                           
   677 ;; *************** function _I2C_2_Master_Read *****************
   678 ;; Defined at:
   679 ;;		line 51 in file "i2c.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  ack             1    wreg     unsigned char 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  ack             1    2[COMRAM] unsigned char 
   684 ;;  tmp             1    3[COMRAM] unsigned char 
   685 ;; Return value:  Size  Location     Type
   686 ;;                  1    wreg      unsigned char 
   687 ;; Registers used:
   688 ;;		wreg, status,2, status,0, cstack
   689 ;; Tracked objects:
   690 ;;		On entry : 0/0
   691 ;;		On exit  : 0/0
   692 ;;		Unchanged: 0/0
   693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   698 ;;Total ram usage:        3 bytes
   699 ;; Hardware stack levels used: 1
   700 ;; Hardware stack levels required when called: 1
   701 ;; This function calls:
   702 ;;		_I2C_2_Master_Idle
   703 ;; This function is called by:
   704 ;;		_color_read
   705 ;;		_color_read_Red
   706 ;;		_color_read_Blue
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           	psect	text6
   711   01FEB4                     __ptext6:
   712                           	callstack 0
   713   01FEB4                     _I2C_2_Master_Read:
   714                           	callstack 28
   715                           
   716                           ; BSR set to: 14
   717                           ;incstack = 0
   718                           ;I2C_2_Master_Read@ack stored from wreg
   719   01FEB4  6E03               	movwf	I2C_2_Master_Read@ack^0,c
   720   01FEB6                     
   721                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
   722   01FEB6  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   723   01FEBA                     
   724                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
   725   01FEBA  010E               	movlb	14	; () banked
   726   01FEBC  87DA               	bsf	218,3,b	;volatile
   727                           
   728                           ;i2c.c: 56:   I2C_2_Master_Idle();
   729   01FEBE  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   730   01FEC2                     
   731                           ;i2c.c: 57:   tmp = SSP2BUF;
   732   01FEC2  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
   733                           
   734                           ;i2c.c: 58:   I2C_2_Master_Idle();
   735   01FEC6  EC46  F0FF         	call	_I2C_2_Master_Idle	;wreg free
   736   01FECA                     
   737                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
   738   01FECA  5003               	movf	I2C_2_Master_Read@ack^0,w,c
   739   01FECC  B4D8               	btfsc	status,2,c
   740   01FECE  EF6B  F0FF         	goto	u31
   741   01FED2  EF6F  F0FF         	goto	u30
   742   01FED6                     u31:
   743   01FED6  6A02               	clrf	??_I2C_2_Master_Read^0,c
   744   01FED8  2A02               	incf	??_I2C_2_Master_Read^0,f,c
   745   01FEDA  EF70  F0FF         	goto	u48
   746   01FEDE                     u30:
   747   01FEDE  6A02               	clrf	??_I2C_2_Master_Read^0,c
   748   01FEE0                     u48:
   749   01FEE0  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
   750   01FEE2  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
   751   01FEE4  010E               	movlb	14	; () banked
   752   01FEE6  51DA               	movf	218,w,b	;volatile
   753   01FEE8  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
   754   01FEEA  0BDF               	andlw	-33
   755   01FEEC  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
   756   01FEEE  6FDA               	movwf	218,b	;volatile
   757   01FEF0                     
   758                           ; BSR set to: 14
   759                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
   760   01FEF0  89DA               	bsf	218,4,b	;volatile
   761   01FEF2                     
   762                           ; BSR set to: 14
   763                           ;i2c.c: 61:   return tmp;
   764   01FEF2  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
   765   01FEF4                     
   766                           ; BSR set to: 14
   767   01FEF4  0012               	return		;funcret
   768   01FEF6                     __end_of_I2C_2_Master_Read:
   769                           	callstack 0
   770                           
   771 ;; *************** function _I2C_2_Master_Idle *****************
   772 ;; Defined at:
   773 ;;		line 22 in file "i2c.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   789 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   790 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   791 ;;Total ram usage:        1 bytes
   792 ;; Hardware stack levels used: 1
   793 ;; This function calls:
   794 ;;		Nothing
   795 ;; This function is called by:
   796 ;;		_I2C_2_Master_Start
   797 ;;		_I2C_2_Master_RepStart
   798 ;;		_I2C_2_Master_Stop
   799 ;;		_I2C_2_Master_Write
   800 ;;		_I2C_2_Master_Read
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text7
   805   01FE8C                     __ptext7:
   806                           	callstack 0
   807   01FE8C                     _I2C_2_Master_Idle:
   808                           	callstack 28
   809   01FE8C                     l61:
   810   01FE8C  010E               	movlb	14	; () banked
   811   01FE8E  B5D8               	btfsc	216,2,b	;volatile
   812   01FE90  EF4C  F0FF         	goto	u11
   813   01FE94  EF4E  F0FF         	goto	u10
   814   01FE98                     u11:
   815   01FE98  EF46  F0FF         	goto	l61
   816   01FE9C                     u10:
   817   01FE9C                     
   818                           ; BSR set to: 14
   819   01FE9C  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
   820   01FEA0  0E1F               	movlw	31
   821   01FEA2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
   822   01FEA4  A4D8               	btfss	status,2,c
   823   01FEA6  EF57  F0FF         	goto	u21
   824   01FEAA  EF59  F0FF         	goto	u20
   825   01FEAE                     u21:
   826   01FEAE  EF46  F0FF         	goto	l61
   827   01FEB2                     u20:
   828   01FEB2                     
   829                           ; BSR set to: 14
   830   01FEB2  0012               	return		;funcret
   831   01FEB4                     __end_of_I2C_2_Master_Idle:
   832                           	callstack 0
   833   000000                     
   834                           	psect	rparam
   835   000000                     
   836                           	psect	idloc
   837                           
   838                           ;Config register IDLOC0 @ 0x200000
   839                           ;	unspecified, using default values
   840   200000                     	org	2097152
   841   200000  0FFF               	dw	4095
   842                           
   843                           ;Config register IDLOC1 @ 0x200002
   844                           ;	unspecified, using default values
   845   200002                     	org	2097154
   846   200002  0FFF               	dw	4095
   847                           
   848                           ;Config register IDLOC2 @ 0x200004
   849                           ;	unspecified, using default values
   850   200004                     	org	2097156
   851   200004  0FFF               	dw	4095
   852                           
   853                           ;Config register IDLOC3 @ 0x200006
   854                           ;	unspecified, using default values
   855   200006                     	org	2097158
   856   200006  0FFF               	dw	4095
   857                           
   858                           ;Config register IDLOC4 @ 0x200008
   859                           ;	unspecified, using default values
   860   200008                     	org	2097160
   861   200008  0FFF               	dw	4095
   862                           
   863                           ;Config register IDLOC5 @ 0x20000A
   864                           ;	unspecified, using default values
   865   20000A                     	org	2097162
   866   20000A  0FFF               	dw	4095
   867                           
   868                           ;Config register IDLOC6 @ 0x20000C
   869                           ;	unspecified, using default values
   870   20000C                     	org	2097164
   871   20000C  0FFF               	dw	4095
   872                           
   873                           ;Config register IDLOC7 @ 0x20000E
   874                           ;	unspecified, using default values
   875   20000E                     	org	2097166
   876   20000E  0FFF               	dw	4095
   877                           
   878                           	psect	config
   879                           
   880                           ;Config register CONFIG1L @ 0x300000
   881                           ;	External Oscillator mode Selection bits
   882                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
   883                           ;	Power-up default value for COSC bits
   884                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
   885   300000                     	org	3145728
   886   300000  AA                 	db	170
   887                           
   888                           ;Config register CONFIG1H @ 0x300001
   889                           ;	unspecified, using default values
   890                           ;	Clock Out Enable bit
   891                           ;	CLKOUTEN = 0x1, unprogrammed default
   892                           ;	Clock Switch Enable bit
   893                           ;	CSWEN = 0x1, unprogrammed default
   894                           ;	Fail-Safe Clock Monitor Enable bit
   895                           ;	FCMEN = 0x1, unprogrammed default
   896   300001                     	org	3145729
   897   300001  FF                 	db	255
   898                           
   899                           ;Config register CONFIG2L @ 0x300002
   900                           ;	unspecified, using default values
   901                           ;	Master Clear Enable bit
   902                           ;	MCLRE = 0x1, unprogrammed default
   903                           ;	Power-up Timer Enable bit
   904                           ;	PWRTE = 0x1, unprogrammed default
   905                           ;	Low-power BOR enable bit
   906                           ;	LPBOREN = 0x1, unprogrammed default
   907                           ;	Brown-out Reset Enable bits
   908                           ;	BOREN = 0x3, unprogrammed default
   909   300002                     	org	3145730
   910   300002  FF                 	db	255
   911                           
   912                           ;Config register CONFIG2H @ 0x300003
   913                           ;	unspecified, using default values
   914                           ;	Brown Out Reset Voltage selection bits
   915                           ;	BORV = 0x3, unprogrammed default
   916                           ;	ZCD Disable bit
   917                           ;	ZCD = 0x1, unprogrammed default
   918                           ;	PPSLOCK bit One-Way Set Enable bit
   919                           ;	PPS1WAY = 0x1, unprogrammed default
   920                           ;	Stack Full/Underflow Reset Enable bit
   921                           ;	STVREN = 0x1, unprogrammed default
   922                           ;	Debugger Enable bit
   923                           ;	DEBUG = 0x1, unprogrammed default
   924                           ;	Extended Instruction Set Enable bit
   925                           ;	XINST = 0x1, unprogrammed default
   926   300003                     	org	3145731
   927   300003  FF                 	db	255
   928                           
   929                           ;Config register CONFIG3L @ 0x300004
   930                           ;	WDT Period Select bits
   931                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
   932                           ;	WDT operating mode
   933                           ;	WDTE = OFF, WDT Disabled
   934   300004                     	org	3145732
   935   300004  9F                 	db	159
   936                           
   937                           ;Config register CONFIG3H @ 0x300005
   938                           ;	unspecified, using default values
   939                           ;	WDT Window Select bits
   940                           ;	WDTCWS = 0x7, unprogrammed default
   941                           ;	WDT input clock selector
   942                           ;	WDTCCS = 0x7, unprogrammed default
   943   300005                     	org	3145733
   944   300005  FF                 	db	255
   945                           
   946                           ;Config register CONFIG4L @ 0x300006
   947                           ;	unspecified, using default values
   948                           ;	Write Protection Block 0
   949                           ;	WRT0 = 0x1, unprogrammed default
   950                           ;	Write Protection Block 1
   951                           ;	WRT1 = 0x1, unprogrammed default
   952                           ;	Write Protection Block 2
   953                           ;	WRT2 = 0x1, unprogrammed default
   954                           ;	Write Protection Block 3
   955                           ;	WRT3 = 0x1, unprogrammed default
   956                           ;	Write Protection Block 3
   957                           ;	WRT4 = 0x1, unprogrammed default
   958                           ;	Write Protection Block 3
   959                           ;	WRT5 = 0x1, unprogrammed default
   960                           ;	Write Protection Block 3
   961                           ;	WRT6 = 0x1, unprogrammed default
   962                           ;	Write Protection Block 3
   963                           ;	WRT7 = 0x1, unprogrammed default
   964   300006                     	org	3145734
   965   300006  FF                 	db	255
   966                           
   967                           ;Config register CONFIG4H @ 0x300007
   968                           ;	unspecified, using default values
   969                           ;	Configuration Register Write Protection bit
   970                           ;	WRTC = 0x1, unprogrammed default
   971                           ;	Boot Block Write Protection bit
   972                           ;	WRTB = 0x1, unprogrammed default
   973                           ;	Data EEPROM Write Protection bit
   974                           ;	WRTD = 0x1, unprogrammed default
   975                           ;	Scanner Enable bit
   976                           ;	SCANE = 0x1, unprogrammed default
   977                           ;	Low Voltage Programming Enable bit
   978                           ;	LVP = 0x1, unprogrammed default
   979   300007                     	org	3145735
   980   300007  FF                 	db	255
   981                           
   982                           ;Config register CONFIG5L @ 0x300008
   983                           ;	unspecified, using default values
   984                           ;	UserNVM Program Memory Code Protection bit
   985                           ;	CP = 0x1, unprogrammed default
   986                           ;	DataNVM Memory Code Protection bit
   987                           ;	CPD = 0x1, unprogrammed default
   988   300008                     	org	3145736
   989   300008  FF                 	db	255
   990                           
   991                           ;Config register CONFIG5H @ 0x300009
   992                           ;	unspecified, using default values
   993   300009                     	org	3145737
   994   300009  FF                 	db	255
   995                           
   996                           ;Config register CONFIG6L @ 0x30000A
   997                           ;	unspecified, using default values
   998                           ;	Table Read Protection Block 0
   999                           ;	EBTR0 = 0x1, unprogrammed default
  1000                           ;	Table Read Protection Block 1
  1001                           ;	EBTR1 = 0x1, unprogrammed default
  1002                           ;	Table Read Protection Block 2
  1003                           ;	EBTR2 = 0x1, unprogrammed default
  1004                           ;	Table Read Protection Block 3
  1005                           ;	EBTR3 = 0x1, unprogrammed default
  1006                           ;	Table Read Protection Block 4
  1007                           ;	EBTR4 = 0x1, unprogrammed default
  1008                           ;	Table Read Protection Block 5
  1009                           ;	EBTR5 = 0x1, unprogrammed default
  1010                           ;	Table Read Protection Block 6
  1011                           ;	EBTR6 = 0x1, unprogrammed default
  1012                           ;	Table Read Protection Block 7
  1013                           ;	EBTR7 = 0x1, unprogrammed default
  1014   30000A                     	org	3145738
  1015   30000A  FF                 	db	255
  1016                           
  1017                           ;Config register CONFIG6H @ 0x30000B
  1018                           ;	unspecified, using default values
  1019                           ;	Boot Block Table Read Protection bit
  1020                           ;	EBTRB = 0x1, unprogrammed default
  1021   30000B                     	org	3145739
  1022   30000B  FF                 	db	255
  1023                           tosu	equ	0xFFF
  1024                           tosh	equ	0xFFE
  1025                           tosl	equ	0xFFD
  1026                           stkptr	equ	0xFFC
  1027                           pclatu	equ	0xFFB
  1028                           pclath	equ	0xFFA
  1029                           pcl	equ	0xFF9
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           prodh	equ	0xFF4
  1035                           prodl	equ	0xFF3
  1036                           indf0	equ	0xFEF
  1037                           postinc0	equ	0xFEE
  1038                           postdec0	equ	0xFED
  1039                           preinc0	equ	0xFEC
  1040                           plusw0	equ	0xFEB
  1041                           fsr0h	equ	0xFEA
  1042                           fsr0l	equ	0xFE9
  1043                           wreg	equ	0xFE8
  1044                           indf1	equ	0xFE7
  1045                           postinc1	equ	0xFE6
  1046                           postdec1	equ	0xFE5
  1047                           preinc1	equ	0xFE4
  1048                           plusw1	equ	0xFE3
  1049                           fsr1h	equ	0xFE2
  1050                           fsr1l	equ	0xFE1
  1051                           bsr	equ	0xFE0
  1052                           indf2	equ	0xFDF
  1053                           postinc2	equ	0xFDE
  1054                           postdec2	equ	0xFDD
  1055                           preinc2	equ	0xFDC
  1056                           plusw2	equ	0xFDB
  1057                           fsr2h	equ	0xFDA
  1058                           fsr2l	equ	0xFD9
  1059                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        3
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      26
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    S673DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRhlll[1]), CCPR2H(ABS[1]), 

    S673DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRhlll[1]), CCPR1H(ABS[1]), 


Critical Paths under _main in COMRAM

    _main->_color_read
    _color_read->_I2C_2_Master_Read
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0     188
                                             12 COMRAM    11    11      0
                         _color_read
 ---------------------------------------------------------------------------------
 (1) _color_read                                           8     6      2     113
                                              4 COMRAM     8     6      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Write                                   1     1      0      15
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      30
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _color_read
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
       _I2C_2_Master_Idle
     _I2C_2_Master_Stop
       _I2C_2_Master_Idle
     _I2C_2_Master_Write
       _I2C_2_Master_Idle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     17      1A       1       27.4%
BITBIGSFRhlhll      52      0       0      40        0.0%
BITBIGSFRlllhll     4B      0       0      50        0.0%
BITBIGSFRhlll       46      0       0      42        0.0%
BITBIGSFRhhh        40      0       0      32        0.0%
BITBIGSFRllh        2D      0       0      44        0.0%
BITBIGSFRllll       2D      0       0      51        0.0%
BITBIGSFRhhlllh     1E      0       0      36        0.0%
BITBIGSFRlllhhh     1E      0       0      45        0.0%
BITBIGSFRlllhhh     11      0       0      46        0.0%
BITBIGSFRhhlhh       E      0       0      33        0.0%
BITBIGSFRlllhlh      5      0       0      49        0.0%
BITBIGSFRlllhhl      3      0       0      48        0.0%
BITBIGSFRhlhlh       2      0       0      39        0.0%
BITBIGSFRhlhhhh      2      0       0      37        0.0%
BITBIGSFRhllh        2      0       0      41        0.0%
BITBIGSFRhhllh       2      0       0      35        0.0%
BITBIGSFRhlhhhl      1      0       0      38        0.0%
BITBIGSFRhhlhl       1      0       0      34        0.0%
BITBIGSFRlllhhh      1      0       0      47        0.0%
BITBIGSFRlh          1      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      52        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 29 12:13:38 2022

                           l28 FF48                             l61 FE8C                             l70 FE46  
                           l64 FEB2                             l73 FE5A                             l67 FE50  
                           l76 FE66                             l79 FEF4                             u10 FE9C  
                           u11 FE98                             u20 FEB2                             u21 FEAE  
                           u30 FEDE                             u31 FED6                             u48 FEE0  
                           u67 FF9E                             u77 FFC4                             u87 FFEA  
                          l860 FE4C                            l854 FE8C                            l870 FE3E  
                          l862 FE5E                            l856 FE9C                            l880 FECA  
                          l872 FE42                            l864 FE62                            l882 FEF0  
                          l874 FEB6                            l858 FE48                            l866 FE52  
                          l884 FEF2                            l876 FEBA                            l868 FE56  
                          l878 FEC2                            l990 FF40                            l994 FF4A  
                          l988 FEF8                            l996 FF6E                            l998 FF86  
                          wreg 000FE8                           l1000 FF94                           l1002 FFAC  
                         l1004 FFBA                           l1006 FFD2                           l1008 FFE0  
                         _T2PR 000FBC                    main@red_val 0012                           _main FF4A  
                         start 0002                   ___param_bank 000000                   main@blue_val 0014  
                        ?_main 0001     __end_of_I2C_2_Master_Start FE52     __end_of_I2C_2_Master_Write FE68  
                        tablat 000FF5                          status 000FD8          _I2C_2_Master_RepStart FE3E  
              __initialization FE68                   __end_of_main 0000                         ??_main 000D  
                __activetblptr 000000                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         _RE2PPS 000E74  
                       _RD5PPS 000E6F                         _RC7PPS 000E69                         _RE4PPS 000E76  
                       _RD6PPS 000E70                  main@green_val 0016                         _RG6PPS 000E88  
                 _CCPTMRS0bits 000FAD                         isa$std 000001                   __pdataCOMRAM 0018  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
                   __accesstop 0060        __end_of__initialization FE86         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001                 __pcstackCOMRAM 0001                  color_read@tmp 000B  
                 _T2CLKCONbits 000FBF              color_read@address 000A                        _SSP2ADD 000ED6  
                      _SSP2BUF 000ED5                     _color_read FEF6             _I2C_2_Master_Start FE48  
           _I2C_2_Master_Write FE5C                        __Hparam 0000                        __Lparam 0000  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                        __pcinit FE68  
                      __ramtop 0E00                        __ptext0 FF4A                        __ptext1 FEF6  
                      __ptext2 FE5C                        __ptext3 FE52                        __ptext4 FE48  
                      __ptext5 FE3E                        __ptext6 FEB4                        __ptext7 FE8C  
                    _T2CONbits 000FBD                      _T2HLTbits 000FBE           ??_I2C_2_Master_Start 0002  
         ??_I2C_2_Master_Write 0002           end_of_initialization FE86                     main@F14259 0018  
                    _TRISAbits 000F81                      _TRISDbits 000F84                      _TRISEbits 000F85  
                    _TRISFbits 000F86                      _TRISGbits 000F87                    ?_color_read 0005  
      ??_I2C_2_Master_RepStart 0002                    _CCP1CONbits 000FAB                    _CCP2CONbits 000FA7  
                  _CCP3CONbits 000F26                    _CCP4CONbits 000F22                  __pidataCOMRAM FE3B  
          start_initialization FE68           I2C_2_Master_Read@ack 0003           I2C_2_Master_Read@tmp 0004  
            _I2C_2_Master_Idle FE8C              _I2C_2_Master_Read FEB4              _I2C_2_Master_Stop FE52  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Read 0001             ?_I2C_2_Master_Stop 0001  
          ??_I2C_2_Master_Idle 0001            ??_I2C_2_Master_Read 0002                       _LATAbits 000F79  
          ??_I2C_2_Master_Stop 0002                       _LATDbits 000F7C                       _LATEbits 000F7D  
                     _LATFbits 000F7E                       _LATGbits 000F7F                       _SSP2CON2 000EDA  
                     _SSP2STAT 000ED8      __end_of_I2C_2_Master_Idle FEB4      __end_of_I2C_2_Master_Read FEF6  
    __end_of_I2C_2_Master_Stop FE5C    I2C_2_Master_Write@data_byte 0002                   ??_color_read 0007  
              main@rgb_address 000F  __end_of_I2C_2_Master_RepStart FE48                       __Hrparam 0000  
                     __Lrparam 0000             __end_of_color_read FF4A                     _ANSELDbits 000EA7  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
