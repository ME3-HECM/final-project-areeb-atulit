

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 08:58:30 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   003CBC                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _upperThreshold
   116   003CBC  07D0               	dw	2000
   117   000000                     _TRISCbits	set	3971
   118   000000                     _TRISBbits	set	3970
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATFbits	set	3966
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISAbits	set	3969
   127   000000                     _TRISEbits	set	3973
   128   000000                     _SSP2CON2bits	set	3802
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _ANSELFbits	set	3764
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _TRISGbits	set	3975
   138   000000                     _TRISHbits	set	3976
   139   000000                     _PORTFbits	set	3982
   140   000000                     _LATDbits	set	3964
   141   000000                     _T2PR	set	4028
   142   000000                     _T2CONbits	set	4029
   143   000000                     _TMR0L	set	4051
   144   000000                     _TMR0H	set	4052
   145   000000                     _T0CON0bits	set	4053
   146   000000                     _T0CON1bits	set	4054
   147   000000                     _INTCONbits	set	4082
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _RC4REG	set	3811
   154   000000                     _SP4BRGL	set	3813
   155   000000                     _TX4STAbits	set	3816
   156   000000                     _BAUD4CONbits	set	3817
   157   000000                     _SSP2CON2	set	3802
   158   000000                     _SSP2STAT	set	3800
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _PIE4bits	set	3629
   162   000000                     _RC0PPS	set	3682
   163   000000                     _RD5PPS	set	3695
   164   000000                     _RE2PPS	set	3700
   165   000000                     _ANSELBbits	set	3738
   166   000000                     _RD6PPS	set	3696
   167   000000                     _RC7PPS	set	3689
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _PIR0bits	set	3635
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181                           
   182                           	psect	smallconst
   183   000E00                     __psmallconst:
   184                           	callstack 0
   185   000E00  00                 	db	0
   186   000E01                     
   187                           ; BSR set to: 14
   188   000E01  52                 	db	82	;'R'
   189   000E02  47                 	db	71	;'G'
   190   000E03  42                 	db	66	;'B'
   191   000E04  43                 	db	67	;'C'
   192   000E05  3A                 	db	58	;':'
   193   000E06  25                 	db	37
   194   000E07  66                 	db	102	;'f'
   195   000E08  20                 	db	32
   196   000E09  25                 	db	37
   197   000E0A  66                 	db	102	;'f'
   198   000E0B  20                 	db	32
   199   000E0C  25                 	db	37
   200   000E0D  66                 	db	102	;'f'
   201   000E0E  20                 	db	32
   202   000E0F  25                 	db	37
   203   000E10  66                 	db	102	;'f'
   204   000E11  20                 	db	32
   205   000E12  25                 	db	37
   206   000E13  66                 	db	102	;'f'
   207   000E14  0A                 	db	10
   208   000E15  00                 	db	0
   209   000E16  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214   003982                     __pcinit:
   215                           	callstack 0
   216   003982                     start_initialization:
   217                           	callstack 0
   218   003982                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (2 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223   003982  0EBC               	movlw	low __pidataBANK0
   224   003984  6EF6               	movwf	tblptrl,c
   225   003986  0E3C               	movlw	high __pidataBANK0
   226   003988  6EF7               	movwf	tblptrh,c
   227   00398A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228   00398C  6EF8               	movwf	tblptru,c
   229   00398E  0009               	tblrd		*+	;fetch initializer
   230   003990  CFF5 F0EA          	movff	tablat,__pdataBANK0
   231   003994  0009               	tblrd		*+	;fetch initializer
   232   003996  CFF5 F0EB          	movff	tablat,__pdataBANK0+1
   233                           
   234                           ; Clear objects allocated to BANK1 (60 bytes)
   235   00399A  EE01  F000         	lfsr	0,__pbssBANK1
   236   00399E  0E3C               	movlw	60
   237   0039A0                     clear_0:
   238   0039A0  6AEE               	clrf	postinc0,c
   239   0039A2  06E8               	decf	wreg,f,c
   240   0039A4  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (54 bytes)
   243   0039A6  EE00  F0B4         	lfsr	0,__pbssBANK0
   244   0039AA  0E36               	movlw	54
   245   0039AC                     clear_1:
   246   0039AC  6AEE               	clrf	postinc0,c
   247   0039AE  06E8               	decf	wreg,f,c
   248   0039B0  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (24 bytes)
   251   0039B2  EE00  F03F         	lfsr	0,__pbssCOMRAM
   252   0039B6  0E18               	movlw	24
   253   0039B8                     clear_2:
   254   0039B8  6AEE               	clrf	postinc0,c
   255   0039BA  06E8               	decf	wreg,f,c
   256   0039BC  E1FD               	bnz	clear_2
   257   0039BE                     end_of_initialization:
   258                           	callstack 0
   259   0039BE                     __end_of__initialization:
   260                           	callstack 0
   261   0039BE  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262   0039C0  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263   0039C2  0E00               	movlw	low (__Lsmallconst shr (0+16))
   264   0039C4  6EF8               	movwf	tblptru,c
   265   0039C6  0E0E               	movlw	high __Lsmallconst
   266   0039C8  6EF7               	movwf	tblptrh,c
   267   0039CA  0100               	movlb	0
   268   0039CC  EF5C  F013         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00003F                     __pbssCOMRAM:
   272                           	callstack 0
   273   00003F                     _CR2L:
   274                           	callstack 0
   275   00003F                     	ds	4
   276   000043                     _CR2U:
   277                           	callstack 0
   278   000043                     	ds	4
   279   000047                     _CR1L:
   280                           	callstack 0
   281   000047                     	ds	4
   282   00004B                     _amb_clear:
   283                           	callstack 0
   284   00004B                     	ds	2
   285   00004D                     _amb_red:
   286                           	callstack 0
   287   00004D                     	ds	2
   288   00004F                     _lost_ctr:
   289                           	callstack 0
   290   00004F                     	ds	2
   291   000051                     _buggy_step:
   292                           	callstack 0
   293   000051                     	ds	2
   294   000053                     _TxBufReadCnt:
   295                           	callstack 0
   296   000053                     	ds	1
   297   000054                     _TxBufWriteCnt:
   298                           	callstack 0
   299   000054                     	ds	1
   300   000055                     _RxBufReadCnt:
   301                           	callstack 0
   302   000055                     	ds	1
   303   000056                     _RxBufWriteCnt:
   304                           	callstack 0
   305   000056                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308   0000B4                     __pbssBANK0:
   309                           	callstack 0
   310   0000B4                     _EUSART4RXbuf:
   311                           	callstack 0
   312   0000B4                     	ds	20
   313   0000C8                     _CR3L:
   314                           	callstack 0
   315   0000C8                     	ds	4
   316   0000CC                     _CR3U:
   317                           	callstack 0
   318   0000CC                     	ds	4
   319   0000D0                     _lowerThreshold:
   320                           	callstack 0
   321   0000D0                     	ds	2
   322   0000D2                     _amb_blue:
   323                           	callstack 0
   324   0000D2                     	ds	2
   325   0000D4                     _amb_green:
   326                           	callstack 0
   327   0000D4                     	ds	2
   328   0000D6                     _interrupt_ctr:
   329                           	callstack 0
   330   0000D6                     	ds	2
   331   0000D8                     _interrupt_flag:
   332                           	callstack 0
   333   0000D8                     	ds	2
   334   0000DA                     _motor_return:
   335                           	callstack 0
   336   0000DA                     	ds	1
   337   0000DB                     _buggy_path:
   338                           	callstack 0
   339   0000DB                     	ds	15
   340                           
   341                           	psect	dataBANK0
   342   0000EA                     __pdataBANK0:
   343                           	callstack 0
   344   0000EA                     _upperThreshold:
   345                           	callstack 0
   346   0000EA                     	ds	2
   347                           
   348                           	psect	bssBANK1
   349   000100                     __pbssBANK1:
   350                           	callstack 0
   351   000100                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000100                     	ds	60
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     rangeCalibrate@RGBC:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000060                     	ds	2
   363   000062                     rangeCalibrate@mL:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000062                     	ds	2
   368   000064                     rangeCalibrate@mR:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372   000064                     	ds	2
   373   000066                     rangeCalibrate@clearArr:
   374                           	callstack 0
   375                           
   376                           ; 24 bytes @ 0x6
   377   000066                     	ds	24
   378   00007E                     rangeCalibrate@calibCtr:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1E
   382   00007E                     	ds	2
   383   000080                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x20
   386   000080                     	ds	2
   387   000082                     main@RGBC:
   388                           	callstack 0
   389                           
   390                           ; 32 bytes @ 0x22
   391   000082                     	ds	32
   392   0000A2                     main@mL:
   393                           	callstack 0
   394                           
   395                           ; 9 bytes @ 0x42
   396   0000A2                     	ds	9
   397   0000AB                     main@mR:
   398                           	callstack 0
   399                           
   400                           ; 9 bytes @ 0x4B
   401   0000AB                     	ds	9
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ??i2_I2C_2_Master_Idle:
   407   000001                     
   408                           ; 1 bytes @ 0x0
   409   000001                     	ds	1
   410   000002                     i2I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414   000002                     	ds	1
   415   000003                     i2color_writetoaddr@value:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     i2color_writetoaddr@address:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x3
   424   000004                     	ds	1
   425   000005                     ??i2_Color_Interrupts_init:
   426   000005                     i2Color_Interrupts_threshold@upperThreshold:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x4
   430   000005                     	ds	2
   431   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435   000007                     	ds	2
   436   000009                     ??_I2C_2_Master_Idle:
   437   000009                     ?___wmul:
   438                           	callstack 0
   439   000009                     ?___fladd:
   440                           	callstack 0
   441   000009                     initDCmotorsPWM@PWMperiod:
   442                           	callstack 0
   443   000009                     motorLinit@mL:
   444                           	callstack 0
   445   000009                     motorRinit@mR:
   446                           	callstack 0
   447   000009                     motorTRIS@mL:
   448                           	callstack 0
   449   000009                     ___wmul@multiplier:
   450                           	callstack 0
   451   000009                     ___flge@ff1:
   452                           	callstack 0
   453   000009                     ___fladd@b:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x8
   457   000009                     	ds	1
   458   00000A                     ??_I2C_2_Master_Read:
   459   00000A                     I2C_2_Master_Write@data_byte:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x9
   463   00000A                     	ds	1
   464   00000B                     color_writetoaddr@value:
   465                           	callstack 0
   466   00000B                     I2C_2_Master_Read@ack:
   467                           	callstack 0
   468   00000B                     motorTRIS@mR:
   469                           	callstack 0
   470   00000B                     ___wmul@multiplicand:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474   00000B                     	ds	1
   475   00000C                     color_writetoaddr@address:
   476                           	callstack 0
   477   00000C                     I2C_2_Master_Read@tmp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xB
   481   00000C                     	ds	1
   482   00000D                     ??_Color_Interrupts_init:
   483   00000D                     ??_color_click_init:
   484   00000D                     ?_color_read_Red:
   485                           	callstack 0
   486   00000D                     ?_color_read_Green:
   487                           	callstack 0
   488   00000D                     ?_color_read_Blue:
   489                           	callstack 0
   490   00000D                     ?_color_read_Clear:
   491                           	callstack 0
   492   00000D                     Color_Interrupts_threshold@upperThreshold:
   493                           	callstack 0
   494   00000D                     ___wmul@product:
   495                           	callstack 0
   496   00000D                     ___flge@ff2:
   497                           	callstack 0
   498   00000D                     ___fladd@a:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0xC
   502   00000D                     	ds	2
   503   00000F                     ??_color_read_Red:
   504   00000F                     ??_color_read_Green:
   505   00000F                     ??_color_read_Blue:
   506   00000F                     ??_color_read_Clear:
   507   00000F                     ?___lwdiv:
   508                           	callstack 0
   509   00000F                     Color_Interrupts_threshold@lowerThreshold:
   510                           	callstack 0
   511   00000F                     ___lwdiv@dividend:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515   00000F                     	ds	2
   516   000011                     ??___fladd:
   517   000011                     ??___flge:
   518   000011                     ___lwdiv@divisor:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522   000011                     	ds	1
   523   000012                     color_read_Red@tmp:
   524                           	callstack 0
   525   000012                     color_read_Green@tmp:
   526                           	callstack 0
   527   000012                     color_read_Blue@tmp:
   528                           	callstack 0
   529   000012                     color_read_Clear@tmp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x11
   533   000012                     	ds	1
   534   000013                     ___lwdiv@quotient:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538   000013                     	ds	1
   539   000014                     ?___xxtofl:
   540                           	callstack 0
   541   000014                     ___xxtofl@val:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x13
   545   000014                     	ds	1
   546   000015                     ___lwdiv@counter:
   547                           	callstack 0
   548   000015                     ___fladd@signs:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x14
   552   000015                     	ds	1
   553   000016                     ___fladd@aexp:
   554                           	callstack 0
   555   000016                     setMotorPWM@m:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x15
   559   000016                     	ds	1
   560   000017                     ___fladd@bexp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x16
   564   000017                     	ds	1
   565   000018                     ??_setMotorPWM:
   566   000018                     ??___xxtofl:
   567   000018                     ___fladd@grs:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x17
   571   000018                     	ds	2
   572   00001A                     setMotorPWM@posDuty:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576   00001A                     	ds	1
   577   00001B                     setMotorPWM@negDuty:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581   00001B                     	ds	1
   582   00001C                     ___xxtofl@sign:
   583                           	callstack 0
   584   00001C                     norm_stop@mL:
   585                           	callstack 0
   586   00001C                     turnLeft@mL:
   587                           	callstack 0
   588   00001C                     turnRight@mL:
   589                           	callstack 0
   590   00001C                     fullSpeedAhead@mL:
   591                           	callstack 0
   592   00001C                     wallSmash@mL:
   593                           	callstack 0
   594   00001C                     reverse@mL:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   00001C                     	ds	1
   599   00001D                     ___xxtofl@exp:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1C
   603   00001D                     	ds	1
   604   00001E                     norm_stop@mR:
   605                           	callstack 0
   606   00001E                     turnLeft@mR:
   607                           	callstack 0
   608   00001E                     turnRight@mR:
   609                           	callstack 0
   610   00001E                     fullSpeedAhead@mR:
   611                           	callstack 0
   612   00001E                     wallSmash@mR:
   613                           	callstack 0
   614   00001E                     reverse@mR:
   615                           	callstack 0
   616   00001E                     ___xxtofl@arg:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1D
   620   00001E                     	ds	2
   621   000020                     ??_reverse:
   622   000020                     
   623                           ; 1 bytes @ 0x1F
   624   000020                     	ds	1
   625   000021                     turnPrep@mL:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x20
   629   000021                     	ds	1
   630   000022                     ?___fldiv:
   631                           	callstack 0
   632   000022                     color_read_RGBC@temp:
   633                           	callstack 0
   634   000022                     ___fldiv@b:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x21
   638   000022                     	ds	1
   639   000023                     turnPrep@mR:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x22
   643   000023                     	ds	1
   644   000024                     
   645                           ; 1 bytes @ 0x23
   646   000024                     	ds	1
   647   000025                     ??_turnPrep:
   648                           
   649                           ; 1 bytes @ 0x24
   650   000025                     	ds	1
   651   000026                     ___fldiv@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x25
   655   000026                     	ds	1
   656   000027                     motor_response@temp:
   657                           	callstack 0
   658   000027                     motor_retrace@buggy_path:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x26
   662   000027                     	ds	2
   663   000029                     motor_response@mL:
   664                           	callstack 0
   665   000029                     motor_retrace@mL:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x28
   669   000029                     	ds	1
   670   00002A                     ??___fldiv:
   671                           
   672                           ; 1 bytes @ 0x29
   673   00002A                     	ds	1
   674   00002B                     motor_response@mR:
   675                           	callstack 0
   676   00002B                     motor_retrace@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2A
   680   00002B                     	ds	2
   681   00002D                     ??_motor_response:
   682   00002D                     ??_motor_retrace:
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@rem:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2D
   690   00002E                     	ds	1
   691   00002F                     motor_response@j:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2E
   695   00002F                     	ds	3
   696   000032                     ___fldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x31
   700   000032                     	ds	1
   701   000033                     ___fldiv@new_exp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x32
   705   000033                     	ds	2
   706   000035                     ___fldiv@grs:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x34
   710   000035                     	ds	4
   711   000039                     ___fldiv@bexp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x38
   715   000039                     	ds	1
   716   00003A                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x39
   720   00003A                     	ds	1
   721   00003B                     color_normalise@RGBC:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3A
   725   00003B                     	ds	2
   726   00003D                     ??_rangeCalibrate:
   727                           
   728                           ; 1 bytes @ 0x3C
   729   00003D                     	ds	2
   730                           
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 21 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  buf           100    0        unsigned char [100]
   741 ;;  RGBC           32   34[BANK0 ] struct RGBC_val
   742 ;;  mR              9   75[BANK0 ] struct DC_motor
   743 ;;  mL              9   66[BANK0 ] struct DC_motor
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;Total ram usage:       52 bytes
   758 ;; Hardware stack levels required when called: 11
   759 ;; This function calls:
   760 ;;		_Color_Interrupts_init
   761 ;;		_Color_Interrupts_threshold
   762 ;;		_Interrupts_init
   763 ;;		_calibSwitchInit
   764 ;;		_color_click_init
   765 ;;		_color_normalise
   766 ;;		_color_read_RGBC
   767 ;;		_fullSpeedAhead
   768 ;;		_initDCmotorsPWM
   769 ;;		_motorLinit
   770 ;;		_motorRinit
   771 ;;		_motorTRIS
   772 ;;		_motor_response
   773 ;;		_motor_retrace
   774 ;;		_norm_stop
   775 ;;		_persistence_register
   776 ;;		_rangeCalibrate
   777 ;;		_tricolorLED
   778 ;;		_turnLeft
   779 ;;		_wallSmash
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786   0026B8                     __ptext0:
   787                           	callstack 0
   788   0026B8                     _main:
   789                           	callstack 20
   790   0026B8                     
   791                           ;main.c: 22:     tricolorLED();
   792   0026B8  EC14  F01E         	call	_tricolorLED	;wreg free
   793   0026BC                     
   794                           ;main.c: 23:     color_click_init();
   795   0026BC  EC09  F01D         	call	_color_click_init	;wreg free
   796   0026C0                     
   797                           ;main.c: 26:     initDCmotorsPWM(200);
   798   0026C0  0E00               	movlw	0
   799   0026C2  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   800   0026C4  0EC8               	movlw	200
   801   0026C6  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   802   0026C8  ECA0  F01A         	call	_initDCmotorsPWM	;wreg free
   803   0026CC                     
   804                           ;main.c: 27:     DC_motor mL, mR;;main.c: 28:     motorLinit(&mL);
   805   0026CC  0EA2               	movlw	low main@mL
   806   0026CE  6E09               	movwf	motorLinit@mL^0,c
   807   0026D0  0E00               	movlw	high main@mL
   808   0026D2  6E0A               	movwf	(motorLinit@mL+1)^0,c
   809   0026D4  ECC1  F01B         	call	_motorLinit	;wreg free
   810   0026D8                     
   811                           ;main.c: 29:     motorRinit(&mR);
   812   0026D8  0EAB               	movlw	low main@mR
   813   0026DA  6E09               	movwf	motorRinit@mR^0,c
   814   0026DC  0E00               	movlw	high main@mR
   815   0026DE  6E0A               	movwf	(motorRinit@mR+1)^0,c
   816   0026E0  EC8C  F01B         	call	_motorRinit	;wreg free
   817   0026E4                     
   818                           ;main.c: 30:     motorTRIS(&mL, &mR);
   819   0026E4  0EA2               	movlw	low main@mL
   820   0026E6  6E09               	movwf	motorTRIS@mL^0,c
   821   0026E8  0E00               	movlw	high main@mL
   822   0026EA  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   823   0026EC  0EAB               	movlw	low main@mR
   824   0026EE  6E0B               	movwf	motorTRIS@mR^0,c
   825   0026F0  0E00               	movlw	high main@mR
   826   0026F2  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   827   0026F4  EC38  F01E         	call	_motorTRIS	;wreg free
   828   0026F8                     
   829                           ;main.c: 34:     TRISDbits.TRISD7 = 0;
   830   0026F8  9E84               	bcf	132,7,c	;volatile
   831   0026FA                     
   832                           ;main.c: 35:     LATDbits.LATD7 = 0;
   833   0026FA  9E7C               	bcf	124,7,c	;volatile
   834   0026FC                     
   835                           ;main.c: 36:     TRISHbits.TRISH3 = 0;
   836   0026FC  9688               	bcf	136,3,c	;volatile
   837   0026FE                     
   838                           ;main.c: 37:     LATHbits.LATH3 = 0;
   839   0026FE  9680               	bcf	128,3,c	;volatile
   840   002700                     
   841                           ;main.c: 40:     RGBC_val RGBC;;main.c: 41:     calibSwitchInit();
   842   002700  EC51  F01E         	call	_calibSwitchInit	;wreg free
   843   002704                     
   844                           ;main.c: 42:     rangeCalibrate(&RGBC,&mL, &mR);
   845   002704  0E82               	movlw	low main@RGBC
   846   002706  0100               	movlb	0	; () banked
   847   002708  6F60               	movwf	rangeCalibrate@RGBC& (0+255),b
   848   00270A  0E00               	movlw	high main@RGBC
   849   00270C  6F61               	movwf	(rangeCalibrate@RGBC+1)& (0+255),b
   850   00270E  0EA2               	movlw	low main@mL
   851   002710  6F62               	movwf	rangeCalibrate@mL& (0+255),b
   852   002712  0E00               	movlw	high main@mL
   853   002714  6F63               	movwf	(rangeCalibrate@mL+1)& (0+255),b
   854   002716  0EAB               	movlw	low main@mR
   855   002718  6F64               	movwf	rangeCalibrate@mR& (0+255),b
   856   00271A  0E00               	movlw	high main@mR
   857   00271C  6F65               	movwf	(rangeCalibrate@mR+1)& (0+255),b
   858   00271E  ECE6  F014         	call	_rangeCalibrate	;wreg free
   859   002722                     
   860                           ;main.c: 49:     Interrupts_init();
   861   002722  EC09  F01E         	call	_Interrupts_init	;wreg free
   862   002726                     
   863                           ;main.c: 50:     Color_Interrupts_init();
   864   002726  ECEF  F01D         	call	_Color_Interrupts_init	;wreg free
   865   00272A                     
   866                           ;main.c: 51:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   867   00272A  C0EA  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   868   00272E  C0EB  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   869   002732  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   870   002736  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   871   00273A  EC6A  F01D         	call	_Color_Interrupts_threshold	;wreg free
   872   00273E                     
   873                           ;main.c: 52:     persistence_register();
   874   00273E  EC1B  F01E         	call	_persistence_register	;wreg free
   875   002742                     
   876                           ;main.c: 54:     char buf[100];;main.c: 55:     motor_return = 0;
   877   002742  0E00               	movlw	0
   878   002744  0100               	movlb	0	; () banked
   879   002746  6FDA               	movwf	_motor_return& (0+255),b
   880   002748                     
   881                           ; BSR set to: 0
   882                           ;main.c: 56:     buggy_step = 0;
   883   002748  0E00               	movlw	0
   884   00274A  6E52               	movwf	(_buggy_step+1)^0,c
   885   00274C  0E00               	movlw	0
   886   00274E  6E51               	movwf	_buggy_step^0,c
   887   002750                     
   888                           ; BSR set to: 0
   889                           ;main.c: 57:     lost_ctr = 0;
   890   002750  0E00               	movlw	0
   891   002752  6E50               	movwf	(_lost_ctr+1)^0,c
   892   002754  0E00               	movlw	0
   893   002756  6E4F               	movwf	_lost_ctr^0,c
   894   002758                     
   895                           ; BSR set to: 0
   896                           ;main.c: 58:     interrupt_ctr = 0;
   897   002758  0E00               	movlw	0
   898   00275A  6FD7               	movwf	(_interrupt_ctr+1)& (0+255),b
   899   00275C  0E00               	movlw	0
   900   00275E  6FD6               	movwf	_interrupt_ctr& (0+255),b
   901   002760                     
   902                           ; BSR set to: 0
   903                           ;main.c: 62:     TRISHbits.TRISH0 = 0;
   904   002760  9088               	bcf	136,0,c	;volatile
   905   002762                     
   906                           ; BSR set to: 0
   907                           ;main.c: 63:     LATHbits.LATH0 = 0;
   908   002762  9080               	bcf	128,0,c	;volatile
   909   002764                     
   910                           ; BSR set to: 0
   911                           ;main.c: 66:     TRISFbits.TRISF0 = 0;
   912   002764  9086               	bcf	134,0,c	;volatile
   913   002766                     
   914                           ; BSR set to: 0
   915                           ;main.c: 67:     LATFbits.LATF0 = 0;
   916   002766  907E               	bcf	126,0,c	;volatile
   917   002768                     
   918                           ; BSR set to: 0
   919                           ;main.c: 70:     TRISDbits.TRISD4 = 0;
   920   002768  9884               	bcf	132,4,c	;volatile
   921   00276A                     
   922                           ; BSR set to: 0
   923                           ;main.c: 71:     LATDbits.LATD4 = 0;
   924   00276A  987C               	bcf	124,4,c	;volatile
   925   00276C                     
   926                           ; BSR set to: 0
   927                           ;main.c: 74:     TRISDbits.TRISD3 = 0;
   928   00276C  9684               	bcf	132,3,c	;volatile
   929   00276E                     
   930                           ; BSR set to: 0
   931                           ;main.c: 75:     LATDbits.LATD3 = 0;
   932   00276E  967C               	bcf	124,3,c	;volatile
   933   002770                     l4038:
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 79:         fullSpeedAhead(&mL, &mR);
   937   002770  0EA2               	movlw	low main@mL
   938   002772  6E1C               	movwf	fullSpeedAhead@mL^0,c
   939   002774  0E00               	movlw	high main@mL
   940   002776  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   941   002778  0EAB               	movlw	low main@mR
   942   00277A  6E1E               	movwf	fullSpeedAhead@mR^0,c
   943   00277C  0E00               	movlw	high main@mR
   944   00277E  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   945   002780  ECC8  F019         	call	_fullSpeedAhead	;wreg free
   946   002784                     
   947                           ;main.c: 80:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
   948   002784  0100               	movlb	0	; () banked
   949   002786  05D8               	decf	_interrupt_flag& (0+255),w,b
   950   002788  11D9               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   951   00278A  A4D8               	btfss	status,2,c
   952   00278C  EFCA  F013         	goto	u3221
   953   002790  EFCC  F013         	goto	u3220
   954   002794                     u3221:
   955   002794  EFB8  F013         	goto	l4038
   956   002798                     u3220:
   957   002798                     
   958                           ; BSR set to: 0
   959   002798  BFD7               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   960   00279A  EFD8  F013         	goto	u3231
   961   00279E  51D7               	movf	(_interrupt_ctr+1)& (0+255),w,b
   962   0027A0  E109               	bnz	u3230
   963   0027A2  0E02               	movlw	2
   964   0027A4  5DD6               	subwf	_interrupt_ctr& (0+255),w,b
   965   0027A6  A0D8               	btfss	status,0,c
   966   0027A8  EFD8  F013         	goto	u3231
   967   0027AC  EFDA  F013         	goto	u3230
   968   0027B0                     u3231:
   969   0027B0  EFB8  F013         	goto	l4038
   970   0027B4                     u3230:
   971   0027B4                     
   972                           ; BSR set to: 0
   973                           ;main.c: 82:             norm_stop(&mL, &mR);
   974   0027B4  0EA2               	movlw	low main@mL
   975   0027B6  6E1C               	movwf	norm_stop@mL^0,c
   976   0027B8  0E00               	movlw	high main@mL
   977   0027BA  6E1D               	movwf	(norm_stop@mL+1)^0,c
   978   0027BC  0EAB               	movlw	low main@mR
   979   0027BE  6E1E               	movwf	norm_stop@mR^0,c
   980   0027C0  0E00               	movlw	high main@mR
   981   0027C2  6E1F               	movwf	(norm_stop@mR+1)^0,c
   982   0027C4  EC23  F01D         	call	_norm_stop	;wreg free
   983   0027C8                     
   984                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   985   0027C8  0E52               	movlw	82
   986   0027CA  0100               	movlb	0	; () banked
   987   0027CC  6F81               	movwf	(??_main+1)& (0+255),b
   988   0027CE  0E2B               	movlw	43
   989   0027D0  6F80               	movwf	??_main& (0+255),b
   990   0027D2  0E00               	movlw	0
   991   0027D4                     u3287:
   992   0027D4  2EE8               	decfsz	wreg,f,c
   993   0027D6  D7FE               	bra	u3287
   994   0027D8  2F80               	decfsz	??_main& (0+255),f,b
   995   0027DA  D7FC               	bra	u3287
   996   0027DC  2F81               	decfsz	(??_main+1)& (0+255),f,b
   997   0027DE  D7FA               	bra	u3287
   998   0027E0  F000               	nop	
   999   0027E2                     
  1000                           ;main.c: 84:             LATDbits.LATD7 = 0;
  1001   0027E2  9E7C               	bcf	124,7,c	;volatile
  1002   0027E4                     
  1003                           ;main.c: 85:             if (motor_return == 0) {
  1004   0027E4  0100               	movlb	0	; () banked
  1005   0027E6  51DA               	movf	_motor_return& (0+255),w,b
  1006   0027E8  A4D8               	btfss	status,2,c
  1007   0027EA  EFF9  F013         	goto	u3241
  1008   0027EE  EFFB  F013         	goto	u3240
  1009   0027F2                     u3241:
  1010   0027F2  EF3B  F014         	goto	l355
  1011   0027F6                     u3240:
  1012   0027F6                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 86:                 LATHbits.LATH3 = 1;
  1015   0027F6  8680               	bsf	128,3,c	;volatile
  1016   0027F8                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 87:                 wallSmash(&mL, &mR);
  1019   0027F8  0EA2               	movlw	low main@mL
  1020   0027FA  6E1C               	movwf	wallSmash@mL^0,c
  1021   0027FC  0E00               	movlw	high main@mL
  1022   0027FE  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1023   002800  0EAB               	movlw	low main@mR
  1024   002802  6E1E               	movwf	wallSmash@mR^0,c
  1025   002804  0E00               	movlw	high main@mR
  1026   002806  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1027   002808  EC53  F019         	call	_wallSmash	;wreg free
  1028   00280C                     
  1029                           ;main.c: 88:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1030   00280C  0E31               	movlw	49
  1031   00280E  0100               	movlb	0	; () banked
  1032   002810  6F81               	movwf	(??_main+1)& (0+255),b
  1033   002812  0EB4               	movlw	180
  1034   002814  6F80               	movwf	??_main& (0+255),b
  1035   002816  0E65               	movlw	101
  1036   002818                     u3297:
  1037   002818  2EE8               	decfsz	wreg,f,c
  1038   00281A  D7FE               	bra	u3297
  1039   00281C  2F80               	decfsz	??_main& (0+255),f,b
  1040   00281E  D7FC               	bra	u3297
  1041   002820  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1042   002822  D7FA               	bra	u3297
  1043   002824  D000               	nop2	
  1044   002826                     
  1045                           ;main.c: 89:                 color_read_RGBC(&RGBC);
  1046   002826  0E82               	movlw	low main@RGBC
  1047   002828  6E22               	movwf	color_read_RGBC@temp^0,c
  1048   00282A  0E00               	movlw	high main@RGBC
  1049   00282C  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1050   00282E  EC3D  F01A         	call	_color_read_RGBC	;wreg free
  1051   002832                     
  1052                           ;main.c: 90:                 color_normalise(&RGBC);
  1053   002832  0E82               	movlw	low main@RGBC
  1054   002834  6E3B               	movwf	color_normalise@RGBC^0,c
  1055   002836  0E00               	movlw	high main@RGBC
  1056   002838  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1057   00283A  ECE7  F016         	call	_color_normalise	;wreg free
  1058   00283E                     
  1059                           ;main.c: 91:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1060   00283E  0E82               	movlw	low main@RGBC
  1061   002840  6E27               	movwf	motor_response@temp^0,c
  1062   002842  0E00               	movlw	high main@RGBC
  1063   002844  6E28               	movwf	(motor_response@temp+1)^0,c
  1064   002846  0EA2               	movlw	low main@mL
  1065   002848  6E29               	movwf	motor_response@mL^0,c
  1066   00284A  0E00               	movlw	high main@mL
  1067   00284C  6E2A               	movwf	(motor_response@mL+1)^0,c
  1068   00284E  0EAB               	movlw	low main@mR
  1069   002850  6E2B               	movwf	motor_response@mR^0,c
  1070   002852  0E00               	movlw	high main@mR
  1071   002854  6E2C               	movwf	(motor_response@mR+1)^0,c
  1072   002856  EC0C  F007         	call	_motor_response	;wreg free
  1073   00285A  0100               	movlb	0	; () banked
  1074   00285C  6F80               	movwf	??_main& (0+255),b
  1075   00285E  0EDB               	movlw	low _buggy_path
  1076   002860  2451               	addwf	_buggy_step^0,w,c
  1077   002862  6ED9               	movwf	fsr2l,c
  1078   002864  0E00               	movlw	high _buggy_path
  1079   002866  2052               	addwfc	(_buggy_step+1)^0,w,c
  1080   002868  6EDA               	movwf	fsr2h,c
  1081   00286A  C080  FFDF         	movff	??_main,indf2
  1082   00286E                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 92:                 buggy_step++;
  1085   00286E  4A51               	infsnz	_buggy_step^0,f,c
  1086   002870  2A52               	incf	(_buggy_step+1)^0,f,c
  1087                           
  1088                           ;main.c: 93:             } else {
  1089   002872  EFDC  F014         	goto	l4096
  1090   002876                     l355:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 94:                 LATDbits.LATD7 = 1;
  1094   002876  8E7C               	bsf	124,7,c	;volatile
  1095   002878                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 95:                 wallSmash(&mL, &mR);
  1098   002878  0EA2               	movlw	low main@mL
  1099   00287A  6E1C               	movwf	wallSmash@mL^0,c
  1100   00287C  0E00               	movlw	high main@mL
  1101   00287E  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1102   002880  0EAB               	movlw	low main@mR
  1103   002882  6E1E               	movwf	wallSmash@mR^0,c
  1104   002884  0E00               	movlw	high main@mR
  1105   002886  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1106   002888  EC53  F019         	call	_wallSmash	;wreg free
  1107   00288C                     
  1108                           ;main.c: 96:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1109   00288C  0E31               	movlw	49
  1110   00288E  0100               	movlb	0	; () banked
  1111   002890  6F81               	movwf	(??_main+1)& (0+255),b
  1112   002892  0EB4               	movlw	180
  1113   002894  6F80               	movwf	??_main& (0+255),b
  1114   002896  0E65               	movlw	101
  1115   002898                     u3307:
  1116   002898  2EE8               	decfsz	wreg,f,c
  1117   00289A  D7FE               	bra	u3307
  1118   00289C  2F80               	decfsz	??_main& (0+255),f,b
  1119   00289E  D7FC               	bra	u3307
  1120   0028A0  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1121   0028A2  D7FA               	bra	u3307
  1122   0028A4  D000               	nop2	
  1123   0028A6                     
  1124                           ;main.c: 97:                 motor_retrace(&buggy_path, &mL, &mR);
  1125   0028A6  0EDB               	movlw	low _buggy_path
  1126   0028A8  6E27               	movwf	motor_retrace@buggy_path^0,c
  1127   0028AA  0E00               	movlw	high _buggy_path
  1128   0028AC  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1129   0028AE  0EA2               	movlw	low main@mL
  1130   0028B0  6E29               	movwf	motor_retrace@mL^0,c
  1131   0028B2  0E00               	movlw	high main@mL
  1132   0028B4  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1133   0028B6  0EAB               	movlw	low main@mR
  1134   0028B8  6E2B               	movwf	motor_retrace@mR^0,c
  1135   0028BA  0E00               	movlw	high main@mR
  1136   0028BC  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1137   0028BE  ECAB  F00F         	call	_motor_retrace	;wreg free
  1138   0028C2                     
  1139                           ;main.c: 98:                 buggy_step--;
  1140   0028C2  0651               	decf	_buggy_step^0,f,c
  1141   0028C4  A0D8               	btfss	status,0,c
  1142   0028C6  0652               	decf	(_buggy_step+1)^0,f,c
  1143                           
  1144                           ;main.c: 100:                 if (buggy_step == 1) {
  1145   0028C8  0451               	decf	_buggy_step^0,w,c
  1146   0028CA  1052               	iorwf	(_buggy_step+1)^0,w,c
  1147   0028CC  A4D8               	btfss	status,2,c
  1148   0028CE  EF6B  F014         	goto	u3251
  1149   0028D2  EF6D  F014         	goto	u3250
  1150   0028D6                     u3251:
  1151   0028D6  EFDC  F014         	goto	l4096
  1152   0028DA                     u3250:
  1153   0028DA                     
  1154                           ;main.c: 101:                     motor_return = 0;
  1155   0028DA  0E00               	movlw	0
  1156   0028DC  0100               	movlb	0	; () banked
  1157   0028DE  6FDA               	movwf	_motor_return& (0+255),b
  1158   0028E0                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 102:                     LATDbits.LATD4 = 0;
  1161   0028E0  987C               	bcf	124,4,c	;volatile
  1162   0028E2                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 103:                     fullSpeedAhead(&mL, &mR);
  1165   0028E2  0EA2               	movlw	low main@mL
  1166   0028E4  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1167   0028E6  0E00               	movlw	high main@mL
  1168   0028E8  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1169   0028EA  0EAB               	movlw	low main@mR
  1170   0028EC  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1171   0028EE  0E00               	movlw	high main@mR
  1172   0028F0  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1173   0028F2  ECC8  F019         	call	_fullSpeedAhead	;wreg free
  1174   0028F6                     
  1175                           ;main.c: 104:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1176   0028F6  0E29               	movlw	41
  1177   0028F8  0100               	movlb	0	; () banked
  1178   0028FA  6F81               	movwf	(??_main+1)& (0+255),b
  1179   0028FC  0E96               	movlw	150
  1180   0028FE  6F80               	movwf	??_main& (0+255),b
  1181   002900  0E7F               	movlw	127
  1182   002902                     u3317:
  1183   002902  2EE8               	decfsz	wreg,f,c
  1184   002904  D7FE               	bra	u3317
  1185   002906  2F80               	decfsz	??_main& (0+255),f,b
  1186   002908  D7FC               	bra	u3317
  1187   00290A  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1188   00290C  D7FA               	bra	u3317
  1189   00290E                     
  1190                           ;main.c: 105:                     norm_stop(&mL, &mR);
  1191   00290E  0EA2               	movlw	low main@mL
  1192   002910  6E1C               	movwf	norm_stop@mL^0,c
  1193   002912  0E00               	movlw	high main@mL
  1194   002914  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1195   002916  0EAB               	movlw	low main@mR
  1196   002918  6E1E               	movwf	norm_stop@mR^0,c
  1197   00291A  0E00               	movlw	high main@mR
  1198   00291C  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1199   00291E  EC23  F01D         	call	_norm_stop	;wreg free
  1200   002922                     
  1201                           ;main.c: 106:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1202   002922  0E29               	movlw	41
  1203   002924  0100               	movlb	0	; () banked
  1204   002926  6F81               	movwf	(??_main+1)& (0+255),b
  1205   002928  0E96               	movlw	150
  1206   00292A  6F80               	movwf	??_main& (0+255),b
  1207   00292C  0E7F               	movlw	127
  1208   00292E                     u3327:
  1209   00292E  2EE8               	decfsz	wreg,f,c
  1210   002930  D7FE               	bra	u3327
  1211   002932  2F80               	decfsz	??_main& (0+255),f,b
  1212   002934  D7FC               	bra	u3327
  1213   002936  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1214   002938  D7FA               	bra	u3327
  1215   00293A                     
  1216                           ;main.c: 107:                     turnLeft(&mL, &mR);
  1217   00293A  0EA2               	movlw	low main@mL
  1218   00293C  6E1C               	movwf	turnLeft@mL^0,c
  1219   00293E  0E00               	movlw	high main@mL
  1220   002940  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1221   002942  0EAB               	movlw	low main@mR
  1222   002944  6E1E               	movwf	turnLeft@mR^0,c
  1223   002946  0E00               	movlw	high main@mR
  1224   002948  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1225   00294A  EC53  F01B         	call	_turnLeft	;wreg free
  1226   00294E                     
  1227                           ;main.c: 108:                     _delay((unsigned long)((430)*(64000000/4000.0)));
  1228   00294E  0E23               	movlw	35
  1229   002950  0100               	movlb	0	; () banked
  1230   002952  6F81               	movwf	(??_main+1)& (0+255),b
  1231   002954  0EE7               	movlw	231
  1232   002956  6F80               	movwf	??_main& (0+255),b
  1233   002958  0EF7               	movlw	247
  1234   00295A                     u3337:
  1235   00295A  2EE8               	decfsz	wreg,f,c
  1236   00295C  D7FE               	bra	u3337
  1237   00295E  2F80               	decfsz	??_main& (0+255),f,b
  1238   002960  D7FC               	bra	u3337
  1239   002962  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1240   002964  D7FA               	bra	u3337
  1241   002966  D000               	nop2	
  1242   002968                     
  1243                           ;main.c: 109:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1244   002968  A080               	btfss	128,0,c	;volatile
  1245   00296A  EFB9  F014         	goto	u3261
  1246   00296E  EFBE  F014         	goto	u3260
  1247   002972                     u3261:
  1248   002972  0100               	movlb	0	; () banked
  1249   002974  6B80               	clrf	??_main& (0+255),b
  1250   002976  2B80               	incf	??_main& (0+255),f,b
  1251   002978  EFC0  F014         	goto	u3278
  1252   00297C                     u3260:
  1253   00297C  0100               	movlb	0	; () banked
  1254   00297E  6B80               	clrf	??_main& (0+255),b
  1255   002980                     u3278:
  1256   002980  5080               	movf	128,w,c	;volatile
  1257   002982  1980               	xorwf	??_main& (0+255),w,b
  1258   002984  0BFE               	andlw	-2
  1259   002986  1980               	xorwf	??_main& (0+255),w,b
  1260   002988  6E80               	movwf	128,c	;volatile
  1261   00298A                     
  1262                           ; BSR set to: 0
  1263                           ;main.c: 110:                     norm_stop(&mL, &mR);
  1264   00298A  0EA2               	movlw	low main@mL
  1265   00298C  6E1C               	movwf	norm_stop@mL^0,c
  1266   00298E  0E00               	movlw	high main@mL
  1267   002990  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1268   002992  0EAB               	movlw	low main@mR
  1269   002994  6E1E               	movwf	norm_stop@mR^0,c
  1270   002996  0E00               	movlw	high main@mR
  1271   002998  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1272   00299A  EC23  F01D         	call	_norm_stop	;wreg free
  1273   00299E                     
  1274                           ;main.c: 111:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1275   00299E  0EA3               	movlw	163
  1276   0029A0  0100               	movlb	0	; () banked
  1277   0029A2  6F81               	movwf	(??_main+1)& (0+255),b
  1278   0029A4  0E57               	movlw	87
  1279   0029A6  6F80               	movwf	??_main& (0+255),b
  1280   0029A8  0E02               	movlw	2
  1281   0029AA                     u3347:
  1282   0029AA  2EE8               	decfsz	wreg,f,c
  1283   0029AC  D7FE               	bra	u3347
  1284   0029AE  2F80               	decfsz	??_main& (0+255),f,b
  1285   0029B0  D7FC               	bra	u3347
  1286   0029B2  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1287   0029B4  D7FA               	bra	u3347
  1288   0029B6  F000               	nop	
  1289   0029B8                     l4096:
  1290                           
  1291                           ;main.c: 114:             LATHbits.LATH3 = 0;
  1292   0029B8  9680               	bcf	128,3,c	;volatile
  1293   0029BA                     
  1294                           ;main.c: 115:             interrupt_flag = 0;
  1295   0029BA  0E00               	movlw	0
  1296   0029BC  0100               	movlb	0	; () banked
  1297   0029BE  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  1298   0029C0  0E00               	movlw	0
  1299   0029C2  6FD8               	movwf	_interrupt_flag& (0+255),b
  1300   0029C4  EFB8  F013         	goto	l4038
  1301   0029C8  EF1A  F000         	goto	start
  1302   0029CC                     __end_of_main:
  1303                           	callstack 0
  1304                           
  1305 ;; *************** function _tricolorLED *****************
  1306 ;; Defined at:
  1307 ;;		line 121 in file "color.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;		None
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;		None
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;Total ram usage:        0 bytes
  1326 ;; Hardware stack levels used: 1
  1327 ;; Hardware stack levels required when called: 7
  1328 ;; This function calls:
  1329 ;;		_bLED
  1330 ;;		_gLED
  1331 ;;		_rLED
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           	psect	text1
  1338   003C28                     __ptext1:
  1339                           	callstack 0
  1340   003C28                     _tricolorLED:
  1341                           	callstack 23
  1342   003C28                     
  1343                           ;color.c: 123:     rLED();
  1344   003C28  EC55  F01E         	call	_rLED	;wreg free
  1345                           
  1346                           ;color.c: 124:     gLED();
  1347   003C2C  EC58  F01E         	call	_gLED	;wreg free
  1348                           
  1349                           ;color.c: 125:     bLED();
  1350   003C30  EC5B  F01E         	call	_bLED	;wreg free
  1351   003C34  0012               	return		;funcret
  1352   003C36                     __end_of_tricolorLED:
  1353                           	callstack 0
  1354                           
  1355 ;; *************** function _rLED *****************
  1356 ;; Defined at:
  1357 ;;		line 130 in file "color.c"
  1358 ;; Parameters:    Size  Location     Type
  1359 ;;		None
  1360 ;; Auto vars:     Size  Location     Type
  1361 ;;		None
  1362 ;; Return value:  Size  Location     Type
  1363 ;;                  1    wreg      void 
  1364 ;; Registers used:
  1365 ;;		None
  1366 ;; Tracked objects:
  1367 ;;		On entry : 0/0
  1368 ;;		On exit  : 0/0
  1369 ;;		Unchanged: 0/0
  1370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;Total ram usage:        0 bytes
  1376 ;; Hardware stack levels used: 1
  1377 ;; Hardware stack levels required when called: 6
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_tricolorLED
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text2
  1386   003CAA                     __ptext2:
  1387                           	callstack 0
  1388   003CAA                     _rLED:
  1389                           	callstack 23
  1390   003CAA                     
  1391                           ;color.c: 131:     TRISGbits.TRISG0 = 0;
  1392   003CAA  9087               	bcf	135,0,c	;volatile
  1393                           
  1394                           ;color.c: 132:     LATGbits.LATG0 = 1;
  1395   003CAC  807F               	bsf	127,0,c	;volatile
  1396   003CAE  0012               	return		;funcret
  1397   003CB0                     __end_of_rLED:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _gLED *****************
  1401 ;; Defined at:
  1402 ;;		line 137 in file "color.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		None
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; Hardware stack levels required when called: 6
  1423 ;; This function calls:
  1424 ;;		Nothing
  1425 ;; This function is called by:
  1426 ;;		_tricolorLED
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           	psect	text3
  1431   003CB0                     __ptext3:
  1432                           	callstack 0
  1433   003CB0                     _gLED:
  1434                           	callstack 23
  1435   003CB0                     
  1436                           ;color.c: 138:     TRISEbits.TRISE7 = 0;
  1437   003CB0  9E85               	bcf	133,7,c	;volatile
  1438                           
  1439                           ;color.c: 139:     LATEbits.LATE7 = 1;
  1440   003CB2  8E7D               	bsf	125,7,c	;volatile
  1441   003CB4  0012               	return		;funcret
  1442   003CB6                     __end_of_gLED:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _bLED *****************
  1446 ;; Defined at:
  1447 ;;		line 144 in file "color.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		None
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 6
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_tricolorLED
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           	psect	text4
  1476   003CB6                     __ptext4:
  1477                           	callstack 0
  1478   003CB6                     _bLED:
  1479                           	callstack 23
  1480   003CB6                     
  1481                           ;color.c: 145:     TRISAbits.TRISA3 = 0;
  1482   003CB6  9681               	bcf	129,3,c	;volatile
  1483                           
  1484                           ;color.c: 146:     LATAbits.LATA3 = 1;
  1485   003CB8  8679               	bsf	121,3,c	;volatile
  1486   003CBA  0012               	return		;funcret
  1487   003CBC                     __end_of_bLED:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _rangeCalibrate *****************
  1491 ;; Defined at:
  1492 ;;		line 159 in file "color.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;  RGBC            2    0[BANK0 ] PTR struct RGBC_val
  1495 ;;		 -> main@RGBC(32), 
  1496 ;;  mL              2    2[BANK0 ] PTR struct DC_motor
  1497 ;;		 -> main@mL(9), 
  1498 ;;  mR              2    4[BANK0 ] PTR struct DC_motor
  1499 ;;		 -> main@mR(9), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  calibCtr        2   30[BANK0 ] int 
  1502 ;;  clearArr       24    6[BANK0 ] float [6]
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1512 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1513 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;Total ram usage:       34 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 10
  1519 ;; This function calls:
  1520 ;;		___fladd
  1521 ;;		_color_normalise
  1522 ;;		_color_read_RGBC
  1523 ;;		_norm_stop
  1524 ;;		_wallSmash
  1525 ;; This function is called by:
  1526 ;;		_main
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           	psect	text5
  1531   0029CC                     __ptext5:
  1532                           	callstack 0
  1533   0029CC                     _rangeCalibrate:
  1534                           	callstack 20
  1535   0029CC                     
  1536                           ;color.c: 161:     float clearArr[6];;color.c: 162:     for (int calibCtr=0;calibCtr < 6
      +                          ;){
  1537   0029CC  0E00               	movlw	0
  1538   0029CE  0100               	movlb	0	; () banked
  1539   0029D0  6F7F               	movwf	(rangeCalibrate@calibCtr+1)& (0+255),b
  1540   0029D2  0E00               	movlw	0
  1541   0029D4  6F7E               	movwf	rangeCalibrate@calibCtr& (0+255),b
  1542   0029D6                     l158:
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;color.c: 163:         if (!PORTFbits.RF2) {
  1546   0029D6  B48E               	btfsc	142,2,c	;volatile
  1547   0029D8  EFF0  F014         	goto	u3191
  1548   0029DC  EFF2  F014         	goto	u3190
  1549   0029E0                     u3191:
  1550   0029E0  EF70  F015         	goto	l3976
  1551   0029E4                     u3190:
  1552   0029E4                     
  1553                           ; BSR set to: 0
  1554                           ;color.c: 164:             if(calibCtr!=5){
  1555   0029E4  0E05               	movlw	5
  1556   0029E6  197E               	xorwf	rangeCalibrate@calibCtr& (0+255),w,b
  1557   0029E8  117F               	iorwf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1558   0029EA  B4D8               	btfsc	status,2,c
  1559   0029EC  EFFA  F014         	goto	u3201
  1560   0029F0  EFFC  F014         	goto	u3200
  1561   0029F4                     u3201:
  1562   0029F4  EF06  F015         	goto	l3954
  1563   0029F8                     u3200:
  1564   0029F8                     
  1565                           ; BSR set to: 0
  1566                           ;color.c: 165:             wallSmash(mL, mR);}
  1567   0029F8  C062  F01C         	movff	rangeCalibrate@mL,wallSmash@mL
  1568   0029FC  C063  F01D         	movff	rangeCalibrate@mL+1,wallSmash@mL+1
  1569   002A00  C064  F01E         	movff	rangeCalibrate@mR,wallSmash@mR
  1570   002A04  C065  F01F         	movff	rangeCalibrate@mR+1,wallSmash@mR+1
  1571   002A08  EC53  F019         	call	_wallSmash	;wreg free
  1572   002A0C                     l3954:
  1573                           
  1574                           ;color.c: 166:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1575   002A0C  0E29               	movlw	41
  1576   002A0E  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1577   002A10  0E96               	movlw	150
  1578   002A12  6E3D               	movwf	??_rangeCalibrate^0,c
  1579   002A14  0E7F               	movlw	127
  1580   002A16                     u3357:
  1581   002A16  2EE8               	decfsz	wreg,f,c
  1582   002A18  D7FE               	bra	u3357
  1583   002A1A  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1584   002A1C  D7FC               	bra	u3357
  1585   002A1E  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1586   002A20  D7FA               	bra	u3357
  1587   002A22  F000               	nop	
  1588   002A24                     
  1589                           ;color.c: 167:             LATHbits.LATH3 = 1;
  1590   002A24  8680               	bsf	128,3,c	;volatile
  1591   002A26                     
  1592                           ;color.c: 168:             color_read_RGBC(RGBC);
  1593   002A26  C060  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1594   002A2A  C061  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1595   002A2E  EC3D  F01A         	call	_color_read_RGBC	;wreg free
  1596   002A32                     
  1597                           ;color.c: 169:             color_normalise(RGBC);
  1598   002A32  C060  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1599   002A36  C061  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1600   002A3A  ECE7  F016         	call	_color_normalise	;wreg free
  1601   002A3E                     
  1602                           ;color.c: 170:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1603   002A3E  0E29               	movlw	41
  1604   002A40  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1605   002A42  0E96               	movlw	150
  1606   002A44  6E3D               	movwf	??_rangeCalibrate^0,c
  1607   002A46  0E7F               	movlw	127
  1608   002A48                     u3367:
  1609   002A48  2EE8               	decfsz	wreg,f,c
  1610   002A4A  D7FE               	bra	u3367
  1611   002A4C  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1612   002A4E  D7FC               	bra	u3367
  1613   002A50  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1614   002A52  D7FA               	bra	u3367
  1615   002A54  F000               	nop	
  1616   002A56                     
  1617                           ;color.c: 171:             LATHbits.LATH3 = 0;
  1618   002A56  9680               	bcf	128,3,c	;volatile
  1619   002A58                     
  1620                           ;color.c: 172:             clearArr[calibCtr] = RGBC->norm_C;
  1621   002A58  0100               	movlb	0	; () banked
  1622   002A5A  EE20 F01C          	lfsr	2,28
  1623   002A5E  5160               	movf	rangeCalibrate@RGBC& (0+255),w,b
  1624   002A60  26D9               	addwf	fsr2l,f,c
  1625   002A62  5161               	movf	(rangeCalibrate@RGBC+1)& (0+255),w,b
  1626   002A64  22DA               	addwfc	fsr2h,f,c
  1627   002A66  0E66               	movlw	low rangeCalibrate@clearArr
  1628   002A68  6E3D               	movwf	??_rangeCalibrate^0,c
  1629   002A6A  0E00               	movlw	high rangeCalibrate@clearArr
  1630   002A6C  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1631   002A6E  90D8               	bcf	status,0,c
  1632   002A70  357E               	rlcf	rangeCalibrate@calibCtr& (0+255),w,b
  1633   002A72  6EE1               	movwf	fsr1l,c
  1634   002A74  357F               	rlcf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1635   002A76  6EE2               	movwf	fsr1h,c
  1636   002A78  90D8               	bcf	status,0,c
  1637   002A7A  36E1               	rlcf	fsr1l,f,c
  1638   002A7C  36E2               	rlcf	fsr1h,f,c
  1639   002A7E  503D               	movf	??_rangeCalibrate^0,w,c
  1640   002A80  26E1               	addwf	fsr1l,f,c
  1641   002A82  503E               	movf	(??_rangeCalibrate+1)^0,w,c
  1642   002A84  22E2               	addwfc	fsr1h,f,c
  1643   002A86  CFDE FFE6          	movff	postinc2,postinc1
  1644   002A8A  CFDE FFE6          	movff	postinc2,postinc1
  1645   002A8E  CFDE FFE6          	movff	postinc2,postinc1
  1646   002A92  CFDE FFE6          	movff	postinc2,postinc1
  1647   002A96                     
  1648                           ; BSR set to: 0
  1649                           ;color.c: 173:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1650   002A96  0E29               	movlw	41
  1651   002A98  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1652   002A9A  0E96               	movlw	150
  1653   002A9C  6E3D               	movwf	??_rangeCalibrate^0,c
  1654   002A9E  0E7F               	movlw	127
  1655   002AA0                     u3377:
  1656   002AA0  2EE8               	decfsz	wreg,f,c
  1657   002AA2  D7FE               	bra	u3377
  1658   002AA4  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1659   002AA6  D7FC               	bra	u3377
  1660   002AA8  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1661   002AAA  D7FA               	bra	u3377
  1662   002AAC  F000               	nop	
  1663   002AAE                     
  1664                           ;color.c: 174:             norm_stop(mL, mR);
  1665   002AAE  C062  F01C         	movff	rangeCalibrate@mL,norm_stop@mL
  1666   002AB2  C063  F01D         	movff	rangeCalibrate@mL+1,norm_stop@mL+1
  1667   002AB6  C064  F01E         	movff	rangeCalibrate@mR,norm_stop@mR
  1668   002ABA  C065  F01F         	movff	rangeCalibrate@mR+1,norm_stop@mR+1
  1669   002ABE  EC23  F01D         	call	_norm_stop	;wreg free
  1670   002AC2                     
  1671                           ;color.c: 175:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1672   002AC2  0E29               	movlw	41
  1673   002AC4  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1674   002AC6  0E96               	movlw	150
  1675   002AC8  6E3D               	movwf	??_rangeCalibrate^0,c
  1676   002ACA  0E7F               	movlw	127
  1677   002ACC                     u3387:
  1678   002ACC  2EE8               	decfsz	wreg,f,c
  1679   002ACE  D7FE               	bra	u3387
  1680   002AD0  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1681   002AD2  D7FC               	bra	u3387
  1682   002AD4  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1683   002AD6  D7FA               	bra	u3387
  1684   002AD8  F000               	nop	
  1685   002ADA                     
  1686                           ;color.c: 176:             calibCtr++;
  1687   002ADA  0100               	movlb	0	; () banked
  1688   002ADC  4B7E               	infsnz	rangeCalibrate@calibCtr& (0+255),f,b
  1689   002ADE  2B7F               	incf	(rangeCalibrate@calibCtr+1)& (0+255),f,b
  1690   002AE0                     l3976:
  1691                           
  1692                           ; BSR set to: 0
  1693                           ;color.c: 178:     }
  1694   002AE0  BF7F               	btfsc	(rangeCalibrate@calibCtr+1)& (0+255),7,b
  1695   002AE2  EF7C  F015         	goto	u3211
  1696   002AE6  517F               	movf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1697   002AE8  E109               	bnz	u3210
  1698   002AEA  0E06               	movlw	6
  1699   002AEC  5D7E               	subwf	rangeCalibrate@calibCtr& (0+255),w,b
  1700   002AEE  A0D8               	btfss	status,0,c
  1701   002AF0  EF7C  F015         	goto	u3211
  1702   002AF4  EF7E  F015         	goto	u3210
  1703   002AF8                     u3211:
  1704   002AF8  EFEB  F014         	goto	l158
  1705   002AFC                     u3210:
  1706   002AFC                     
  1707                           ; BSR set to: 0
  1708                           ;color.c: 180:             CR1L = clearArr[0]-0.4;
  1709   002AFC  C066  F009         	movff	rangeCalibrate@clearArr,___fladd@b
  1710   002B00  C067  F00A         	movff	rangeCalibrate@clearArr+1,___fladd@b+1
  1711   002B04  C068  F00B         	movff	rangeCalibrate@clearArr+2,___fladd@b+2
  1712   002B08  C069  F00C         	movff	rangeCalibrate@clearArr+3,___fladd@b+3
  1713   002B0C  0ECD               	movlw	205
  1714   002B0E  6E0D               	movwf	___fladd@a^0,c
  1715   002B10  0ECC               	movlw	204
  1716   002B12  6E0E               	movwf	(___fladd@a+1)^0,c
  1717   002B14  0ECC               	movlw	204
  1718   002B16  6E0F               	movwf	(___fladd@a+2)^0,c
  1719   002B18  0EBE               	movlw	190
  1720   002B1A  6E10               	movwf	(___fladd@a+3)^0,c
  1721   002B1C  EC4B  F00D         	call	___fladd	;wreg free
  1722   002B20  C009  F047         	movff	?___fladd,_CR1L
  1723   002B24  C00A  F048         	movff	?___fladd+1,_CR1L+1
  1724   002B28  C00B  F049         	movff	?___fladd+2,_CR1L+2
  1725   002B2C  C00C  F04A         	movff	?___fladd+3,_CR1L+3
  1726                           
  1727                           ;color.c: 181:             CR2U = clearArr[1]+0.3;
  1728   002B30  C06A  F009         	movff	rangeCalibrate@clearArr+4,___fladd@b
  1729   002B34  C06B  F00A         	movff	rangeCalibrate@clearArr+5,___fladd@b+1
  1730   002B38  C06C  F00B         	movff	rangeCalibrate@clearArr+6,___fladd@b+2
  1731   002B3C  C06D  F00C         	movff	rangeCalibrate@clearArr+7,___fladd@b+3
  1732   002B40  0E9A               	movlw	154
  1733   002B42  6E0D               	movwf	___fladd@a^0,c
  1734   002B44  0E99               	movlw	153
  1735   002B46  6E0E               	movwf	(___fladd@a+1)^0,c
  1736   002B48  0E99               	movlw	153
  1737   002B4A  6E0F               	movwf	(___fladd@a+2)^0,c
  1738   002B4C  0E3E               	movlw	62
  1739   002B4E  6E10               	movwf	(___fladd@a+3)^0,c
  1740   002B50  EC4B  F00D         	call	___fladd	;wreg free
  1741   002B54  C009  F043         	movff	?___fladd,_CR2U
  1742   002B58  C00A  F044         	movff	?___fladd+1,_CR2U+1
  1743   002B5C  C00B  F045         	movff	?___fladd+2,_CR2U+2
  1744   002B60  C00C  F046         	movff	?___fladd+3,_CR2U+3
  1745                           
  1746                           ;color.c: 182:             CR2L = clearArr[2]-0.3;
  1747   002B64  C06E  F009         	movff	rangeCalibrate@clearArr+8,___fladd@b
  1748   002B68  C06F  F00A         	movff	rangeCalibrate@clearArr+9,___fladd@b+1
  1749   002B6C  C070  F00B         	movff	rangeCalibrate@clearArr+10,___fladd@b+2
  1750   002B70  C071  F00C         	movff	rangeCalibrate@clearArr+11,___fladd@b+3
  1751   002B74  0E9A               	movlw	154
  1752   002B76  6E0D               	movwf	___fladd@a^0,c
  1753   002B78  0E99               	movlw	153
  1754   002B7A  6E0E               	movwf	(___fladd@a+1)^0,c
  1755   002B7C  0E99               	movlw	153
  1756   002B7E  6E0F               	movwf	(___fladd@a+2)^0,c
  1757   002B80  0EBE               	movlw	190
  1758   002B82  6E10               	movwf	(___fladd@a+3)^0,c
  1759   002B84  EC4B  F00D         	call	___fladd	;wreg free
  1760   002B88  C009  F03F         	movff	?___fladd,_CR2L
  1761   002B8C  C00A  F040         	movff	?___fladd+1,_CR2L+1
  1762   002B90  C00B  F041         	movff	?___fladd+2,_CR2L+2
  1763   002B94  C00C  F042         	movff	?___fladd+3,_CR2L+3
  1764                           
  1765                           ;color.c: 183:             CR3U = clearArr[3]+0.4;
  1766   002B98  C072  F009         	movff	rangeCalibrate@clearArr+12,___fladd@b
  1767   002B9C  C073  F00A         	movff	rangeCalibrate@clearArr+13,___fladd@b+1
  1768   002BA0  C074  F00B         	movff	rangeCalibrate@clearArr+14,___fladd@b+2
  1769   002BA4  C075  F00C         	movff	rangeCalibrate@clearArr+15,___fladd@b+3
  1770   002BA8  0ECD               	movlw	205
  1771   002BAA  6E0D               	movwf	___fladd@a^0,c
  1772   002BAC  0ECC               	movlw	204
  1773   002BAE  6E0E               	movwf	(___fladd@a+1)^0,c
  1774   002BB0  0ECC               	movlw	204
  1775   002BB2  6E0F               	movwf	(___fladd@a+2)^0,c
  1776   002BB4  0E3E               	movlw	62
  1777   002BB6  6E10               	movwf	(___fladd@a+3)^0,c
  1778   002BB8  EC4B  F00D         	call	___fladd	;wreg free
  1779   002BBC  C009  F0CC         	movff	?___fladd,_CR3U
  1780   002BC0  C00A  F0CD         	movff	?___fladd+1,_CR3U+1
  1781   002BC4  C00B  F0CE         	movff	?___fladd+2,_CR3U+2
  1782   002BC8  C00C  F0CF         	movff	?___fladd+3,_CR3U+3
  1783                           
  1784                           ;color.c: 184:             CR3L = clearArr[4]-0.2;
  1785   002BCC  C076  F009         	movff	rangeCalibrate@clearArr+16,___fladd@b
  1786   002BD0  C077  F00A         	movff	rangeCalibrate@clearArr+17,___fladd@b+1
  1787   002BD4  C078  F00B         	movff	rangeCalibrate@clearArr+18,___fladd@b+2
  1788   002BD8  C079  F00C         	movff	rangeCalibrate@clearArr+19,___fladd@b+3
  1789   002BDC  0ECD               	movlw	205
  1790   002BDE  6E0D               	movwf	___fladd@a^0,c
  1791   002BE0  0ECC               	movlw	204
  1792   002BE2  6E0E               	movwf	(___fladd@a+1)^0,c
  1793   002BE4  0E4C               	movlw	76
  1794   002BE6  6E0F               	movwf	(___fladd@a+2)^0,c
  1795   002BE8  0EBE               	movlw	190
  1796   002BEA  6E10               	movwf	(___fladd@a+3)^0,c
  1797   002BEC  EC4B  F00D         	call	___fladd	;wreg free
  1798   002BF0  C009  F0C8         	movff	?___fladd,_CR3L
  1799   002BF4  C00A  F0C9         	movff	?___fladd+1,_CR3L+1
  1800   002BF8  C00B  F0CA         	movff	?___fladd+2,_CR3L+2
  1801   002BFC  C00C  F0CB         	movff	?___fladd+3,_CR3L+3
  1802   002C00                     
  1803                           ;color.c: 185:             _delay((unsigned long)((2000)*(64000000/4000.0)));
  1804   002C00  0EA3               	movlw	163
  1805   002C02  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1806   002C04  0E57               	movlw	87
  1807   002C06  6E3D               	movwf	??_rangeCalibrate^0,c
  1808   002C08  0E02               	movlw	2
  1809   002C0A                     u3397:
  1810   002C0A  2EE8               	decfsz	wreg,f,c
  1811   002C0C  D7FE               	bra	u3397
  1812   002C0E  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1813   002C10  D7FC               	bra	u3397
  1814   002C12  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1815   002C14  D7FA               	bra	u3397
  1816   002C16  D000               	nop2	
  1817   002C18  0012               	return		;funcret
  1818   002C1A                     __end_of_rangeCalibrate:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function _wallSmash *****************
  1822 ;; Defined at:
  1823 ;;		line 200 in file "dc_motor.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1826 ;;		 -> main@mL(9), 
  1827 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1828 ;;		 -> main@mR(9), 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1840 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;Total ram usage:        5 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 8
  1847 ;; This function calls:
  1848 ;;		_setMotorPWM
  1849 ;; This function is called by:
  1850 ;;		_rangeCalibrate
  1851 ;;		_main
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text6
  1856   0032A6                     __ptext6:
  1857                           	callstack 0
  1858   0032A6                     _wallSmash:
  1859                           	callstack 22
  1860   0032A6                     
  1861                           ;dc_motor.c: 200: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 201: {;dc_motor
      +                          .c: 202:     mL->power =50;
  1862   0032A6  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1863   0032AA  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1864   0032AE  0E32               	movlw	50
  1865   0032B0  6EDF               	movwf	indf2,c
  1866                           
  1867                           ;dc_motor.c: 203:     mR->power = 50;
  1868   0032B2  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1869   0032B6  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1870   0032BA  0E32               	movlw	50
  1871   0032BC  6EDF               	movwf	indf2,c
  1872   0032BE                     
  1873                           ;dc_motor.c: 204:     mR->direction = 1;
  1874   0032BE  EE20 F001          	lfsr	2,1
  1875   0032C2  501E               	movf	wallSmash@mR^0,w,c
  1876   0032C4  26D9               	addwf	fsr2l,f,c
  1877   0032C6  501F               	movf	(wallSmash@mR+1)^0,w,c
  1878   0032C8  22DA               	addwfc	fsr2h,f,c
  1879   0032CA  0E01               	movlw	1
  1880   0032CC  6EDF               	movwf	indf2,c
  1881   0032CE                     
  1882                           ;dc_motor.c: 205:     mL->direction = 1;
  1883   0032CE  EE20 F001          	lfsr	2,1
  1884   0032D2  501C               	movf	wallSmash@mL^0,w,c
  1885   0032D4  26D9               	addwf	fsr2l,f,c
  1886   0032D6  501D               	movf	(wallSmash@mL+1)^0,w,c
  1887   0032D8  22DA               	addwfc	fsr2h,f,c
  1888   0032DA  0E01               	movlw	1
  1889   0032DC  6EDF               	movwf	indf2,c
  1890   0032DE                     
  1891                           ;dc_motor.c: 206:     mL->brakemode = 1;
  1892   0032DE  EE20 F002          	lfsr	2,2
  1893   0032E2  501C               	movf	wallSmash@mL^0,w,c
  1894   0032E4  26D9               	addwf	fsr2l,f,c
  1895   0032E6  501D               	movf	(wallSmash@mL+1)^0,w,c
  1896   0032E8  22DA               	addwfc	fsr2h,f,c
  1897   0032EA  0E01               	movlw	1
  1898   0032EC  6EDF               	movwf	indf2,c
  1899   0032EE                     
  1900                           ;dc_motor.c: 207:     mR->brakemode = 1;
  1901   0032EE  EE20 F002          	lfsr	2,2
  1902   0032F2  501E               	movf	wallSmash@mR^0,w,c
  1903   0032F4  26D9               	addwf	fsr2l,f,c
  1904   0032F6  501F               	movf	(wallSmash@mR+1)^0,w,c
  1905   0032F8  22DA               	addwfc	fsr2h,f,c
  1906   0032FA  0E01               	movlw	1
  1907   0032FC  6EDF               	movwf	indf2,c
  1908                           
  1909                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1910   0032FE  EF97  F019         	goto	l3076
  1911   003302                     l3070:
  1912                           
  1913                           ;dc_motor.c: 209:     {;dc_motor.c: 210:         mL->power++;
  1914   003302  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1915   003306  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1916   00330A  2ADF               	incf	indf2,f,c
  1917                           
  1918                           ;dc_motor.c: 211:         mR->power++;
  1919   00330C  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1920   003310  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1921   003314  2ADF               	incf	indf2,f,c
  1922   003316                     
  1923                           ;dc_motor.c: 213:         setMotorPWM(mL);
  1924   003316  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1925   00331A  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1926   00331E  EC9F  F017         	call	_setMotorPWM	;wreg free
  1927   003322                     
  1928                           ;dc_motor.c: 214:         setMotorPWM(mR);
  1929   003322  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1930   003326  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1931   00332A  EC9F  F017         	call	_setMotorPWM	;wreg free
  1932   00332E                     l3076:
  1933                           
  1934                           ;dc_motor.c: 208:     while (mL->power <= 85 && mR->power <=85)
  1935   00332E  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1936   003332  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1937   003336  0E56               	movlw	86
  1938   003338  60DF               	cpfslt	indf2,c
  1939   00333A  EFA1  F019         	goto	u2091
  1940   00333E  EFA3  F019         	goto	u2090
  1941   003342                     u2091:
  1942   003342  EFAF  F019         	goto	l3080
  1943   003346                     u2090:
  1944   003346  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1945   00334A  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1946   00334E  0E55               	movlw	85
  1947   003350  64DF               	cpfsgt	indf2,c
  1948   003352  EFAD  F019         	goto	u2101
  1949   003356  EFAF  F019         	goto	u2100
  1950   00335A                     u2101:
  1951   00335A  EF81  F019         	goto	l3070
  1952   00335E                     u2100:
  1953   00335E                     l3080:
  1954                           
  1955                           ;dc_motor.c: 216:     mL->power = 85;
  1956   00335E  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1957   003362  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1958   003366  0E55               	movlw	85
  1959   003368  6EDF               	movwf	indf2,c
  1960                           
  1961                           ;dc_motor.c: 217:     mR->power = 85;
  1962   00336A  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1963   00336E  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1964   003372  0E55               	movlw	85
  1965   003374  6EDF               	movwf	indf2,c
  1966   003376                     
  1967                           ;dc_motor.c: 218:     setMotorPWM(mL);
  1968   003376  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1969   00337A  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1970   00337E  EC9F  F017         	call	_setMotorPWM	;wreg free
  1971   003382                     
  1972                           ;dc_motor.c: 219:     setMotorPWM(mR);
  1973   003382  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1974   003386  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1975   00338A  EC9F  F017         	call	_setMotorPWM	;wreg free
  1976   00338E  0012               	return		;funcret
  1977   003390                     __end_of_wallSmash:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _color_read_RGBC *****************
  1981 ;; Defined at:
  1982 ;;		line 93 in file "color.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1985 ;;		 -> main@RGBC(32), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;		None
  1988 ;; Return value:  Size  Location     Type
  1989 ;;                  1    wreg      void 
  1990 ;; Registers used:
  1991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1992 ;; Tracked objects:
  1993 ;;		On entry : 0/0
  1994 ;;		On exit  : 0/0
  1995 ;;		Unchanged: 0/0
  1996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;Total ram usage:        2 bytes
  2002 ;; Hardware stack levels used: 1
  2003 ;; Hardware stack levels required when called: 9
  2004 ;; This function calls:
  2005 ;;		___xxtofl
  2006 ;;		_color_read_Blue
  2007 ;;		_color_read_Clear
  2008 ;;		_color_read_Green
  2009 ;;		_color_read_Red
  2010 ;; This function is called by:
  2011 ;;		_rangeCalibrate
  2012 ;;		_main
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           
  2016                           	psect	text7
  2017   00347A                     __ptext7:
  2018                           	callstack 0
  2019   00347A                     _color_read_RGBC:
  2020                           	callstack 20
  2021   00347A                     
  2022                           ;color.c: 94:     temp->R = color_read_Red();
  2023   00347A  EC21  F01C         	call	_color_read_Red	;wreg free
  2024   00347E  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2025   003482  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2026   003486  6A16               	clrf	(___xxtofl@val+2)^0,c
  2027   003488  6A17               	clrf	(___xxtofl@val+3)^0,c
  2028   00348A  0E00               	movlw	0
  2029   00348C  EC0D  F016         	call	___xxtofl
  2030   003490  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2031   003494  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2032   003498  C014  FFDE         	movff	?___xxtofl,postinc2
  2033   00349C  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2034   0034A0  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2035   0034A4  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2036                           
  2037                           ;color.c: 95:     temp->B = color_read_Blue();
  2038   0034A8  EC99  F01C         	call	_color_read_Blue	;wreg free
  2039   0034AC  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2040   0034B0  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2041   0034B4  6A16               	clrf	(___xxtofl@val+2)^0,c
  2042   0034B6  6A17               	clrf	(___xxtofl@val+3)^0,c
  2043   0034B8  0E00               	movlw	0
  2044   0034BA  EC0D  F016         	call	___xxtofl
  2045   0034BE  EE20 F008          	lfsr	2,8
  2046   0034C2  5022               	movf	color_read_RGBC@temp^0,w,c
  2047   0034C4  26D9               	addwf	fsr2l,f,c
  2048   0034C6  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2049   0034C8  22DA               	addwfc	fsr2h,f,c
  2050   0034CA  C014  FFDE         	movff	?___xxtofl,postinc2
  2051   0034CE  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2052   0034D2  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2053   0034D6  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2054                           
  2055                           ;color.c: 96:     temp->G = color_read_Green();
  2056   0034DA  EC49  F01C         	call	_color_read_Green	;wreg free
  2057   0034DE  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2058   0034E2  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2059   0034E6  6A16               	clrf	(___xxtofl@val+2)^0,c
  2060   0034E8  6A17               	clrf	(___xxtofl@val+3)^0,c
  2061   0034EA  0E00               	movlw	0
  2062   0034EC  EC0D  F016         	call	___xxtofl
  2063   0034F0  EE20 F004          	lfsr	2,4
  2064   0034F4  5022               	movf	color_read_RGBC@temp^0,w,c
  2065   0034F6  26D9               	addwf	fsr2l,f,c
  2066   0034F8  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2067   0034FA  22DA               	addwfc	fsr2h,f,c
  2068   0034FC  C014  FFDE         	movff	?___xxtofl,postinc2
  2069   003500  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2070   003504  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2071   003508  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2072                           
  2073                           ;color.c: 97:     temp->C = color_read_Clear();
  2074   00350C  EC71  F01C         	call	_color_read_Clear	;wreg free
  2075   003510  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2076   003514  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2077   003518  6A16               	clrf	(___xxtofl@val+2)^0,c
  2078   00351A  6A17               	clrf	(___xxtofl@val+3)^0,c
  2079   00351C  0E00               	movlw	0
  2080   00351E  EC0D  F016         	call	___xxtofl
  2081   003522  EE20 F00C          	lfsr	2,12
  2082   003526  5022               	movf	color_read_RGBC@temp^0,w,c
  2083   003528  26D9               	addwf	fsr2l,f,c
  2084   00352A  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2085   00352C  22DA               	addwfc	fsr2h,f,c
  2086   00352E  C014  FFDE         	movff	?___xxtofl,postinc2
  2087   003532  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2088   003536  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2089   00353A  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2090   00353E  0012               	return		;funcret
  2091   003540                     __end_of_color_read_RGBC:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _color_read_Red *****************
  2095 ;; Defined at:
  2096 ;;		line 32 in file "color.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  tmp             2   17[COMRAM] unsigned int 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2   12[COMRAM] unsigned int 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2110 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;Total ram usage:        7 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 8
  2117 ;; This function calls:
  2118 ;;		_I2C_2_Master_Read
  2119 ;;		_I2C_2_Master_RepStart
  2120 ;;		_I2C_2_Master_Start
  2121 ;;		_I2C_2_Master_Stop
  2122 ;;		_I2C_2_Master_Write
  2123 ;; This function is called by:
  2124 ;;		_color_read_RGBC
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text8
  2129   003842                     __ptext8:
  2130                           	callstack 0
  2131   003842                     _color_read_Red:
  2132                           	callstack 20
  2133   003842                     
  2134                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  2135   003842  EC42  F01E         	call	_I2C_2_Master_Start	;wreg free
  2136                           
  2137                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2138   003846  0E52               	movlw	82
  2139   003848  EC21  F01E         	call	_I2C_2_Master_Write
  2140                           
  2141                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  2142   00384C  0EB6               	movlw	182
  2143   00384E  EC21  F01E         	call	_I2C_2_Master_Write
  2144                           
  2145                           ;color.c: 37:     I2C_2_Master_RepStart();
  2146   003852  EC33  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2147                           
  2148                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  2149   003856  0E53               	movlw	83
  2150   003858  EC21  F01E         	call	_I2C_2_Master_Write
  2151                           
  2152                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  2153   00385C  0E01               	movlw	1
  2154   00385E  ECE8  F01C         	call	_I2C_2_Master_Read
  2155   003862  6E0F               	movwf	??_color_read_Red^0,c
  2156   003864  500F               	movf	??_color_read_Red^0,w,c
  2157   003866  6E12               	movwf	color_read_Red@tmp^0,c
  2158   003868  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2159                           
  2160                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2161   00386A  0E00               	movlw	0
  2162   00386C  ECE8  F01C         	call	_I2C_2_Master_Read
  2163   003870  6E0F               	movwf	??_color_read_Red^0,c
  2164   003872  500F               	movf	??_color_read_Red^0,w,c
  2165   003874  6E11               	movwf	(??_color_read_Red+2)^0,c
  2166   003876  6A10               	clrf	(??_color_read_Red+1)^0,c
  2167   003878  5012               	movf	color_read_Red@tmp^0,w,c
  2168   00387A  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2169   00387C  6E12               	movwf	color_read_Red@tmp^0,c
  2170   00387E  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2171   003880  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2172   003882  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2173                           
  2174                           ;color.c: 41:     I2C_2_Master_Stop();
  2175   003884  EC3D  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2176   003888                     
  2177                           ;color.c: 42:     return tmp;
  2178   003888  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2179   00388C  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2180   003890  0012               	return		;funcret
  2181   003892                     __end_of_color_read_Red:
  2182                           	callstack 0
  2183                           
  2184 ;; *************** function _color_read_Green *****************
  2185 ;; Defined at:
  2186 ;;		line 45 in file "color.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  tmp             2   17[COMRAM] unsigned int 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  2   12[COMRAM] unsigned int 
  2193 ;; Registers used:
  2194 ;;		wreg, status,2, status,0, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2201 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;Total ram usage:        7 bytes
  2205 ;; Hardware stack levels used: 1
  2206 ;; Hardware stack levels required when called: 8
  2207 ;; This function calls:
  2208 ;;		_I2C_2_Master_Read
  2209 ;;		_I2C_2_Master_RepStart
  2210 ;;		_I2C_2_Master_Start
  2211 ;;		_I2C_2_Master_Stop
  2212 ;;		_I2C_2_Master_Write
  2213 ;; This function is called by:
  2214 ;;		_color_read_RGBC
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text9
  2219   003892                     __ptext9:
  2220                           	callstack 0
  2221   003892                     _color_read_Green:
  2222                           	callstack 20
  2223   003892                     
  2224                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  2225   003892  EC42  F01E         	call	_I2C_2_Master_Start	;wreg free
  2226                           
  2227                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  2228   003896  0E52               	movlw	82
  2229   003898  EC21  F01E         	call	_I2C_2_Master_Write
  2230                           
  2231                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  2232   00389C  0EB8               	movlw	184
  2233   00389E  EC21  F01E         	call	_I2C_2_Master_Write
  2234                           
  2235                           ;color.c: 50:     I2C_2_Master_RepStart();
  2236   0038A2  EC33  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2237                           
  2238                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  2239   0038A6  0E53               	movlw	83
  2240   0038A8  EC21  F01E         	call	_I2C_2_Master_Write
  2241                           
  2242                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  2243   0038AC  0E01               	movlw	1
  2244   0038AE  ECE8  F01C         	call	_I2C_2_Master_Read
  2245   0038B2  6E0F               	movwf	??_color_read_Green^0,c
  2246   0038B4  500F               	movf	??_color_read_Green^0,w,c
  2247   0038B6  6E12               	movwf	color_read_Green@tmp^0,c
  2248   0038B8  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2249                           
  2250                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2251   0038BA  0E00               	movlw	0
  2252   0038BC  ECE8  F01C         	call	_I2C_2_Master_Read
  2253   0038C0  6E0F               	movwf	??_color_read_Green^0,c
  2254   0038C2  500F               	movf	??_color_read_Green^0,w,c
  2255   0038C4  6E11               	movwf	(??_color_read_Green+2)^0,c
  2256   0038C6  6A10               	clrf	(??_color_read_Green+1)^0,c
  2257   0038C8  5012               	movf	color_read_Green@tmp^0,w,c
  2258   0038CA  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2259   0038CC  6E12               	movwf	color_read_Green@tmp^0,c
  2260   0038CE  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2261   0038D0  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2262   0038D2  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2263                           
  2264                           ;color.c: 54:     I2C_2_Master_Stop();
  2265   0038D4  EC3D  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2266   0038D8                     
  2267                           ;color.c: 55:     return tmp;
  2268   0038D8  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2269   0038DC  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2270   0038E0  0012               	return		;funcret
  2271   0038E2                     __end_of_color_read_Green:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _color_read_Clear *****************
  2275 ;; Defined at:
  2276 ;;		line 71 in file "color.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;		None
  2279 ;; Auto vars:     Size  Location     Type
  2280 ;;  tmp             2   17[COMRAM] unsigned int 
  2281 ;; Return value:  Size  Location     Type
  2282 ;;                  2   12[COMRAM] unsigned int 
  2283 ;; Registers used:
  2284 ;;		wreg, status,2, status,0, cstack
  2285 ;; Tracked objects:
  2286 ;;		On entry : 0/0
  2287 ;;		On exit  : 0/0
  2288 ;;		Unchanged: 0/0
  2289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;Total ram usage:        7 bytes
  2295 ;; Hardware stack levels used: 1
  2296 ;; Hardware stack levels required when called: 8
  2297 ;; This function calls:
  2298 ;;		_I2C_2_Master_Read
  2299 ;;		_I2C_2_Master_RepStart
  2300 ;;		_I2C_2_Master_Start
  2301 ;;		_I2C_2_Master_Stop
  2302 ;;		_I2C_2_Master_Write
  2303 ;; This function is called by:
  2304 ;;		_color_read_RGBC
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text10
  2309   0038E2                     __ptext10:
  2310                           	callstack 0
  2311   0038E2                     _color_read_Clear:
  2312                           	callstack 20
  2313   0038E2                     
  2314                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  2315   0038E2  EC42  F01E         	call	_I2C_2_Master_Start	;wreg free
  2316                           
  2317                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  2318   0038E6  0E52               	movlw	82
  2319   0038E8  EC21  F01E         	call	_I2C_2_Master_Write
  2320                           
  2321                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  2322   0038EC  0EB4               	movlw	180
  2323   0038EE  EC21  F01E         	call	_I2C_2_Master_Write
  2324                           
  2325                           ;color.c: 76:     I2C_2_Master_RepStart();
  2326   0038F2  EC33  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2327                           
  2328                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  2329   0038F6  0E53               	movlw	83
  2330   0038F8  EC21  F01E         	call	_I2C_2_Master_Write
  2331                           
  2332                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  2333   0038FC  0E01               	movlw	1
  2334   0038FE  ECE8  F01C         	call	_I2C_2_Master_Read
  2335   003902  6E0F               	movwf	??_color_read_Clear^0,c
  2336   003904  500F               	movf	??_color_read_Clear^0,w,c
  2337   003906  6E12               	movwf	color_read_Clear@tmp^0,c
  2338   003908  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2339                           
  2340                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2341   00390A  0E00               	movlw	0
  2342   00390C  ECE8  F01C         	call	_I2C_2_Master_Read
  2343   003910  6E0F               	movwf	??_color_read_Clear^0,c
  2344   003912  500F               	movf	??_color_read_Clear^0,w,c
  2345   003914  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2346   003916  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2347   003918  5012               	movf	color_read_Clear@tmp^0,w,c
  2348   00391A  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2349   00391C  6E12               	movwf	color_read_Clear@tmp^0,c
  2350   00391E  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2351   003920  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2352   003922  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2353                           
  2354                           ;color.c: 80:     I2C_2_Master_Stop();
  2355   003924  EC3D  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2356   003928                     
  2357                           ;color.c: 81:     return tmp;
  2358   003928  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2359   00392C  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2360   003930  0012               	return		;funcret
  2361   003932                     __end_of_color_read_Clear:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function _color_read_Blue *****************
  2365 ;; Defined at:
  2366 ;;		line 58 in file "color.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;  tmp             2   17[COMRAM] unsigned int 
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  2   12[COMRAM] unsigned int 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2381 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;Total ram usage:        7 bytes
  2385 ;; Hardware stack levels used: 1
  2386 ;; Hardware stack levels required when called: 8
  2387 ;; This function calls:
  2388 ;;		_I2C_2_Master_Read
  2389 ;;		_I2C_2_Master_RepStart
  2390 ;;		_I2C_2_Master_Start
  2391 ;;		_I2C_2_Master_Stop
  2392 ;;		_I2C_2_Master_Write
  2393 ;; This function is called by:
  2394 ;;		_color_read_RGBC
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text11
  2399   003932                     __ptext11:
  2400                           	callstack 0
  2401   003932                     _color_read_Blue:
  2402                           	callstack 20
  2403   003932                     
  2404                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  2405   003932  EC42  F01E         	call	_I2C_2_Master_Start	;wreg free
  2406                           
  2407                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  2408   003936  0E52               	movlw	82
  2409   003938  EC21  F01E         	call	_I2C_2_Master_Write
  2410                           
  2411                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  2412   00393C  0EBA               	movlw	186
  2413   00393E  EC21  F01E         	call	_I2C_2_Master_Write
  2414                           
  2415                           ;color.c: 63:     I2C_2_Master_RepStart();
  2416   003942  EC33  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2417                           
  2418                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  2419   003946  0E53               	movlw	83
  2420   003948  EC21  F01E         	call	_I2C_2_Master_Write
  2421                           
  2422                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  2423   00394C  0E01               	movlw	1
  2424   00394E  ECE8  F01C         	call	_I2C_2_Master_Read
  2425   003952  6E0F               	movwf	??_color_read_Blue^0,c
  2426   003954  500F               	movf	??_color_read_Blue^0,w,c
  2427   003956  6E12               	movwf	color_read_Blue@tmp^0,c
  2428   003958  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2429                           
  2430                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2431   00395A  0E00               	movlw	0
  2432   00395C  ECE8  F01C         	call	_I2C_2_Master_Read
  2433   003960  6E0F               	movwf	??_color_read_Blue^0,c
  2434   003962  500F               	movf	??_color_read_Blue^0,w,c
  2435   003964  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2436   003966  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2437   003968  5012               	movf	color_read_Blue@tmp^0,w,c
  2438   00396A  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2439   00396C  6E12               	movwf	color_read_Blue@tmp^0,c
  2440   00396E  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2441   003970  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2442   003972  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2443                           
  2444                           ;color.c: 67:     I2C_2_Master_Stop();
  2445   003974  EC3D  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2446   003978                     
  2447                           ;color.c: 68:     return tmp;
  2448   003978  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2449   00397C  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2450   003980  0012               	return		;funcret
  2451   003982                     __end_of_color_read_Blue:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _I2C_2_Master_RepStart *****************
  2455 ;; Defined at:
  2456 ;;		line 33 in file "i2c.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;		None
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;		None
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, status,2, status,0, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;Total ram usage:        0 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 7
  2477 ;; This function calls:
  2478 ;;		_I2C_2_Master_Idle
  2479 ;; This function is called by:
  2480 ;;		_color_read_Red
  2481 ;;		_color_read_Green
  2482 ;;		_color_read_Blue
  2483 ;;		_color_read_Clear
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text12
  2488   003C66                     __ptext12:
  2489                           	callstack 0
  2490   003C66                     _I2C_2_Master_RepStart:
  2491                           	callstack 20
  2492   003C66                     
  2493                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2494   003C66  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2495   003C6A                     
  2496                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2497   003C6A  010E               	movlb	14	; () banked
  2498   003C6C  83DA               	bsf	218,1,b	;volatile
  2499   003C6E                     
  2500                           ; BSR set to: 14
  2501   003C6E  0012               	return		;funcret
  2502   003C70                     __end_of_I2C_2_Master_RepStart:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _I2C_2_Master_Read *****************
  2506 ;; Defined at:
  2507 ;;		line 51 in file "i2c.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;  ack             1    wreg     unsigned char 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  ack             1   10[COMRAM] unsigned char 
  2512 ;;  tmp             1   11[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      unsigned char 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;Total ram usage:        3 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 7
  2529 ;; This function calls:
  2530 ;;		_I2C_2_Master_Idle
  2531 ;; This function is called by:
  2532 ;;		_color_read_Red
  2533 ;;		_color_read_Green
  2534 ;;		_color_read_Blue
  2535 ;;		_color_read_Clear
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text13
  2540   0039D0                     __ptext13:
  2541                           	callstack 0
  2542   0039D0                     _I2C_2_Master_Read:
  2543                           	callstack 20
  2544                           
  2545                           ; BSR set to: 14
  2546                           ;incstack = 0
  2547                           ;I2C_2_Master_Read@ack stored from wreg
  2548   0039D0  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2549   0039D2                     
  2550                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2551   0039D2  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2552   0039D6                     
  2553                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2554   0039D6  010E               	movlb	14	; () banked
  2555   0039D8  87DA               	bsf	218,3,b	;volatile
  2556                           
  2557                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2558   0039DA  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2559   0039DE                     
  2560                           ;i2c.c: 57:   tmp = SSP2BUF;
  2561   0039DE  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2562                           
  2563                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2564   0039E2  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2565   0039E6                     
  2566                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2567   0039E6  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2568   0039E8  B4D8               	btfsc	status,2,c
  2569   0039EA  EFF9  F01C         	goto	u1701
  2570   0039EE  EFFD  F01C         	goto	u1700
  2571   0039F2                     u1701:
  2572   0039F2  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2573   0039F4  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2574   0039F6  EFFE  F01C         	goto	u1718
  2575   0039FA                     u1700:
  2576   0039FA  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2577   0039FC                     u1718:
  2578   0039FC  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2579   0039FE  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2580   003A00  010E               	movlb	14	; () banked
  2581   003A02  51DA               	movf	218,w,b	;volatile
  2582   003A04  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2583   003A06  0BDF               	andlw	-33
  2584   003A08  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2585   003A0A  6FDA               	movwf	218,b	;volatile
  2586   003A0C                     
  2587                           ; BSR set to: 14
  2588                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2589   003A0C  89DA               	bsf	218,4,b	;volatile
  2590   003A0E                     
  2591                           ; BSR set to: 14
  2592                           ;i2c.c: 61:   return tmp;
  2593   003A0E  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2594   003A10                     
  2595                           ; BSR set to: 14
  2596   003A10  0012               	return		;funcret
  2597   003A12                     __end_of_I2C_2_Master_Read:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _color_normalise *****************
  2601 ;; Defined at:
  2602 ;;		line 102 in file "color.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2605 ;;		 -> main@RGBC(32), 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:        2 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 7
  2624 ;; This function calls:
  2625 ;;		___fldiv
  2626 ;;		___xxtofl
  2627 ;; This function is called by:
  2628 ;;		_rangeCalibrate
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text14
  2634   002DCE                     __ptext14:
  2635                           	callstack 0
  2636   002DCE                     _color_normalise:
  2637                           	callstack 22
  2638   002DCE                     
  2639                           ;color.c: 103:     amb_clear = 2385;
  2640   002DCE  0E09               	movlw	9
  2641   002DD0  6E4C               	movwf	(_amb_clear+1)^0,c
  2642   002DD2  0E51               	movlw	81
  2643   002DD4  6E4B               	movwf	_amb_clear^0,c
  2644   002DD6                     
  2645                           ;color.c: 104:     RGBC->norm_R = RGBC->C / RGBC->R;
  2646   002DD6  EE20 F00C          	lfsr	2,12
  2647   002DDA  503B               	movf	color_normalise@RGBC^0,w,c
  2648   002DDC  26D9               	addwf	fsr2l,f,c
  2649   002DDE  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2650   002DE0  22DA               	addwfc	fsr2h,f,c
  2651   002DE2  CFDE F022          	movff	postinc2,___fldiv@b
  2652   002DE6  CFDE F023          	movff	postinc2,___fldiv@b+1
  2653   002DEA  CFDE F024          	movff	postinc2,___fldiv@b+2
  2654   002DEE  CFDE F025          	movff	postinc2,___fldiv@b+3
  2655   002DF2  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2656   002DF6  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2657   002DFA  CFDE F026          	movff	postinc2,___fldiv@a
  2658   002DFE  CFDE F027          	movff	postinc2,___fldiv@a+1
  2659   002E02  CFDE F028          	movff	postinc2,___fldiv@a+2
  2660   002E06  CFDE F029          	movff	postinc2,___fldiv@a+3
  2661   002E0A  EC8F  F011         	call	___fldiv	;wreg free
  2662   002E0E  EE20 F010          	lfsr	2,16
  2663   002E12  503B               	movf	color_normalise@RGBC^0,w,c
  2664   002E14  26D9               	addwf	fsr2l,f,c
  2665   002E16  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2666   002E18  22DA               	addwfc	fsr2h,f,c
  2667   002E1A  C022  FFDE         	movff	?___fldiv,postinc2
  2668   002E1E  C023  FFDE         	movff	?___fldiv+1,postinc2
  2669   002E22  C024  FFDE         	movff	?___fldiv+2,postinc2
  2670   002E26  C025  FFDE         	movff	?___fldiv+3,postinc2
  2671   002E2A                     
  2672                           ;color.c: 105:     RGBC->norm_G = RGBC->C / RGBC->G;
  2673   002E2A  EE20 F00C          	lfsr	2,12
  2674   002E2E  503B               	movf	color_normalise@RGBC^0,w,c
  2675   002E30  26D9               	addwf	fsr2l,f,c
  2676   002E32  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2677   002E34  22DA               	addwfc	fsr2h,f,c
  2678   002E36  CFDE F022          	movff	postinc2,___fldiv@b
  2679   002E3A  CFDE F023          	movff	postinc2,___fldiv@b+1
  2680   002E3E  CFDE F024          	movff	postinc2,___fldiv@b+2
  2681   002E42  CFDE F025          	movff	postinc2,___fldiv@b+3
  2682   002E46  EE20 F004          	lfsr	2,4
  2683   002E4A  503B               	movf	color_normalise@RGBC^0,w,c
  2684   002E4C  26D9               	addwf	fsr2l,f,c
  2685   002E4E  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2686   002E50  22DA               	addwfc	fsr2h,f,c
  2687   002E52  CFDE F026          	movff	postinc2,___fldiv@a
  2688   002E56  CFDE F027          	movff	postinc2,___fldiv@a+1
  2689   002E5A  CFDE F028          	movff	postinc2,___fldiv@a+2
  2690   002E5E  CFDE F029          	movff	postinc2,___fldiv@a+3
  2691   002E62  EC8F  F011         	call	___fldiv	;wreg free
  2692   002E66  EE20 F014          	lfsr	2,20
  2693   002E6A  503B               	movf	color_normalise@RGBC^0,w,c
  2694   002E6C  26D9               	addwf	fsr2l,f,c
  2695   002E6E  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2696   002E70  22DA               	addwfc	fsr2h,f,c
  2697   002E72  C022  FFDE         	movff	?___fldiv,postinc2
  2698   002E76  C023  FFDE         	movff	?___fldiv+1,postinc2
  2699   002E7A  C024  FFDE         	movff	?___fldiv+2,postinc2
  2700   002E7E  C025  FFDE         	movff	?___fldiv+3,postinc2
  2701   002E82                     
  2702                           ;color.c: 106:     RGBC->norm_B = RGBC->C / RGBC->B;
  2703   002E82  EE20 F00C          	lfsr	2,12
  2704   002E86  503B               	movf	color_normalise@RGBC^0,w,c
  2705   002E88  26D9               	addwf	fsr2l,f,c
  2706   002E8A  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2707   002E8C  22DA               	addwfc	fsr2h,f,c
  2708   002E8E  CFDE F022          	movff	postinc2,___fldiv@b
  2709   002E92  CFDE F023          	movff	postinc2,___fldiv@b+1
  2710   002E96  CFDE F024          	movff	postinc2,___fldiv@b+2
  2711   002E9A  CFDE F025          	movff	postinc2,___fldiv@b+3
  2712   002E9E  EE20 F008          	lfsr	2,8
  2713   002EA2  503B               	movf	color_normalise@RGBC^0,w,c
  2714   002EA4  26D9               	addwf	fsr2l,f,c
  2715   002EA6  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2716   002EA8  22DA               	addwfc	fsr2h,f,c
  2717   002EAA  CFDE F026          	movff	postinc2,___fldiv@a
  2718   002EAE  CFDE F027          	movff	postinc2,___fldiv@a+1
  2719   002EB2  CFDE F028          	movff	postinc2,___fldiv@a+2
  2720   002EB6  CFDE F029          	movff	postinc2,___fldiv@a+3
  2721   002EBA  EC8F  F011         	call	___fldiv	;wreg free
  2722   002EBE  EE20 F018          	lfsr	2,24
  2723   002EC2  503B               	movf	color_normalise@RGBC^0,w,c
  2724   002EC4  26D9               	addwf	fsr2l,f,c
  2725   002EC6  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2726   002EC8  22DA               	addwfc	fsr2h,f,c
  2727   002ECA  C022  FFDE         	movff	?___fldiv,postinc2
  2728   002ECE  C023  FFDE         	movff	?___fldiv+1,postinc2
  2729   002ED2  C024  FFDE         	movff	?___fldiv+2,postinc2
  2730   002ED6  C025  FFDE         	movff	?___fldiv+3,postinc2
  2731   002EDA                     
  2732                           ;color.c: 107:     RGBC->norm_C = RGBC->C / amb_clear;
  2733   002EDA  EE20 F00C          	lfsr	2,12
  2734   002EDE  503B               	movf	color_normalise@RGBC^0,w,c
  2735   002EE0  26D9               	addwf	fsr2l,f,c
  2736   002EE2  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2737   002EE4  22DA               	addwfc	fsr2h,f,c
  2738   002EE6  CFDE F022          	movff	postinc2,___fldiv@b
  2739   002EEA  CFDE F023          	movff	postinc2,___fldiv@b+1
  2740   002EEE  CFDE F024          	movff	postinc2,___fldiv@b+2
  2741   002EF2  CFDE F025          	movff	postinc2,___fldiv@b+3
  2742   002EF6  0E51               	movlw	81
  2743   002EF8  6E14               	movwf	___xxtofl@val^0,c
  2744   002EFA  0E09               	movlw	9
  2745   002EFC  6E15               	movwf	(___xxtofl@val+1)^0,c
  2746   002EFE  0E00               	movlw	0
  2747   002F00  6E16               	movwf	(___xxtofl@val+2)^0,c
  2748   002F02  0E00               	movlw	0
  2749   002F04  6E17               	movwf	(___xxtofl@val+3)^0,c
  2750   002F06  0E01               	movlw	1
  2751   002F08  EC0D  F016         	call	___xxtofl
  2752   002F0C  C014  F026         	movff	?___xxtofl,___fldiv@a
  2753   002F10  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2754   002F14  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2755   002F18  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2756   002F1C  EC8F  F011         	call	___fldiv	;wreg free
  2757   002F20  EE20 F01C          	lfsr	2,28
  2758   002F24  503B               	movf	color_normalise@RGBC^0,w,c
  2759   002F26  26D9               	addwf	fsr2l,f,c
  2760   002F28  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2761   002F2A  22DA               	addwfc	fsr2h,f,c
  2762   002F2C  C022  FFDE         	movff	?___fldiv,postinc2
  2763   002F30  C023  FFDE         	movff	?___fldiv+1,postinc2
  2764   002F34  C024  FFDE         	movff	?___fldiv+2,postinc2
  2765   002F38  C025  FFDE         	movff	?___fldiv+3,postinc2
  2766   002F3C  0012               	return		;funcret
  2767   002F3E                     __end_of_color_normalise:
  2768                           	callstack 0
  2769                           
  2770 ;; *************** function ___xxtofl *****************
  2771 ;; Defined at:
  2772 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  sign            1    wreg     unsigned char 
  2775 ;;  val             4   19[COMRAM] long 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  sign            1   27[COMRAM] unsigned char 
  2778 ;;  arg             4   29[COMRAM] unsigned long 
  2779 ;;  exp             1   28[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  4   19[COMRAM] unsigned char 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2789 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2790 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;Total ram usage:       14 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; Hardware stack levels required when called: 6
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_color_read_RGBC
  2800 ;;		_color_normalise
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text15
  2805   002C1A                     __ptext15:
  2806                           	callstack 0
  2807   002C1A                     ___xxtofl:
  2808                           	callstack 22
  2809                           
  2810                           ;incstack = 0
  2811                           ;___xxtofl@sign stored from wreg
  2812   002C1A  6E1C               	movwf	___xxtofl@sign^0,c
  2813   002C1C  501C               	movf	___xxtofl@sign^0,w,c
  2814   002C1E  B4D8               	btfsc	status,2,c
  2815   002C20  EF14  F016         	goto	u1991
  2816   002C24  EF16  F016         	goto	u1990
  2817   002C28                     u1991:
  2818   002C28  EF38  F016         	goto	l1365
  2819   002C2C                     u1990:
  2820   002C2C  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2821   002C2E  EF1D  F016         	goto	u2000
  2822   002C32  EF1B  F016         	goto	u2001
  2823   002C36                     u2001:
  2824   002C36  EF38  F016         	goto	l1365
  2825   002C3A                     u2000:
  2826   002C3A  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2827   002C3E  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2828   002C42  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2829   002C46  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2830   002C4A  1E18               	comf	??___xxtofl^0,f,c
  2831   002C4C  1E19               	comf	(??___xxtofl+1)^0,f,c
  2832   002C4E  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2833   002C50  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2834   002C52  2A18               	incf	??___xxtofl^0,f,c
  2835   002C54  0E00               	movlw	0
  2836   002C56  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2837   002C58  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2838   002C5A  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2839   002C5C  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2840   002C60  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2841   002C64  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2842   002C68  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2843   002C6C  EF40  F016         	goto	l2986
  2844   002C70                     l1365:
  2845   002C70  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2846   002C74  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2847   002C78  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2848   002C7C  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2849   002C80                     l2986:
  2850   002C80  5014               	movf	___xxtofl@val^0,w,c
  2851   002C82  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2852   002C84  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2853   002C86  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2854   002C88  A4D8               	btfss	status,2,c
  2855   002C8A  EF49  F016         	goto	u2011
  2856   002C8E  EF4B  F016         	goto	u2010
  2857   002C92                     u2011:
  2858   002C92  EF55  F016         	goto	l2992
  2859   002C96                     u2010:
  2860   002C96  0E00               	movlw	0
  2861   002C98  6E14               	movwf	?___xxtofl^0,c
  2862   002C9A  0E00               	movlw	0
  2863   002C9C  6E15               	movwf	(?___xxtofl+1)^0,c
  2864   002C9E  0E00               	movlw	0
  2865   002CA0  6E16               	movwf	(?___xxtofl+2)^0,c
  2866   002CA2  0E00               	movlw	0
  2867   002CA4  6E17               	movwf	(?___xxtofl+3)^0,c
  2868   002CA6  EFE6  F016         	goto	l1368
  2869   002CAA                     l2992:
  2870   002CAA  0E96               	movlw	150
  2871   002CAC  6E1D               	movwf	___xxtofl@exp^0,c
  2872   002CAE  EF5F  F016         	goto	l2996
  2873   002CB2                     l2994:
  2874   002CB2  2A1D               	incf	___xxtofl@exp^0,f,c
  2875   002CB4  90D8               	bcf	status,0,c
  2876   002CB6  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2877   002CB8  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2878   002CBA  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2879   002CBC  321E               	rrcf	___xxtofl@arg^0,f,c
  2880   002CBE                     l2996:
  2881   002CBE  0E00               	movlw	0
  2882   002CC0  141E               	andwf	___xxtofl@arg^0,w,c
  2883   002CC2  6E18               	movwf	??___xxtofl^0,c
  2884   002CC4  0E00               	movlw	0
  2885   002CC6  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2886   002CC8  6E19               	movwf	(??___xxtofl+1)^0,c
  2887   002CCA  0E00               	movlw	0
  2888   002CCC  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2889   002CCE  6E1A               	movwf	(??___xxtofl+2)^0,c
  2890   002CD0  0EFE               	movlw	254
  2891   002CD2  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2892   002CD4  6E1B               	movwf	(??___xxtofl+3)^0,c
  2893   002CD6  5018               	movf	??___xxtofl^0,w,c
  2894   002CD8  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2895   002CDA  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2896   002CDC  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2897   002CDE  A4D8               	btfss	status,2,c
  2898   002CE0  EF74  F016         	goto	u2021
  2899   002CE4  EF76  F016         	goto	u2020
  2900   002CE8                     u2021:
  2901   002CE8  EF59  F016         	goto	l2994
  2902   002CEC                     u2020:
  2903   002CEC  EF84  F016         	goto	l1372
  2904   002CF0                     l2998:
  2905   002CF0  2A1D               	incf	___xxtofl@exp^0,f,c
  2906   002CF2  0E01               	movlw	1
  2907   002CF4  261E               	addwf	___xxtofl@arg^0,f,c
  2908   002CF6  0E00               	movlw	0
  2909   002CF8  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2910   002CFA  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2911   002CFC  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2912   002CFE  90D8               	bcf	status,0,c
  2913   002D00  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2914   002D02  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2915   002D04  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2916   002D06  321E               	rrcf	___xxtofl@arg^0,f,c
  2917   002D08                     l1372:
  2918   002D08  0E00               	movlw	0
  2919   002D0A  141E               	andwf	___xxtofl@arg^0,w,c
  2920   002D0C  6E18               	movwf	??___xxtofl^0,c
  2921   002D0E  0E00               	movlw	0
  2922   002D10  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2923   002D12  6E19               	movwf	(??___xxtofl+1)^0,c
  2924   002D14  0E00               	movlw	0
  2925   002D16  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2926   002D18  6E1A               	movwf	(??___xxtofl+2)^0,c
  2927   002D1A  0EFF               	movlw	255
  2928   002D1C  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2929   002D1E  6E1B               	movwf	(??___xxtofl+3)^0,c
  2930   002D20  5018               	movf	??___xxtofl^0,w,c
  2931   002D22  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2932   002D24  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2933   002D26  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2934   002D28  A4D8               	btfss	status,2,c
  2935   002D2A  EF99  F016         	goto	u2031
  2936   002D2E  EF9B  F016         	goto	u2030
  2937   002D32                     u2031:
  2938   002D32  EF78  F016         	goto	l2998
  2939   002D36                     u2030:
  2940   002D36  EFA3  F016         	goto	l3006
  2941   002D3A                     l3004:
  2942   002D3A  061D               	decf	___xxtofl@exp^0,f,c
  2943   002D3C  90D8               	bcf	status,0,c
  2944   002D3E  361E               	rlcf	___xxtofl@arg^0,f,c
  2945   002D40  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2946   002D42  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2947   002D44  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2948   002D46                     l3006:
  2949   002D46  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2950   002D48  EFA8  F016         	goto	u2041
  2951   002D4C  EFAA  F016         	goto	u2040
  2952   002D50                     u2041:
  2953   002D50  EFB2  F016         	goto	l1379
  2954   002D54                     u2040:
  2955   002D54  0E02               	movlw	2
  2956   002D56  601D               	cpfslt	___xxtofl@exp^0,c
  2957   002D58  EFB0  F016         	goto	u2051
  2958   002D5C  EFB2  F016         	goto	u2050
  2959   002D60                     u2051:
  2960   002D60  EF9D  F016         	goto	l3004
  2961   002D64                     u2050:
  2962   002D64                     l1379:
  2963   002D64  B01D               	btfsc	___xxtofl@exp^0,0,c
  2964   002D66  EFB7  F016         	goto	u2061
  2965   002D6A  EFB9  F016         	goto	u2060
  2966   002D6E                     u2061:
  2967   002D6E  EFBA  F016         	goto	l3012
  2968   002D72                     u2060:
  2969   002D72  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2970   002D74                     l3012:
  2971   002D74  90D8               	bcf	status,0,c
  2972   002D76  321D               	rrcf	___xxtofl@exp^0,f,c
  2973   002D78  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2974   002D7C  6A19               	clrf	(??___xxtofl+1)^0,c
  2975   002D7E  6A1A               	clrf	(??___xxtofl+2)^0,c
  2976   002D80  6A1B               	clrf	(??___xxtofl+3)^0,c
  2977   002D82  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2978   002D86  6A1A               	clrf	(??___xxtofl+2)^0,c
  2979   002D88  6A19               	clrf	(??___xxtofl+1)^0,c
  2980   002D8A  6A18               	clrf	??___xxtofl^0,c
  2981   002D8C  5018               	movf	??___xxtofl^0,w,c
  2982   002D8E  121E               	iorwf	___xxtofl@arg^0,f,c
  2983   002D90  5019               	movf	(??___xxtofl+1)^0,w,c
  2984   002D92  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2985   002D94  501A               	movf	(??___xxtofl+2)^0,w,c
  2986   002D96  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2987   002D98  501B               	movf	(??___xxtofl+3)^0,w,c
  2988   002D9A  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2989   002D9C  501C               	movf	___xxtofl@sign^0,w,c
  2990   002D9E  B4D8               	btfsc	status,2,c
  2991   002DA0  EFD4  F016         	goto	u2071
  2992   002DA4  EFD6  F016         	goto	u2070
  2993   002DA8                     u2071:
  2994   002DA8  EFDE  F016         	goto	l3022
  2995   002DAC                     u2070:
  2996   002DAC  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2997   002DAE  EFDD  F016         	goto	u2080
  2998   002DB2  EFDB  F016         	goto	u2081
  2999   002DB6                     u2081:
  3000   002DB6  EFDE  F016         	goto	l3022
  3001   002DBA                     u2080:
  3002   002DBA  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3003   002DBC                     l3022:
  3004   002DBC  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3005   002DC0  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3006   002DC4  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3007   002DC8  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3008   002DCC                     l1368:
  3009   002DCC  0012               	return		;funcret
  3010   002DCE                     __end_of___xxtofl:
  3011                           	callstack 0
  3012                           
  3013 ;; *************** function ___fldiv *****************
  3014 ;; Defined at:
  3015 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3016 ;; Parameters:    Size  Location     Type
  3017 ;;  b               4   33[COMRAM] unsigned char 
  3018 ;;  a               4   37[COMRAM] unsigned char 
  3019 ;; Auto vars:     Size  Location     Type
  3020 ;;  grs             4   52[COMRAM] unsigned long 
  3021 ;;  rem             4   45[COMRAM] unsigned long 
  3022 ;;  new_exp         2   50[COMRAM] short 
  3023 ;;  aexp            1   57[COMRAM] unsigned char 
  3024 ;;  bexp            1   56[COMRAM] unsigned char 
  3025 ;;  sign            1   49[COMRAM] unsigned char 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  4   33[COMRAM] unsigned char 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3036 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;Total ram usage:       25 bytes
  3040 ;; Hardware stack levels used: 1
  3041 ;; Hardware stack levels required when called: 6
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_color_normalise
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text16
  3050   00231E                     __ptext16:
  3051                           	callstack 0
  3052   00231E                     ___fldiv:
  3053                           	callstack 22
  3054   00231E  5025               	movf	(___fldiv@b+3)^0,w,c
  3055   002320  0B80               	andlw	128
  3056   002322  6E32               	movwf	___fldiv@sign^0,c
  3057   002324  5025               	movf	(___fldiv@b+3)^0,w,c
  3058   002326  2425               	addwf	(___fldiv@b+3)^0,w,c
  3059   002328  6E39               	movwf	___fldiv@bexp^0,c
  3060   00232A  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3061   00232C  EF9A  F011         	goto	u1761
  3062   002330  EF9C  F011         	goto	u1760
  3063   002334                     u1761:
  3064   002334  EF9D  F011         	goto	l2848
  3065   002338                     u1760:
  3066   002338  8039               	bsf	___fldiv@bexp^0,0,c
  3067   00233A                     l2848:
  3068   00233A  5039               	movf	___fldiv@bexp^0,w,c
  3069   00233C  B4D8               	btfsc	status,2,c
  3070   00233E  EFA3  F011         	goto	u1771
  3071   002342  EFA5  F011         	goto	u1770
  3072   002346                     u1771:
  3073   002346  EFBA  F011         	goto	l2858
  3074   00234A                     u1770:
  3075   00234A  2839               	incf	___fldiv@bexp^0,w,c
  3076   00234C  A4D8               	btfss	status,2,c
  3077   00234E  EFAB  F011         	goto	u1781
  3078   002352  EFAD  F011         	goto	u1780
  3079   002356                     u1781:
  3080   002356  EFB5  F011         	goto	l2854
  3081   00235A                     u1780:
  3082   00235A  0E00               	movlw	0
  3083   00235C  6E22               	movwf	___fldiv@b^0,c
  3084   00235E  0E00               	movlw	0
  3085   002360  6E23               	movwf	(___fldiv@b+1)^0,c
  3086   002362  0E00               	movlw	0
  3087   002364  6E24               	movwf	(___fldiv@b+2)^0,c
  3088   002366  0E00               	movlw	0
  3089   002368  6E25               	movwf	(___fldiv@b+3)^0,c
  3090   00236A                     l2854:
  3091   00236A  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3092   00236C  0E00               	movlw	0
  3093   00236E  6E25               	movwf	(___fldiv@b+3)^0,c
  3094   002370  EFC2  F011         	goto	l2860
  3095   002374                     l2858:
  3096   002374  0E00               	movlw	0
  3097   002376  6E22               	movwf	___fldiv@b^0,c
  3098   002378  0E00               	movlw	0
  3099   00237A  6E23               	movwf	(___fldiv@b+1)^0,c
  3100   00237C  0E00               	movlw	0
  3101   00237E  6E24               	movwf	(___fldiv@b+2)^0,c
  3102   002380  0E00               	movlw	0
  3103   002382  6E25               	movwf	(___fldiv@b+3)^0,c
  3104   002384                     l2860:
  3105   002384  5029               	movf	(___fldiv@a+3)^0,w,c
  3106   002386  0B80               	andlw	128
  3107   002388  1A32               	xorwf	___fldiv@sign^0,f,c
  3108   00238A  5029               	movf	(___fldiv@a+3)^0,w,c
  3109   00238C  2429               	addwf	(___fldiv@a+3)^0,w,c
  3110   00238E  6E3A               	movwf	___fldiv@aexp^0,c
  3111   002390  AE28               	btfss	(___fldiv@a+2)^0,7,c
  3112   002392  EFCD  F011         	goto	u1791
  3113   002396  EFCF  F011         	goto	u1790
  3114   00239A                     u1791:
  3115   00239A  EFD0  F011         	goto	l2868
  3116   00239E                     u1790:
  3117   00239E  803A               	bsf	___fldiv@aexp^0,0,c
  3118   0023A0                     l2868:
  3119   0023A0  503A               	movf	___fldiv@aexp^0,w,c
  3120   0023A2  B4D8               	btfsc	status,2,c
  3121   0023A4  EFD6  F011         	goto	u1801
  3122   0023A8  EFD8  F011         	goto	u1800
  3123   0023AC                     u1801:
  3124   0023AC  EFED  F011         	goto	l2878
  3125   0023B0                     u1800:
  3126   0023B0  283A               	incf	___fldiv@aexp^0,w,c
  3127   0023B2  A4D8               	btfss	status,2,c
  3128   0023B4  EFDE  F011         	goto	u1811
  3129   0023B8  EFE0  F011         	goto	u1810
  3130   0023BC                     u1811:
  3131   0023BC  EFE8  F011         	goto	l2874
  3132   0023C0                     u1810:
  3133   0023C0  0E00               	movlw	0
  3134   0023C2  6E26               	movwf	___fldiv@a^0,c
  3135   0023C4  0E00               	movlw	0
  3136   0023C6  6E27               	movwf	(___fldiv@a+1)^0,c
  3137   0023C8  0E00               	movlw	0
  3138   0023CA  6E28               	movwf	(___fldiv@a+2)^0,c
  3139   0023CC  0E00               	movlw	0
  3140   0023CE  6E29               	movwf	(___fldiv@a+3)^0,c
  3141   0023D0                     l2874:
  3142   0023D0  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3143   0023D2  0E00               	movlw	0
  3144   0023D4  6E29               	movwf	(___fldiv@a+3)^0,c
  3145   0023D6  EFF5  F011         	goto	l2880
  3146   0023DA                     l2878:
  3147   0023DA  0E00               	movlw	0
  3148   0023DC  6E26               	movwf	___fldiv@a^0,c
  3149   0023DE  0E00               	movlw	0
  3150   0023E0  6E27               	movwf	(___fldiv@a+1)^0,c
  3151   0023E2  0E00               	movlw	0
  3152   0023E4  6E28               	movwf	(___fldiv@a+2)^0,c
  3153   0023E6  0E00               	movlw	0
  3154   0023E8  6E29               	movwf	(___fldiv@a+3)^0,c
  3155   0023EA                     l2880:
  3156   0023EA  5026               	movf	___fldiv@a^0,w,c
  3157   0023EC  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3158   0023EE  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3159   0023F0  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3160   0023F2  A4D8               	btfss	status,2,c
  3161   0023F4  EFFE  F011         	goto	u1821
  3162   0023F8  EF00  F012         	goto	u1820
  3163   0023FC                     u1821:
  3164   0023FC  EF18  F012         	goto	l2892
  3165   002400                     u1820:
  3166   002400  0E00               	movlw	0
  3167   002402  6E22               	movwf	___fldiv@b^0,c
  3168   002404  0E00               	movlw	0
  3169   002406  6E23               	movwf	(___fldiv@b+1)^0,c
  3170   002408  0E00               	movlw	0
  3171   00240A  6E24               	movwf	(___fldiv@b+2)^0,c
  3172   00240C  0E00               	movlw	0
  3173   00240E  6E25               	movwf	(___fldiv@b+3)^0,c
  3174   002410  0E80               	movlw	128
  3175   002412  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3176   002414  0E7F               	movlw	127
  3177   002416  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3178   002418                     l2886:
  3179   002418  5032               	movf	___fldiv@sign^0,w,c
  3180   00241A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3181   00241C  C022  F022         	movff	___fldiv@b,?___fldiv
  3182   002420  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3183   002424  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3184   002428  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3185   00242C  EF5B  F013         	goto	l1292
  3186   002430                     l2892:
  3187   002430  5039               	movf	___fldiv@bexp^0,w,c
  3188   002432  A4D8               	btfss	status,2,c
  3189   002434  EF1E  F012         	goto	u1831
  3190   002438  EF20  F012         	goto	u1830
  3191   00243C                     u1831:
  3192   00243C  EF2A  F012         	goto	l2900
  3193   002440                     u1830:
  3194   002440  0E00               	movlw	0
  3195   002442  6E22               	movwf	?___fldiv^0,c
  3196   002444  0E00               	movlw	0
  3197   002446  6E23               	movwf	(?___fldiv+1)^0,c
  3198   002448  0E00               	movlw	0
  3199   00244A  6E24               	movwf	(?___fldiv+2)^0,c
  3200   00244C  0E00               	movlw	0
  3201   00244E  6E25               	movwf	(?___fldiv+3)^0,c
  3202   002450  EF5B  F013         	goto	l1292
  3203   002454                     l2900:
  3204   002454  503A               	movf	___fldiv@aexp^0,w,c
  3205   002456  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3206   00245A  6A2B               	clrf	(??___fldiv+1)^0,c
  3207   00245C  5E2A               	subwf	??___fldiv^0,f,c
  3208   00245E  0E00               	movlw	0
  3209   002460  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3210   002462  0E7F               	movlw	127
  3211   002464  242A               	addwf	??___fldiv^0,w,c
  3212   002466  6E33               	movwf	___fldiv@new_exp^0,c
  3213   002468  0E00               	movlw	0
  3214   00246A  202B               	addwfc	(??___fldiv+1)^0,w,c
  3215   00246C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3216   00246E  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3217   002472  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3218   002476  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3219   00247A  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3220   00247E  0E00               	movlw	0
  3221   002480  6E22               	movwf	___fldiv@b^0,c
  3222   002482  0E00               	movlw	0
  3223   002484  6E23               	movwf	(___fldiv@b+1)^0,c
  3224   002486  0E00               	movlw	0
  3225   002488  6E24               	movwf	(___fldiv@b+2)^0,c
  3226   00248A  0E00               	movlw	0
  3227   00248C  6E25               	movwf	(___fldiv@b+3)^0,c
  3228   00248E  0E00               	movlw	0
  3229   002490  6E35               	movwf	___fldiv@grs^0,c
  3230   002492  0E00               	movlw	0
  3231   002494  6E36               	movwf	(___fldiv@grs+1)^0,c
  3232   002496  0E00               	movlw	0
  3233   002498  6E37               	movwf	(___fldiv@grs+2)^0,c
  3234   00249A  0E00               	movlw	0
  3235   00249C  6E38               	movwf	(___fldiv@grs+3)^0,c
  3236   00249E  0E00               	movlw	0
  3237   0024A0  6E3A               	movwf	___fldiv@aexp^0,c
  3238   0024A2  EF8B  F012         	goto	l1294
  3239   0024A6                     l2910:
  3240   0024A6  503A               	movf	___fldiv@aexp^0,w,c
  3241   0024A8  B4D8               	btfsc	status,2,c
  3242   0024AA  EF59  F012         	goto	u1841
  3243   0024AE  EF5B  F012         	goto	u1840
  3244   0024B2                     u1841:
  3245   0024B2  EF72  F012         	goto	l2918
  3246   0024B6                     u1840:
  3247   0024B6  90D8               	bcf	status,0,c
  3248   0024B8  362E               	rlcf	___fldiv@rem^0,f,c
  3249   0024BA  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3250   0024BC  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3251   0024BE  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3252   0024C0  90D8               	bcf	status,0,c
  3253   0024C2  3622               	rlcf	___fldiv@b^0,f,c
  3254   0024C4  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3255   0024C6  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3256   0024C8  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3257   0024CA  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3258   0024CC  EF6A  F012         	goto	u1851
  3259   0024D0  EF6C  F012         	goto	u1850
  3260   0024D4                     u1851:
  3261   0024D4  EF6D  F012         	goto	l1297
  3262   0024D8                     u1850:
  3263   0024D8  8022               	bsf	___fldiv@b^0,0,c
  3264   0024DA                     l1297:
  3265   0024DA  90D8               	bcf	status,0,c
  3266   0024DC  3635               	rlcf	___fldiv@grs^0,f,c
  3267   0024DE  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3268   0024E0  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3269   0024E2  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3270   0024E4                     l2918:
  3271   0024E4  5026               	movf	___fldiv@a^0,w,c
  3272   0024E6  5C2E               	subwf	___fldiv@rem^0,w,c
  3273   0024E8  5027               	movf	(___fldiv@a+1)^0,w,c
  3274   0024EA  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3275   0024EC  5028               	movf	(___fldiv@a+2)^0,w,c
  3276   0024EE  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3277   0024F0  5029               	movf	(___fldiv@a+3)^0,w,c
  3278   0024F2  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3279   0024F4  A0D8               	btfss	status,0,c
  3280   0024F6  EF7F  F012         	goto	u1861
  3281   0024FA  EF81  F012         	goto	u1860
  3282   0024FE                     u1861:
  3283   0024FE  EF8A  F012         	goto	l2924
  3284   002502                     u1860:
  3285   002502  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3286   002504  5026               	movf	___fldiv@a^0,w,c
  3287   002506  5E2E               	subwf	___fldiv@rem^0,f,c
  3288   002508  5027               	movf	(___fldiv@a+1)^0,w,c
  3289   00250A  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3290   00250C  5028               	movf	(___fldiv@a+2)^0,w,c
  3291   00250E  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3292   002510  5029               	movf	(___fldiv@a+3)^0,w,c
  3293   002512  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3294   002514                     l2924:
  3295   002514  2A3A               	incf	___fldiv@aexp^0,f,c
  3296   002516                     l1294:
  3297   002516  0E19               	movlw	25
  3298   002518  643A               	cpfsgt	___fldiv@aexp^0,c
  3299   00251A  EF91  F012         	goto	u1871
  3300   00251E  EF93  F012         	goto	u1870
  3301   002522                     u1871:
  3302   002522  EF53  F012         	goto	l2910
  3303   002526                     u1870:
  3304   002526  502E               	movf	___fldiv@rem^0,w,c
  3305   002528  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3306   00252A  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3307   00252C  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3308   00252E  B4D8               	btfsc	status,2,c
  3309   002530  EF9C  F012         	goto	u1881
  3310   002534  EF9E  F012         	goto	u1880
  3311   002538                     u1881:
  3312   002538  EFB6  F012         	goto	l2936
  3313   00253C                     u1880:
  3314   00253C  8035               	bsf	___fldiv@grs^0,0,c
  3315   00253E  EFB6  F012         	goto	l2936
  3316   002542                     l2930:
  3317   002542  90D8               	bcf	status,0,c
  3318   002544  3622               	rlcf	___fldiv@b^0,f,c
  3319   002546  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3320   002548  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3321   00254A  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3322   00254C  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3323   00254E  EFAB  F012         	goto	u1891
  3324   002552  EFAD  F012         	goto	u1890
  3325   002556                     u1891:
  3326   002556  EFAE  F012         	goto	l1303
  3327   00255A                     u1890:
  3328   00255A  8022               	bsf	___fldiv@b^0,0,c
  3329   00255C                     l1303:
  3330   00255C  90D8               	bcf	status,0,c
  3331   00255E  3635               	rlcf	___fldiv@grs^0,f,c
  3332   002560  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3333   002562  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3334   002564  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3335   002566  0633               	decf	___fldiv@new_exp^0,f,c
  3336   002568  A0D8               	btfss	status,0,c
  3337   00256A  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3338   00256C                     l2936:
  3339   00256C  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3340   00256E  EFBB  F012         	goto	u1901
  3341   002572  EFBD  F012         	goto	u1900
  3342   002576                     u1901:
  3343   002576  EFA1  F012         	goto	l2930
  3344   00257A                     u1900:
  3345   00257A  0E00               	movlw	0
  3346   00257C  6E3A               	movwf	___fldiv@aexp^0,c
  3347   00257E  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3348   002580  EFC4  F012         	goto	u1911
  3349   002584  EFC6  F012         	goto	u1910
  3350   002588                     u1911:
  3351   002588  EFEA  F012         	goto	l1305
  3352   00258C                     u1910:
  3353   00258C  0EFF               	movlw	255
  3354   00258E  1435               	andwf	___fldiv@grs^0,w,c
  3355   002590  6E2A               	movwf	??___fldiv^0,c
  3356   002592  0EFF               	movlw	255
  3357   002594  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3358   002596  6E2B               	movwf	(??___fldiv+1)^0,c
  3359   002598  0EFF               	movlw	255
  3360   00259A  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3361   00259C  6E2C               	movwf	(??___fldiv+2)^0,c
  3362   00259E  0E7F               	movlw	127
  3363   0025A0  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3364   0025A2  6E2D               	movwf	(??___fldiv+3)^0,c
  3365   0025A4  502A               	movf	??___fldiv^0,w,c
  3366   0025A6  102B               	iorwf	(??___fldiv+1)^0,w,c
  3367   0025A8  102C               	iorwf	(??___fldiv+2)^0,w,c
  3368   0025AA  102D               	iorwf	(??___fldiv+3)^0,w,c
  3369   0025AC  B4D8               	btfsc	status,2,c
  3370   0025AE  EFDB  F012         	goto	u1921
  3371   0025B2  EFDD  F012         	goto	u1920
  3372   0025B6                     u1921:
  3373   0025B6  EFE1  F012         	goto	l1306
  3374   0025BA                     u1920:
  3375   0025BA                     l2944:
  3376   0025BA  0E01               	movlw	1
  3377   0025BC  6E3A               	movwf	___fldiv@aexp^0,c
  3378   0025BE  EFEA  F012         	goto	l1305
  3379   0025C2                     l1306:
  3380   0025C2  A022               	btfss	___fldiv@b^0,0,c
  3381   0025C4  EFE6  F012         	goto	u1931
  3382   0025C8  EFE8  F012         	goto	u1930
  3383   0025CC                     u1931:
  3384   0025CC  EFEA  F012         	goto	l1305
  3385   0025D0                     u1930:
  3386   0025D0  EFDD  F012         	goto	l2944
  3387   0025D4                     l1305:
  3388   0025D4  503A               	movf	___fldiv@aexp^0,w,c
  3389   0025D6  B4D8               	btfsc	status,2,c
  3390   0025D8  EFF0  F012         	goto	u1941
  3391   0025DC  EFF2  F012         	goto	u1940
  3392   0025E0                     u1941:
  3393   0025E0  EF16  F013         	goto	l2956
  3394   0025E4                     u1940:
  3395   0025E4  0E01               	movlw	1
  3396   0025E6  2622               	addwf	___fldiv@b^0,f,c
  3397   0025E8  0E00               	movlw	0
  3398   0025EA  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3399   0025EC  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3400   0025EE  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3401   0025F0  A025               	btfss	(___fldiv@b+3)^0,0,c
  3402   0025F2  EFFD  F012         	goto	u1951
  3403   0025F6  EFFF  F012         	goto	u1950
  3404   0025FA                     u1951:
  3405   0025FA  EF16  F013         	goto	l2956
  3406   0025FE                     u1950:
  3407   0025FE  C022  F02A         	movff	___fldiv@b,??___fldiv
  3408   002602  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3409   002606  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3410   00260A  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3411   00260E  342D               	rlcf	(??___fldiv+3)^0,w,c
  3412   002610  322D               	rrcf	(??___fldiv+3)^0,f,c
  3413   002612  322C               	rrcf	(??___fldiv+2)^0,f,c
  3414   002614  322B               	rrcf	(??___fldiv+1)^0,f,c
  3415   002616  322A               	rrcf	??___fldiv^0,f,c
  3416   002618  C02A  F022         	movff	??___fldiv,___fldiv@b
  3417   00261C  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3418   002620  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3419   002624  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3420   002628  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3421   00262A  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3422   00262C                     l2956:
  3423   00262C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3424   00262E  EF21  F013         	goto	u1961
  3425   002632  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3426   002634  E108               	bnz	u1960
  3427   002636  2833               	incf	___fldiv@new_exp^0,w,c
  3428   002638  A0D8               	btfss	status,0,c
  3429   00263A  EF21  F013         	goto	u1961
  3430   00263E  EF23  F013         	goto	u1960
  3431   002642                     u1961:
  3432   002642  EF2E  F013         	goto	l2960
  3433   002646                     u1960:
  3434   002646  0E00               	movlw	0
  3435   002648  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3436   00264A  6833               	setf	___fldiv@new_exp^0,c
  3437   00264C  0E00               	movlw	0
  3438   00264E  6E22               	movwf	___fldiv@b^0,c
  3439   002650  0E00               	movlw	0
  3440   002652  6E23               	movwf	(___fldiv@b+1)^0,c
  3441   002654  0E00               	movlw	0
  3442   002656  6E24               	movwf	(___fldiv@b+2)^0,c
  3443   002658  0E00               	movlw	0
  3444   00265A  6E25               	movwf	(___fldiv@b+3)^0,c
  3445   00265C                     l2960:
  3446   00265C  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3447   00265E  EF3B  F013         	goto	u1970
  3448   002662  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3449   002664  E106               	bnz	u1971
  3450   002666  0433               	decf	___fldiv@new_exp^0,w,c
  3451   002668  B0D8               	btfsc	status,0,c
  3452   00266A  EF39  F013         	goto	u1971
  3453   00266E  EF3B  F013         	goto	u1970
  3454   002672                     u1971:
  3455   002672  EF49  F013         	goto	l2964
  3456   002676                     u1970:
  3457   002676  0E00               	movlw	0
  3458   002678  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3459   00267A  0E00               	movlw	0
  3460   00267C  6E33               	movwf	___fldiv@new_exp^0,c
  3461   00267E  0E00               	movlw	0
  3462   002680  6E22               	movwf	___fldiv@b^0,c
  3463   002682  0E00               	movlw	0
  3464   002684  6E23               	movwf	(___fldiv@b+1)^0,c
  3465   002686  0E00               	movlw	0
  3466   002688  6E24               	movwf	(___fldiv@b+2)^0,c
  3467   00268A  0E00               	movlw	0
  3468   00268C  6E25               	movwf	(___fldiv@b+3)^0,c
  3469   00268E  0E00               	movlw	0
  3470   002690  6E32               	movwf	___fldiv@sign^0,c
  3471   002692                     l2964:
  3472   002692  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3473   002696  A039               	btfss	___fldiv@bexp^0,0,c
  3474   002698  EF50  F013         	goto	u1981
  3475   00269C  EF52  F013         	goto	u1980
  3476   0026A0                     u1981:
  3477   0026A0  EF55  F013         	goto	l2970
  3478   0026A4                     u1980:
  3479   0026A4  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3480   0026A6  EF56  F013         	goto	l2972
  3481   0026AA                     l2970:
  3482   0026AA  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3483   0026AC                     l2972:
  3484   0026AC  90D8               	bcf	status,0,c
  3485   0026AE  3039               	rrcf	___fldiv@bexp^0,w,c
  3486   0026B0  6E25               	movwf	(___fldiv@b+3)^0,c
  3487   0026B2  EF0C  F012         	goto	l2886
  3488   0026B6                     l1292:
  3489   0026B6  0012               	return		;funcret
  3490   0026B8                     __end_of___fldiv:
  3491                           	callstack 0
  3492                           
  3493 ;; *************** function ___fladd *****************
  3494 ;; Defined at:
  3495 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  b               4    8[COMRAM] unsigned char 
  3498 ;;  a               4   12[COMRAM] unsigned char 
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;  grs             1   23[COMRAM] unsigned char 
  3501 ;;  bexp            1   22[COMRAM] unsigned char 
  3502 ;;  aexp            1   21[COMRAM] unsigned char 
  3503 ;;  signs           1   20[COMRAM] unsigned char 
  3504 ;; Return value:  Size  Location     Type
  3505 ;;                  4    8[COMRAM] unsigned char 
  3506 ;; Registers used:
  3507 ;;		wreg, status,2, status,0
  3508 ;; Tracked objects:
  3509 ;;		On entry : 0/0
  3510 ;;		On exit  : 0/0
  3511 ;;		Unchanged: 0/0
  3512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3513 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3514 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;Total ram usage:       16 bytes
  3518 ;; Hardware stack levels used: 1
  3519 ;; Hardware stack levels required when called: 6
  3520 ;; This function calls:
  3521 ;;		Nothing
  3522 ;; This function is called by:
  3523 ;;		_rangeCalibrate
  3524 ;; This function uses a non-reentrant model
  3525 ;;
  3526                           
  3527                           	psect	text17
  3528   001A96                     __ptext17:
  3529                           	callstack 0
  3530   001A96                     ___fladd:
  3531                           	callstack 23
  3532   001A96  500C               	movf	(___fladd@b+3)^0,w,c
  3533   001A98  0B80               	andlw	128
  3534   001A9A  6E15               	movwf	___fladd@signs^0,c
  3535   001A9C  500C               	movf	(___fladd@b+3)^0,w,c
  3536   001A9E  240C               	addwf	(___fladd@b+3)^0,w,c
  3537   001AA0  6E17               	movwf	___fladd@bexp^0,c
  3538   001AA2  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3539   001AA4  EF56  F00D         	goto	u2131
  3540   001AA8  EF58  F00D         	goto	u2130
  3541   001AAC                     u2131:
  3542   001AAC  EF59  F00D         	goto	l3152
  3543   001AB0                     u2130:
  3544   001AB0  8017               	bsf	___fladd@bexp^0,0,c
  3545   001AB2                     l3152:
  3546   001AB2  5017               	movf	___fladd@bexp^0,w,c
  3547   001AB4  B4D8               	btfsc	status,2,c
  3548   001AB6  EF5F  F00D         	goto	u2141
  3549   001ABA  EF61  F00D         	goto	u2140
  3550   001ABE                     u2141:
  3551   001ABE  EF76  F00D         	goto	l3162
  3552   001AC2                     u2140:
  3553   001AC2  2817               	incf	___fladd@bexp^0,w,c
  3554   001AC4  A4D8               	btfss	status,2,c
  3555   001AC6  EF67  F00D         	goto	u2151
  3556   001ACA  EF69  F00D         	goto	u2150
  3557   001ACE                     u2151:
  3558   001ACE  EF71  F00D         	goto	l3158
  3559   001AD2                     u2150:
  3560   001AD2  0E00               	movlw	0
  3561   001AD4  6E09               	movwf	___fladd@b^0,c
  3562   001AD6  0E00               	movlw	0
  3563   001AD8  6E0A               	movwf	(___fladd@b+1)^0,c
  3564   001ADA  0E00               	movlw	0
  3565   001ADC  6E0B               	movwf	(___fladd@b+2)^0,c
  3566   001ADE  0E00               	movlw	0
  3567   001AE0  6E0C               	movwf	(___fladd@b+3)^0,c
  3568   001AE2                     l3158:
  3569   001AE2  8E0B               	bsf	(___fladd@b+2)^0,7,c
  3570   001AE4  0E00               	movlw	0
  3571   001AE6  6E0C               	movwf	(___fladd@b+3)^0,c
  3572   001AE8  EF7E  F00D         	goto	l3164
  3573   001AEC                     l3162:
  3574   001AEC  0E00               	movlw	0
  3575   001AEE  6E09               	movwf	___fladd@b^0,c
  3576   001AF0  0E00               	movlw	0
  3577   001AF2  6E0A               	movwf	(___fladd@b+1)^0,c
  3578   001AF4  0E00               	movlw	0
  3579   001AF6  6E0B               	movwf	(___fladd@b+2)^0,c
  3580   001AF8  0E00               	movlw	0
  3581   001AFA  6E0C               	movwf	(___fladd@b+3)^0,c
  3582   001AFC                     l3164:
  3583   001AFC  5010               	movf	(___fladd@a+3)^0,w,c
  3584   001AFE  0B80               	andlw	128
  3585   001B00  6E16               	movwf	___fladd@aexp^0,c
  3586   001B02  5015               	movf	___fladd@signs^0,w,c
  3587   001B04  1816               	xorwf	___fladd@aexp^0,w,c
  3588   001B06  B4D8               	btfsc	status,2,c
  3589   001B08  EF88  F00D         	goto	u2161
  3590   001B0C  EF8A  F00D         	goto	u2160
  3591   001B10                     u2161:
  3592   001B10  EF8B  F00D         	goto	l3170
  3593   001B14                     u2160:
  3594   001B14  8C15               	bsf	___fladd@signs^0,6,c
  3595   001B16                     l3170:
  3596   001B16  5010               	movf	(___fladd@a+3)^0,w,c
  3597   001B18  2410               	addwf	(___fladd@a+3)^0,w,c
  3598   001B1A  6E16               	movwf	___fladd@aexp^0,c
  3599   001B1C  AE0F               	btfss	(___fladd@a+2)^0,7,c
  3600   001B1E  EF93  F00D         	goto	u2171
  3601   001B22  EF95  F00D         	goto	u2170
  3602   001B26                     u2171:
  3603   001B26  EF96  F00D         	goto	l3176
  3604   001B2A                     u2170:
  3605   001B2A  8016               	bsf	___fladd@aexp^0,0,c
  3606   001B2C                     l3176:
  3607   001B2C  5016               	movf	___fladd@aexp^0,w,c
  3608   001B2E  B4D8               	btfsc	status,2,c
  3609   001B30  EF9C  F00D         	goto	u2181
  3610   001B34  EF9E  F00D         	goto	u2180
  3611   001B38                     u2181:
  3612   001B38  EFB3  F00D         	goto	l3186
  3613   001B3C                     u2180:
  3614   001B3C  2816               	incf	___fladd@aexp^0,w,c
  3615   001B3E  A4D8               	btfss	status,2,c
  3616   001B40  EFA4  F00D         	goto	u2191
  3617   001B44  EFA6  F00D         	goto	u2190
  3618   001B48                     u2191:
  3619   001B48  EFAE  F00D         	goto	l3182
  3620   001B4C                     u2190:
  3621   001B4C  0E00               	movlw	0
  3622   001B4E  6E0D               	movwf	___fladd@a^0,c
  3623   001B50  0E00               	movlw	0
  3624   001B52  6E0E               	movwf	(___fladd@a+1)^0,c
  3625   001B54  0E00               	movlw	0
  3626   001B56  6E0F               	movwf	(___fladd@a+2)^0,c
  3627   001B58  0E00               	movlw	0
  3628   001B5A  6E10               	movwf	(___fladd@a+3)^0,c
  3629   001B5C                     l3182:
  3630   001B5C  8E0F               	bsf	(___fladd@a+2)^0,7,c
  3631   001B5E  0E00               	movlw	0
  3632   001B60  6E10               	movwf	(___fladd@a+3)^0,c
  3633   001B62  EFBB  F00D         	goto	l3188
  3634   001B66                     l3186:
  3635   001B66  0E00               	movlw	0
  3636   001B68  6E0D               	movwf	___fladd@a^0,c
  3637   001B6A  0E00               	movlw	0
  3638   001B6C  6E0E               	movwf	(___fladd@a+1)^0,c
  3639   001B6E  0E00               	movlw	0
  3640   001B70  6E0F               	movwf	(___fladd@a+2)^0,c
  3641   001B72  0E00               	movlw	0
  3642   001B74  6E10               	movwf	(___fladd@a+3)^0,c
  3643   001B76                     l3188:
  3644   001B76  5017               	movf	___fladd@bexp^0,w,c
  3645   001B78  5C16               	subwf	___fladd@aexp^0,w,c
  3646   001B7A  B0D8               	btfsc	status,0,c
  3647   001B7C  EFC2  F00D         	goto	u2201
  3648   001B80  EFC4  F00D         	goto	u2200
  3649   001B84                     u2201:
  3650   001B84  EFEB  F00D         	goto	l3224
  3651   001B88                     u2200:
  3652   001B88  AC15               	btfss	___fladd@signs^0,6,c
  3653   001B8A  EFC9  F00D         	goto	u2211
  3654   001B8E  EFCB  F00D         	goto	u2210
  3655   001B92                     u2211:
  3656   001B92  EFCD  F00D         	goto	l3194
  3657   001B96                     u2210:
  3658   001B96  0E80               	movlw	128
  3659   001B98  1A15               	xorwf	___fladd@signs^0,f,c
  3660   001B9A                     l3194:
  3661   001B9A  C017  F018         	movff	___fladd@bexp,___fladd@grs
  3662   001B9E  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3663   001BA2  C018  F016         	movff	___fladd@grs,___fladd@aexp
  3664   001BA6  C009  F018         	movff	___fladd@b,___fladd@grs
  3665   001BAA  C00D  F009         	movff	___fladd@a,___fladd@b
  3666   001BAE  C018  F00D         	movff	___fladd@grs,___fladd@a
  3667   001BB2  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  3668   001BB6  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  3669   001BBA  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  3670   001BBE  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  3671   001BC2  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  3672   001BC6  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  3673   001BCA  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  3674   001BCE  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  3675   001BD2  C018  F010         	movff	___fladd@grs,___fladd@a+3
  3676   001BD6                     l3224:
  3677   001BD6  0E00               	movlw	0
  3678   001BD8  6E18               	movwf	___fladd@grs^0,c
  3679   001BDA  5017               	movf	___fladd@bexp^0,w,c
  3680   001BDC  C016  F011         	movff	___fladd@aexp,??___fladd
  3681   001BE0  6A12               	clrf	(??___fladd+1)^0,c
  3682   001BE2  5E11               	subwf	??___fladd^0,f,c
  3683   001BE4  0E00               	movlw	0
  3684   001BE6  5A12               	subwfb	(??___fladd+1)^0,f,c
  3685   001BE8  BE12               	btfsc	(??___fladd+1)^0,7,c
  3686   001BEA  EF00  F00E         	goto	u2221
  3687   001BEE  5012               	movf	(??___fladd+1)^0,w,c
  3688   001BF0  E109               	bnz	u2220
  3689   001BF2  0E1A               	movlw	26
  3690   001BF4  5C11               	subwf	??___fladd^0,w,c
  3691   001BF6  A0D8               	btfss	status,0,c
  3692   001BF8  EF00  F00E         	goto	u2221
  3693   001BFC  EF02  F00E         	goto	u2220
  3694   001C00                     u2221:
  3695   001C00  EF39  F00E         	goto	l1239
  3696   001C04                     u2220:
  3697   001C04  5009               	movf	___fladd@b^0,w,c
  3698   001C06  100A               	iorwf	(___fladd@b+1)^0,w,c
  3699   001C08  100B               	iorwf	(___fladd@b+2)^0,w,c
  3700   001C0A  100C               	iorwf	(___fladd@b+3)^0,w,c
  3701   001C0C  A4D8               	btfss	status,2,c
  3702   001C0E  EF0B  F00E         	goto	u2231
  3703   001C12  EF0E  F00E         	goto	u2230
  3704   001C16                     u2231:
  3705   001C16  0E01               	movlw	1
  3706   001C18  EF0F  F00E         	goto	u2240
  3707   001C1C                     u2230:
  3708   001C1C  0E00               	movlw	0
  3709   001C1E                     u2240:
  3710   001C1E  6E18               	movwf	___fladd@grs^0,c
  3711   001C20  0E00               	movlw	0
  3712   001C22  6E09               	movwf	___fladd@b^0,c
  3713   001C24  0E00               	movlw	0
  3714   001C26  6E0A               	movwf	(___fladd@b+1)^0,c
  3715   001C28  0E00               	movlw	0
  3716   001C2A  6E0B               	movwf	(___fladd@b+2)^0,c
  3717   001C2C  0E00               	movlw	0
  3718   001C2E  6E0C               	movwf	(___fladd@b+3)^0,c
  3719   001C30  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3720   001C34  EF42  F00E         	goto	l1238
  3721   001C38                     l1240:
  3722   001C38  A018               	btfss	___fladd@grs^0,0,c
  3723   001C3A  EF21  F00E         	goto	u2251
  3724   001C3E  EF23  F00E         	goto	u2250
  3725   001C42                     u2251:
  3726   001C42  EF29  F00E         	goto	l3236
  3727   001C46                     u2250:
  3728   001C46  90D8               	bcf	status,0,c
  3729   001C48  3018               	rrcf	___fladd@grs^0,w,c
  3730   001C4A  0901               	iorlw	1
  3731   001C4C  6E18               	movwf	___fladd@grs^0,c
  3732   001C4E  EF2B  F00E         	goto	l3238
  3733   001C52                     l3236:
  3734   001C52  90D8               	bcf	status,0,c
  3735   001C54  3218               	rrcf	___fladd@grs^0,f,c
  3736   001C56                     l3238:
  3737   001C56  A009               	btfss	___fladd@b^0,0,c
  3738   001C58  EF30  F00E         	goto	u2261
  3739   001C5C  EF32  F00E         	goto	u2260
  3740   001C60                     u2261:
  3741   001C60  EF33  F00E         	goto	l3242
  3742   001C64                     u2260:
  3743   001C64  8E18               	bsf	___fladd@grs^0,7,c
  3744   001C66                     l3242:
  3745   001C66  340C               	rlcf	(___fladd@b+3)^0,w,c
  3746   001C68  320C               	rrcf	(___fladd@b+3)^0,f,c
  3747   001C6A  320B               	rrcf	(___fladd@b+2)^0,f,c
  3748   001C6C  320A               	rrcf	(___fladd@b+1)^0,f,c
  3749   001C6E  3209               	rrcf	___fladd@b^0,f,c
  3750   001C70  2A17               	incf	___fladd@bexp^0,f,c
  3751   001C72                     l1239:
  3752   001C72  5016               	movf	___fladd@aexp^0,w,c
  3753   001C74  5C17               	subwf	___fladd@bexp^0,w,c
  3754   001C76  A0D8               	btfss	status,0,c
  3755   001C78  EF40  F00E         	goto	u2271
  3756   001C7C  EF42  F00E         	goto	u2270
  3757   001C80                     u2271:
  3758   001C80  EF1C  F00E         	goto	l1240
  3759   001C84                     u2270:
  3760   001C84                     l1238:
  3761   001C84  BC15               	btfsc	___fladd@signs^0,6,c
  3762   001C86  EF47  F00E         	goto	u2281
  3763   001C8A  EF49  F00E         	goto	u2280
  3764   001C8E                     u2281:
  3765   001C8E  EF89  F00E         	goto	l3270
  3766   001C92                     u2280:
  3767   001C92  5017               	movf	___fladd@bexp^0,w,c
  3768   001C94  A4D8               	btfss	status,2,c
  3769   001C96  EF4F  F00E         	goto	u2291
  3770   001C9A  EF51  F00E         	goto	u2290
  3771   001C9E                     u2291:
  3772   001C9E  EF5B  F00E         	goto	l3252
  3773   001CA2                     u2290:
  3774   001CA2  0E00               	movlw	0
  3775   001CA4  6E09               	movwf	?___fladd^0,c
  3776   001CA6  0E00               	movlw	0
  3777   001CA8  6E0A               	movwf	(?___fladd+1)^0,c
  3778   001CAA  0E00               	movlw	0
  3779   001CAC  6E0B               	movwf	(?___fladd+2)^0,c
  3780   001CAE  0E00               	movlw	0
  3781   001CB0  6E0C               	movwf	(?___fladd+3)^0,c
  3782   001CB2  EFAA  F00F         	goto	l1247
  3783   001CB6                     l3252:
  3784   001CB6  500D               	movf	___fladd@a^0,w,c
  3785   001CB8  2609               	addwf	___fladd@b^0,f,c
  3786   001CBA  500E               	movf	(___fladd@a+1)^0,w,c
  3787   001CBC  220A               	addwfc	(___fladd@b+1)^0,f,c
  3788   001CBE  500F               	movf	(___fladd@a+2)^0,w,c
  3789   001CC0  220B               	addwfc	(___fladd@b+2)^0,f,c
  3790   001CC2  5010               	movf	(___fladd@a+3)^0,w,c
  3791   001CC4  220C               	addwfc	(___fladd@b+3)^0,f,c
  3792   001CC6  A00C               	btfss	(___fladd@b+3)^0,0,c
  3793   001CC8  EF68  F00E         	goto	u2301
  3794   001CCC  EF6A  F00E         	goto	u2300
  3795   001CD0                     u2301:
  3796   001CD0  EF16  F00F         	goto	l3306
  3797   001CD4                     u2300:
  3798   001CD4  A018               	btfss	___fladd@grs^0,0,c
  3799   001CD6  EF6F  F00E         	goto	u2311
  3800   001CDA  EF71  F00E         	goto	u2310
  3801   001CDE                     u2311:
  3802   001CDE  EF77  F00E         	goto	l3260
  3803   001CE2                     u2310:
  3804   001CE2  90D8               	bcf	status,0,c
  3805   001CE4  3018               	rrcf	___fladd@grs^0,w,c
  3806   001CE6  0901               	iorlw	1
  3807   001CE8  6E18               	movwf	___fladd@grs^0,c
  3808   001CEA  EF79  F00E         	goto	l3262
  3809   001CEE                     l3260:
  3810   001CEE  90D8               	bcf	status,0,c
  3811   001CF0  3218               	rrcf	___fladd@grs^0,f,c
  3812   001CF2                     l3262:
  3813   001CF2  A009               	btfss	___fladd@b^0,0,c
  3814   001CF4  EF7E  F00E         	goto	u2321
  3815   001CF8  EF80  F00E         	goto	u2320
  3816   001CFC                     u2321:
  3817   001CFC  EF81  F00E         	goto	l3266
  3818   001D00                     u2320:
  3819   001D00  8E18               	bsf	___fladd@grs^0,7,c
  3820   001D02                     l3266:
  3821   001D02  340C               	rlcf	(___fladd@b+3)^0,w,c
  3822   001D04  320C               	rrcf	(___fladd@b+3)^0,f,c
  3823   001D06  320B               	rrcf	(___fladd@b+2)^0,f,c
  3824   001D08  320A               	rrcf	(___fladd@b+1)^0,f,c
  3825   001D0A  3209               	rrcf	___fladd@b^0,f,c
  3826   001D0C  2A17               	incf	___fladd@bexp^0,f,c
  3827   001D0E  EF16  F00F         	goto	l3306
  3828   001D12                     l3270:
  3829   001D12  500D               	movf	___fladd@a^0,w,c
  3830   001D14  5C09               	subwf	___fladd@b^0,w,c
  3831   001D16  500E               	movf	(___fladd@a+1)^0,w,c
  3832   001D18  580A               	subwfb	(___fladd@b+1)^0,w,c
  3833   001D1A  500F               	movf	(___fladd@a+2)^0,w,c
  3834   001D1C  580B               	subwfb	(___fladd@b+2)^0,w,c
  3835   001D1E  500C               	movf	(___fladd@b+3)^0,w,c
  3836   001D20  0A80               	xorlw	128
  3837   001D22  6E11               	movwf	??___fladd^0,c
  3838   001D24  5010               	movf	(___fladd@a+3)^0,w,c
  3839   001D26  0A80               	xorlw	128
  3840   001D28  5811               	subwfb	??___fladd^0,w,c
  3841   001D2A  B0D8               	btfsc	status,0,c
  3842   001D2C  EF9A  F00E         	goto	u2331
  3843   001D30  EF9C  F00E         	goto	u2330
  3844   001D34                     u2331:
  3845   001D34  EFC7  F00E         	goto	l3280
  3846   001D38                     u2330:
  3847   001D38  5009               	movf	___fladd@b^0,w,c
  3848   001D3A  5C0D               	subwf	___fladd@a^0,w,c
  3849   001D3C  6E11               	movwf	??___fladd^0,c
  3850   001D3E  500A               	movf	(___fladd@b+1)^0,w,c
  3851   001D40  580E               	subwfb	(___fladd@a+1)^0,w,c
  3852   001D42  6E12               	movwf	(??___fladd+1)^0,c
  3853   001D44  500B               	movf	(___fladd@b+2)^0,w,c
  3854   001D46  580F               	subwfb	(___fladd@a+2)^0,w,c
  3855   001D48  6E13               	movwf	(??___fladd+2)^0,c
  3856   001D4A  500C               	movf	(___fladd@b+3)^0,w,c
  3857   001D4C  5810               	subwfb	(___fladd@a+3)^0,w,c
  3858   001D4E  6E14               	movwf	(??___fladd+3)^0,c
  3859   001D50  0EFF               	movlw	255
  3860   001D52  2411               	addwf	??___fladd^0,w,c
  3861   001D54  6E09               	movwf	___fladd@b^0,c
  3862   001D56  0EFF               	movlw	255
  3863   001D58  2012               	addwfc	(??___fladd+1)^0,w,c
  3864   001D5A  6E0A               	movwf	(___fladd@b+1)^0,c
  3865   001D5C  0EFF               	movlw	255
  3866   001D5E  2013               	addwfc	(??___fladd+2)^0,w,c
  3867   001D60  6E0B               	movwf	(___fladd@b+2)^0,c
  3868   001D62  0EFF               	movlw	255
  3869   001D64  2014               	addwfc	(??___fladd+3)^0,w,c
  3870   001D66  6E0C               	movwf	(___fladd@b+3)^0,c
  3871   001D68  0E80               	movlw	128
  3872   001D6A  1A15               	xorwf	___fladd@signs^0,f,c
  3873   001D6C  6C18               	negf	___fladd@grs^0,c
  3874   001D6E  5018               	movf	___fladd@grs^0,w,c
  3875   001D70  A4D8               	btfss	status,2,c
  3876   001D72  EFBD  F00E         	goto	u2341
  3877   001D76  EFBF  F00E         	goto	u2340
  3878   001D7A                     u2341:
  3879   001D7A  EFCF  F00E         	goto	l1255
  3880   001D7E                     u2340:
  3881   001D7E  0E01               	movlw	1
  3882   001D80  2609               	addwf	___fladd@b^0,f,c
  3883   001D82  0E00               	movlw	0
  3884   001D84  220A               	addwfc	(___fladd@b+1)^0,f,c
  3885   001D86  220B               	addwfc	(___fladd@b+2)^0,f,c
  3886   001D88  220C               	addwfc	(___fladd@b+3)^0,f,c
  3887   001D8A  EFCF  F00E         	goto	l1255
  3888   001D8E                     l3280:
  3889   001D8E  500D               	movf	___fladd@a^0,w,c
  3890   001D90  5E09               	subwf	___fladd@b^0,f,c
  3891   001D92  500E               	movf	(___fladd@a+1)^0,w,c
  3892   001D94  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  3893   001D96  500F               	movf	(___fladd@a+2)^0,w,c
  3894   001D98  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  3895   001D9A  5010               	movf	(___fladd@a+3)^0,w,c
  3896   001D9C  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  3897   001D9E                     l1255:
  3898   001D9E  5009               	movf	___fladd@b^0,w,c
  3899   001DA0  100A               	iorwf	(___fladd@b+1)^0,w,c
  3900   001DA2  100B               	iorwf	(___fladd@b+2)^0,w,c
  3901   001DA4  100C               	iorwf	(___fladd@b+3)^0,w,c
  3902   001DA6  A4D8               	btfss	status,2,c
  3903   001DA8  EFD8  F00E         	goto	u2351
  3904   001DAC  EFDA  F00E         	goto	u2350
  3905   001DB0                     u2351:
  3906   001DB0  EF0F  F00F         	goto	l3304
  3907   001DB4                     u2350:
  3908   001DB4  5018               	movf	___fladd@grs^0,w,c
  3909   001DB6  A4D8               	btfss	status,2,c
  3910   001DB8  EFE0  F00E         	goto	u2361
  3911   001DBC  EFE2  F00E         	goto	u2360
  3912   001DC0                     u2361:
  3913   001DC0  EF0F  F00F         	goto	l3304
  3914   001DC4                     u2360:
  3915   001DC4  0E00               	movlw	0
  3916   001DC6  6E09               	movwf	?___fladd^0,c
  3917   001DC8  0E00               	movlw	0
  3918   001DCA  6E0A               	movwf	(?___fladd+1)^0,c
  3919   001DCC  0E00               	movlw	0
  3920   001DCE  6E0B               	movwf	(?___fladd+2)^0,c
  3921   001DD0  0E00               	movlw	0
  3922   001DD2  6E0C               	movwf	(?___fladd+3)^0,c
  3923   001DD4  EFAA  F00F         	goto	l1247
  3924   001DD8                     l3288:
  3925   001DD8  90D8               	bcf	status,0,c
  3926   001DDA  3609               	rlcf	___fladd@b^0,f,c
  3927   001DDC  360A               	rlcf	(___fladd@b+1)^0,f,c
  3928   001DDE  360B               	rlcf	(___fladd@b+2)^0,f,c
  3929   001DE0  360C               	rlcf	(___fladd@b+3)^0,f,c
  3930   001DE2  AE18               	btfss	___fladd@grs^0,7,c
  3931   001DE4  EFF6  F00E         	goto	u2371
  3932   001DE8  EFF8  F00E         	goto	u2370
  3933   001DEC                     u2371:
  3934   001DEC  EFF9  F00E         	goto	l3294
  3935   001DF0                     u2370:
  3936   001DF0  8009               	bsf	___fladd@b^0,0,c
  3937   001DF2                     l3294:
  3938   001DF2  A018               	btfss	___fladd@grs^0,0,c
  3939   001DF4  EFFE  F00E         	goto	u2381
  3940   001DF8  EF00  F00F         	goto	u2380
  3941   001DFC                     u2381:
  3942   001DFC  EF04  F00F         	goto	l3298
  3943   001E00                     u2380:
  3944   001E00  80D8               	bsf	status,0,c
  3945   001E02  3618               	rlcf	___fladd@grs^0,f,c
  3946   001E04  EF06  F00F         	goto	l3300
  3947   001E08                     l3298:
  3948   001E08  90D8               	bcf	status,0,c
  3949   001E0A  3618               	rlcf	___fladd@grs^0,f,c
  3950   001E0C                     l3300:
  3951   001E0C  5017               	movf	___fladd@bexp^0,w,c
  3952   001E0E  B4D8               	btfsc	status,2,c
  3953   001E10  EF0C  F00F         	goto	u2391
  3954   001E14  EF0E  F00F         	goto	u2390
  3955   001E18                     u2391:
  3956   001E18  EF0F  F00F         	goto	l3304
  3957   001E1C                     u2390:
  3958   001E1C  0617               	decf	___fladd@bexp^0,f,c
  3959   001E1E                     l3304:
  3960   001E1E  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3961   001E20  EF14  F00F         	goto	u2401
  3962   001E24  EF16  F00F         	goto	u2400
  3963   001E28                     u2401:
  3964   001E28  EFEC  F00E         	goto	l3288
  3965   001E2C                     u2400:
  3966   001E2C                     l3306:
  3967   001E2C  0E00               	movlw	0
  3968   001E2E  6E16               	movwf	___fladd@aexp^0,c
  3969   001E30  AE18               	btfss	___fladd@grs^0,7,c
  3970   001E32  EF1D  F00F         	goto	u2411
  3971   001E36  EF1F  F00F         	goto	u2410
  3972   001E3A                     u2411:
  3973   001E3A  EF37  F00F         	goto	l1264
  3974   001E3E                     u2410:
  3975   001E3E  C018  F011         	movff	___fladd@grs,??___fladd
  3976   001E42  0E7F               	movlw	127
  3977   001E44  1611               	andwf	??___fladd^0,f,c
  3978   001E46  B4D8               	btfsc	status,2,c
  3979   001E48  EF28  F00F         	goto	u2421
  3980   001E4C  EF2A  F00F         	goto	u2420
  3981   001E50                     u2421:
  3982   001E50  EF2E  F00F         	goto	l1265
  3983   001E54                     u2420:
  3984   001E54                     l3312:
  3985   001E54  0E01               	movlw	1
  3986   001E56  6E16               	movwf	___fladd@aexp^0,c
  3987   001E58  EF37  F00F         	goto	l1264
  3988   001E5C                     l1265:
  3989   001E5C  A009               	btfss	___fladd@b^0,0,c
  3990   001E5E  EF33  F00F         	goto	u2431
  3991   001E62  EF35  F00F         	goto	u2430
  3992   001E66                     u2431:
  3993   001E66  EF37  F00F         	goto	l1264
  3994   001E6A                     u2430:
  3995   001E6A  EF2A  F00F         	goto	l3312
  3996   001E6E                     l1264:
  3997   001E6E  5016               	movf	___fladd@aexp^0,w,c
  3998   001E70  B4D8               	btfsc	status,2,c
  3999   001E72  EF3D  F00F         	goto	u2441
  4000   001E76  EF3F  F00F         	goto	u2440
  4001   001E7A                     u2441:
  4002   001E7A  EF6A  F00F         	goto	l3324
  4003   001E7E                     u2440:
  4004   001E7E  0E01               	movlw	1
  4005   001E80  2609               	addwf	___fladd@b^0,f,c
  4006   001E82  0E00               	movlw	0
  4007   001E84  220A               	addwfc	(___fladd@b+1)^0,f,c
  4008   001E86  220B               	addwfc	(___fladd@b+2)^0,f,c
  4009   001E88  220C               	addwfc	(___fladd@b+3)^0,f,c
  4010   001E8A  A00C               	btfss	(___fladd@b+3)^0,0,c
  4011   001E8C  EF4A  F00F         	goto	u2451
  4012   001E90  EF4C  F00F         	goto	u2450
  4013   001E94                     u2451:
  4014   001E94  EF6A  F00F         	goto	l3324
  4015   001E98                     u2450:
  4016   001E98  C009  F011         	movff	___fladd@b,??___fladd
  4017   001E9C  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  4018   001EA0  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  4019   001EA4  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  4020   001EA8  3414               	rlcf	(??___fladd+3)^0,w,c
  4021   001EAA  3214               	rrcf	(??___fladd+3)^0,f,c
  4022   001EAC  3213               	rrcf	(??___fladd+2)^0,f,c
  4023   001EAE  3212               	rrcf	(??___fladd+1)^0,f,c
  4024   001EB0  3211               	rrcf	??___fladd^0,f,c
  4025   001EB2  C011  F009         	movff	??___fladd,___fladd@b
  4026   001EB6  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  4027   001EBA  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  4028   001EBE  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  4029   001EC2  2817               	incf	___fladd@bexp^0,w,c
  4030   001EC4  B4D8               	btfsc	status,2,c
  4031   001EC6  EF67  F00F         	goto	u2461
  4032   001ECA  EF69  F00F         	goto	u2460
  4033   001ECE                     u2461:
  4034   001ECE  EF6A  F00F         	goto	l3324
  4035   001ED2                     u2460:
  4036   001ED2  2A17               	incf	___fladd@bexp^0,f,c
  4037   001ED4                     l3324:
  4038   001ED4  2817               	incf	___fladd@bexp^0,w,c
  4039   001ED6  B4D8               	btfsc	status,2,c
  4040   001ED8  EF70  F00F         	goto	u2471
  4041   001EDC  EF72  F00F         	goto	u2470
  4042   001EE0                     u2471:
  4043   001EE0  EF7A  F00F         	goto	l3328
  4044   001EE4                     u2470:
  4045   001EE4  5017               	movf	___fladd@bexp^0,w,c
  4046   001EE6  A4D8               	btfss	status,2,c
  4047   001EE8  EF78  F00F         	goto	u2481
  4048   001EEC  EF7A  F00F         	goto	u2480
  4049   001EF0                     u2481:
  4050   001EF0  EF8C  F00F         	goto	l3332
  4051   001EF4                     u2480:
  4052   001EF4                     l3328:
  4053   001EF4  0E00               	movlw	0
  4054   001EF6  6E09               	movwf	___fladd@b^0,c
  4055   001EF8  0E00               	movlw	0
  4056   001EFA  6E0A               	movwf	(___fladd@b+1)^0,c
  4057   001EFC  0E00               	movlw	0
  4058   001EFE  6E0B               	movwf	(___fladd@b+2)^0,c
  4059   001F00  0E00               	movlw	0
  4060   001F02  6E0C               	movwf	(___fladd@b+3)^0,c
  4061   001F04  5017               	movf	___fladd@bexp^0,w,c
  4062   001F06  A4D8               	btfss	status,2,c
  4063   001F08  EF88  F00F         	goto	u2491
  4064   001F0C  EF8A  F00F         	goto	u2490
  4065   001F10                     u2491:
  4066   001F10  EF8C  F00F         	goto	l3332
  4067   001F14                     u2490:
  4068   001F14  0E00               	movlw	0
  4069   001F16  6E15               	movwf	___fladd@signs^0,c
  4070   001F18                     l3332:
  4071   001F18  A017               	btfss	___fladd@bexp^0,0,c
  4072   001F1A  EF91  F00F         	goto	u2501
  4073   001F1E  EF93  F00F         	goto	u2500
  4074   001F22                     u2501:
  4075   001F22  EF96  F00F         	goto	l3336
  4076   001F26                     u2500:
  4077   001F26  8E0B               	bsf	(___fladd@b+2)^0,7,c
  4078   001F28  EF97  F00F         	goto	l3338
  4079   001F2C                     l3336:
  4080   001F2C  9E0B               	bcf	(___fladd@b+2)^0,7,c
  4081   001F2E                     l3338:
  4082   001F2E  90D8               	bcf	status,0,c
  4083   001F30  3017               	rrcf	___fladd@bexp^0,w,c
  4084   001F32  6E0C               	movwf	(___fladd@b+3)^0,c
  4085   001F34  AE15               	btfss	___fladd@signs^0,7,c
  4086   001F36  EF9F  F00F         	goto	u2511
  4087   001F3A  EFA1  F00F         	goto	u2510
  4088   001F3E                     u2511:
  4089   001F3E  EFA2  F00F         	goto	l3344
  4090   001F42                     u2510:
  4091   001F42  8E0C               	bsf	(___fladd@b+3)^0,7,c
  4092   001F44                     l3344:
  4093   001F44  C009  F009         	movff	___fladd@b,?___fladd
  4094   001F48  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  4095   001F4C  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  4096   001F50  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  4097   001F54                     l1247:
  4098   001F54  0012               	return		;funcret
  4099   001F56                     __end_of___fladd:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _persistence_register *****************
  4103 ;; Defined at:
  4104 ;;		line 46 in file "interrupts.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;		None
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  1    wreg      void 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;Total ram usage:        0 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 9
  4125 ;; This function calls:
  4126 ;;		_color_writetoaddr
  4127 ;; This function is called by:
  4128 ;;		_main
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text18
  4133   003C36                     __ptext18:
  4134                           	callstack 0
  4135   003C36                     _persistence_register:
  4136                           	callstack 21
  4137   003C36                     
  4138                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  4139   003C36  0E02               	movlw	2
  4140   003C38  6E0B               	movwf	color_writetoaddr@value^0,c
  4141   003C3A  0E0C               	movlw	12
  4142   003C3C  ECCF  F01D         	call	_color_writetoaddr
  4143   003C40  0012               	return		;funcret
  4144   003C42                     __end_of_persistence_register:
  4145                           	callstack 0
  4146                           
  4147 ;; *************** function _motor_retrace *****************
  4148 ;; Defined at:
  4149 ;;		line 294 in file "color.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  4152 ;;		 -> buggy_path(15), 
  4153 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4154 ;;		 -> main@mL(9), 
  4155 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4156 ;;		 -> main@mR(9), 
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;Total ram usage:        9 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 10
  4175 ;; This function calls:
  4176 ;;		_fullSpeedAhead
  4177 ;;		_norm_stop
  4178 ;;		_turnLeft
  4179 ;;		_turnPrep
  4180 ;;		_turnRight
  4181 ;; This function is called by:
  4182 ;;		_main
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text19
  4187   001F56                     __ptext19:
  4188                           	callstack 0
  4189   001F56                     _motor_retrace:
  4190                           	callstack 20
  4191   001F56                     
  4192                           ;color.c: 295:     if (buggy_path[buggy_step - 2] == 1) {
  4193   001F56  5051               	movf	_buggy_step^0,w,c
  4194   001F58  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4195   001F5A  6E2D               	movwf	??_motor_retrace^0,c
  4196   001F5C  5052               	movf	(_buggy_step+1)^0,w,c
  4197   001F5E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4198   001F60  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4199   001F62  0EFE               	movlw	254
  4200   001F64  242D               	addwf	??_motor_retrace^0,w,c
  4201   001F66  6ED9               	movwf	fsr2l,c
  4202   001F68  0EFF               	movlw	255
  4203   001F6A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4204   001F6C  6EDA               	movwf	fsr2h,c
  4205   001F6E  04DE               	decf	postinc2,w,c
  4206   001F70  A4D8               	btfss	status,2,c
  4207   001F72  EFBD  F00F         	goto	u2981
  4208   001F76  EFBF  F00F         	goto	u2980
  4209   001F7A                     u2981:
  4210   001F7A  EFE1  F00F         	goto	l3630
  4211   001F7E                     u2980:
  4212   001F7E                     
  4213                           ;color.c: 296:         turnPrep(mL, mR);
  4214   001F7E  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4215   001F82  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4216   001F86  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4217   001F8A  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4218   001F8E  ECF6  F01B         	call	_turnPrep	;wreg free
  4219                           
  4220                           ;color.c: 297:         turnLeft(mL, mR);
  4221   001F92  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4222   001F96  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4223   001F9A  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4224   001F9E  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4225   001FA2  EC53  F01B         	call	_turnLeft	;wreg free
  4226   001FA6                     
  4227                           ;color.c: 298:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4228   001FA6  0E12               	movlw	18
  4229   001FA8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4230   001FAA  0E0C               	movlw	12
  4231   001FAC  6E2D               	movwf	??_motor_retrace^0,c
  4232   001FAE  0E95               	movlw	149
  4233   001FB0                     u3407:
  4234   001FB0  2EE8               	decfsz	wreg,f,c
  4235   001FB2  D7FE               	bra	u3407
  4236   001FB4  2E2D               	decfsz	??_motor_retrace^0,f,c
  4237   001FB6  D7FC               	bra	u3407
  4238   001FB8  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4239   001FBA  D7FA               	bra	u3407
  4240   001FBC  F000               	nop	
  4241                           
  4242                           ;color.c: 300:     } else if (buggy_path[buggy_step - 2] == 2) {
  4243   001FBE  EF8E  F011         	goto	l197
  4244   001FC2                     l3630:
  4245   001FC2  5051               	movf	_buggy_step^0,w,c
  4246   001FC4  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4247   001FC6  6E2D               	movwf	??_motor_retrace^0,c
  4248   001FC8  5052               	movf	(_buggy_step+1)^0,w,c
  4249   001FCA  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4250   001FCC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4251   001FCE  0EFE               	movlw	254
  4252   001FD0  242D               	addwf	??_motor_retrace^0,w,c
  4253   001FD2  6ED9               	movwf	fsr2l,c
  4254   001FD4  0EFF               	movlw	255
  4255   001FD6  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4256   001FD8  6EDA               	movwf	fsr2h,c
  4257   001FDA  0E02               	movlw	2
  4258   001FDC  18DE               	xorwf	postinc2,w,c
  4259   001FDE  A4D8               	btfss	status,2,c
  4260   001FE0  EFF4  F00F         	goto	u2991
  4261   001FE4  EFF6  F00F         	goto	u2990
  4262   001FE8                     u2991:
  4263   001FE8  EF18  F010         	goto	l3636
  4264   001FEC                     u2990:
  4265   001FEC                     
  4266                           ;color.c: 301:         turnPrep(mL, mR);
  4267   001FEC  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4268   001FF0  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4269   001FF4  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4270   001FF8  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4271   001FFC  ECF6  F01B         	call	_turnPrep	;wreg free
  4272                           
  4273                           ;color.c: 302:         turnRight(mL, mR);
  4274   002000  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4275   002004  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4276   002008  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4277   00200C  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4278   002010  EC1A  F01B         	call	_turnRight	;wreg free
  4279   002014                     
  4280                           ;color.c: 303:         _delay((unsigned long)((225)*(64000000/4000.0)));
  4281   002014  0E13               	movlw	19
  4282   002016  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4283   002018  0E44               	movlw	68
  4284   00201A  6E2D               	movwf	??_motor_retrace^0,c
  4285   00201C  0E44               	movlw	68
  4286   00201E                     u3417:
  4287   00201E  2EE8               	decfsz	wreg,f,c
  4288   002020  D7FE               	bra	u3417
  4289   002022  2E2D               	decfsz	??_motor_retrace^0,f,c
  4290   002024  D7FC               	bra	u3417
  4291   002026  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4292   002028  D7FA               	bra	u3417
  4293   00202A  D000               	nop2	
  4294                           
  4295                           ;color.c: 305:     } else if (buggy_path[buggy_step - 2] == 3) {
  4296   00202C  EF8E  F011         	goto	l197
  4297   002030                     l3636:
  4298   002030  5051               	movf	_buggy_step^0,w,c
  4299   002032  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4300   002034  6E2D               	movwf	??_motor_retrace^0,c
  4301   002036  5052               	movf	(_buggy_step+1)^0,w,c
  4302   002038  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4303   00203A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4304   00203C  0EFE               	movlw	254
  4305   00203E  242D               	addwf	??_motor_retrace^0,w,c
  4306   002040  6ED9               	movwf	fsr2l,c
  4307   002042  0EFF               	movlw	255
  4308   002044  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4309   002046  6EDA               	movwf	fsr2h,c
  4310   002048  0E03               	movlw	3
  4311   00204A  18DE               	xorwf	postinc2,w,c
  4312   00204C  A4D8               	btfss	status,2,c
  4313   00204E  EF2B  F010         	goto	u3001
  4314   002052  EF2D  F010         	goto	u3000
  4315   002056                     u3001:
  4316   002056  EF4F  F010         	goto	l3642
  4317   00205A                     u3000:
  4318   00205A                     
  4319                           ;color.c: 306:         turnPrep(mL, mR);
  4320   00205A  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4321   00205E  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4322   002062  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4323   002066  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4324   00206A  ECF6  F01B         	call	_turnPrep	;wreg free
  4325                           
  4326                           ;color.c: 307:         turnLeft(mL, mR);
  4327   00206E  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4328   002072  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4329   002076  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4330   00207A  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4331   00207E  EC53  F01B         	call	_turnLeft	;wreg free
  4332   002082                     
  4333                           ;color.c: 308:         _delay((unsigned long)((385)*(64000000/4000.0)));
  4334   002082  0E20               	movlw	32
  4335   002084  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4336   002086  0E40               	movlw	64
  4337   002088  6E2D               	movwf	??_motor_retrace^0,c
  4338   00208A  0EE9               	movlw	233
  4339   00208C                     u3427:
  4340   00208C  2EE8               	decfsz	wreg,f,c
  4341   00208E  D7FE               	bra	u3427
  4342   002090  2E2D               	decfsz	??_motor_retrace^0,f,c
  4343   002092  D7FC               	bra	u3427
  4344   002094  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4345   002096  D7FA               	bra	u3427
  4346   002098  F000               	nop	
  4347                           
  4348                           ;color.c: 310:     } else if (buggy_path[buggy_step - 2] == 4) {
  4349   00209A  EF8E  F011         	goto	l197
  4350   00209E                     l3642:
  4351   00209E  5051               	movf	_buggy_step^0,w,c
  4352   0020A0  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4353   0020A2  6E2D               	movwf	??_motor_retrace^0,c
  4354   0020A4  5052               	movf	(_buggy_step+1)^0,w,c
  4355   0020A6  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4356   0020A8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4357   0020AA  0EFE               	movlw	254
  4358   0020AC  242D               	addwf	??_motor_retrace^0,w,c
  4359   0020AE  6ED9               	movwf	fsr2l,c
  4360   0020B0  0EFF               	movlw	255
  4361   0020B2  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4362   0020B4  6EDA               	movwf	fsr2h,c
  4363   0020B6  0E04               	movlw	4
  4364   0020B8  18DE               	xorwf	postinc2,w,c
  4365   0020BA  A4D8               	btfss	status,2,c
  4366   0020BC  EF62  F010         	goto	u3011
  4367   0020C0  EF64  F010         	goto	u3010
  4368   0020C4                     u3011:
  4369   0020C4  EFB1  F010         	goto	l3654
  4370   0020C8                     u3010:
  4371   0020C8                     
  4372                           ;color.c: 311:         turnPrep(mL, mR);
  4373   0020C8  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4374   0020CC  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4375   0020D0  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4376   0020D4  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4377   0020D8  ECF6  F01B         	call	_turnPrep	;wreg free
  4378                           
  4379                           ;color.c: 312:         turnLeft(mL, mR);
  4380   0020DC  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4381   0020E0  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4382   0020E4  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4383   0020E8  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4384   0020EC  EC53  F01B         	call	_turnLeft	;wreg free
  4385   0020F0                     
  4386                           ;color.c: 313:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4387   0020F0  0E12               	movlw	18
  4388   0020F2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4389   0020F4  0E0C               	movlw	12
  4390   0020F6  6E2D               	movwf	??_motor_retrace^0,c
  4391   0020F8  0E95               	movlw	149
  4392   0020FA                     u3437:
  4393   0020FA  2EE8               	decfsz	wreg,f,c
  4394   0020FC  D7FE               	bra	u3437
  4395   0020FE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4396   002100  D7FC               	bra	u3437
  4397   002102  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4398   002104  D7FA               	bra	u3437
  4399   002106  F000               	nop	
  4400   002108                     
  4401                           ;color.c: 314:         norm_stop(mL, mR);
  4402   002108  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4403   00210C  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4404   002110  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4405   002114  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4406   002118  EC23  F01D         	call	_norm_stop	;wreg free
  4407                           
  4408                           ;color.c: 315:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4409   00211C  0E09               	movlw	9
  4410   00211E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4411   002120  0E1E               	movlw	30
  4412   002122  6E2D               	movwf	??_motor_retrace^0,c
  4413   002124  0EE4               	movlw	228
  4414   002126                     u3447:
  4415   002126  2EE8               	decfsz	wreg,f,c
  4416   002128  D7FE               	bra	u3447
  4417   00212A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4418   00212C  D7FC               	bra	u3447
  4419   00212E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4420   002130  D7FA               	bra	u3447
  4421   002132  D000               	nop2	
  4422   002134                     
  4423                           ;color.c: 316:         fullSpeedAhead(mL, mR);
  4424   002134  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4425   002138  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4426   00213C  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4427   002140  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4428   002144  ECC8  F019         	call	_fullSpeedAhead	;wreg free
  4429   002148                     
  4430                           ;color.c: 317:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  4431   002148  0E62               	movlw	98
  4432   00214A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4433   00214C  0E67               	movlw	103
  4434   00214E  6E2D               	movwf	??_motor_retrace^0,c
  4435   002150  0ECE               	movlw	206
  4436   002152                     u3457:
  4437   002152  2EE8               	decfsz	wreg,f,c
  4438   002154  D7FE               	bra	u3457
  4439   002156  2E2D               	decfsz	??_motor_retrace^0,f,c
  4440   002158  D7FC               	bra	u3457
  4441   00215A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4442   00215C  D7FA               	bra	u3457
  4443                           
  4444                           ;color.c: 319:     } else if (buggy_path[buggy_step - 2] == 5) {
  4445   00215E  EF8E  F011         	goto	l197
  4446   002162                     l3654:
  4447   002162  5051               	movf	_buggy_step^0,w,c
  4448   002164  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4449   002166  6E2D               	movwf	??_motor_retrace^0,c
  4450   002168  5052               	movf	(_buggy_step+1)^0,w,c
  4451   00216A  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4452   00216C  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4453   00216E  0EFE               	movlw	254
  4454   002170  242D               	addwf	??_motor_retrace^0,w,c
  4455   002172  6ED9               	movwf	fsr2l,c
  4456   002174  0EFF               	movlw	255
  4457   002176  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4458   002178  6EDA               	movwf	fsr2h,c
  4459   00217A  0E05               	movlw	5
  4460   00217C  18DE               	xorwf	postinc2,w,c
  4461   00217E  A4D8               	btfss	status,2,c
  4462   002180  EFC4  F010         	goto	u3021
  4463   002184  EFC6  F010         	goto	u3020
  4464   002188                     u3021:
  4465   002188  EF20  F011         	goto	l3668
  4466   00218C                     u3020:
  4467   00218C                     
  4468                           ;color.c: 320:         norm_stop(mL, mR);
  4469   00218C  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4470   002190  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4471   002194  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4472   002198  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4473   00219C  EC23  F01D         	call	_norm_stop	;wreg free
  4474   0021A0                     
  4475                           ;color.c: 321:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4476   0021A0  0E09               	movlw	9
  4477   0021A2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4478   0021A4  0E1E               	movlw	30
  4479   0021A6  6E2D               	movwf	??_motor_retrace^0,c
  4480   0021A8  0EE4               	movlw	228
  4481   0021AA                     u3467:
  4482   0021AA  2EE8               	decfsz	wreg,f,c
  4483   0021AC  D7FE               	bra	u3467
  4484   0021AE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4485   0021B0  D7FC               	bra	u3467
  4486   0021B2  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4487   0021B4  D7FA               	bra	u3467
  4488   0021B6  D000               	nop2	
  4489   0021B8                     
  4490                           ;color.c: 322:         turnRight(mL, mR);
  4491   0021B8  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4492   0021BC  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4493   0021C0  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4494   0021C4  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4495   0021C8  EC1A  F01B         	call	_turnRight	;wreg free
  4496                           
  4497                           ;color.c: 323:         _delay((unsigned long)((205)*(64000000/4000.0)));
  4498   0021CC  0E11               	movlw	17
  4499   0021CE  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4500   0021D0  0EA4               	movlw	164
  4501   0021D2  6E2D               	movwf	??_motor_retrace^0,c
  4502   0021D4  0EB0               	movlw	176
  4503   0021D6                     u3477:
  4504   0021D6  2EE8               	decfsz	wreg,f,c
  4505   0021D8  D7FE               	bra	u3477
  4506   0021DA  2E2D               	decfsz	??_motor_retrace^0,f,c
  4507   0021DC  D7FC               	bra	u3477
  4508   0021DE  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4509   0021E0  D7FA               	bra	u3477
  4510   0021E2  D000               	nop2	
  4511   0021E4                     
  4512                           ;color.c: 324:         norm_stop(mL, mR);
  4513   0021E4  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4514   0021E8  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4515   0021EC  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4516   0021F0  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4517   0021F4  EC23  F01D         	call	_norm_stop	;wreg free
  4518   0021F8                     
  4519                           ;color.c: 325:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4520   0021F8  0E09               	movlw	9
  4521   0021FA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4522   0021FC  0E1E               	movlw	30
  4523   0021FE  6E2D               	movwf	??_motor_retrace^0,c
  4524   002200  0EE4               	movlw	228
  4525   002202                     u3487:
  4526   002202  2EE8               	decfsz	wreg,f,c
  4527   002204  D7FE               	bra	u3487
  4528   002206  2E2D               	decfsz	??_motor_retrace^0,f,c
  4529   002208  D7FC               	bra	u3487
  4530   00220A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4531   00220C  D7FA               	bra	u3487
  4532   00220E  D000               	nop2	
  4533                           
  4534                           ;color.c: 326:         fullSpeedAhead(mL, mR);
  4535   002210  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4536   002214  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4537   002218  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4538   00221C  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4539   002220  ECC8  F019         	call	_fullSpeedAhead	;wreg free
  4540   002224                     
  4541                           ;color.c: 327:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  4542   002224  0EA3               	movlw	163
  4543   002226  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4544   002228  0E57               	movlw	87
  4545   00222A  6E2D               	movwf	??_motor_retrace^0,c
  4546   00222C  0E02               	movlw	2
  4547   00222E                     u3497:
  4548   00222E  2EE8               	decfsz	wreg,f,c
  4549   002230  D7FE               	bra	u3497
  4550   002232  2E2D               	decfsz	??_motor_retrace^0,f,c
  4551   002234  D7FC               	bra	u3497
  4552   002236  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4553   002238  D7FA               	bra	u3497
  4554   00223A  D000               	nop2	
  4555                           
  4556                           ;color.c: 329:     } else if (buggy_path[buggy_step - 2] == 6) {
  4557   00223C  EF8E  F011         	goto	l197
  4558   002240                     l3668:
  4559   002240  5051               	movf	_buggy_step^0,w,c
  4560   002242  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4561   002244  6E2D               	movwf	??_motor_retrace^0,c
  4562   002246  5052               	movf	(_buggy_step+1)^0,w,c
  4563   002248  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4564   00224A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4565   00224C  0EFE               	movlw	254
  4566   00224E  242D               	addwf	??_motor_retrace^0,w,c
  4567   002250  6ED9               	movwf	fsr2l,c
  4568   002252  0EFF               	movlw	255
  4569   002254  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4570   002256  6EDA               	movwf	fsr2h,c
  4571   002258  0E06               	movlw	6
  4572   00225A  18DE               	xorwf	postinc2,w,c
  4573   00225C  A4D8               	btfss	status,2,c
  4574   00225E  EF33  F011         	goto	u3031
  4575   002262  EF35  F011         	goto	u3030
  4576   002266                     u3031:
  4577   002266  EF57  F011         	goto	l3674
  4578   00226A                     u3030:
  4579   00226A                     
  4580                           ;color.c: 330:         turnPrep(mL, mR);
  4581   00226A  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4582   00226E  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4583   002272  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4584   002276  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4585   00227A  ECF6  F01B         	call	_turnPrep	;wreg free
  4586                           
  4587                           ;color.c: 331:         turnLeft(mL, mR);
  4588   00227E  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4589   002282  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4590   002286  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4591   00228A  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4592   00228E  EC53  F01B         	call	_turnLeft	;wreg free
  4593   002292                     
  4594                           ;color.c: 332:         _delay((unsigned long)((330)*(64000000/4000.0)));
  4595   002292  0E1B               	movlw	27
  4596   002294  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4597   002296  0ECA               	movlw	202
  4598   002298  6E2D               	movwf	??_motor_retrace^0,c
  4599   00229A  0E10               	movlw	16
  4600   00229C                     u3507:
  4601   00229C  2EE8               	decfsz	wreg,f,c
  4602   00229E  D7FE               	bra	u3507
  4603   0022A0  2E2D               	decfsz	??_motor_retrace^0,f,c
  4604   0022A2  D7FC               	bra	u3507
  4605   0022A4  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4606   0022A6  D7FA               	bra	u3507
  4607   0022A8  D000               	nop2	
  4608                           
  4609                           ;color.c: 333:     } else if (buggy_path[buggy_step - 2] == 7) {
  4610   0022AA  EF8E  F011         	goto	l197
  4611   0022AE                     l3674:
  4612   0022AE  5051               	movf	_buggy_step^0,w,c
  4613   0022B0  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4614   0022B2  6E2D               	movwf	??_motor_retrace^0,c
  4615   0022B4  5052               	movf	(_buggy_step+1)^0,w,c
  4616   0022B6  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4617   0022B8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4618   0022BA  0EFE               	movlw	254
  4619   0022BC  242D               	addwf	??_motor_retrace^0,w,c
  4620   0022BE  6ED9               	movwf	fsr2l,c
  4621   0022C0  0EFF               	movlw	255
  4622   0022C2  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4623   0022C4  6EDA               	movwf	fsr2h,c
  4624   0022C6  0E07               	movlw	7
  4625   0022C8  18DE               	xorwf	postinc2,w,c
  4626   0022CA  A4D8               	btfss	status,2,c
  4627   0022CC  EF6A  F011         	goto	u3041
  4628   0022D0  EF6C  F011         	goto	u3040
  4629   0022D4                     u3041:
  4630   0022D4  EF8E  F011         	goto	l191
  4631   0022D8                     u3040:
  4632   0022D8                     
  4633                           ;color.c: 334:         turnPrep(mL, mR);
  4634   0022D8  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4635   0022DC  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4636   0022E0  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4637   0022E4  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4638   0022E8  ECF6  F01B         	call	_turnPrep	;wreg free
  4639                           
  4640                           ;color.c: 335:         turnRight(mL, mR);
  4641   0022EC  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4642   0022F0  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4643   0022F4  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4644   0022F8  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4645   0022FC  EC1A  F01B         	call	_turnRight	;wreg free
  4646   002300                     
  4647                           ;color.c: 336:         _delay((unsigned long)((325)*(64000000/4000.0)));
  4648   002300  0E1B               	movlw	27
  4649   002302  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4650   002304  0E62               	movlw	98
  4651   002306  6E2D               	movwf	??_motor_retrace^0,c
  4652   002308  0E2B               	movlw	43
  4653   00230A                     u3517:
  4654   00230A  2EE8               	decfsz	wreg,f,c
  4655   00230C  D7FE               	bra	u3517
  4656   00230E  2E2D               	decfsz	??_motor_retrace^0,f,c
  4657   002310  D7FC               	bra	u3517
  4658   002312  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4659   002314  D7FA               	bra	u3517
  4660   002316  F000               	nop	
  4661   002318  EF8E  F011         	goto	l197
  4662   00231C                     l191:
  4663   00231C                     l197:
  4664   00231C  0012               	return		;funcret
  4665   00231E                     __end_of_motor_retrace:
  4666                           	callstack 0
  4667                           
  4668 ;; *************** function _fullSpeedAhead *****************
  4669 ;; Defined at:
  4670 ;;		line 178 in file "dc_motor.c"
  4671 ;; Parameters:    Size  Location     Type
  4672 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4673 ;;		 -> main@mL(9), 
  4674 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4675 ;;		 -> main@mR(9), 
  4676 ;; Auto vars:     Size  Location     Type
  4677 ;;		None
  4678 ;; Return value:  Size  Location     Type
  4679 ;;                  1    wreg      void 
  4680 ;; Registers used:
  4681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4682 ;; Tracked objects:
  4683 ;;		On entry : 0/0
  4684 ;;		On exit  : 0/0
  4685 ;;		Unchanged: 0/0
  4686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4687 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;Total ram usage:        5 bytes
  4692 ;; Hardware stack levels used: 1
  4693 ;; Hardware stack levels required when called: 8
  4694 ;; This function calls:
  4695 ;;		_setMotorPWM
  4696 ;; This function is called by:
  4697 ;;		_motor_retrace
  4698 ;;		_main
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text20
  4703   003390                     __ptext20:
  4704                           	callstack 0
  4705   003390                     _fullSpeedAhead:
  4706                           	callstack 21
  4707   003390                     
  4708                           ;dc_motor.c: 178: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 179: {;dc_
      +                          motor.c: 180:     mL->power =5;
  4709   003390  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4710   003394  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4711   003398  0E05               	movlw	5
  4712   00339A  6EDF               	movwf	indf2,c
  4713                           
  4714                           ;dc_motor.c: 181:     mR->power = 5;
  4715   00339C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4716   0033A0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4717   0033A4  0E05               	movlw	5
  4718   0033A6  6EDF               	movwf	indf2,c
  4719   0033A8                     
  4720                           ;dc_motor.c: 182:     mR->direction = 1;
  4721   0033A8  EE20 F001          	lfsr	2,1
  4722   0033AC  501E               	movf	fullSpeedAhead@mR^0,w,c
  4723   0033AE  26D9               	addwf	fsr2l,f,c
  4724   0033B0  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4725   0033B2  22DA               	addwfc	fsr2h,f,c
  4726   0033B4  0E01               	movlw	1
  4727   0033B6  6EDF               	movwf	indf2,c
  4728   0033B8                     
  4729                           ;dc_motor.c: 183:     mL->direction = 1;
  4730   0033B8  EE20 F001          	lfsr	2,1
  4731   0033BC  501C               	movf	fullSpeedAhead@mL^0,w,c
  4732   0033BE  26D9               	addwf	fsr2l,f,c
  4733   0033C0  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4734   0033C2  22DA               	addwfc	fsr2h,f,c
  4735   0033C4  0E01               	movlw	1
  4736   0033C6  6EDF               	movwf	indf2,c
  4737   0033C8                     
  4738                           ;dc_motor.c: 184:     mL->brakemode = 1;
  4739   0033C8  EE20 F002          	lfsr	2,2
  4740   0033CC  501C               	movf	fullSpeedAhead@mL^0,w,c
  4741   0033CE  26D9               	addwf	fsr2l,f,c
  4742   0033D0  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4743   0033D2  22DA               	addwfc	fsr2h,f,c
  4744   0033D4  0E01               	movlw	1
  4745   0033D6  6EDF               	movwf	indf2,c
  4746   0033D8                     
  4747                           ;dc_motor.c: 185:     mR->brakemode = 1;
  4748   0033D8  EE20 F002          	lfsr	2,2
  4749   0033DC  501E               	movf	fullSpeedAhead@mR^0,w,c
  4750   0033DE  26D9               	addwf	fsr2l,f,c
  4751   0033E0  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4752   0033E2  22DA               	addwfc	fsr2h,f,c
  4753   0033E4  0E01               	movlw	1
  4754   0033E6  6EDF               	movwf	indf2,c
  4755                           
  4756                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4757   0033E8  EF0C  F01A         	goto	l3136
  4758   0033EC                     l3130:
  4759                           
  4760                           ;dc_motor.c: 187:     {;dc_motor.c: 188:         mL->power++;
  4761   0033EC  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4762   0033F0  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4763   0033F4  2ADF               	incf	indf2,f,c
  4764                           
  4765                           ;dc_motor.c: 189:         mR->power++;
  4766   0033F6  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4767   0033FA  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4768   0033FE  2ADF               	incf	indf2,f,c
  4769   003400                     
  4770                           ;dc_motor.c: 191:         setMotorPWM(mL);
  4771   003400  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4772   003404  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4773   003408  EC9F  F017         	call	_setMotorPWM	;wreg free
  4774   00340C                     
  4775                           ;dc_motor.c: 192:         setMotorPWM(mR);
  4776   00340C  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4777   003410  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4778   003414  EC9F  F017         	call	_setMotorPWM	;wreg free
  4779   003418                     l3136:
  4780                           
  4781                           ;dc_motor.c: 186:     while (mL->power <= 50 && mR->power <=50)
  4782   003418  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4783   00341C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4784   003420  0E33               	movlw	51
  4785   003422  60DF               	cpfslt	indf2,c
  4786   003424  EF16  F01A         	goto	u2111
  4787   003428  EF18  F01A         	goto	u2110
  4788   00342C                     u2111:
  4789   00342C  EF24  F01A         	goto	l3140
  4790   003430                     u2110:
  4791   003430  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4792   003434  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4793   003438  0E32               	movlw	50
  4794   00343A  64DF               	cpfsgt	indf2,c
  4795   00343C  EF22  F01A         	goto	u2121
  4796   003440  EF24  F01A         	goto	u2120
  4797   003444                     u2121:
  4798   003444  EFF6  F019         	goto	l3130
  4799   003448                     u2120:
  4800   003448                     l3140:
  4801                           
  4802                           ;dc_motor.c: 194:     mL->power = 50;
  4803   003448  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4804   00344C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4805   003450  0E32               	movlw	50
  4806   003452  6EDF               	movwf	indf2,c
  4807                           
  4808                           ;dc_motor.c: 195:     mR->power = 50;
  4809   003454  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4810   003458  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4811   00345C  0E32               	movlw	50
  4812   00345E  6EDF               	movwf	indf2,c
  4813   003460                     
  4814                           ;dc_motor.c: 196:     setMotorPWM(mL);
  4815   003460  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4816   003464  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4817   003468  EC9F  F017         	call	_setMotorPWM	;wreg free
  4818   00346C                     
  4819                           ;dc_motor.c: 197:     setMotorPWM(mR);
  4820   00346C  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4821   003470  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4822   003474  EC9F  F017         	call	_setMotorPWM	;wreg free
  4823   003478  0012               	return		;funcret
  4824   00347A                     __end_of_fullSpeedAhead:
  4825                           	callstack 0
  4826                           
  4827 ;; *************** function _motor_response *****************
  4828 ;; Defined at:
  4829 ;;		line 190 in file "color.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4832 ;;		 -> main@RGBC(32), 
  4833 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4834 ;;		 -> main@mL(9), 
  4835 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4836 ;;		 -> main@mR(9), 
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;  j               2   46[COMRAM] int 
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      unsigned char 
  4841 ;; Registers used:
  4842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;Total ram usage:       10 bytes
  4853 ;; Hardware stack levels used: 1
  4854 ;; Hardware stack levels required when called: 10
  4855 ;; This function calls:
  4856 ;;		___flge
  4857 ;;		_norm_stop
  4858 ;;		_reverse
  4859 ;;		_turnLeft
  4860 ;;		_turnPrep
  4861 ;;		_turnRight
  4862 ;; This function is called by:
  4863 ;;		_main
  4864 ;; This function uses a non-reentrant model
  4865 ;;
  4866                           
  4867                           	psect	text21
  4868   000E18                     __ptext21:
  4869                           	callstack 0
  4870   000E18                     _motor_response:
  4871                           	callstack 20
  4872   000E18                     
  4873                           ;color.c: 192:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4874   000E18  EE20 F01C          	lfsr	2,28
  4875   000E1C  5027               	movf	motor_response@temp^0,w,c
  4876   000E1E  26D9               	addwf	fsr2l,f,c
  4877   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4878   000E22  22DA               	addwfc	fsr2h,f,c
  4879   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4880   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4881   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4882   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4883   000E34  C043  F00D         	movff	_CR2U,___flge@ff2
  4884   000E38  C044  F00E         	movff	_CR2U+1,___flge@ff2+1
  4885   000E3C  C045  F00F         	movff	_CR2U+2,___flge@ff2+2
  4886   000E40  C046  F010         	movff	_CR2U+3,___flge@ff2+3
  4887   000E44  EC55  F018         	call	___flge	;wreg free
  4888   000E48  B0D8               	btfsc	status,0,c
  4889   000E4A  EF29  F007         	goto	u2601
  4890   000E4E  EF2B  F007         	goto	u2600
  4891   000E52                     u2601:
  4892   000E52  EF1F  F00A         	goto	l3504
  4893   000E56                     u2600:
  4894   000E56  C03F  F009         	movff	_CR2L,___flge@ff1
  4895   000E5A  C040  F00A         	movff	_CR2L+1,___flge@ff1+1
  4896   000E5E  C041  F00B         	movff	_CR2L+2,___flge@ff1+2
  4897   000E62  C042  F00C         	movff	_CR2L+3,___flge@ff1+3
  4898   000E66  EE20 F01C          	lfsr	2,28
  4899   000E6A  5027               	movf	motor_response@temp^0,w,c
  4900   000E6C  26D9               	addwf	fsr2l,f,c
  4901   000E6E  5028               	movf	(motor_response@temp+1)^0,w,c
  4902   000E70  22DA               	addwfc	fsr2h,f,c
  4903   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  4904   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4905   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4906   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  4907   000E82  EC55  F018         	call	___flge	;wreg free
  4908   000E86  B0D8               	btfsc	status,0,c
  4909   000E88  EF48  F007         	goto	u2611
  4910   000E8C  EF4A  F007         	goto	u2610
  4911   000E90                     u2611:
  4912   000E90  EF1F  F00A         	goto	l3504
  4913   000E94                     u2610:
  4914   000E94                     
  4915                           ;color.c: 194:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4916   000E94  EE20 F018          	lfsr	2,24
  4917   000E98  5027               	movf	motor_response@temp^0,w,c
  4918   000E9A  26D9               	addwf	fsr2l,f,c
  4919   000E9C  5028               	movf	(motor_response@temp+1)^0,w,c
  4920   000E9E  22DA               	addwfc	fsr2h,f,c
  4921   000EA0  CFDE F009          	movff	postinc2,___flge@ff1
  4922   000EA4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4923   000EA8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4924   000EAC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4925   000EB0  0E00               	movlw	0
  4926   000EB2  6E0D               	movwf	___flge@ff2^0,c
  4927   000EB4  0E00               	movlw	0
  4928   000EB6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4929   000EB8  0EA0               	movlw	160
  4930   000EBA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4931   000EBC  0E40               	movlw	64
  4932   000EBE  6E10               	movwf	(___flge@ff2+3)^0,c
  4933   000EC0  EC55  F018         	call	___flge	;wreg free
  4934   000EC4  B0D8               	btfsc	status,0,c
  4935   000EC6  EF67  F007         	goto	u2621
  4936   000ECA  EF69  F007         	goto	u2620
  4937   000ECE                     u2621:
  4938   000ECE  EF2A  F008         	goto	l3456
  4939   000ED2                     u2620:
  4940   000ED2  0E9A               	movlw	154
  4941   000ED4  6E09               	movwf	___flge@ff1^0,c
  4942   000ED6  0E99               	movlw	153
  4943   000ED8  6E0A               	movwf	(___flge@ff1+1)^0,c
  4944   000EDA  0ED9               	movlw	217
  4945   000EDC  6E0B               	movwf	(___flge@ff1+2)^0,c
  4946   000EDE  0E3F               	movlw	63
  4947   000EE0  6E0C               	movwf	(___flge@ff1+3)^0,c
  4948   000EE2  EE20 F010          	lfsr	2,16
  4949   000EE6  5027               	movf	motor_response@temp^0,w,c
  4950   000EE8  26D9               	addwf	fsr2l,f,c
  4951   000EEA  5028               	movf	(motor_response@temp+1)^0,w,c
  4952   000EEC  22DA               	addwfc	fsr2h,f,c
  4953   000EEE  CFDE F00D          	movff	postinc2,___flge@ff2
  4954   000EF2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4955   000EF6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4956   000EFA  CFDE F010          	movff	postinc2,___flge@ff2+3
  4957   000EFE  EC55  F018         	call	___flge	;wreg free
  4958   000F02  B0D8               	btfsc	status,0,c
  4959   000F04  EF86  F007         	goto	u2631
  4960   000F08  EF88  F007         	goto	u2630
  4961   000F0C                     u2631:
  4962   000F0C  EF2A  F008         	goto	l3456
  4963   000F10                     u2630:
  4964   000F10  EE20 F010          	lfsr	2,16
  4965   000F14  5027               	movf	motor_response@temp^0,w,c
  4966   000F16  26D9               	addwf	fsr2l,f,c
  4967   000F18  5028               	movf	(motor_response@temp+1)^0,w,c
  4968   000F1A  22DA               	addwfc	fsr2h,f,c
  4969   000F1C  CFDE F009          	movff	postinc2,___flge@ff1
  4970   000F20  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4971   000F24  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4972   000F28  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4973   000F2C  0ECD               	movlw	205
  4974   000F2E  6E0D               	movwf	___flge@ff2^0,c
  4975   000F30  0ECC               	movlw	204
  4976   000F32  6E0E               	movwf	(___flge@ff2+1)^0,c
  4977   000F34  0E0C               	movlw	12
  4978   000F36  6E0F               	movwf	(___flge@ff2+2)^0,c
  4979   000F38  0E40               	movlw	64
  4980   000F3A  6E10               	movwf	(___flge@ff2+3)^0,c
  4981   000F3C  EC55  F018         	call	___flge	;wreg free
  4982   000F40  B0D8               	btfsc	status,0,c
  4983   000F42  EFA5  F007         	goto	u2641
  4984   000F46  EFA7  F007         	goto	u2640
  4985   000F4A                     u2641:
  4986   000F4A  EF2A  F008         	goto	l3456
  4987   000F4E                     u2640:
  4988   000F4E  0E00               	movlw	0
  4989   000F50  6E09               	movwf	___flge@ff1^0,c
  4990   000F52  0E00               	movlw	0
  4991   000F54  6E0A               	movwf	(___flge@ff1+1)^0,c
  4992   000F56  0E40               	movlw	64
  4993   000F58  6E0B               	movwf	(___flge@ff1+2)^0,c
  4994   000F5A  0E40               	movlw	64
  4995   000F5C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4996   000F5E  EE20 F014          	lfsr	2,20
  4997   000F62  5027               	movf	motor_response@temp^0,w,c
  4998   000F64  26D9               	addwf	fsr2l,f,c
  4999   000F66  5028               	movf	(motor_response@temp+1)^0,w,c
  5000   000F68  22DA               	addwfc	fsr2h,f,c
  5001   000F6A  CFDE F00D          	movff	postinc2,___flge@ff2
  5002   000F6E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5003   000F72  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5004   000F76  CFDE F010          	movff	postinc2,___flge@ff2+3
  5005   000F7A  EC55  F018         	call	___flge	;wreg free
  5006   000F7E  B0D8               	btfsc	status,0,c
  5007   000F80  EFC4  F007         	goto	u2651
  5008   000F84  EFC6  F007         	goto	u2650
  5009   000F88                     u2651:
  5010   000F88  EF2A  F008         	goto	l3456
  5011   000F8C                     u2650:
  5012   000F8C  EE20 F014          	lfsr	2,20
  5013   000F90  5027               	movf	motor_response@temp^0,w,c
  5014   000F92  26D9               	addwf	fsr2l,f,c
  5015   000F94  5028               	movf	(motor_response@temp+1)^0,w,c
  5016   000F96  22DA               	addwfc	fsr2h,f,c
  5017   000F98  CFDE F009          	movff	postinc2,___flge@ff1
  5018   000F9C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5019   000FA0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5020   000FA4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5021   000FA8  0E00               	movlw	0
  5022   000FAA  6E0D               	movwf	___flge@ff2^0,c
  5023   000FAC  0E00               	movlw	0
  5024   000FAE  6E0E               	movwf	(___flge@ff2+1)^0,c
  5025   000FB0  0E60               	movlw	96
  5026   000FB2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5027   000FB4  0E40               	movlw	64
  5028   000FB6  6E10               	movwf	(___flge@ff2+3)^0,c
  5029   000FB8  EC55  F018         	call	___flge	;wreg free
  5030   000FBC  B0D8               	btfsc	status,0,c
  5031   000FBE  EFE3  F007         	goto	u2661
  5032   000FC2  EFE5  F007         	goto	u2660
  5033   000FC6                     u2661:
  5034   000FC6  EF2A  F008         	goto	l3456
  5035   000FCA                     u2660:
  5036   000FCA                     
  5037                           ;color.c: 195:             reverse(mL, mR);
  5038   000FCA  C029  F01C         	movff	motor_response@mL,reverse@mL
  5039   000FCE  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5040   000FD2  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5041   000FD6  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5042   000FDA  ECD7  F018         	call	_reverse	;wreg free
  5043   000FDE                     
  5044                           ;color.c: 196:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5045   000FDE  0EF4               	movlw	244
  5046   000FE0  6E2E               	movwf	(??_motor_response+1)^0,c
  5047   000FE2  0E82               	movlw	130
  5048   000FE4  6E2D               	movwf	??_motor_response^0,c
  5049   000FE6  0E05               	movlw	5
  5050   000FE8                     u3527:
  5051   000FE8  2EE8               	decfsz	wreg,f,c
  5052   000FEA  D7FE               	bra	u3527
  5053   000FEC  2E2D               	decfsz	??_motor_response^0,f,c
  5054   000FEE  D7FC               	bra	u3527
  5055   000FF0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5056   000FF2  D7FA               	bra	u3527
  5057   000FF4  F000               	nop	
  5058   000FF6                     
  5059                           ;color.c: 197:             norm_stop(mL, mR);
  5060   000FF6  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5061   000FFA  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5062   000FFE  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5063   001002  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5064   001006  EC23  F01D         	call	_norm_stop	;wreg free
  5065                           
  5066                           ;color.c: 198:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5067   00100A  0E09               	movlw	9
  5068   00100C  6E2E               	movwf	(??_motor_response+1)^0,c
  5069   00100E  0E1E               	movlw	30
  5070   001010  6E2D               	movwf	??_motor_response^0,c
  5071   001012  0EE4               	movlw	228
  5072   001014                     u3537:
  5073   001014  2EE8               	decfsz	wreg,f,c
  5074   001016  D7FE               	bra	u3537
  5075   001018  2E2D               	decfsz	??_motor_response^0,f,c
  5076   00101A  D7FC               	bra	u3537
  5077   00101C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5078   00101E  D7FA               	bra	u3537
  5079   001020  D000               	nop2	
  5080   001022                     
  5081                           ;color.c: 199:             turnLeft(mL, mR);
  5082   001022  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5083   001026  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5084   00102A  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5085   00102E  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5086   001032  EC53  F01B         	call	_turnLeft	;wreg free
  5087   001036                     
  5088                           ;color.c: 200:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5089   001036  0E12               	movlw	18
  5090   001038  6E2E               	movwf	(??_motor_response+1)^0,c
  5091   00103A  0E0C               	movlw	12
  5092   00103C  6E2D               	movwf	??_motor_response^0,c
  5093   00103E  0E95               	movlw	149
  5094   001040                     u3547:
  5095   001040  2EE8               	decfsz	wreg,f,c
  5096   001042  D7FE               	bra	u3547
  5097   001044  2E2D               	decfsz	??_motor_response^0,f,c
  5098   001046  D7FC               	bra	u3547
  5099   001048  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5100   00104A  D7FA               	bra	u3547
  5101   00104C  F000               	nop	
  5102   00104E                     
  5103                           ;color.c: 201:             return 5;
  5104   00104E  0E05               	movlw	5
  5105   001050  EF4A  F00D         	goto	l167
  5106   001054                     l3456:
  5107                           
  5108                           ;color.c: 204:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  5109   001054  0E00               	movlw	0
  5110   001056  6E09               	movwf	___flge@ff1^0,c
  5111   001058  0E00               	movlw	0
  5112   00105A  6E0A               	movwf	(___flge@ff1+1)^0,c
  5113   00105C  0EB0               	movlw	176
  5114   00105E  6E0B               	movwf	(___flge@ff1+2)^0,c
  5115   001060  0E40               	movlw	64
  5116   001062  6E0C               	movwf	(___flge@ff1+3)^0,c
  5117   001064  EE20 F018          	lfsr	2,24
  5118   001068  5027               	movf	motor_response@temp^0,w,c
  5119   00106A  26D9               	addwf	fsr2l,f,c
  5120   00106C  5028               	movf	(motor_response@temp+1)^0,w,c
  5121   00106E  22DA               	addwfc	fsr2h,f,c
  5122   001070  CFDE F00D          	movff	postinc2,___flge@ff2
  5123   001074  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5124   001078  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5125   00107C  CFDE F010          	movff	postinc2,___flge@ff2+3
  5126   001080  EC55  F018         	call	___flge	;wreg free
  5127   001084  B0D8               	btfsc	status,0,c
  5128   001086  EF47  F008         	goto	u2671
  5129   00108A  EF49  F008         	goto	u2670
  5130   00108E                     u2671:
  5131   00108E  EF1D  F009         	goto	l3476
  5132   001092                     u2670:
  5133   001092  EE20 F018          	lfsr	2,24
  5134   001096  5027               	movf	motor_response@temp^0,w,c
  5135   001098  26D9               	addwf	fsr2l,f,c
  5136   00109A  5028               	movf	(motor_response@temp+1)^0,w,c
  5137   00109C  22DA               	addwfc	fsr2h,f,c
  5138   00109E  CFDE F009          	movff	postinc2,___flge@ff1
  5139   0010A2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5140   0010A6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5141   0010AA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5142   0010AE  0E00               	movlw	0
  5143   0010B0  6E0D               	movwf	___flge@ff2^0,c
  5144   0010B2  0E00               	movlw	0
  5145   0010B4  6E0E               	movwf	(___flge@ff2+1)^0,c
  5146   0010B6  0EC0               	movlw	192
  5147   0010B8  6E0F               	movwf	(___flge@ff2+2)^0,c
  5148   0010BA  0E40               	movlw	64
  5149   0010BC  6E10               	movwf	(___flge@ff2+3)^0,c
  5150   0010BE  EC55  F018         	call	___flge	;wreg free
  5151   0010C2  B0D8               	btfsc	status,0,c
  5152   0010C4  EF66  F008         	goto	u2681
  5153   0010C8  EF68  F008         	goto	u2680
  5154   0010CC                     u2681:
  5155   0010CC  EF1D  F009         	goto	l3476
  5156   0010D0                     u2680:
  5157   0010D0  0E33               	movlw	51
  5158   0010D2  6E09               	movwf	___flge@ff1^0,c
  5159   0010D4  0E33               	movlw	51
  5160   0010D6  6E0A               	movwf	(___flge@ff1+1)^0,c
  5161   0010D8  0EB3               	movlw	179
  5162   0010DA  6E0B               	movwf	(___flge@ff1+2)^0,c
  5163   0010DC  0E3F               	movlw	63
  5164   0010DE  6E0C               	movwf	(___flge@ff1+3)^0,c
  5165   0010E0  EE20 F010          	lfsr	2,16
  5166   0010E4  5027               	movf	motor_response@temp^0,w,c
  5167   0010E6  26D9               	addwf	fsr2l,f,c
  5168   0010E8  5028               	movf	(motor_response@temp+1)^0,w,c
  5169   0010EA  22DA               	addwfc	fsr2h,f,c
  5170   0010EC  CFDE F00D          	movff	postinc2,___flge@ff2
  5171   0010F0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5172   0010F4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5173   0010F8  CFDE F010          	movff	postinc2,___flge@ff2+3
  5174   0010FC  EC55  F018         	call	___flge	;wreg free
  5175   001100  B0D8               	btfsc	status,0,c
  5176   001102  EF85  F008         	goto	u2691
  5177   001106  EF87  F008         	goto	u2690
  5178   00110A                     u2691:
  5179   00110A  EF1D  F009         	goto	l3476
  5180   00110E                     u2690:
  5181   00110E  EE20 F010          	lfsr	2,16
  5182   001112  5027               	movf	motor_response@temp^0,w,c
  5183   001114  26D9               	addwf	fsr2l,f,c
  5184   001116  5028               	movf	(motor_response@temp+1)^0,w,c
  5185   001118  22DA               	addwfc	fsr2h,f,c
  5186   00111A  CFDE F009          	movff	postinc2,___flge@ff1
  5187   00111E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5188   001122  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5189   001126  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5190   00112A  0E9A               	movlw	154
  5191   00112C  6E0D               	movwf	___flge@ff2^0,c
  5192   00112E  0E99               	movlw	153
  5193   001130  6E0E               	movwf	(___flge@ff2+1)^0,c
  5194   001132  0ED9               	movlw	217
  5195   001134  6E0F               	movwf	(___flge@ff2+2)^0,c
  5196   001136  0E3F               	movlw	63
  5197   001138  6E10               	movwf	(___flge@ff2+3)^0,c
  5198   00113A  EC55  F018         	call	___flge	;wreg free
  5199   00113E  B0D8               	btfsc	status,0,c
  5200   001140  EFA4  F008         	goto	u2701
  5201   001144  EFA6  F008         	goto	u2700
  5202   001148                     u2701:
  5203   001148  EF1D  F009         	goto	l3476
  5204   00114C                     u2700:
  5205   00114C  0E33               	movlw	51
  5206   00114E  6E09               	movwf	___flge@ff1^0,c
  5207   001150  0E33               	movlw	51
  5208   001152  6E0A               	movwf	(___flge@ff1+1)^0,c
  5209   001154  0E83               	movlw	131
  5210   001156  6E0B               	movwf	(___flge@ff1+2)^0,c
  5211   001158  0E40               	movlw	64
  5212   00115A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5213   00115C  EE20 F014          	lfsr	2,20
  5214   001160  5027               	movf	motor_response@temp^0,w,c
  5215   001162  26D9               	addwf	fsr2l,f,c
  5216   001164  5028               	movf	(motor_response@temp+1)^0,w,c
  5217   001166  22DA               	addwfc	fsr2h,f,c
  5218   001168  CFDE F00D          	movff	postinc2,___flge@ff2
  5219   00116C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5220   001170  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5221   001174  CFDE F010          	movff	postinc2,___flge@ff2+3
  5222   001178  EC55  F018         	call	___flge	;wreg free
  5223   00117C  B0D8               	btfsc	status,0,c
  5224   00117E  EFC3  F008         	goto	u2711
  5225   001182  EFC5  F008         	goto	u2710
  5226   001186                     u2711:
  5227   001186  EF1D  F009         	goto	l3476
  5228   00118A                     u2710:
  5229   00118A  EE20 F014          	lfsr	2,20
  5230   00118E  5027               	movf	motor_response@temp^0,w,c
  5231   001190  26D9               	addwf	fsr2l,f,c
  5232   001192  5028               	movf	(motor_response@temp+1)^0,w,c
  5233   001194  22DA               	addwfc	fsr2h,f,c
  5234   001196  CFDE F009          	movff	postinc2,___flge@ff1
  5235   00119A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5236   00119E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5237   0011A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5238   0011A6  0E00               	movlw	0
  5239   0011A8  6E0D               	movwf	___flge@ff2^0,c
  5240   0011AA  0E00               	movlw	0
  5241   0011AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5242   0011AE  0E90               	movlw	144
  5243   0011B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5244   0011B2  0E40               	movlw	64
  5245   0011B4  6E10               	movwf	(___flge@ff2+3)^0,c
  5246   0011B6  EC55  F018         	call	___flge	;wreg free
  5247   0011BA  B0D8               	btfsc	status,0,c
  5248   0011BC  EFE2  F008         	goto	u2721
  5249   0011C0  EFE4  F008         	goto	u2720
  5250   0011C4                     u2721:
  5251   0011C4  EF1D  F009         	goto	l3476
  5252   0011C8                     u2720:
  5253   0011C8                     
  5254                           ;color.c: 206:             turnPrep(mL, mR);
  5255   0011C8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5256   0011CC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5257   0011D0  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5258   0011D4  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5259   0011D8  ECF6  F01B         	call	_turnPrep	;wreg free
  5260                           
  5261                           ;color.c: 207:             turnRight(mL, mR);
  5262   0011DC  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5263   0011E0  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5264   0011E4  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5265   0011E8  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5266   0011EC  EC1A  F01B         	call	_turnRight	;wreg free
  5267   0011F0                     
  5268                           ;color.c: 208:             _delay((unsigned long)((325)*(64000000/4000.0)));
  5269   0011F0  0E1B               	movlw	27
  5270   0011F2  6E2E               	movwf	(??_motor_response+1)^0,c
  5271   0011F4  0E62               	movlw	98
  5272   0011F6  6E2D               	movwf	??_motor_response^0,c
  5273   0011F8  0E2B               	movlw	43
  5274   0011FA                     u3557:
  5275   0011FA  2EE8               	decfsz	wreg,f,c
  5276   0011FC  D7FE               	bra	u3557
  5277   0011FE  2E2D               	decfsz	??_motor_response^0,f,c
  5278   001200  D7FC               	bra	u3557
  5279   001202  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5280   001204  D7FA               	bra	u3557
  5281   001206  F000               	nop	
  5282   001208                     
  5283                           ;color.c: 209:             norm_stop(mL, mR);
  5284   001208  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5285   00120C  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5286   001210  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5287   001214  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5288   001218  EC23  F01D         	call	_norm_stop	;wreg free
  5289                           
  5290                           ;color.c: 210:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5291   00121C  0E52               	movlw	82
  5292   00121E  6E2E               	movwf	(??_motor_response+1)^0,c
  5293   001220  0E2B               	movlw	43
  5294   001222  6E2D               	movwf	??_motor_response^0,c
  5295   001224  0E00               	movlw	0
  5296   001226                     u3567:
  5297   001226  2EE8               	decfsz	wreg,f,c
  5298   001228  D7FE               	bra	u3567
  5299   00122A  2E2D               	decfsz	??_motor_response^0,f,c
  5300   00122C  D7FC               	bra	u3567
  5301   00122E  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5302   001230  D7FA               	bra	u3567
  5303   001232  D000               	nop2	
  5304                           
  5305                           ;color.c: 211:             return 6;
  5306   001234  0E06               	movlw	6
  5307   001236  EF4A  F00D         	goto	l167
  5308   00123A                     l3476:
  5309                           
  5310                           ;color.c: 213:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  5311   00123A  0E33               	movlw	51
  5312   00123C  6E09               	movwf	___flge@ff1^0,c
  5313   00123E  0E33               	movlw	51
  5314   001240  6E0A               	movwf	(___flge@ff1+1)^0,c
  5315   001242  0E53               	movlw	83
  5316   001244  6E0B               	movwf	(___flge@ff1+2)^0,c
  5317   001246  0E40               	movlw	64
  5318   001248  6E0C               	movwf	(___flge@ff1+3)^0,c
  5319   00124A  EE20 F018          	lfsr	2,24
  5320   00124E  5027               	movf	motor_response@temp^0,w,c
  5321   001250  26D9               	addwf	fsr2l,f,c
  5322   001252  5028               	movf	(motor_response@temp+1)^0,w,c
  5323   001254  22DA               	addwfc	fsr2h,f,c
  5324   001256  CFDE F00D          	movff	postinc2,___flge@ff2
  5325   00125A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5326   00125E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5327   001262  CFDE F010          	movff	postinc2,___flge@ff2+3
  5328   001266  EC55  F018         	call	___flge	;wreg free
  5329   00126A  B0D8               	btfsc	status,0,c
  5330   00126C  EF3A  F009         	goto	u2731
  5331   001270  EF3C  F009         	goto	u2730
  5332   001274                     u2731:
  5333   001274  EF1F  F00A         	goto	l3504
  5334   001278                     u2730:
  5335   001278  EE20 F018          	lfsr	2,24
  5336   00127C  5027               	movf	motor_response@temp^0,w,c
  5337   00127E  26D9               	addwf	fsr2l,f,c
  5338   001280  5028               	movf	(motor_response@temp+1)^0,w,c
  5339   001282  22DA               	addwfc	fsr2h,f,c
  5340   001284  CFDE F009          	movff	postinc2,___flge@ff1
  5341   001288  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5342   00128C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5343   001290  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5344   001294  0E9A               	movlw	154
  5345   001296  6E0D               	movwf	___flge@ff2^0,c
  5346   001298  0E99               	movlw	153
  5347   00129A  6E0E               	movwf	(___flge@ff2+1)^0,c
  5348   00129C  0E79               	movlw	121
  5349   00129E  6E0F               	movwf	(___flge@ff2+2)^0,c
  5350   0012A0  0E40               	movlw	64
  5351   0012A2  6E10               	movwf	(___flge@ff2+3)^0,c
  5352   0012A4  EC55  F018         	call	___flge	;wreg free
  5353   0012A8  B0D8               	btfsc	status,0,c
  5354   0012AA  EF59  F009         	goto	u2741
  5355   0012AE  EF5B  F009         	goto	u2740
  5356   0012B2                     u2741:
  5357   0012B2  EF1F  F00A         	goto	l3504
  5358   0012B6                     u2740:
  5359   0012B6  0ECD               	movlw	205
  5360   0012B8  6E09               	movwf	___flge@ff1^0,c
  5361   0012BA  0ECC               	movlw	204
  5362   0012BC  6E0A               	movwf	(___flge@ff1+1)^0,c
  5363   0012BE  0E2C               	movlw	44
  5364   0012C0  6E0B               	movwf	(___flge@ff1+2)^0,c
  5365   0012C2  0E40               	movlw	64
  5366   0012C4  6E0C               	movwf	(___flge@ff1+3)^0,c
  5367   0012C6  EE20 F010          	lfsr	2,16
  5368   0012CA  5027               	movf	motor_response@temp^0,w,c
  5369   0012CC  26D9               	addwf	fsr2l,f,c
  5370   0012CE  5028               	movf	(motor_response@temp+1)^0,w,c
  5371   0012D0  22DA               	addwfc	fsr2h,f,c
  5372   0012D2  CFDE F00D          	movff	postinc2,___flge@ff2
  5373   0012D6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5374   0012DA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5375   0012DE  CFDE F010          	movff	postinc2,___flge@ff2+3
  5376   0012E2  EC55  F018         	call	___flge	;wreg free
  5377   0012E6  B0D8               	btfsc	status,0,c
  5378   0012E8  EF78  F009         	goto	u2751
  5379   0012EC  EF7A  F009         	goto	u2750
  5380   0012F0                     u2751:
  5381   0012F0  EF1F  F00A         	goto	l3504
  5382   0012F4                     u2750:
  5383   0012F4  EE20 F010          	lfsr	2,16
  5384   0012F8  5027               	movf	motor_response@temp^0,w,c
  5385   0012FA  26D9               	addwf	fsr2l,f,c
  5386   0012FC  5028               	movf	(motor_response@temp+1)^0,w,c
  5387   0012FE  22DA               	addwfc	fsr2h,f,c
  5388   001300  CFDE F009          	movff	postinc2,___flge@ff1
  5389   001304  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5390   001308  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5391   00130C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5392   001310  0ECD               	movlw	205
  5393   001312  6E0D               	movwf	___flge@ff2^0,c
  5394   001314  0ECC               	movlw	204
  5395   001316  6E0E               	movwf	(___flge@ff2+1)^0,c
  5396   001318  0E4C               	movlw	76
  5397   00131A  6E0F               	movwf	(___flge@ff2+2)^0,c
  5398   00131C  0E40               	movlw	64
  5399   00131E  6E10               	movwf	(___flge@ff2+3)^0,c
  5400   001320  EC55  F018         	call	___flge	;wreg free
  5401   001324  B0D8               	btfsc	status,0,c
  5402   001326  EF97  F009         	goto	u2761
  5403   00132A  EF99  F009         	goto	u2760
  5404   00132E                     u2761:
  5405   00132E  EF1F  F00A         	goto	l3504
  5406   001332                     u2760:
  5407   001332  0E00               	movlw	0
  5408   001334  6E09               	movwf	___flge@ff1^0,c
  5409   001336  0E00               	movlw	0
  5410   001338  6E0A               	movwf	(___flge@ff1+1)^0,c
  5411   00133A  0E20               	movlw	32
  5412   00133C  6E0B               	movwf	(___flge@ff1+2)^0,c
  5413   00133E  0E40               	movlw	64
  5414   001340  6E0C               	movwf	(___flge@ff1+3)^0,c
  5415   001342  EE20 F014          	lfsr	2,20
  5416   001346  5027               	movf	motor_response@temp^0,w,c
  5417   001348  26D9               	addwf	fsr2l,f,c
  5418   00134A  5028               	movf	(motor_response@temp+1)^0,w,c
  5419   00134C  22DA               	addwfc	fsr2h,f,c
  5420   00134E  CFDE F00D          	movff	postinc2,___flge@ff2
  5421   001352  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5422   001356  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5423   00135A  CFDE F010          	movff	postinc2,___flge@ff2+3
  5424   00135E  EC55  F018         	call	___flge	;wreg free
  5425   001362  B0D8               	btfsc	status,0,c
  5426   001364  EFB6  F009         	goto	u2771
  5427   001368  EFB8  F009         	goto	u2770
  5428   00136C                     u2771:
  5429   00136C  EF1F  F00A         	goto	l3504
  5430   001370                     u2770:
  5431   001370  EE20 F014          	lfsr	2,20
  5432   001374  5027               	movf	motor_response@temp^0,w,c
  5433   001376  26D9               	addwf	fsr2l,f,c
  5434   001378  5028               	movf	(motor_response@temp+1)^0,w,c
  5435   00137A  22DA               	addwfc	fsr2h,f,c
  5436   00137C  CFDE F009          	movff	postinc2,___flge@ff1
  5437   001380  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5438   001384  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5439   001388  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5440   00138C  0E9A               	movlw	154
  5441   00138E  6E0D               	movwf	___flge@ff2^0,c
  5442   001390  0E99               	movlw	153
  5443   001392  6E0E               	movwf	(___flge@ff2+1)^0,c
  5444   001394  0E39               	movlw	57
  5445   001396  6E0F               	movwf	(___flge@ff2+2)^0,c
  5446   001398  0E40               	movlw	64
  5447   00139A  6E10               	movwf	(___flge@ff2+3)^0,c
  5448   00139C  EC55  F018         	call	___flge	;wreg free
  5449   0013A0  B0D8               	btfsc	status,0,c
  5450   0013A2  EFD5  F009         	goto	u2781
  5451   0013A6  EFD7  F009         	goto	u2780
  5452   0013AA                     u2781:
  5453   0013AA  EF1F  F00A         	goto	l3504
  5454   0013AE                     u2780:
  5455   0013AE                     
  5456                           ;color.c: 214:             LATFbits.LATF0 = !LATFbits.LATF0;
  5457   0013AE  A07E               	btfss	126,0,c	;volatile
  5458   0013B0  EFDC  F009         	goto	u2791
  5459   0013B4  EFE0  F009         	goto	u2790
  5460   0013B8                     u2791:
  5461   0013B8  6A2D               	clrf	??_motor_response^0,c
  5462   0013BA  2A2D               	incf	??_motor_response^0,f,c
  5463   0013BC  EFE1  F009         	goto	u2808
  5464   0013C0                     u2790:
  5465   0013C0  6A2D               	clrf	??_motor_response^0,c
  5466   0013C2                     u2808:
  5467   0013C2  507E               	movf	126,w,c	;volatile
  5468   0013C4  182D               	xorwf	??_motor_response^0,w,c
  5469   0013C6  0BFE               	andlw	-2
  5470   0013C8  182D               	xorwf	??_motor_response^0,w,c
  5471   0013CA  6E7E               	movwf	126,c	;volatile
  5472   0013CC                     
  5473                           ;color.c: 215:             turnPrep(mL, mR);
  5474   0013CC  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5475   0013D0  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5476   0013D4  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5477   0013D8  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5478   0013DC  ECF6  F01B         	call	_turnPrep	;wreg free
  5479   0013E0                     
  5480                           ;color.c: 216:             turnLeft(mL, mR);
  5481   0013E0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5482   0013E4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5483   0013E8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5484   0013EC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5485   0013F0  EC53  F01B         	call	_turnLeft	;wreg free
  5486   0013F4                     
  5487                           ;color.c: 217:             _delay((unsigned long)((330)*(64000000/4000.0)));
  5488   0013F4  0E1B               	movlw	27
  5489   0013F6  6E2E               	movwf	(??_motor_response+1)^0,c
  5490   0013F8  0ECA               	movlw	202
  5491   0013FA  6E2D               	movwf	??_motor_response^0,c
  5492   0013FC  0E10               	movlw	16
  5493   0013FE                     u3577:
  5494   0013FE  2EE8               	decfsz	wreg,f,c
  5495   001400  D7FE               	bra	u3577
  5496   001402  2E2D               	decfsz	??_motor_response^0,f,c
  5497   001404  D7FC               	bra	u3577
  5498   001406  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5499   001408  D7FA               	bra	u3577
  5500   00140A  D000               	nop2	
  5501   00140C                     
  5502                           ;color.c: 218:             norm_stop(mL, mR);
  5503   00140C  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5504   001410  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5505   001414  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5506   001418  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5507   00141C  EC23  F01D         	call	_norm_stop	;wreg free
  5508   001420                     
  5509                           ;color.c: 219:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5510   001420  0E52               	movlw	82
  5511   001422  6E2E               	movwf	(??_motor_response+1)^0,c
  5512   001424  0E2B               	movlw	43
  5513   001426  6E2D               	movwf	??_motor_response^0,c
  5514   001428  0E00               	movlw	0
  5515   00142A                     u3587:
  5516   00142A  2EE8               	decfsz	wreg,f,c
  5517   00142C  D7FE               	bra	u3587
  5518   00142E  2E2D               	decfsz	??_motor_response^0,f,c
  5519   001430  D7FC               	bra	u3587
  5520   001432  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5521   001434  D7FA               	bra	u3587
  5522   001436  D000               	nop2	
  5523   001438                     
  5524                           ;color.c: 220:             return 7;
  5525   001438  0E07               	movlw	7
  5526   00143A  EF4A  F00D         	goto	l167
  5527   00143E                     l3504:
  5528                           
  5529                           ;color.c: 226:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  5530   00143E  EE20 F01C          	lfsr	2,28
  5531   001442  5027               	movf	motor_response@temp^0,w,c
  5532   001444  26D9               	addwf	fsr2l,f,c
  5533   001446  5028               	movf	(motor_response@temp+1)^0,w,c
  5534   001448  22DA               	addwfc	fsr2h,f,c
  5535   00144A  CFDE F009          	movff	postinc2,___flge@ff1
  5536   00144E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5537   001452  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5538   001456  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5539   00145A  C0CC  F00D         	movff	_CR3U,___flge@ff2
  5540   00145E  C0CD  F00E         	movff	_CR3U+1,___flge@ff2+1
  5541   001462  C0CE  F00F         	movff	_CR3U+2,___flge@ff2+2
  5542   001466  C0CF  F010         	movff	_CR3U+3,___flge@ff2+3
  5543   00146A  EC55  F018         	call	___flge	;wreg free
  5544   00146E  B0D8               	btfsc	status,0,c
  5545   001470  EF3C  F00A         	goto	u2811
  5546   001474  EF3E  F00A         	goto	u2810
  5547   001478                     u2811:
  5548   001478  EFDD  F00B         	goto	l3550
  5549   00147C                     u2810:
  5550   00147C  C0C8  F009         	movff	_CR3L,___flge@ff1
  5551   001480  C0C9  F00A         	movff	_CR3L+1,___flge@ff1+1
  5552   001484  C0CA  F00B         	movff	_CR3L+2,___flge@ff1+2
  5553   001488  C0CB  F00C         	movff	_CR3L+3,___flge@ff1+3
  5554   00148C  EE20 F01C          	lfsr	2,28
  5555   001490  5027               	movf	motor_response@temp^0,w,c
  5556   001492  26D9               	addwf	fsr2l,f,c
  5557   001494  5028               	movf	(motor_response@temp+1)^0,w,c
  5558   001496  22DA               	addwfc	fsr2h,f,c
  5559   001498  CFDE F00D          	movff	postinc2,___flge@ff2
  5560   00149C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5561   0014A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5562   0014A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5563   0014A8  EC55  F018         	call	___flge	;wreg free
  5564   0014AC  B0D8               	btfsc	status,0,c
  5565   0014AE  EF5B  F00A         	goto	u2821
  5566   0014B2  EF5D  F00A         	goto	u2820
  5567   0014B6                     u2821:
  5568   0014B6  EFDD  F00B         	goto	l3550
  5569   0014BA                     u2820:
  5570   0014BA                     
  5571                           ;color.c: 227:         if (temp->norm_G > 8) {
  5572   0014BA  0E00               	movlw	0
  5573   0014BC  6E09               	movwf	___flge@ff1^0,c
  5574   0014BE  0E00               	movlw	0
  5575   0014C0  6E0A               	movwf	(___flge@ff1+1)^0,c
  5576   0014C2  0E00               	movlw	0
  5577   0014C4  6E0B               	movwf	(___flge@ff1+2)^0,c
  5578   0014C6  0E41               	movlw	65
  5579   0014C8  6E0C               	movwf	(___flge@ff1+3)^0,c
  5580   0014CA  EE20 F014          	lfsr	2,20
  5581   0014CE  5027               	movf	motor_response@temp^0,w,c
  5582   0014D0  26D9               	addwf	fsr2l,f,c
  5583   0014D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5584   0014D4  22DA               	addwfc	fsr2h,f,c
  5585   0014D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5586   0014DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5587   0014DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5588   0014E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5589   0014E6  EC55  F018         	call	___flge	;wreg free
  5590   0014EA  B0D8               	btfsc	status,0,c
  5591   0014EC  EF7A  F00A         	goto	u2831
  5592   0014F0  EF7C  F00A         	goto	u2830
  5593   0014F4                     u2831:
  5594   0014F4  EF9F  F00A         	goto	l3518
  5595   0014F8                     u2830:
  5596   0014F8                     
  5597                           ;color.c: 228:             turnPrep(mL, mR);
  5598   0014F8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5599   0014FC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5600   001500  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5601   001504  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5602   001508  ECF6  F01B         	call	_turnPrep	;wreg free
  5603                           
  5604                           ;color.c: 229:             turnRight(mL, mR);
  5605   00150C  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5606   001510  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5607   001514  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5608   001518  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5609   00151C  EC1A  F01B         	call	_turnRight	;wreg free
  5610   001520                     
  5611                           ;color.c: 230:             _delay((unsigned long)((225)*(64000000/4000.0)));
  5612   001520  0E13               	movlw	19
  5613   001522  6E2E               	movwf	(??_motor_response+1)^0,c
  5614   001524  0E44               	movlw	68
  5615   001526  6E2D               	movwf	??_motor_response^0,c
  5616   001528  0E44               	movlw	68
  5617   00152A                     u3597:
  5618   00152A  2EE8               	decfsz	wreg,f,c
  5619   00152C  D7FE               	bra	u3597
  5620   00152E  2E2D               	decfsz	??_motor_response^0,f,c
  5621   001530  D7FC               	bra	u3597
  5622   001532  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5623   001534  D7FA               	bra	u3597
  5624   001536  D000               	nop2	
  5625   001538                     
  5626                           ;color.c: 231:             return 1;
  5627   001538  0E01               	movlw	1
  5628   00153A  EF4A  F00D         	goto	l167
  5629   00153E                     l3518:
  5630                           
  5631                           ;color.c: 233:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  5632   00153E  0E00               	movlw	0
  5633   001540  6E09               	movwf	___flge@ff1^0,c
  5634   001542  0E00               	movlw	0
  5635   001544  6E0A               	movwf	(___flge@ff1+1)^0,c
  5636   001546  0E90               	movlw	144
  5637   001548  6E0B               	movwf	(___flge@ff1+2)^0,c
  5638   00154A  0E40               	movlw	64
  5639   00154C  6E0C               	movwf	(___flge@ff1+3)^0,c
  5640   00154E  EE20 F018          	lfsr	2,24
  5641   001552  5027               	movf	motor_response@temp^0,w,c
  5642   001554  26D9               	addwf	fsr2l,f,c
  5643   001556  5028               	movf	(motor_response@temp+1)^0,w,c
  5644   001558  22DA               	addwfc	fsr2h,f,c
  5645   00155A  CFDE F00D          	movff	postinc2,___flge@ff2
  5646   00155E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5647   001562  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5648   001566  CFDE F010          	movff	postinc2,___flge@ff2+3
  5649   00156A  EC55  F018         	call	___flge	;wreg free
  5650   00156E  B0D8               	btfsc	status,0,c
  5651   001570  EFBC  F00A         	goto	u2841
  5652   001574  EFBE  F00A         	goto	u2840
  5653   001578                     u2841:
  5654   001578  EF00  F00B         	goto	l3530
  5655   00157C                     u2840:
  5656   00157C  EE20 F018          	lfsr	2,24
  5657   001580  5027               	movf	motor_response@temp^0,w,c
  5658   001582  26D9               	addwf	fsr2l,f,c
  5659   001584  5028               	movf	(motor_response@temp+1)^0,w,c
  5660   001586  22DA               	addwfc	fsr2h,f,c
  5661   001588  CFDE F009          	movff	postinc2,___flge@ff1
  5662   00158C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5663   001590  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5664   001594  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5665   001598  0E00               	movlw	0
  5666   00159A  6E0D               	movwf	___flge@ff2^0,c
  5667   00159C  0E00               	movlw	0
  5668   00159E  6E0E               	movwf	(___flge@ff2+1)^0,c
  5669   0015A0  0EB0               	movlw	176
  5670   0015A2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5671   0015A4  0E40               	movlw	64
  5672   0015A6  6E10               	movwf	(___flge@ff2+3)^0,c
  5673   0015A8  EC55  F018         	call	___flge	;wreg free
  5674   0015AC  B0D8               	btfsc	status,0,c
  5675   0015AE  EFDB  F00A         	goto	u2851
  5676   0015B2  EFDD  F00A         	goto	u2850
  5677   0015B6                     u2851:
  5678   0015B6  EF00  F00B         	goto	l3530
  5679   0015BA                     u2850:
  5680   0015BA                     
  5681                           ;color.c: 234:             turnPrep(mL, mR);
  5682   0015BA  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5683   0015BE  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5684   0015C2  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5685   0015C6  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5686   0015CA  ECF6  F01B         	call	_turnPrep	;wreg free
  5687                           
  5688                           ;color.c: 235:             turnLeft(mL, mR);
  5689   0015CE  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5690   0015D2  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5691   0015D6  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5692   0015DA  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5693   0015DE  EC53  F01B         	call	_turnLeft	;wreg free
  5694   0015E2                     
  5695                           ;color.c: 236:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5696   0015E2  0E12               	movlw	18
  5697   0015E4  6E2E               	movwf	(??_motor_response+1)^0,c
  5698   0015E6  0E0C               	movlw	12
  5699   0015E8  6E2D               	movwf	??_motor_response^0,c
  5700   0015EA  0E95               	movlw	149
  5701   0015EC                     u3607:
  5702   0015EC  2EE8               	decfsz	wreg,f,c
  5703   0015EE  D7FE               	bra	u3607
  5704   0015F0  2E2D               	decfsz	??_motor_response^0,f,c
  5705   0015F2  D7FC               	bra	u3607
  5706   0015F4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5707   0015F6  D7FA               	bra	u3607
  5708   0015F8  F000               	nop	
  5709   0015FA                     
  5710                           ;color.c: 237:             return 2;
  5711   0015FA  0E02               	movlw	2
  5712   0015FC  EF4A  F00D         	goto	l167
  5713   001600                     l3530:
  5714                           
  5715                           ;color.c: 239:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  5716   001600  0ECD               	movlw	205
  5717   001602  6E09               	movwf	___flge@ff1^0,c
  5718   001604  0ECC               	movlw	204
  5719   001606  6E0A               	movwf	(___flge@ff1+1)^0,c
  5720   001608  0E2C               	movlw	44
  5721   00160A  6E0B               	movwf	(___flge@ff1+2)^0,c
  5722   00160C  0E40               	movlw	64
  5723   00160E  6E0C               	movwf	(___flge@ff1+3)^0,c
  5724   001610  EE20 F018          	lfsr	2,24
  5725   001614  5027               	movf	motor_response@temp^0,w,c
  5726   001616  26D9               	addwf	fsr2l,f,c
  5727   001618  5028               	movf	(motor_response@temp+1)^0,w,c
  5728   00161A  22DA               	addwfc	fsr2h,f,c
  5729   00161C  CFDE F00D          	movff	postinc2,___flge@ff2
  5730   001620  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5731   001624  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5732   001628  CFDE F010          	movff	postinc2,___flge@ff2+3
  5733   00162C  EC55  F018         	call	___flge	;wreg free
  5734   001630  B0D8               	btfsc	status,0,c
  5735   001632  EF1D  F00B         	goto	u2861
  5736   001636  EF1F  F00B         	goto	u2860
  5737   00163A                     u2861:
  5738   00163A  EFDD  F00B         	goto	l3550
  5739   00163E                     u2860:
  5740   00163E  EE20 F018          	lfsr	2,24
  5741   001642  5027               	movf	motor_response@temp^0,w,c
  5742   001644  26D9               	addwf	fsr2l,f,c
  5743   001646  5028               	movf	(motor_response@temp+1)^0,w,c
  5744   001648  22DA               	addwfc	fsr2h,f,c
  5745   00164A  CFDE F009          	movff	postinc2,___flge@ff1
  5746   00164E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5747   001652  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5748   001656  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5749   00165A  0E33               	movlw	51
  5750   00165C  6E0D               	movwf	___flge@ff2^0,c
  5751   00165E  0E33               	movlw	51
  5752   001660  6E0E               	movwf	(___flge@ff2+1)^0,c
  5753   001662  0E53               	movlw	83
  5754   001664  6E0F               	movwf	(___flge@ff2+2)^0,c
  5755   001666  0E40               	movlw	64
  5756   001668  6E10               	movwf	(___flge@ff2+3)^0,c
  5757   00166A  EC55  F018         	call	___flge	;wreg free
  5758   00166E  B0D8               	btfsc	status,0,c
  5759   001670  EF3C  F00B         	goto	u2871
  5760   001674  EF3E  F00B         	goto	u2870
  5761   001678                     u2871:
  5762   001678  EFDD  F00B         	goto	l3550
  5763   00167C                     u2870:
  5764   00167C  0ECD               	movlw	205
  5765   00167E  6E09               	movwf	___flge@ff1^0,c
  5766   001680  0ECC               	movlw	204
  5767   001682  6E0A               	movwf	(___flge@ff1+1)^0,c
  5768   001684  0E2C               	movlw	44
  5769   001686  6E0B               	movwf	(___flge@ff1+2)^0,c
  5770   001688  0E40               	movlw	64
  5771   00168A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5772   00168C  EE20 F010          	lfsr	2,16
  5773   001690  5027               	movf	motor_response@temp^0,w,c
  5774   001692  26D9               	addwf	fsr2l,f,c
  5775   001694  5028               	movf	(motor_response@temp+1)^0,w,c
  5776   001696  22DA               	addwfc	fsr2h,f,c
  5777   001698  CFDE F00D          	movff	postinc2,___flge@ff2
  5778   00169C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5779   0016A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5780   0016A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5781   0016A8  EC55  F018         	call	___flge	;wreg free
  5782   0016AC  B0D8               	btfsc	status,0,c
  5783   0016AE  EF5B  F00B         	goto	u2881
  5784   0016B2  EF5D  F00B         	goto	u2880
  5785   0016B6                     u2881:
  5786   0016B6  EFDD  F00B         	goto	l3550
  5787   0016BA                     u2880:
  5788   0016BA  EE20 F010          	lfsr	2,16
  5789   0016BE  5027               	movf	motor_response@temp^0,w,c
  5790   0016C0  26D9               	addwf	fsr2l,f,c
  5791   0016C2  5028               	movf	(motor_response@temp+1)^0,w,c
  5792   0016C4  22DA               	addwfc	fsr2h,f,c
  5793   0016C6  CFDE F009          	movff	postinc2,___flge@ff1
  5794   0016CA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5795   0016CE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5796   0016D2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5797   0016D6  0E33               	movlw	51
  5798   0016D8  6E0D               	movwf	___flge@ff2^0,c
  5799   0016DA  0E33               	movlw	51
  5800   0016DC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5801   0016DE  0E53               	movlw	83
  5802   0016E0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5803   0016E2  0E40               	movlw	64
  5804   0016E4  6E10               	movwf	(___flge@ff2+3)^0,c
  5805   0016E6  EC55  F018         	call	___flge	;wreg free
  5806   0016EA  B0D8               	btfsc	status,0,c
  5807   0016EC  EF7A  F00B         	goto	u2891
  5808   0016F0  EF7C  F00B         	goto	u2890
  5809   0016F4                     u2891:
  5810   0016F4  EFDD  F00B         	goto	l3550
  5811   0016F8                     u2890:
  5812   0016F8  0ECD               	movlw	205
  5813   0016FA  6E09               	movwf	___flge@ff1^0,c
  5814   0016FC  0ECC               	movlw	204
  5815   0016FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5816   001700  0E2C               	movlw	44
  5817   001702  6E0B               	movwf	(___flge@ff1+2)^0,c
  5818   001704  0E40               	movlw	64
  5819   001706  6E0C               	movwf	(___flge@ff1+3)^0,c
  5820   001708  EE20 F014          	lfsr	2,20
  5821   00170C  5027               	movf	motor_response@temp^0,w,c
  5822   00170E  26D9               	addwf	fsr2l,f,c
  5823   001710  5028               	movf	(motor_response@temp+1)^0,w,c
  5824   001712  22DA               	addwfc	fsr2h,f,c
  5825   001714  CFDE F00D          	movff	postinc2,___flge@ff2
  5826   001718  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5827   00171C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5828   001720  CFDE F010          	movff	postinc2,___flge@ff2+3
  5829   001724  EC55  F018         	call	___flge	;wreg free
  5830   001728  B0D8               	btfsc	status,0,c
  5831   00172A  EF99  F00B         	goto	u2901
  5832   00172E  EF9B  F00B         	goto	u2900
  5833   001732                     u2901:
  5834   001732  EFDD  F00B         	goto	l3550
  5835   001736                     u2900:
  5836   001736  EE20 F014          	lfsr	2,20
  5837   00173A  5027               	movf	motor_response@temp^0,w,c
  5838   00173C  26D9               	addwf	fsr2l,f,c
  5839   00173E  5028               	movf	(motor_response@temp+1)^0,w,c
  5840   001740  22DA               	addwfc	fsr2h,f,c
  5841   001742  CFDE F009          	movff	postinc2,___flge@ff1
  5842   001746  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5843   00174A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5844   00174E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5845   001752  0E33               	movlw	51
  5846   001754  6E0D               	movwf	___flge@ff2^0,c
  5847   001756  0E33               	movlw	51
  5848   001758  6E0E               	movwf	(___flge@ff2+1)^0,c
  5849   00175A  0E53               	movlw	83
  5850   00175C  6E0F               	movwf	(___flge@ff2+2)^0,c
  5851   00175E  0E40               	movlw	64
  5852   001760  6E10               	movwf	(___flge@ff2+3)^0,c
  5853   001762  EC55  F018         	call	___flge	;wreg free
  5854   001766  B0D8               	btfsc	status,0,c
  5855   001768  EFB8  F00B         	goto	u2911
  5856   00176C  EFBA  F00B         	goto	u2910
  5857   001770                     u2911:
  5858   001770  EFDD  F00B         	goto	l3550
  5859   001774                     u2910:
  5860   001774                     
  5861                           ;color.c: 240:             turnPrep(mL, mR);
  5862   001774  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5863   001778  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5864   00177C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5865   001780  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5866   001784  ECF6  F01B         	call	_turnPrep	;wreg free
  5867                           
  5868                           ;color.c: 241:             turnLeft(mL, mR);
  5869   001788  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5870   00178C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5871   001790  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5872   001794  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5873   001798  EC53  F01B         	call	_turnLeft	;wreg free
  5874   00179C                     
  5875                           ;color.c: 242:             _delay((unsigned long)((385)*(64000000/4000.0)));
  5876   00179C  0E20               	movlw	32
  5877   00179E  6E2E               	movwf	(??_motor_response+1)^0,c
  5878   0017A0  0E40               	movlw	64
  5879   0017A2  6E2D               	movwf	??_motor_response^0,c
  5880   0017A4  0EE9               	movlw	233
  5881   0017A6                     u3617:
  5882   0017A6  2EE8               	decfsz	wreg,f,c
  5883   0017A8  D7FE               	bra	u3617
  5884   0017AA  2E2D               	decfsz	??_motor_response^0,f,c
  5885   0017AC  D7FC               	bra	u3617
  5886   0017AE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5887   0017B0  D7FA               	bra	u3617
  5888   0017B2  F000               	nop	
  5889   0017B4                     
  5890                           ;color.c: 243:             return 3;
  5891   0017B4  0E03               	movlw	3
  5892   0017B6  EF4A  F00D         	goto	l167
  5893   0017BA                     l3550:
  5894                           
  5895                           ;color.c: 246:     if (temp->norm_C > CR1L) {
  5896   0017BA  C047  F009         	movff	_CR1L,___flge@ff1
  5897   0017BE  C048  F00A         	movff	_CR1L+1,___flge@ff1+1
  5898   0017C2  C049  F00B         	movff	_CR1L+2,___flge@ff1+2
  5899   0017C6  C04A  F00C         	movff	_CR1L+3,___flge@ff1+3
  5900   0017CA  EE20 F01C          	lfsr	2,28
  5901   0017CE  5027               	movf	motor_response@temp^0,w,c
  5902   0017D0  26D9               	addwf	fsr2l,f,c
  5903   0017D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5904   0017D4  22DA               	addwfc	fsr2h,f,c
  5905   0017D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5906   0017DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5907   0017DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5908   0017E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5909   0017E6  EC55  F018         	call	___flge	;wreg free
  5910   0017EA  B0D8               	btfsc	status,0,c
  5911   0017EC  EFFA  F00B         	goto	u2921
  5912   0017F0  EFFC  F00B         	goto	u2920
  5913   0017F4                     u2921:
  5914   0017F4  EFA8  F00C         	goto	l3588
  5915   0017F8                     u2920:
  5916   0017F8                     
  5917                           ;color.c: 247:         if (temp->norm_B > 5) {
  5918   0017F8  0E00               	movlw	0
  5919   0017FA  6E09               	movwf	___flge@ff1^0,c
  5920   0017FC  0E00               	movlw	0
  5921   0017FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5922   001800  0EA0               	movlw	160
  5923   001802  6E0B               	movwf	(___flge@ff1+2)^0,c
  5924   001804  0E40               	movlw	64
  5925   001806  6E0C               	movwf	(___flge@ff1+3)^0,c
  5926   001808  EE20 F018          	lfsr	2,24
  5927   00180C  5027               	movf	motor_response@temp^0,w,c
  5928   00180E  26D9               	addwf	fsr2l,f,c
  5929   001810  5028               	movf	(motor_response@temp+1)^0,w,c
  5930   001812  22DA               	addwfc	fsr2h,f,c
  5931   001814  CFDE F00D          	movff	postinc2,___flge@ff2
  5932   001818  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5933   00181C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5934   001820  CFDE F010          	movff	postinc2,___flge@ff2+3
  5935   001824  EC55  F018         	call	___flge	;wreg free
  5936   001828  B0D8               	btfsc	status,0,c
  5937   00182A  EF19  F00C         	goto	u2931
  5938   00182E  EF1B  F00C         	goto	u2930
  5939   001832                     u2931:
  5940   001832  EF60  F00C         	goto	l3568
  5941   001836                     u2930:
  5942   001836                     
  5943                           ;color.c: 248:             reverse(mL, mR);
  5944   001836  C029  F01C         	movff	motor_response@mL,reverse@mL
  5945   00183A  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5946   00183E  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5947   001842  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5948   001846  ECD7  F018         	call	_reverse	;wreg free
  5949   00184A                     
  5950                           ;color.c: 249:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5951   00184A  0EF4               	movlw	244
  5952   00184C  6E2E               	movwf	(??_motor_response+1)^0,c
  5953   00184E  0E82               	movlw	130
  5954   001850  6E2D               	movwf	??_motor_response^0,c
  5955   001852  0E05               	movlw	5
  5956   001854                     u3627:
  5957   001854  2EE8               	decfsz	wreg,f,c
  5958   001856  D7FE               	bra	u3627
  5959   001858  2E2D               	decfsz	??_motor_response^0,f,c
  5960   00185A  D7FC               	bra	u3627
  5961   00185C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5962   00185E  D7FA               	bra	u3627
  5963   001860  F000               	nop	
  5964   001862                     
  5965                           ;color.c: 250:             norm_stop(mL, mR);
  5966   001862  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5967   001866  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5968   00186A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5969   00186E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5970   001872  EC23  F01D         	call	_norm_stop	;wreg free
  5971                           
  5972                           ;color.c: 251:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5973   001876  0E09               	movlw	9
  5974   001878  6E2E               	movwf	(??_motor_response+1)^0,c
  5975   00187A  0E1E               	movlw	30
  5976   00187C  6E2D               	movwf	??_motor_response^0,c
  5977   00187E  0EE4               	movlw	228
  5978   001880                     u3637:
  5979   001880  2EE8               	decfsz	wreg,f,c
  5980   001882  D7FE               	bra	u3637
  5981   001884  2E2D               	decfsz	??_motor_response^0,f,c
  5982   001886  D7FC               	bra	u3637
  5983   001888  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5984   00188A  D7FA               	bra	u3637
  5985   00188C  D000               	nop2	
  5986   00188E                     
  5987                           ;color.c: 252:             turnRight(mL, mR);
  5988   00188E  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5989   001892  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5990   001896  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5991   00189A  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5992   00189E  EC1A  F01B         	call	_turnRight	;wreg free
  5993   0018A2                     
  5994                           ;color.c: 253:             _delay((unsigned long)((205)*(64000000/4000.0)));
  5995   0018A2  0E11               	movlw	17
  5996   0018A4  6E2E               	movwf	(??_motor_response+1)^0,c
  5997   0018A6  0EA4               	movlw	164
  5998   0018A8  6E2D               	movwf	??_motor_response^0,c
  5999   0018AA  0EB0               	movlw	176
  6000   0018AC                     u3647:
  6001   0018AC  2EE8               	decfsz	wreg,f,c
  6002   0018AE  D7FE               	bra	u3647
  6003   0018B0  2E2D               	decfsz	??_motor_response^0,f,c
  6004   0018B2  D7FC               	bra	u3647
  6005   0018B4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6006   0018B6  D7FA               	bra	u3647
  6007   0018B8  D000               	nop2	
  6008   0018BA                     
  6009                           ;color.c: 254:             return 4;
  6010   0018BA  0E04               	movlw	4
  6011   0018BC  EF4A  F00D         	goto	l167
  6012   0018C0                     l3568:
  6013                           
  6014                           ;color.c: 257:         if (temp->norm_B < 5) {
  6015   0018C0  EE20 F018          	lfsr	2,24
  6016   0018C4  5027               	movf	motor_response@temp^0,w,c
  6017   0018C6  26D9               	addwf	fsr2l,f,c
  6018   0018C8  5028               	movf	(motor_response@temp+1)^0,w,c
  6019   0018CA  22DA               	addwfc	fsr2h,f,c
  6020   0018CC  CFDE F009          	movff	postinc2,___flge@ff1
  6021   0018D0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  6022   0018D4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  6023   0018D8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  6024   0018DC  0E00               	movlw	0
  6025   0018DE  6E0D               	movwf	___flge@ff2^0,c
  6026   0018E0  0E00               	movlw	0
  6027   0018E2  6E0E               	movwf	(___flge@ff2+1)^0,c
  6028   0018E4  0EA0               	movlw	160
  6029   0018E6  6E0F               	movwf	(___flge@ff2+2)^0,c
  6030   0018E8  0E40               	movlw	64
  6031   0018EA  6E10               	movwf	(___flge@ff2+3)^0,c
  6032   0018EC  EC55  F018         	call	___flge	;wreg free
  6033   0018F0  B0D8               	btfsc	status,0,c
  6034   0018F2  EF7D  F00C         	goto	u2941
  6035   0018F6  EF7F  F00C         	goto	u2940
  6036   0018FA                     u2941:
  6037   0018FA  EF4A  F00D         	goto	l167
  6038   0018FE                     u2940:
  6039   0018FE                     
  6040                           ;color.c: 259:             motor_return = 1;
  6041   0018FE  0E01               	movlw	1
  6042   001900  0100               	movlb	0	; () banked
  6043   001902  6FDA               	movwf	_motor_return& (0+255),b
  6044   001904                     
  6045                           ; BSR set to: 0
  6046                           ;color.c: 260:             LATDbits.LATD4 = 1;
  6047   001904  887C               	bsf	124,4,c	;volatile
  6048   001906                     
  6049                           ; BSR set to: 0
  6050                           ;color.c: 261:             turnPrep(mL, mR);
  6051   001906  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6052   00190A  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6053   00190E  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6054   001912  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6055   001916  ECF6  F01B         	call	_turnPrep	;wreg free
  6056   00191A                     
  6057                           ;color.c: 262:             turnLeft(mL, mR);
  6058   00191A  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6059   00191E  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6060   001922  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6061   001926  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6062   00192A  EC53  F01B         	call	_turnLeft	;wreg free
  6063   00192E                     
  6064                           ;color.c: 263:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6065   00192E  0E20               	movlw	32
  6066   001930  6E2E               	movwf	(??_motor_response+1)^0,c
  6067   001932  0E40               	movlw	64
  6068   001934  6E2D               	movwf	??_motor_response^0,c
  6069   001936  0EE9               	movlw	233
  6070   001938                     u3657:
  6071   001938  2EE8               	decfsz	wreg,f,c
  6072   00193A  D7FE               	bra	u3657
  6073   00193C  2E2D               	decfsz	??_motor_response^0,f,c
  6074   00193E  D7FC               	bra	u3657
  6075   001940  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6076   001942  D7FA               	bra	u3657
  6077   001944  F000               	nop	
  6078   001946                     
  6079                           ;color.c: 264:             LATHbits.LATH3 = 0;
  6080   001946  9680               	bcf	128,3,c	;volatile
  6081   001948                     
  6082                           ;color.c: 265:             LATDbits.LATD7 = 1;
  6083   001948  8E7C               	bsf	124,7,c	;volatile
  6084   00194A                     
  6085                           ;color.c: 266:             return 8;
  6086   00194A  0E08               	movlw	8
  6087   00194C  EF4A  F00D         	goto	l167
  6088   001950                     l3588:
  6089                           
  6090                           ;color.c: 270:         if (lost_ctr < 2) {
  6091   001950  BE50               	btfsc	(_lost_ctr+1)^0,7,c
  6092   001952  EFB6  F00C         	goto	u2950
  6093   001956  5050               	movf	(_lost_ctr+1)^0,w,c
  6094   001958  E107               	bnz	u2951
  6095   00195A  0E02               	movlw	2
  6096   00195C  5C4F               	subwf	_lost_ctr^0,w,c
  6097   00195E  B0D8               	btfsc	status,0,c
  6098   001960  EFB4  F00C         	goto	u2951
  6099   001964  EFB6  F00C         	goto	u2950
  6100   001968                     u2951:
  6101   001968  EFBA  F00C         	goto	l3592
  6102   00196C                     u2950:
  6103   00196C                     
  6104                           ;color.c: 271:             lost_ctr++;
  6105   00196C  4A4F               	infsnz	_lost_ctr^0,f,c
  6106   00196E  2A50               	incf	(_lost_ctr+1)^0,f,c
  6107                           
  6108                           ;color.c: 272:         } else {
  6109   001970  EF4A  F00D         	goto	l167
  6110   001974                     l3592:
  6111                           
  6112                           ;color.c: 273:             turnPrep(mL, mR);
  6113   001974  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6114   001978  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6115   00197C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6116   001980  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6117   001984  ECF6  F01B         	call	_turnPrep	;wreg free
  6118   001988                     
  6119                           ;color.c: 275:             for (int j = 0; j <= 75; j++) {
  6120   001988  0E00               	movlw	0
  6121   00198A  6E30               	movwf	(motor_response@j+1)^0,c
  6122   00198C  0E00               	movlw	0
  6123   00198E  6E2F               	movwf	motor_response@j^0,c
  6124   001990  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6125   001992  EFD4  F00C         	goto	u2961
  6126   001996  5030               	movf	(motor_response@j+1)^0,w,c
  6127   001998  E109               	bnz	u2960
  6128   00199A  0E4C               	movlw	76
  6129   00199C  5C2F               	subwf	motor_response@j^0,w,c
  6130   00199E  A0D8               	btfss	status,0,c
  6131   0019A0  EFD4  F00C         	goto	u2961
  6132   0019A4  EFD6  F00C         	goto	u2960
  6133   0019A8                     u2961:
  6134   0019A8  EFD8  F00C         	goto	l3600
  6135   0019AC                     u2960:
  6136   0019AC  EF13  F00D         	goto	l3608
  6137   0019B0                     l3600:
  6138                           
  6139                           ;color.c: 276:                 turnLeft(mL, mR);
  6140   0019B0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6141   0019B4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6142   0019B8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6143   0019BC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6144   0019C0  EC53  F01B         	call	_turnLeft	;wreg free
  6145   0019C4                     
  6146                           ;color.c: 277:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  6147   0019C4  0E03               	movlw	3
  6148   0019C6  6E2E               	movwf	(??_motor_response+1)^0,c
  6149   0019C8  0E70               	movlw	112
  6150   0019CA  6E2D               	movwf	??_motor_response^0,c
  6151   0019CC  0E5C               	movlw	92
  6152   0019CE                     u3667:
  6153   0019CE  2EE8               	decfsz	wreg,f,c
  6154   0019D0  D7FE               	bra	u3667
  6155   0019D2  2E2D               	decfsz	??_motor_response^0,f,c
  6156   0019D4  D7FC               	bra	u3667
  6157   0019D6  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6158   0019D8  D7FA               	bra	u3667
  6159   0019DA  D000               	nop2	
  6160   0019DC                     
  6161                           ;color.c: 278:                 norm_stop(mL, mR);
  6162   0019DC  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6163   0019E0  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6164   0019E4  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6165   0019E8  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6166   0019EC  EC23  F01D         	call	_norm_stop	;wreg free
  6167                           
  6168                           ;color.c: 279:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  6169   0019F0  0E05               	movlw	5
  6170   0019F2  6E2E               	movwf	(??_motor_response+1)^0,c
  6171   0019F4  0EDF               	movlw	223
  6172   0019F6  6E2D               	movwf	??_motor_response^0,c
  6173   0019F8  0EBC               	movlw	188
  6174   0019FA                     u3677:
  6175   0019FA  2EE8               	decfsz	wreg,f,c
  6176   0019FC  D7FE               	bra	u3677
  6177   0019FE  2E2D               	decfsz	??_motor_response^0,f,c
  6178   001A00  D7FC               	bra	u3677
  6179   001A02  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6180   001A04  D7FA               	bra	u3677
  6181   001A06                     
  6182                           ;color.c: 280:             }
  6183   001A06  4A2F               	infsnz	motor_response@j^0,f,c
  6184   001A08  2A30               	incf	(motor_response@j+1)^0,f,c
  6185   001A0A  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6186   001A0C  EF11  F00D         	goto	u2971
  6187   001A10  5030               	movf	(motor_response@j+1)^0,w,c
  6188   001A12  E109               	bnz	u2970
  6189   001A14  0E4C               	movlw	76
  6190   001A16  5C2F               	subwf	motor_response@j^0,w,c
  6191   001A18  A0D8               	btfss	status,0,c
  6192   001A1A  EF11  F00D         	goto	u2971
  6193   001A1E  EF13  F00D         	goto	u2970
  6194   001A22                     u2971:
  6195   001A22  EFD8  F00C         	goto	l3600
  6196   001A26                     u2970:
  6197   001A26                     l3608:
  6198                           
  6199                           ;color.c: 281:             turnLeft(mL, mR);
  6200   001A26  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6201   001A2A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6202   001A2E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6203   001A32  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6204   001A36  EC53  F01B         	call	_turnLeft	;wreg free
  6205   001A3A                     
  6206                           ;color.c: 282:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6207   001A3A  0E20               	movlw	32
  6208   001A3C  6E2E               	movwf	(??_motor_response+1)^0,c
  6209   001A3E  0E40               	movlw	64
  6210   001A40  6E2D               	movwf	??_motor_response^0,c
  6211   001A42  0EE9               	movlw	233
  6212   001A44                     u3687:
  6213   001A44  2EE8               	decfsz	wreg,f,c
  6214   001A46  D7FE               	bra	u3687
  6215   001A48  2E2D               	decfsz	??_motor_response^0,f,c
  6216   001A4A  D7FC               	bra	u3687
  6217   001A4C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6218   001A4E  D7FA               	bra	u3687
  6219   001A50  F000               	nop	
  6220   001A52                     
  6221                           ;color.c: 283:             norm_stop(mL, mR);
  6222   001A52  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6223   001A56  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6224   001A5A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6225   001A5E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6226   001A62  EC23  F01D         	call	_norm_stop	;wreg free
  6227                           
  6228                           ;color.c: 284:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  6229   001A66  0E52               	movlw	82
  6230   001A68  6E2E               	movwf	(??_motor_response+1)^0,c
  6231   001A6A  0E2B               	movlw	43
  6232   001A6C  6E2D               	movwf	??_motor_response^0,c
  6233   001A6E  0E00               	movlw	0
  6234   001A70                     u3697:
  6235   001A70  2EE8               	decfsz	wreg,f,c
  6236   001A72  D7FE               	bra	u3697
  6237   001A74  2E2D               	decfsz	??_motor_response^0,f,c
  6238   001A76  D7FC               	bra	u3697
  6239   001A78  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6240   001A7A  D7FA               	bra	u3697
  6241   001A7C  D000               	nop2	
  6242   001A7E                     
  6243                           ;color.c: 285:             motor_return = 1;
  6244   001A7E  0E01               	movlw	1
  6245   001A80  0100               	movlb	0	; () banked
  6246   001A82  6FDA               	movwf	_motor_return& (0+255),b
  6247   001A84                     
  6248                           ; BSR set to: 0
  6249                           ;color.c: 286:             buggy_step--;
  6250   001A84  0651               	decf	_buggy_step^0,f,c
  6251   001A86  A0D8               	btfss	status,0,c
  6252   001A88  0652               	decf	(_buggy_step+1)^0,f,c
  6253   001A8A                     
  6254                           ; BSR set to: 0
  6255                           ;color.c: 287:             lost_ctr = 0;
  6256   001A8A  0E00               	movlw	0
  6257   001A8C  6E50               	movwf	(_lost_ctr+1)^0,c
  6258   001A8E  0E00               	movlw	0
  6259   001A90  6E4F               	movwf	_lost_ctr^0,c
  6260   001A92                     
  6261                           ; BSR set to: 0
  6262                           ;color.c: 288:             return 9;
  6263   001A92  0E09               	movlw	9
  6264   001A94                     l167:
  6265   001A94  0012               	return		;funcret
  6266   001A96                     __end_of_motor_response:
  6267                           	callstack 0
  6268                           
  6269 ;; *************** function _turnRight *****************
  6270 ;; Defined at:
  6271 ;;		line 144 in file "dc_motor.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6274 ;;		 -> main@mL(9), 
  6275 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6276 ;;		 -> main@mR(9), 
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;                  1    wreg      void 
  6281 ;; Registers used:
  6282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6292 ;;Total ram usage:        4 bytes
  6293 ;; Hardware stack levels used: 1
  6294 ;; Hardware stack levels required when called: 8
  6295 ;; This function calls:
  6296 ;;		_setMotorPWM
  6297 ;; This function is called by:
  6298 ;;		_motor_response
  6299 ;;		_motor_retrace
  6300 ;; This function uses a non-reentrant model
  6301 ;;
  6302                           
  6303                           	psect	text22
  6304   003634                     __ptext22:
  6305                           	callstack 0
  6306   003634                     _turnRight:
  6307                           	callstack 21
  6308   003634                     
  6309                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  6310   003634  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6311   003638  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6312   00363C  0E3C               	movlw	60
  6313   00363E  6EDF               	movwf	indf2,c
  6314                           
  6315                           ;dc_motor.c: 147:     mR->power = 60;
  6316   003640  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6317   003644  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6318   003648  0E3C               	movlw	60
  6319   00364A  6EDF               	movwf	indf2,c
  6320   00364C                     
  6321                           ;dc_motor.c: 148:     mL->brakemode = 1;
  6322   00364C  EE20 F002          	lfsr	2,2
  6323   003650  501C               	movf	turnRight@mL^0,w,c
  6324   003652  26D9               	addwf	fsr2l,f,c
  6325   003654  501D               	movf	(turnRight@mL+1)^0,w,c
  6326   003656  22DA               	addwfc	fsr2h,f,c
  6327   003658  0E01               	movlw	1
  6328   00365A  6EDF               	movwf	indf2,c
  6329   00365C                     
  6330                           ;dc_motor.c: 149:     mR->brakemode = 1;
  6331   00365C  EE20 F002          	lfsr	2,2
  6332   003660  501E               	movf	turnRight@mR^0,w,c
  6333   003662  26D9               	addwf	fsr2l,f,c
  6334   003664  501F               	movf	(turnRight@mR+1)^0,w,c
  6335   003666  22DA               	addwfc	fsr2h,f,c
  6336   003668  0E01               	movlw	1
  6337   00366A  6EDF               	movwf	indf2,c
  6338   00366C                     
  6339                           ;dc_motor.c: 150:     mR->direction = 0;
  6340   00366C  EE20 F001          	lfsr	2,1
  6341   003670  501E               	movf	turnRight@mR^0,w,c
  6342   003672  26D9               	addwf	fsr2l,f,c
  6343   003674  501F               	movf	(turnRight@mR+1)^0,w,c
  6344   003676  22DA               	addwfc	fsr2h,f,c
  6345   003678  0E00               	movlw	0
  6346   00367A  6EDF               	movwf	indf2,c
  6347   00367C                     
  6348                           ;dc_motor.c: 151:     mL->direction = 1;
  6349   00367C  EE20 F001          	lfsr	2,1
  6350   003680  501C               	movf	turnRight@mL^0,w,c
  6351   003682  26D9               	addwf	fsr2l,f,c
  6352   003684  501D               	movf	(turnRight@mL+1)^0,w,c
  6353   003686  22DA               	addwfc	fsr2h,f,c
  6354   003688  0E01               	movlw	1
  6355   00368A  6EDF               	movwf	indf2,c
  6356   00368C                     
  6357                           ;dc_motor.c: 152:     setMotorPWM(mL);
  6358   00368C  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  6359   003690  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  6360   003694  EC9F  F017         	call	_setMotorPWM	;wreg free
  6361   003698                     
  6362                           ;dc_motor.c: 153:     setMotorPWM(mR);
  6363   003698  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  6364   00369C  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  6365   0036A0  EC9F  F017         	call	_setMotorPWM	;wreg free
  6366   0036A4  0012               	return		;funcret
  6367   0036A6                     __end_of_turnRight:
  6368                           	callstack 0
  6369                           
  6370 ;; *************** function _turnPrep *****************
  6371 ;; Defined at:
  6372 ;;		line 245 in file "dc_motor.c"
  6373 ;; Parameters:    Size  Location     Type
  6374 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6375 ;;		 -> main@mL(9), 
  6376 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6377 ;;		 -> main@mR(9), 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;		None
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  1    wreg      void 
  6382 ;; Registers used:
  6383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6389 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6391 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6392 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6393 ;;Total ram usage:        6 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; Hardware stack levels required when called: 9
  6396 ;; This function calls:
  6397 ;;		_norm_stop
  6398 ;;		_reverse
  6399 ;; This function is called by:
  6400 ;;		_motor_response
  6401 ;;		_motor_retrace
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text23
  6406   0037EC                     __ptext23:
  6407                           	callstack 0
  6408   0037EC                     _turnPrep:
  6409                           	callstack 20
  6410   0037EC                     
  6411                           ;dc_motor.c: 246:         reverse(mL, mR);
  6412   0037EC  C021  F01C         	movff	turnPrep@mL,reverse@mL
  6413   0037F0  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  6414   0037F4  C023  F01E         	movff	turnPrep@mR,reverse@mR
  6415   0037F8  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  6416   0037FC  ECD7  F018         	call	_reverse	;wreg free
  6417   003800                     
  6418                           ;dc_motor.c: 247:         _delay((unsigned long)((600)*(64000000/4000.0)));
  6419   003800  0E31               	movlw	49
  6420   003802  6E26               	movwf	(??_turnPrep+1)^0,c
  6421   003804  0EB4               	movlw	180
  6422   003806  6E25               	movwf	??_turnPrep^0,c
  6423   003808  0E66               	movlw	102
  6424   00380A                     u3707:
  6425   00380A  2EE8               	decfsz	wreg,f,c
  6426   00380C  D7FE               	bra	u3707
  6427   00380E  2E25               	decfsz	??_turnPrep^0,f,c
  6428   003810  D7FC               	bra	u3707
  6429   003812  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6430   003814  D7FA               	bra	u3707
  6431   003816                     
  6432                           ;dc_motor.c: 248:         norm_stop(mL, mR);
  6433   003816  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  6434   00381A  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  6435   00381E  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  6436   003822  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  6437   003826  EC23  F01D         	call	_norm_stop	;wreg free
  6438                           
  6439                           ;dc_motor.c: 249:         _delay((unsigned long)((300)*(64000000/4000.0)));
  6440   00382A  0E19               	movlw	25
  6441   00382C  6E26               	movwf	(??_turnPrep+1)^0,c
  6442   00382E  0E5A               	movlw	90
  6443   003830  6E25               	movwf	??_turnPrep^0,c
  6444   003832  0EB2               	movlw	178
  6445   003834                     u3717:
  6446   003834  2EE8               	decfsz	wreg,f,c
  6447   003836  D7FE               	bra	u3717
  6448   003838  2E25               	decfsz	??_turnPrep^0,f,c
  6449   00383A  D7FC               	bra	u3717
  6450   00383C  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6451   00383E  D7FA               	bra	u3717
  6452   003840  0012               	return		;funcret
  6453   003842                     __end_of_turnPrep:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _reverse *****************
  6457 ;; Defined at:
  6458 ;;		line 222 in file "dc_motor.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6461 ;;		 -> main@mL(9), 
  6462 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6463 ;;		 -> main@mR(9), 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  1    wreg      void 
  6468 ;; Registers used:
  6469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6475 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6478 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;Total ram usage:        5 bytes
  6480 ;; Hardware stack levels used: 1
  6481 ;; Hardware stack levels required when called: 8
  6482 ;; This function calls:
  6483 ;;		_setMotorPWM
  6484 ;; This function is called by:
  6485 ;;		_motor_response
  6486 ;;		_turnPrep
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text24
  6491   0031AE                     __ptext24:
  6492                           	callstack 0
  6493   0031AE                     _reverse:
  6494                           	callstack 20
  6495   0031AE                     
  6496                           ;dc_motor.c: 222: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 223: {;dc_motor.c
      +                          : 224:     mL->power = 5;
  6497   0031AE  C01C  FFD9         	movff	reverse@mL,fsr2l
  6498   0031B2  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6499   0031B6  0E05               	movlw	5
  6500   0031B8  6EDF               	movwf	indf2,c
  6501                           
  6502                           ;dc_motor.c: 225:     mR->power = 5;
  6503   0031BA  C01E  FFD9         	movff	reverse@mR,fsr2l
  6504   0031BE  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6505   0031C2  0E05               	movlw	5
  6506   0031C4  6EDF               	movwf	indf2,c
  6507   0031C6                     
  6508                           ;dc_motor.c: 226:     mR->direction = 0;
  6509   0031C6  EE20 F001          	lfsr	2,1
  6510   0031CA  501E               	movf	reverse@mR^0,w,c
  6511   0031CC  26D9               	addwf	fsr2l,f,c
  6512   0031CE  501F               	movf	(reverse@mR+1)^0,w,c
  6513   0031D0  22DA               	addwfc	fsr2h,f,c
  6514   0031D2  0E00               	movlw	0
  6515   0031D4  6EDF               	movwf	indf2,c
  6516   0031D6                     
  6517                           ;dc_motor.c: 227:     mL->direction = 0;
  6518   0031D6  EE20 F001          	lfsr	2,1
  6519   0031DA  501C               	movf	reverse@mL^0,w,c
  6520   0031DC  26D9               	addwf	fsr2l,f,c
  6521   0031DE  501D               	movf	(reverse@mL+1)^0,w,c
  6522   0031E0  22DA               	addwfc	fsr2h,f,c
  6523   0031E2  0E00               	movlw	0
  6524   0031E4  6EDF               	movwf	indf2,c
  6525   0031E6                     
  6526                           ;dc_motor.c: 228:     mL->brakemode = 1;
  6527   0031E6  EE20 F002          	lfsr	2,2
  6528   0031EA  501C               	movf	reverse@mL^0,w,c
  6529   0031EC  26D9               	addwf	fsr2l,f,c
  6530   0031EE  501D               	movf	(reverse@mL+1)^0,w,c
  6531   0031F0  22DA               	addwfc	fsr2h,f,c
  6532   0031F2  0E01               	movlw	1
  6533   0031F4  6EDF               	movwf	indf2,c
  6534   0031F6                     
  6535                           ;dc_motor.c: 229:     mR->brakemode = 1;
  6536   0031F6  EE20 F002          	lfsr	2,2
  6537   0031FA  501E               	movf	reverse@mR^0,w,c
  6538   0031FC  26D9               	addwf	fsr2l,f,c
  6539   0031FE  501F               	movf	(reverse@mR+1)^0,w,c
  6540   003200  22DA               	addwfc	fsr2h,f,c
  6541   003202  0E01               	movlw	1
  6542   003204  6EDF               	movwf	indf2,c
  6543                           
  6544                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  6545   003206  EF22  F019         	goto	l696
  6546   00320A                     l2826:
  6547                           
  6548                           ;dc_motor.c: 231:     {;dc_motor.c: 232:         mL->power++;
  6549   00320A  C01C  FFD9         	movff	reverse@mL,fsr2l
  6550   00320E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6551   003212  2ADF               	incf	indf2,f,c
  6552                           
  6553                           ;dc_motor.c: 233:         mR->power++;
  6554   003214  C01E  FFD9         	movff	reverse@mR,fsr2l
  6555   003218  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6556   00321C  2ADF               	incf	indf2,f,c
  6557   00321E                     
  6558                           ;dc_motor.c: 234:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6559   00321E  0ED0               	movlw	208
  6560   003220  6E20               	movwf	??_reverse^0,c
  6561   003222  0ECA               	movlw	202
  6562   003224                     u3727:
  6563   003224  2EE8               	decfsz	wreg,f,c
  6564   003226  D7FE               	bra	u3727
  6565   003228  2E20               	decfsz	??_reverse^0,f,c
  6566   00322A  D7FC               	bra	u3727
  6567   00322C                     
  6568                           ;dc_motor.c: 235:         setMotorPWM(mL);
  6569   00322C  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6570   003230  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6571   003234  EC9F  F017         	call	_setMotorPWM	;wreg free
  6572   003238                     
  6573                           ;dc_motor.c: 236:         setMotorPWM(mR);
  6574   003238  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6575   00323C  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6576   003240  EC9F  F017         	call	_setMotorPWM	;wreg free
  6577   003244                     l696:
  6578                           
  6579                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  6580   003244  C01C  FFD9         	movff	reverse@mL,fsr2l
  6581   003248  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6582   00324C  0E15               	movlw	21
  6583   00324E  60DF               	cpfslt	indf2,c
  6584   003250  EF2C  F019         	goto	u1741
  6585   003254  EF2E  F019         	goto	u1740
  6586   003258                     u1741:
  6587   003258  EF3A  F019         	goto	l2836
  6588   00325C                     u1740:
  6589   00325C  C01E  FFD9         	movff	reverse@mR,fsr2l
  6590   003260  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6591   003264  0E14               	movlw	20
  6592   003266  64DF               	cpfsgt	indf2,c
  6593   003268  EF38  F019         	goto	u1751
  6594   00326C  EF3A  F019         	goto	u1750
  6595   003270                     u1751:
  6596   003270  EF05  F019         	goto	l2826
  6597   003274                     u1750:
  6598   003274                     l2836:
  6599                           
  6600                           ;dc_motor.c: 238:     mL->power = 20;
  6601   003274  C01C  FFD9         	movff	reverse@mL,fsr2l
  6602   003278  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6603   00327C  0E14               	movlw	20
  6604   00327E  6EDF               	movwf	indf2,c
  6605                           
  6606                           ;dc_motor.c: 239:     mR->power = 20;
  6607   003280  C01E  FFD9         	movff	reverse@mR,fsr2l
  6608   003284  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6609   003288  0E14               	movlw	20
  6610   00328A  6EDF               	movwf	indf2,c
  6611   00328C                     
  6612                           ;dc_motor.c: 240:     setMotorPWM(mL);
  6613   00328C  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6614   003290  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6615   003294  EC9F  F017         	call	_setMotorPWM	;wreg free
  6616   003298                     
  6617                           ;dc_motor.c: 241:     setMotorPWM(mR);
  6618   003298  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6619   00329C  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6620   0032A0  EC9F  F017         	call	_setMotorPWM	;wreg free
  6621   0032A4  0012               	return		;funcret
  6622   0032A6                     __end_of_reverse:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function _norm_stop *****************
  6626 ;; Defined at:
  6627 ;;		line 118 in file "dc_motor.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6630 ;;		 -> main@mL(9), 
  6631 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6632 ;;		 -> main@mR(9), 
  6633 ;; Auto vars:     Size  Location     Type
  6634 ;;		None
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  1    wreg      void 
  6637 ;; Registers used:
  6638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;Total ram usage:        4 bytes
  6649 ;; Hardware stack levels used: 1
  6650 ;; Hardware stack levels required when called: 8
  6651 ;; This function calls:
  6652 ;;		_setMotorPWM
  6653 ;; This function is called by:
  6654 ;;		_rangeCalibrate
  6655 ;;		_motor_response
  6656 ;;		_motor_retrace
  6657 ;;		_main
  6658 ;;		_turnPrep
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text25
  6663   003A46                     __ptext25:
  6664                           	callstack 0
  6665   003A46                     _norm_stop:
  6666                           	callstack 21
  6667   003A46                     
  6668                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  6669   003A46  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  6670   003A4A  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  6671   003A4E  0E00               	movlw	0
  6672   003A50  6EDF               	movwf	indf2,c
  6673                           
  6674                           ;dc_motor.c: 125:     mR->power = 0;
  6675   003A52  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  6676   003A56  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  6677   003A5A  0E00               	movlw	0
  6678   003A5C  6EDF               	movwf	indf2,c
  6679   003A5E                     
  6680                           ;dc_motor.c: 126:     setMotorPWM(mL);
  6681   003A5E  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  6682   003A62  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  6683   003A66  EC9F  F017         	call	_setMotorPWM	;wreg free
  6684   003A6A                     
  6685                           ;dc_motor.c: 127:     setMotorPWM(mR);
  6686   003A6A  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  6687   003A6E  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  6688   003A72  EC9F  F017         	call	_setMotorPWM	;wreg free
  6689   003A76  0012               	return		;funcret
  6690   003A78                     __end_of_norm_stop:
  6691                           	callstack 0
  6692                           
  6693 ;; *************** function _turnLeft *****************
  6694 ;; Defined at:
  6695 ;;		line 131 in file "dc_motor.c"
  6696 ;; Parameters:    Size  Location     Type
  6697 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6698 ;;		 -> main@mL(9), 
  6699 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6700 ;;		 -> main@mR(9), 
  6701 ;; Auto vars:     Size  Location     Type
  6702 ;;		None
  6703 ;; Return value:  Size  Location     Type
  6704 ;;                  1    wreg      void 
  6705 ;; Registers used:
  6706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6707 ;; Tracked objects:
  6708 ;;		On entry : 0/0
  6709 ;;		On exit  : 0/0
  6710 ;;		Unchanged: 0/0
  6711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6715 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6716 ;;Total ram usage:        4 bytes
  6717 ;; Hardware stack levels used: 1
  6718 ;; Hardware stack levels required when called: 8
  6719 ;; This function calls:
  6720 ;;		_setMotorPWM
  6721 ;; This function is called by:
  6722 ;;		_motor_response
  6723 ;;		_motor_retrace
  6724 ;;		_main
  6725 ;; This function uses a non-reentrant model
  6726 ;;
  6727                           
  6728                           	psect	text26
  6729   0036A6                     __ptext26:
  6730                           	callstack 0
  6731   0036A6                     _turnLeft:
  6732                           	callstack 22
  6733   0036A6                     
  6734                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  6735   0036A6  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6736   0036AA  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6737   0036AE  0E3C               	movlw	60
  6738   0036B0  6EDF               	movwf	indf2,c
  6739                           
  6740                           ;dc_motor.c: 134:     mR->power = 60;
  6741   0036B2  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6742   0036B6  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6743   0036BA  0E3C               	movlw	60
  6744   0036BC  6EDF               	movwf	indf2,c
  6745   0036BE                     
  6746                           ;dc_motor.c: 135:     mL->brakemode = 1;
  6747   0036BE  EE20 F002          	lfsr	2,2
  6748   0036C2  501C               	movf	turnLeft@mL^0,w,c
  6749   0036C4  26D9               	addwf	fsr2l,f,c
  6750   0036C6  501D               	movf	(turnLeft@mL+1)^0,w,c
  6751   0036C8  22DA               	addwfc	fsr2h,f,c
  6752   0036CA  0E01               	movlw	1
  6753   0036CC  6EDF               	movwf	indf2,c
  6754   0036CE                     
  6755                           ;dc_motor.c: 136:     mR->brakemode = 1;
  6756   0036CE  EE20 F002          	lfsr	2,2
  6757   0036D2  501E               	movf	turnLeft@mR^0,w,c
  6758   0036D4  26D9               	addwf	fsr2l,f,c
  6759   0036D6  501F               	movf	(turnLeft@mR+1)^0,w,c
  6760   0036D8  22DA               	addwfc	fsr2h,f,c
  6761   0036DA  0E01               	movlw	1
  6762   0036DC  6EDF               	movwf	indf2,c
  6763   0036DE                     
  6764                           ;dc_motor.c: 137:     mL->direction = 0;
  6765   0036DE  EE20 F001          	lfsr	2,1
  6766   0036E2  501C               	movf	turnLeft@mL^0,w,c
  6767   0036E4  26D9               	addwf	fsr2l,f,c
  6768   0036E6  501D               	movf	(turnLeft@mL+1)^0,w,c
  6769   0036E8  22DA               	addwfc	fsr2h,f,c
  6770   0036EA  0E00               	movlw	0
  6771   0036EC  6EDF               	movwf	indf2,c
  6772   0036EE                     
  6773                           ;dc_motor.c: 138:     mR->direction = 1;
  6774   0036EE  EE20 F001          	lfsr	2,1
  6775   0036F2  501E               	movf	turnLeft@mR^0,w,c
  6776   0036F4  26D9               	addwf	fsr2l,f,c
  6777   0036F6  501F               	movf	(turnLeft@mR+1)^0,w,c
  6778   0036F8  22DA               	addwfc	fsr2h,f,c
  6779   0036FA  0E01               	movlw	1
  6780   0036FC  6EDF               	movwf	indf2,c
  6781   0036FE                     
  6782                           ;dc_motor.c: 139:     setMotorPWM(mL);
  6783   0036FE  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6784   003702  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6785   003706  EC9F  F017         	call	_setMotorPWM	;wreg free
  6786   00370A                     
  6787                           ;dc_motor.c: 140:     setMotorPWM(mR);
  6788   00370A  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6789   00370E  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6790   003712  EC9F  F017         	call	_setMotorPWM	;wreg free
  6791   003716  0012               	return		;funcret
  6792   003718                     __end_of_turnLeft:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function _setMotorPWM *****************
  6796 ;; Defined at:
  6797 ;;		line 56 in file "dc_motor.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6800 ;;		 -> main@mR(9), main@mL(9), 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  negDuty         1   26[COMRAM] unsigned char 
  6803 ;;  posDuty         1   25[COMRAM] unsigned char 
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6813 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6814 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6816 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6817 ;;Total ram usage:        6 bytes
  6818 ;; Hardware stack levels used: 1
  6819 ;; Hardware stack levels required when called: 7
  6820 ;; This function calls:
  6821 ;;		___lwdiv
  6822 ;;		___wmul
  6823 ;; This function is called by:
  6824 ;;		_norm_stop
  6825 ;;		_turnLeft
  6826 ;;		_turnRight
  6827 ;;		_fullSpeedAhead
  6828 ;;		_wallSmash
  6829 ;;		_reverse
  6830 ;;		_stop
  6831 ;;		_slowSearch
  6832 ;;		_uturn
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           	psect	text27
  6837   002F3E                     __ptext27:
  6838                           	callstack 0
  6839   002F3E                     _setMotorPWM:
  6840                           	callstack 22
  6841   002F3E                     
  6842                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  6843   002F3E  EE20 F002          	lfsr	2,2
  6844   002F42  5016               	movf	setMotorPWM@m^0,w,c
  6845   002F44  26D9               	addwf	fsr2l,f,c
  6846   002F46  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6847   002F48  22DA               	addwfc	fsr2h,f,c
  6848   002F4A  50DF               	movf	indf2,w,c
  6849   002F4C  B4D8               	btfsc	status,2,c
  6850   002F4E  EFAB  F017         	goto	u1721
  6851   002F52  EFAD  F017         	goto	u1720
  6852   002F56                     u1721:
  6853   002F56  EFE1  F017         	goto	l2764
  6854   002F5A                     u1720:
  6855   002F5A                     
  6856                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6857   002F5A  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6858   002F5E  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6859   002F62  50DF               	movf	indf2,w,c
  6860   002F64  6E18               	movwf	??_setMotorPWM^0,c
  6861   002F66  5018               	movf	??_setMotorPWM^0,w,c
  6862   002F68  6E09               	movwf	___wmul@multiplier^0,c
  6863   002F6A  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6864   002F6C  EE20 F003          	lfsr	2,3
  6865   002F70  5016               	movf	setMotorPWM@m^0,w,c
  6866   002F72  26D9               	addwf	fsr2l,f,c
  6867   002F74  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6868   002F76  22DA               	addwfc	fsr2h,f,c
  6869   002F78  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6870   002F7C  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6871   002F80  ECBC  F01D         	call	___wmul	;wreg free
  6872   002F84  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6873   002F88  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6874   002F8C  0E00               	movlw	0
  6875   002F8E  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6876   002F90  0E64               	movlw	100
  6877   002F92  6E11               	movwf	___lwdiv@divisor^0,c
  6878   002F94  ECE0  F01A         	call	___lwdiv	;wreg free
  6879   002F98  EE20 F003          	lfsr	2,3
  6880   002F9C  5016               	movf	setMotorPWM@m^0,w,c
  6881   002F9E  26D9               	addwf	fsr2l,f,c
  6882   002FA0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6883   002FA2  22DA               	addwfc	fsr2h,f,c
  6884   002FA4  50DF               	movf	indf2,w,c
  6885   002FA6  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6886   002FA8  500F               	movf	?___lwdiv^0,w,c
  6887   002FAA  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6888   002FAC  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6889   002FAE                     
  6890                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  6891   002FAE  EE20 F003          	lfsr	2,3
  6892   002FB2  5016               	movf	setMotorPWM@m^0,w,c
  6893   002FB4  26D9               	addwf	fsr2l,f,c
  6894   002FB6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6895   002FB8  22DA               	addwfc	fsr2h,f,c
  6896   002FBA  50DF               	movf	indf2,w,c
  6897   002FBC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6898                           
  6899                           ;dc_motor.c: 63:     }
  6900   002FBE  EF04  F018         	goto	l2768
  6901   002FC2                     l2764:
  6902                           
  6903                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6904   002FC2  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6905   002FC6  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6906   002FCA  50DF               	movf	indf2,w,c
  6907   002FCC  6E18               	movwf	??_setMotorPWM^0,c
  6908   002FCE  5018               	movf	??_setMotorPWM^0,w,c
  6909   002FD0  6E09               	movwf	___wmul@multiplier^0,c
  6910   002FD2  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6911   002FD4  EE20 F003          	lfsr	2,3
  6912   002FD8  5016               	movf	setMotorPWM@m^0,w,c
  6913   002FDA  26D9               	addwf	fsr2l,f,c
  6914   002FDC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6915   002FDE  22DA               	addwfc	fsr2h,f,c
  6916   002FE0  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6917   002FE4  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6918   002FE8  ECBC  F01D         	call	___wmul	;wreg free
  6919   002FEC  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6920   002FF0  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6921   002FF4  0E00               	movlw	0
  6922   002FF6  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6923   002FF8  0E64               	movlw	100
  6924   002FFA  6E11               	movwf	___lwdiv@divisor^0,c
  6925   002FFC  ECE0  F01A         	call	___lwdiv	;wreg free
  6926   003000  500F               	movf	?___lwdiv^0,w,c
  6927   003002  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6928   003004                     
  6929                           ;dc_motor.c: 66:         negDuty=0;
  6930   003004  0E00               	movlw	0
  6931   003006  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6932   003008                     l2768:
  6933                           
  6934                           ;dc_motor.c: 69:     if (m->direction) {
  6935   003008  EE20 F001          	lfsr	2,1
  6936   00300C  5016               	movf	setMotorPWM@m^0,w,c
  6937   00300E  26D9               	addwf	fsr2l,f,c
  6938   003010  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6939   003012  22DA               	addwfc	fsr2h,f,c
  6940   003014  50DF               	movf	indf2,w,c
  6941   003016  B4D8               	btfsc	status,2,c
  6942   003018  EF10  F018         	goto	u1731
  6943   00301C  EF12  F018         	goto	u1730
  6944   003020                     u1731:
  6945   003020  EF34  F018         	goto	l2772
  6946   003024                     u1730:
  6947   003024                     
  6948                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  6949   003024  EE20 F005          	lfsr	2,5
  6950   003028  5016               	movf	setMotorPWM@m^0,w,c
  6951   00302A  26D9               	addwf	fsr2l,f,c
  6952   00302C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6953   00302E  22DA               	addwfc	fsr2h,f,c
  6954   003030  CFDE F018          	movff	postinc2,??_setMotorPWM
  6955   003034  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6956   003038  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6957   00303C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6958   003040  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6959                           
  6960                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  6961   003044  EE20 F007          	lfsr	2,7
  6962   003048  5016               	movf	setMotorPWM@m^0,w,c
  6963   00304A  26D9               	addwf	fsr2l,f,c
  6964   00304C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6965   00304E  22DA               	addwfc	fsr2h,f,c
  6966   003050  CFDE F018          	movff	postinc2,??_setMotorPWM
  6967   003054  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6968   003058  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6969   00305C  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6970   003060  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6971                           
  6972                           ;dc_motor.c: 72:     } else {
  6973   003064  EF54  F018         	goto	l648
  6974   003068                     l2772:
  6975                           
  6976                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  6977   003068  EE20 F005          	lfsr	2,5
  6978   00306C  5016               	movf	setMotorPWM@m^0,w,c
  6979   00306E  26D9               	addwf	fsr2l,f,c
  6980   003070  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6981   003072  22DA               	addwfc	fsr2h,f,c
  6982   003074  CFDE F018          	movff	postinc2,??_setMotorPWM
  6983   003078  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6984   00307C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6985   003080  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6986   003084  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6987                           
  6988                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  6989   003088  EE20 F007          	lfsr	2,7
  6990   00308C  5016               	movf	setMotorPWM@m^0,w,c
  6991   00308E  26D9               	addwf	fsr2l,f,c
  6992   003090  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6993   003092  22DA               	addwfc	fsr2h,f,c
  6994   003094  CFDE F018          	movff	postinc2,??_setMotorPWM
  6995   003098  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6996   00309C  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6997   0030A0  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6998   0030A4  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6999   0030A8                     l648:
  7000   0030A8  0012               	return		;funcret
  7001   0030AA                     __end_of_setMotorPWM:
  7002                           	callstack 0
  7003                           
  7004 ;; *************** function ___wmul *****************
  7005 ;; Defined at:
  7006 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7007 ;; Parameters:    Size  Location     Type
  7008 ;;  multiplier      2    8[COMRAM] unsigned int 
  7009 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;  product         2   12[COMRAM] unsigned int 
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  2    8[COMRAM] unsigned int 
  7014 ;; Registers used:
  7015 ;;		wreg, status,2, status,0, prodl, prodh
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7021 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7022 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7024 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7025 ;;Total ram usage:        6 bytes
  7026 ;; Hardware stack levels used: 1
  7027 ;; Hardware stack levels required when called: 6
  7028 ;; This function calls:
  7029 ;;		Nothing
  7030 ;; This function is called by:
  7031 ;;		_setMotorPWM
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           
  7035                           	psect	text28
  7036   003B78                     __ptext28:
  7037                           	callstack 0
  7038   003B78                     ___wmul:
  7039                           	callstack 22
  7040   003B78  5009               	movf	___wmul@multiplier^0,w,c
  7041   003B7A  020B               	mulwf	___wmul@multiplicand^0,c
  7042   003B7C  CFF3 F00D          	movff	prodl,___wmul@product
  7043   003B80  CFF4 F00E          	movff	prodh,___wmul@product+1
  7044   003B84  5009               	movf	___wmul@multiplier^0,w,c
  7045   003B86  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7046   003B88  50F3               	movf	243,w,c
  7047   003B8A  260E               	addwf	(___wmul@product+1)^0,f,c
  7048   003B8C  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7049   003B8E  020B               	mulwf	___wmul@multiplicand^0,c
  7050   003B90  50F3               	movf	243,w,c
  7051   003B92  260E               	addwf	(___wmul@product+1)^0,f,c
  7052   003B94  C00D  F009         	movff	___wmul@product,?___wmul
  7053   003B98  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7054   003B9C  0012               	return		;funcret
  7055   003B9E                     __end_of___wmul:
  7056                           	callstack 0
  7057                           
  7058 ;; *************** function ___lwdiv *****************
  7059 ;; Defined at:
  7060 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  dividend        2   14[COMRAM] unsigned int 
  7063 ;;  divisor         2   16[COMRAM] unsigned int 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  quotient        2   18[COMRAM] unsigned int 
  7066 ;;  counter         1   20[COMRAM] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  2   14[COMRAM] unsigned int 
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7076 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7077 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7079 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7080 ;;Total ram usage:        7 bytes
  7081 ;; Hardware stack levels used: 1
  7082 ;; Hardware stack levels required when called: 6
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_setMotorPWM
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text29
  7091   0035C0                     __ptext29:
  7092                           	callstack 0
  7093   0035C0                     ___lwdiv:
  7094                           	callstack 22
  7095   0035C0  0E00               	movlw	0
  7096   0035C2  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7097   0035C4  0E00               	movlw	0
  7098   0035C6  6E13               	movwf	___lwdiv@quotient^0,c
  7099   0035C8  5011               	movf	___lwdiv@divisor^0,w,c
  7100   0035CA  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7101   0035CC  B4D8               	btfsc	status,2,c
  7102   0035CE  EFEB  F01A         	goto	u1651
  7103   0035D2  EFED  F01A         	goto	u1650
  7104   0035D6                     u1651:
  7105   0035D6  EF15  F01B         	goto	l1201
  7106   0035DA                     u1650:
  7107   0035DA  0E01               	movlw	1
  7108   0035DC  6E15               	movwf	___lwdiv@counter^0,c
  7109   0035DE  EFF5  F01A         	goto	l2710
  7110   0035E2                     l2708:
  7111   0035E2  90D8               	bcf	status,0,c
  7112   0035E4  3611               	rlcf	___lwdiv@divisor^0,f,c
  7113   0035E6  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7114   0035E8  2A15               	incf	___lwdiv@counter^0,f,c
  7115   0035EA                     l2710:
  7116   0035EA  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7117   0035EC  EFFA  F01A         	goto	u1661
  7118   0035F0  EFFC  F01A         	goto	u1660
  7119   0035F4                     u1661:
  7120   0035F4  EFF1  F01A         	goto	l2708
  7121   0035F8                     u1660:
  7122   0035F8                     l2712:
  7123   0035F8  90D8               	bcf	status,0,c
  7124   0035FA  3613               	rlcf	___lwdiv@quotient^0,f,c
  7125   0035FC  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7126   0035FE  5011               	movf	___lwdiv@divisor^0,w,c
  7127   003600  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7128   003602  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7129   003604  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7130   003606  A0D8               	btfss	status,0,c
  7131   003608  EF08  F01B         	goto	u1671
  7132   00360C  EF0A  F01B         	goto	u1670
  7133   003610                     u1671:
  7134   003610  EF0F  F01B         	goto	l2720
  7135   003614                     u1670:
  7136   003614  5011               	movf	___lwdiv@divisor^0,w,c
  7137   003616  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7138   003618  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7139   00361A  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7140   00361C  8013               	bsf	___lwdiv@quotient^0,0,c
  7141   00361E                     l2720:
  7142   00361E  90D8               	bcf	status,0,c
  7143   003620  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7144   003622  3211               	rrcf	___lwdiv@divisor^0,f,c
  7145   003624  2E15               	decfsz	___lwdiv@counter^0,f,c
  7146   003626  EFFC  F01A         	goto	l2712
  7147   00362A                     l1201:
  7148   00362A  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7149   00362E  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7150   003632  0012               	return		;funcret
  7151   003634                     __end_of___lwdiv:
  7152                           	callstack 0
  7153                           
  7154 ;; *************** function ___flge *****************
  7155 ;; Defined at:
  7156 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7157 ;; Parameters:    Size  Location     Type
  7158 ;;  ff1             4    8[COMRAM] unsigned int 
  7159 ;;  ff2             4   12[COMRAM] unsigned int 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;		None
  7162 ;; Return value:  Size  Location     Type
  7163 ;;		None               void
  7164 ;; Registers used:
  7165 ;;		wreg, status,2, status,0
  7166 ;; Tracked objects:
  7167 ;;		On entry : 0/0
  7168 ;;		On exit  : 0/0
  7169 ;;		Unchanged: 0/0
  7170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7171 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7174 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7175 ;;Total ram usage:       12 bytes
  7176 ;; Hardware stack levels used: 1
  7177 ;; Hardware stack levels required when called: 6
  7178 ;; This function calls:
  7179 ;;		Nothing
  7180 ;; This function is called by:
  7181 ;;		_motor_response
  7182 ;; This function uses a non-reentrant model
  7183 ;;
  7184                           
  7185                           	psect	text30
  7186   0030AA                     __ptext30:
  7187                           	callstack 0
  7188   0030AA                     ___flge:
  7189                           	callstack 23
  7190   0030AA  0E00               	movlw	0
  7191   0030AC  1409               	andwf	___flge@ff1^0,w,c
  7192   0030AE  6E11               	movwf	??___flge^0,c
  7193   0030B0  0E00               	movlw	0
  7194   0030B2  140A               	andwf	(___flge@ff1+1)^0,w,c
  7195   0030B4  6E12               	movwf	(??___flge+1)^0,c
  7196   0030B6  0E80               	movlw	128
  7197   0030B8  140B               	andwf	(___flge@ff1+2)^0,w,c
  7198   0030BA  6E13               	movwf	(??___flge+2)^0,c
  7199   0030BC  0E7F               	movlw	127
  7200   0030BE  140C               	andwf	(___flge@ff1+3)^0,w,c
  7201   0030C0  6E14               	movwf	(??___flge+3)^0,c
  7202   0030C2  5011               	movf	??___flge^0,w,c
  7203   0030C4  1012               	iorwf	(??___flge+1)^0,w,c
  7204   0030C6  1013               	iorwf	(??___flge+2)^0,w,c
  7205   0030C8  1014               	iorwf	(??___flge+3)^0,w,c
  7206   0030CA  A4D8               	btfss	status,2,c
  7207   0030CC  EF6A  F018         	goto	u2521
  7208   0030D0  EF6C  F018         	goto	u2520
  7209   0030D4                     u2521:
  7210   0030D4  EF74  F018         	goto	l3352
  7211   0030D8                     u2520:
  7212   0030D8  0E00               	movlw	0
  7213   0030DA  6E09               	movwf	___flge@ff1^0,c
  7214   0030DC  0E00               	movlw	0
  7215   0030DE  6E0A               	movwf	(___flge@ff1+1)^0,c
  7216   0030E0  0E00               	movlw	0
  7217   0030E2  6E0B               	movwf	(___flge@ff1+2)^0,c
  7218   0030E4  0E00               	movlw	0
  7219   0030E6  6E0C               	movwf	(___flge@ff1+3)^0,c
  7220   0030E8                     l3352:
  7221   0030E8  0E00               	movlw	0
  7222   0030EA  140D               	andwf	___flge@ff2^0,w,c
  7223   0030EC  6E11               	movwf	??___flge^0,c
  7224   0030EE  0E00               	movlw	0
  7225   0030F0  140E               	andwf	(___flge@ff2+1)^0,w,c
  7226   0030F2  6E12               	movwf	(??___flge+1)^0,c
  7227   0030F4  0E80               	movlw	128
  7228   0030F6  140F               	andwf	(___flge@ff2+2)^0,w,c
  7229   0030F8  6E13               	movwf	(??___flge+2)^0,c
  7230   0030FA  0E7F               	movlw	127
  7231   0030FC  1410               	andwf	(___flge@ff2+3)^0,w,c
  7232   0030FE  6E14               	movwf	(??___flge+3)^0,c
  7233   003100  5011               	movf	??___flge^0,w,c
  7234   003102  1012               	iorwf	(??___flge+1)^0,w,c
  7235   003104  1013               	iorwf	(??___flge+2)^0,w,c
  7236   003106  1014               	iorwf	(??___flge+3)^0,w,c
  7237   003108  A4D8               	btfss	status,2,c
  7238   00310A  EF89  F018         	goto	u2531
  7239   00310E  EF8B  F018         	goto	u2530
  7240   003112                     u2531:
  7241   003112  EF93  F018         	goto	l3356
  7242   003116                     u2530:
  7243   003116  0E00               	movlw	0
  7244   003118  6E0D               	movwf	___flge@ff2^0,c
  7245   00311A  0E00               	movlw	0
  7246   00311C  6E0E               	movwf	(___flge@ff2+1)^0,c
  7247   00311E  0E00               	movlw	0
  7248   003120  6E0F               	movwf	(___flge@ff2+2)^0,c
  7249   003122  0E00               	movlw	0
  7250   003124  6E10               	movwf	(___flge@ff2+3)^0,c
  7251   003126                     l3356:
  7252   003126  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  7253   003128  EF98  F018         	goto	u2541
  7254   00312C  EF9A  F018         	goto	u2540
  7255   003130                     u2541:
  7256   003130  EFA3  F018         	goto	l3360
  7257   003134                     u2540:
  7258   003134  6C09               	negf	___flge@ff1^0,c
  7259   003136  1E0A               	comf	(___flge@ff1+1)^0,f,c
  7260   003138  B0D8               	btfsc	status,0,c
  7261   00313A  2A0A               	incf	(___flge@ff1+1)^0,f,c
  7262   00313C  1E0B               	comf	(___flge@ff1+2)^0,f,c
  7263   00313E  B0D8               	btfsc	status,0,c
  7264   003140  2A0B               	incf	(___flge@ff1+2)^0,f,c
  7265   003142  0E80               	movlw	128
  7266   003144  560C               	subfwb	(___flge@ff1+3)^0,f,c
  7267   003146                     l3360:
  7268   003146  AE10               	btfss	(___flge@ff2+3)^0,7,c
  7269   003148  EFA8  F018         	goto	u2551
  7270   00314C  EFAA  F018         	goto	u2550
  7271   003150                     u2551:
  7272   003150  EFB3  F018         	goto	l975
  7273   003154                     u2550:
  7274   003154  6C0D               	negf	___flge@ff2^0,c
  7275   003156  1E0E               	comf	(___flge@ff2+1)^0,f,c
  7276   003158  B0D8               	btfsc	status,0,c
  7277   00315A  2A0E               	incf	(___flge@ff2+1)^0,f,c
  7278   00315C  1E0F               	comf	(___flge@ff2+2)^0,f,c
  7279   00315E  B0D8               	btfsc	status,0,c
  7280   003160  2A0F               	incf	(___flge@ff2+2)^0,f,c
  7281   003162  0E80               	movlw	128
  7282   003164  5610               	subfwb	(___flge@ff2+3)^0,f,c
  7283   003166                     l975:
  7284   003166  0E00               	movlw	0
  7285   003168  1A09               	xorwf	___flge@ff1^0,f,c
  7286   00316A  0E00               	movlw	0
  7287   00316C  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  7288   00316E  0E00               	movlw	0
  7289   003170  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  7290   003172  0E80               	movlw	128
  7291   003174  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  7292   003176  0E00               	movlw	0
  7293   003178  1A0D               	xorwf	___flge@ff2^0,f,c
  7294   00317A  0E00               	movlw	0
  7295   00317C  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  7296   00317E  0E00               	movlw	0
  7297   003180  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  7298   003182  0E80               	movlw	128
  7299   003184  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  7300   003186  500D               	movf	___flge@ff2^0,w,c
  7301   003188  5C09               	subwf	___flge@ff1^0,w,c
  7302   00318A  500E               	movf	(___flge@ff2+1)^0,w,c
  7303   00318C  580A               	subwfb	(___flge@ff1+1)^0,w,c
  7304   00318E  500F               	movf	(___flge@ff2+2)^0,w,c
  7305   003190  580B               	subwfb	(___flge@ff1+2)^0,w,c
  7306   003192  5010               	movf	(___flge@ff2+3)^0,w,c
  7307   003194  580C               	subwfb	(___flge@ff1+3)^0,w,c
  7308   003196  B0D8               	btfsc	status,0,c
  7309   003198  EFD0  F018         	goto	u2561
  7310   00319C  EFD2  F018         	goto	u2560
  7311   0031A0                     u2561:
  7312   0031A0  EFD5  F018         	goto	l3366
  7313   0031A4                     u2560:
  7314   0031A4  90D8               	bcf	status,0,c
  7315   0031A6  EFD6  F018         	goto	l980
  7316   0031AA                     l3366:
  7317   0031AA  80D8               	bsf	status,0,c
  7318   0031AC                     l980:
  7319   0031AC  0012               	return		;funcret
  7320   0031AE                     __end_of___flge:
  7321                           	callstack 0
  7322                           
  7323 ;; *************** function _motorTRIS *****************
  7324 ;; Defined at:
  7325 ;;		line 252 in file "dc_motor.c"
  7326 ;; Parameters:    Size  Location     Type
  7327 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7328 ;;		 -> main@mL(9), 
  7329 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  7330 ;;		 -> main@mR(9), 
  7331 ;; Auto vars:     Size  Location     Type
  7332 ;;		None
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		None
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7342 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;Total ram usage:        4 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; Hardware stack levels required when called: 6
  7349 ;; This function calls:
  7350 ;;		Nothing
  7351 ;; This function is called by:
  7352 ;;		_main
  7353 ;; This function uses a non-reentrant model
  7354 ;;
  7355                           
  7356                           	psect	text31
  7357   003C70                     __ptext31:
  7358                           	callstack 0
  7359   003C70                     _motorTRIS:
  7360                           	callstack 24
  7361   003C70                     
  7362                           ;dc_motor.c: 253:     TRISEbits.TRISE2 = 0;
  7363   003C70  9485               	bcf	133,2,c	;volatile
  7364                           
  7365                           ;dc_motor.c: 254:     TRISEbits.TRISE4 = 0;
  7366   003C72  9885               	bcf	133,4,c	;volatile
  7367                           
  7368                           ;dc_motor.c: 255:     TRISCbits.TRISC7 = 0;
  7369   003C74  9E83               	bcf	131,7,c	;volatile
  7370                           
  7371                           ;dc_motor.c: 256:     TRISGbits.TRISG6 = 0;
  7372   003C76  9C87               	bcf	135,6,c	;volatile
  7373   003C78  0012               	return		;funcret
  7374   003C7A                     __end_of_motorTRIS:
  7375                           	callstack 0
  7376                           
  7377 ;; *************** function _motorRinit *****************
  7378 ;; Defined at:
  7379 ;;		line 88 in file "dc_motor.c"
  7380 ;; Parameters:    Size  Location     Type
  7381 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  7382 ;;		 -> main@mR(9), 
  7383 ;; Auto vars:     Size  Location     Type
  7384 ;;		None
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  1    wreg      void 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;Total ram usage:        2 bytes
  7399 ;; Hardware stack levels used: 1
  7400 ;; Hardware stack levels required when called: 6
  7401 ;; This function calls:
  7402 ;;		Nothing
  7403 ;; This function is called by:
  7404 ;;		_main
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           	psect	text32
  7409   003718                     __ptext32:
  7410                           	callstack 0
  7411   003718                     _motorRinit:
  7412                           	callstack 24
  7413   003718                     
  7414                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  7415   003718  C009  FFD9         	movff	motorRinit@mR,fsr2l
  7416   00371C  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  7417   003720  0E32               	movlw	50
  7418   003722  6EDF               	movwf	indf2,c
  7419   003724                     
  7420                           ;dc_motor.c: 91:     mR->direction = 1;
  7421   003724  EE20 F001          	lfsr	2,1
  7422   003728  5009               	movf	motorRinit@mR^0,w,c
  7423   00372A  26D9               	addwf	fsr2l,f,c
  7424   00372C  500A               	movf	(motorRinit@mR+1)^0,w,c
  7425   00372E  22DA               	addwfc	fsr2h,f,c
  7426   003730  0E01               	movlw	1
  7427   003732  6EDF               	movwf	indf2,c
  7428   003734                     
  7429                           ;dc_motor.c: 92:     mR->brakemode = 1;
  7430   003734  EE20 F002          	lfsr	2,2
  7431   003738  5009               	movf	motorRinit@mR^0,w,c
  7432   00373A  26D9               	addwf	fsr2l,f,c
  7433   00373C  500A               	movf	(motorRinit@mR+1)^0,w,c
  7434   00373E  22DA               	addwfc	fsr2h,f,c
  7435   003740  0E01               	movlw	1
  7436   003742  6EDF               	movwf	indf2,c
  7437   003744                     
  7438                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  7439   003744  EE20 F005          	lfsr	2,5
  7440   003748  5009               	movf	motorRinit@mR^0,w,c
  7441   00374A  26D9               	addwf	fsr2l,f,c
  7442   00374C  500A               	movf	(motorRinit@mR+1)^0,w,c
  7443   00374E  22DA               	addwfc	fsr2h,f,c
  7444   003750  0E25               	movlw	37
  7445   003752  6EDE               	movwf	postinc2,c
  7446   003754  0E0F               	movlw	15
  7447   003756  6EDD               	movwf	postdec2,c
  7448   003758                     
  7449                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  7450   003758  EE20 F007          	lfsr	2,7
  7451   00375C  5009               	movf	motorRinit@mR^0,w,c
  7452   00375E  26D9               	addwf	fsr2l,f,c
  7453   003760  500A               	movf	(motorRinit@mR+1)^0,w,c
  7454   003762  22DA               	addwfc	fsr2h,f,c
  7455   003764  0E21               	movlw	33
  7456   003766  6EDE               	movwf	postinc2,c
  7457   003768  0E0F               	movlw	15
  7458   00376A  6EDD               	movwf	postdec2,c
  7459   00376C                     
  7460                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  7461   00376C  EE20 F003          	lfsr	2,3
  7462   003770  5009               	movf	motorRinit@mR^0,w,c
  7463   003772  26D9               	addwf	fsr2l,f,c
  7464   003774  500A               	movf	(motorRinit@mR+1)^0,w,c
  7465   003776  22DA               	addwfc	fsr2h,f,c
  7466   003778  0EC8               	movlw	200
  7467   00377A  6EDE               	movwf	postinc2,c
  7468   00377C  0E00               	movlw	0
  7469   00377E  6EDD               	movwf	postdec2,c
  7470   003780  0012               	return		;funcret
  7471   003782                     __end_of_motorRinit:
  7472                           	callstack 0
  7473                           
  7474 ;; *************** function _motorLinit *****************
  7475 ;; Defined at:
  7476 ;;		line 78 in file "dc_motor.c"
  7477 ;; Parameters:    Size  Location     Type
  7478 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7479 ;;		 -> main@mL(9), 
  7480 ;; Auto vars:     Size  Location     Type
  7481 ;;		None
  7482 ;; Return value:  Size  Location     Type
  7483 ;;                  1    wreg      void 
  7484 ;; Registers used:
  7485 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7486 ;; Tracked objects:
  7487 ;;		On entry : 0/0
  7488 ;;		On exit  : 0/0
  7489 ;;		Unchanged: 0/0
  7490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7495 ;;Total ram usage:        2 bytes
  7496 ;; Hardware stack levels used: 1
  7497 ;; Hardware stack levels required when called: 6
  7498 ;; This function calls:
  7499 ;;		Nothing
  7500 ;; This function is called by:
  7501 ;;		_main
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           	psect	text33
  7506   003782                     __ptext33:
  7507                           	callstack 0
  7508   003782                     _motorLinit:
  7509                           	callstack 24
  7510   003782                     
  7511                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  7512   003782  C009  FFD9         	movff	motorLinit@mL,fsr2l
  7513   003786  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  7514   00378A  0E32               	movlw	50
  7515   00378C  6EDF               	movwf	indf2,c
  7516   00378E                     
  7517                           ;dc_motor.c: 81:     mL->direction = 1;
  7518   00378E  EE20 F001          	lfsr	2,1
  7519   003792  5009               	movf	motorLinit@mL^0,w,c
  7520   003794  26D9               	addwf	fsr2l,f,c
  7521   003796  500A               	movf	(motorLinit@mL+1)^0,w,c
  7522   003798  22DA               	addwfc	fsr2h,f,c
  7523   00379A  0E01               	movlw	1
  7524   00379C  6EDF               	movwf	indf2,c
  7525   00379E                     
  7526                           ;dc_motor.c: 82:     mL->brakemode = 1;
  7527   00379E  EE20 F002          	lfsr	2,2
  7528   0037A2  5009               	movf	motorLinit@mL^0,w,c
  7529   0037A4  26D9               	addwf	fsr2l,f,c
  7530   0037A6  500A               	movf	(motorLinit@mL+1)^0,w,c
  7531   0037A8  22DA               	addwfc	fsr2h,f,c
  7532   0037AA  0E01               	movlw	1
  7533   0037AC  6EDF               	movwf	indf2,c
  7534   0037AE                     
  7535                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  7536   0037AE  EE20 F005          	lfsr	2,5
  7537   0037B2  5009               	movf	motorLinit@mL^0,w,c
  7538   0037B4  26D9               	addwf	fsr2l,f,c
  7539   0037B6  500A               	movf	(motorLinit@mL+1)^0,w,c
  7540   0037B8  22DA               	addwfc	fsr2h,f,c
  7541   0037BA  0EAA               	movlw	170
  7542   0037BC  6EDE               	movwf	postinc2,c
  7543   0037BE  0E0F               	movlw	15
  7544   0037C0  6EDD               	movwf	postdec2,c
  7545   0037C2                     
  7546                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  7547   0037C2  EE20 F007          	lfsr	2,7
  7548   0037C6  5009               	movf	motorLinit@mL^0,w,c
  7549   0037C8  26D9               	addwf	fsr2l,f,c
  7550   0037CA  500A               	movf	(motorLinit@mL+1)^0,w,c
  7551   0037CC  22DA               	addwfc	fsr2h,f,c
  7552   0037CE  0EA6               	movlw	166
  7553   0037D0  6EDE               	movwf	postinc2,c
  7554   0037D2  0E0F               	movlw	15
  7555   0037D4  6EDD               	movwf	postdec2,c
  7556   0037D6                     
  7557                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  7558   0037D6  EE20 F003          	lfsr	2,3
  7559   0037DA  5009               	movf	motorLinit@mL^0,w,c
  7560   0037DC  26D9               	addwf	fsr2l,f,c
  7561   0037DE  500A               	movf	(motorLinit@mL+1)^0,w,c
  7562   0037E0  22DA               	addwfc	fsr2h,f,c
  7563   0037E2  0EC8               	movlw	200
  7564   0037E4  6EDE               	movwf	postinc2,c
  7565   0037E6  0E00               	movlw	0
  7566   0037E8  6EDD               	movwf	postdec2,c
  7567   0037EA  0012               	return		;funcret
  7568   0037EC                     __end_of_motorLinit:
  7569                           	callstack 0
  7570                           
  7571 ;; *************** function _initDCmotorsPWM *****************
  7572 ;; Defined at:
  7573 ;;		line 5 in file "dc_motor.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  1    wreg      void 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;Total ram usage:        2 bytes
  7592 ;; Hardware stack levels used: 1
  7593 ;; Hardware stack levels required when called: 6
  7594 ;; This function calls:
  7595 ;;		Nothing
  7596 ;; This function is called by:
  7597 ;;		_main
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text34
  7602   003540                     __ptext34:
  7603                           	callstack 0
  7604   003540                     _initDCmotorsPWM:
  7605                           	callstack 24
  7606   003540                     
  7607                           ;dc_motor.c: 9:     RE2PPS=0x05;
  7608   003540  0E05               	movlw	5
  7609   003542  010E               	movlb	14	; () banked
  7610   003544  6F74               	movwf	116,b	;volatile
  7611                           
  7612                           ;dc_motor.c: 10:     RE4PPS=0x06;
  7613   003546  0E06               	movlw	6
  7614   003548  6F76               	movwf	118,b	;volatile
  7615                           
  7616                           ;dc_motor.c: 11:     RC7PPS=0x07;
  7617   00354A  0E07               	movlw	7
  7618   00354C  6F69               	movwf	105,b	;volatile
  7619                           
  7620                           ;dc_motor.c: 12:     RG6PPS=0x08;
  7621   00354E  0E08               	movlw	8
  7622   003550  6F88               	movwf	136,b	;volatile
  7623                           
  7624                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  7625   003552  50BD               	movf	189,w,c	;volatile
  7626   003554  0B8F               	andlw	-113
  7627   003556  0930               	iorlw	48
  7628   003558  6EBD               	movwf	189,c	;volatile
  7629                           
  7630                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  7631   00355A  0EE0               	movlw	-32
  7632   00355C  16BE               	andwf	190,f,c	;volatile
  7633                           
  7634                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  7635   00355E  50BF               	movf	191,w,c	;volatile
  7636   003560  0BF0               	andlw	-16
  7637   003562  0901               	iorlw	1
  7638   003564  6EBF               	movwf	191,c	;volatile
  7639                           
  7640                           ;dc_motor.c: 21:     T2PR=200;
  7641   003566  0EC8               	movlw	200
  7642   003568  6EBC               	movwf	188,c	;volatile
  7643   00356A                     
  7644                           ; BSR set to: 14
  7645                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  7646   00356A  8EBD               	bsf	189,7,c	;volatile
  7647                           
  7648                           ;dc_motor.c: 26:     CCPR1H=0;
  7649   00356C  0E00               	movlw	0
  7650   00356E  6EAA               	movwf	170,c	;volatile
  7651                           
  7652                           ;dc_motor.c: 27:     CCPR2H=0;
  7653   003570  0E00               	movlw	0
  7654   003572  6EA6               	movwf	166,c	;volatile
  7655                           
  7656                           ;dc_motor.c: 28:     CCPR3H=0;
  7657   003574  0E00               	movlw	0
  7658   003576  010F               	movlb	15	; () banked
  7659   003578  6F25               	movwf	37,b	;volatile
  7660                           
  7661                           ;dc_motor.c: 29:     CCPR4H=0;
  7662   00357A  0E00               	movlw	0
  7663   00357C  6F21               	movwf	33,b	;volatile
  7664                           
  7665                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  7666   00357E  0EFC               	movlw	-4
  7667   003580  16AD               	andwf	173,f,c	;volatile
  7668                           
  7669                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  7670   003582  0EF3               	movlw	-13
  7671   003584  16AD               	andwf	173,f,c	;volatile
  7672                           
  7673                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  7674   003586  0ECF               	movlw	-49
  7675   003588  16AD               	andwf	173,f,c	;volatile
  7676                           
  7677                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  7678   00358A  0E3F               	movlw	-193
  7679   00358C  16AD               	andwf	173,f,c	;volatile
  7680   00358E                     
  7681                           ; BSR set to: 15
  7682                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  7683   00358E  88AB               	bsf	171,4,c	;volatile
  7684                           
  7685                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  7686   003590  50AB               	movf	171,w,c	;volatile
  7687   003592  0BF0               	andlw	-16
  7688   003594  090C               	iorlw	12
  7689   003596  6EAB               	movwf	171,c	;volatile
  7690   003598                     
  7691                           ; BSR set to: 15
  7692                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  7693   003598  8EAB               	bsf	171,7,c	;volatile
  7694   00359A                     
  7695                           ; BSR set to: 15
  7696                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  7697   00359A  88A7               	bsf	167,4,c	;volatile
  7698                           
  7699                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  7700   00359C  50A7               	movf	167,w,c	;volatile
  7701   00359E  0BF0               	andlw	-16
  7702   0035A0  090C               	iorlw	12
  7703   0035A2  6EA7               	movwf	167,c	;volatile
  7704   0035A4                     
  7705                           ; BSR set to: 15
  7706                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  7707   0035A4  8EA7               	bsf	167,7,c	;volatile
  7708   0035A6                     
  7709                           ; BSR set to: 15
  7710                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  7711   0035A6  8926               	bsf	38,4,b	;volatile
  7712                           
  7713                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  7714   0035A8  5126               	movf	38,w,b	;volatile
  7715   0035AA  0BF0               	andlw	-16
  7716   0035AC  090C               	iorlw	12
  7717   0035AE  6F26               	movwf	38,b	;volatile
  7718   0035B0                     
  7719                           ; BSR set to: 15
  7720                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  7721   0035B0  8F26               	bsf	38,7,b	;volatile
  7722   0035B2                     
  7723                           ; BSR set to: 15
  7724                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  7725   0035B2  8922               	bsf	34,4,b	;volatile
  7726                           
  7727                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  7728   0035B4  5122               	movf	34,w,b	;volatile
  7729   0035B6  0BF0               	andlw	-16
  7730   0035B8  090C               	iorlw	12
  7731   0035BA  6F22               	movwf	34,b	;volatile
  7732   0035BC                     
  7733                           ; BSR set to: 15
  7734                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  7735   0035BC  8F22               	bsf	34,7,b	;volatile
  7736   0035BE                     
  7737                           ; BSR set to: 15
  7738   0035BE  0012               	return		;funcret
  7739   0035C0                     __end_of_initDCmotorsPWM:
  7740                           	callstack 0
  7741                           
  7742 ;; *************** function _color_click_init *****************
  7743 ;; Defined at:
  7744 ;;		line 9 in file "color.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2, status,0, cstack
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;Total ram usage:        1 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; Hardware stack levels required when called: 9
  7765 ;; This function calls:
  7766 ;;		_I2C_2_Master_Init
  7767 ;;		_color_writetoaddr
  7768 ;; This function is called by:
  7769 ;;		_main
  7770 ;; This function uses a non-reentrant model
  7771 ;;
  7772                           
  7773                           	psect	text35
  7774   003A12                     __ptext35:
  7775                           	callstack 0
  7776   003A12                     _color_click_init:
  7777                           	callstack 21
  7778   003A12                     
  7779                           ;color.c: 11:     I2C_2_Master_Init();
  7780   003A12  EC55  F01D         	call	_I2C_2_Master_Init	;wreg free
  7781   003A16                     
  7782                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  7783   003A16  0E01               	movlw	1
  7784   003A18  6E0B               	movwf	color_writetoaddr@value^0,c
  7785   003A1A  0E00               	movlw	0
  7786   003A1C  ECCF  F01D         	call	_color_writetoaddr
  7787   003A20                     
  7788                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7789   003A20  0E3F               	movlw	63
  7790   003A22  6E0D               	movwf	??_color_click_init^0,c
  7791   003A24  0E55               	movlw	85
  7792   003A26                     u3737:
  7793   003A26  2EE8               	decfsz	wreg,f,c
  7794   003A28  D7FE               	bra	u3737
  7795   003A2A  2E0D               	decfsz	??_color_click_init^0,f,c
  7796   003A2C  D7FC               	bra	u3737
  7797   003A2E  F000               	nop	
  7798   003A30                     
  7799                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  7800   003A30  0E03               	movlw	3
  7801   003A32  6E0B               	movwf	color_writetoaddr@value^0,c
  7802   003A34  0E00               	movlw	0
  7803   003A36  ECCF  F01D         	call	_color_writetoaddr
  7804   003A3A                     
  7805                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  7806   003A3A  0ED5               	movlw	213
  7807   003A3C  6E0B               	movwf	color_writetoaddr@value^0,c
  7808   003A3E  0E01               	movlw	1
  7809   003A40  ECCF  F01D         	call	_color_writetoaddr
  7810   003A44  0012               	return		;funcret
  7811   003A46                     __end_of_color_click_init:
  7812                           	callstack 0
  7813                           
  7814 ;; *************** function _I2C_2_Master_Init *****************
  7815 ;; Defined at:
  7816 ;;		line 4 in file "i2c.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;		None
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;		None
  7821 ;; Return value:  Size  Location     Type
  7822 ;;                  1    wreg      void 
  7823 ;; Registers used:
  7824 ;;		wreg, status,2
  7825 ;; Tracked objects:
  7826 ;;		On entry : 0/0
  7827 ;;		On exit  : 0/0
  7828 ;;		Unchanged: 0/0
  7829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7834 ;;Total ram usage:        0 bytes
  7835 ;; Hardware stack levels used: 1
  7836 ;; Hardware stack levels required when called: 6
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_color_click_init
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text36
  7845   003AAA                     __ptext36:
  7846                           	callstack 0
  7847   003AAA                     _I2C_2_Master_Init:
  7848                           	callstack 23
  7849   003AAA                     
  7850                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7851   003AAA  010E               	movlb	14	; () banked
  7852   003AAC  51D9               	movf	217,w,b	;volatile
  7853   003AAE  0BF0               	andlw	-16
  7854   003AB0  0908               	iorlw	8
  7855   003AB2  6FD9               	movwf	217,b	;volatile
  7856   003AB4                     
  7857                           ; BSR set to: 14
  7858                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7859   003AB4  8BD9               	bsf	217,5,b	;volatile
  7860                           
  7861                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7862   003AB6  0E9F               	movlw	159
  7863   003AB8  6FD6               	movwf	214,b	;volatile
  7864   003ABA                     
  7865                           ; BSR set to: 14
  7866                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7867   003ABA  8A84               	bsf	132,5,c	;volatile
  7868   003ABC                     
  7869                           ; BSR set to: 14
  7870                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7871   003ABC  8C84               	bsf	132,6,c	;volatile
  7872   003ABE                     
  7873                           ; BSR set to: 14
  7874                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7875   003ABE  9BA7               	bcf	167,5,b	;volatile
  7876   003AC0                     
  7877                           ; BSR set to: 14
  7878                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7879   003AC0  9DA7               	bcf	167,6,b	;volatile
  7880                           
  7881                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7882   003AC2  0E1D               	movlw	29
  7883   003AC4  6F1D               	movwf	29,b	;volatile
  7884                           
  7885                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7886   003AC6  0E1E               	movlw	30
  7887   003AC8  6F1C               	movwf	28,b	;volatile
  7888                           
  7889                           ;i2c.c: 18:   RD5PPS=0x1C;
  7890   003ACA  0E1C               	movlw	28
  7891   003ACC  6F6F               	movwf	111,b	;volatile
  7892                           
  7893                           ;i2c.c: 19:   RD6PPS=0x1B;
  7894   003ACE  0E1B               	movlw	27
  7895   003AD0  6F70               	movwf	112,b	;volatile
  7896   003AD2                     
  7897                           ; BSR set to: 14
  7898   003AD2  0012               	return		;funcret
  7899   003AD4                     __end_of_I2C_2_Master_Init:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function _calibSwitchInit *****************
  7903 ;; Defined at:
  7904 ;;		line 342 in file "color.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		None
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used: 1
  7924 ;; Hardware stack levels required when called: 6
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text37
  7933   003CA2                     __ptext37:
  7934                           	callstack 0
  7935   003CA2                     _calibSwitchInit:
  7936                           	callstack 24
  7937   003CA2                     
  7938                           ;color.c: 343:     TRISFbits.TRISF2 = 1;
  7939   003CA2  8486               	bsf	134,2,c	;volatile
  7940                           
  7941                           ;color.c: 344:     ANSELFbits.ANSELF2 = 0;
  7942   003CA4  010E               	movlb	14	; () banked
  7943   003CA6  95B4               	bcf	180,2,b	;volatile
  7944   003CA8                     
  7945                           ; BSR set to: 14
  7946   003CA8  0012               	return		;funcret
  7947   003CAA                     __end_of_calibSwitchInit:
  7948                           	callstack 0
  7949                           
  7950 ;; *************** function _Interrupts_init *****************
  7951 ;; Defined at:
  7952 ;;		line 10 in file "interrupts.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;		None
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      void 
  7959 ;; Registers used:
  7960 ;;		None
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;Total ram usage:        0 bytes
  7971 ;; Hardware stack levels used: 1
  7972 ;; Hardware stack levels required when called: 6
  7973 ;; This function calls:
  7974 ;;		Nothing
  7975 ;; This function is called by:
  7976 ;;		_main
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           
  7980                           	psect	text38
  7981   003C12                     __ptext38:
  7982                           	callstack 0
  7983   003C12                     _Interrupts_init:
  7984                           	callstack 24
  7985   003C12                     
  7986                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7987   003C12  8082               	bsf	130,0,c	;volatile
  7988                           
  7989                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  7990   003C14  010E               	movlb	14	; () banked
  7991   003C16  919A               	bcf	154,0,b	;volatile
  7992                           
  7993                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  7994   003C18  9133               	bcf	51,0,b	;volatile
  7995                           
  7996                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  7997   003C1A  8129               	bsf	41,0,b	;volatile
  7998                           
  7999                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  8000   003C1C  811F               	bsf	31,0,b	;volatile
  8001                           
  8002                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  8003   003C1E  90F2               	bcf	242,0,c	;volatile
  8004                           
  8005                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  8006   003C20  8AF2               	bsf	242,5,c	;volatile
  8007                           
  8008                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  8009   003C22  8CF2               	bsf	242,6,c	;volatile
  8010                           
  8011                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  8012   003C24  8EF2               	bsf	242,7,c	;volatile
  8013   003C26                     
  8014                           ; BSR set to: 14
  8015   003C26  0012               	return		;funcret
  8016   003C28                     __end_of_Interrupts_init:
  8017                           	callstack 0
  8018                           
  8019 ;; *************** function _Color_Interrupts_threshold *****************
  8020 ;; Defined at:
  8021 ;;		line 38 in file "interrupts.c"
  8022 ;; Parameters:    Size  Location     Type
  8023 ;;  upperThresho    2   12[COMRAM] unsigned int 
  8024 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;		None
  8027 ;; Return value:  Size  Location     Type
  8028 ;;                  1    wreg      void 
  8029 ;; Registers used:
  8030 ;;		wreg, status,2, status,0, cstack
  8031 ;; Tracked objects:
  8032 ;;		On entry : 0/0
  8033 ;;		On exit  : 0/0
  8034 ;;		Unchanged: 0/0
  8035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8036 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8039 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8040 ;;Total ram usage:        4 bytes
  8041 ;; Hardware stack levels used: 1
  8042 ;; Hardware stack levels required when called: 9
  8043 ;; This function calls:
  8044 ;;		_color_writetoaddr
  8045 ;; This function is called by:
  8046 ;;		_main
  8047 ;; This function uses a non-reentrant model
  8048 ;;
  8049                           
  8050                           	psect	text39
  8051   003AD4                     __ptext39:
  8052                           	callstack 0
  8053   003AD4                     _Color_Interrupts_threshold:
  8054                           	callstack 21
  8055   003AD4                     
  8056                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8057   003AD4  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  8058   003AD8  0E04               	movlw	4
  8059   003ADA  ECCF  F01D         	call	_color_writetoaddr
  8060                           
  8061                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  8062   003ADE  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8063   003AE0  6E0B               	movwf	color_writetoaddr@value^0,c
  8064   003AE2  0E05               	movlw	5
  8065   003AE4  ECCF  F01D         	call	_color_writetoaddr
  8066                           
  8067                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  8068   003AE8  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  8069   003AEC  0E06               	movlw	6
  8070   003AEE  ECCF  F01D         	call	_color_writetoaddr
  8071                           
  8072                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  8073   003AF2  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8074   003AF4  6E0B               	movwf	color_writetoaddr@value^0,c
  8075   003AF6  0E07               	movlw	7
  8076   003AF8  ECCF  F01D         	call	_color_writetoaddr
  8077   003AFC  0012               	return		;funcret
  8078   003AFE                     __end_of_Color_Interrupts_threshold:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function _Color_Interrupts_init *****************
  8082 ;; Defined at:
  8083 ;;		line 29 in file "interrupts.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;		None
  8088 ;; Return value:  Size  Location     Type
  8089 ;;                  1    wreg      void 
  8090 ;; Registers used:
  8091 ;;		wreg, status,2, status,0, cstack
  8092 ;; Tracked objects:
  8093 ;;		On entry : 0/0
  8094 ;;		On exit  : 0/0
  8095 ;;		Unchanged: 0/0
  8096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8099 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8100 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8101 ;;Total ram usage:        1 bytes
  8102 ;; Hardware stack levels used: 1
  8103 ;; Hardware stack levels required when called: 9
  8104 ;; This function calls:
  8105 ;;		_color_writetoaddr
  8106 ;; This function is called by:
  8107 ;;		_main
  8108 ;; This function uses a non-reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text40
  8112   003BDE                     __ptext40:
  8113                           	callstack 0
  8114   003BDE                     _Color_Interrupts_init:
  8115                           	callstack 21
  8116   003BDE                     
  8117                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  8118   003BDE  0E13               	movlw	19
  8119   003BE0  6E0B               	movwf	color_writetoaddr@value^0,c
  8120   003BE2  0E00               	movlw	0
  8121   003BE4  ECCF  F01D         	call	_color_writetoaddr
  8122   003BE8                     
  8123                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8124   003BE8  0ED0               	movlw	208
  8125   003BEA  6E0D               	movwf	??_Color_Interrupts_init^0,c
  8126   003BEC  0ECA               	movlw	202
  8127   003BEE                     u3747:
  8128   003BEE  2EE8               	decfsz	wreg,f,c
  8129   003BF0  D7FE               	bra	u3747
  8130   003BF2  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  8131   003BF4  D7FC               	bra	u3747
  8132   003BF6  0012               	return		;funcret
  8133   003BF8                     __end_of_Color_Interrupts_init:
  8134                           	callstack 0
  8135                           
  8136 ;; *************** function _color_writetoaddr *****************
  8137 ;; Defined at:
  8138 ;;		line 24 in file "color.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;  address         1    wreg     unsigned char 
  8141 ;;  value           1   10[COMRAM] unsigned char 
  8142 ;; Auto vars:     Size  Location     Type
  8143 ;;  address         1   11[COMRAM] unsigned char 
  8144 ;; Return value:  Size  Location     Type
  8145 ;;                  1    wreg      void 
  8146 ;; Registers used:
  8147 ;;		wreg, status,2, status,0, cstack
  8148 ;; Tracked objects:
  8149 ;;		On entry : 0/0
  8150 ;;		On exit  : 0/0
  8151 ;;		Unchanged: 0/0
  8152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8157 ;;Total ram usage:        2 bytes
  8158 ;; Hardware stack levels used: 1
  8159 ;; Hardware stack levels required when called: 8
  8160 ;; This function calls:
  8161 ;;		_I2C_2_Master_Start
  8162 ;;		_I2C_2_Master_Stop
  8163 ;;		_I2C_2_Master_Write
  8164 ;; This function is called by:
  8165 ;;		_color_click_init
  8166 ;;		_Color_Interrupts_init
  8167 ;;		_Color_Interrupts_threshold
  8168 ;;		_persistence_register
  8169 ;; This function uses a non-reentrant model
  8170 ;;
  8171                           
  8172                           	psect	text41
  8173   003B9E                     __ptext41:
  8174                           	callstack 0
  8175   003B9E                     _color_writetoaddr:
  8176                           	callstack 21
  8177                           
  8178                           ;incstack = 0
  8179                           ;color_writetoaddr@address stored from wreg
  8180   003B9E  6E0C               	movwf	color_writetoaddr@address^0,c
  8181   003BA0                     
  8182                           ;color.c: 25:     I2C_2_Master_Start();
  8183   003BA0  EC42  F01E         	call	_I2C_2_Master_Start	;wreg free
  8184                           
  8185                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8186   003BA4  0E52               	movlw	82
  8187   003BA6  EC21  F01E         	call	_I2C_2_Master_Write
  8188                           
  8189                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8190   003BAA  500C               	movf	color_writetoaddr@address^0,w,c
  8191   003BAC  0980               	iorlw	128
  8192   003BAE  EC21  F01E         	call	_I2C_2_Master_Write
  8193                           
  8194                           ;color.c: 28:     I2C_2_Master_Write(value);
  8195   003BB2  500B               	movf	color_writetoaddr@value^0,w,c
  8196   003BB4  EC21  F01E         	call	_I2C_2_Master_Write
  8197                           
  8198                           ;color.c: 29:     I2C_2_Master_Stop();
  8199   003BB8  EC3D  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8200   003BBC  0012               	return		;funcret
  8201   003BBE                     __end_of_color_writetoaddr:
  8202                           	callstack 0
  8203                           
  8204 ;; *************** function _I2C_2_Master_Write *****************
  8205 ;; Defined at:
  8206 ;;		line 45 in file "i2c.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;  data_byte       1    wreg     unsigned char 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  data_byte       1    9[COMRAM] unsigned char 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      void 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8221 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8223 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8224 ;;Total ram usage:        1 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; Hardware stack levels required when called: 7
  8227 ;; This function calls:
  8228 ;;		_I2C_2_Master_Idle
  8229 ;; This function is called by:
  8230 ;;		_color_writetoaddr
  8231 ;;		_color_read_Red
  8232 ;;		_color_read_Green
  8233 ;;		_color_read_Blue
  8234 ;;		_color_read_Clear
  8235 ;; This function uses a non-reentrant model
  8236 ;;
  8237                           
  8238                           	psect	text42
  8239   003C42                     __ptext42:
  8240                           	callstack 0
  8241   003C42                     _I2C_2_Master_Write:
  8242                           	callstack 20
  8243                           
  8244                           ;incstack = 0
  8245                           ;I2C_2_Master_Write@data_byte stored from wreg
  8246   003C42  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8247   003C44                     
  8248                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8249   003C44  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8250   003C48                     
  8251                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8252   003C48  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8253   003C4C  0012               	return		;funcret
  8254   003C4E                     __end_of_I2C_2_Master_Write:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function _I2C_2_Master_Stop *****************
  8258 ;; Defined at:
  8259 ;;		line 39 in file "i2c.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;		None
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;		None
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;Total ram usage:        0 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 7
  8280 ;; This function calls:
  8281 ;;		_I2C_2_Master_Idle
  8282 ;; This function is called by:
  8283 ;;		_color_writetoaddr
  8284 ;;		_color_read_Red
  8285 ;;		_color_read_Green
  8286 ;;		_color_read_Blue
  8287 ;;		_color_read_Clear
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text43
  8292   003C7A                     __ptext43:
  8293                           	callstack 0
  8294   003C7A                     _I2C_2_Master_Stop:
  8295                           	callstack 20
  8296   003C7A                     
  8297                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8298   003C7A  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8299   003C7E                     
  8300                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8301   003C7E  010E               	movlb	14	; () banked
  8302   003C80  85DA               	bsf	218,2,b	;volatile
  8303   003C82                     
  8304                           ; BSR set to: 14
  8305   003C82  0012               	return		;funcret
  8306   003C84                     __end_of_I2C_2_Master_Stop:
  8307                           	callstack 0
  8308                           
  8309 ;; *************** function _I2C_2_Master_Start *****************
  8310 ;; Defined at:
  8311 ;;		line 27 in file "i2c.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 7
  8332 ;; This function calls:
  8333 ;;		_I2C_2_Master_Idle
  8334 ;; This function is called by:
  8335 ;;		_color_writetoaddr
  8336 ;;		_color_read_Red
  8337 ;;		_color_read_Green
  8338 ;;		_color_read_Blue
  8339 ;;		_color_read_Clear
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text44
  8344   003C84                     __ptext44:
  8345                           	callstack 0
  8346   003C84                     _I2C_2_Master_Start:
  8347                           	callstack 20
  8348   003C84                     
  8349                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8350   003C84  EC94  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8351   003C88                     
  8352                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8353   003C88  010E               	movlb	14	; () banked
  8354   003C8A  81DA               	bsf	218,0,b	;volatile
  8355   003C8C                     
  8356                           ; BSR set to: 14
  8357   003C8C  0012               	return		;funcret
  8358   003C8E                     __end_of_I2C_2_Master_Start:
  8359                           	callstack 0
  8360                           
  8361 ;; *************** function _I2C_2_Master_Idle *****************
  8362 ;; Defined at:
  8363 ;;		line 22 in file "i2c.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used: 1
  8383 ;; Hardware stack levels required when called: 6
  8384 ;; This function calls:
  8385 ;;		Nothing
  8386 ;; This function is called by:
  8387 ;;		_I2C_2_Master_Start
  8388 ;;		_I2C_2_Master_RepStart
  8389 ;;		_I2C_2_Master_Stop
  8390 ;;		_I2C_2_Master_Write
  8391 ;;		_I2C_2_Master_Read
  8392 ;; This function uses a non-reentrant model
  8393 ;;
  8394                           
  8395                           	psect	text45
  8396   003B28                     __ptext45:
  8397                           	callstack 0
  8398   003B28                     _I2C_2_Master_Idle:
  8399                           	callstack 20
  8400   003B28                     l230:
  8401   003B28  010E               	movlb	14	; () banked
  8402   003B2A  B5D8               	btfsc	216,2,b	;volatile
  8403   003B2C  EF9A  F01D         	goto	u1631
  8404   003B30  EF9C  F01D         	goto	u1630
  8405   003B34                     u1631:
  8406   003B34  EF94  F01D         	goto	l230
  8407   003B38                     u1630:
  8408   003B38                     
  8409                           ; BSR set to: 14
  8410   003B38  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8411   003B3C  0E1F               	movlw	31
  8412   003B3E  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8413   003B40  A4D8               	btfss	status,2,c
  8414   003B42  EFA5  F01D         	goto	u1641
  8415   003B46  EFA7  F01D         	goto	u1640
  8416   003B4A                     u1641:
  8417   003B4A  EF94  F01D         	goto	l230
  8418   003B4E                     u1640:
  8419   003B4E                     
  8420                           ; BSR set to: 14
  8421   003B4E  0012               	return		;funcret
  8422   003B50                     __end_of_I2C_2_Master_Idle:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function _HighISR *****************
  8426 ;; Defined at:
  8427 ;;		line 71 in file "interrupts.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;		None
  8430 ;; Auto vars:     Size  Location     Type
  8431 ;;		None
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  1    wreg      void 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0, cstack
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/0
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;Total ram usage:        0 bytes
  8446 ;; Hardware stack levels used: 1
  8447 ;; Hardware stack levels required when called: 5
  8448 ;; This function calls:
  8449 ;;		_Color_Interrupts_clear
  8450 ;; This function is called by:
  8451 ;;		Interrupt level 2
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           	psect	intcode
  8456   000008                     __pintcode:
  8457                           	callstack 0
  8458   000008                     _HighISR:
  8459                           	callstack 20
  8460                           
  8461                           ; BSR set to: 14
  8462                           ;incstack = 0
  8463   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8464   00000A                     
  8465                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  8466   00000A  010E               	movlb	14	; () banked
  8467   00000C  A133               	btfss	51,0,b	;volatile
  8468   00000E  EF0B  F000         	goto	i2u316_41
  8469   000012  EF0D  F000         	goto	i2u316_40
  8470   000016                     i2u316_41:
  8471   000016  EF18  F000         	goto	i2l536
  8472   00001A                     i2u316_40:
  8473   00001A                     
  8474                           ; BSR set to: 14
  8475                           ;interrupts.c: 77:         interrupt_flag = 1;
  8476   00001A  0E00               	movlw	0
  8477   00001C  0100               	movlb	0	; () banked
  8478   00001E  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  8479   000020  0E01               	movlw	1
  8480   000022  6FD8               	movwf	_interrupt_flag& (0+255),b
  8481   000024                     
  8482                           ; BSR set to: 0
  8483                           ;interrupts.c: 78:         interrupt_ctr++;
  8484   000024  4BD6               	infsnz	_interrupt_ctr& (0+255),f,b
  8485   000026  2BD7               	incf	(_interrupt_ctr+1)& (0+255),f,b
  8486   000028                     
  8487                           ; BSR set to: 0
  8488                           ;interrupts.c: 79:         Color_Interrupts_clear();
  8489   000028  EC3C  F01D         	call	_Color_Interrupts_clear	;wreg free
  8490   00002C                     
  8491                           ;interrupts.c: 80:         PIR0bits.INT0IF = 0;
  8492   00002C  010E               	movlb	14	; () banked
  8493   00002E  9133               	bcf	51,0,b	;volatile
  8494   000030                     i2l536:
  8495                           
  8496                           ; BSR set to: 14
  8497   000030  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8498   000032  0011               	retfie		f
  8499   000034                     __end_of_HighISR:
  8500                           	callstack 0
  8501                           
  8502 ;; *************** function _Color_Interrupts_clear *****************
  8503 ;; Defined at:
  8504 ;;		line 51 in file "interrupts.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;		None
  8507 ;; Auto vars:     Size  Location     Type
  8508 ;;		None
  8509 ;; Return value:  Size  Location     Type
  8510 ;;                  1    wreg      void 
  8511 ;; Registers used:
  8512 ;;		wreg, status,2, status,0, cstack
  8513 ;; Tracked objects:
  8514 ;;		On entry : 0/0
  8515 ;;		On exit  : 0/0
  8516 ;;		Unchanged: 0/0
  8517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8522 ;;Total ram usage:        0 bytes
  8523 ;; Hardware stack levels used: 1
  8524 ;; Hardware stack levels required when called: 4
  8525 ;; This function calls:
  8526 ;;		i2_Color_Interrupts_init
  8527 ;;		i2_Color_Interrupts_threshold
  8528 ;;		i2_I2C_2_Master_Start
  8529 ;;		i2_I2C_2_Master_Stop
  8530 ;;		i2_I2C_2_Master_Write
  8531 ;;		i2_persistence_register
  8532 ;; This function is called by:
  8533 ;;		_HighISR
  8534 ;; This function uses a non-reentrant model
  8535 ;;
  8536                           
  8537                           	psect	text47
  8538   003A78                     __ptext47:
  8539                           	callstack 0
  8540   003A78                     _Color_Interrupts_clear:
  8541                           	callstack 20
  8542   003A78                     
  8543                           ;interrupts.c: 55:     I2C_2_Master_Start();
  8544   003A78  EC4C  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8545                           
  8546                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  8547   003A7C  0E52               	movlw	82
  8548   003A7E  EC2D  F01E         	call	i2_I2C_2_Master_Write
  8549                           
  8550                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  8551   003A82  0EE6               	movlw	230
  8552   003A84  EC2D  F01E         	call	i2_I2C_2_Master_Write
  8553                           
  8554                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  8555   003A88  EC47  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8556                           
  8557                           ;interrupts.c: 61:     Color_Interrupts_init();
  8558   003A8C  ECFC  F01D         	call	i2_Color_Interrupts_init	;wreg free
  8559                           
  8560                           ;interrupts.c: 62:     persistence_register();
  8561   003A90  EC27  F01E         	call	i2_persistence_register	;wreg free
  8562                           
  8563                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  8564   003A94  C0EA  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  8565   003A98  C0EB  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  8566   003A9C  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  8567   003AA0  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  8568   003AA4  EC7F  F01D         	call	i2_Color_Interrupts_threshold	;wreg free
  8569   003AA8  0012               	return		;funcret
  8570   003AAA                     __end_of_Color_Interrupts_clear:
  8571                           	callstack 0
  8572                           
  8573 ;; *************** function i2_persistence_register *****************
  8574 ;; Defined at:
  8575 ;;		line 46 in file "interrupts.c"
  8576 ;; Parameters:    Size  Location     Type
  8577 ;;		None
  8578 ;; Auto vars:     Size  Location     Type
  8579 ;;		None
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8593 ;;Total ram usage:        0 bytes
  8594 ;; Hardware stack levels used: 1
  8595 ;; Hardware stack levels required when called: 3
  8596 ;; This function calls:
  8597 ;;		i2_color_writetoaddr
  8598 ;; This function is called by:
  8599 ;;		_Color_Interrupts_clear
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           	psect	text48
  8604   003C4E                     __ptext48:
  8605                           	callstack 0
  8606   003C4E                     i2_persistence_register:
  8607                           	callstack 20
  8608   003C4E                     
  8609                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  8610   003C4E  0E02               	movlw	2
  8611   003C50  6E03               	movwf	i2color_writetoaddr@value^0,c
  8612   003C52  0E0C               	movlw	12
  8613   003C54  ECDF  F01D         	call	i2_color_writetoaddr
  8614   003C58  0012               	return		;funcret
  8615   003C5A                     __end_ofi2_persistence_register:
  8616                           	callstack 0
  8617                           
  8618 ;; *************** function i2_Color_Interrupts_threshold *****************
  8619 ;; Defined at:
  8620 ;;		line 38 in file "interrupts.c"
  8621 ;; Parameters:    Size  Location     Type
  8622 ;;  upperThresho    2    4[COMRAM] unsigned int 
  8623 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  8624 ;; Auto vars:     Size  Location     Type
  8625 ;;		None
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  1    wreg      void 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0, cstack
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;Total ram usage:        4 bytes
  8640 ;; Hardware stack levels used: 1
  8641 ;; Hardware stack levels required when called: 3
  8642 ;; This function calls:
  8643 ;;		i2_color_writetoaddr
  8644 ;; This function is called by:
  8645 ;;		_Color_Interrupts_clear
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text49
  8650   003AFE                     __ptext49:
  8651                           	callstack 0
  8652   003AFE                     i2_Color_Interrupts_threshold:
  8653                           	callstack 20
  8654   003AFE                     
  8655                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8656   003AFE  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  8657   003B02  0E04               	movlw	4
  8658   003B04  ECDF  F01D         	call	i2_color_writetoaddr
  8659                           
  8660                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  8661   003B08  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8662   003B0A  6E03               	movwf	i2color_writetoaddr@value^0,c
  8663   003B0C  0E05               	movlw	5
  8664   003B0E  ECDF  F01D         	call	i2_color_writetoaddr
  8665                           
  8666                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  8667   003B12  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  8668   003B16  0E06               	movlw	6
  8669   003B18  ECDF  F01D         	call	i2_color_writetoaddr
  8670                           
  8671                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  8672   003B1C  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8673   003B1E  6E03               	movwf	i2color_writetoaddr@value^0,c
  8674   003B20  0E07               	movlw	7
  8675   003B22  ECDF  F01D         	call	i2_color_writetoaddr
  8676   003B26  0012               	return		;funcret
  8677   003B28                     __end_ofi2_Color_Interrupts_threshold:
  8678                           	callstack 0
  8679                           
  8680 ;; *************** function i2_Color_Interrupts_init *****************
  8681 ;; Defined at:
  8682 ;;		line 29 in file "interrupts.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;		None
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;		None
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg, status,2, status,0, cstack
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8700 ;;Total ram usage:        1 bytes
  8701 ;; Hardware stack levels used: 1
  8702 ;; Hardware stack levels required when called: 3
  8703 ;; This function calls:
  8704 ;;		i2_color_writetoaddr
  8705 ;; This function is called by:
  8706 ;;		_Color_Interrupts_clear
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text50
  8711   003BF8                     __ptext50:
  8712                           	callstack 0
  8713   003BF8                     i2_Color_Interrupts_init:
  8714                           	callstack 20
  8715   003BF8                     
  8716                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  8717   003BF8  0E13               	movlw	19
  8718   003BFA  6E03               	movwf	i2color_writetoaddr@value^0,c
  8719   003BFC  0E00               	movlw	0
  8720   003BFE  ECDF  F01D         	call	i2_color_writetoaddr
  8721   003C02                     
  8722                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8723   003C02  0ED0               	movlw	208
  8724   003C04  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  8725   003C06  0ECA               	movlw	202
  8726   003C08                     i2u375_47:
  8727   003C08  2EE8               	decfsz	wreg,f,c
  8728   003C0A  D7FE               	bra	i2u375_47
  8729   003C0C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  8730   003C0E  D7FC               	bra	i2u375_47
  8731   003C10  0012               	return		;funcret
  8732   003C12                     __end_ofi2_Color_Interrupts_init:
  8733                           	callstack 0
  8734                           
  8735 ;; *************** function i2_color_writetoaddr *****************
  8736 ;; Defined at:
  8737 ;;		line 24 in file "color.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  address         1    wreg     unsigned char 
  8740 ;;  value           1    2[COMRAM] unsigned char 
  8741 ;; Auto vars:     Size  Location     Type
  8742 ;;  address         1    3[COMRAM] unsigned char 
  8743 ;; Return value:  Size  Location     Type
  8744 ;;                  1    wreg      void 
  8745 ;; Registers used:
  8746 ;;		wreg, status,2, status,0, cstack
  8747 ;; Tracked objects:
  8748 ;;		On entry : 0/0
  8749 ;;		On exit  : 0/0
  8750 ;;		Unchanged: 0/0
  8751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8752 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8755 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8756 ;;Total ram usage:        2 bytes
  8757 ;; Hardware stack levels used: 1
  8758 ;; Hardware stack levels required when called: 2
  8759 ;; This function calls:
  8760 ;;		i2_I2C_2_Master_Start
  8761 ;;		i2_I2C_2_Master_Stop
  8762 ;;		i2_I2C_2_Master_Write
  8763 ;; This function is called by:
  8764 ;;		i2_Color_Interrupts_init
  8765 ;;		i2_Color_Interrupts_threshold
  8766 ;;		i2_persistence_register
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text51
  8771   003BBE                     __ptext51:
  8772                           	callstack 0
  8773   003BBE                     i2_color_writetoaddr:
  8774                           	callstack 20
  8775                           
  8776                           ;incstack = 0
  8777                           ;i2color_writetoaddr@address stored from wreg
  8778   003BBE  6E04               	movwf	i2color_writetoaddr@address^0,c
  8779   003BC0                     
  8780                           ;color.c: 25:     I2C_2_Master_Start();
  8781   003BC0  EC4C  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8782                           
  8783                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8784   003BC4  0E52               	movlw	82
  8785   003BC6  EC2D  F01E         	call	i2_I2C_2_Master_Write
  8786                           
  8787                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8788   003BCA  5004               	movf	i2color_writetoaddr@address^0,w,c
  8789   003BCC  0980               	iorlw	128
  8790   003BCE  EC2D  F01E         	call	i2_I2C_2_Master_Write
  8791                           
  8792                           ;color.c: 28:     I2C_2_Master_Write(value);
  8793   003BD2  5003               	movf	i2color_writetoaddr@value^0,w,c
  8794   003BD4  EC2D  F01E         	call	i2_I2C_2_Master_Write
  8795                           
  8796                           ;color.c: 29:     I2C_2_Master_Stop();
  8797   003BD8  EC47  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8798   003BDC  0012               	return		;funcret
  8799   003BDE                     __end_ofi2_color_writetoaddr:
  8800                           	callstack 0
  8801                           
  8802 ;; *************** function i2_I2C_2_Master_Write *****************
  8803 ;; Defined at:
  8804 ;;		line 45 in file "i2c.c"
  8805 ;; Parameters:    Size  Location     Type
  8806 ;;  data_byte       1    wreg     unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  data_byte       1    1[COMRAM] unsigned char 
  8809 ;; Return value:  Size  Location     Type
  8810 ;;                  1    wreg      void 
  8811 ;; Registers used:
  8812 ;;		wreg, status,2, status,0, cstack
  8813 ;; Tracked objects:
  8814 ;;		On entry : 0/0
  8815 ;;		On exit  : 0/0
  8816 ;;		Unchanged: 0/0
  8817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;Total ram usage:        1 bytes
  8823 ;; Hardware stack levels used: 1
  8824 ;; Hardware stack levels required when called: 1
  8825 ;; This function calls:
  8826 ;;		i2_I2C_2_Master_Idle
  8827 ;; This function is called by:
  8828 ;;		_Color_Interrupts_clear
  8829 ;;		i2_color_writetoaddr
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text52
  8834   003C5A                     __ptext52:
  8835                           	callstack 0
  8836   003C5A                     i2_I2C_2_Master_Write:
  8837                           	callstack 20
  8838                           
  8839                           ;incstack = 0
  8840                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8841   003C5A  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8842   003C5C                     
  8843                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8844   003C5C  ECA8  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8845   003C60                     
  8846                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8847   003C60  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8848   003C64  0012               	return		;funcret
  8849   003C66                     __end_ofi2_I2C_2_Master_Write:
  8850                           	callstack 0
  8851                           
  8852 ;; *************** function i2_I2C_2_Master_Stop *****************
  8853 ;; Defined at:
  8854 ;;		line 39 in file "i2c.c"
  8855 ;; Parameters:    Size  Location     Type
  8856 ;;		None
  8857 ;; Auto vars:     Size  Location     Type
  8858 ;;		None
  8859 ;; Return value:  Size  Location     Type
  8860 ;;                  1    wreg      void 
  8861 ;; Registers used:
  8862 ;;		wreg, status,2, status,0, cstack
  8863 ;; Tracked objects:
  8864 ;;		On entry : 0/0
  8865 ;;		On exit  : 0/0
  8866 ;;		Unchanged: 0/0
  8867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8872 ;;Total ram usage:        0 bytes
  8873 ;; Hardware stack levels used: 1
  8874 ;; Hardware stack levels required when called: 1
  8875 ;; This function calls:
  8876 ;;		i2_I2C_2_Master_Idle
  8877 ;; This function is called by:
  8878 ;;		_Color_Interrupts_clear
  8879 ;;		i2_color_writetoaddr
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           	psect	text53
  8884   003C8E                     __ptext53:
  8885                           	callstack 0
  8886   003C8E                     i2_I2C_2_Master_Stop:
  8887                           	callstack 20
  8888   003C8E                     
  8889                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8890   003C8E  ECA8  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8891   003C92                     
  8892                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8893   003C92  010E               	movlb	14	; () banked
  8894   003C94  85DA               	bsf	218,2,b	;volatile
  8895   003C96                     
  8896                           ; BSR set to: 14
  8897   003C96  0012               	return		;funcret
  8898   003C98                     __end_ofi2_I2C_2_Master_Stop:
  8899                           	callstack 0
  8900                           
  8901 ;; *************** function i2_I2C_2_Master_Start *****************
  8902 ;; Defined at:
  8903 ;;		line 27 in file "i2c.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;		None
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;		None
  8908 ;; Return value:  Size  Location     Type
  8909 ;;                  1    wreg      void 
  8910 ;; Registers used:
  8911 ;;		wreg, status,2, status,0, cstack
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8921 ;;Total ram usage:        0 bytes
  8922 ;; Hardware stack levels used: 1
  8923 ;; Hardware stack levels required when called: 1
  8924 ;; This function calls:
  8925 ;;		i2_I2C_2_Master_Idle
  8926 ;; This function is called by:
  8927 ;;		_Color_Interrupts_clear
  8928 ;;		i2_color_writetoaddr
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text54
  8933   003C98                     __ptext54:
  8934                           	callstack 0
  8935   003C98                     i2_I2C_2_Master_Start:
  8936                           	callstack 20
  8937   003C98                     
  8938                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8939   003C98  ECA8  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8940   003C9C                     
  8941                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8942   003C9C  010E               	movlb	14	; () banked
  8943   003C9E  81DA               	bsf	218,0,b	;volatile
  8944   003CA0                     
  8945                           ; BSR set to: 14
  8946   003CA0  0012               	return		;funcret
  8947   003CA2                     __end_ofi2_I2C_2_Master_Start:
  8948                           	callstack 0
  8949                           
  8950 ;; *************** function i2_I2C_2_Master_Idle *****************
  8951 ;; Defined at:
  8952 ;;		line 22 in file "i2c.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;		None
  8955 ;; Auto vars:     Size  Location     Type
  8956 ;;		None
  8957 ;; Return value:  Size  Location     Type
  8958 ;;                  1    wreg      void 
  8959 ;; Registers used:
  8960 ;;		wreg, status,2, status,0
  8961 ;; Tracked objects:
  8962 ;;		On entry : 0/0
  8963 ;;		On exit  : 0/0
  8964 ;;		Unchanged: 0/0
  8965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;Total ram usage:        1 bytes
  8971 ;; Hardware stack levels used: 1
  8972 ;; This function calls:
  8973 ;;		Nothing
  8974 ;; This function is called by:
  8975 ;;		i2_I2C_2_Master_Start
  8976 ;;		i2_I2C_2_Master_Stop
  8977 ;;		i2_I2C_2_Master_Write
  8978 ;; This function uses a non-reentrant model
  8979 ;;
  8980                           
  8981                           	psect	text55
  8982   003B50                     __ptext55:
  8983                           	callstack 0
  8984   003B50                     i2_I2C_2_Master_Idle:
  8985                           	callstack 20
  8986   003B50                     i2l230:
  8987   003B50  010E               	movlb	14	; () banked
  8988   003B52  B5D8               	btfsc	216,2,b	;volatile
  8989   003B54  EFAE  F01D         	goto	i2u168_41
  8990   003B58  EFB0  F01D         	goto	i2u168_40
  8991   003B5C                     i2u168_41:
  8992   003B5C  EFA8  F01D         	goto	i2l230
  8993   003B60                     i2u168_40:
  8994   003B60                     
  8995                           ; BSR set to: 14
  8996   003B60  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8997   003B64  0E1F               	movlw	31
  8998   003B66  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8999   003B68  A4D8               	btfss	status,2,c
  9000   003B6A  EFB9  F01D         	goto	i2u169_41
  9001   003B6E  EFBB  F01D         	goto	i2u169_40
  9002   003B72                     i2u169_41:
  9003   003B72  EFA8  F01D         	goto	i2l230
  9004   003B76                     i2u169_40:
  9005   003B76                     
  9006                           ; BSR set to: 14
  9007   003B76  0012               	return		;funcret
  9008   003B78                     __end_ofi2_I2C_2_Master_Idle:
  9009                           	callstack 0
  9010                           
  9011                           	psect	rparam
  9012   000000                     
  9013                           	psect	temp
  9014   000057                     btemp:
  9015                           	callstack 0
  9016   000057                     	ds	1
  9017   000000                     int$flags	set	btemp
  9018   000000                     wtemp8	set	btemp+1
  9019   000000                     ttemp5	set	btemp+1
  9020   000000                     ttemp6	set	btemp+4
  9021   000000                     ttemp7	set	btemp+8
  9022                           
  9023                           	psect	idloc
  9024                           
  9025                           ;Config register IDLOC0 @ 0x200000
  9026                           ;	unspecified, using default values
  9027   200000                     	org	2097152
  9028   200000  0FFF               	dw	4095
  9029                           
  9030                           ;Config register IDLOC1 @ 0x200002
  9031                           ;	unspecified, using default values
  9032   200002                     	org	2097154
  9033   200002  0FFF               	dw	4095
  9034                           
  9035                           ;Config register IDLOC2 @ 0x200004
  9036                           ;	unspecified, using default values
  9037   200004                     	org	2097156
  9038   200004  0FFF               	dw	4095
  9039                           
  9040                           ;Config register IDLOC3 @ 0x200006
  9041                           ;	unspecified, using default values
  9042   200006                     	org	2097158
  9043   200006  0FFF               	dw	4095
  9044                           
  9045                           ;Config register IDLOC4 @ 0x200008
  9046                           ;	unspecified, using default values
  9047   200008                     	org	2097160
  9048   200008  0FFF               	dw	4095
  9049                           
  9050                           ;Config register IDLOC5 @ 0x20000A
  9051                           ;	unspecified, using default values
  9052   20000A                     	org	2097162
  9053   20000A  0FFF               	dw	4095
  9054                           
  9055                           ;Config register IDLOC6 @ 0x20000C
  9056                           ;	unspecified, using default values
  9057   20000C                     	org	2097164
  9058   20000C  0FFF               	dw	4095
  9059                           
  9060                           ;Config register IDLOC7 @ 0x20000E
  9061                           ;	unspecified, using default values
  9062   20000E                     	org	2097166
  9063   20000E  0FFF               	dw	4095
  9064                           
  9065                           	psect	config
  9066                           
  9067                           ;Config register CONFIG1L @ 0x300000
  9068                           ;	External Oscillator mode Selection bits
  9069                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9070                           ;	Power-up default value for COSC bits
  9071                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9072   300000                     	org	3145728
  9073   300000  AA                 	db	170
  9074                           
  9075                           ;Config register CONFIG1H @ 0x300001
  9076                           ;	unspecified, using default values
  9077                           ;	Clock Out Enable bit
  9078                           ;	CLKOUTEN = 0x1, unprogrammed default
  9079                           ;	Clock Switch Enable bit
  9080                           ;	CSWEN = 0x1, unprogrammed default
  9081                           ;	Fail-Safe Clock Monitor Enable bit
  9082                           ;	FCMEN = 0x1, unprogrammed default
  9083   300001                     	org	3145729
  9084   300001  FF                 	db	255
  9085                           
  9086                           ;Config register CONFIG2L @ 0x300002
  9087                           ;	unspecified, using default values
  9088                           ;	Master Clear Enable bit
  9089                           ;	MCLRE = 0x1, unprogrammed default
  9090                           ;	Power-up Timer Enable bit
  9091                           ;	PWRTE = 0x1, unprogrammed default
  9092                           ;	Low-power BOR enable bit
  9093                           ;	LPBOREN = 0x1, unprogrammed default
  9094                           ;	Brown-out Reset Enable bits
  9095                           ;	BOREN = 0x3, unprogrammed default
  9096   300002                     	org	3145730
  9097   300002  FF                 	db	255
  9098                           
  9099                           ;Config register CONFIG2H @ 0x300003
  9100                           ;	unspecified, using default values
  9101                           ;	Brown Out Reset Voltage selection bits
  9102                           ;	BORV = 0x3, unprogrammed default
  9103                           ;	ZCD Disable bit
  9104                           ;	ZCD = 0x1, unprogrammed default
  9105                           ;	PPSLOCK bit One-Way Set Enable bit
  9106                           ;	PPS1WAY = 0x1, unprogrammed default
  9107                           ;	Stack Full/Underflow Reset Enable bit
  9108                           ;	STVREN = 0x1, unprogrammed default
  9109                           ;	Debugger Enable bit
  9110                           ;	DEBUG = 0x1, unprogrammed default
  9111                           ;	Extended Instruction Set Enable bit
  9112                           ;	XINST = 0x1, unprogrammed default
  9113   300003                     	org	3145731
  9114   300003  FF                 	db	255
  9115                           
  9116                           ;Config register CONFIG3L @ 0x300004
  9117                           ;	WDT Period Select bits
  9118                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9119                           ;	WDT operating mode
  9120                           ;	WDTE = OFF, WDT Disabled
  9121   300004                     	org	3145732
  9122   300004  9F                 	db	159
  9123                           
  9124                           ;Config register CONFIG3H @ 0x300005
  9125                           ;	unspecified, using default values
  9126                           ;	WDT Window Select bits
  9127                           ;	WDTCWS = 0x7, unprogrammed default
  9128                           ;	WDT input clock selector
  9129                           ;	WDTCCS = 0x7, unprogrammed default
  9130   300005                     	org	3145733
  9131   300005  FF                 	db	255
  9132                           
  9133                           ;Config register CONFIG4L @ 0x300006
  9134                           ;	unspecified, using default values
  9135                           ;	Write Protection Block 0
  9136                           ;	WRT0 = 0x1, unprogrammed default
  9137                           ;	Write Protection Block 1
  9138                           ;	WRT1 = 0x1, unprogrammed default
  9139                           ;	Write Protection Block 2
  9140                           ;	WRT2 = 0x1, unprogrammed default
  9141                           ;	Write Protection Block 3
  9142                           ;	WRT3 = 0x1, unprogrammed default
  9143                           ;	Write Protection Block 3
  9144                           ;	WRT4 = 0x1, unprogrammed default
  9145                           ;	Write Protection Block 3
  9146                           ;	WRT5 = 0x1, unprogrammed default
  9147                           ;	Write Protection Block 3
  9148                           ;	WRT6 = 0x1, unprogrammed default
  9149                           ;	Write Protection Block 3
  9150                           ;	WRT7 = 0x1, unprogrammed default
  9151   300006                     	org	3145734
  9152   300006  FF                 	db	255
  9153                           
  9154                           ;Config register CONFIG4H @ 0x300007
  9155                           ;	unspecified, using default values
  9156                           ;	Configuration Register Write Protection bit
  9157                           ;	WRTC = 0x1, unprogrammed default
  9158                           ;	Boot Block Write Protection bit
  9159                           ;	WRTB = 0x1, unprogrammed default
  9160                           ;	Data EEPROM Write Protection bit
  9161                           ;	WRTD = 0x1, unprogrammed default
  9162                           ;	Scanner Enable bit
  9163                           ;	SCANE = 0x1, unprogrammed default
  9164                           ;	Low Voltage Programming Enable bit
  9165                           ;	LVP = 0x1, unprogrammed default
  9166   300007                     	org	3145735
  9167   300007  FF                 	db	255
  9168                           
  9169                           ;Config register CONFIG5L @ 0x300008
  9170                           ;	unspecified, using default values
  9171                           ;	UserNVM Program Memory Code Protection bit
  9172                           ;	CP = 0x1, unprogrammed default
  9173                           ;	DataNVM Memory Code Protection bit
  9174                           ;	CPD = 0x1, unprogrammed default
  9175   300008                     	org	3145736
  9176   300008  FF                 	db	255
  9177                           
  9178                           ;Config register CONFIG5H @ 0x300009
  9179                           ;	unspecified, using default values
  9180   300009                     	org	3145737
  9181   300009  FF                 	db	255
  9182                           
  9183                           ;Config register CONFIG6L @ 0x30000A
  9184                           ;	unspecified, using default values
  9185                           ;	Table Read Protection Block 0
  9186                           ;	EBTR0 = 0x1, unprogrammed default
  9187                           ;	Table Read Protection Block 1
  9188                           ;	EBTR1 = 0x1, unprogrammed default
  9189                           ;	Table Read Protection Block 2
  9190                           ;	EBTR2 = 0x1, unprogrammed default
  9191                           ;	Table Read Protection Block 3
  9192                           ;	EBTR3 = 0x1, unprogrammed default
  9193                           ;	Table Read Protection Block 4
  9194                           ;	EBTR4 = 0x1, unprogrammed default
  9195                           ;	Table Read Protection Block 5
  9196                           ;	EBTR5 = 0x1, unprogrammed default
  9197                           ;	Table Read Protection Block 6
  9198                           ;	EBTR6 = 0x1, unprogrammed default
  9199                           ;	Table Read Protection Block 7
  9200                           ;	EBTR7 = 0x1, unprogrammed default
  9201   30000A                     	org	3145738
  9202   30000A  FF                 	db	255
  9203                           
  9204                           ;Config register CONFIG6H @ 0x30000B
  9205                           ;	unspecified, using default values
  9206                           ;	Boot Block Table Read Protection bit
  9207                           ;	EBTRB = 0x1, unprogrammed default
  9208   30000B                     	org	3145739
  9209   30000B  FF                 	db	255
  9210                           tosu	equ	0xFFF
  9211                           tosh	equ	0xFFE
  9212                           tosl	equ	0xFFD
  9213                           stkptr	equ	0xFFC
  9214                           pclatu	equ	0xFFB
  9215                           pclath	equ	0xFFA
  9216                           pcl	equ	0xFF9
  9217                           tblptru	equ	0xFF8
  9218                           tblptrh	equ	0xFF7
  9219                           tblptrl	equ	0xFF6
  9220                           tablat	equ	0xFF5
  9221                           prodh	equ	0xFF4
  9222                           prodl	equ	0xFF3
  9223                           indf0	equ	0xFEF
  9224                           postinc0	equ	0xFEE
  9225                           postdec0	equ	0xFED
  9226                           preinc0	equ	0xFEC
  9227                           plusw0	equ	0xFEB
  9228                           fsr0h	equ	0xFEA
  9229                           fsr0l	equ	0xFE9
  9230                           wreg	equ	0xFE8
  9231                           indf1	equ	0xFE7
  9232                           postinc1	equ	0xFE6
  9233                           postdec1	equ	0xFE5
  9234                           preinc1	equ	0xFE4
  9235                           plusw1	equ	0xFE3
  9236                           fsr1h	equ	0xFE2
  9237                           fsr1l	equ	0xFE1
  9238                           bsr	equ	0xFE0
  9239                           indf2	equ	0xFDF
  9240                           postinc2	equ	0xFDE
  9241                           postdec2	equ	0xFDD
  9242                           preinc2	equ	0xFDC
  9243                           plusw2	equ	0xFDB
  9244                           fsr2h	equ	0xFDA
  9245                           fsr2l	equ	0xFD9
  9246                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      86
    BANK0           160     84     140
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2781$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2781$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    rangeCalibrate@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _rangeCalibrate->_color_normalise
    _wallSmash->_setMotorPWM
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0  110646
                                             32 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                    _calibSwitchInit
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      34    28      6   17060
                                             60 COMRAM     2     2      0
                                              0 BANK0     32    26      6
                            ___fladd
                    _color_normalise
                    _color_read_RGBC
                          _norm_stop
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1394
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    2735
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1639
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2996
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   30796
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34986
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11178
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _norm_stop                                            4     0      4    5261
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    5045
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3416
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibSwitchInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _calibSwitchInit
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     ___fladd
     _color_normalise
     _color_read_RGBC
     _norm_stop
     _wallSmash
       _setMotorPWM
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllhl     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRlllllh      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      63        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 08:58:30 2022

                            _color_read_Red 3842                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 347A  
                              ___fldiv@sign 0032                             _color_read_Blue 3932  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 38E2                            _color_read_Green 3892  
                         ??_Interrupts_init 0009                                         l200 3CA8  
                                       l113 3A44                                         l122 38E0  
                                       l116 3BBC                                         l125 3980  
                                       l230 3B28                                         l134 353E  
                                       l119 3890                                         l143 3C34  
                                       l128 3930                                         l152 3CBA  
                                       l233 3B4E                                         l137 2F3C  
                                       l242 3C82                                         l162 2C18  
                                       l146 3CAE                                         l227 3AD2  
                                       l236 3C8C                                         l245 3C4C  
                                       l149 3CB4                                         l158 29D6  
                                       l167 1A94                                         l191 231C  
                                       l239 3C6E                                         l248 3A10  
                                       l521 3BF6                                         l355 2876  
                                       l524 3AFC                                         l701 32A4  
                                       l197 231C                                         l518 3C26  
                                       l710 3B9C                                         l527 3C40  
                                       l704 3840                                         l641 35BE  
                                       l651 37EA                                         l707 3C78  
                                       l654 3780                                         l671 36A4  
                                       l648 30A8                                         l665 3A76  
                                       l668 3716                                         l685 3478  
                                       l693 338E                                         l696 3244  
                                       l980 31AC                                         l975 3166  
                          ??_motor_response 002D              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 3C28                         i2_color_writetoaddr 3BBE  
                                       wreg 000FE8                             _color_normalise 2DCE  
                                      l1201 362A                                        l1303 255C  
                                      l1208 3632                                        l1240 1C38  
                                      l3000 2CF2                                        l1305 25D4  
                                      l1306 25C2                                        l3010 2D72  
                                      l3002 2CFE                                        l3100 37EC  
                                      l3020 2DBA                                        l3012 2D74  
                                      l3004 2D3A                                        l3030 3AB4  
                                      l3102 3800                                        l3110 365C  
                                      l1238 1C84                                        l3022 2DBC  
                                      l3014 2D78                                        l3006 2D46  
                                      l1255 1D9E                                        l1247 1F54  
                                      l1239 1C72                                        l3040 3BA0  
                                      l3032 3ABA                                        l3104 3816  
                                      l3112 366C                                        l3120 3390  
                                      l1264 1E6E                                        l3200 1BA6  
                                      l3016 2D9C                                        l3008 2D54  
                                      l4000 26FE                                        l1265 1E5C  
                                      l3034 3ABC                                        l3114 367C  
                                      l3106 3634                                        l3130 33EC  
                                      l3122 33A8                                        l3210 1BBA  
                                      l3202 1BAA                                        l3018 2DAC  
                                      l3050 2E82                                        l3042 347A  
                                      l4010 272A                                        l4002 2700  
                                      l3036 3ABE                                        l3028 3AAA  
                                      l3116 368C                                        l3108 364C  
                                      l3140 3448                                        l3132 3400  
                                      l3124 33B8                                        l3300 1E0C  
                                      l3220 1BCE                                        l3212 1BBE  
                                      l3204 1BAE                                        l1292 26B6  
                                      l1372 2D08                                        l3052 2EDA  
                                      l3044 2DCE                                        l3060 32A6  
                                      l4020 2758                                        l4012 273E  
                                      l4004 2704                                        l1365 2C70  
                                      l3038 3AC0                                        l3118 3698  
                                      l3142 3460                                        l3134 340C  
                                      l3126 33C8                                        l3310 1E3E  
                                      l3302 1E1C                                        l3230 1C20  
                                      l3222 1BD2                                        l3214 1BC2  
                                      l3206 1BB2                                        l3150 1AB0  
                                      l1294 2516                                        l3046 2DD6  
                                      l3070 3302                                        l3062 32BE  
                                      l3054 3CAA                                        l4030 2768  
                                      l4022 2760                                        l4014 2742  
                                      l4006 2722                                        l3144 346C  
                                      l3136 3418                                        l3128 33D8  
                                      l3320 1E98                                        l3312 1E54  
                                      l3304 1E1E                                        l3240 1C64  
                                      l3232 1C30                                        l3216 1BC6  
                                      l3208 1BB6                                        l3224 1BD6  
                                      l3160 1AE4                                        l3152 1AB2  
                                      l1368 2DCC                                        l3048 2E2A  
                                      l3080 335E                                        l3072 3316  
                                      l3064 32CE                                        l3056 3CB0  
                                      l4040 2784                                        l4032 276A  
                                      l4024 2762                                        l4016 2748  
                                      l4008 2726                                        l1297 24DA  
                                      l3090 36CE                                        l3138 3430  
                                      l3330 1F14                                        l3322 1ED2  
                                      l3306 1E2C                                        l3242 1C66  
                                      l3234 1C46                                        l3226 1BDA  
                                      l3218 1BCA                                        l3170 1B16  
                                      l3154 1AC2                                        l3162 1AEC  
                                      l3146 1A96                                        l3082 3376  
                                      l3074 3322                                        l3066 32DE  
                                      l3058 3CB6                                        l4050 27E4  
                                      l4042 2798                                        l4034 276C  
                                      l4026 2764                                        l4018 2750  
                                      l1379 2D64                                        l3092 36DE  
                                      l3500 1438                                        l3340 1F34  
                                      l3332 1F18                                        l3316 1E7E  
                                      l3324 1ED4                                        l3308 1E30  
                                      l3260 1CEE                                        l3252 1CB6  
                                      l3244 1C70                                        l3236 1C52  
                                      l3228 1C04                                        l3180 1B4C  
                                      l3172 1B1C                                        l3164 1AFC  
                                      l3156 1AD2                                        l3148 1AA2  
                                      l3084 3382                                        l3076 332E  
                                      l3068 32EE                                        l4060 2832  
                                      l4052 27F6                                        l4044 27B4  
                                      l4036 276E                                        l4028 2766  
                                      l3350 30D8                                        l2710 35EA  
                                      l2702 35C0                                        l3094 36EE  
                                      l3086 36A6                                        l3510 14F8  
                                      l3430 0E56                                        l3342 1F42  
                                      l3334 1F26                                        l3326 1EE4  
                                      l3318 1E8A                                        l3262 1CF2  
                                      l3254 1CC6                                        l3246 1C92  
                                      l3270 1D12                                        l3238 1C56  
                                      l3190 1B88                                        l3182 1B5C  
                                      l3174 1B2A                                        l3166 1B02  
                                      l3158 1AE2                                        l3078 3346  
                                      l4070 28A6                                        l4062 283E  
                                      l4054 27F8                                        l4046 27C8  
                                      l4038 2770                                        l3360 3146  
                                      l3352 30E8                                        l2720 361E  
                                      l2712 35F8                                        l2704 35C8  
                                      l3096 36FE                                        l3088 36BE  
                                      l3600 19B0                                        l3520 157C  
                                      l3512 1520                                        l3440 0F8C  
                                      l3432 0E94                                        l3504 143E  
                                      l3344 1F44                                        l3336 1F2C  
                                      l3328 1EF4                                        l3272 1D38  
                                      l3280 1D8E                                        l3264 1D00  
                                      l3256 1CD4                                        l3248 1CA2  
                                      l3192 1B96                                        l3184 1B5E  
                                      l3176 1B2C                                        l3168 1B14  
                                      l2800 3978                                        l4080 28F6  
                                      l4072 28C2                                        l4064 286E  
                                      l4056 280C                                        l4048 27E2  
                                      l2730 3C88                                        l3362 3154  
                                      l3354 3116                                        l2722 3624  
                                      l2714 35FE                                        l2706 35DA  
                                      l3098 370A                                        l2810 3A46  
                                      l3610 1A3A                                        l3602 19C4  
                                      l3522 15BA                                        l3530 1600  
                                      l3514 1538                                        l3506 147C  
                                      l3450 1036                                        l3442 0FCA  
                                      l3434 0ED2                                        l3338 1F2E  
                                      l3290 1DE2                                        l3282 1DB4  
                                      l3274 1D6C                                        l3266 1D02  
                                      l3258 1CE2                                        l3194 1B9A  
                                      l3178 1B3C                                        l3186 1B66  
                                      l4090 2968                                        l4082 290E  
                                      l4074 28DA                                        l4066 2878  
                                      l4058 2826                                        l2732 3C44  
                                      l3380 3A16                                        l3700 35BC  
                                      l3364 31A4                                        l3356 3126  
                                      l3348 30AA                                        l2716 3614  
                                      l2708 35E2                                        l2812 3A5E  
                                      l2820 31D6                                        l3620 1A92  
                                      l3612 1A52                                        l3604 19DC  
                                      l3540 1736                                        l3532 163E  
                                      l3524 15E2                                        l3508 14BA  
                                      l3460 10D0                                        l3452 104E  
                                      l3444 0FDE                                        l3436 0F10  
                                      l3428 0E18                                        l3292 1DF0  
                                      l3284 1DC4                                        l3276 1D6E  
                                      l3268 1D0C                                        l3196 1B9E  
                                      l3188 1B76                                        l2900 2454  
                                      l2740 3C66                                        l2804 38E2  
                                      l4092 298A                                        l4084 2922  
                                      l4076 28E0                                        l4068 288C  
                                      l2734 3C48                                        l3382 3A20  
                                      l3710 37C2                                        l3702 3782  
                                      l3366 31AA                                        l3358 3134  
                                      l2718 361C                                        l2814 3A6A  
                                      l2830 322C                                        l2822 31E6  
                                      l3614 1A7E                                        l3606 1A06  
                                      l3542 1774                                        l3534 167C  
                                      l3526 15FA                                        l3518 153E  
                                      l3550 17BA                                        l3470 11F0  
                                      l3462 110E                                        l3446 0FF6  
                                      l3438 0F4E                                        l3630 1FC2  
                                      l3294 1DF2                                        l3278 1D7E  
                                      l3198 1BA2                                        l2910 24A6  
                                      l2902 246E                                        l2750 39E6  
                                      l2742 3C6A                                        l2806 3928  
                                      l4094 299E                                        l4086 293A  
                                      l4078 28E2                                        l2728 3C84  
                                      l2736 3C7A                                        l3384 3A30  
                                      l3712 37D6                                        l3704 378E  
                                      l3720 3744                                        l2760 2F5A  
                                      l2840 3298                                        l2832 3238  
                                      l2824 31F6                                        l2816 31AE  
                                      l3616 1A84                                        l3608 1A26  
                                      l3560 188E                                        l3552 17F8  
                                      l3544 179C                                        l3536 16BA  
                                      l3480 12B6                                        l3472 1208  
                                      l3464 114C                                        l3448 1022  
                                      l3456 1054                                        l3640 2082  
                                      l3632 1FEC                                        l3624 1F56  
                                      l3296 1E00                                        l3288 1DD8  
                                      l2920 2502                                        l2912 24B6  
                                      l2904 247E                                        l2752 3A0C  
                                      l2744 39D2                                        l4088 294E  
                                      l4096 29B8                                        l2738 3C7E  
                                      l3730 3BDE                                        l3386 3A3A  
                                      l3378 3A12                                        l3706 379E  
                                      l3722 3758                                        l3714 3718  
                                      l2770 3024                                        l2762 2FAE  
                                      l2834 325C                                        l2826 320A  
                                      l2818 31C6                                        l3618 1A8A  
                                      l3570 18FE                                        l3562 18A2  
                                      l3554 1836                                        l3546 17B4  
                                      l3538 16F8                                        l3490 13CC  
                                      l3482 12F4                                        l3466 118A  
                                      l3458 1092                                        l3650 2134  
                                      l3642 209E                                        l3634 2014  
                                      l3626 1F7E                                        l3298 1E08  
                                      l2930 2542                                        l2922 2504  
                                      l2914 24CA                                        l2906 248E  
                                      l2850 234A                                        l2842 231E  
                                      l2754 3A0E                                        l2746 39D6  
                                      l4098 29BA                                        l2692 3B28  
                                      l3732 3BE8                                        l3708 37AE  
                                      l3724 376C                                        l3716 3724  
                                      l2772 3068                                        l2764 2FC2  
                                      l2836 3274                                        l2828 321E  
                                      l3580 1946                                        l3572 1904  
                                      l3564 18BA                                        l3556 184A  
                                      l3492 13E0                                        l3484 1332  
                                      l3468 11C8                                        l3476 123A  
                                      l3660 21B8                                        l3652 2148  
                                      l3644 20C8                                        l3636 2030  
                                      l3628 1FA6                                        l2940 257E  
                                      l2932 254C                                        l2924 2514  
                                      l2916 24D8                                        l2908 249E  
                                      l2860 2384                                        l2852 235A  
                                      l2844 232A                                        l2748 39DE  
                                      l3388 3C28                                        l2694 3B38  
                                      l3734 3AD4                                        l3718 3734  
                                      l3726 3C70                                        l2766 3004  
                                      l2758 2F3E                                        l2838 328C  
                                      l3590 196C                                        l3582 1948  
                                      l3574 1906                                        l3558 1862  
                                      l3494 13F4                                        l3486 1370  
                                      l3478 1278                                        l3670 226A  
                                      l3662 21E4                                        l3646 20F0  
                                      l3654 2162                                        l3638 205A  
                                      l2950 25F0                                        l2942 258C  
                                      l2934 255A                                        l2926 2526  
                                      l2918 24E4                                        l2870 23B0  
                                      l2862 238A                                        l2854 236A  
                                      l2846 2338                                        l3728 3C12  
                                      l3680 3CA2                                        l2696 3B78  
                                      l2768 3008                                        l3592 1974  
                                      l3584 194A                                        l3576 191A  
                                      l3568 18C0                                        l3496 140C  
                                      l3488 13AE                                        l3672 2292  
                                      l3664 21F8                                        l3656 218C  
                                      l3648 2108                                        l3736 3C36  
                                      l2960 265C                                        l2952 25FE  
                                      l2944 25BA                                        l2928 253C  
                                      l2936 256C                                        l2880 23EA  
                                      l2872 23C0                                        l2864 2390  
                                      l2856 236C                                        l2848 233A  
                                      l2792 3892                                        l3690 359A  
                                      l3682 3540                                        l2698 3B94  
                                      l3594 1988                                        l3578 192E  
                                      l3498 1420                                        l3674 22AE  
                                      l3666 2224                                        l3658 21A0  
                                      l2970 26AA                                        l2962 2676  
                                      l2954 2628                                        l2938 257A  
                                      l2882 2400                                        l2874 23D0  
                                      l2866 239E                                        l2858 2374  
                                      l2794 38D8                                        l2786 3842  
                                      l3692 35A4                                        l3684 356A  
                                      l3596 1990                                        l3588 1950  
                                      l3676 22D8                                        l3668 2240  
                                      l2972 26AC                                        l2964 2692  
                                      l2948 25E4                                        l2956 262C  
                                      l2884 2410                                        l2892 2430  
                                      l2876 23D2                                        l2868 23A0  
                                      l2980 2C1C                                        l2788 3888  
                                      l3694 35A6                                        l3686 358E  
                                      l3678 2300                                        l2966 2696  
                                      l2958 2646                                        l2894 2440  
                                      l2886 2418                                        l2878 23DA  
                                      l2982 2C2C                                        l2798 3932  
                                      l3950 29E4                                        l3696 35B0  
                                      l3688 3598                                        l2968 26A4  
                                      l2896 2440                                        l2888 241C  
                                      l2992 2CAA                                        l2984 2C3A  
                                      l3960 2A32                                        l3952 29F8  
                                      l3944 29CC                                        l3698 35B2  
                                      l2994 2CB2                                        l2986 2C80  
                                      l3970 2AAE                                        l3962 2A3E  
                                      l3954 2A0C                                        l2996 2CBE  
                                      l2988 2C96                                        l3980 2C00  
                                      l3972 2AC2                                        l3964 2A56  
                                      l3956 2A24                                        l2998 2CF0  
                                      l3974 2ADA                                        l3966 2A58  
                                      l3958 2A26                                        l3990 26D8  
                                      l3982 26B8                                        l3968 2A96  
                                      l3976 2AE0                                        l3992 26E4  
                                      l3984 26BC                                        l3978 2AFC  
                                      l3994 26F8                                        l3986 26C0  
                                      l3996 26FA                                        l3988 26CC  
                                      l3998 26FC                                        _CR1L 0047  
                                      _CR2L 003F                                        _CR3L 00C8  
                                      STR_1 0E01                                        _CR2U 0043  
                                      _CR3U 00CC                                        u2000 2C3A  
                                      u2001 2C36                                        u2010 2C96  
                                      u2011 2C92                                        u2020 2CEC  
                                      u2100 335E                                        u2021 2CE8  
                                      u2101 335A                                        u2110 3430  
                                      u2030 2D36                                        u2111 342C  
                                      u2031 2D32                                        u2120 3448  
                                      u3000 205A                                        u2200 1B88  
                                      u2040 2D54                                        u2121 3444  
                                      u3001 2056                                        u2201 1B84  
                                      u2041 2D50                                        u3010 20C8  
                                      u2210 1B96                                        u2130 1AB0  
                                      u2050 2D64                                        u3011 20C4  
                                      u2211 1B92                                        u2131 1AAC  
                                      u2051 2D60                                        u3020 218C  
                                      u2300 1CD4                                        u2220 1C04  
                                      u2140 1AC2                                        u2060 2D72  
                                      u3021 2188                                        u2301 1CD0  
                                      u2221 1C00                                        u2141 1ABE  
                                      u2061 2D6E                                        u3030 226A  
                                      u2310 1CE2                                        u2230 1C1C  
                                      u2150 1AD2                                        u2070 2DAC  
                                      u3031 2266                                        u2311 1CDE  
                                      u2231 1C16                                        u2151 1ACE  
                                      u2071 2DA8                                        u3040 22D8  
                                      u2400 1E2C                                        u2320 1D00  
                                      u2240 1C1E                                        u2160 1B14  
                                      u2080 2DBA                                        u3200 29F8  
                              _BAUD4CONbits 000EE9                                        u3041 22D4  
                                      u2401 1E28                                        u2321 1CFC  
                                      u2161 1B10                                        u2081 2DB6  
                                      u3201 29F4                                        u2410 1E3E  
                                      u2330 1D38                                        u2250 1C46  
                                      u2170 1B2A                                        u2090 3346  
                                      u3210 2AFC                                        u2411 1E3A  
                                      u2331 1D34                                        u2251 1C42  
                                      u2171 1B26                                        u2091 3342  
                                      u3211 2AF8                                        u2500 1F26  
                                      u2420 1E54                                        u2340 1D7E  
                                      u2260 1C64                                        u2180 1B3C  
                                      u1700 39FA                                        u3220 2798  
                                      u2501 1F22                                        u2421 1E50  
                                      u2341 1D7A                                        u2261 1C60  
                                      u2181 1B38                                        u1701 39F2  
                                      u3221 2794                                        u1630 3B38  
                                      u2510 1F42                                        u2430 1E6A  
                                      u2350 1DB4                                        u2270 1C84  
                                      u2190 1B4C                                        u3230 27B4  
                                      u1631 3B34                                        u2511 1F3E  
                                      u2431 1E66                                        u2351 1DB0  
                                      u2271 1C80                                        u2191 1B48  
                                      u3231 27B0                                        u1640 3B4E  
                                      u2520 30D8                                        u1720 2F5A  
                                      u2600 0E56                                        u2440 1E7E  
                                      u2360 1DC4                                        u2280 1C92  
                                      u1800 23B0                                        u3240 27F6  
                                      u1641 3B4A                                        u2521 30D4  
                                      u1721 2F56                                        u2601 0E52  
                                      u2441 1E7A                                        u2361 1DC0  
                                      u2281 1C8E                                        u1801 23AC  
                                      u3241 27F2                                        u2530 3116  
                                      u1650 35DA                                        u1730 3024  
                                      u2610 0E94                                        u2450 1E98  
                                      u2370 1DF0                                        u2290 1CA2  
                                      u1810 23C0                                        u3250 28DA  
                                      _T2PR 000FBC                                        u2531 3112  
                                      u1651 35D6                                        u1731 3020  
                                      u2611 0E90                                        u2451 1E94  
                                      u2371 1DEC                                        u2291 1C9E  
                                      u1811 23BC                                        u3251 28D6  
                                      u3307 2898                                        u2540 3134  
                                      u1660 35F8                                        u1740 325C  
                                      u2700 114C                                        u2620 0ED2  
                                      u2460 1ED2                                        u2380 1E00  
                                      u1900 257A                                        u1820 2400  
                                      u3260 297C                                        u2541 3130  
                                      u1661 35F4                                        u1741 3258  
                                      u2701 1148                                        u2621 0ECE  
                                      u2461 1ECE                                        u2381 1DFC  
                                      u1901 2576                                        u1821 23FC  
                                      u3261 2972                                        u3317 2902  
                                      u2550 3154                                        u1670 3614  
                                      u1750 3274                                        u2710 118A  
                                      u2630 0F10                                        u2470 1EE4  
                                      u2390 1E1C                                        u1910 258C  
                                      u1830 2440                                        u1718 39FC  
                                      u3190 29E4                                        u2551 3150  
                                      u1671 3610                                        u1751 3270  
                                      u2711 1186                                        u2631 0F0C  
                                      u3407 1FB0                                        u2471 1EE0  
                                      u2391 1E18                                        u1911 2588  
                                      u1831 243C                                        u3191 29E0  
                                      u3327 292E                                        u2560 31A4  
                                      u2720 11C8                                        u2640 0F4E  
                                      u2480 1EF4                                        u1920 25BA  
                                      u1840 24B6                                        u1760 2338  
                                      u2561 31A0                                        u2721 11C4  
                                      u2641 0F4A                                        u3417 201E  
                                      u2481 1EF0                                        u1921 25B6  
                                      u1841 24B2                                        u1761 2334  
                                      u3337 295A                                        u2810 147C  
                                      u2730 1278                                        u2650 0F8C  
                                      u2490 1F14                                        u1930 25D0  
                                      u1850 24D8                                        u1770 234A  
                                      u2811 1478                                        u2731 1274  
                                      u2651 0F88                                        u3507 229C  
                                      u3427 208C                                        u2491 1F10  
                                      u1931 25CC                                        u1851 24D4  
                                      u1771 2346                                        u3347 29AA  
                                      u2900 1736                                        u2820 14BA  
                                      u2740 12B6                                        u2660 0FCA  
                                      u1940 25E4                                        u1860 2502  
                                      u1780 235A                                        u2901 1732  
                                      u2821 14B6                                        u2741 12B2  
                                      u2661 0FC6                                        u3517 230A  
                                      u3437 20FA                                        u1941 25E0  
                                      u1861 24FE                                        u1781 2356  
                                      u3357 2A16                                        u2910 1774  
                                      u2830 14F8                                        u2750 12F4  
                                      u2670 1092                                        u1950 25FE  
                                      u1870 2526                                        u1790 239E  
                                      u3278 2980                                        u2911 1770  
                                      u3607 15EC                                        u2831 14F4  
                                      u2751 12F0                                        u2671 108E  
                                      u3527 0FE8                                        u3447 2126  
                                      u1951 25FA                                        u1871 2522  
                                      u1791 239A                                        u3367 2A48  
                                      u3287 27D4                                        u2920 17F8  
                                      u2840 157C                                        u2808 13C2  
                                      u2760 1332                                        u2680 10D0  
                                      u1960 2646                                        u1880 253C  
                                      u2921 17F4                                        u3617 17A6  
                                      u2841 1578                                        u2761 132E  
                                      u2681 10CC                                        u3537 1014  
                                      u3457 2152                                        u1961 2642  
                                      u1881 2538                                        u3377 2AA0  
                                      u3297 2818                                        u2930 1836  
                                      u2850 15BA                                        u2770 1370  
                                      u2690 110E                                        u1970 2676  
                                      u1890 255A                                        u3707 380A  
                                      u3627 1854                                        u2931 1832  
                                      u2851 15B6                                        u2771 136C  
                                      u2691 110A                                        u3547 1040  
                                      u3467 21AA                                        u1971 2672  
                                      u1891 2556                                        u3387 2ACC  
                                      u2940 18FE                                        u2860 163E  
                                      u2780 13AE                                        u1980 26A4  
                                      u3717 3834                                        u2941 18FA  
                                      u3637 1880                                        u2861 163A  
                                      u2781 13AA                                        u3557 11FA  
                                      u3477 21D6                                        u1981 26A0  
                                      u3397 2C0A                                        u2950 196C  
                                      u2870 167C                                        u2790 13C0  
                                      u1990 2C2C                                        u3727 3224  
                                      u2951 1968                                        u3647 18AC  
                                      u2871 1678                                        u2791 13B8  
                                      u3567 1226                                        u3487 2202  
                                      u1991 2C28                                        u2960 19AC  
                                      u2880 16BA                                        u3737 3A26  
                                      u2961 19A8                                        u3657 1938  
                                      u2881 16B6                                        u3577 13FE  
                                      u3497 222E                                        u2970 1A26  
                                      u2890 16F8                                        u3747 3BEE  
                                      u2971 1A22                                        u3667 19CE  
                                      u2891 16F4                                        u3587 142A  
                                      u2980 1F7E                                        u3677 19FA  
                                      u3597 152A                                        u2981 1F7A  
                                      u2990 1FEC                                        u3687 1A44  
                                      u2991 1FE8                                        u3697 1A70  
                                      _bLED 3CB6                                        _gLED 3CB0  
                                      _rLED 3CAA                                        _main 26B8  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      fsr2l 000FD9                                        btemp 0057  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0034                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 0033                      __end_of_color_read_Red 3892  
                           __end_of_HighISR 0034                                ___param_bank 000000  
                    rangeCalibrate@calibCtr 007E                      rangeCalibrate@clearArr 0066  
                                     ?_bLED 0001                                       ?_gLED 0001  
                                     ?_rLED 0001                             __end_of___fladd 1F56  
                                     ?_main 0001                             __end_of___fldiv 26B8  
                           __end_of___lwdiv 3634                                       i2l116 3BDC  
                                     i2l230 3B50                                       i2l233 3B76  
                                     i2l242 3C96                                       i2l236 3CA0  
                                     i2l245 3C64                                       i2l521 3C10  
                                     i2l530 3AA8                                       i2l524 3B26  
                                     i2l527 3C58                                       i2l536 0030  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 3C8E                  __end_of_I2C_2_Master_Write 3C4E  
                                     tablat 000FF5                       _Color_Interrupts_init 3BDE  
                           __end_of_reverse 32A6                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 3540                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 3982                       _I2C_2_Master_RepStart 3C66  
                           ?_color_read_Red 000D                                __end_of_bLED 3CBC  
                              __end_of_gLED 3CB6                             __initialization 3982  
                              __end_of_rLED 3CB0                                __end_of_main 29CC  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                            ??_rangeCalibrate 003D  
                                    ??_rLED 0009                                      ??_main 0080  
                             __activetblptr 000001                     __end_of_color_normalise 2F3E  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l3026 3BC0                                      i2l3370 3BF8  
                                    i2l2724 3B50                                      i2l3372 3C02  
                                    i2l2726 3B60                                      i2l3374 3AFE  
                                    i2l3376 3C4E                                      i2l2780 3C92  
                                    i2l2774 3C98                                      i2l2782 3C5C  
                                    i2l2776 3C9C                                      i2l2784 3C60  
                                    i2l3920 0024                                      i2l2778 3C8E  
                                    i2l3746 3A78                                      i2l3922 0028  
                                    _RG6PPS 000E88                                      i2l3924 002C  
                                    i2l3916 000A                                      i2l3918 001A  
                                 ??_HighISR 0009                    __end_of_color_click_init 3A46  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 2DCE    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 3C42  
                              _CCPTMRS0bits 000FAD                                      ___flge 30AA  
                                 ??___fladd 0011                                      ___wmul 3B78  
                                 ??___fldiv 002A                                   ??___lwdiv 0013  
                                    clear_0 39A0                                      clear_1 39AC  
                                    clear_2 39B8                                      isa$std 000001  
                                    main@mL 00A2                                      main@mR 00AB  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 3A78  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_reverse 0020    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 3718                            __end_of_turnPrep 3842  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 39BE                    __end_of_color_read_Clear 3932  
                  __end_of_color_read_Green 38E2                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 3C12  
                            __pcstackCOMRAM 0001                                __pidataBANK0 3CBC  
            __end_ofi2_persistence_register 3C5A                                ?_tricolorLED 0001  
                          ?_color_normalise 003B                     i2_Color_Interrupts_init 3BF8  
                        rangeCalibrate@RGBC 0060                                  __pbssBANK0 00B4  
                                __pbssBANK1 0100                            rangeCalibrate@mL 0062  
                          rangeCalibrate@mR 0064                           _color_writetoaddr 3B9E  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                         ??_calibSwitchInit 0009                          motor_response@temp 0027  
                     __end_of_motor_retrace 231E                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 3C36  
                                _buggy_path 00DB                                  _buggy_step 0051  
                   __end_of_Interrupts_init 3C28                              _lowerThreshold 00D0  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 3BBE  
                        _I2C_2_Master_Start 3C84                         i2_I2C_2_Master_Idle 3B50  
                        _I2C_2_Master_Write 3C42                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 3C8E                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fladd 1A96  
                                   ___fldiv 231E                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 35C0                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 004D  
                                   __pcinit 3982                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                   ?_turnPrep 0021  
                                   __ptext0 26B8                                     __ptext1 3C28  
                                   __ptext2 3CAA                                     __ptext3 3CB0  
                                   __ptext4 3CB6                                     __ptext5 29CC  
                                   __ptext6 32A6                                     __ptext7 347A  
                                   __ptext8 3842                                     __ptext9 3892  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00EA                                     _reverse 31AE  
                             _RxBufWriteCnt 0056                                 motorTRIS@mL 0009  
                     ?_persistence_register 0001                                 motorTRIS@mR 000B  
                               wallSmash@mL 001C                                 wallSmash@mR 001E  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 39BE                 __end_ofi2_color_writetoaddr 3BDE  
                         ?_color_click_init 0001                           __end_of_motorTRIS 3C7A  
                         __end_of_wallSmash 3390                           __end_of_norm_stop 3A78  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 3782                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                                _motorRinit 3718                               _interrupt_ctr 00D6  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 3540  
                                ??_turnLeft 0020                                  ??_turnPrep 0025  
                                 _PORTFbits 000F8E                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 36A6                       ??i2_I2C_2_Master_Stop 0002  
                               ___fladd@grs 0018                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 0035                                 ___fldiv@rem 002E  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 00B4  
                              _EUSART4TXbuf 0100                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 3AAA  
                            __end_of___flge 31AE                              _fullSpeedAhead 3390  
                            __end_of___wmul 3B9E                         color_read_Clear@tmp 0012  
                       start_initialization 3982                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                             _calibSwitchInit 3CA2  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 35C0  
                    __end_of_fullSpeedAhead 347A                                    ??___flge 0011  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009                         color_normalise@RGBC 003B  
                               __pdataBANK0 00EA               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 3CA2                __end_ofi2_I2C_2_Master_Write 3C66  
                                 ___fladd@a 000D                                   ___fladd@b 0009  
                                 ___fldiv@a 0026                                   ___fldiv@b 0022  
                               __pbssCOMRAM 003F                               __pcstackBANK0 0060  
                            _motor_response 0E18                                    ?_HighISR 0001  
                                 _amb_clear 004B                                   _amb_green 00D4  
                           motor_retrace@mL 0029                             motor_retrace@mR 002B  
                          ___lwdiv@dividend 000F                             motor_response@j 002F  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fladd 0009                                    ?___fldiv 0022  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 3B28  
                         _I2C_2_Master_Init 3AAA                           _I2C_2_Master_Read 39D0  
                         _I2C_2_Master_Stop 3C7A                                _RxBufReadCnt 0055  
                                  ?_reverse 001C                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0013                      __end_of_motor_response 1A96  
                  initDCmotorsPWM@PWMperiod 0009                     __end_of_calibSwitchInit 3CAA  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u316_40 001A                                    i2u316_41 0016  
                                  _PIR0bits 000E33                                    i2u168_40 3B60  
                                  i2u168_41 3B5C                                    i2u169_40 3B76  
                                  i2u169_41 3B72                                    _PIR4bits 000E37  
                                  i2u375_47 3C08                                   _motorTRIS 3C70  
                                 _wallSmash 32A6                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 3A46  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 3B50                   __end_of_I2C_2_Master_Init 3AD4  
                 __end_of_I2C_2_Master_Read 3A12                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3C84                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0053  
                  i2color_writetoaddr@value 0003                                   _turnRight 3634  
                            _rangeCalibrate 29CC               __end_of_Color_Interrupts_init 3BF8  
                           ?_motor_response 0027               __end_of_I2C_2_Master_RepStart 3C70  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 30AA  
                      i2_I2C_2_Master_Start 3C98                        i2_I2C_2_Master_Write 3C5A  
                                  __Hrparam 0000                     motor_retrace@buggy_path 0027  
                         ??_color_normalise 003D                                  ?_motorTRIS 0009  
                                  __Lrparam 0000                                  ?_wallSmash 001C  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 3B28                i2_Color_Interrupts_threshold 3AFE  
               __end_ofi2_I2C_2_Master_Idle 3B78                 __end_ofi2_I2C_2_Master_Stop 3C98  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               _motor_retrace 1F56  
                                _ANSELFbits 000EB4                               ??_tricolorLED 0009  
                                  _amb_blue 00D2                                    ___xxtofl 2C1A  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                    __end_of_rangeCalibrate 2C1A                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 38E2                                    __ptext11 3932  
                                  __ptext20 3390                                    __ptext12 3C66  
                                  __ptext21 0E18                                    __ptext13 39D0  
                                  __ptext30 30AA                                    __ptext22 3634  
                                  __ptext14 2DCE                                    __ptext31 3C70  
                                  __ptext23 37EC                                    __ptext15 2C1A  
                                  __ptext40 3BDE                                    __ptext32 3718  
                                  __ptext24 31AE                                    __ptext16 231E  
                                  __ptext41 3B9E                                    __ptext33 3782  
                                  __ptext25 3A46                                    __ptext17 1A96  
                                  __ptext50 3BF8                                    __ptext42 3C42  
                                  __ptext34 3540                                    __ptext26 36A6  
                                  __ptext18 3C36                                    __ptext51 3BBE  
                                  __ptext43 3C7A                                    __ptext35 3A12  
                                  __ptext27 2F3E                                    __ptext19 1F56  
                                  __ptext52 3C5A                                    __ptext44 3C84  
                                  __ptext36 3AAA                                    __ptext28 3B78  
                                  __ptext53 3C8E                                    __ptext45 3B28  
                                  __ptext37 3CA2                                    __ptext29 35C0  
                                  __ptext54 3C98                                    __ptext38 3C12  
                                  __ptext55 3B50                                    __ptext47 3A78  
                                  __ptext39 3AD4                                    __ptext48 3C4E  
                                  __ptext49 3AFE                            ?_calibSwitchInit 0001  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  _lost_ctr 004F                                  turnPrep@mL 0021  
                                turnPrep@mR 0023                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 0082  
                                  int$flags 0057          __end_of_Color_Interrupts_threshold 3AFE  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 3AD4  
                                  _turnLeft 36A6                                    _turnPrep 37EC  
                            ?_motor_retrace 0027                                  _INTCONbits 000FF2  
                           ?_rangeCalibrate 0060                                 _setMotorPWM 2F3E  
                              motorLinit@mL 0009                         __end_of_tricolorLED 3C36  
                                  intlevel2 0000                                _motor_return 00DA  
                        __end_of_motorLinit 37EC                          __end_of_motorRinit 3782  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3C12  
                          _color_click_init 3A12                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00D8  
                    i2_persistence_register 3C4E                                 ??_turnRight 0020  
                             ___fladd@signs 0015                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                                ___fladd@aexp 0016  
                    ??i2_I2C_2_Master_Write 0002                                ___fladd@bexp 0017  
                  ??_Color_Interrupts_clear 0009  
