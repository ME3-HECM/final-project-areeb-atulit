

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 14:18:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   002C2A                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _upperThreshold
   106   002C2A  0BB8               	dw	3000
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _LATHbits	set	3968
   112   000000                     _TRISCbits	set	3971
   113   000000                     _TRISDbits	set	3972
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISAbits	set	3969
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _SSP2ADD	set	3798
   123   000000                     _SSP2CON1bits	set	3801
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _TMR0L	set	4051
   130   000000                     _TMR0H	set	4052
   131   000000                     _T0CON0bits	set	4053
   132   000000                     _T0CON1bits	set	4054
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISHbits	set	3976
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATFbits	set	3966
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _PIE4bits	set	3629
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _ANSELBbits	set	3738
   154   000000                     _RD6PPS	set	3696
   155   000000                     _RC7PPS	set	3689
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _PIR0bits	set	3635
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RE4PPS	set	3702
   161   000000                     _RG6PPS	set	3720
   162   000000                     _T2CLKCONbits	set	4031
   163   000000                     _T2HLTbits	set	4030
   164   000000                     _CCP1CONbits	set	4011
   165   000000                     _CCPTMRS0bits	set	4013
   166   000000                     _CCP2CONbits	set	4007
   167   000000                     _CCP3CONbits	set	3878
   168   000000                     _CCP4CONbits	set	3874
   169                           
   170                           	psect	smallconst
   171   000E00                     __psmallconst:
   172                           	callstack 0
   173   000E00  00                 	db	0
   174   000E01                     
   175                           ; BSR set to: 14
   176   000E01  52                 	db	82	;'R'
   177   000E02  47                 	db	71	;'G'
   178   000E03  42                 	db	66	;'B'
   179   000E04  43                 	db	67	;'C'
   180   000E05  3A                 	db	58	;':'
   181   000E06  25                 	db	37
   182   000E07  69                 	db	105	;'i'
   183   000E08  20                 	db	32
   184   000E09  25                 	db	37
   185   000E0A  69                 	db	105	;'i'
   186   000E0B  20                 	db	32
   187   000E0C  25                 	db	37
   188   000E0D  69                 	db	105	;'i'
   189   000E0E  20                 	db	32
   190   000E0F  25                 	db	37
   191   000E10  69                 	db	105	;'i'
   192   000E11  20                 	db	32
   193   000E12  25                 	db	37
   194   000E13  69                 	db	105	;'i'
   195   000E14  0A                 	db	10
   196   000E15  00                 	db	0
   197   000E16  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   002918                     __pcinit:
   203                           	callstack 0
   204   002918                     start_initialization:
   205                           	callstack 0
   206   002918                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (2 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   002918  0E2A               	movlw	low __pidataBANK0
   212   00291A  6EF6               	movwf	tblptrl,c
   213   00291C  0E2C               	movlw	high __pidataBANK0
   214   00291E  6EF7               	movwf	tblptrh,c
   215   002920  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   002922  6EF8               	movwf	tblptru,c
   217   002924  0009               	tblrd		*+	;fetch initializer
   218   002926  CFF5 F0F0          	movff	tablat,__pdataBANK0
   219   00292A  0009               	tblrd		*+	;fetch initializer
   220   00292C  CFF5 F0F1          	movff	tablat,__pdataBANK0+1
   221                           
   222                           ; Clear objects allocated to BANK0 (80 bytes)
   223   002930  EE00  F060         	lfsr	0,__pbssBANK0
   224   002934  0E50               	movlw	80
   225   002936                     clear_0:
   226   002936  6AEE               	clrf	postinc0,c
   227   002938  06E8               	decf	wreg,f,c
   228   00293A  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (36 bytes)
   231   00293C  EE00  F033         	lfsr	0,__pbssCOMRAM
   232   002940  0E24               	movlw	36
   233   002942                     clear_1:
   234   002942  6AEE               	clrf	postinc0,c
   235   002944  06E8               	decf	wreg,f,c
   236   002946  E1FD               	bnz	clear_1
   237   002948                     end_of_initialization:
   238                           	callstack 0
   239   002948                     __end_of__initialization:
   240                           	callstack 0
   241   002948  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   00294A  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   00294C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   244   00294E  6EF8               	movwf	tblptru,c
   245   002950  0E0E               	movlw	high __Lsmallconst
   246   002952  6EF7               	movwf	tblptrh,c
   247   002954  0100               	movlb	0
   248   002956  EFA3  F00E         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   000033                     __pbssCOMRAM:
   252                           	callstack 0
   253   000033                     _EUSART4RXbuf:
   254                           	callstack 0
   255   000033                     	ds	20
   256   000047                     _amb_clear:
   257                           	callstack 0
   258   000047                     	ds	2
   259   000049                     _amb_blue:
   260                           	callstack 0
   261   000049                     	ds	2
   262   00004B                     _amb_green:
   263                           	callstack 0
   264   00004B                     	ds	2
   265   00004D                     _amb_red:
   266                           	callstack 0
   267   00004D                     	ds	2
   268   00004F                     _ctr:
   269                           	callstack 0
   270   00004F                     	ds	2
   271   000051                     _interrupt_ctr:
   272                           	callstack 0
   273   000051                     	ds	2
   274   000053                     _TxBufReadCnt:
   275                           	callstack 0
   276   000053                     	ds	1
   277   000054                     _TxBufWriteCnt:
   278                           	callstack 0
   279   000054                     	ds	1
   280   000055                     _RxBufReadCnt:
   281                           	callstack 0
   282   000055                     	ds	1
   283   000056                     _RxBufWriteCnt:
   284                           	callstack 0
   285   000056                     	ds	1
   286                           
   287                           	psect	bssBANK0
   288   000060                     __pbssBANK0:
   289                           	callstack 0
   290   000060                     _EUSART4TXbuf:
   291                           	callstack 0
   292   000060                     	ds	60
   293   00009C                     _lowerThreshold:
   294                           	callstack 0
   295   00009C                     	ds	2
   296   00009E                     _interrupt_flag:
   297                           	callstack 0
   298   00009E                     	ds	2
   299   0000A0                     _motor_return:
   300                           	callstack 0
   301   0000A0                     	ds	1
   302   0000A1                     _buggy_path:
   303                           	callstack 0
   304   0000A1                     	ds	15
   305                           
   306                           	psect	dataBANK0
   307   0000F0                     __pdataBANK0:
   308                           	callstack 0
   309   0000F0                     _upperThreshold:
   310                           	callstack 0
   311   0000F0                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314   0000B0                     __pcstackBANK0:
   315                           	callstack 0
   316   0000B0                     motor_retrace@j:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320   0000B0                     	ds	2
   321   0000B2                     motor_retrace@j_510:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x2
   325   0000B2                     	ds	2
   326   0000B4                     motor_retrace@j_511:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x4
   330   0000B4                     	ds	2
   331   0000B6                     motor_retrace@j_512:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x6
   335   0000B6                     	ds	2
   336   0000B8                     motor_retrace@j_513:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x8
   340   0000B8                     	ds	2
   341   0000BA                     motor_retrace@j_514:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xA
   345   0000BA                     	ds	2
   346   0000BC                     motor_retrace@j_515:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xC
   350   0000BC                     	ds	2
   351   0000BE                     main@RGBC:
   352                           	callstack 0
   353                           
   354                           ; 32 bytes @ 0xE
   355   0000BE                     	ds	32
   356   0000DE                     main@mL:
   357                           	callstack 0
   358                           
   359                           ; 9 bytes @ 0x2E
   360   0000DE                     	ds	9
   361   0000E7                     main@mR:
   362                           	callstack 0
   363                           
   364                           ; 9 bytes @ 0x37
   365   0000E7                     	ds	9
   366                           
   367                           	psect	cstackCOMRAM
   368   000001                     __pcstackCOMRAM:
   369                           	callstack 0
   370   000001                     ??i2_I2C_2_Master_Idle:
   371   000001                     
   372                           ; 1 bytes @ 0x0
   373   000001                     	ds	1
   374   000002                     i2I2C_2_Master_Write@data_byte:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1
   378   000002                     	ds	1
   379   000003                     i2color_writetoaddr@value:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0x2
   383   000003                     	ds	1
   384   000004                     i2color_writetoaddr@address:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x3
   388   000004                     	ds	1
   389   000005                     ??i2_Color_Interrupts_init:
   390   000005                     i2Color_Interrupts_threshold@upperThreshold:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x4
   394   000005                     	ds	2
   395   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   396                           	callstack 0
   397                           
   398                           ; 2 bytes @ 0x6
   399   000007                     	ds	2
   400   000009                     ??_I2C_2_Master_Idle:
   401   000009                     ?___wmul:
   402                           	callstack 0
   403   000009                     ?___fldiv:
   404                           	callstack 0
   405   000009                     initDCmotorsPWM@PWMperiod:
   406                           	callstack 0
   407   000009                     motorLinit@mL:
   408                           	callstack 0
   409   000009                     motorRinit@mR:
   410                           	callstack 0
   411   000009                     ___wmul@multiplier:
   412                           	callstack 0
   413   000009                     ___flge@ff1:
   414                           	callstack 0
   415   000009                     ___fldiv@b:
   416                           	callstack 0
   417                           
   418                           ; 4 bytes @ 0x8
   419   000009                     	ds	1
   420   00000A                     ??_I2C_2_Master_Read:
   421   00000A                     I2C_2_Master_Write@data_byte:
   422                           	callstack 0
   423                           
   424                           ; 1 bytes @ 0x9
   425   00000A                     	ds	1
   426   00000B                     color_writetoaddr@value:
   427                           	callstack 0
   428   00000B                     I2C_2_Master_Read@ack:
   429                           	callstack 0
   430   00000B                     ___wmul@multiplicand:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0xA
   434   00000B                     	ds	1
   435   00000C                     color_writetoaddr@address:
   436                           	callstack 0
   437   00000C                     I2C_2_Master_Read@tmp:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0xB
   441   00000C                     	ds	1
   442   00000D                     ??_Color_Interrupts_init:
   443   00000D                     ??_color_click_init:
   444   00000D                     ?_color_read_Red:
   445                           	callstack 0
   446   00000D                     ?_color_read_Green:
   447                           	callstack 0
   448   00000D                     ?_color_read_Blue:
   449                           	callstack 0
   450   00000D                     ?_color_read_Clear:
   451                           	callstack 0
   452   00000D                     Color_Interrupts_threshold@upperThreshold:
   453                           	callstack 0
   454   00000D                     ___wmul@product:
   455                           	callstack 0
   456   00000D                     ___flge@ff2:
   457                           	callstack 0
   458   00000D                     ___fldiv@a:
   459                           	callstack 0
   460                           
   461                           ; 4 bytes @ 0xC
   462   00000D                     	ds	2
   463   00000F                     ??_color_read_Red:
   464   00000F                     ??_color_read_Green:
   465   00000F                     ??_color_read_Blue:
   466   00000F                     ??_color_read_Clear:
   467   00000F                     ?___lwdiv:
   468                           	callstack 0
   469   00000F                     Color_Interrupts_threshold@lowerThreshold:
   470                           	callstack 0
   471   00000F                     ___lwdiv@dividend:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0xE
   475   00000F                     	ds	2
   476   000011                     ??___fldiv:
   477   000011                     ??___flge:
   478   000011                     ___lwdiv@divisor:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482   000011                     	ds	1
   483   000012                     color_read_Red@tmp:
   484                           	callstack 0
   485   000012                     color_read_Green@tmp:
   486                           	callstack 0
   487   000012                     color_read_Blue@tmp:
   488                           	callstack 0
   489   000012                     color_read_Clear@tmp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x11
   493   000012                     	ds	1
   494   000013                     ___lwdiv@counter:
   495                           	callstack 0
   496                           
   497                           ; 1 bytes @ 0x12
   498   000013                     	ds	1
   499   000014                     ?___xxtofl:
   500                           	callstack 0
   501   000014                     ___lwdiv@quotient:
   502                           	callstack 0
   503   000014                     ___xxtofl@val:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x13
   507   000014                     	ds	1
   508   000015                     ___fldiv@rem:
   509                           	callstack 0
   510                           
   511                           ; 4 bytes @ 0x14
   512   000015                     	ds	1
   513   000016                     setMotorPWM@m:
   514                           	callstack 0
   515                           
   516                           ; 2 bytes @ 0x15
   517   000016                     	ds	2
   518   000018                     ??_setMotorPWM:
   519   000018                     ??___xxtofl:
   520                           
   521                           ; 1 bytes @ 0x17
   522   000018                     	ds	1
   523   000019                     ___fldiv@sign:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0x18
   527   000019                     	ds	1
   528   00001A                     setMotorPWM@posDuty:
   529                           	callstack 0
   530   00001A                     ___fldiv@new_exp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x19
   534   00001A                     	ds	1
   535   00001B                     setMotorPWM@negDuty:
   536                           	callstack 0
   537                           
   538                           ; 1 bytes @ 0x1A
   539   00001B                     	ds	1
   540   00001C                     ___xxtofl@sign:
   541                           	callstack 0
   542   00001C                     norm_stop@mL:
   543                           	callstack 0
   544   00001C                     turnLeft@mL:
   545                           	callstack 0
   546   00001C                     turnRight@mL:
   547                           	callstack 0
   548   00001C                     fullSpeedAhead@mL:
   549                           	callstack 0
   550   00001C                     reverse@mL:
   551                           	callstack 0
   552   00001C                     ___fldiv@grs:
   553                           	callstack 0
   554                           
   555                           ; 4 bytes @ 0x1B
   556   00001C                     	ds	1
   557   00001D                     ___xxtofl@exp:
   558                           	callstack 0
   559                           
   560                           ; 1 bytes @ 0x1C
   561   00001D                     	ds	1
   562   00001E                     norm_stop@mR:
   563                           	callstack 0
   564   00001E                     turnLeft@mR:
   565                           	callstack 0
   566   00001E                     turnRight@mR:
   567                           	callstack 0
   568   00001E                     fullSpeedAhead@mR:
   569                           	callstack 0
   570   00001E                     reverse@mR:
   571                           	callstack 0
   572   00001E                     ___xxtofl@arg:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x1D
   576   00001E                     	ds	2
   577   000020                     ??_reverse:
   578   000020                     ___fldiv@bexp:
   579                           	callstack 0
   580                           
   581                           ; 1 bytes @ 0x1F
   582   000020                     	ds	1
   583   000021                     ___fldiv@aexp:
   584                           	callstack 0
   585   000021                     motor_response@temp:
   586                           	callstack 0
   587   000021                     motor_retrace@buggy_path:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x20
   591   000021                     	ds	1
   592   000022                     color_read_RGBC@temp:
   593                           	callstack 0
   594   000022                     color_normalise@RGBC:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x21
   598   000022                     	ds	1
   599   000023                     motor_response@mL:
   600                           	callstack 0
   601   000023                     motor_retrace@mL:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x22
   605   000023                     	ds	1
   606   000024                     
   607                           ; 1 bytes @ 0x23
   608   000024                     	ds	1
   609   000025                     motor_response@mR:
   610                           	callstack 0
   611   000025                     motor_retrace@mR:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x24
   615   000025                     	ds	2
   616   000027                     ??_motor_response:
   617   000027                     ??_motor_retrace:
   618                           
   619                           ; 1 bytes @ 0x26
   620   000027                     	ds	2
   621   000029                     motor_response@j:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x28
   625   000029                     	ds	2
   626   00002B                     motor_response@j_502:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x2A
   630   00002B                     	ds	2
   631   00002D                     motor_response@j_503:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x2C
   635   00002D                     	ds	2
   636   00002F                     motor_response@j_504:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x2E
   640   00002F                     	ds	2
   641   000031                     ??_main:
   642                           
   643                           ; 1 bytes @ 0x30
   644   000031                     	ds	2
   645                           
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 22 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  buf           100    0        unsigned char [100]
   656 ;;  RGBC           32   14[BANK0 ] struct RGBC_val
   657 ;;  mR              9   55[BANK0 ] struct DC_motor
   658 ;;  mL              9   46[BANK0 ] struct DC_motor
   659 ;;  amb_clear       2    0        int 
   660 ;;  amb_blue        2    0        int 
   661 ;;  amb_green       2    0        int 
   662 ;;  amb_red         2    0        int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   676 ;;Total ram usage:       52 bytes
   677 ;; Hardware stack levels required when called: 10
   678 ;; This function calls:
   679 ;;		_Color_Interrupts_init
   680 ;;		_Color_Interrupts_threshold
   681 ;;		_Interrupts_init
   682 ;;		_color_click_init
   683 ;;		_color_normalise
   684 ;;		_color_read_Blue
   685 ;;		_color_read_Clear
   686 ;;		_color_read_Green
   687 ;;		_color_read_RGBC
   688 ;;		_color_read_Red
   689 ;;		_fullSpeedAhead
   690 ;;		_initDCmotorsPWM
   691 ;;		_motorLinit
   692 ;;		_motorRinit
   693 ;;		_motor_response
   694 ;;		_motor_retrace
   695 ;;		_norm_stop
   696 ;;		_persistence_register
   697 ;;		_tricolorLED
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text0
   704   001D46                     __ptext0:
   705                           	callstack 0
   706   001D46                     _main:
   707                           	callstack 21
   708   001D46                     
   709                           ;main.c: 24:     tricolorLED();
   710   001D46  ECCE  F015         	call	_tricolorLED	;wreg free
   711   001D4A                     
   712                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   713   001D4A  ECCE  F014         	call	_color_click_init	;wreg free
   714   001D4E                     
   715                           ;main.c: 30:     Interrupts_init();
   716   001D4E  ECD9  F015         	call	_Interrupts_init	;wreg free
   717                           
   718                           ;main.c: 31:     Color_Interrupts_init();
   719   001D52  ECB4  F015         	call	_Color_Interrupts_init	;wreg free
   720                           
   721                           ;main.c: 32:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   722   001D56  C0F0  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   723   001D5A  C0F1  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   724   001D5E  C09C  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   725   001D62  C09D  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   726   001D66  EC2F  F015         	call	_Color_Interrupts_threshold	;wreg free
   727                           
   728                           ;main.c: 33:     persistence_register();
   729   001D6A  ECE4  F015         	call	_persistence_register	;wreg free
   730   001D6E                     
   731                           ;main.c: 35:     initDCmotorsPWM(200);
   732   001D6E  0E00               	movlw	0
   733   001D70  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   734   001D72  0EC8               	movlw	200
   735   001D74  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   736   001D76  EC96  F012         	call	_initDCmotorsPWM	;wreg free
   737   001D7A                     
   738                           ;main.c: 36:     DC_motor mL, mR;;main.c: 37:     motorLinit(&mL);
   739   001D7A  0EDE               	movlw	low main@mL
   740   001D7C  6E09               	movwf	motorLinit@mL^0,c
   741   001D7E  0E00               	movlw	high main@mL
   742   001D80  6E0A               	movwf	(motorLinit@mL+1)^0,c
   743   001D82  ECB7  F013         	call	_motorLinit	;wreg free
   744   001D86                     
   745                           ;main.c: 38:     motorRinit(&mR);
   746   001D86  0EE7               	movlw	low main@mR
   747   001D88  6E09               	movwf	motorRinit@mR^0,c
   748   001D8A  0E00               	movlw	high main@mR
   749   001D8C  6E0A               	movwf	(motorRinit@mR+1)^0,c
   750   001D8E  EC82  F013         	call	_motorRinit	;wreg free
   751   001D92                     
   752                           ;main.c: 40:     TRISEbits.TRISE2 = 0;
   753   001D92  9485               	bcf	133,2,c	;volatile
   754   001D94                     
   755                           ;main.c: 41:     TRISEbits.TRISE4 = 0;
   756   001D94  9885               	bcf	133,4,c	;volatile
   757   001D96                     
   758                           ;main.c: 42:     TRISCbits.TRISC7 = 0;
   759   001D96  9E83               	bcf	131,7,c	;volatile
   760   001D98                     
   761                           ;main.c: 43:     TRISGbits.TRISG6 = 0;
   762   001D98  9C87               	bcf	135,6,c	;volatile
   763   001D9A                     
   764                           ;main.c: 44:     TRISDbits.TRISD7 = 0;
   765   001D9A  9E84               	bcf	132,7,c	;volatile
   766   001D9C                     
   767                           ;main.c: 45:     LATDbits.LATD7 = 0;
   768   001D9C  9E7C               	bcf	124,7,c	;volatile
   769   001D9E                     
   770                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
   771   001D9E  9688               	bcf	136,3,c	;volatile
   772   001DA0                     
   773                           ;main.c: 47:     LATHbits.LATH3 = 0;
   774   001DA0  9680               	bcf	128,3,c	;volatile
   775   001DA2  ECEC  F013         	call	_color_read_Red	;wreg free
   776   001DA6  EC64  F014         	call	_color_read_Blue	;wreg free
   777   001DAA  EC14  F014         	call	_color_read_Green	;wreg free
   778   001DAE  EC3C  F014         	call	_color_read_Clear	;wreg free
   779   001DB2                     
   780                           ;main.c: 53:     motor_return = 0;
   781   001DB2  0E00               	movlw	0
   782   001DB4  0100               	movlb	0	; () banked
   783   001DB6  6FA0               	movwf	_motor_return& (0+255),b
   784   001DB8                     l3480:
   785                           
   786                           ; BSR set to: 0
   787                           ;main.c: 57:         fullSpeedAhead(&mL, &mR);
   788   001DB8  0EDE               	movlw	low main@mL
   789   001DBA  6E1C               	movwf	fullSpeedAhead@mL^0,c
   790   001DBC  0E00               	movlw	high main@mL
   791   001DBE  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   792   001DC0  0EE7               	movlw	low main@mR
   793   001DC2  6E1E               	movwf	fullSpeedAhead@mR^0,c
   794   001DC4  0E00               	movlw	high main@mR
   795   001DC6  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   796   001DC8  ECBE  F011         	call	_fullSpeedAhead	;wreg free
   797   001DCC                     
   798                           ;main.c: 59:         if (interrupt_flag == 1 ) {
   799   001DCC  0100               	movlb	0	; () banked
   800   001DCE  059E               	decf	_interrupt_flag& (0+255),w,b
   801   001DD0  119F               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   802   001DD2  A4D8               	btfss	status,2,c
   803   001DD4  EFEE  F00E         	goto	u2311
   804   001DD8  EFF0  F00E         	goto	u2310
   805   001DDC                     u2311:
   806   001DDC  EFDC  F00E         	goto	l3480
   807   001DE0                     u2310:
   808   001DE0                     
   809                           ; BSR set to: 0
   810                           ;main.c: 61:             norm_stop(&mL, &mR);
   811   001DE0  0EDE               	movlw	low main@mL
   812   001DE2  6E1C               	movwf	norm_stop@mL^0,c
   813   001DE4  0E00               	movlw	high main@mL
   814   001DE6  6E1D               	movwf	(norm_stop@mL+1)^0,c
   815   001DE8  0EE7               	movlw	low main@mR
   816   001DEA  6E1E               	movwf	norm_stop@mR^0,c
   817   001DEC  0E00               	movlw	high main@mR
   818   001DEE  6E1F               	movwf	(norm_stop@mR+1)^0,c
   819   001DF0  ECE8  F014         	call	_norm_stop	;wreg free
   820   001DF4                     
   821                           ;main.c: 62:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   822   001DF4  0E52               	movlw	82
   823   001DF6  6E32               	movwf	(??_main+1)^0,c
   824   001DF8  0E2B               	movlw	43
   825   001DFA  6E31               	movwf	??_main^0,c
   826   001DFC  0E00               	movlw	0
   827   001DFE                     u2377:
   828   001DFE  2EE8               	decfsz	wreg,f,c
   829   001E00  D7FE               	bra	u2377
   830   001E02  2E31               	decfsz	??_main^0,f,c
   831   001E04  D7FC               	bra	u2377
   832   001E06  2E32               	decfsz	(??_main+1)^0,f,c
   833   001E08  D7FA               	bra	u2377
   834   001E0A  D000               	nop2	
   835   001E0C                     
   836                           ;main.c: 63:             LATDbits.LATD7 = 0;
   837   001E0C  9E7C               	bcf	124,7,c	;volatile
   838   001E0E                     
   839                           ;main.c: 64:             color_read_RGBC(&RGBC);
   840   001E0E  0EBE               	movlw	low main@RGBC
   841   001E10  6E22               	movwf	color_read_RGBC@temp^0,c
   842   001E12  0E00               	movlw	high main@RGBC
   843   001E14  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   844   001E16  EC33  F012         	call	_color_read_RGBC	;wreg free
   845   001E1A                     
   846                           ;main.c: 65:             color_normalise(&RGBC);
   847   001E1A  0EBE               	movlw	low main@RGBC
   848   001E1C  6E22               	movwf	color_normalise@RGBC^0,c
   849   001E1E  0E00               	movlw	high main@RGBC
   850   001E20  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   851   001E22  EC17  F010         	call	_color_normalise	;wreg free
   852   001E26                     
   853                           ;main.c: 68:             if(motor_return == 0){
   854   001E26  0100               	movlb	0	; () banked
   855   001E28  51A0               	movf	_motor_return& (0+255),w,b
   856   001E2A  A4D8               	btfss	status,2,c
   857   001E2C  EF1A  F00F         	goto	u2321
   858   001E30  EF1C  F00F         	goto	u2320
   859   001E34                     u2321:
   860   001E34  EF49  F00F         	goto	l3502
   861   001E38                     u2320:
   862   001E38                     
   863                           ; BSR set to: 0
   864                           ;main.c: 69:                 LATHbits.LATH3 = !LATHbits.LATH3;
   865   001E38  A680               	btfss	128,3,c	;volatile
   866   001E3A  EF21  F00F         	goto	u2331
   867   001E3E  EF25  F00F         	goto	u2330
   868   001E42                     u2331:
   869   001E42  6A31               	clrf	??_main^0,c
   870   001E44  2A31               	incf	??_main^0,f,c
   871   001E46  EF26  F00F         	goto	u2348
   872   001E4A                     u2330:
   873   001E4A  6A31               	clrf	??_main^0,c
   874   001E4C                     u2348:
   875   001E4C  4631               	rlncf	??_main^0,f,c
   876   001E4E  4631               	rlncf	??_main^0,f,c
   877   001E50  4631               	rlncf	??_main^0,f,c
   878   001E52  5080               	movf	128,w,c	;volatile
   879   001E54  1831               	xorwf	??_main^0,w,c
   880   001E56  0BF7               	andlw	-9
   881   001E58  1831               	xorwf	??_main^0,w,c
   882   001E5A  6E80               	movwf	128,c	;volatile
   883   001E5C                     
   884                           ;main.c: 70:                 buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   885   001E5C  0EBE               	movlw	low main@RGBC
   886   001E5E  6E21               	movwf	motor_response@temp^0,c
   887   001E60  0E00               	movlw	high main@RGBC
   888   001E62  6E22               	movwf	(motor_response@temp+1)^0,c
   889   001E64  0EDE               	movlw	low main@mL
   890   001E66  6E23               	movwf	motor_response@mL^0,c
   891   001E68  0E00               	movlw	high main@mL
   892   001E6A  6E24               	movwf	(motor_response@mL+1)^0,c
   893   001E6C  0EE7               	movlw	low main@mR
   894   001E6E  6E25               	movwf	motor_response@mR^0,c
   895   001E70  0E00               	movlw	high main@mR
   896   001E72  6E26               	movwf	(motor_response@mR+1)^0,c
   897   001E74  ECAC  F009         	call	_motor_response	;wreg free
   898   001E78  6E31               	movwf	??_main^0,c
   899   001E7A  0EA1               	movlw	low _buggy_path
   900   001E7C  244F               	addwf	_ctr^0,w,c
   901   001E7E  6ED9               	movwf	fsr2l,c
   902   001E80  0E00               	movlw	high _buggy_path
   903   001E82  2050               	addwfc	(_ctr+1)^0,w,c
   904   001E84  6EDA               	movwf	fsr2h,c
   905   001E86  C031  FFDF         	movff	??_main,indf2
   906   001E8A                     
   907                           ;main.c: 71:                 ctr++;
   908   001E8A  4A4F               	infsnz	_ctr^0,f,c
   909   001E8C  2A50               	incf	(_ctr+1)^0,f,c
   910                           
   911                           ;main.c: 72:             }
   912   001E8E  EF57  F00F         	goto	l3504
   913   001E92                     l3502:
   914                           
   915                           ; BSR set to: 0
   916                           ;main.c: 74:                 motor_retrace(&buggy_path, &mL, &mR);
   917   001E92  0EA1               	movlw	low _buggy_path
   918   001E94  6E21               	movwf	motor_retrace@buggy_path^0,c
   919   001E96  0E00               	movlw	high _buggy_path
   920   001E98  6E22               	movwf	(motor_retrace@buggy_path+1)^0,c
   921   001E9A  0EDE               	movlw	low main@mL
   922   001E9C  6E23               	movwf	motor_retrace@mL^0,c
   923   001E9E  0E00               	movlw	high main@mL
   924   001EA0  6E24               	movwf	(motor_retrace@mL+1)^0,c
   925   001EA2  0EE7               	movlw	low main@mR
   926   001EA4  6E25               	movwf	motor_retrace@mR^0,c
   927   001EA6  0E00               	movlw	high main@mR
   928   001EA8  6E26               	movwf	(motor_retrace@mR+1)^0,c
   929   001EAA  EC0C  F007         	call	_motor_retrace	;wreg free
   930   001EAE                     l3504:
   931                           
   932                           ;main.c: 77:             LATHbits.LATH3 = 0;
   933   001EAE  9680               	bcf	128,3,c	;volatile
   934   001EB0                     
   935                           ;main.c: 78:             interrupt_flag = 0;
   936   001EB0  0E00               	movlw	0
   937   001EB2  0100               	movlb	0	; () banked
   938   001EB4  6F9F               	movwf	(_interrupt_flag+1)& (0+255),b
   939   001EB6  0E00               	movlw	0
   940   001EB8  6F9E               	movwf	_interrupt_flag& (0+255),b
   941   001EBA  EFDC  F00E         	goto	l3480
   942   001EBE  EF19  F000         	goto	start
   943   001EC2                     __end_of_main:
   944                           	callstack 0
   945                           
   946 ;; *************** function _tricolorLED *****************
   947 ;; Defined at:
   948 ;;		line 113 in file "color.c"
   949 ;; Parameters:    Size  Location     Type
   950 ;;		None
   951 ;; Auto vars:     Size  Location     Type
   952 ;;		None
   953 ;; Return value:  Size  Location     Type
   954 ;;                  1    wreg      void 
   955 ;; Registers used:
   956 ;;		None
   957 ;; Tracked objects:
   958 ;;		On entry : 0/0
   959 ;;		On exit  : 0/0
   960 ;;		Unchanged: 0/0
   961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   966 ;;Total ram usage:        0 bytes
   967 ;; Hardware stack levels used: 1
   968 ;; Hardware stack levels required when called: 6
   969 ;; This function calls:
   970 ;;		Nothing
   971 ;; This function is called by:
   972 ;;		_main
   973 ;; This function uses a non-reentrant model
   974 ;;
   975                           
   976                           	psect	text1
   977   002B9C                     __ptext1:
   978                           	callstack 0
   979   002B9C                     _tricolorLED:
   980                           	callstack 24
   981   002B9C                     
   982                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
   983   002B9C  9087               	bcf	135,0,c	;volatile
   984                           
   985                           ;color.c: 116:     LATGbits.LATG0 = 1;
   986   002B9E  807F               	bsf	127,0,c	;volatile
   987                           
   988                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
   989   002BA0  9881               	bcf	129,4,c	;volatile
   990                           
   991                           ;color.c: 118:     LATAbits.LATA4 = 1;
   992   002BA2  8879               	bsf	121,4,c	;volatile
   993                           
   994                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
   995   002BA4  9E86               	bcf	134,7,c	;volatile
   996                           
   997                           ;color.c: 120:     LATFbits.LATF7 = 1;
   998   002BA6  8E7E               	bsf	126,7,c	;volatile
   999                           
  1000                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
  1001   002BA8  9681               	bcf	129,3,c	;volatile
  1002                           
  1003                           ;color.c: 122:     LATAbits.LATA3 = 1;
  1004   002BAA  8679               	bsf	121,3,c	;volatile
  1005                           
  1006                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
  1007   002BAC  9E85               	bcf	133,7,c	;volatile
  1008                           
  1009                           ;color.c: 124:     LATEbits.LATE7 = 1;
  1010   002BAE  8E7D               	bsf	125,7,c	;volatile
  1011   002BB0  0012               	return		;funcret
  1012   002BB2                     __end_of_tricolorLED:
  1013                           	callstack 0
  1014                           
  1015 ;; *************** function _persistence_register *****************
  1016 ;; Defined at:
  1017 ;;		line 46 in file "interrupts.c"
  1018 ;; Parameters:    Size  Location     Type
  1019 ;;		None
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;		None
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      void 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, cstack
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;Total ram usage:        0 bytes
  1036 ;; Hardware stack levels used: 1
  1037 ;; Hardware stack levels required when called: 9
  1038 ;; This function calls:
  1039 ;;		_color_writetoaddr
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           	psect	text2
  1046   002BC8                     __ptext2:
  1047                           	callstack 0
  1048   002BC8                     _persistence_register:
  1049                           	callstack 21
  1050   002BC8                     
  1051                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  1052   002BC8  0E02               	movlw	2
  1053   002BCA  6E0B               	movwf	color_writetoaddr@value^0,c
  1054   002BCC  0E0C               	movlw	12
  1055   002BCE  EC94  F015         	call	_color_writetoaddr
  1056   002BD2  0012               	return		;funcret
  1057   002BD4                     __end_of_persistence_register:
  1058                           	callstack 0
  1059                           
  1060 ;; *************** function _motor_retrace *****************
  1061 ;; Defined at:
  1062 ;;		line 223 in file "color.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  buggy_path      2   32[COMRAM] PTR unsigned char 
  1065 ;;		 -> buggy_path(15), 
  1066 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1067 ;;		 -> main@mL(9), 
  1068 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1069 ;;		 -> main@mR(9), 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  j               2   12[BANK0 ] int 
  1072 ;;  j               2   10[BANK0 ] int 
  1073 ;;  j               2    8[BANK0 ] int 
  1074 ;;  j               2    6[BANK0 ] int 
  1075 ;;  j               2    4[BANK0 ] int 
  1076 ;;  j               2    2[BANK0 ] int 
  1077 ;;  j               2    0[BANK0 ] int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1087 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Totals:         8      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;Total ram usage:       22 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 9
  1094 ;; This function calls:
  1095 ;;		_norm_stop
  1096 ;;		_reverse
  1097 ;;		_turnLeft
  1098 ;;		_turnRight
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text3
  1105   000E18                     __ptext3:
  1106                           	callstack 0
  1107   000E18                     _motor_retrace:
  1108                           	callstack 21
  1109   000E18                     
  1110                           ;color.c: 224:     if (buggy_path[ctr]==1) {
  1111   000E18  504F               	movf	_ctr^0,w,c
  1112   000E1A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1113   000E1C  6ED9               	movwf	fsr2l,c
  1114   000E1E  5050               	movf	(_ctr+1)^0,w,c
  1115   000E20  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1116   000E22  6EDA               	movwf	fsr2h,c
  1117   000E24  04DE               	decf	postinc2,w,c
  1118   000E26  A4D8               	btfss	status,2,c
  1119   000E28  EF18  F007         	goto	u2161
  1120   000E2C  EF1A  F007         	goto	u2160
  1121   000E30                     u2161:
  1122   000E30  EF5E  F007         	goto	l3328
  1123   000E34                     u2160:
  1124   000E34                     
  1125                           ;color.c: 225:      for (int j = 0; j <= 15; j++) {
  1126   000E34  0E00               	movlw	0
  1127   000E36  0100               	movlb	0	; () banked
  1128   000E38  6FB1               	movwf	(motor_retrace@j+1)& (0+255),b
  1129   000E3A  0E00               	movlw	0
  1130   000E3C  6FB0               	movwf	motor_retrace@j& (0+255),b
  1131   000E3E                     l3320:
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;color.c: 226:          turnLeft(mL, mR);
  1135   000E3E  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1136   000E42  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1137   000E46  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1138   000E4A  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1139   000E4E  EC49  F013         	call	_turnLeft	;wreg free
  1140   000E52                     
  1141                           ;color.c: 227:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1142   000E52  0E03               	movlw	3
  1143   000E54  6E28               	movwf	(??_motor_retrace+1)^0,c
  1144   000E56  0E70               	movlw	112
  1145   000E58  6E27               	movwf	??_motor_retrace^0,c
  1146   000E5A  0E5C               	movlw	92
  1147   000E5C                     u2387:
  1148   000E5C  2EE8               	decfsz	wreg,f,c
  1149   000E5E  D7FE               	bra	u2387
  1150   000E60  2E27               	decfsz	??_motor_retrace^0,f,c
  1151   000E62  D7FC               	bra	u2387
  1152   000E64  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1153   000E66  D7FA               	bra	u2387
  1154   000E68  D000               	nop2	
  1155   000E6A                     
  1156                           ;color.c: 228:          norm_stop(mL, mR);
  1157   000E6A  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1158   000E6E  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1159   000E72  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1160   000E76  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1161   000E7A  ECE8  F014         	call	_norm_stop	;wreg free
  1162                           
  1163                           ;color.c: 229:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1164   000E7E  0E03               	movlw	3
  1165   000E80  6E28               	movwf	(??_motor_retrace+1)^0,c
  1166   000E82  0E70               	movlw	112
  1167   000E84  6E27               	movwf	??_motor_retrace^0,c
  1168   000E86  0E5C               	movlw	92
  1169   000E88                     u2397:
  1170   000E88  2EE8               	decfsz	wreg,f,c
  1171   000E8A  D7FE               	bra	u2397
  1172   000E8C  2E27               	decfsz	??_motor_retrace^0,f,c
  1173   000E8E  D7FC               	bra	u2397
  1174   000E90  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1175   000E92  D7FA               	bra	u2397
  1176   000E94  D000               	nop2	
  1177   000E96                     
  1178                           ;color.c: 230:      }
  1179   000E96  0100               	movlb	0	; () banked
  1180   000E98  4BB0               	infsnz	motor_retrace@j& (0+255),f,b
  1181   000E9A  2BB1               	incf	(motor_retrace@j+1)& (0+255),f,b
  1182   000E9C  BFB1               	btfsc	(motor_retrace@j+1)& (0+255),7,b
  1183   000E9E  EF5A  F007         	goto	u2171
  1184   000EA2  51B1               	movf	(motor_retrace@j+1)& (0+255),w,b
  1185   000EA4  E109               	bnz	u2170
  1186   000EA6  0E10               	movlw	16
  1187   000EA8  5DB0               	subwf	motor_retrace@j& (0+255),w,b
  1188   000EAA  A0D8               	btfss	status,0,c
  1189   000EAC  EF5A  F007         	goto	u2171
  1190   000EB0  EF5C  F007         	goto	u2170
  1191   000EB4                     u2171:
  1192   000EB4  EF1F  F007         	goto	l3320
  1193   000EB8                     u2170:
  1194   000EB8  EF9B  F009         	goto	l3436
  1195   000EBC                     l3328:
  1196   000EBC  504F               	movf	_ctr^0,w,c
  1197   000EBE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1198   000EC0  6ED9               	movwf	fsr2l,c
  1199   000EC2  5050               	movf	(_ctr+1)^0,w,c
  1200   000EC4  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1201   000EC6  6EDA               	movwf	fsr2h,c
  1202   000EC8  0E02               	movlw	2
  1203   000ECA  18DE               	xorwf	postinc2,w,c
  1204   000ECC  A4D8               	btfss	status,2,c
  1205   000ECE  EF6B  F007         	goto	u2181
  1206   000ED2  EF6D  F007         	goto	u2180
  1207   000ED6                     u2181:
  1208   000ED6  EFB1  F007         	goto	l3344
  1209   000EDA                     u2180:
  1210   000EDA                     
  1211                           ;color.c: 233:     for (int j = 0; j <= 15; j++) {
  1212   000EDA  0E00               	movlw	0
  1213   000EDC  0100               	movlb	0	; () banked
  1214   000EDE  6FB3               	movwf	(motor_retrace@j_510+1)& (0+255),b
  1215   000EE0  0E00               	movlw	0
  1216   000EE2  6FB2               	movwf	motor_retrace@j_510& (0+255),b
  1217   000EE4                     l3336:
  1218                           
  1219                           ; BSR set to: 0
  1220                           ;color.c: 234:         turnRight(mL, mR);
  1221   000EE4  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1222   000EE8  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1223   000EEC  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1224   000EF0  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1225   000EF4  EC10  F013         	call	_turnRight	;wreg free
  1226   000EF8                     
  1227                           ;color.c: 235:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1228   000EF8  0E03               	movlw	3
  1229   000EFA  6E28               	movwf	(??_motor_retrace+1)^0,c
  1230   000EFC  0E70               	movlw	112
  1231   000EFE  6E27               	movwf	??_motor_retrace^0,c
  1232   000F00  0E5C               	movlw	92
  1233   000F02                     u2407:
  1234   000F02  2EE8               	decfsz	wreg,f,c
  1235   000F04  D7FE               	bra	u2407
  1236   000F06  2E27               	decfsz	??_motor_retrace^0,f,c
  1237   000F08  D7FC               	bra	u2407
  1238   000F0A  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1239   000F0C  D7FA               	bra	u2407
  1240   000F0E  D000               	nop2	
  1241   000F10                     
  1242                           ;color.c: 236:         norm_stop(mL, mR);
  1243   000F10  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1244   000F14  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1245   000F18  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1246   000F1C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1247   000F20  ECE8  F014         	call	_norm_stop	;wreg free
  1248                           
  1249                           ;color.c: 237:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1250   000F24  0E03               	movlw	3
  1251   000F26  6E28               	movwf	(??_motor_retrace+1)^0,c
  1252   000F28  0E70               	movlw	112
  1253   000F2A  6E27               	movwf	??_motor_retrace^0,c
  1254   000F2C  0E5C               	movlw	92
  1255   000F2E                     u2417:
  1256   000F2E  2EE8               	decfsz	wreg,f,c
  1257   000F30  D7FE               	bra	u2417
  1258   000F32  2E27               	decfsz	??_motor_retrace^0,f,c
  1259   000F34  D7FC               	bra	u2417
  1260   000F36  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1261   000F38  D7FA               	bra	u2417
  1262   000F3A  D000               	nop2	
  1263   000F3C                     
  1264                           ;color.c: 238:     }
  1265   000F3C  0100               	movlb	0	; () banked
  1266   000F3E  4BB2               	infsnz	motor_retrace@j_510& (0+255),f,b
  1267   000F40  2BB3               	incf	(motor_retrace@j_510+1)& (0+255),f,b
  1268   000F42  BFB3               	btfsc	(motor_retrace@j_510+1)& (0+255),7,b
  1269   000F44  EFAD  F007         	goto	u2191
  1270   000F48  51B3               	movf	(motor_retrace@j_510+1)& (0+255),w,b
  1271   000F4A  E109               	bnz	u2190
  1272   000F4C  0E10               	movlw	16
  1273   000F4E  5DB2               	subwf	motor_retrace@j_510& (0+255),w,b
  1274   000F50  A0D8               	btfss	status,0,c
  1275   000F52  EFAD  F007         	goto	u2191
  1276   000F56  EFAF  F007         	goto	u2190
  1277   000F5A                     u2191:
  1278   000F5A  EF72  F007         	goto	l3336
  1279   000F5E                     u2190:
  1280   000F5E  EF9B  F009         	goto	l3436
  1281   000F62                     l3344:
  1282   000F62  504F               	movf	_ctr^0,w,c
  1283   000F64  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1284   000F66  6ED9               	movwf	fsr2l,c
  1285   000F68  5050               	movf	(_ctr+1)^0,w,c
  1286   000F6A  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1287   000F6C  6EDA               	movwf	fsr2h,c
  1288   000F6E  0E03               	movlw	3
  1289   000F70  18DE               	xorwf	postinc2,w,c
  1290   000F72  A4D8               	btfss	status,2,c
  1291   000F74  EFBE  F007         	goto	u2201
  1292   000F78  EFC0  F007         	goto	u2200
  1293   000F7C                     u2201:
  1294   000F7C  EF04  F008         	goto	l3360
  1295   000F80                     u2200:
  1296   000F80                     
  1297                           ;color.c: 241:      for (int j = 0; j <= 29; j++) {
  1298   000F80  0E00               	movlw	0
  1299   000F82  0100               	movlb	0	; () banked
  1300   000F84  6FB5               	movwf	(motor_retrace@j_511+1)& (0+255),b
  1301   000F86  0E00               	movlw	0
  1302   000F88  6FB4               	movwf	motor_retrace@j_511& (0+255),b
  1303   000F8A                     l3352:
  1304                           
  1305                           ; BSR set to: 0
  1306                           ;color.c: 242:          turnRight(mL, mR);
  1307   000F8A  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1308   000F8E  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1309   000F92  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1310   000F96  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1311   000F9A  EC10  F013         	call	_turnRight	;wreg free
  1312   000F9E                     
  1313                           ;color.c: 243:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1314   000F9E  0E03               	movlw	3
  1315   000FA0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1316   000FA2  0E70               	movlw	112
  1317   000FA4  6E27               	movwf	??_motor_retrace^0,c
  1318   000FA6  0E5C               	movlw	92
  1319   000FA8                     u2427:
  1320   000FA8  2EE8               	decfsz	wreg,f,c
  1321   000FAA  D7FE               	bra	u2427
  1322   000FAC  2E27               	decfsz	??_motor_retrace^0,f,c
  1323   000FAE  D7FC               	bra	u2427
  1324   000FB0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1325   000FB2  D7FA               	bra	u2427
  1326   000FB4  D000               	nop2	
  1327   000FB6                     
  1328                           ;color.c: 244:          norm_stop(mL, mR);
  1329   000FB6  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1330   000FBA  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1331   000FBE  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1332   000FC2  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1333   000FC6  ECE8  F014         	call	_norm_stop	;wreg free
  1334                           
  1335                           ;color.c: 245:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1336   000FCA  0E03               	movlw	3
  1337   000FCC  6E28               	movwf	(??_motor_retrace+1)^0,c
  1338   000FCE  0E70               	movlw	112
  1339   000FD0  6E27               	movwf	??_motor_retrace^0,c
  1340   000FD2  0E5C               	movlw	92
  1341   000FD4                     u2437:
  1342   000FD4  2EE8               	decfsz	wreg,f,c
  1343   000FD6  D7FE               	bra	u2437
  1344   000FD8  2E27               	decfsz	??_motor_retrace^0,f,c
  1345   000FDA  D7FC               	bra	u2437
  1346   000FDC  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1347   000FDE  D7FA               	bra	u2437
  1348   000FE0  D000               	nop2	
  1349   000FE2                     
  1350                           ;color.c: 246:      }
  1351   000FE2  0100               	movlb	0	; () banked
  1352   000FE4  4BB4               	infsnz	motor_retrace@j_511& (0+255),f,b
  1353   000FE6  2BB5               	incf	(motor_retrace@j_511+1)& (0+255),f,b
  1354   000FE8  BFB5               	btfsc	(motor_retrace@j_511+1)& (0+255),7,b
  1355   000FEA  EF00  F008         	goto	u2211
  1356   000FEE  51B5               	movf	(motor_retrace@j_511+1)& (0+255),w,b
  1357   000FF0  E109               	bnz	u2210
  1358   000FF2  0E1E               	movlw	30
  1359   000FF4  5DB4               	subwf	motor_retrace@j_511& (0+255),w,b
  1360   000FF6  A0D8               	btfss	status,0,c
  1361   000FF8  EF00  F008         	goto	u2211
  1362   000FFC  EF02  F008         	goto	u2210
  1363   001000                     u2211:
  1364   001000  EFC5  F007         	goto	l3352
  1365   001004                     u2210:
  1366   001004  EF9B  F009         	goto	l3436
  1367   001008                     l3360:
  1368   001008  504F               	movf	_ctr^0,w,c
  1369   00100A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1370   00100C  6ED9               	movwf	fsr2l,c
  1371   00100E  5050               	movf	(_ctr+1)^0,w,c
  1372   001010  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1373   001012  6EDA               	movwf	fsr2h,c
  1374   001014  0E04               	movlw	4
  1375   001016  18DE               	xorwf	postinc2,w,c
  1376   001018  A4D8               	btfss	status,2,c
  1377   00101A  EF11  F008         	goto	u2221
  1378   00101E  EF13  F008         	goto	u2220
  1379   001022                     u2221:
  1380   001022  EF7E  F008         	goto	l3382
  1381   001026                     u2220:
  1382   001026                     
  1383                           ;color.c: 250:      reverse(mL, mR);
  1384   001026  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1385   00102A  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1386   00102E  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1387   001032  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1388   001036  EC42  F011         	call	_reverse	;wreg free
  1389   00103A                     
  1390                           ;color.c: 251:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1391   00103A  0ED0               	movlw	208
  1392   00103C  6E27               	movwf	??_motor_retrace^0,c
  1393   00103E  0ECA               	movlw	202
  1394   001040                     u2447:
  1395   001040  2EE8               	decfsz	wreg,f,c
  1396   001042  D7FE               	bra	u2447
  1397   001044  2E27               	decfsz	??_motor_retrace^0,f,c
  1398   001046  D7FC               	bra	u2447
  1399   001048                     
  1400                           ;color.c: 252:      norm_stop(mL, mR);
  1401   001048  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1402   00104C  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1403   001050  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1404   001054  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1405   001058  ECE8  F014         	call	_norm_stop	;wreg free
  1406                           
  1407                           ;color.c: 253:      _delay((unsigned long)((100)*(64000000/4000.0)));
  1408   00105C  0E09               	movlw	9
  1409   00105E  6E28               	movwf	(??_motor_retrace+1)^0,c
  1410   001060  0E1E               	movlw	30
  1411   001062  6E27               	movwf	??_motor_retrace^0,c
  1412   001064  0EE4               	movlw	228
  1413   001066                     u2457:
  1414   001066  2EE8               	decfsz	wreg,f,c
  1415   001068  D7FE               	bra	u2457
  1416   00106A  2E27               	decfsz	??_motor_retrace^0,f,c
  1417   00106C  D7FC               	bra	u2457
  1418   00106E  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1419   001070  D7FA               	bra	u2457
  1420   001072  D000               	nop2	
  1421   001074                     
  1422                           ;color.c: 254:      for (int j = 0; j <= 16; j++) {
  1423   001074  0E00               	movlw	0
  1424   001076  0100               	movlb	0	; () banked
  1425   001078  6FB7               	movwf	(motor_retrace@j_512+1)& (0+255),b
  1426   00107A  0E00               	movlw	0
  1427   00107C  6FB6               	movwf	motor_retrace@j_512& (0+255),b
  1428   00107E                     l3374:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;color.c: 255:          turnLeft(mL, mR);
  1432   00107E  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1433   001082  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1434   001086  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1435   00108A  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1436   00108E  EC49  F013         	call	_turnLeft	;wreg free
  1437   001092                     
  1438                           ;color.c: 256:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1439   001092  0E03               	movlw	3
  1440   001094  6E28               	movwf	(??_motor_retrace+1)^0,c
  1441   001096  0E70               	movlw	112
  1442   001098  6E27               	movwf	??_motor_retrace^0,c
  1443   00109A  0E5C               	movlw	92
  1444   00109C                     u2467:
  1445   00109C  2EE8               	decfsz	wreg,f,c
  1446   00109E  D7FE               	bra	u2467
  1447   0010A0  2E27               	decfsz	??_motor_retrace^0,f,c
  1448   0010A2  D7FC               	bra	u2467
  1449   0010A4  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1450   0010A6  D7FA               	bra	u2467
  1451   0010A8  D000               	nop2	
  1452   0010AA                     
  1453                           ;color.c: 257:          norm_stop(mL, mR);
  1454   0010AA  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1455   0010AE  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1456   0010B2  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1457   0010B6  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1458   0010BA  ECE8  F014         	call	_norm_stop	;wreg free
  1459                           
  1460                           ;color.c: 258:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1461   0010BE  0E03               	movlw	3
  1462   0010C0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1463   0010C2  0E70               	movlw	112
  1464   0010C4  6E27               	movwf	??_motor_retrace^0,c
  1465   0010C6  0E5C               	movlw	92
  1466   0010C8                     u2477:
  1467   0010C8  2EE8               	decfsz	wreg,f,c
  1468   0010CA  D7FE               	bra	u2477
  1469   0010CC  2E27               	decfsz	??_motor_retrace^0,f,c
  1470   0010CE  D7FC               	bra	u2477
  1471   0010D0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1472   0010D2  D7FA               	bra	u2477
  1473   0010D4  D000               	nop2	
  1474   0010D6                     
  1475                           ;color.c: 259:      }
  1476   0010D6  0100               	movlb	0	; () banked
  1477   0010D8  4BB6               	infsnz	motor_retrace@j_512& (0+255),f,b
  1478   0010DA  2BB7               	incf	(motor_retrace@j_512+1)& (0+255),f,b
  1479   0010DC  BFB7               	btfsc	(motor_retrace@j_512+1)& (0+255),7,b
  1480   0010DE  EF7A  F008         	goto	u2231
  1481   0010E2  51B7               	movf	(motor_retrace@j_512+1)& (0+255),w,b
  1482   0010E4  E109               	bnz	u2230
  1483   0010E6  0E11               	movlw	17
  1484   0010E8  5DB6               	subwf	motor_retrace@j_512& (0+255),w,b
  1485   0010EA  A0D8               	btfss	status,0,c
  1486   0010EC  EF7A  F008         	goto	u2231
  1487   0010F0  EF7C  F008         	goto	u2230
  1488   0010F4                     u2231:
  1489   0010F4  EF3F  F008         	goto	l3374
  1490   0010F8                     u2230:
  1491   0010F8  EF9B  F009         	goto	l3436
  1492   0010FC                     l3382:
  1493   0010FC  504F               	movf	_ctr^0,w,c
  1494   0010FE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1495   001100  6ED9               	movwf	fsr2l,c
  1496   001102  5050               	movf	(_ctr+1)^0,w,c
  1497   001104  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1498   001106  6EDA               	movwf	fsr2h,c
  1499   001108  0E05               	movlw	5
  1500   00110A  18DE               	xorwf	postinc2,w,c
  1501   00110C  A4D8               	btfss	status,2,c
  1502   00110E  EF8B  F008         	goto	u2241
  1503   001112  EF8D  F008         	goto	u2240
  1504   001116                     u2241:
  1505   001116  EFF7  F008         	goto	l3404
  1506   00111A                     u2240:
  1507   00111A                     
  1508                           ;color.c: 262:      reverse(mL, mR);
  1509   00111A  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1510   00111E  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1511   001122  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1512   001126  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1513   00112A  EC42  F011         	call	_reverse	;wreg free
  1514   00112E                     
  1515                           ;color.c: 263:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1516   00112E  0ED0               	movlw	208
  1517   001130  6E27               	movwf	??_motor_retrace^0,c
  1518   001132  0ECA               	movlw	202
  1519   001134                     u2487:
  1520   001134  2EE8               	decfsz	wreg,f,c
  1521   001136  D7FE               	bra	u2487
  1522   001138  2E27               	decfsz	??_motor_retrace^0,f,c
  1523   00113A  D7FC               	bra	u2487
  1524   00113C                     
  1525                           ;color.c: 264:      norm_stop(mL, mR);
  1526   00113C  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1527   001140  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1528   001144  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1529   001148  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1530   00114C  ECE8  F014         	call	_norm_stop	;wreg free
  1531                           
  1532                           ;color.c: 265:      _delay((unsigned long)((300)*(64000000/4000.0)));
  1533   001150  0E19               	movlw	25
  1534   001152  6E28               	movwf	(??_motor_retrace+1)^0,c
  1535   001154  0E5A               	movlw	90
  1536   001156  6E27               	movwf	??_motor_retrace^0,c
  1537   001158  0EB2               	movlw	178
  1538   00115A                     u2497:
  1539   00115A  2EE8               	decfsz	wreg,f,c
  1540   00115C  D7FE               	bra	u2497
  1541   00115E  2E27               	decfsz	??_motor_retrace^0,f,c
  1542   001160  D7FC               	bra	u2497
  1543   001162  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1544   001164  D7FA               	bra	u2497
  1545   001166                     
  1546                           ;color.c: 266:      for (int j = 0; j <= 12; j++) {
  1547   001166  0E00               	movlw	0
  1548   001168  0100               	movlb	0	; () banked
  1549   00116A  6FB9               	movwf	(motor_retrace@j_513+1)& (0+255),b
  1550   00116C  0E00               	movlw	0
  1551   00116E  6FB8               	movwf	motor_retrace@j_513& (0+255),b
  1552   001170                     l3396:
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;color.c: 267:          turnRight(mL, mR);
  1556   001170  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1557   001174  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1558   001178  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1559   00117C  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1560   001180  EC10  F013         	call	_turnRight	;wreg free
  1561   001184                     
  1562                           ;color.c: 268:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1563   001184  0E03               	movlw	3
  1564   001186  6E28               	movwf	(??_motor_retrace+1)^0,c
  1565   001188  0E70               	movlw	112
  1566   00118A  6E27               	movwf	??_motor_retrace^0,c
  1567   00118C  0E5C               	movlw	92
  1568   00118E                     u2507:
  1569   00118E  2EE8               	decfsz	wreg,f,c
  1570   001190  D7FE               	bra	u2507
  1571   001192  2E27               	decfsz	??_motor_retrace^0,f,c
  1572   001194  D7FC               	bra	u2507
  1573   001196  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1574   001198  D7FA               	bra	u2507
  1575   00119A  D000               	nop2	
  1576   00119C                     
  1577                           ;color.c: 269:          norm_stop(mL, mR);
  1578   00119C  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1579   0011A0  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1580   0011A4  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1581   0011A8  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1582   0011AC  ECE8  F014         	call	_norm_stop	;wreg free
  1583                           
  1584                           ;color.c: 270:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1585   0011B0  0E03               	movlw	3
  1586   0011B2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1587   0011B4  0E70               	movlw	112
  1588   0011B6  6E27               	movwf	??_motor_retrace^0,c
  1589   0011B8  0E5C               	movlw	92
  1590   0011BA                     u2517:
  1591   0011BA  2EE8               	decfsz	wreg,f,c
  1592   0011BC  D7FE               	bra	u2517
  1593   0011BE  2E27               	decfsz	??_motor_retrace^0,f,c
  1594   0011C0  D7FC               	bra	u2517
  1595   0011C2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1596   0011C4  D7FA               	bra	u2517
  1597   0011C6  D000               	nop2	
  1598   0011C8                     
  1599                           ;color.c: 271:      }
  1600   0011C8  0100               	movlb	0	; () banked
  1601   0011CA  4BB8               	infsnz	motor_retrace@j_513& (0+255),f,b
  1602   0011CC  2BB9               	incf	(motor_retrace@j_513+1)& (0+255),f,b
  1603   0011CE  BFB9               	btfsc	(motor_retrace@j_513+1)& (0+255),7,b
  1604   0011D0  EFF3  F008         	goto	u2251
  1605   0011D4  51B9               	movf	(motor_retrace@j_513+1)& (0+255),w,b
  1606   0011D6  E109               	bnz	u2250
  1607   0011D8  0E0D               	movlw	13
  1608   0011DA  5DB8               	subwf	motor_retrace@j_513& (0+255),w,b
  1609   0011DC  A0D8               	btfss	status,0,c
  1610   0011DE  EFF3  F008         	goto	u2251
  1611   0011E2  EFF5  F008         	goto	u2250
  1612   0011E6                     u2251:
  1613   0011E6  EFB8  F008         	goto	l3396
  1614   0011EA                     u2250:
  1615   0011EA  EF9B  F009         	goto	l3436
  1616   0011EE                     l3404:
  1617   0011EE  504F               	movf	_ctr^0,w,c
  1618   0011F0  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1619   0011F2  6ED9               	movwf	fsr2l,c
  1620   0011F4  5050               	movf	(_ctr+1)^0,w,c
  1621   0011F6  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1622   0011F8  6EDA               	movwf	fsr2h,c
  1623   0011FA  0E06               	movlw	6
  1624   0011FC  18DE               	xorwf	postinc2,w,c
  1625   0011FE  A4D8               	btfss	status,2,c
  1626   001200  EF04  F009         	goto	u2261
  1627   001204  EF06  F009         	goto	u2260
  1628   001208                     u2261:
  1629   001208  EF4A  F009         	goto	l3420
  1630   00120C                     u2260:
  1631   00120C                     
  1632                           ;color.c: 274:      for (int j = 0; j <= 23; j++) {
  1633   00120C  0E00               	movlw	0
  1634   00120E  0100               	movlb	0	; () banked
  1635   001210  6FBB               	movwf	(motor_retrace@j_514+1)& (0+255),b
  1636   001212  0E00               	movlw	0
  1637   001214  6FBA               	movwf	motor_retrace@j_514& (0+255),b
  1638   001216                     l3412:
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;color.c: 275:          turnRight(mL, mR);
  1642   001216  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1643   00121A  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1644   00121E  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1645   001222  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1646   001226  EC10  F013         	call	_turnRight	;wreg free
  1647   00122A                     
  1648                           ;color.c: 276:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1649   00122A  0E03               	movlw	3
  1650   00122C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1651   00122E  0E70               	movlw	112
  1652   001230  6E27               	movwf	??_motor_retrace^0,c
  1653   001232  0E5C               	movlw	92
  1654   001234                     u2527:
  1655   001234  2EE8               	decfsz	wreg,f,c
  1656   001236  D7FE               	bra	u2527
  1657   001238  2E27               	decfsz	??_motor_retrace^0,f,c
  1658   00123A  D7FC               	bra	u2527
  1659   00123C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1660   00123E  D7FA               	bra	u2527
  1661   001240  D000               	nop2	
  1662   001242                     
  1663                           ;color.c: 277:          norm_stop(mL, mR);
  1664   001242  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1665   001246  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1666   00124A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1667   00124E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1668   001252  ECE8  F014         	call	_norm_stop	;wreg free
  1669                           
  1670                           ;color.c: 278:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1671   001256  0E03               	movlw	3
  1672   001258  6E28               	movwf	(??_motor_retrace+1)^0,c
  1673   00125A  0E70               	movlw	112
  1674   00125C  6E27               	movwf	??_motor_retrace^0,c
  1675   00125E  0E5C               	movlw	92
  1676   001260                     u2537:
  1677   001260  2EE8               	decfsz	wreg,f,c
  1678   001262  D7FE               	bra	u2537
  1679   001264  2E27               	decfsz	??_motor_retrace^0,f,c
  1680   001266  D7FC               	bra	u2537
  1681   001268  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1682   00126A  D7FA               	bra	u2537
  1683   00126C  D000               	nop2	
  1684   00126E                     
  1685                           ;color.c: 279:      }
  1686   00126E  0100               	movlb	0	; () banked
  1687   001270  4BBA               	infsnz	motor_retrace@j_514& (0+255),f,b
  1688   001272  2BBB               	incf	(motor_retrace@j_514+1)& (0+255),f,b
  1689   001274  BFBB               	btfsc	(motor_retrace@j_514+1)& (0+255),7,b
  1690   001276  EF46  F009         	goto	u2271
  1691   00127A  51BB               	movf	(motor_retrace@j_514+1)& (0+255),w,b
  1692   00127C  E109               	bnz	u2270
  1693   00127E  0E18               	movlw	24
  1694   001280  5DBA               	subwf	motor_retrace@j_514& (0+255),w,b
  1695   001282  A0D8               	btfss	status,0,c
  1696   001284  EF46  F009         	goto	u2271
  1697   001288  EF48  F009         	goto	u2270
  1698   00128C                     u2271:
  1699   00128C  EF0B  F009         	goto	l3412
  1700   001290                     u2270:
  1701   001290  EF9B  F009         	goto	l3436
  1702   001294                     l3420:
  1703   001294  504F               	movf	_ctr^0,w,c
  1704   001296  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1705   001298  6ED9               	movwf	fsr2l,c
  1706   00129A  5050               	movf	(_ctr+1)^0,w,c
  1707   00129C  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1708   00129E  6EDA               	movwf	fsr2h,c
  1709   0012A0  0E07               	movlw	7
  1710   0012A2  18DE               	xorwf	postinc2,w,c
  1711   0012A4  A4D8               	btfss	status,2,c
  1712   0012A6  EF57  F009         	goto	u2281
  1713   0012AA  EF59  F009         	goto	u2280
  1714   0012AE                     u2281:
  1715   0012AE  EF9B  F009         	goto	l3436
  1716   0012B2                     u2280:
  1717   0012B2                     
  1718                           ;color.c: 282:          for (int j = 0; j <= 20; j++) {
  1719   0012B2  0E00               	movlw	0
  1720   0012B4  0100               	movlb	0	; () banked
  1721   0012B6  6FBD               	movwf	(motor_retrace@j_515+1)& (0+255),b
  1722   0012B8  0E00               	movlw	0
  1723   0012BA  6FBC               	movwf	motor_retrace@j_515& (0+255),b
  1724   0012BC                     l3428:
  1725                           
  1726                           ; BSR set to: 0
  1727                           ;color.c: 283:          turnRight(mL, mR);
  1728   0012BC  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1729   0012C0  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1730   0012C4  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1731   0012C8  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1732   0012CC  EC10  F013         	call	_turnRight	;wreg free
  1733   0012D0                     
  1734                           ;color.c: 284:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1735   0012D0  0E03               	movlw	3
  1736   0012D2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1737   0012D4  0E70               	movlw	112
  1738   0012D6  6E27               	movwf	??_motor_retrace^0,c
  1739   0012D8  0E5C               	movlw	92
  1740   0012DA                     u2547:
  1741   0012DA  2EE8               	decfsz	wreg,f,c
  1742   0012DC  D7FE               	bra	u2547
  1743   0012DE  2E27               	decfsz	??_motor_retrace^0,f,c
  1744   0012E0  D7FC               	bra	u2547
  1745   0012E2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1746   0012E4  D7FA               	bra	u2547
  1747   0012E6  D000               	nop2	
  1748   0012E8                     
  1749                           ;color.c: 285:          norm_stop(mL, mR);
  1750   0012E8  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1751   0012EC  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1752   0012F0  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1753   0012F4  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1754   0012F8  ECE8  F014         	call	_norm_stop	;wreg free
  1755                           
  1756                           ;color.c: 286:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1757   0012FC  0E03               	movlw	3
  1758   0012FE  6E28               	movwf	(??_motor_retrace+1)^0,c
  1759   001300  0E70               	movlw	112
  1760   001302  6E27               	movwf	??_motor_retrace^0,c
  1761   001304  0E5C               	movlw	92
  1762   001306                     u2557:
  1763   001306  2EE8               	decfsz	wreg,f,c
  1764   001308  D7FE               	bra	u2557
  1765   00130A  2E27               	decfsz	??_motor_retrace^0,f,c
  1766   00130C  D7FC               	bra	u2557
  1767   00130E  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1768   001310  D7FA               	bra	u2557
  1769   001312  D000               	nop2	
  1770   001314                     
  1771                           ;color.c: 287:      }
  1772   001314  0100               	movlb	0	; () banked
  1773   001316  4BBC               	infsnz	motor_retrace@j_515& (0+255),f,b
  1774   001318  2BBD               	incf	(motor_retrace@j_515+1)& (0+255),f,b
  1775   00131A  BFBD               	btfsc	(motor_retrace@j_515+1)& (0+255),7,b
  1776   00131C  EF99  F009         	goto	u2291
  1777   001320  51BD               	movf	(motor_retrace@j_515+1)& (0+255),w,b
  1778   001322  E109               	bnz	u2290
  1779   001324  0E15               	movlw	21
  1780   001326  5DBC               	subwf	motor_retrace@j_515& (0+255),w,b
  1781   001328  A0D8               	btfss	status,0,c
  1782   00132A  EF99  F009         	goto	u2291
  1783   00132E  EF9B  F009         	goto	u2290
  1784   001332                     u2291:
  1785   001332  EF5E  F009         	goto	l3428
  1786   001336                     u2290:
  1787   001336                     l3436:
  1788                           
  1789                           ;color.c: 290:     ctr--;
  1790   001336  064F               	decf	_ctr^0,f,c
  1791   001338  A0D8               	btfss	status,0,c
  1792   00133A  0650               	decf	(_ctr+1)^0,f,c
  1793   00133C                     
  1794                           ;color.c: 291:     if (ctr == -1) {
  1795   00133C  284F               	incf	_ctr^0,w,c
  1796   00133E  E106               	bnz	u2301
  1797   001340  2850               	incf	(_ctr+1)^0,w,c
  1798   001342  A4D8               	btfss	status,2,c
  1799   001344  EFA6  F009         	goto	u2301
  1800   001348  EFA8  F009         	goto	u2300
  1801   00134C                     u2301:
  1802   00134C  EFAB  F009         	goto	l162
  1803   001350                     u2300:
  1804   001350                     
  1805                           ;color.c: 292:            motor_return = 0;
  1806   001350  0E00               	movlw	0
  1807   001352  0100               	movlb	0	; () banked
  1808   001354  6FA0               	movwf	_motor_return& (0+255),b
  1809   001356                     l162:
  1810   001356  0012               	return		;funcret
  1811   001358                     __end_of_motor_retrace:
  1812                           	callstack 0
  1813                           
  1814 ;; *************** function _reverse *****************
  1815 ;; Defined at:
  1816 ;;		line 189 in file "dc_motor.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1819 ;;		 -> main@mL(9), 
  1820 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1821 ;;		 -> main@mR(9), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  1    wreg      void 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1835 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1836 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1837 ;;Total ram usage:        5 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 8
  1840 ;; This function calls:
  1841 ;;		_setMotorPWM
  1842 ;; This function is called by:
  1843 ;;		_motor_retrace
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text4
  1848   002284                     __ptext4:
  1849                           	callstack 0
  1850   002284                     _reverse:
  1851                           	callstack 21
  1852   002284                     
  1853                           ;dc_motor.c: 189: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 190: {;dc_motor.c
      +                          : 191:     mL->power = 5;
  1854   002284  C01C  FFD9         	movff	reverse@mL,fsr2l
  1855   002288  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1856   00228C  0E05               	movlw	5
  1857   00228E  6EDF               	movwf	indf2,c
  1858                           
  1859                           ;dc_motor.c: 192:     mR->power = 5;
  1860   002290  C01E  FFD9         	movff	reverse@mR,fsr2l
  1861   002294  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1862   002298  0E05               	movlw	5
  1863   00229A  6EDF               	movwf	indf2,c
  1864   00229C                     
  1865                           ;dc_motor.c: 193:     mR->direction = 0;
  1866   00229C  EE20 F001          	lfsr	2,1
  1867   0022A0  501E               	movf	reverse@mR^0,w,c
  1868   0022A2  26D9               	addwf	fsr2l,f,c
  1869   0022A4  501F               	movf	(reverse@mR+1)^0,w,c
  1870   0022A6  22DA               	addwfc	fsr2h,f,c
  1871   0022A8  0E00               	movlw	0
  1872   0022AA  6EDF               	movwf	indf2,c
  1873   0022AC                     
  1874                           ;dc_motor.c: 194:     mL->direction = 0;
  1875   0022AC  EE20 F001          	lfsr	2,1
  1876   0022B0  501C               	movf	reverse@mL^0,w,c
  1877   0022B2  26D9               	addwf	fsr2l,f,c
  1878   0022B4  501D               	movf	(reverse@mL+1)^0,w,c
  1879   0022B6  22DA               	addwfc	fsr2h,f,c
  1880   0022B8  0E00               	movlw	0
  1881   0022BA  6EDF               	movwf	indf2,c
  1882   0022BC                     
  1883                           ;dc_motor.c: 195:     mL->brakemode = 1;
  1884   0022BC  EE20 F002          	lfsr	2,2
  1885   0022C0  501C               	movf	reverse@mL^0,w,c
  1886   0022C2  26D9               	addwf	fsr2l,f,c
  1887   0022C4  501D               	movf	(reverse@mL+1)^0,w,c
  1888   0022C6  22DA               	addwfc	fsr2h,f,c
  1889   0022C8  0E01               	movlw	1
  1890   0022CA  6EDF               	movwf	indf2,c
  1891   0022CC                     
  1892                           ;dc_motor.c: 196:     mR->brakemode = 1;
  1893   0022CC  EE20 F002          	lfsr	2,2
  1894   0022D0  501E               	movf	reverse@mR^0,w,c
  1895   0022D2  26D9               	addwf	fsr2l,f,c
  1896   0022D4  501F               	movf	(reverse@mR+1)^0,w,c
  1897   0022D6  22DA               	addwfc	fsr2h,f,c
  1898   0022D8  0E01               	movlw	1
  1899   0022DA  6EDF               	movwf	indf2,c
  1900                           
  1901                           ;dc_motor.c: 197:     while (mL->power <= 100 && mR->power <=100)
  1902   0022DC  EF8D  F011         	goto	l606
  1903   0022E0                     l3196:
  1904                           
  1905                           ;dc_motor.c: 198:     {;dc_motor.c: 199:         mL->power++;
  1906   0022E0  C01C  FFD9         	movff	reverse@mL,fsr2l
  1907   0022E4  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1908   0022E8  2ADF               	incf	indf2,f,c
  1909                           
  1910                           ;dc_motor.c: 200:         mR->power++;
  1911   0022EA  C01E  FFD9         	movff	reverse@mR,fsr2l
  1912   0022EE  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1913   0022F2  2ADF               	incf	indf2,f,c
  1914   0022F4                     
  1915                           ;dc_motor.c: 201:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1916   0022F4  0ED0               	movlw	208
  1917   0022F6  6E20               	movwf	??_reverse^0,c
  1918   0022F8  0ECA               	movlw	202
  1919   0022FA                     u2567:
  1920   0022FA  2EE8               	decfsz	wreg,f,c
  1921   0022FC  D7FE               	bra	u2567
  1922   0022FE  2E20               	decfsz	??_reverse^0,f,c
  1923   002300  D7FC               	bra	u2567
  1924   002302                     
  1925                           ;dc_motor.c: 202:         setMotorPWM(mL);
  1926   002302  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  1927   002306  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  1928   00230A  EC61  F00F         	call	_setMotorPWM	;wreg free
  1929   00230E                     
  1930                           ;dc_motor.c: 203:         setMotorPWM(mR);
  1931   00230E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  1932   002312  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  1933   002316  EC61  F00F         	call	_setMotorPWM	;wreg free
  1934   00231A                     l606:
  1935                           
  1936                           ;dc_motor.c: 197:     while (mL->power <= 100 && mR->power <=100)
  1937   00231A  C01C  FFD9         	movff	reverse@mL,fsr2l
  1938   00231E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1939   002322  0E65               	movlw	101
  1940   002324  60DF               	cpfslt	indf2,c
  1941   002326  EF97  F011         	goto	u2001
  1942   00232A  EF99  F011         	goto	u2000
  1943   00232E                     u2001:
  1944   00232E  EFA5  F011         	goto	l3206
  1945   002332                     u2000:
  1946   002332  C01E  FFD9         	movff	reverse@mR,fsr2l
  1947   002336  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1948   00233A  0E64               	movlw	100
  1949   00233C  64DF               	cpfsgt	indf2,c
  1950   00233E  EFA3  F011         	goto	u2011
  1951   002342  EFA5  F011         	goto	u2010
  1952   002346                     u2011:
  1953   002346  EF70  F011         	goto	l3196
  1954   00234A                     u2010:
  1955   00234A                     l3206:
  1956                           
  1957                           ;dc_motor.c: 205:     mL->power = 100;
  1958   00234A  C01C  FFD9         	movff	reverse@mL,fsr2l
  1959   00234E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1960   002352  0E64               	movlw	100
  1961   002354  6EDF               	movwf	indf2,c
  1962                           
  1963                           ;dc_motor.c: 206:     mR->power = 100;
  1964   002356  C01E  FFD9         	movff	reverse@mR,fsr2l
  1965   00235A  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1966   00235E  0E64               	movlw	100
  1967   002360  6EDF               	movwf	indf2,c
  1968   002362                     
  1969                           ;dc_motor.c: 207:     setMotorPWM(mL);
  1970   002362  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  1971   002366  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  1972   00236A  EC61  F00F         	call	_setMotorPWM	;wreg free
  1973   00236E                     
  1974                           ;dc_motor.c: 208:     setMotorPWM(mR);
  1975   00236E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  1976   002372  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  1977   002376  EC61  F00F         	call	_setMotorPWM	;wreg free
  1978   00237A  0012               	return		;funcret
  1979   00237C                     __end_of_reverse:
  1980                           	callstack 0
  1981                           
  1982 ;; *************** function _motor_response *****************
  1983 ;; Defined at:
  1984 ;;		line 127 in file "color.c"
  1985 ;; Parameters:    Size  Location     Type
  1986 ;;  temp            2   32[COMRAM] PTR struct RGBC_val
  1987 ;;		 -> main@RGBC(32), 
  1988 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1989 ;;		 -> main@mR(9), main@mL(9), 
  1990 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1991 ;;		 -> main@mR(9), main@mL(9), 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  j               2   46[COMRAM] int 
  1994 ;;  j               2   44[COMRAM] int 
  1995 ;;  j               2   42[COMRAM] int 
  1996 ;;  j               2   40[COMRAM] int 
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      unsigned char 
  1999 ;; Registers used:
  2000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2006 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2007 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2009 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2010 ;;Total ram usage:       16 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 9
  2013 ;; This function calls:
  2014 ;;		___flge
  2015 ;;		_fullSpeedAhead
  2016 ;;		_norm_stop
  2017 ;;		_turnLeft
  2018 ;;		_turnRight
  2019 ;; This function is called by:
  2020 ;;		_main
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           	psect	text5
  2025   001358                     __ptext5:
  2026                           	callstack 0
  2027   001358                     _motor_response:
  2028                           	callstack 21
  2029   001358                     
  2030                           ;color.c: 129:     if (temp->norm_G >8) {
  2031   001358  0E00               	movlw	0
  2032   00135A  6E09               	movwf	___flge@ff1^0,c
  2033   00135C  0E00               	movlw	0
  2034   00135E  6E0A               	movwf	(___flge@ff1+1)^0,c
  2035   001360  0E00               	movlw	0
  2036   001362  6E0B               	movwf	(___flge@ff1+2)^0,c
  2037   001364  0E41               	movlw	65
  2038   001366  6E0C               	movwf	(___flge@ff1+3)^0,c
  2039   001368  EE20 F014          	lfsr	2,20
  2040   00136C  5021               	movf	motor_response@temp^0,w,c
  2041   00136E  26D9               	addwf	fsr2l,f,c
  2042   001370  5022               	movf	(motor_response@temp+1)^0,w,c
  2043   001372  22DA               	addwfc	fsr2h,f,c
  2044   001374  CFDE F00D          	movff	postinc2,___flge@ff2
  2045   001378  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2046   00137C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2047   001380  CFDE F010          	movff	postinc2,___flge@ff2+3
  2048   001384  ECC0  F010         	call	___flge	;wreg free
  2049   001388  B0D8               	btfsc	status,0,c
  2050   00138A  EFC9  F009         	goto	u2021
  2051   00138E  EFCB  F009         	goto	u2020
  2052   001392                     u2021:
  2053   001392  EF10  F00A         	goto	l3234
  2054   001396                     u2020:
  2055   001396                     
  2056                           ;color.c: 130:         for (int j = 0; j <= 15; j++) {
  2057   001396  0E00               	movlw	0
  2058   001398  6E2A               	movwf	(motor_response@j+1)^0,c
  2059   00139A  0E00               	movlw	0
  2060   00139C  6E29               	movwf	motor_response@j^0,c
  2061   00139E                     l3220:
  2062                           
  2063                           ;color.c: 131:             turnRight(mL, mR);
  2064   00139E  C023  F01C         	movff	motor_response@mL,turnRight@mL
  2065   0013A2  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2066   0013A6  C025  F01E         	movff	motor_response@mR,turnRight@mR
  2067   0013AA  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2068   0013AE  EC10  F013         	call	_turnRight	;wreg free
  2069   0013B2                     
  2070                           ;color.c: 132:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2071   0013B2  0E03               	movlw	3
  2072   0013B4  6E28               	movwf	(??_motor_response+1)^0,c
  2073   0013B6  0E70               	movlw	112
  2074   0013B8  6E27               	movwf	??_motor_response^0,c
  2075   0013BA  0E5C               	movlw	92
  2076   0013BC                     u2577:
  2077   0013BC  2EE8               	decfsz	wreg,f,c
  2078   0013BE  D7FE               	bra	u2577
  2079   0013C0  2E27               	decfsz	??_motor_response^0,f,c
  2080   0013C2  D7FC               	bra	u2577
  2081   0013C4  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2082   0013C6  D7FA               	bra	u2577
  2083   0013C8  D000               	nop2	
  2084   0013CA                     
  2085                           ;color.c: 133:             norm_stop(mL, mR);
  2086   0013CA  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2087   0013CE  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2088   0013D2  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2089   0013D6  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2090   0013DA  ECE8  F014         	call	_norm_stop	;wreg free
  2091                           
  2092                           ;color.c: 134:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2093   0013DE  0E03               	movlw	3
  2094   0013E0  6E28               	movwf	(??_motor_response+1)^0,c
  2095   0013E2  0E70               	movlw	112
  2096   0013E4  6E27               	movwf	??_motor_response^0,c
  2097   0013E6  0E5C               	movlw	92
  2098   0013E8                     u2587:
  2099   0013E8  2EE8               	decfsz	wreg,f,c
  2100   0013EA  D7FE               	bra	u2587
  2101   0013EC  2E27               	decfsz	??_motor_response^0,f,c
  2102   0013EE  D7FC               	bra	u2587
  2103   0013F0  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2104   0013F2  D7FA               	bra	u2587
  2105   0013F4  D000               	nop2	
  2106   0013F6                     
  2107                           ;color.c: 135:         }
  2108   0013F6  4A29               	infsnz	motor_response@j^0,f,c
  2109   0013F8  2A2A               	incf	(motor_response@j+1)^0,f,c
  2110   0013FA  BE2A               	btfsc	(motor_response@j+1)^0,7,c
  2111   0013FC  EF09  F00A         	goto	u2031
  2112   001400  502A               	movf	(motor_response@j+1)^0,w,c
  2113   001402  E109               	bnz	u2030
  2114   001404  0E10               	movlw	16
  2115   001406  5C29               	subwf	motor_response@j^0,w,c
  2116   001408  A0D8               	btfss	status,0,c
  2117   00140A  EF09  F00A         	goto	u2031
  2118   00140E  EF0B  F00A         	goto	u2030
  2119   001412                     u2031:
  2120   001412  EFCF  F009         	goto	l3220
  2121   001416                     u2030:
  2122   001416                     
  2123                           ;color.c: 136:         return 1;
  2124   001416  0E01               	movlw	1
  2125   001418  EFFB  F00B         	goto	l119
  2126   00141C                     l3230:
  2127   00141C  EFFB  F00B         	goto	l119
  2128   001420                     l3234:
  2129   001420  0E00               	movlw	0
  2130   001422  6E09               	movwf	___flge@ff1^0,c
  2131   001424  0E00               	movlw	0
  2132   001426  6E0A               	movwf	(___flge@ff1+1)^0,c
  2133   001428  0E90               	movlw	144
  2134   00142A  6E0B               	movwf	(___flge@ff1+2)^0,c
  2135   00142C  0E40               	movlw	64
  2136   00142E  6E0C               	movwf	(___flge@ff1+3)^0,c
  2137   001430  EE20 F018          	lfsr	2,24
  2138   001434  5021               	movf	motor_response@temp^0,w,c
  2139   001436  26D9               	addwf	fsr2l,f,c
  2140   001438  5022               	movf	(motor_response@temp+1)^0,w,c
  2141   00143A  22DA               	addwfc	fsr2h,f,c
  2142   00143C  CFDE F00D          	movff	postinc2,___flge@ff2
  2143   001440  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2144   001444  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2145   001448  CFDE F010          	movff	postinc2,___flge@ff2+3
  2146   00144C  ECC0  F010         	call	___flge	;wreg free
  2147   001450  B0D8               	btfsc	status,0,c
  2148   001452  EF2D  F00A         	goto	u2041
  2149   001456  EF2F  F00A         	goto	u2040
  2150   00145A                     u2041:
  2151   00145A  EF91  F00A         	goto	l3258
  2152   00145E                     u2040:
  2153   00145E  EE20 F018          	lfsr	2,24
  2154   001462  5021               	movf	motor_response@temp^0,w,c
  2155   001464  26D9               	addwf	fsr2l,f,c
  2156   001466  5022               	movf	(motor_response@temp+1)^0,w,c
  2157   001468  22DA               	addwfc	fsr2h,f,c
  2158   00146A  CFDE F009          	movff	postinc2,___flge@ff1
  2159   00146E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2160   001472  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2161   001476  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2162   00147A  0E66               	movlw	102
  2163   00147C  6E0D               	movwf	___flge@ff2^0,c
  2164   00147E  0E66               	movlw	102
  2165   001480  6E0E               	movwf	(___flge@ff2+1)^0,c
  2166   001482  0EA6               	movlw	166
  2167   001484  6E0F               	movwf	(___flge@ff2+2)^0,c
  2168   001486  0E40               	movlw	64
  2169   001488  6E10               	movwf	(___flge@ff2+3)^0,c
  2170   00148A  ECC0  F010         	call	___flge	;wreg free
  2171   00148E  B0D8               	btfsc	status,0,c
  2172   001490  EF4C  F00A         	goto	u2051
  2173   001494  EF4E  F00A         	goto	u2050
  2174   001498                     u2051:
  2175   001498  EF91  F00A         	goto	l3258
  2176   00149C                     u2050:
  2177   00149C                     
  2178                           ;color.c: 139:         for (int j = 0; j <= 15; j++) {
  2179   00149C  0E00               	movlw	0
  2180   00149E  6E2C               	movwf	(motor_response@j_502+1)^0,c
  2181   0014A0  0E00               	movlw	0
  2182   0014A2  6E2B               	movwf	motor_response@j_502^0,c
  2183   0014A4                     l3244:
  2184                           
  2185                           ;color.c: 140:             turnLeft(mL, mR);
  2186   0014A4  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2187   0014A8  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2188   0014AC  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2189   0014B0  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2190   0014B4  EC49  F013         	call	_turnLeft	;wreg free
  2191   0014B8                     
  2192                           ;color.c: 141:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2193   0014B8  0E03               	movlw	3
  2194   0014BA  6E28               	movwf	(??_motor_response+1)^0,c
  2195   0014BC  0E70               	movlw	112
  2196   0014BE  6E27               	movwf	??_motor_response^0,c
  2197   0014C0  0E5C               	movlw	92
  2198   0014C2                     u2597:
  2199   0014C2  2EE8               	decfsz	wreg,f,c
  2200   0014C4  D7FE               	bra	u2597
  2201   0014C6  2E27               	decfsz	??_motor_response^0,f,c
  2202   0014C8  D7FC               	bra	u2597
  2203   0014CA  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2204   0014CC  D7FA               	bra	u2597
  2205   0014CE  D000               	nop2	
  2206   0014D0                     
  2207                           ;color.c: 142:             norm_stop(mL, mR);
  2208   0014D0  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2209   0014D4  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2210   0014D8  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2211   0014DC  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2212   0014E0  ECE8  F014         	call	_norm_stop	;wreg free
  2213                           
  2214                           ;color.c: 143:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2215   0014E4  0E03               	movlw	3
  2216   0014E6  6E28               	movwf	(??_motor_response+1)^0,c
  2217   0014E8  0E70               	movlw	112
  2218   0014EA  6E27               	movwf	??_motor_response^0,c
  2219   0014EC  0E5C               	movlw	92
  2220   0014EE                     u2607:
  2221   0014EE  2EE8               	decfsz	wreg,f,c
  2222   0014F0  D7FE               	bra	u2607
  2223   0014F2  2E27               	decfsz	??_motor_response^0,f,c
  2224   0014F4  D7FC               	bra	u2607
  2225   0014F6  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2226   0014F8  D7FA               	bra	u2607
  2227   0014FA  D000               	nop2	
  2228   0014FC                     
  2229                           ;color.c: 144:         }
  2230   0014FC  4A2B               	infsnz	motor_response@j_502^0,f,c
  2231   0014FE  2A2C               	incf	(motor_response@j_502+1)^0,f,c
  2232   001500  BE2C               	btfsc	(motor_response@j_502+1)^0,7,c
  2233   001502  EF8C  F00A         	goto	u2061
  2234   001506  502C               	movf	(motor_response@j_502+1)^0,w,c
  2235   001508  E109               	bnz	u2060
  2236   00150A  0E10               	movlw	16
  2237   00150C  5C2B               	subwf	motor_response@j_502^0,w,c
  2238   00150E  A0D8               	btfss	status,0,c
  2239   001510  EF8C  F00A         	goto	u2061
  2240   001514  EF8E  F00A         	goto	u2060
  2241   001518                     u2061:
  2242   001518  EF52  F00A         	goto	l3244
  2243   00151C                     u2060:
  2244   00151C                     
  2245                           ;color.c: 145:         return 2;
  2246   00151C  0E02               	movlw	2
  2247   00151E  EFFB  F00B         	goto	l119
  2248   001522                     l3258:
  2249   001522  0E33               	movlw	51
  2250   001524  6E09               	movwf	___flge@ff1^0,c
  2251   001526  0E33               	movlw	51
  2252   001528  6E0A               	movwf	(___flge@ff1+1)^0,c
  2253   00152A  0E33               	movlw	51
  2254   00152C  6E0B               	movwf	(___flge@ff1+2)^0,c
  2255   00152E  0E40               	movlw	64
  2256   001530  6E0C               	movwf	(___flge@ff1+3)^0,c
  2257   001532  EE20 F018          	lfsr	2,24
  2258   001536  5021               	movf	motor_response@temp^0,w,c
  2259   001538  26D9               	addwf	fsr2l,f,c
  2260   00153A  5022               	movf	(motor_response@temp+1)^0,w,c
  2261   00153C  22DA               	addwfc	fsr2h,f,c
  2262   00153E  CFDE F00D          	movff	postinc2,___flge@ff2
  2263   001542  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2264   001546  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2265   00154A  CFDE F010          	movff	postinc2,___flge@ff2+3
  2266   00154E  ECC0  F010         	call	___flge	;wreg free
  2267   001552  B0D8               	btfsc	status,0,c
  2268   001554  EFAE  F00A         	goto	u2071
  2269   001558  EFB0  F00A         	goto	u2070
  2270   00155C                     u2071:
  2271   00155C  EF8E  F00B         	goto	l3290
  2272   001560                     u2070:
  2273   001560  EE20 F018          	lfsr	2,24
  2274   001564  5021               	movf	motor_response@temp^0,w,c
  2275   001566  26D9               	addwf	fsr2l,f,c
  2276   001568  5022               	movf	(motor_response@temp+1)^0,w,c
  2277   00156A  22DA               	addwfc	fsr2h,f,c
  2278   00156C  CFDE F009          	movff	postinc2,___flge@ff1
  2279   001570  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2280   001574  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2281   001578  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2282   00157C  0ECD               	movlw	205
  2283   00157E  6E0D               	movwf	___flge@ff2^0,c
  2284   001580  0ECC               	movlw	204
  2285   001582  6E0E               	movwf	(___flge@ff2+1)^0,c
  2286   001584  0E4C               	movlw	76
  2287   001586  6E0F               	movwf	(___flge@ff2+2)^0,c
  2288   001588  0E40               	movlw	64
  2289   00158A  6E10               	movwf	(___flge@ff2+3)^0,c
  2290   00158C  ECC0  F010         	call	___flge	;wreg free
  2291   001590  B0D8               	btfsc	status,0,c
  2292   001592  EFCD  F00A         	goto	u2081
  2293   001596  EFCF  F00A         	goto	u2080
  2294   00159A                     u2081:
  2295   00159A  EF8E  F00B         	goto	l3290
  2296   00159E                     u2080:
  2297   00159E  0E33               	movlw	51
  2298   0015A0  6E09               	movwf	___flge@ff1^0,c
  2299   0015A2  0E33               	movlw	51
  2300   0015A4  6E0A               	movwf	(___flge@ff1+1)^0,c
  2301   0015A6  0E33               	movlw	51
  2302   0015A8  6E0B               	movwf	(___flge@ff1+2)^0,c
  2303   0015AA  0E40               	movlw	64
  2304   0015AC  6E0C               	movwf	(___flge@ff1+3)^0,c
  2305   0015AE  EE20 F010          	lfsr	2,16
  2306   0015B2  5021               	movf	motor_response@temp^0,w,c
  2307   0015B4  26D9               	addwf	fsr2l,f,c
  2308   0015B6  5022               	movf	(motor_response@temp+1)^0,w,c
  2309   0015B8  22DA               	addwfc	fsr2h,f,c
  2310   0015BA  CFDE F00D          	movff	postinc2,___flge@ff2
  2311   0015BE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2312   0015C2  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2313   0015C6  CFDE F010          	movff	postinc2,___flge@ff2+3
  2314   0015CA  ECC0  F010         	call	___flge	;wreg free
  2315   0015CE  B0D8               	btfsc	status,0,c
  2316   0015D0  EFEC  F00A         	goto	u2091
  2317   0015D4  EFEE  F00A         	goto	u2090
  2318   0015D8                     u2091:
  2319   0015D8  EF8E  F00B         	goto	l3290
  2320   0015DC                     u2090:
  2321   0015DC  EE20 F010          	lfsr	2,16
  2322   0015E0  5021               	movf	motor_response@temp^0,w,c
  2323   0015E2  26D9               	addwf	fsr2l,f,c
  2324   0015E4  5022               	movf	(motor_response@temp+1)^0,w,c
  2325   0015E6  22DA               	addwfc	fsr2h,f,c
  2326   0015E8  CFDE F009          	movff	postinc2,___flge@ff1
  2327   0015EC  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2328   0015F0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2329   0015F4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2330   0015F8  0ECD               	movlw	205
  2331   0015FA  6E0D               	movwf	___flge@ff2^0,c
  2332   0015FC  0ECC               	movlw	204
  2333   0015FE  6E0E               	movwf	(___flge@ff2+1)^0,c
  2334   001600  0E4C               	movlw	76
  2335   001602  6E0F               	movwf	(___flge@ff2+2)^0,c
  2336   001604  0E40               	movlw	64
  2337   001606  6E10               	movwf	(___flge@ff2+3)^0,c
  2338   001608  ECC0  F010         	call	___flge	;wreg free
  2339   00160C  B0D8               	btfsc	status,0,c
  2340   00160E  EF0B  F00B         	goto	u2101
  2341   001612  EF0D  F00B         	goto	u2100
  2342   001616                     u2101:
  2343   001616  EF8E  F00B         	goto	l3290
  2344   00161A                     u2100:
  2345   00161A  0E33               	movlw	51
  2346   00161C  6E09               	movwf	___flge@ff1^0,c
  2347   00161E  0E33               	movlw	51
  2348   001620  6E0A               	movwf	(___flge@ff1+1)^0,c
  2349   001622  0E33               	movlw	51
  2350   001624  6E0B               	movwf	(___flge@ff1+2)^0,c
  2351   001626  0E40               	movlw	64
  2352   001628  6E0C               	movwf	(___flge@ff1+3)^0,c
  2353   00162A  EE20 F014          	lfsr	2,20
  2354   00162E  5021               	movf	motor_response@temp^0,w,c
  2355   001630  26D9               	addwf	fsr2l,f,c
  2356   001632  5022               	movf	(motor_response@temp+1)^0,w,c
  2357   001634  22DA               	addwfc	fsr2h,f,c
  2358   001636  CFDE F00D          	movff	postinc2,___flge@ff2
  2359   00163A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2360   00163E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2361   001642  CFDE F010          	movff	postinc2,___flge@ff2+3
  2362   001646  ECC0  F010         	call	___flge	;wreg free
  2363   00164A  B0D8               	btfsc	status,0,c
  2364   00164C  EF2A  F00B         	goto	u2111
  2365   001650  EF2C  F00B         	goto	u2110
  2366   001654                     u2111:
  2367   001654  EF8E  F00B         	goto	l3290
  2368   001658                     u2110:
  2369   001658  EE20 F014          	lfsr	2,20
  2370   00165C  5021               	movf	motor_response@temp^0,w,c
  2371   00165E  26D9               	addwf	fsr2l,f,c
  2372   001660  5022               	movf	(motor_response@temp+1)^0,w,c
  2373   001662  22DA               	addwfc	fsr2h,f,c
  2374   001664  CFDE F009          	movff	postinc2,___flge@ff1
  2375   001668  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2376   00166C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2377   001670  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2378   001674  0ECD               	movlw	205
  2379   001676  6E0D               	movwf	___flge@ff2^0,c
  2380   001678  0ECC               	movlw	204
  2381   00167A  6E0E               	movwf	(___flge@ff2+1)^0,c
  2382   00167C  0E4C               	movlw	76
  2383   00167E  6E0F               	movwf	(___flge@ff2+2)^0,c
  2384   001680  0E40               	movlw	64
  2385   001682  6E10               	movwf	(___flge@ff2+3)^0,c
  2386   001684  ECC0  F010         	call	___flge	;wreg free
  2387   001688  B0D8               	btfsc	status,0,c
  2388   00168A  EF49  F00B         	goto	u2121
  2389   00168E  EF4B  F00B         	goto	u2120
  2390   001692                     u2121:
  2391   001692  EF8E  F00B         	goto	l3290
  2392   001696                     u2120:
  2393   001696                     
  2394                           ;color.c: 148:         for (int j = 0; j <= 29; j++) {
  2395   001696  0E00               	movlw	0
  2396   001698  6E2E               	movwf	(motor_response@j_503+1)^0,c
  2397   00169A  0E00               	movlw	0
  2398   00169C  6E2D               	movwf	motor_response@j_503^0,c
  2399   00169E                     l3276:
  2400                           
  2401                           ;color.c: 149:             turnLeft(mL, mR);
  2402   00169E  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2403   0016A2  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2404   0016A6  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2405   0016AA  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2406   0016AE  EC49  F013         	call	_turnLeft	;wreg free
  2407   0016B2                     
  2408                           ;color.c: 150:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2409   0016B2  0E03               	movlw	3
  2410   0016B4  6E28               	movwf	(??_motor_response+1)^0,c
  2411   0016B6  0E70               	movlw	112
  2412   0016B8  6E27               	movwf	??_motor_response^0,c
  2413   0016BA  0E5C               	movlw	92
  2414   0016BC                     u2617:
  2415   0016BC  2EE8               	decfsz	wreg,f,c
  2416   0016BE  D7FE               	bra	u2617
  2417   0016C0  2E27               	decfsz	??_motor_response^0,f,c
  2418   0016C2  D7FC               	bra	u2617
  2419   0016C4  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2420   0016C6  D7FA               	bra	u2617
  2421   0016C8  D000               	nop2	
  2422   0016CA                     
  2423                           ;color.c: 151:             norm_stop(mL, mR);
  2424   0016CA  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2425   0016CE  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2426   0016D2  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2427   0016D6  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2428   0016DA  ECE8  F014         	call	_norm_stop	;wreg free
  2429                           
  2430                           ;color.c: 152:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2431   0016DE  0E03               	movlw	3
  2432   0016E0  6E28               	movwf	(??_motor_response+1)^0,c
  2433   0016E2  0E70               	movlw	112
  2434   0016E4  6E27               	movwf	??_motor_response^0,c
  2435   0016E6  0E5C               	movlw	92
  2436   0016E8                     u2627:
  2437   0016E8  2EE8               	decfsz	wreg,f,c
  2438   0016EA  D7FE               	bra	u2627
  2439   0016EC  2E27               	decfsz	??_motor_response^0,f,c
  2440   0016EE  D7FC               	bra	u2627
  2441   0016F0  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2442   0016F2  D7FA               	bra	u2627
  2443   0016F4  D000               	nop2	
  2444   0016F6                     
  2445                           ;color.c: 153:         }
  2446   0016F6  4A2D               	infsnz	motor_response@j_503^0,f,c
  2447   0016F8  2A2E               	incf	(motor_response@j_503+1)^0,f,c
  2448   0016FA  BE2E               	btfsc	(motor_response@j_503+1)^0,7,c
  2449   0016FC  EF89  F00B         	goto	u2131
  2450   001700  502E               	movf	(motor_response@j_503+1)^0,w,c
  2451   001702  E109               	bnz	u2130
  2452   001704  0E1E               	movlw	30
  2453   001706  5C2D               	subwf	motor_response@j_503^0,w,c
  2454   001708  A0D8               	btfss	status,0,c
  2455   00170A  EF89  F00B         	goto	u2131
  2456   00170E  EF8B  F00B         	goto	u2130
  2457   001712                     u2131:
  2458   001712  EF4F  F00B         	goto	l3276
  2459   001716                     u2130:
  2460   001716                     
  2461                           ;color.c: 154:         return 3;
  2462   001716  0E03               	movlw	3
  2463   001718  EFFB  F00B         	goto	l119
  2464   00171C                     l3290:
  2465   00171C  0E00               	movlw	0
  2466   00171E  6E09               	movwf	___flge@ff1^0,c
  2467   001720  0E00               	movlw	0
  2468   001722  6E0A               	movwf	(___flge@ff1+1)^0,c
  2469   001724  0E40               	movlw	64
  2470   001726  6E0B               	movwf	(___flge@ff1+2)^0,c
  2471   001728  0E41               	movlw	65
  2472   00172A  6E0C               	movwf	(___flge@ff1+3)^0,c
  2473   00172C  EE20 F01C          	lfsr	2,28
  2474   001730  5021               	movf	motor_response@temp^0,w,c
  2475   001732  26D9               	addwf	fsr2l,f,c
  2476   001734  5022               	movf	(motor_response@temp+1)^0,w,c
  2477   001736  22DA               	addwfc	fsr2h,f,c
  2478   001738  CFDE F00D          	movff	postinc2,___flge@ff2
  2479   00173C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2480   001740  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2481   001744  CFDE F010          	movff	postinc2,___flge@ff2+3
  2482   001748  ECC0  F010         	call	___flge	;wreg free
  2483   00174C  B0D8               	btfsc	status,0,c
  2484   00174E  EFAB  F00B         	goto	u2141
  2485   001752  EFAD  F00B         	goto	u2140
  2486   001756                     u2141:
  2487   001756  EF0E  F00A         	goto	l3230
  2488   00175A                     u2140:
  2489   00175A                     
  2490                           ;color.c: 210:         motor_return = 1;
  2491   00175A  0E01               	movlw	1
  2492   00175C  0100               	movlb	0	; () banked
  2493   00175E  6FA0               	movwf	_motor_return& (0+255),b
  2494                           
  2495                           ;color.c: 211:         for (int j = 0; j <= 40; j++) {
  2496   001760  0E00               	movlw	0
  2497   001762  6E30               	movwf	(motor_response@j_504+1)^0,c
  2498   001764  0E00               	movlw	0
  2499   001766  6E2F               	movwf	motor_response@j_504^0,c
  2500   001768                     l3298:
  2501                           
  2502                           ;color.c: 212:             turnLeft(mL, mR);
  2503   001768  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2504   00176C  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2505   001770  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2506   001774  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2507   001778  EC49  F013         	call	_turnLeft	;wreg free
  2508   00177C                     
  2509                           ;color.c: 213:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2510   00177C  0E03               	movlw	3
  2511   00177E  6E28               	movwf	(??_motor_response+1)^0,c
  2512   001780  0E70               	movlw	112
  2513   001782  6E27               	movwf	??_motor_response^0,c
  2514   001784  0E5C               	movlw	92
  2515   001786                     u2637:
  2516   001786  2EE8               	decfsz	wreg,f,c
  2517   001788  D7FE               	bra	u2637
  2518   00178A  2E27               	decfsz	??_motor_response^0,f,c
  2519   00178C  D7FC               	bra	u2637
  2520   00178E  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2521   001790  D7FA               	bra	u2637
  2522   001792  D000               	nop2	
  2523   001794                     
  2524                           ;color.c: 214:             norm_stop(mL, mR);
  2525   001794  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2526   001798  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2527   00179C  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2528   0017A0  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2529   0017A4  ECE8  F014         	call	_norm_stop	;wreg free
  2530                           
  2531                           ;color.c: 215:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2532   0017A8  0E03               	movlw	3
  2533   0017AA  6E28               	movwf	(??_motor_response+1)^0,c
  2534   0017AC  0E70               	movlw	112
  2535   0017AE  6E27               	movwf	??_motor_response^0,c
  2536   0017B0  0E5C               	movlw	92
  2537   0017B2                     u2647:
  2538   0017B2  2EE8               	decfsz	wreg,f,c
  2539   0017B4  D7FE               	bra	u2647
  2540   0017B6  2E27               	decfsz	??_motor_response^0,f,c
  2541   0017B8  D7FC               	bra	u2647
  2542   0017BA  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2543   0017BC  D7FA               	bra	u2647
  2544   0017BE  D000               	nop2	
  2545   0017C0                     
  2546                           ;color.c: 216:         }
  2547   0017C0  4A2F               	infsnz	motor_response@j_504^0,f,c
  2548   0017C2  2A30               	incf	(motor_response@j_504+1)^0,f,c
  2549   0017C4  BE30               	btfsc	(motor_response@j_504+1)^0,7,c
  2550   0017C6  EFEE  F00B         	goto	u2151
  2551   0017CA  5030               	movf	(motor_response@j_504+1)^0,w,c
  2552   0017CC  E109               	bnz	u2150
  2553   0017CE  0E29               	movlw	41
  2554   0017D0  5C2F               	subwf	motor_response@j_504^0,w,c
  2555   0017D2  A0D8               	btfss	status,0,c
  2556   0017D4  EFEE  F00B         	goto	u2151
  2557   0017D8  EFF0  F00B         	goto	u2150
  2558   0017DC                     u2151:
  2559   0017DC  EFB4  F00B         	goto	l3298
  2560   0017E0                     u2150:
  2561   0017E0                     
  2562                           ;color.c: 217:         fullSpeedAhead(&mL, &mR);
  2563   0017E0  0E23               	movlw	low motor_response@mL
  2564   0017E2  6E1C               	movwf	fullSpeedAhead@mL^0,c
  2565   0017E4  0E00               	movlw	high motor_response@mL
  2566   0017E6  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  2567   0017E8  0E25               	movlw	low motor_response@mR
  2568   0017EA  6E1E               	movwf	fullSpeedAhead@mR^0,c
  2569   0017EC  0E00               	movlw	high motor_response@mR
  2570   0017EE  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  2571   0017F0  ECBE  F011         	call	_fullSpeedAhead	;wreg free
  2572   0017F4                     
  2573                           ;color.c: 218:         return 0;
  2574   0017F4  0E00               	movlw	0
  2575   0017F6                     l119:
  2576   0017F6  0012               	return		;funcret
  2577   0017F8                     __end_of_motor_response:
  2578                           	callstack 0
  2579                           
  2580 ;; *************** function _turnRight *****************
  2581 ;; Defined at:
  2582 ;;		line 144 in file "dc_motor.c"
  2583 ;; Parameters:    Size  Location     Type
  2584 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2585 ;;		 -> main@mR(9), main@mL(9), 
  2586 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2587 ;;		 -> main@mR(9), main@mL(9), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2599 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2602 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2603 ;;Total ram usage:        4 bytes
  2604 ;; Hardware stack levels used: 1
  2605 ;; Hardware stack levels required when called: 8
  2606 ;; This function calls:
  2607 ;;		_setMotorPWM
  2608 ;; This function is called by:
  2609 ;;		_motor_response
  2610 ;;		_motor_retrace
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           	psect	text6
  2615   002620                     __ptext6:
  2616                           	callstack 0
  2617   002620                     _turnRight:
  2618                           	callstack 21
  2619   002620                     
  2620                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
  2621   002620  C01C  FFD9         	movff	turnRight@mL,fsr2l
  2622   002624  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  2623   002628  0E32               	movlw	50
  2624   00262A  6EDF               	movwf	indf2,c
  2625                           
  2626                           ;dc_motor.c: 147:     mR->power = 50;
  2627   00262C  C01E  FFD9         	movff	turnRight@mR,fsr2l
  2628   002630  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  2629   002634  0E32               	movlw	50
  2630   002636  6EDF               	movwf	indf2,c
  2631   002638                     
  2632                           ;dc_motor.c: 148:     mL->brakemode = 1;
  2633   002638  EE20 F002          	lfsr	2,2
  2634   00263C  501C               	movf	turnRight@mL^0,w,c
  2635   00263E  26D9               	addwf	fsr2l,f,c
  2636   002640  501D               	movf	(turnRight@mL+1)^0,w,c
  2637   002642  22DA               	addwfc	fsr2h,f,c
  2638   002644  0E01               	movlw	1
  2639   002646  6EDF               	movwf	indf2,c
  2640   002648                     
  2641                           ;dc_motor.c: 149:     mR->brakemode = 1;
  2642   002648  EE20 F002          	lfsr	2,2
  2643   00264C  501E               	movf	turnRight@mR^0,w,c
  2644   00264E  26D9               	addwf	fsr2l,f,c
  2645   002650  501F               	movf	(turnRight@mR+1)^0,w,c
  2646   002652  22DA               	addwfc	fsr2h,f,c
  2647   002654  0E01               	movlw	1
  2648   002656  6EDF               	movwf	indf2,c
  2649   002658                     
  2650                           ;dc_motor.c: 150:     mR->direction = 0;
  2651   002658  EE20 F001          	lfsr	2,1
  2652   00265C  501E               	movf	turnRight@mR^0,w,c
  2653   00265E  26D9               	addwf	fsr2l,f,c
  2654   002660  501F               	movf	(turnRight@mR+1)^0,w,c
  2655   002662  22DA               	addwfc	fsr2h,f,c
  2656   002664  0E00               	movlw	0
  2657   002666  6EDF               	movwf	indf2,c
  2658   002668                     
  2659                           ;dc_motor.c: 151:     mL->direction = 1;
  2660   002668  EE20 F001          	lfsr	2,1
  2661   00266C  501C               	movf	turnRight@mL^0,w,c
  2662   00266E  26D9               	addwf	fsr2l,f,c
  2663   002670  501D               	movf	(turnRight@mL+1)^0,w,c
  2664   002672  22DA               	addwfc	fsr2h,f,c
  2665   002674  0E01               	movlw	1
  2666   002676  6EDF               	movwf	indf2,c
  2667   002678                     
  2668                           ;dc_motor.c: 152:     setMotorPWM(mL);
  2669   002678  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  2670   00267C  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  2671   002680  EC61  F00F         	call	_setMotorPWM	;wreg free
  2672   002684                     
  2673                           ;dc_motor.c: 153:     setMotorPWM(mR);
  2674   002684  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  2675   002688  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  2676   00268C  EC61  F00F         	call	_setMotorPWM	;wreg free
  2677   002690  0012               	return		;funcret
  2678   002692                     __end_of_turnRight:
  2679                           	callstack 0
  2680                           
  2681 ;; *************** function _turnLeft *****************
  2682 ;; Defined at:
  2683 ;;		line 131 in file "dc_motor.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2686 ;;		 -> main@mR(9), main@mL(9), 
  2687 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2688 ;;		 -> main@mR(9), main@mL(9), 
  2689 ;; Auto vars:     Size  Location     Type
  2690 ;;		None
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2703 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2704 ;;Total ram usage:        4 bytes
  2705 ;; Hardware stack levels used: 1
  2706 ;; Hardware stack levels required when called: 8
  2707 ;; This function calls:
  2708 ;;		_setMotorPWM
  2709 ;; This function is called by:
  2710 ;;		_motor_response
  2711 ;;		_motor_retrace
  2712 ;; This function uses a non-reentrant model
  2713 ;;
  2714                           
  2715                           	psect	text7
  2716   002692                     __ptext7:
  2717                           	callstack 0
  2718   002692                     _turnLeft:
  2719                           	callstack 21
  2720   002692                     
  2721                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 50;
  2722   002692  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  2723   002696  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  2724   00269A  0E32               	movlw	50
  2725   00269C  6EDF               	movwf	indf2,c
  2726                           
  2727                           ;dc_motor.c: 134:     mR->power = 50;
  2728   00269E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  2729   0026A2  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  2730   0026A6  0E32               	movlw	50
  2731   0026A8  6EDF               	movwf	indf2,c
  2732   0026AA                     
  2733                           ;dc_motor.c: 135:     mL->brakemode = 1;
  2734   0026AA  EE20 F002          	lfsr	2,2
  2735   0026AE  501C               	movf	turnLeft@mL^0,w,c
  2736   0026B0  26D9               	addwf	fsr2l,f,c
  2737   0026B2  501D               	movf	(turnLeft@mL+1)^0,w,c
  2738   0026B4  22DA               	addwfc	fsr2h,f,c
  2739   0026B6  0E01               	movlw	1
  2740   0026B8  6EDF               	movwf	indf2,c
  2741   0026BA                     
  2742                           ;dc_motor.c: 136:     mR->brakemode = 1;
  2743   0026BA  EE20 F002          	lfsr	2,2
  2744   0026BE  501E               	movf	turnLeft@mR^0,w,c
  2745   0026C0  26D9               	addwf	fsr2l,f,c
  2746   0026C2  501F               	movf	(turnLeft@mR+1)^0,w,c
  2747   0026C4  22DA               	addwfc	fsr2h,f,c
  2748   0026C6  0E01               	movlw	1
  2749   0026C8  6EDF               	movwf	indf2,c
  2750   0026CA                     
  2751                           ;dc_motor.c: 137:     mL->direction = 0;
  2752   0026CA  EE20 F001          	lfsr	2,1
  2753   0026CE  501C               	movf	turnLeft@mL^0,w,c
  2754   0026D0  26D9               	addwf	fsr2l,f,c
  2755   0026D2  501D               	movf	(turnLeft@mL+1)^0,w,c
  2756   0026D4  22DA               	addwfc	fsr2h,f,c
  2757   0026D6  0E00               	movlw	0
  2758   0026D8  6EDF               	movwf	indf2,c
  2759   0026DA                     
  2760                           ;dc_motor.c: 138:     mR->direction = 1;
  2761   0026DA  EE20 F001          	lfsr	2,1
  2762   0026DE  501E               	movf	turnLeft@mR^0,w,c
  2763   0026E0  26D9               	addwf	fsr2l,f,c
  2764   0026E2  501F               	movf	(turnLeft@mR+1)^0,w,c
  2765   0026E4  22DA               	addwfc	fsr2h,f,c
  2766   0026E6  0E01               	movlw	1
  2767   0026E8  6EDF               	movwf	indf2,c
  2768   0026EA                     
  2769                           ;dc_motor.c: 139:     setMotorPWM(mL);
  2770   0026EA  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  2771   0026EE  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2772   0026F2  EC61  F00F         	call	_setMotorPWM	;wreg free
  2773   0026F6                     
  2774                           ;dc_motor.c: 140:     setMotorPWM(mR);
  2775   0026F6  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  2776   0026FA  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2777   0026FE  EC61  F00F         	call	_setMotorPWM	;wreg free
  2778   002702  0012               	return		;funcret
  2779   002704                     __end_of_turnLeft:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _norm_stop *****************
  2783 ;; Defined at:
  2784 ;;		line 118 in file "dc_motor.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2787 ;;		 -> main@mR(9), main@mL(9), 
  2788 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2789 ;;		 -> main@mR(9), main@mL(9), 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;		None
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2801 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;Total ram usage:        4 bytes
  2806 ;; Hardware stack levels used: 1
  2807 ;; Hardware stack levels required when called: 8
  2808 ;; This function calls:
  2809 ;;		_setMotorPWM
  2810 ;; This function is called by:
  2811 ;;		_motor_response
  2812 ;;		_motor_retrace
  2813 ;;		_main
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text8
  2818   0029D0                     __ptext8:
  2819                           	callstack 0
  2820   0029D0                     _norm_stop:
  2821                           	callstack 22
  2822   0029D0                     
  2823                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  2824   0029D0  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  2825   0029D4  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  2826   0029D8  0E00               	movlw	0
  2827   0029DA  6EDF               	movwf	indf2,c
  2828                           
  2829                           ;dc_motor.c: 125:     mR->power = 0;
  2830   0029DC  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  2831   0029E0  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  2832   0029E4  0E00               	movlw	0
  2833   0029E6  6EDF               	movwf	indf2,c
  2834   0029E8                     
  2835                           ;dc_motor.c: 126:     setMotorPWM(mL);
  2836   0029E8  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  2837   0029EC  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  2838   0029F0  EC61  F00F         	call	_setMotorPWM	;wreg free
  2839   0029F4                     
  2840                           ;dc_motor.c: 127:     setMotorPWM(mR);
  2841   0029F4  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  2842   0029F8  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  2843   0029FC  EC61  F00F         	call	_setMotorPWM	;wreg free
  2844   002A00  0012               	return		;funcret
  2845   002A02                     __end_of_norm_stop:
  2846                           	callstack 0
  2847                           
  2848 ;; *************** function _fullSpeedAhead *****************
  2849 ;; Defined at:
  2850 ;;		line 167 in file "dc_motor.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2853 ;;		 -> main@mL(9), motor_response@mL(2), 
  2854 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2855 ;;		 -> main@mR(9), motor_response@mR(2), 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2871 ;;Total ram usage:        5 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 8
  2874 ;; This function calls:
  2875 ;;		_setMotorPWM
  2876 ;; This function is called by:
  2877 ;;		_motor_response
  2878 ;;		_main
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           	psect	text9
  2883   00237C                     __ptext9:
  2884                           	callstack 0
  2885   00237C                     _fullSpeedAhead:
  2886                           	callstack 21
  2887   00237C                     
  2888                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  2889   00237C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2890   002380  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2891   002384  0E05               	movlw	5
  2892   002386  6EDF               	movwf	indf2,c
  2893                           
  2894                           ;dc_motor.c: 170:     mR->power = 5;
  2895   002388  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2896   00238C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2897   002390  0E05               	movlw	5
  2898   002392  6EDF               	movwf	indf2,c
  2899   002394                     
  2900                           ;dc_motor.c: 171:     mR->direction = 1;
  2901   002394  EE20 F001          	lfsr	2,1
  2902   002398  501E               	movf	fullSpeedAhead@mR^0,w,c
  2903   00239A  26D9               	addwf	fsr2l,f,c
  2904   00239C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2905   00239E  22DA               	addwfc	fsr2h,f,c
  2906   0023A0  0E01               	movlw	1
  2907   0023A2  6EDF               	movwf	indf2,c
  2908   0023A4                     
  2909                           ;dc_motor.c: 172:     mL->direction = 1;
  2910   0023A4  EE20 F001          	lfsr	2,1
  2911   0023A8  501C               	movf	fullSpeedAhead@mL^0,w,c
  2912   0023AA  26D9               	addwf	fsr2l,f,c
  2913   0023AC  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2914   0023AE  22DA               	addwfc	fsr2h,f,c
  2915   0023B0  0E01               	movlw	1
  2916   0023B2  6EDF               	movwf	indf2,c
  2917   0023B4                     
  2918                           ;dc_motor.c: 173:     mL->brakemode = 1;
  2919   0023B4  EE20 F002          	lfsr	2,2
  2920   0023B8  501C               	movf	fullSpeedAhead@mL^0,w,c
  2921   0023BA  26D9               	addwf	fsr2l,f,c
  2922   0023BC  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2923   0023BE  22DA               	addwfc	fsr2h,f,c
  2924   0023C0  0E01               	movlw	1
  2925   0023C2  6EDF               	movwf	indf2,c
  2926   0023C4                     
  2927                           ;dc_motor.c: 174:     mR->brakemode = 1;
  2928   0023C4  EE20 F002          	lfsr	2,2
  2929   0023C8  501E               	movf	fullSpeedAhead@mR^0,w,c
  2930   0023CA  26D9               	addwf	fsr2l,f,c
  2931   0023CC  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2932   0023CE  22DA               	addwfc	fsr2h,f,c
  2933   0023D0  0E01               	movlw	1
  2934   0023D2  6EDF               	movwf	indf2,c
  2935                           
  2936                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2937   0023D4  EF02  F012         	goto	l3176
  2938   0023D8                     l3170:
  2939                           
  2940                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  2941   0023D8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2942   0023DC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2943   0023E0  2ADF               	incf	indf2,f,c
  2944                           
  2945                           ;dc_motor.c: 178:         mR->power++;
  2946   0023E2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2947   0023E6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2948   0023EA  2ADF               	incf	indf2,f,c
  2949   0023EC                     
  2950                           ;dc_motor.c: 180:         setMotorPWM(mL);
  2951   0023EC  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2952   0023F0  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2953   0023F4  EC61  F00F         	call	_setMotorPWM	;wreg free
  2954   0023F8                     
  2955                           ;dc_motor.c: 181:         setMotorPWM(mR);
  2956   0023F8  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2957   0023FC  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2958   002400  EC61  F00F         	call	_setMotorPWM	;wreg free
  2959   002404                     l3176:
  2960                           
  2961                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2962   002404  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2963   002408  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2964   00240C  0E15               	movlw	21
  2965   00240E  60DF               	cpfslt	indf2,c
  2966   002410  EF0C  F012         	goto	u1981
  2967   002414  EF0E  F012         	goto	u1980
  2968   002418                     u1981:
  2969   002418  EF1A  F012         	goto	l3180
  2970   00241C                     u1980:
  2971   00241C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2972   002420  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2973   002424  0E14               	movlw	20
  2974   002426  64DF               	cpfsgt	indf2,c
  2975   002428  EF18  F012         	goto	u1991
  2976   00242C  EF1A  F012         	goto	u1990
  2977   002430                     u1991:
  2978   002430  EFEC  F011         	goto	l3170
  2979   002434                     u1990:
  2980   002434                     l3180:
  2981                           
  2982                           ;dc_motor.c: 183:     mL->power = 20;
  2983   002434  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2984   002438  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2985   00243C  0E14               	movlw	20
  2986   00243E  6EDF               	movwf	indf2,c
  2987                           
  2988                           ;dc_motor.c: 184:     mR->power = 20;
  2989   002440  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2990   002444  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2991   002448  0E14               	movlw	20
  2992   00244A  6EDF               	movwf	indf2,c
  2993   00244C                     
  2994                           ;dc_motor.c: 185:     setMotorPWM(mL);
  2995   00244C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2996   002450  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2997   002454  EC61  F00F         	call	_setMotorPWM	;wreg free
  2998   002458                     
  2999                           ;dc_motor.c: 186:     setMotorPWM(mR);
  3000   002458  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  3001   00245C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  3002   002460  EC61  F00F         	call	_setMotorPWM	;wreg free
  3003   002464  0012               	return		;funcret
  3004   002466                     __end_of_fullSpeedAhead:
  3005                           	callstack 0
  3006                           
  3007 ;; *************** function _setMotorPWM *****************
  3008 ;; Defined at:
  3009 ;;		line 56 in file "dc_motor.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  m               2   21[COMRAM] PTR struct DC_motor
  3012 ;;		 -> main@mR(9), main@mL(9), motor_response@mR(2), motor_response@mL(2), 
  3013 ;; Auto vars:     Size  Location     Type
  3014 ;;  negDuty         1   26[COMRAM] unsigned char 
  3015 ;;  posDuty         1   25[COMRAM] unsigned char 
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;Total ram usage:        6 bytes
  3030 ;; Hardware stack levels used: 1
  3031 ;; Hardware stack levels required when called: 7
  3032 ;; This function calls:
  3033 ;;		___lwdiv
  3034 ;;		___wmul
  3035 ;; This function is called by:
  3036 ;;		_norm_stop
  3037 ;;		_turnLeft
  3038 ;;		_turnRight
  3039 ;;		_fullSpeedAhead
  3040 ;;		_reverse
  3041 ;;		_stop
  3042 ;;		_uturn
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           	psect	text10
  3047   001EC2                     __ptext10:
  3048                           	callstack 0
  3049   001EC2                     _setMotorPWM:
  3050                           	callstack 22
  3051   001EC2                     
  3052                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  3053   001EC2  EE20 F002          	lfsr	2,2
  3054   001EC6  5016               	movf	setMotorPWM@m^0,w,c
  3055   001EC8  26D9               	addwf	fsr2l,f,c
  3056   001ECA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3057   001ECC  22DA               	addwfc	fsr2h,f,c
  3058   001ECE  50DF               	movf	indf2,w,c
  3059   001ED0  B4D8               	btfsc	status,2,c
  3060   001ED2  EF6D  F00F         	goto	u1961
  3061   001ED6  EF6F  F00F         	goto	u1960
  3062   001EDA                     u1961:
  3063   001EDA  EFA3  F00F         	goto	l3116
  3064   001EDE                     u1960:
  3065   001EDE                     
  3066                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3067   001EDE  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3068   001EE2  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3069   001EE6  50DF               	movf	indf2,w,c
  3070   001EE8  6E18               	movwf	??_setMotorPWM^0,c
  3071   001EEA  5018               	movf	??_setMotorPWM^0,w,c
  3072   001EEC  6E09               	movwf	___wmul@multiplier^0,c
  3073   001EEE  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3074   001EF0  EE20 F003          	lfsr	2,3
  3075   001EF4  5016               	movf	setMotorPWM@m^0,w,c
  3076   001EF6  26D9               	addwf	fsr2l,f,c
  3077   001EF8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3078   001EFA  22DA               	addwfc	fsr2h,f,c
  3079   001EFC  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3080   001F00  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3081   001F04  EC81  F015         	call	___wmul	;wreg free
  3082   001F08  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3083   001F0C  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3084   001F10  0E00               	movlw	0
  3085   001F12  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3086   001F14  0E64               	movlw	100
  3087   001F16  6E11               	movwf	___lwdiv@divisor^0,c
  3088   001F18  ECD6  F012         	call	___lwdiv	;wreg free
  3089   001F1C  EE20 F003          	lfsr	2,3
  3090   001F20  5016               	movf	setMotorPWM@m^0,w,c
  3091   001F22  26D9               	addwf	fsr2l,f,c
  3092   001F24  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3093   001F26  22DA               	addwfc	fsr2h,f,c
  3094   001F28  50DF               	movf	indf2,w,c
  3095   001F2A  6E19               	movwf	(??_setMotorPWM+1)^0,c
  3096   001F2C  500F               	movf	?___lwdiv^0,w,c
  3097   001F2E  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  3098   001F30  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3099   001F32                     
  3100                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  3101   001F32  EE20 F003          	lfsr	2,3
  3102   001F36  5016               	movf	setMotorPWM@m^0,w,c
  3103   001F38  26D9               	addwf	fsr2l,f,c
  3104   001F3A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3105   001F3C  22DA               	addwfc	fsr2h,f,c
  3106   001F3E  50DF               	movf	indf2,w,c
  3107   001F40  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3108                           
  3109                           ;dc_motor.c: 63:     }
  3110   001F42  EFC6  F00F         	goto	l3120
  3111   001F46                     l3116:
  3112                           
  3113                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3114   001F46  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3115   001F4A  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3116   001F4E  50DF               	movf	indf2,w,c
  3117   001F50  6E18               	movwf	??_setMotorPWM^0,c
  3118   001F52  5018               	movf	??_setMotorPWM^0,w,c
  3119   001F54  6E09               	movwf	___wmul@multiplier^0,c
  3120   001F56  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3121   001F58  EE20 F003          	lfsr	2,3
  3122   001F5C  5016               	movf	setMotorPWM@m^0,w,c
  3123   001F5E  26D9               	addwf	fsr2l,f,c
  3124   001F60  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3125   001F62  22DA               	addwfc	fsr2h,f,c
  3126   001F64  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3127   001F68  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3128   001F6C  EC81  F015         	call	___wmul	;wreg free
  3129   001F70  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3130   001F74  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3131   001F78  0E00               	movlw	0
  3132   001F7A  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3133   001F7C  0E64               	movlw	100
  3134   001F7E  6E11               	movwf	___lwdiv@divisor^0,c
  3135   001F80  ECD6  F012         	call	___lwdiv	;wreg free
  3136   001F84  500F               	movf	?___lwdiv^0,w,c
  3137   001F86  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3138   001F88                     
  3139                           ;dc_motor.c: 66:         negDuty=0;
  3140   001F88  0E00               	movlw	0
  3141   001F8A  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3142   001F8C                     l3120:
  3143                           
  3144                           ;dc_motor.c: 69:     if (m->direction) {
  3145   001F8C  EE20 F001          	lfsr	2,1
  3146   001F90  5016               	movf	setMotorPWM@m^0,w,c
  3147   001F92  26D9               	addwf	fsr2l,f,c
  3148   001F94  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3149   001F96  22DA               	addwfc	fsr2h,f,c
  3150   001F98  50DF               	movf	indf2,w,c
  3151   001F9A  B4D8               	btfsc	status,2,c
  3152   001F9C  EFD2  F00F         	goto	u1971
  3153   001FA0  EFD4  F00F         	goto	u1970
  3154   001FA4                     u1971:
  3155   001FA4  EFF6  F00F         	goto	l3124
  3156   001FA8                     u1970:
  3157   001FA8                     
  3158                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  3159   001FA8  EE20 F005          	lfsr	2,5
  3160   001FAC  5016               	movf	setMotorPWM@m^0,w,c
  3161   001FAE  26D9               	addwf	fsr2l,f,c
  3162   001FB0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3163   001FB2  22DA               	addwfc	fsr2h,f,c
  3164   001FB4  CFDE F018          	movff	postinc2,??_setMotorPWM
  3165   001FB8  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3166   001FBC  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3167   001FC0  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3168   001FC4  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3169                           
  3170                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  3171   001FC8  EE20 F007          	lfsr	2,7
  3172   001FCC  5016               	movf	setMotorPWM@m^0,w,c
  3173   001FCE  26D9               	addwf	fsr2l,f,c
  3174   001FD0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3175   001FD2  22DA               	addwfc	fsr2h,f,c
  3176   001FD4  CFDE F018          	movff	postinc2,??_setMotorPWM
  3177   001FD8  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3178   001FDC  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3179   001FE0  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3180   001FE4  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3181                           
  3182                           ;dc_motor.c: 72:     } else {
  3183   001FE8  EF16  F010         	goto	l569
  3184   001FEC                     l3124:
  3185                           
  3186                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  3187   001FEC  EE20 F005          	lfsr	2,5
  3188   001FF0  5016               	movf	setMotorPWM@m^0,w,c
  3189   001FF2  26D9               	addwf	fsr2l,f,c
  3190   001FF4  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3191   001FF6  22DA               	addwfc	fsr2h,f,c
  3192   001FF8  CFDE F018          	movff	postinc2,??_setMotorPWM
  3193   001FFC  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3194   002000  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3195   002004  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3196   002008  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3197                           
  3198                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  3199   00200C  EE20 F007          	lfsr	2,7
  3200   002010  5016               	movf	setMotorPWM@m^0,w,c
  3201   002012  26D9               	addwf	fsr2l,f,c
  3202   002014  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3203   002016  22DA               	addwfc	fsr2h,f,c
  3204   002018  CFDE F018          	movff	postinc2,??_setMotorPWM
  3205   00201C  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3206   002020  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3207   002024  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3208   002028  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3209   00202C                     l569:
  3210   00202C  0012               	return		;funcret
  3211   00202E                     __end_of_setMotorPWM:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function ___wmul *****************
  3215 ;; Defined at:
  3216 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  multiplier      2    8[COMRAM] unsigned int 
  3219 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  product         2   12[COMRAM] unsigned int 
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  2    8[COMRAM] unsigned int 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, prodl, prodh
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3231 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3232 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3234 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3235 ;;Total ram usage:        6 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 6
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_setMotorPWM
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text11
  3246   002B02                     __ptext11:
  3247                           	callstack 0
  3248   002B02                     ___wmul:
  3249                           	callstack 22
  3250   002B02  5009               	movf	___wmul@multiplier^0,w,c
  3251   002B04  020B               	mulwf	___wmul@multiplicand^0,c
  3252   002B06  CFF3 F00D          	movff	prodl,___wmul@product
  3253   002B0A  CFF4 F00E          	movff	prodh,___wmul@product+1
  3254   002B0E  5009               	movf	___wmul@multiplier^0,w,c
  3255   002B10  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  3256   002B12  50F3               	movf	243,w,c
  3257   002B14  260E               	addwf	(___wmul@product+1)^0,f,c
  3258   002B16  500A               	movf	(___wmul@multiplier+1)^0,w,c
  3259   002B18  020B               	mulwf	___wmul@multiplicand^0,c
  3260   002B1A  50F3               	movf	243,w,c
  3261   002B1C  260E               	addwf	(___wmul@product+1)^0,f,c
  3262   002B1E  C00D  F009         	movff	___wmul@product,?___wmul
  3263   002B22  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  3264   002B26  0012               	return		;funcret
  3265   002B28                     __end_of___wmul:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function ___lwdiv *****************
  3269 ;; Defined at:
  3270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  dividend        2   14[COMRAM] unsigned int 
  3273 ;;  divisor         2   16[COMRAM] unsigned int 
  3274 ;; Auto vars:     Size  Location     Type
  3275 ;;  quotient        2   19[COMRAM] unsigned int 
  3276 ;;  counter         1   18[COMRAM] unsigned char 
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2   14[COMRAM] unsigned int 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2, status,0
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3290 ;;Total ram usage:        7 bytes
  3291 ;; Hardware stack levels used: 1
  3292 ;; Hardware stack levels required when called: 6
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_setMotorPWM
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300                           	psect	text12
  3301   0025AC                     __ptext12:
  3302                           	callstack 0
  3303   0025AC                     ___lwdiv:
  3304                           	callstack 22
  3305   0025AC  0E00               	movlw	0
  3306   0025AE  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  3307   0025B0  0E00               	movlw	0
  3308   0025B2  6E14               	movwf	___lwdiv@quotient^0,c
  3309   0025B4  5011               	movf	___lwdiv@divisor^0,w,c
  3310   0025B6  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3311   0025B8  B4D8               	btfsc	status,2,c
  3312   0025BA  EFE1  F012         	goto	u1931
  3313   0025BE  EFE3  F012         	goto	u1930
  3314   0025C2                     u1931:
  3315   0025C2  EF0B  F013         	goto	l1105
  3316   0025C6                     u1930:
  3317   0025C6  0E01               	movlw	1
  3318   0025C8  6E13               	movwf	___lwdiv@counter^0,c
  3319   0025CA  EFEB  F012         	goto	l3096
  3320   0025CE                     l3094:
  3321   0025CE  90D8               	bcf	status,0,c
  3322   0025D0  3611               	rlcf	___lwdiv@divisor^0,f,c
  3323   0025D2  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3324   0025D4  2A13               	incf	___lwdiv@counter^0,f,c
  3325   0025D6                     l3096:
  3326   0025D6  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  3327   0025D8  EFF0  F012         	goto	u1941
  3328   0025DC  EFF2  F012         	goto	u1940
  3329   0025E0                     u1941:
  3330   0025E0  EFE7  F012         	goto	l3094
  3331   0025E4                     u1940:
  3332   0025E4                     l3098:
  3333   0025E4  90D8               	bcf	status,0,c
  3334   0025E6  3614               	rlcf	___lwdiv@quotient^0,f,c
  3335   0025E8  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3336   0025EA  5011               	movf	___lwdiv@divisor^0,w,c
  3337   0025EC  5C0F               	subwf	___lwdiv@dividend^0,w,c
  3338   0025EE  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  3339   0025F0  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3340   0025F2  A0D8               	btfss	status,0,c
  3341   0025F4  EFFE  F012         	goto	u1951
  3342   0025F8  EF00  F013         	goto	u1950
  3343   0025FC                     u1951:
  3344   0025FC  EF05  F013         	goto	l3106
  3345   002600                     u1950:
  3346   002600  5011               	movf	___lwdiv@divisor^0,w,c
  3347   002602  5E0F               	subwf	___lwdiv@dividend^0,f,c
  3348   002604  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  3349   002606  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3350   002608  8014               	bsf	___lwdiv@quotient^0,0,c
  3351   00260A                     l3106:
  3352   00260A  90D8               	bcf	status,0,c
  3353   00260C  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3354   00260E  3211               	rrcf	___lwdiv@divisor^0,f,c
  3355   002610  2E13               	decfsz	___lwdiv@counter^0,f,c
  3356   002612  EFF2  F012         	goto	l3098
  3357   002616                     l1105:
  3358   002616  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3359   00261A  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3360   00261E  0012               	return		;funcret
  3361   002620                     __end_of___lwdiv:
  3362                           	callstack 0
  3363                           
  3364 ;; *************** function ___flge *****************
  3365 ;; Defined at:
  3366 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  ff1             4    8[COMRAM] unsigned int 
  3369 ;;  ff2             4   12[COMRAM] unsigned int 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;		None               void
  3374 ;; Registers used:
  3375 ;;		wreg, status,2, status,0
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3381 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3384 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3385 ;;Total ram usage:       12 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 6
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_motor_response
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           	psect	text13
  3396   002180                     __ptext13:
  3397                           	callstack 0
  3398   002180                     ___flge:
  3399                           	callstack 23
  3400   002180  0E00               	movlw	0
  3401   002182  1409               	andwf	___flge@ff1^0,w,c
  3402   002184  6E11               	movwf	??___flge^0,c
  3403   002186  0E00               	movlw	0
  3404   002188  140A               	andwf	(___flge@ff1+1)^0,w,c
  3405   00218A  6E12               	movwf	(??___flge+1)^0,c
  3406   00218C  0E80               	movlw	128
  3407   00218E  140B               	andwf	(___flge@ff1+2)^0,w,c
  3408   002190  6E13               	movwf	(??___flge+2)^0,c
  3409   002192  0E7F               	movlw	127
  3410   002194  140C               	andwf	(___flge@ff1+3)^0,w,c
  3411   002196  6E14               	movwf	(??___flge+3)^0,c
  3412   002198  5011               	movf	??___flge^0,w,c
  3413   00219A  1012               	iorwf	(??___flge+1)^0,w,c
  3414   00219C  1013               	iorwf	(??___flge+2)^0,w,c
  3415   00219E  1014               	iorwf	(??___flge+3)^0,w,c
  3416   0021A0  A4D8               	btfss	status,2,c
  3417   0021A2  EFD5  F010         	goto	u1391
  3418   0021A6  EFD7  F010         	goto	u1390
  3419   0021AA                     u1391:
  3420   0021AA  EFDF  F010         	goto	l2590
  3421   0021AE                     u1390:
  3422   0021AE  0E00               	movlw	0
  3423   0021B0  6E09               	movwf	___flge@ff1^0,c
  3424   0021B2  0E00               	movlw	0
  3425   0021B4  6E0A               	movwf	(___flge@ff1+1)^0,c
  3426   0021B6  0E00               	movlw	0
  3427   0021B8  6E0B               	movwf	(___flge@ff1+2)^0,c
  3428   0021BA  0E00               	movlw	0
  3429   0021BC  6E0C               	movwf	(___flge@ff1+3)^0,c
  3430   0021BE                     l2590:
  3431   0021BE  0E00               	movlw	0
  3432   0021C0  140D               	andwf	___flge@ff2^0,w,c
  3433   0021C2  6E11               	movwf	??___flge^0,c
  3434   0021C4  0E00               	movlw	0
  3435   0021C6  140E               	andwf	(___flge@ff2+1)^0,w,c
  3436   0021C8  6E12               	movwf	(??___flge+1)^0,c
  3437   0021CA  0E80               	movlw	128
  3438   0021CC  140F               	andwf	(___flge@ff2+2)^0,w,c
  3439   0021CE  6E13               	movwf	(??___flge+2)^0,c
  3440   0021D0  0E7F               	movlw	127
  3441   0021D2  1410               	andwf	(___flge@ff2+3)^0,w,c
  3442   0021D4  6E14               	movwf	(??___flge+3)^0,c
  3443   0021D6  5011               	movf	??___flge^0,w,c
  3444   0021D8  1012               	iorwf	(??___flge+1)^0,w,c
  3445   0021DA  1013               	iorwf	(??___flge+2)^0,w,c
  3446   0021DC  1014               	iorwf	(??___flge+3)^0,w,c
  3447   0021DE  A4D8               	btfss	status,2,c
  3448   0021E0  EFF4  F010         	goto	u1401
  3449   0021E4  EFF6  F010         	goto	u1400
  3450   0021E8                     u1401:
  3451   0021E8  EFFE  F010         	goto	l2594
  3452   0021EC                     u1400:
  3453   0021EC  0E00               	movlw	0
  3454   0021EE  6E0D               	movwf	___flge@ff2^0,c
  3455   0021F0  0E00               	movlw	0
  3456   0021F2  6E0E               	movwf	(___flge@ff2+1)^0,c
  3457   0021F4  0E00               	movlw	0
  3458   0021F6  6E0F               	movwf	(___flge@ff2+2)^0,c
  3459   0021F8  0E00               	movlw	0
  3460   0021FA  6E10               	movwf	(___flge@ff2+3)^0,c
  3461   0021FC                     l2594:
  3462   0021FC  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  3463   0021FE  EF03  F011         	goto	u1411
  3464   002202  EF05  F011         	goto	u1410
  3465   002206                     u1411:
  3466   002206  EF0E  F011         	goto	l2598
  3467   00220A                     u1410:
  3468   00220A  6C09               	negf	___flge@ff1^0,c
  3469   00220C  1E0A               	comf	(___flge@ff1+1)^0,f,c
  3470   00220E  B0D8               	btfsc	status,0,c
  3471   002210  2A0A               	incf	(___flge@ff1+1)^0,f,c
  3472   002212  1E0B               	comf	(___flge@ff1+2)^0,f,c
  3473   002214  B0D8               	btfsc	status,0,c
  3474   002216  2A0B               	incf	(___flge@ff1+2)^0,f,c
  3475   002218  0E80               	movlw	128
  3476   00221A  560C               	subfwb	(___flge@ff1+3)^0,f,c
  3477   00221C                     l2598:
  3478   00221C  AE10               	btfss	(___flge@ff2+3)^0,7,c
  3479   00221E  EF13  F011         	goto	u1421
  3480   002222  EF15  F011         	goto	u1420
  3481   002226                     u1421:
  3482   002226  EF1E  F011         	goto	l879
  3483   00222A                     u1420:
  3484   00222A  6C0D               	negf	___flge@ff2^0,c
  3485   00222C  1E0E               	comf	(___flge@ff2+1)^0,f,c
  3486   00222E  B0D8               	btfsc	status,0,c
  3487   002230  2A0E               	incf	(___flge@ff2+1)^0,f,c
  3488   002232  1E0F               	comf	(___flge@ff2+2)^0,f,c
  3489   002234  B0D8               	btfsc	status,0,c
  3490   002236  2A0F               	incf	(___flge@ff2+2)^0,f,c
  3491   002238  0E80               	movlw	128
  3492   00223A  5610               	subfwb	(___flge@ff2+3)^0,f,c
  3493   00223C                     l879:
  3494   00223C  0E00               	movlw	0
  3495   00223E  1A09               	xorwf	___flge@ff1^0,f,c
  3496   002240  0E00               	movlw	0
  3497   002242  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  3498   002244  0E00               	movlw	0
  3499   002246  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  3500   002248  0E80               	movlw	128
  3501   00224A  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  3502   00224C  0E00               	movlw	0
  3503   00224E  1A0D               	xorwf	___flge@ff2^0,f,c
  3504   002250  0E00               	movlw	0
  3505   002252  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  3506   002254  0E00               	movlw	0
  3507   002256  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  3508   002258  0E80               	movlw	128
  3509   00225A  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  3510   00225C  500D               	movf	___flge@ff2^0,w,c
  3511   00225E  5C09               	subwf	___flge@ff1^0,w,c
  3512   002260  500E               	movf	(___flge@ff2+1)^0,w,c
  3513   002262  580A               	subwfb	(___flge@ff1+1)^0,w,c
  3514   002264  500F               	movf	(___flge@ff2+2)^0,w,c
  3515   002266  580B               	subwfb	(___flge@ff1+2)^0,w,c
  3516   002268  5010               	movf	(___flge@ff2+3)^0,w,c
  3517   00226A  580C               	subwfb	(___flge@ff1+3)^0,w,c
  3518   00226C  B0D8               	btfsc	status,0,c
  3519   00226E  EF3B  F011         	goto	u1431
  3520   002272  EF3D  F011         	goto	u1430
  3521   002276                     u1431:
  3522   002276  EF40  F011         	goto	l2604
  3523   00227A                     u1430:
  3524   00227A  90D8               	bcf	status,0,c
  3525   00227C  EF41  F011         	goto	l884
  3526   002280                     l2604:
  3527   002280  80D8               	bsf	status,0,c
  3528   002282                     l884:
  3529   002282  0012               	return		;funcret
  3530   002284                     __end_of___flge:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _motorRinit *****************
  3534 ;; Defined at:
  3535 ;;		line 88 in file "dc_motor.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  3538 ;;		 -> main@mR(9), 
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;		None
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 6
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_main
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text14
  3565   002704                     __ptext14:
  3566                           	callstack 0
  3567   002704                     _motorRinit:
  3568                           	callstack 24
  3569   002704                     
  3570                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  3571   002704  C009  FFD9         	movff	motorRinit@mR,fsr2l
  3572   002708  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  3573   00270C  0E32               	movlw	50
  3574   00270E  6EDF               	movwf	indf2,c
  3575   002710                     
  3576                           ;dc_motor.c: 91:     mR->direction = 1;
  3577   002710  EE20 F001          	lfsr	2,1
  3578   002714  5009               	movf	motorRinit@mR^0,w,c
  3579   002716  26D9               	addwf	fsr2l,f,c
  3580   002718  500A               	movf	(motorRinit@mR+1)^0,w,c
  3581   00271A  22DA               	addwfc	fsr2h,f,c
  3582   00271C  0E01               	movlw	1
  3583   00271E  6EDF               	movwf	indf2,c
  3584   002720                     
  3585                           ;dc_motor.c: 92:     mR->brakemode = 1;
  3586   002720  EE20 F002          	lfsr	2,2
  3587   002724  5009               	movf	motorRinit@mR^0,w,c
  3588   002726  26D9               	addwf	fsr2l,f,c
  3589   002728  500A               	movf	(motorRinit@mR+1)^0,w,c
  3590   00272A  22DA               	addwfc	fsr2h,f,c
  3591   00272C  0E01               	movlw	1
  3592   00272E  6EDF               	movwf	indf2,c
  3593   002730                     
  3594                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  3595   002730  EE20 F005          	lfsr	2,5
  3596   002734  5009               	movf	motorRinit@mR^0,w,c
  3597   002736  26D9               	addwf	fsr2l,f,c
  3598   002738  500A               	movf	(motorRinit@mR+1)^0,w,c
  3599   00273A  22DA               	addwfc	fsr2h,f,c
  3600   00273C  0E25               	movlw	37
  3601   00273E  6EDE               	movwf	postinc2,c
  3602   002740  0E0F               	movlw	15
  3603   002742  6EDD               	movwf	postdec2,c
  3604   002744                     
  3605                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  3606   002744  EE20 F007          	lfsr	2,7
  3607   002748  5009               	movf	motorRinit@mR^0,w,c
  3608   00274A  26D9               	addwf	fsr2l,f,c
  3609   00274C  500A               	movf	(motorRinit@mR+1)^0,w,c
  3610   00274E  22DA               	addwfc	fsr2h,f,c
  3611   002750  0E21               	movlw	33
  3612   002752  6EDE               	movwf	postinc2,c
  3613   002754  0E0F               	movlw	15
  3614   002756  6EDD               	movwf	postdec2,c
  3615   002758                     
  3616                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  3617   002758  EE20 F003          	lfsr	2,3
  3618   00275C  5009               	movf	motorRinit@mR^0,w,c
  3619   00275E  26D9               	addwf	fsr2l,f,c
  3620   002760  500A               	movf	(motorRinit@mR+1)^0,w,c
  3621   002762  22DA               	addwfc	fsr2h,f,c
  3622   002764  0EC8               	movlw	200
  3623   002766  6EDE               	movwf	postinc2,c
  3624   002768  0E00               	movlw	0
  3625   00276A  6EDD               	movwf	postdec2,c
  3626   00276C  0012               	return		;funcret
  3627   00276E                     __end_of_motorRinit:
  3628                           	callstack 0
  3629                           
  3630 ;; *************** function _motorLinit *****************
  3631 ;; Defined at:
  3632 ;;		line 78 in file "dc_motor.c"
  3633 ;; Parameters:    Size  Location     Type
  3634 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  3635 ;;		 -> main@mL(9), 
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3647 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;Total ram usage:        2 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 6
  3654 ;; This function calls:
  3655 ;;		Nothing
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;; This function uses a non-reentrant model
  3659 ;;
  3660                           
  3661                           	psect	text15
  3662   00276E                     __ptext15:
  3663                           	callstack 0
  3664   00276E                     _motorLinit:
  3665                           	callstack 24
  3666   00276E                     
  3667                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  3668   00276E  C009  FFD9         	movff	motorLinit@mL,fsr2l
  3669   002772  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  3670   002776  0E32               	movlw	50
  3671   002778  6EDF               	movwf	indf2,c
  3672   00277A                     
  3673                           ;dc_motor.c: 81:     mL->direction = 1;
  3674   00277A  EE20 F001          	lfsr	2,1
  3675   00277E  5009               	movf	motorLinit@mL^0,w,c
  3676   002780  26D9               	addwf	fsr2l,f,c
  3677   002782  500A               	movf	(motorLinit@mL+1)^0,w,c
  3678   002784  22DA               	addwfc	fsr2h,f,c
  3679   002786  0E01               	movlw	1
  3680   002788  6EDF               	movwf	indf2,c
  3681   00278A                     
  3682                           ;dc_motor.c: 82:     mL->brakemode = 1;
  3683   00278A  EE20 F002          	lfsr	2,2
  3684   00278E  5009               	movf	motorLinit@mL^0,w,c
  3685   002790  26D9               	addwf	fsr2l,f,c
  3686   002792  500A               	movf	(motorLinit@mL+1)^0,w,c
  3687   002794  22DA               	addwfc	fsr2h,f,c
  3688   002796  0E01               	movlw	1
  3689   002798  6EDF               	movwf	indf2,c
  3690   00279A                     
  3691                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  3692   00279A  EE20 F005          	lfsr	2,5
  3693   00279E  5009               	movf	motorLinit@mL^0,w,c
  3694   0027A0  26D9               	addwf	fsr2l,f,c
  3695   0027A2  500A               	movf	(motorLinit@mL+1)^0,w,c
  3696   0027A4  22DA               	addwfc	fsr2h,f,c
  3697   0027A6  0EAA               	movlw	170
  3698   0027A8  6EDE               	movwf	postinc2,c
  3699   0027AA  0E0F               	movlw	15
  3700   0027AC  6EDD               	movwf	postdec2,c
  3701   0027AE                     
  3702                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  3703   0027AE  EE20 F007          	lfsr	2,7
  3704   0027B2  5009               	movf	motorLinit@mL^0,w,c
  3705   0027B4  26D9               	addwf	fsr2l,f,c
  3706   0027B6  500A               	movf	(motorLinit@mL+1)^0,w,c
  3707   0027B8  22DA               	addwfc	fsr2h,f,c
  3708   0027BA  0EA6               	movlw	166
  3709   0027BC  6EDE               	movwf	postinc2,c
  3710   0027BE  0E0F               	movlw	15
  3711   0027C0  6EDD               	movwf	postdec2,c
  3712   0027C2                     
  3713                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  3714   0027C2  EE20 F003          	lfsr	2,3
  3715   0027C6  5009               	movf	motorLinit@mL^0,w,c
  3716   0027C8  26D9               	addwf	fsr2l,f,c
  3717   0027CA  500A               	movf	(motorLinit@mL+1)^0,w,c
  3718   0027CC  22DA               	addwfc	fsr2h,f,c
  3719   0027CE  0EC8               	movlw	200
  3720   0027D0  6EDE               	movwf	postinc2,c
  3721   0027D2  0E00               	movlw	0
  3722   0027D4  6EDD               	movwf	postdec2,c
  3723   0027D6  0012               	return		;funcret
  3724   0027D8                     __end_of_motorLinit:
  3725                           	callstack 0
  3726                           
  3727 ;; *************** function _initDCmotorsPWM *****************
  3728 ;; Defined at:
  3729 ;;		line 5 in file "dc_motor.c"
  3730 ;; Parameters:    Size  Location     Type
  3731 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  3732 ;; Auto vars:     Size  Location     Type
  3733 ;;		None
  3734 ;; Return value:  Size  Location     Type
  3735 ;;                  1    wreg      void 
  3736 ;; Registers used:
  3737 ;;		wreg, status,2
  3738 ;; Tracked objects:
  3739 ;;		On entry : 0/0
  3740 ;;		On exit  : 0/0
  3741 ;;		Unchanged: 0/0
  3742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3743 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3746 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3747 ;;Total ram usage:        2 bytes
  3748 ;; Hardware stack levels used: 1
  3749 ;; Hardware stack levels required when called: 6
  3750 ;; This function calls:
  3751 ;;		Nothing
  3752 ;; This function is called by:
  3753 ;;		_main
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text16
  3758   00252C                     __ptext16:
  3759                           	callstack 0
  3760   00252C                     _initDCmotorsPWM:
  3761                           	callstack 24
  3762   00252C                     
  3763                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3764   00252C  0E05               	movlw	5
  3765   00252E  010E               	movlb	14	; () banked
  3766   002530  6F74               	movwf	116,b	;volatile
  3767                           
  3768                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3769   002532  0E06               	movlw	6
  3770   002534  6F76               	movwf	118,b	;volatile
  3771                           
  3772                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3773   002536  0E07               	movlw	7
  3774   002538  6F69               	movwf	105,b	;volatile
  3775                           
  3776                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3777   00253A  0E08               	movlw	8
  3778   00253C  6F88               	movwf	136,b	;volatile
  3779                           
  3780                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  3781   00253E  50BD               	movf	189,w,c	;volatile
  3782   002540  0B8F               	andlw	-113
  3783   002542  0930               	iorlw	48
  3784   002544  6EBD               	movwf	189,c	;volatile
  3785                           
  3786                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  3787   002546  0EE0               	movlw	-32
  3788   002548  16BE               	andwf	190,f,c	;volatile
  3789                           
  3790                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  3791   00254A  50BF               	movf	191,w,c	;volatile
  3792   00254C  0BF0               	andlw	-16
  3793   00254E  0901               	iorlw	1
  3794   002550  6EBF               	movwf	191,c	;volatile
  3795                           
  3796                           ;dc_motor.c: 21:     T2PR=200;
  3797   002552  0EC8               	movlw	200
  3798   002554  6EBC               	movwf	188,c	;volatile
  3799   002556                     
  3800                           ; BSR set to: 14
  3801                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  3802   002556  8EBD               	bsf	189,7,c	;volatile
  3803                           
  3804                           ;dc_motor.c: 26:     CCPR1H=0;
  3805   002558  0E00               	movlw	0
  3806   00255A  6EAA               	movwf	170,c	;volatile
  3807                           
  3808                           ;dc_motor.c: 27:     CCPR2H=0;
  3809   00255C  0E00               	movlw	0
  3810   00255E  6EA6               	movwf	166,c	;volatile
  3811                           
  3812                           ;dc_motor.c: 28:     CCPR3H=0;
  3813   002560  0E00               	movlw	0
  3814   002562  010F               	movlb	15	; () banked
  3815   002564  6F25               	movwf	37,b	;volatile
  3816                           
  3817                           ;dc_motor.c: 29:     CCPR4H=0;
  3818   002566  0E00               	movlw	0
  3819   002568  6F21               	movwf	33,b	;volatile
  3820                           
  3821                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  3822   00256A  0EFC               	movlw	-4
  3823   00256C  16AD               	andwf	173,f,c	;volatile
  3824                           
  3825                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  3826   00256E  0EF3               	movlw	-13
  3827   002570  16AD               	andwf	173,f,c	;volatile
  3828                           
  3829                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  3830   002572  0ECF               	movlw	-49
  3831   002574  16AD               	andwf	173,f,c	;volatile
  3832                           
  3833                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  3834   002576  0E3F               	movlw	-193
  3835   002578  16AD               	andwf	173,f,c	;volatile
  3836   00257A                     
  3837                           ; BSR set to: 15
  3838                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  3839   00257A  88AB               	bsf	171,4,c	;volatile
  3840                           
  3841                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  3842   00257C  50AB               	movf	171,w,c	;volatile
  3843   00257E  0BF0               	andlw	-16
  3844   002580  090C               	iorlw	12
  3845   002582  6EAB               	movwf	171,c	;volatile
  3846   002584                     
  3847                           ; BSR set to: 15
  3848                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  3849   002584  8EAB               	bsf	171,7,c	;volatile
  3850   002586                     
  3851                           ; BSR set to: 15
  3852                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  3853   002586  88A7               	bsf	167,4,c	;volatile
  3854                           
  3855                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  3856   002588  50A7               	movf	167,w,c	;volatile
  3857   00258A  0BF0               	andlw	-16
  3858   00258C  090C               	iorlw	12
  3859   00258E  6EA7               	movwf	167,c	;volatile
  3860   002590                     
  3861                           ; BSR set to: 15
  3862                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  3863   002590  8EA7               	bsf	167,7,c	;volatile
  3864   002592                     
  3865                           ; BSR set to: 15
  3866                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  3867   002592  8926               	bsf	38,4,b	;volatile
  3868                           
  3869                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  3870   002594  5126               	movf	38,w,b	;volatile
  3871   002596  0BF0               	andlw	-16
  3872   002598  090C               	iorlw	12
  3873   00259A  6F26               	movwf	38,b	;volatile
  3874   00259C                     
  3875                           ; BSR set to: 15
  3876                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  3877   00259C  8F26               	bsf	38,7,b	;volatile
  3878   00259E                     
  3879                           ; BSR set to: 15
  3880                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  3881   00259E  8922               	bsf	34,4,b	;volatile
  3882                           
  3883                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  3884   0025A0  5122               	movf	34,w,b	;volatile
  3885   0025A2  0BF0               	andlw	-16
  3886   0025A4  090C               	iorlw	12
  3887   0025A6  6F22               	movwf	34,b	;volatile
  3888   0025A8                     
  3889                           ; BSR set to: 15
  3890                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  3891   0025A8  8F22               	bsf	34,7,b	;volatile
  3892   0025AA                     
  3893                           ; BSR set to: 15
  3894   0025AA  0012               	return		;funcret
  3895   0025AC                     __end_of_initDCmotorsPWM:
  3896                           	callstack 0
  3897                           
  3898 ;; *************** function _color_read_RGBC *****************
  3899 ;; Defined at:
  3900 ;;		line 94 in file "color.c"
  3901 ;; Parameters:    Size  Location     Type
  3902 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  3903 ;;		 -> main@RGBC(32), 
  3904 ;; Auto vars:     Size  Location     Type
  3905 ;;		None
  3906 ;; Return value:  Size  Location     Type
  3907 ;;                  1    wreg      void 
  3908 ;; Registers used:
  3909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3910 ;; Tracked objects:
  3911 ;;		On entry : 0/0
  3912 ;;		On exit  : 0/0
  3913 ;;		Unchanged: 0/0
  3914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3919 ;;Total ram usage:        2 bytes
  3920 ;; Hardware stack levels used: 1
  3921 ;; Hardware stack levels required when called: 9
  3922 ;; This function calls:
  3923 ;;		___xxtofl
  3924 ;;		_color_read_Blue
  3925 ;;		_color_read_Clear
  3926 ;;		_color_read_Green
  3927 ;;		_color_read_Red
  3928 ;; This function is called by:
  3929 ;;		_main
  3930 ;; This function uses a non-reentrant model
  3931 ;;
  3932                           
  3933                           	psect	text17
  3934   002466                     __ptext17:
  3935                           	callstack 0
  3936   002466                     _color_read_RGBC:
  3937                           	callstack 21
  3938   002466                     
  3939                           ;color.c: 95:     temp->R = color_read_Red();
  3940   002466  ECEC  F013         	call	_color_read_Red	;wreg free
  3941   00246A  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  3942   00246E  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  3943   002472  6A16               	clrf	(___xxtofl@val+2)^0,c
  3944   002474  6A17               	clrf	(___xxtofl@val+3)^0,c
  3945   002476  0E00               	movlw	0
  3946   002478  ECC9  F00D         	call	___xxtofl
  3947   00247C  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  3948   002480  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  3949   002484  C014  FFDE         	movff	?___xxtofl,postinc2
  3950   002488  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3951   00248C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3952   002490  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3953                           
  3954                           ;color.c: 96:     temp->B = color_read_Blue();
  3955   002494  EC64  F014         	call	_color_read_Blue	;wreg free
  3956   002498  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  3957   00249C  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  3958   0024A0  6A16               	clrf	(___xxtofl@val+2)^0,c
  3959   0024A2  6A17               	clrf	(___xxtofl@val+3)^0,c
  3960   0024A4  0E00               	movlw	0
  3961   0024A6  ECC9  F00D         	call	___xxtofl
  3962   0024AA  EE20 F008          	lfsr	2,8
  3963   0024AE  5022               	movf	color_read_RGBC@temp^0,w,c
  3964   0024B0  26D9               	addwf	fsr2l,f,c
  3965   0024B2  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3966   0024B4  22DA               	addwfc	fsr2h,f,c
  3967   0024B6  C014  FFDE         	movff	?___xxtofl,postinc2
  3968   0024BA  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3969   0024BE  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3970   0024C2  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3971                           
  3972                           ;color.c: 97:     temp->G = color_read_Green();
  3973   0024C6  EC14  F014         	call	_color_read_Green	;wreg free
  3974   0024CA  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  3975   0024CE  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  3976   0024D2  6A16               	clrf	(___xxtofl@val+2)^0,c
  3977   0024D4  6A17               	clrf	(___xxtofl@val+3)^0,c
  3978   0024D6  0E00               	movlw	0
  3979   0024D8  ECC9  F00D         	call	___xxtofl
  3980   0024DC  EE20 F004          	lfsr	2,4
  3981   0024E0  5022               	movf	color_read_RGBC@temp^0,w,c
  3982   0024E2  26D9               	addwf	fsr2l,f,c
  3983   0024E4  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3984   0024E6  22DA               	addwfc	fsr2h,f,c
  3985   0024E8  C014  FFDE         	movff	?___xxtofl,postinc2
  3986   0024EC  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3987   0024F0  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3988   0024F4  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3989                           
  3990                           ;color.c: 98:     temp->C = color_read_Clear();
  3991   0024F8  EC3C  F014         	call	_color_read_Clear	;wreg free
  3992   0024FC  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  3993   002500  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  3994   002504  6A16               	clrf	(___xxtofl@val+2)^0,c
  3995   002506  6A17               	clrf	(___xxtofl@val+3)^0,c
  3996   002508  0E00               	movlw	0
  3997   00250A  ECC9  F00D         	call	___xxtofl
  3998   00250E  EE20 F00C          	lfsr	2,12
  3999   002512  5022               	movf	color_read_RGBC@temp^0,w,c
  4000   002514  26D9               	addwf	fsr2l,f,c
  4001   002516  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  4002   002518  22DA               	addwfc	fsr2h,f,c
  4003   00251A  C014  FFDE         	movff	?___xxtofl,postinc2
  4004   00251E  C015  FFDE         	movff	?___xxtofl+1,postinc2
  4005   002522  C016  FFDE         	movff	?___xxtofl+2,postinc2
  4006   002526  C017  FFDE         	movff	?___xxtofl+3,postinc2
  4007   00252A  0012               	return		;funcret
  4008   00252C                     __end_of_color_read_RGBC:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function _color_read_Red *****************
  4012 ;; Defined at:
  4013 ;;		line 35 in file "color.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  tmp             2   17[COMRAM] unsigned int 
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  2   12[COMRAM] unsigned int 
  4020 ;; Registers used:
  4021 ;;		wreg, status,2, status,0, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4027 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;Total ram usage:        7 bytes
  4032 ;; Hardware stack levels used: 1
  4033 ;; Hardware stack levels required when called: 8
  4034 ;; This function calls:
  4035 ;;		_I2C_2_Master_Read
  4036 ;;		_I2C_2_Master_RepStart
  4037 ;;		_I2C_2_Master_Start
  4038 ;;		_I2C_2_Master_Stop
  4039 ;;		_I2C_2_Master_Write
  4040 ;; This function is called by:
  4041 ;;		_color_read_RGBC
  4042 ;;		_main
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           	psect	text18
  4047   0027D8                     __ptext18:
  4048                           	callstack 0
  4049   0027D8                     _color_read_Red:
  4050                           	callstack 22
  4051   0027D8                     
  4052                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  4053   0027D8  EC06  F016         	call	_I2C_2_Master_Start	;wreg free
  4054                           
  4055                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  4056   0027DC  0E52               	movlw	82
  4057   0027DE  ECEA  F015         	call	_I2C_2_Master_Write
  4058                           
  4059                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  4060   0027E2  0EB6               	movlw	182
  4061   0027E4  ECEA  F015         	call	_I2C_2_Master_Write
  4062                           
  4063                           ;color.c: 41:  I2C_2_Master_RepStart();
  4064   0027E8  ECFC  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4065                           
  4066                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  4067   0027EC  0E53               	movlw	83
  4068   0027EE  ECEA  F015         	call	_I2C_2_Master_Write
  4069                           
  4070                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  4071   0027F2  0E01               	movlw	1
  4072   0027F4  ECAD  F014         	call	_I2C_2_Master_Read
  4073   0027F8  6E0F               	movwf	??_color_read_Red^0,c
  4074   0027FA  500F               	movf	??_color_read_Red^0,w,c
  4075   0027FC  6E12               	movwf	color_read_Red@tmp^0,c
  4076   0027FE  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  4077                           
  4078                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4079   002800  0E00               	movlw	0
  4080   002802  ECAD  F014         	call	_I2C_2_Master_Read
  4081   002806  6E0F               	movwf	??_color_read_Red^0,c
  4082   002808  500F               	movf	??_color_read_Red^0,w,c
  4083   00280A  6E11               	movwf	(??_color_read_Red+2)^0,c
  4084   00280C  6A10               	clrf	(??_color_read_Red+1)^0,c
  4085   00280E  5012               	movf	color_read_Red@tmp^0,w,c
  4086   002810  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4087   002812  6E12               	movwf	color_read_Red@tmp^0,c
  4088   002814  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4089   002816  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4090   002818  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4091                           
  4092                           ;color.c: 45:  I2C_2_Master_Stop();
  4093   00281A  EC01  F016         	call	_I2C_2_Master_Stop	;wreg free
  4094   00281E                     
  4095                           ;color.c: 46:  return tmp;
  4096   00281E  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4097   002822  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4098   002826  0012               	return		;funcret
  4099   002828                     __end_of_color_read_Red:
  4100                           	callstack 0
  4101                           
  4102 ;; *************** function _color_read_Green *****************
  4103 ;; Defined at:
  4104 ;;		line 49 in file "color.c"
  4105 ;; Parameters:    Size  Location     Type
  4106 ;;		None
  4107 ;; Auto vars:     Size  Location     Type
  4108 ;;  tmp             2   17[COMRAM] unsigned int 
  4109 ;; Return value:  Size  Location     Type
  4110 ;;                  2   12[COMRAM] unsigned int 
  4111 ;; Registers used:
  4112 ;;		wreg, status,2, status,0, cstack
  4113 ;; Tracked objects:
  4114 ;;		On entry : 0/0
  4115 ;;		On exit  : 0/0
  4116 ;;		Unchanged: 0/0
  4117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;Total ram usage:        7 bytes
  4123 ;; Hardware stack levels used: 1
  4124 ;; Hardware stack levels required when called: 8
  4125 ;; This function calls:
  4126 ;;		_I2C_2_Master_Read
  4127 ;;		_I2C_2_Master_RepStart
  4128 ;;		_I2C_2_Master_Start
  4129 ;;		_I2C_2_Master_Stop
  4130 ;;		_I2C_2_Master_Write
  4131 ;; This function is called by:
  4132 ;;		_color_read_RGBC
  4133 ;;		_main
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137                           	psect	text19
  4138   002828                     __ptext19:
  4139                           	callstack 0
  4140   002828                     _color_read_Green:
  4141                           	callstack 21
  4142   002828                     
  4143                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  4144   002828  EC06  F016         	call	_I2C_2_Master_Start	;wreg free
  4145                           
  4146                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  4147   00282C  0E52               	movlw	82
  4148   00282E  ECEA  F015         	call	_I2C_2_Master_Write
  4149                           
  4150                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  4151   002832  0EB8               	movlw	184
  4152   002834  ECEA  F015         	call	_I2C_2_Master_Write
  4153                           
  4154                           ;color.c: 55:  I2C_2_Master_RepStart();
  4155   002838  ECFC  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4156                           
  4157                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4158   00283C  0E53               	movlw	83
  4159   00283E  ECEA  F015         	call	_I2C_2_Master_Write
  4160                           
  4161                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4162   002842  0E01               	movlw	1
  4163   002844  ECAD  F014         	call	_I2C_2_Master_Read
  4164   002848  6E0F               	movwf	??_color_read_Green^0,c
  4165   00284A  500F               	movf	??_color_read_Green^0,w,c
  4166   00284C  6E12               	movwf	color_read_Green@tmp^0,c
  4167   00284E  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4168                           
  4169                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4170   002850  0E00               	movlw	0
  4171   002852  ECAD  F014         	call	_I2C_2_Master_Read
  4172   002856  6E0F               	movwf	??_color_read_Green^0,c
  4173   002858  500F               	movf	??_color_read_Green^0,w,c
  4174   00285A  6E11               	movwf	(??_color_read_Green+2)^0,c
  4175   00285C  6A10               	clrf	(??_color_read_Green+1)^0,c
  4176   00285E  5012               	movf	color_read_Green@tmp^0,w,c
  4177   002860  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4178   002862  6E12               	movwf	color_read_Green@tmp^0,c
  4179   002864  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4180   002866  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4181   002868  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4182                           
  4183                           ;color.c: 59:  I2C_2_Master_Stop();
  4184   00286A  EC01  F016         	call	_I2C_2_Master_Stop	;wreg free
  4185   00286E                     
  4186                           ;color.c: 60:  return tmp;
  4187   00286E  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4188   002872  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4189   002876  0012               	return		;funcret
  4190   002878                     __end_of_color_read_Green:
  4191                           	callstack 0
  4192                           
  4193 ;; *************** function _color_read_Clear *****************
  4194 ;; Defined at:
  4195 ;;		line 77 in file "color.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;  tmp             2   17[COMRAM] unsigned int 
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  2   12[COMRAM] unsigned int 
  4202 ;; Registers used:
  4203 ;;		wreg, status,2, status,0, cstack
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4209 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4210 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4211 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4212 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4213 ;;Total ram usage:        7 bytes
  4214 ;; Hardware stack levels used: 1
  4215 ;; Hardware stack levels required when called: 8
  4216 ;; This function calls:
  4217 ;;		_I2C_2_Master_Read
  4218 ;;		_I2C_2_Master_RepStart
  4219 ;;		_I2C_2_Master_Start
  4220 ;;		_I2C_2_Master_Stop
  4221 ;;		_I2C_2_Master_Write
  4222 ;; This function is called by:
  4223 ;;		_color_read_RGBC
  4224 ;;		_main
  4225 ;; This function uses a non-reentrant model
  4226 ;;
  4227                           
  4228                           	psect	text20
  4229   002878                     __ptext20:
  4230                           	callstack 0
  4231   002878                     _color_read_Clear:
  4232                           	callstack 21
  4233   002878                     
  4234                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  4235   002878  EC06  F016         	call	_I2C_2_Master_Start	;wreg free
  4236                           
  4237                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  4238   00287C  0E52               	movlw	82
  4239   00287E  ECEA  F015         	call	_I2C_2_Master_Write
  4240                           
  4241                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  4242   002882  0EB4               	movlw	180
  4243   002884  ECEA  F015         	call	_I2C_2_Master_Write
  4244                           
  4245                           ;color.c: 83:  I2C_2_Master_RepStart();
  4246   002888  ECFC  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4247                           
  4248                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  4249   00288C  0E53               	movlw	83
  4250   00288E  ECEA  F015         	call	_I2C_2_Master_Write
  4251                           
  4252                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  4253   002892  0E01               	movlw	1
  4254   002894  ECAD  F014         	call	_I2C_2_Master_Read
  4255   002898  6E0F               	movwf	??_color_read_Clear^0,c
  4256   00289A  500F               	movf	??_color_read_Clear^0,w,c
  4257   00289C  6E12               	movwf	color_read_Clear@tmp^0,c
  4258   00289E  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4259                           
  4260                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4261   0028A0  0E00               	movlw	0
  4262   0028A2  ECAD  F014         	call	_I2C_2_Master_Read
  4263   0028A6  6E0F               	movwf	??_color_read_Clear^0,c
  4264   0028A8  500F               	movf	??_color_read_Clear^0,w,c
  4265   0028AA  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4266   0028AC  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4267   0028AE  5012               	movf	color_read_Clear@tmp^0,w,c
  4268   0028B0  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4269   0028B2  6E12               	movwf	color_read_Clear@tmp^0,c
  4270   0028B4  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4271   0028B6  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4272   0028B8  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4273                           
  4274                           ;color.c: 87:  I2C_2_Master_Stop();
  4275   0028BA  EC01  F016         	call	_I2C_2_Master_Stop	;wreg free
  4276   0028BE                     
  4277                           ;color.c: 88:  return tmp;
  4278   0028BE  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4279   0028C2  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4280   0028C6  0012               	return		;funcret
  4281   0028C8                     __end_of_color_read_Clear:
  4282                           	callstack 0
  4283                           
  4284 ;; *************** function _color_read_Blue *****************
  4285 ;; Defined at:
  4286 ;;		line 63 in file "color.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  tmp             2   17[COMRAM] unsigned int 
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  2   12[COMRAM] unsigned int 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4301 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4302 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4303 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4304 ;;Total ram usage:        7 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 8
  4307 ;; This function calls:
  4308 ;;		_I2C_2_Master_Read
  4309 ;;		_I2C_2_Master_RepStart
  4310 ;;		_I2C_2_Master_Start
  4311 ;;		_I2C_2_Master_Stop
  4312 ;;		_I2C_2_Master_Write
  4313 ;; This function is called by:
  4314 ;;		_color_read_RGBC
  4315 ;;		_main
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text21
  4320   0028C8                     __ptext21:
  4321                           	callstack 0
  4322   0028C8                     _color_read_Blue:
  4323                           	callstack 21
  4324   0028C8                     
  4325                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4326   0028C8  EC06  F016         	call	_I2C_2_Master_Start	;wreg free
  4327                           
  4328                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4329   0028CC  0E52               	movlw	82
  4330   0028CE  ECEA  F015         	call	_I2C_2_Master_Write
  4331                           
  4332                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  4333   0028D2  0EBA               	movlw	186
  4334   0028D4  ECEA  F015         	call	_I2C_2_Master_Write
  4335                           
  4336                           ;color.c: 69:  I2C_2_Master_RepStart();
  4337   0028D8  ECFC  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4338                           
  4339                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4340   0028DC  0E53               	movlw	83
  4341   0028DE  ECEA  F015         	call	_I2C_2_Master_Write
  4342                           
  4343                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4344   0028E2  0E01               	movlw	1
  4345   0028E4  ECAD  F014         	call	_I2C_2_Master_Read
  4346   0028E8  6E0F               	movwf	??_color_read_Blue^0,c
  4347   0028EA  500F               	movf	??_color_read_Blue^0,w,c
  4348   0028EC  6E12               	movwf	color_read_Blue@tmp^0,c
  4349   0028EE  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4350                           
  4351                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4352   0028F0  0E00               	movlw	0
  4353   0028F2  ECAD  F014         	call	_I2C_2_Master_Read
  4354   0028F6  6E0F               	movwf	??_color_read_Blue^0,c
  4355   0028F8  500F               	movf	??_color_read_Blue^0,w,c
  4356   0028FA  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4357   0028FC  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4358   0028FE  5012               	movf	color_read_Blue@tmp^0,w,c
  4359   002900  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4360   002902  6E12               	movwf	color_read_Blue@tmp^0,c
  4361   002904  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4362   002906  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4363   002908  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4364                           
  4365                           ;color.c: 73:  I2C_2_Master_Stop();
  4366   00290A  EC01  F016         	call	_I2C_2_Master_Stop	;wreg free
  4367   00290E                     
  4368                           ;color.c: 74:  return tmp;
  4369   00290E  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4370   002912  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4371   002916  0012               	return		;funcret
  4372   002918                     __end_of_color_read_Blue:
  4373                           	callstack 0
  4374                           
  4375 ;; *************** function _I2C_2_Master_RepStart *****************
  4376 ;; Defined at:
  4377 ;;		line 33 in file "i2c.c"
  4378 ;; Parameters:    Size  Location     Type
  4379 ;;		None
  4380 ;; Auto vars:     Size  Location     Type
  4381 ;;		None
  4382 ;; Return value:  Size  Location     Type
  4383 ;;                  1    wreg      void 
  4384 ;; Registers used:
  4385 ;;		wreg, status,2, status,0, cstack
  4386 ;; Tracked objects:
  4387 ;;		On entry : 0/0
  4388 ;;		On exit  : 0/0
  4389 ;;		Unchanged: 0/0
  4390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4395 ;;Total ram usage:        0 bytes
  4396 ;; Hardware stack levels used: 1
  4397 ;; Hardware stack levels required when called: 7
  4398 ;; This function calls:
  4399 ;;		_I2C_2_Master_Idle
  4400 ;; This function is called by:
  4401 ;;		_color_read_Red
  4402 ;;		_color_read_Green
  4403 ;;		_color_read_Blue
  4404 ;;		_color_read_Clear
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text22
  4409   002BF8                     __ptext22:
  4410                           	callstack 0
  4411   002BF8                     _I2C_2_Master_RepStart:
  4412                           	callstack 22
  4413   002BF8                     
  4414                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4415   002BF8  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  4416   002BFC                     
  4417                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4418   002BFC  010E               	movlb	14	; () banked
  4419   002BFE  83DA               	bsf	218,1,b	;volatile
  4420   002C00                     
  4421                           ; BSR set to: 14
  4422   002C00  0012               	return		;funcret
  4423   002C02                     __end_of_I2C_2_Master_RepStart:
  4424                           	callstack 0
  4425                           
  4426 ;; *************** function _I2C_2_Master_Read *****************
  4427 ;; Defined at:
  4428 ;;		line 51 in file "i2c.c"
  4429 ;; Parameters:    Size  Location     Type
  4430 ;;  ack             1    wreg     unsigned char 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  ack             1   10[COMRAM] unsigned char 
  4433 ;;  tmp             1   11[COMRAM] unsigned char 
  4434 ;; Return value:  Size  Location     Type
  4435 ;;                  1    wreg      unsigned char 
  4436 ;; Registers used:
  4437 ;;		wreg, status,2, status,0, cstack
  4438 ;; Tracked objects:
  4439 ;;		On entry : 0/0
  4440 ;;		On exit  : 0/0
  4441 ;;		Unchanged: 0/0
  4442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4446 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4447 ;;Total ram usage:        3 bytes
  4448 ;; Hardware stack levels used: 1
  4449 ;; Hardware stack levels required when called: 7
  4450 ;; This function calls:
  4451 ;;		_I2C_2_Master_Idle
  4452 ;; This function is called by:
  4453 ;;		_color_read_Red
  4454 ;;		_color_read_Green
  4455 ;;		_color_read_Blue
  4456 ;;		_color_read_Clear
  4457 ;; This function uses a non-reentrant model
  4458 ;;
  4459                           
  4460                           	psect	text23
  4461   00295A                     __ptext23:
  4462                           	callstack 0
  4463   00295A                     _I2C_2_Master_Read:
  4464                           	callstack 22
  4465                           
  4466                           ; BSR set to: 14
  4467                           ;incstack = 0
  4468                           ;I2C_2_Master_Read@ack stored from wreg
  4469   00295A  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4470   00295C                     
  4471                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4472   00295C  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  4473   002960                     
  4474                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4475   002960  010E               	movlb	14	; () banked
  4476   002962  87DA               	bsf	218,3,b	;volatile
  4477                           
  4478                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4479   002964  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  4480   002968                     
  4481                           ;i2c.c: 57:   tmp = SSP2BUF;
  4482   002968  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4483                           
  4484                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4485   00296C  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  4486   002970                     
  4487                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4488   002970  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4489   002972  B4D8               	btfsc	status,2,c
  4490   002974  EFBE  F014         	goto	u1081
  4491   002978  EFC2  F014         	goto	u1080
  4492   00297C                     u1081:
  4493   00297C  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4494   00297E  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4495   002980  EFC3  F014         	goto	u1098
  4496   002984                     u1080:
  4497   002984  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4498   002986                     u1098:
  4499   002986  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4500   002988  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4501   00298A  010E               	movlb	14	; () banked
  4502   00298C  51DA               	movf	218,w,b	;volatile
  4503   00298E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4504   002990  0BDF               	andlw	-33
  4505   002992  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4506   002994  6FDA               	movwf	218,b	;volatile
  4507   002996                     
  4508                           ; BSR set to: 14
  4509                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4510   002996  89DA               	bsf	218,4,b	;volatile
  4511   002998                     
  4512                           ; BSR set to: 14
  4513                           ;i2c.c: 61:   return tmp;
  4514   002998  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4515   00299A                     
  4516                           ; BSR set to: 14
  4517   00299A  0012               	return		;funcret
  4518   00299C                     __end_of_I2C_2_Master_Read:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function ___xxtofl *****************
  4522 ;; Defined at:
  4523 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  sign            1    wreg     unsigned char 
  4526 ;;  val             4   19[COMRAM] long 
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;  sign            1   27[COMRAM] unsigned char 
  4529 ;;  arg             4   29[COMRAM] unsigned long 
  4530 ;;  exp             1   28[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  4   19[COMRAM] unsigned char 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4541 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4542 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4543 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4544 ;;Total ram usage:       14 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; Hardware stack levels required when called: 6
  4547 ;; This function calls:
  4548 ;;		Nothing
  4549 ;; This function is called by:
  4550 ;;		_color_read_RGBC
  4551 ;;		_color_normalise
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text24
  4556   001B92                     __ptext24:
  4557                           	callstack 0
  4558   001B92                     ___xxtofl:
  4559                           	callstack 23
  4560                           
  4561                           ; BSR set to: 14
  4562                           ;incstack = 0
  4563                           ;___xxtofl@sign stored from wreg
  4564   001B92  6E1C               	movwf	___xxtofl@sign^0,c
  4565   001B94  501C               	movf	___xxtofl@sign^0,w,c
  4566   001B96  B4D8               	btfsc	status,2,c
  4567   001B98  EFD0  F00D         	goto	u1441
  4568   001B9C  EFD2  F00D         	goto	u1440
  4569   001BA0                     u1441:
  4570   001BA0  EFF4  F00D         	goto	l1269
  4571   001BA4                     u1440:
  4572   001BA4  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4573   001BA6  EFD9  F00D         	goto	u1450
  4574   001BAA  EFD7  F00D         	goto	u1451
  4575   001BAE                     u1451:
  4576   001BAE  EFF4  F00D         	goto	l1269
  4577   001BB2                     u1450:
  4578   001BB2  C014  F018         	movff	___xxtofl@val,??___xxtofl
  4579   001BB6  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  4580   001BBA  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  4581   001BBE  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  4582   001BC2  1E18               	comf	??___xxtofl^0,f,c
  4583   001BC4  1E19               	comf	(??___xxtofl+1)^0,f,c
  4584   001BC6  1E1A               	comf	(??___xxtofl+2)^0,f,c
  4585   001BC8  1E1B               	comf	(??___xxtofl+3)^0,f,c
  4586   001BCA  2A18               	incf	??___xxtofl^0,f,c
  4587   001BCC  0E00               	movlw	0
  4588   001BCE  2219               	addwfc	(??___xxtofl+1)^0,f,c
  4589   001BD0  221A               	addwfc	(??___xxtofl+2)^0,f,c
  4590   001BD2  221B               	addwfc	(??___xxtofl+3)^0,f,c
  4591   001BD4  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  4592   001BD8  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  4593   001BDC  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  4594   001BE0  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  4595   001BE4  EFFC  F00D         	goto	l2614
  4596   001BE8                     l1269:
  4597   001BE8  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  4598   001BEC  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4599   001BF0  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4600   001BF4  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4601   001BF8                     l2614:
  4602   001BF8  5014               	movf	___xxtofl@val^0,w,c
  4603   001BFA  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  4604   001BFC  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  4605   001BFE  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  4606   001C00  A4D8               	btfss	status,2,c
  4607   001C02  EF05  F00E         	goto	u1461
  4608   001C06  EF07  F00E         	goto	u1460
  4609   001C0A                     u1461:
  4610   001C0A  EF11  F00E         	goto	l2620
  4611   001C0E                     u1460:
  4612   001C0E  0E00               	movlw	0
  4613   001C10  6E14               	movwf	?___xxtofl^0,c
  4614   001C12  0E00               	movlw	0
  4615   001C14  6E15               	movwf	(?___xxtofl+1)^0,c
  4616   001C16  0E00               	movlw	0
  4617   001C18  6E16               	movwf	(?___xxtofl+2)^0,c
  4618   001C1A  0E00               	movlw	0
  4619   001C1C  6E17               	movwf	(?___xxtofl+3)^0,c
  4620   001C1E  EFA2  F00E         	goto	l1272
  4621   001C22                     l2620:
  4622   001C22  0E96               	movlw	150
  4623   001C24  6E1D               	movwf	___xxtofl@exp^0,c
  4624   001C26  EF1B  F00E         	goto	l2624
  4625   001C2A                     l2622:
  4626   001C2A  2A1D               	incf	___xxtofl@exp^0,f,c
  4627   001C2C  90D8               	bcf	status,0,c
  4628   001C2E  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4629   001C30  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4630   001C32  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4631   001C34  321E               	rrcf	___xxtofl@arg^0,f,c
  4632   001C36                     l2624:
  4633   001C36  0E00               	movlw	0
  4634   001C38  141E               	andwf	___xxtofl@arg^0,w,c
  4635   001C3A  6E18               	movwf	??___xxtofl^0,c
  4636   001C3C  0E00               	movlw	0
  4637   001C3E  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4638   001C40  6E19               	movwf	(??___xxtofl+1)^0,c
  4639   001C42  0E00               	movlw	0
  4640   001C44  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4641   001C46  6E1A               	movwf	(??___xxtofl+2)^0,c
  4642   001C48  0EFE               	movlw	254
  4643   001C4A  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4644   001C4C  6E1B               	movwf	(??___xxtofl+3)^0,c
  4645   001C4E  5018               	movf	??___xxtofl^0,w,c
  4646   001C50  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4647   001C52  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4648   001C54  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4649   001C56  A4D8               	btfss	status,2,c
  4650   001C58  EF30  F00E         	goto	u1471
  4651   001C5C  EF32  F00E         	goto	u1470
  4652   001C60                     u1471:
  4653   001C60  EF15  F00E         	goto	l2622
  4654   001C64                     u1470:
  4655   001C64  EF40  F00E         	goto	l1276
  4656   001C68                     l2626:
  4657   001C68  2A1D               	incf	___xxtofl@exp^0,f,c
  4658   001C6A  0E01               	movlw	1
  4659   001C6C  261E               	addwf	___xxtofl@arg^0,f,c
  4660   001C6E  0E00               	movlw	0
  4661   001C70  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  4662   001C72  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  4663   001C74  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  4664   001C76  90D8               	bcf	status,0,c
  4665   001C78  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4666   001C7A  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4667   001C7C  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4668   001C7E  321E               	rrcf	___xxtofl@arg^0,f,c
  4669   001C80                     l1276:
  4670   001C80  0E00               	movlw	0
  4671   001C82  141E               	andwf	___xxtofl@arg^0,w,c
  4672   001C84  6E18               	movwf	??___xxtofl^0,c
  4673   001C86  0E00               	movlw	0
  4674   001C88  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4675   001C8A  6E19               	movwf	(??___xxtofl+1)^0,c
  4676   001C8C  0E00               	movlw	0
  4677   001C8E  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4678   001C90  6E1A               	movwf	(??___xxtofl+2)^0,c
  4679   001C92  0EFF               	movlw	255
  4680   001C94  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4681   001C96  6E1B               	movwf	(??___xxtofl+3)^0,c
  4682   001C98  5018               	movf	??___xxtofl^0,w,c
  4683   001C9A  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4684   001C9C  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4685   001C9E  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4686   001CA0  A4D8               	btfss	status,2,c
  4687   001CA2  EF55  F00E         	goto	u1481
  4688   001CA6  EF57  F00E         	goto	u1480
  4689   001CAA                     u1481:
  4690   001CAA  EF34  F00E         	goto	l2626
  4691   001CAE                     u1480:
  4692   001CAE  EF5F  F00E         	goto	l2634
  4693   001CB2                     l2632:
  4694   001CB2  061D               	decf	___xxtofl@exp^0,f,c
  4695   001CB4  90D8               	bcf	status,0,c
  4696   001CB6  361E               	rlcf	___xxtofl@arg^0,f,c
  4697   001CB8  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  4698   001CBA  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  4699   001CBC  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  4700   001CBE                     l2634:
  4701   001CBE  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  4702   001CC0  EF64  F00E         	goto	u1491
  4703   001CC4  EF66  F00E         	goto	u1490
  4704   001CC8                     u1491:
  4705   001CC8  EF6E  F00E         	goto	l1283
  4706   001CCC                     u1490:
  4707   001CCC  0E02               	movlw	2
  4708   001CCE  601D               	cpfslt	___xxtofl@exp^0,c
  4709   001CD0  EF6C  F00E         	goto	u1501
  4710   001CD4  EF6E  F00E         	goto	u1500
  4711   001CD8                     u1501:
  4712   001CD8  EF59  F00E         	goto	l2632
  4713   001CDC                     u1500:
  4714   001CDC                     l1283:
  4715   001CDC  B01D               	btfsc	___xxtofl@exp^0,0,c
  4716   001CDE  EF73  F00E         	goto	u1511
  4717   001CE2  EF75  F00E         	goto	u1510
  4718   001CE6                     u1511:
  4719   001CE6  EF76  F00E         	goto	l2640
  4720   001CEA                     u1510:
  4721   001CEA  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  4722   001CEC                     l2640:
  4723   001CEC  90D8               	bcf	status,0,c
  4724   001CEE  321D               	rrcf	___xxtofl@exp^0,f,c
  4725   001CF0  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  4726   001CF4  6A19               	clrf	(??___xxtofl+1)^0,c
  4727   001CF6  6A1A               	clrf	(??___xxtofl+2)^0,c
  4728   001CF8  6A1B               	clrf	(??___xxtofl+3)^0,c
  4729   001CFA  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  4730   001CFE  6A1A               	clrf	(??___xxtofl+2)^0,c
  4731   001D00  6A19               	clrf	(??___xxtofl+1)^0,c
  4732   001D02  6A18               	clrf	??___xxtofl^0,c
  4733   001D04  5018               	movf	??___xxtofl^0,w,c
  4734   001D06  121E               	iorwf	___xxtofl@arg^0,f,c
  4735   001D08  5019               	movf	(??___xxtofl+1)^0,w,c
  4736   001D0A  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  4737   001D0C  501A               	movf	(??___xxtofl+2)^0,w,c
  4738   001D0E  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  4739   001D10  501B               	movf	(??___xxtofl+3)^0,w,c
  4740   001D12  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  4741   001D14  501C               	movf	___xxtofl@sign^0,w,c
  4742   001D16  B4D8               	btfsc	status,2,c
  4743   001D18  EF90  F00E         	goto	u1521
  4744   001D1C  EF92  F00E         	goto	u1520
  4745   001D20                     u1521:
  4746   001D20  EF9A  F00E         	goto	l2650
  4747   001D24                     u1520:
  4748   001D24  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4749   001D26  EF99  F00E         	goto	u1530
  4750   001D2A  EF97  F00E         	goto	u1531
  4751   001D2E                     u1531:
  4752   001D2E  EF9A  F00E         	goto	l2650
  4753   001D32                     u1530:
  4754   001D32  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  4755   001D34                     l2650:
  4756   001D34  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  4757   001D38  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  4758   001D3C  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  4759   001D40  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  4760   001D44                     l1272:
  4761   001D44  0012               	return		;funcret
  4762   001D46                     __end_of___xxtofl:
  4763                           	callstack 0
  4764                           
  4765 ;; *************** function _color_normalise *****************
  4766 ;; Defined at:
  4767 ;;		line 100 in file "color.c"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  4770 ;;		 -> main@RGBC(32), 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;		None
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  1    wreg      void 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;Total ram usage:        2 bytes
  4787 ;; Hardware stack levels used: 1
  4788 ;; Hardware stack levels required when called: 7
  4789 ;; This function calls:
  4790 ;;		___fldiv
  4791 ;; This function is called by:
  4792 ;;		_main
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text25
  4797   00202E                     __ptext25:
  4798                           	callstack 0
  4799   00202E                     _color_normalise:
  4800                           	callstack 23
  4801   00202E                     
  4802                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  4803   00202E  EE20 F00C          	lfsr	2,12
  4804   002032  5022               	movf	color_normalise@RGBC^0,w,c
  4805   002034  26D9               	addwf	fsr2l,f,c
  4806   002036  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4807   002038  22DA               	addwfc	fsr2h,f,c
  4808   00203A  CFDE F009          	movff	postinc2,___fldiv@b
  4809   00203E  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4810   002042  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4811   002046  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4812   00204A  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  4813   00204E  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  4814   002052  CFDE F00D          	movff	postinc2,___fldiv@a
  4815   002056  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4816   00205A  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4817   00205E  CFDE F010          	movff	postinc2,___fldiv@a+3
  4818   002062  ECFC  F00B         	call	___fldiv	;wreg free
  4819   002066  EE20 F010          	lfsr	2,16
  4820   00206A  5022               	movf	color_normalise@RGBC^0,w,c
  4821   00206C  26D9               	addwf	fsr2l,f,c
  4822   00206E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4823   002070  22DA               	addwfc	fsr2h,f,c
  4824   002072  C009  FFDE         	movff	?___fldiv,postinc2
  4825   002076  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4826   00207A  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4827   00207E  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4828                           
  4829                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  4830   002082  EE20 F00C          	lfsr	2,12
  4831   002086  5022               	movf	color_normalise@RGBC^0,w,c
  4832   002088  26D9               	addwf	fsr2l,f,c
  4833   00208A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4834   00208C  22DA               	addwfc	fsr2h,f,c
  4835   00208E  CFDE F009          	movff	postinc2,___fldiv@b
  4836   002092  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4837   002096  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4838   00209A  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4839   00209E  EE20 F004          	lfsr	2,4
  4840   0020A2  5022               	movf	color_normalise@RGBC^0,w,c
  4841   0020A4  26D9               	addwf	fsr2l,f,c
  4842   0020A6  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4843   0020A8  22DA               	addwfc	fsr2h,f,c
  4844   0020AA  CFDE F00D          	movff	postinc2,___fldiv@a
  4845   0020AE  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4846   0020B2  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4847   0020B6  CFDE F010          	movff	postinc2,___fldiv@a+3
  4848   0020BA  ECFC  F00B         	call	___fldiv	;wreg free
  4849   0020BE  EE20 F014          	lfsr	2,20
  4850   0020C2  5022               	movf	color_normalise@RGBC^0,w,c
  4851   0020C4  26D9               	addwf	fsr2l,f,c
  4852   0020C6  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4853   0020C8  22DA               	addwfc	fsr2h,f,c
  4854   0020CA  C009  FFDE         	movff	?___fldiv,postinc2
  4855   0020CE  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4856   0020D2  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4857   0020D6  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4858                           
  4859                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  4860   0020DA  EE20 F00C          	lfsr	2,12
  4861   0020DE  5022               	movf	color_normalise@RGBC^0,w,c
  4862   0020E0  26D9               	addwf	fsr2l,f,c
  4863   0020E2  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4864   0020E4  22DA               	addwfc	fsr2h,f,c
  4865   0020E6  CFDE F009          	movff	postinc2,___fldiv@b
  4866   0020EA  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4867   0020EE  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4868   0020F2  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4869   0020F6  EE20 F008          	lfsr	2,8
  4870   0020FA  5022               	movf	color_normalise@RGBC^0,w,c
  4871   0020FC  26D9               	addwf	fsr2l,f,c
  4872   0020FE  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4873   002100  22DA               	addwfc	fsr2h,f,c
  4874   002102  CFDE F00D          	movff	postinc2,___fldiv@a
  4875   002106  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4876   00210A  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4877   00210E  CFDE F010          	movff	postinc2,___fldiv@a+3
  4878   002112  ECFC  F00B         	call	___fldiv	;wreg free
  4879   002116  EE20 F018          	lfsr	2,24
  4880   00211A  5022               	movf	color_normalise@RGBC^0,w,c
  4881   00211C  26D9               	addwf	fsr2l,f,c
  4882   00211E  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4883   002120  22DA               	addwfc	fsr2h,f,c
  4884   002122  C009  FFDE         	movff	?___fldiv,postinc2
  4885   002126  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4886   00212A  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4887   00212E  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4888                           
  4889                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  4890   002132  EE20 F00C          	lfsr	2,12
  4891   002136  5022               	movf	color_normalise@RGBC^0,w,c
  4892   002138  26D9               	addwf	fsr2l,f,c
  4893   00213A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4894   00213C  22DA               	addwfc	fsr2h,f,c
  4895   00213E  CFDE F009          	movff	postinc2,___fldiv@b
  4896   002142  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4897   002146  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4898   00214A  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4899   00214E  0E00               	movlw	0
  4900   002150  6E0D               	movwf	___fldiv@a^0,c
  4901   002152  0E00               	movlw	0
  4902   002154  6E0E               	movwf	(___fldiv@a+1)^0,c
  4903   002156  0E00               	movlw	0
  4904   002158  6E0F               	movwf	(___fldiv@a+2)^0,c
  4905   00215A  0E00               	movlw	0
  4906   00215C  6E10               	movwf	(___fldiv@a+3)^0,c
  4907   00215E  ECFC  F00B         	call	___fldiv	;wreg free
  4908   002162  EE20 F01C          	lfsr	2,28
  4909   002166  5022               	movf	color_normalise@RGBC^0,w,c
  4910   002168  26D9               	addwf	fsr2l,f,c
  4911   00216A  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4912   00216C  22DA               	addwfc	fsr2h,f,c
  4913   00216E  C009  FFDE         	movff	?___fldiv,postinc2
  4914   002172  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4915   002176  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4916   00217A  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4917   00217E  0012               	return		;funcret
  4918   002180                     __end_of_color_normalise:
  4919                           	callstack 0
  4920                           
  4921 ;; *************** function ___fldiv *****************
  4922 ;; Defined at:
  4923 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;  b               4    8[COMRAM] void 
  4926 ;;  a               4   12[COMRAM] void 
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  grs             4   27[COMRAM] unsigned long 
  4929 ;;  rem             4   20[COMRAM] unsigned long 
  4930 ;;  new_exp         2   25[COMRAM] short 
  4931 ;;  aexp            1   32[COMRAM] unsigned char 
  4932 ;;  bexp            1   31[COMRAM] unsigned char 
  4933 ;;  sign            1   24[COMRAM] unsigned char 
  4934 ;; Return value:  Size  Location     Type
  4935 ;;                  4    8[COMRAM] unsigned char 
  4936 ;; Registers used:
  4937 ;;		wreg, status,2, status,0
  4938 ;; Tracked objects:
  4939 ;;		On entry : 0/0
  4940 ;;		On exit  : 0/0
  4941 ;;		Unchanged: 0/0
  4942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4943 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4944 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4945 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4946 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4947 ;;Total ram usage:       25 bytes
  4948 ;; Hardware stack levels used: 1
  4949 ;; Hardware stack levels required when called: 6
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_color_normalise
  4954 ;; This function uses a non-reentrant model
  4955 ;;
  4956                           
  4957                           	psect	text26
  4958   0017F8                     __ptext26:
  4959                           	callstack 0
  4960   0017F8                     ___fldiv:
  4961                           	callstack 23
  4962   0017F8  500C               	movf	(___fldiv@b+3)^0,w,c
  4963   0017FA  0B80               	andlw	128
  4964   0017FC  6E19               	movwf	___fldiv@sign^0,c
  4965   0017FE  500C               	movf	(___fldiv@b+3)^0,w,c
  4966   001800  240C               	addwf	(___fldiv@b+3)^0,w,c
  4967   001802  6E20               	movwf	___fldiv@bexp^0,c
  4968   001804  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  4969   001806  EF07  F00C         	goto	u1161
  4970   00180A  EF09  F00C         	goto	u1160
  4971   00180E                     u1161:
  4972   00180E  EF0A  F00C         	goto	l2454
  4973   001812                     u1160:
  4974   001812  8020               	bsf	___fldiv@bexp^0,0,c
  4975   001814                     l2454:
  4976   001814  5020               	movf	___fldiv@bexp^0,w,c
  4977   001816  B4D8               	btfsc	status,2,c
  4978   001818  EF10  F00C         	goto	u1171
  4979   00181C  EF12  F00C         	goto	u1170
  4980   001820                     u1171:
  4981   001820  EF27  F00C         	goto	l2464
  4982   001824                     u1170:
  4983   001824  2820               	incf	___fldiv@bexp^0,w,c
  4984   001826  A4D8               	btfss	status,2,c
  4985   001828  EF18  F00C         	goto	u1181
  4986   00182C  EF1A  F00C         	goto	u1180
  4987   001830                     u1181:
  4988   001830  EF22  F00C         	goto	l2460
  4989   001834                     u1180:
  4990   001834  0E00               	movlw	0
  4991   001836  6E09               	movwf	___fldiv@b^0,c
  4992   001838  0E00               	movlw	0
  4993   00183A  6E0A               	movwf	(___fldiv@b+1)^0,c
  4994   00183C  0E00               	movlw	0
  4995   00183E  6E0B               	movwf	(___fldiv@b+2)^0,c
  4996   001840  0E00               	movlw	0
  4997   001842  6E0C               	movwf	(___fldiv@b+3)^0,c
  4998   001844                     l2460:
  4999   001844  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  5000   001846  0E00               	movlw	0
  5001   001848  6E0C               	movwf	(___fldiv@b+3)^0,c
  5002   00184A  EF2F  F00C         	goto	l2466
  5003   00184E                     l2464:
  5004   00184E  0E00               	movlw	0
  5005   001850  6E09               	movwf	___fldiv@b^0,c
  5006   001852  0E00               	movlw	0
  5007   001854  6E0A               	movwf	(___fldiv@b+1)^0,c
  5008   001856  0E00               	movlw	0
  5009   001858  6E0B               	movwf	(___fldiv@b+2)^0,c
  5010   00185A  0E00               	movlw	0
  5011   00185C  6E0C               	movwf	(___fldiv@b+3)^0,c
  5012   00185E                     l2466:
  5013   00185E  5010               	movf	(___fldiv@a+3)^0,w,c
  5014   001860  0B80               	andlw	128
  5015   001862  1A19               	xorwf	___fldiv@sign^0,f,c
  5016   001864  5010               	movf	(___fldiv@a+3)^0,w,c
  5017   001866  2410               	addwf	(___fldiv@a+3)^0,w,c
  5018   001868  6E21               	movwf	___fldiv@aexp^0,c
  5019   00186A  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  5020   00186C  EF3A  F00C         	goto	u1191
  5021   001870  EF3C  F00C         	goto	u1190
  5022   001874                     u1191:
  5023   001874  EF3D  F00C         	goto	l2474
  5024   001878                     u1190:
  5025   001878  8021               	bsf	___fldiv@aexp^0,0,c
  5026   00187A                     l2474:
  5027   00187A  5021               	movf	___fldiv@aexp^0,w,c
  5028   00187C  B4D8               	btfsc	status,2,c
  5029   00187E  EF43  F00C         	goto	u1201
  5030   001882  EF45  F00C         	goto	u1200
  5031   001886                     u1201:
  5032   001886  EF5A  F00C         	goto	l2484
  5033   00188A                     u1200:
  5034   00188A  2821               	incf	___fldiv@aexp^0,w,c
  5035   00188C  A4D8               	btfss	status,2,c
  5036   00188E  EF4B  F00C         	goto	u1211
  5037   001892  EF4D  F00C         	goto	u1210
  5038   001896                     u1211:
  5039   001896  EF55  F00C         	goto	l2480
  5040   00189A                     u1210:
  5041   00189A  0E00               	movlw	0
  5042   00189C  6E0D               	movwf	___fldiv@a^0,c
  5043   00189E  0E00               	movlw	0
  5044   0018A0  6E0E               	movwf	(___fldiv@a+1)^0,c
  5045   0018A2  0E00               	movlw	0
  5046   0018A4  6E0F               	movwf	(___fldiv@a+2)^0,c
  5047   0018A6  0E00               	movlw	0
  5048   0018A8  6E10               	movwf	(___fldiv@a+3)^0,c
  5049   0018AA                     l2480:
  5050   0018AA  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  5051   0018AC  0E00               	movlw	0
  5052   0018AE  6E10               	movwf	(___fldiv@a+3)^0,c
  5053   0018B0  EF62  F00C         	goto	l2486
  5054   0018B4                     l2484:
  5055   0018B4  0E00               	movlw	0
  5056   0018B6  6E0D               	movwf	___fldiv@a^0,c
  5057   0018B8  0E00               	movlw	0
  5058   0018BA  6E0E               	movwf	(___fldiv@a+1)^0,c
  5059   0018BC  0E00               	movlw	0
  5060   0018BE  6E0F               	movwf	(___fldiv@a+2)^0,c
  5061   0018C0  0E00               	movlw	0
  5062   0018C2  6E10               	movwf	(___fldiv@a+3)^0,c
  5063   0018C4                     l2486:
  5064   0018C4  500D               	movf	___fldiv@a^0,w,c
  5065   0018C6  100E               	iorwf	(___fldiv@a+1)^0,w,c
  5066   0018C8  100F               	iorwf	(___fldiv@a+2)^0,w,c
  5067   0018CA  1010               	iorwf	(___fldiv@a+3)^0,w,c
  5068   0018CC  A4D8               	btfss	status,2,c
  5069   0018CE  EF6B  F00C         	goto	u1221
  5070   0018D2  EF6D  F00C         	goto	u1220
  5071   0018D6                     u1221:
  5072   0018D6  EF85  F00C         	goto	l2498
  5073   0018DA                     u1220:
  5074   0018DA  0E00               	movlw	0
  5075   0018DC  6E09               	movwf	___fldiv@b^0,c
  5076   0018DE  0E00               	movlw	0
  5077   0018E0  6E0A               	movwf	(___fldiv@b+1)^0,c
  5078   0018E2  0E00               	movlw	0
  5079   0018E4  6E0B               	movwf	(___fldiv@b+2)^0,c
  5080   0018E6  0E00               	movlw	0
  5081   0018E8  6E0C               	movwf	(___fldiv@b+3)^0,c
  5082   0018EA  0E80               	movlw	128
  5083   0018EC  120B               	iorwf	(___fldiv@b+2)^0,f,c
  5084   0018EE  0E7F               	movlw	127
  5085   0018F0  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5086   0018F2                     l2492:
  5087   0018F2  5019               	movf	___fldiv@sign^0,w,c
  5088   0018F4  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5089   0018F6  C009  F009         	movff	___fldiv@b,?___fldiv
  5090   0018FA  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  5091   0018FE  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  5092   001902  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  5093   001906  EFC8  F00D         	goto	l1196
  5094   00190A                     l2498:
  5095   00190A  5020               	movf	___fldiv@bexp^0,w,c
  5096   00190C  A4D8               	btfss	status,2,c
  5097   00190E  EF8B  F00C         	goto	u1231
  5098   001912  EF8D  F00C         	goto	u1230
  5099   001916                     u1231:
  5100   001916  EF97  F00C         	goto	l2506
  5101   00191A                     u1230:
  5102   00191A  0E00               	movlw	0
  5103   00191C  6E09               	movwf	?___fldiv^0,c
  5104   00191E  0E00               	movlw	0
  5105   001920  6E0A               	movwf	(?___fldiv+1)^0,c
  5106   001922  0E00               	movlw	0
  5107   001924  6E0B               	movwf	(?___fldiv+2)^0,c
  5108   001926  0E00               	movlw	0
  5109   001928  6E0C               	movwf	(?___fldiv+3)^0,c
  5110   00192A  EFC8  F00D         	goto	l1196
  5111   00192E                     l2506:
  5112   00192E  5021               	movf	___fldiv@aexp^0,w,c
  5113   001930  C020  F011         	movff	___fldiv@bexp,??___fldiv
  5114   001934  6A12               	clrf	(??___fldiv+1)^0,c
  5115   001936  5E11               	subwf	??___fldiv^0,f,c
  5116   001938  0E00               	movlw	0
  5117   00193A  5A12               	subwfb	(??___fldiv+1)^0,f,c
  5118   00193C  0E7F               	movlw	127
  5119   00193E  2411               	addwf	??___fldiv^0,w,c
  5120   001940  6E1A               	movwf	___fldiv@new_exp^0,c
  5121   001942  0E00               	movlw	0
  5122   001944  2012               	addwfc	(??___fldiv+1)^0,w,c
  5123   001946  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5124   001948  C009  F015         	movff	___fldiv@b,___fldiv@rem
  5125   00194C  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  5126   001950  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  5127   001954  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  5128   001958  0E00               	movlw	0
  5129   00195A  6E09               	movwf	___fldiv@b^0,c
  5130   00195C  0E00               	movlw	0
  5131   00195E  6E0A               	movwf	(___fldiv@b+1)^0,c
  5132   001960  0E00               	movlw	0
  5133   001962  6E0B               	movwf	(___fldiv@b+2)^0,c
  5134   001964  0E00               	movlw	0
  5135   001966  6E0C               	movwf	(___fldiv@b+3)^0,c
  5136   001968  0E00               	movlw	0
  5137   00196A  6E1C               	movwf	___fldiv@grs^0,c
  5138   00196C  0E00               	movlw	0
  5139   00196E  6E1D               	movwf	(___fldiv@grs+1)^0,c
  5140   001970  0E00               	movlw	0
  5141   001972  6E1E               	movwf	(___fldiv@grs+2)^0,c
  5142   001974  0E00               	movlw	0
  5143   001976  6E1F               	movwf	(___fldiv@grs+3)^0,c
  5144   001978  0E00               	movlw	0
  5145   00197A  6E21               	movwf	___fldiv@aexp^0,c
  5146   00197C  EFF8  F00C         	goto	l1198
  5147   001980                     l2516:
  5148   001980  5021               	movf	___fldiv@aexp^0,w,c
  5149   001982  B4D8               	btfsc	status,2,c
  5150   001984  EFC6  F00C         	goto	u1241
  5151   001988  EFC8  F00C         	goto	u1240
  5152   00198C                     u1241:
  5153   00198C  EFDF  F00C         	goto	l2524
  5154   001990                     u1240:
  5155   001990  90D8               	bcf	status,0,c
  5156   001992  3615               	rlcf	___fldiv@rem^0,f,c
  5157   001994  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  5158   001996  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  5159   001998  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  5160   00199A  90D8               	bcf	status,0,c
  5161   00199C  3609               	rlcf	___fldiv@b^0,f,c
  5162   00199E  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5163   0019A0  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5164   0019A2  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5165   0019A4  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5166   0019A6  EFD7  F00C         	goto	u1251
  5167   0019AA  EFD9  F00C         	goto	u1250
  5168   0019AE                     u1251:
  5169   0019AE  EFDA  F00C         	goto	l1201
  5170   0019B2                     u1250:
  5171   0019B2  8009               	bsf	___fldiv@b^0,0,c
  5172   0019B4                     l1201:
  5173   0019B4  90D8               	bcf	status,0,c
  5174   0019B6  361C               	rlcf	___fldiv@grs^0,f,c
  5175   0019B8  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5176   0019BA  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5177   0019BC  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5178   0019BE                     l2524:
  5179   0019BE  500D               	movf	___fldiv@a^0,w,c
  5180   0019C0  5C15               	subwf	___fldiv@rem^0,w,c
  5181   0019C2  500E               	movf	(___fldiv@a+1)^0,w,c
  5182   0019C4  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  5183   0019C6  500F               	movf	(___fldiv@a+2)^0,w,c
  5184   0019C8  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  5185   0019CA  5010               	movf	(___fldiv@a+3)^0,w,c
  5186   0019CC  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  5187   0019CE  A0D8               	btfss	status,0,c
  5188   0019D0  EFEC  F00C         	goto	u1261
  5189   0019D4  EFEE  F00C         	goto	u1260
  5190   0019D8                     u1261:
  5191   0019D8  EFF7  F00C         	goto	l2530
  5192   0019DC                     u1260:
  5193   0019DC  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  5194   0019DE  500D               	movf	___fldiv@a^0,w,c
  5195   0019E0  5E15               	subwf	___fldiv@rem^0,f,c
  5196   0019E2  500E               	movf	(___fldiv@a+1)^0,w,c
  5197   0019E4  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  5198   0019E6  500F               	movf	(___fldiv@a+2)^0,w,c
  5199   0019E8  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  5200   0019EA  5010               	movf	(___fldiv@a+3)^0,w,c
  5201   0019EC  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  5202   0019EE                     l2530:
  5203   0019EE  2A21               	incf	___fldiv@aexp^0,f,c
  5204   0019F0                     l1198:
  5205   0019F0  0E19               	movlw	25
  5206   0019F2  6421               	cpfsgt	___fldiv@aexp^0,c
  5207   0019F4  EFFE  F00C         	goto	u1271
  5208   0019F8  EF00  F00D         	goto	u1270
  5209   0019FC                     u1271:
  5210   0019FC  EFC0  F00C         	goto	l2516
  5211   001A00                     u1270:
  5212   001A00  5015               	movf	___fldiv@rem^0,w,c
  5213   001A02  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  5214   001A04  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  5215   001A06  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  5216   001A08  B4D8               	btfsc	status,2,c
  5217   001A0A  EF09  F00D         	goto	u1281
  5218   001A0E  EF0B  F00D         	goto	u1280
  5219   001A12                     u1281:
  5220   001A12  EF23  F00D         	goto	l2542
  5221   001A16                     u1280:
  5222   001A16  801C               	bsf	___fldiv@grs^0,0,c
  5223   001A18  EF23  F00D         	goto	l2542
  5224   001A1C                     l2536:
  5225   001A1C  90D8               	bcf	status,0,c
  5226   001A1E  3609               	rlcf	___fldiv@b^0,f,c
  5227   001A20  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5228   001A22  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5229   001A24  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5230   001A26  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5231   001A28  EF18  F00D         	goto	u1291
  5232   001A2C  EF1A  F00D         	goto	u1290
  5233   001A30                     u1291:
  5234   001A30  EF1B  F00D         	goto	l1207
  5235   001A34                     u1290:
  5236   001A34  8009               	bsf	___fldiv@b^0,0,c
  5237   001A36                     l1207:
  5238   001A36  90D8               	bcf	status,0,c
  5239   001A38  361C               	rlcf	___fldiv@grs^0,f,c
  5240   001A3A  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5241   001A3C  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5242   001A3E  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5243   001A40  061A               	decf	___fldiv@new_exp^0,f,c
  5244   001A42  A0D8               	btfss	status,0,c
  5245   001A44  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  5246   001A46                     l2542:
  5247   001A46  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  5248   001A48  EF28  F00D         	goto	u1301
  5249   001A4C  EF2A  F00D         	goto	u1300
  5250   001A50                     u1301:
  5251   001A50  EF0E  F00D         	goto	l2536
  5252   001A54                     u1300:
  5253   001A54  0E00               	movlw	0
  5254   001A56  6E21               	movwf	___fldiv@aexp^0,c
  5255   001A58  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5256   001A5A  EF31  F00D         	goto	u1311
  5257   001A5E  EF33  F00D         	goto	u1310
  5258   001A62                     u1311:
  5259   001A62  EF57  F00D         	goto	l1209
  5260   001A66                     u1310:
  5261   001A66  0EFF               	movlw	255
  5262   001A68  141C               	andwf	___fldiv@grs^0,w,c
  5263   001A6A  6E11               	movwf	??___fldiv^0,c
  5264   001A6C  0EFF               	movlw	255
  5265   001A6E  141D               	andwf	(___fldiv@grs+1)^0,w,c
  5266   001A70  6E12               	movwf	(??___fldiv+1)^0,c
  5267   001A72  0EFF               	movlw	255
  5268   001A74  141E               	andwf	(___fldiv@grs+2)^0,w,c
  5269   001A76  6E13               	movwf	(??___fldiv+2)^0,c
  5270   001A78  0E7F               	movlw	127
  5271   001A7A  141F               	andwf	(___fldiv@grs+3)^0,w,c
  5272   001A7C  6E14               	movwf	(??___fldiv+3)^0,c
  5273   001A7E  5011               	movf	??___fldiv^0,w,c
  5274   001A80  1012               	iorwf	(??___fldiv+1)^0,w,c
  5275   001A82  1013               	iorwf	(??___fldiv+2)^0,w,c
  5276   001A84  1014               	iorwf	(??___fldiv+3)^0,w,c
  5277   001A86  B4D8               	btfsc	status,2,c
  5278   001A88  EF48  F00D         	goto	u1321
  5279   001A8C  EF4A  F00D         	goto	u1320
  5280   001A90                     u1321:
  5281   001A90  EF4E  F00D         	goto	l1210
  5282   001A94                     u1320:
  5283   001A94                     l2550:
  5284   001A94  0E01               	movlw	1
  5285   001A96  6E21               	movwf	___fldiv@aexp^0,c
  5286   001A98  EF57  F00D         	goto	l1209
  5287   001A9C                     l1210:
  5288   001A9C  A009               	btfss	___fldiv@b^0,0,c
  5289   001A9E  EF53  F00D         	goto	u1331
  5290   001AA2  EF55  F00D         	goto	u1330
  5291   001AA6                     u1331:
  5292   001AA6  EF57  F00D         	goto	l1209
  5293   001AAA                     u1330:
  5294   001AAA  EF4A  F00D         	goto	l2550
  5295   001AAE                     l1209:
  5296   001AAE  5021               	movf	___fldiv@aexp^0,w,c
  5297   001AB0  B4D8               	btfsc	status,2,c
  5298   001AB2  EF5D  F00D         	goto	u1341
  5299   001AB6  EF5F  F00D         	goto	u1340
  5300   001ABA                     u1341:
  5301   001ABA  EF83  F00D         	goto	l2562
  5302   001ABE                     u1340:
  5303   001ABE  0E01               	movlw	1
  5304   001AC0  2609               	addwf	___fldiv@b^0,f,c
  5305   001AC2  0E00               	movlw	0
  5306   001AC4  220A               	addwfc	(___fldiv@b+1)^0,f,c
  5307   001AC6  220B               	addwfc	(___fldiv@b+2)^0,f,c
  5308   001AC8  220C               	addwfc	(___fldiv@b+3)^0,f,c
  5309   001ACA  A00C               	btfss	(___fldiv@b+3)^0,0,c
  5310   001ACC  EF6A  F00D         	goto	u1351
  5311   001AD0  EF6C  F00D         	goto	u1350
  5312   001AD4                     u1351:
  5313   001AD4  EF83  F00D         	goto	l2562
  5314   001AD8                     u1350:
  5315   001AD8  C009  F011         	movff	___fldiv@b,??___fldiv
  5316   001ADC  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  5317   001AE0  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  5318   001AE4  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  5319   001AE8  3414               	rlcf	(??___fldiv+3)^0,w,c
  5320   001AEA  3214               	rrcf	(??___fldiv+3)^0,f,c
  5321   001AEC  3213               	rrcf	(??___fldiv+2)^0,f,c
  5322   001AEE  3212               	rrcf	(??___fldiv+1)^0,f,c
  5323   001AF0  3211               	rrcf	??___fldiv^0,f,c
  5324   001AF2  C011  F009         	movff	??___fldiv,___fldiv@b
  5325   001AF6  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  5326   001AFA  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  5327   001AFE  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  5328   001B02  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  5329   001B04  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  5330   001B06                     l2562:
  5331   001B06  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5332   001B08  EF8E  F00D         	goto	u1361
  5333   001B0C  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5334   001B0E  E108               	bnz	u1360
  5335   001B10  281A               	incf	___fldiv@new_exp^0,w,c
  5336   001B12  A0D8               	btfss	status,0,c
  5337   001B14  EF8E  F00D         	goto	u1361
  5338   001B18  EF90  F00D         	goto	u1360
  5339   001B1C                     u1361:
  5340   001B1C  EF9B  F00D         	goto	l2566
  5341   001B20                     u1360:
  5342   001B20  0E00               	movlw	0
  5343   001B22  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5344   001B24  681A               	setf	___fldiv@new_exp^0,c
  5345   001B26  0E00               	movlw	0
  5346   001B28  6E09               	movwf	___fldiv@b^0,c
  5347   001B2A  0E00               	movlw	0
  5348   001B2C  6E0A               	movwf	(___fldiv@b+1)^0,c
  5349   001B2E  0E00               	movlw	0
  5350   001B30  6E0B               	movwf	(___fldiv@b+2)^0,c
  5351   001B32  0E00               	movlw	0
  5352   001B34  6E0C               	movwf	(___fldiv@b+3)^0,c
  5353   001B36                     l2566:
  5354   001B36  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5355   001B38  EFA8  F00D         	goto	u1370
  5356   001B3C  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5357   001B3E  E106               	bnz	u1371
  5358   001B40  041A               	decf	___fldiv@new_exp^0,w,c
  5359   001B42  B0D8               	btfsc	status,0,c
  5360   001B44  EFA6  F00D         	goto	u1371
  5361   001B48  EFA8  F00D         	goto	u1370
  5362   001B4C                     u1371:
  5363   001B4C  EFB6  F00D         	goto	l2570
  5364   001B50                     u1370:
  5365   001B50  0E00               	movlw	0
  5366   001B52  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5367   001B54  0E00               	movlw	0
  5368   001B56  6E1A               	movwf	___fldiv@new_exp^0,c
  5369   001B58  0E00               	movlw	0
  5370   001B5A  6E09               	movwf	___fldiv@b^0,c
  5371   001B5C  0E00               	movlw	0
  5372   001B5E  6E0A               	movwf	(___fldiv@b+1)^0,c
  5373   001B60  0E00               	movlw	0
  5374   001B62  6E0B               	movwf	(___fldiv@b+2)^0,c
  5375   001B64  0E00               	movlw	0
  5376   001B66  6E0C               	movwf	(___fldiv@b+3)^0,c
  5377   001B68  0E00               	movlw	0
  5378   001B6A  6E19               	movwf	___fldiv@sign^0,c
  5379   001B6C                     l2570:
  5380   001B6C  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  5381   001B70  A020               	btfss	___fldiv@bexp^0,0,c
  5382   001B72  EFBD  F00D         	goto	u1381
  5383   001B76  EFBF  F00D         	goto	u1380
  5384   001B7A                     u1381:
  5385   001B7A  EFC2  F00D         	goto	l2576
  5386   001B7E                     u1380:
  5387   001B7E  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  5388   001B80  EFC3  F00D         	goto	l2578
  5389   001B84                     l2576:
  5390   001B84  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  5391   001B86                     l2578:
  5392   001B86  90D8               	bcf	status,0,c
  5393   001B88  3020               	rrcf	___fldiv@bexp^0,w,c
  5394   001B8A  6E0C               	movwf	(___fldiv@b+3)^0,c
  5395   001B8C  EF79  F00C         	goto	l2492
  5396   001B90                     l1196:
  5397   001B90  0012               	return		;funcret
  5398   001B92                     __end_of___fldiv:
  5399                           	callstack 0
  5400                           
  5401 ;; *************** function _color_click_init *****************
  5402 ;; Defined at:
  5403 ;;		line 11 in file "color.c"
  5404 ;; Parameters:    Size  Location     Type
  5405 ;;		None
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;		None
  5408 ;; Return value:  Size  Location     Type
  5409 ;;                  1    wreg      void 
  5410 ;; Registers used:
  5411 ;;		wreg, status,2, status,0, cstack
  5412 ;; Tracked objects:
  5413 ;;		On entry : 0/0
  5414 ;;		On exit  : 0/0
  5415 ;;		Unchanged: 0/0
  5416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5421 ;;Total ram usage:        1 bytes
  5422 ;; Hardware stack levels used: 1
  5423 ;; Hardware stack levels required when called: 9
  5424 ;; This function calls:
  5425 ;;		_I2C_2_Master_Init
  5426 ;;		_color_writetoaddr
  5427 ;; This function is called by:
  5428 ;;		_main
  5429 ;; This function uses a non-reentrant model
  5430 ;;
  5431                           
  5432                           	psect	text27
  5433   00299C                     __ptext27:
  5434                           	callstack 0
  5435   00299C                     _color_click_init:
  5436                           	callstack 21
  5437   00299C                     
  5438                           ;color.c: 14:     I2C_2_Master_Init();
  5439   00299C  EC1A  F015         	call	_I2C_2_Master_Init	;wreg free
  5440   0029A0                     
  5441                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  5442   0029A0  0E01               	movlw	1
  5443   0029A2  6E0B               	movwf	color_writetoaddr@value^0,c
  5444   0029A4  0E00               	movlw	0
  5445   0029A6  EC94  F015         	call	_color_writetoaddr
  5446   0029AA                     
  5447                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5448   0029AA  0E3F               	movlw	63
  5449   0029AC  6E0D               	movwf	??_color_click_init^0,c
  5450   0029AE  0E55               	movlw	85
  5451   0029B0                     u2657:
  5452   0029B0  2EE8               	decfsz	wreg,f,c
  5453   0029B2  D7FE               	bra	u2657
  5454   0029B4  2E0D               	decfsz	??_color_click_init^0,f,c
  5455   0029B6  D7FC               	bra	u2657
  5456   0029B8  F000               	nop	
  5457   0029BA                     
  5458                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  5459   0029BA  0E03               	movlw	3
  5460   0029BC  6E0B               	movwf	color_writetoaddr@value^0,c
  5461   0029BE  0E00               	movlw	0
  5462   0029C0  EC94  F015         	call	_color_writetoaddr
  5463   0029C4                     
  5464                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  5465   0029C4  0ED5               	movlw	213
  5466   0029C6  6E0B               	movwf	color_writetoaddr@value^0,c
  5467   0029C8  0E01               	movlw	1
  5468   0029CA  EC94  F015         	call	_color_writetoaddr
  5469   0029CE  0012               	return		;funcret
  5470   0029D0                     __end_of_color_click_init:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function _I2C_2_Master_Init *****************
  5474 ;; Defined at:
  5475 ;;		line 4 in file "i2c.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;		None
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;		None
  5480 ;; Return value:  Size  Location     Type
  5481 ;;                  1    wreg      void 
  5482 ;; Registers used:
  5483 ;;		wreg, status,2
  5484 ;; Tracked objects:
  5485 ;;		On entry : 0/0
  5486 ;;		On exit  : 0/0
  5487 ;;		Unchanged: 0/0
  5488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5493 ;;Total ram usage:        0 bytes
  5494 ;; Hardware stack levels used: 1
  5495 ;; Hardware stack levels required when called: 6
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_color_click_init
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text28
  5504   002A34                     __ptext28:
  5505                           	callstack 0
  5506   002A34                     _I2C_2_Master_Init:
  5507                           	callstack 23
  5508   002A34                     
  5509                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5510   002A34  010E               	movlb	14	; () banked
  5511   002A36  51D9               	movf	217,w,b	;volatile
  5512   002A38  0BF0               	andlw	-16
  5513   002A3A  0908               	iorlw	8
  5514   002A3C  6FD9               	movwf	217,b	;volatile
  5515   002A3E                     
  5516                           ; BSR set to: 14
  5517                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5518   002A3E  8BD9               	bsf	217,5,b	;volatile
  5519                           
  5520                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5521   002A40  0E9F               	movlw	159
  5522   002A42  6FD6               	movwf	214,b	;volatile
  5523   002A44                     
  5524                           ; BSR set to: 14
  5525                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5526   002A44  8A84               	bsf	132,5,c	;volatile
  5527   002A46                     
  5528                           ; BSR set to: 14
  5529                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5530   002A46  8C84               	bsf	132,6,c	;volatile
  5531   002A48                     
  5532                           ; BSR set to: 14
  5533                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5534   002A48  9BA7               	bcf	167,5,b	;volatile
  5535   002A4A                     
  5536                           ; BSR set to: 14
  5537                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5538   002A4A  9DA7               	bcf	167,6,b	;volatile
  5539                           
  5540                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5541   002A4C  0E1D               	movlw	29
  5542   002A4E  6F1D               	movwf	29,b	;volatile
  5543                           
  5544                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5545   002A50  0E1E               	movlw	30
  5546   002A52  6F1C               	movwf	28,b	;volatile
  5547                           
  5548                           ;i2c.c: 18:   RD5PPS=0x1C;
  5549   002A54  0E1C               	movlw	28
  5550   002A56  6F6F               	movwf	111,b	;volatile
  5551                           
  5552                           ;i2c.c: 19:   RD6PPS=0x1B;
  5553   002A58  0E1B               	movlw	27
  5554   002A5A  6F70               	movwf	112,b	;volatile
  5555   002A5C                     
  5556                           ; BSR set to: 14
  5557   002A5C  0012               	return		;funcret
  5558   002A5E                     __end_of_I2C_2_Master_Init:
  5559                           	callstack 0
  5560                           
  5561 ;; *************** function _Interrupts_init *****************
  5562 ;; Defined at:
  5563 ;;		line 10 in file "interrupts.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;		None
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      void 
  5570 ;; Registers used:
  5571 ;;		None
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;Total ram usage:        0 bytes
  5582 ;; Hardware stack levels used: 1
  5583 ;; Hardware stack levels required when called: 6
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_main
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           	psect	text29
  5592   002BB2                     __ptext29:
  5593                           	callstack 0
  5594   002BB2                     _Interrupts_init:
  5595                           	callstack 24
  5596   002BB2                     
  5597                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  5598   002BB2  8082               	bsf	130,0,c	;volatile
  5599                           
  5600                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  5601   002BB4  010E               	movlb	14	; () banked
  5602   002BB6  919A               	bcf	154,0,b	;volatile
  5603                           
  5604                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  5605   002BB8  9133               	bcf	51,0,b	;volatile
  5606                           
  5607                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  5608   002BBA  8129               	bsf	41,0,b	;volatile
  5609                           
  5610                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  5611   002BBC  811F               	bsf	31,0,b	;volatile
  5612                           
  5613                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  5614   002BBE  90F2               	bcf	242,0,c	;volatile
  5615                           
  5616                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  5617   002BC0  8AF2               	bsf	242,5,c	;volatile
  5618                           
  5619                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  5620   002BC2  8CF2               	bsf	242,6,c	;volatile
  5621                           
  5622                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  5623   002BC4  8EF2               	bsf	242,7,c	;volatile
  5624   002BC6                     
  5625                           ; BSR set to: 14
  5626   002BC6  0012               	return		;funcret
  5627   002BC8                     __end_of_Interrupts_init:
  5628                           	callstack 0
  5629                           
  5630 ;; *************** function _Color_Interrupts_threshold *****************
  5631 ;; Defined at:
  5632 ;;		line 38 in file "interrupts.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  upperThresho    2   12[COMRAM] unsigned int 
  5635 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;		None
  5638 ;; Return value:  Size  Location     Type
  5639 ;;                  1    wreg      void 
  5640 ;; Registers used:
  5641 ;;		wreg, status,2, status,0, cstack
  5642 ;; Tracked objects:
  5643 ;;		On entry : 0/0
  5644 ;;		On exit  : 0/0
  5645 ;;		Unchanged: 0/0
  5646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5650 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5651 ;;Total ram usage:        4 bytes
  5652 ;; Hardware stack levels used: 1
  5653 ;; Hardware stack levels required when called: 9
  5654 ;; This function calls:
  5655 ;;		_color_writetoaddr
  5656 ;; This function is called by:
  5657 ;;		_main
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           	psect	text30
  5662   002A5E                     __ptext30:
  5663                           	callstack 0
  5664   002A5E                     _Color_Interrupts_threshold:
  5665                           	callstack 21
  5666   002A5E                     
  5667                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  5668   002A5E  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  5669   002A62  0E04               	movlw	4
  5670   002A64  EC94  F015         	call	_color_writetoaddr
  5671                           
  5672                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  5673   002A68  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  5674   002A6A  6E0B               	movwf	color_writetoaddr@value^0,c
  5675   002A6C  0E05               	movlw	5
  5676   002A6E  EC94  F015         	call	_color_writetoaddr
  5677                           
  5678                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  5679   002A72  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  5680   002A76  0E06               	movlw	6
  5681   002A78  EC94  F015         	call	_color_writetoaddr
  5682                           
  5683                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  5684   002A7C  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  5685   002A7E  6E0B               	movwf	color_writetoaddr@value^0,c
  5686   002A80  0E07               	movlw	7
  5687   002A82  EC94  F015         	call	_color_writetoaddr
  5688   002A86  0012               	return		;funcret
  5689   002A88                     __end_of_Color_Interrupts_threshold:
  5690                           	callstack 0
  5691                           
  5692 ;; *************** function _Color_Interrupts_init *****************
  5693 ;; Defined at:
  5694 ;;		line 29 in file "interrupts.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;                  1    wreg      void 
  5701 ;; Registers used:
  5702 ;;		wreg, status,2, status,0, cstack
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5712 ;;Total ram usage:        1 bytes
  5713 ;; Hardware stack levels used: 1
  5714 ;; Hardware stack levels required when called: 9
  5715 ;; This function calls:
  5716 ;;		_color_writetoaddr
  5717 ;; This function is called by:
  5718 ;;		_main
  5719 ;; This function uses a non-reentrant model
  5720 ;;
  5721                           
  5722                           	psect	text31
  5723   002B68                     __ptext31:
  5724                           	callstack 0
  5725   002B68                     _Color_Interrupts_init:
  5726                           	callstack 21
  5727   002B68                     
  5728                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  5729   002B68  0E13               	movlw	19
  5730   002B6A  6E0B               	movwf	color_writetoaddr@value^0,c
  5731   002B6C  0E00               	movlw	0
  5732   002B6E  EC94  F015         	call	_color_writetoaddr
  5733   002B72                     
  5734                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  5735   002B72  0ED0               	movlw	208
  5736   002B74  6E0D               	movwf	??_Color_Interrupts_init^0,c
  5737   002B76  0ECA               	movlw	202
  5738   002B78                     u2667:
  5739   002B78  2EE8               	decfsz	wreg,f,c
  5740   002B7A  D7FE               	bra	u2667
  5741   002B7C  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  5742   002B7E  D7FC               	bra	u2667
  5743   002B80  0012               	return		;funcret
  5744   002B82                     __end_of_Color_Interrupts_init:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function _color_writetoaddr *****************
  5748 ;; Defined at:
  5749 ;;		line 27 in file "color.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  address         1    wreg     unsigned char 
  5752 ;;  value           1   10[COMRAM] unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  address         1   11[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5764 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;Total ram usage:        2 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 8
  5771 ;; This function calls:
  5772 ;;		_I2C_2_Master_Start
  5773 ;;		_I2C_2_Master_Stop
  5774 ;;		_I2C_2_Master_Write
  5775 ;; This function is called by:
  5776 ;;		_color_click_init
  5777 ;;		_Color_Interrupts_init
  5778 ;;		_Color_Interrupts_threshold
  5779 ;;		_persistence_register
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           	psect	text32
  5784   002B28                     __ptext32:
  5785                           	callstack 0
  5786   002B28                     _color_writetoaddr:
  5787                           	callstack 21
  5788                           
  5789                           ;incstack = 0
  5790                           ;color_writetoaddr@address stored from wreg
  5791   002B28  6E0C               	movwf	color_writetoaddr@address^0,c
  5792   002B2A                     
  5793                           ;color.c: 28:     I2C_2_Master_Start();
  5794   002B2A  EC06  F016         	call	_I2C_2_Master_Start	;wreg free
  5795                           
  5796                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  5797   002B2E  0E52               	movlw	82
  5798   002B30  ECEA  F015         	call	_I2C_2_Master_Write
  5799                           
  5800                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  5801   002B34  500C               	movf	color_writetoaddr@address^0,w,c
  5802   002B36  0980               	iorlw	128
  5803   002B38  ECEA  F015         	call	_I2C_2_Master_Write
  5804                           
  5805                           ;color.c: 31:     I2C_2_Master_Write(value);
  5806   002B3C  500B               	movf	color_writetoaddr@value^0,w,c
  5807   002B3E  ECEA  F015         	call	_I2C_2_Master_Write
  5808                           
  5809                           ;color.c: 32:     I2C_2_Master_Stop();
  5810   002B42  EC01  F016         	call	_I2C_2_Master_Stop	;wreg free
  5811   002B46  0012               	return		;funcret
  5812   002B48                     __end_of_color_writetoaddr:
  5813                           	callstack 0
  5814                           
  5815 ;; *************** function _I2C_2_Master_Write *****************
  5816 ;; Defined at:
  5817 ;;		line 45 in file "i2c.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  data_byte       1    wreg     unsigned char 
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;  data_byte       1    9[COMRAM] unsigned char 
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1    wreg      void 
  5824 ;; Registers used:
  5825 ;;		wreg, status,2, status,0, cstack
  5826 ;; Tracked objects:
  5827 ;;		On entry : 0/0
  5828 ;;		On exit  : 0/0
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5832 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5834 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5835 ;;Total ram usage:        1 bytes
  5836 ;; Hardware stack levels used: 1
  5837 ;; Hardware stack levels required when called: 7
  5838 ;; This function calls:
  5839 ;;		_I2C_2_Master_Idle
  5840 ;; This function is called by:
  5841 ;;		_color_writetoaddr
  5842 ;;		_color_read_Red
  5843 ;;		_color_read_Green
  5844 ;;		_color_read_Blue
  5845 ;;		_color_read_Clear
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text33
  5850   002BD4                     __ptext33:
  5851                           	callstack 0
  5852   002BD4                     _I2C_2_Master_Write:
  5853                           	callstack 21
  5854                           
  5855                           ;incstack = 0
  5856                           ;I2C_2_Master_Write@data_byte stored from wreg
  5857   002BD4  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  5858   002BD6                     
  5859                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5860   002BD6  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  5861   002BDA                     
  5862                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5863   002BDA  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5864   002BDE  0012               	return		;funcret
  5865   002BE0                     __end_of_I2C_2_Master_Write:
  5866                           	callstack 0
  5867                           
  5868 ;; *************** function _I2C_2_Master_Stop *****************
  5869 ;; Defined at:
  5870 ;;		line 39 in file "i2c.c"
  5871 ;; Parameters:    Size  Location     Type
  5872 ;;		None
  5873 ;; Auto vars:     Size  Location     Type
  5874 ;;		None
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  1    wreg      void 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0, cstack
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;Total ram usage:        0 bytes
  5889 ;; Hardware stack levels used: 1
  5890 ;; Hardware stack levels required when called: 7
  5891 ;; This function calls:
  5892 ;;		_I2C_2_Master_Idle
  5893 ;; This function is called by:
  5894 ;;		_color_writetoaddr
  5895 ;;		_color_read_Red
  5896 ;;		_color_read_Green
  5897 ;;		_color_read_Blue
  5898 ;;		_color_read_Clear
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902                           	psect	text34
  5903   002C02                     __ptext34:
  5904                           	callstack 0
  5905   002C02                     _I2C_2_Master_Stop:
  5906                           	callstack 21
  5907   002C02                     
  5908                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5909   002C02  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  5910   002C06                     
  5911                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5912   002C06  010E               	movlb	14	; () banked
  5913   002C08  85DA               	bsf	218,2,b	;volatile
  5914   002C0A                     
  5915                           ; BSR set to: 14
  5916   002C0A  0012               	return		;funcret
  5917   002C0C                     __end_of_I2C_2_Master_Stop:
  5918                           	callstack 0
  5919                           
  5920 ;; *************** function _I2C_2_Master_Start *****************
  5921 ;; Defined at:
  5922 ;;		line 27 in file "i2c.c"
  5923 ;; Parameters:    Size  Location     Type
  5924 ;;		None
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  1    wreg      void 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5940 ;;Total ram usage:        0 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 7
  5943 ;; This function calls:
  5944 ;;		_I2C_2_Master_Idle
  5945 ;; This function is called by:
  5946 ;;		_color_writetoaddr
  5947 ;;		_color_read_Red
  5948 ;;		_color_read_Green
  5949 ;;		_color_read_Blue
  5950 ;;		_color_read_Clear
  5951 ;; This function uses a non-reentrant model
  5952 ;;
  5953                           
  5954                           	psect	text35
  5955   002C0C                     __ptext35:
  5956                           	callstack 0
  5957   002C0C                     _I2C_2_Master_Start:
  5958                           	callstack 21
  5959   002C0C                     
  5960                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5961   002C0C  EC59  F015         	call	_I2C_2_Master_Idle	;wreg free
  5962   002C10                     
  5963                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5964   002C10  010E               	movlb	14	; () banked
  5965   002C12  81DA               	bsf	218,0,b	;volatile
  5966   002C14                     
  5967                           ; BSR set to: 14
  5968   002C14  0012               	return		;funcret
  5969   002C16                     __end_of_I2C_2_Master_Start:
  5970                           	callstack 0
  5971                           
  5972 ;; *************** function _I2C_2_Master_Idle *****************
  5973 ;; Defined at:
  5974 ;;		line 22 in file "i2c.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;		None
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      void 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:        1 bytes
  5993 ;; Hardware stack levels used: 1
  5994 ;; Hardware stack levels required when called: 6
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_I2C_2_Master_Start
  5999 ;;		_I2C_2_Master_RepStart
  6000 ;;		_I2C_2_Master_Stop
  6001 ;;		_I2C_2_Master_Write
  6002 ;;		_I2C_2_Master_Read
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text36
  6007   002AB2                     __ptext36:
  6008                           	callstack 0
  6009   002AB2                     _I2C_2_Master_Idle:
  6010                           	callstack 21
  6011   002AB2                     l192:
  6012   002AB2  010E               	movlb	14	; () banked
  6013   002AB4  B5D8               	btfsc	216,2,b	;volatile
  6014   002AB6  EF5F  F015         	goto	u1031
  6015   002ABA  EF61  F015         	goto	u1030
  6016   002ABE                     u1031:
  6017   002ABE  EF59  F015         	goto	l192
  6018   002AC2                     u1030:
  6019   002AC2                     
  6020                           ; BSR set to: 14
  6021   002AC2  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  6022   002AC6  0E1F               	movlw	31
  6023   002AC8  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  6024   002ACA  A4D8               	btfss	status,2,c
  6025   002ACC  EF6A  F015         	goto	u1041
  6026   002AD0  EF6C  F015         	goto	u1040
  6027   002AD4                     u1041:
  6028   002AD4  EF59  F015         	goto	l192
  6029   002AD8                     u1040:
  6030   002AD8                     
  6031                           ; BSR set to: 14
  6032   002AD8  0012               	return		;funcret
  6033   002ADA                     __end_of_I2C_2_Master_Idle:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _HighISR *****************
  6037 ;; Defined at:
  6038 ;;		line 71 in file "interrupts.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;		None
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;		None
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg, status,2, status,0, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;Total ram usage:        0 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 5
  6059 ;; This function calls:
  6060 ;;		_Color_Interrupts_clear
  6061 ;; This function is called by:
  6062 ;;		Interrupt level 2
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	intcode
  6067   000008                     __pintcode:
  6068                           	callstack 0
  6069   000008                     _HighISR:
  6070                           	callstack 21
  6071                           
  6072                           ; BSR set to: 14
  6073                           ;incstack = 0
  6074   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6075   00000A                     
  6076                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  6077   00000A  010E               	movlb	14	; () banked
  6078   00000C  A133               	btfss	51,0,b	;volatile
  6079   00000E  EF0B  F000         	goto	i2u190_41
  6080   000012  EF0D  F000         	goto	i2u190_40
  6081   000016                     i2u190_41:
  6082   000016  EF17  F000         	goto	i2l475
  6083   00001A                     i2u190_40:
  6084   00001A                     
  6085                           ; BSR set to: 14
  6086                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  6087   00001A  8E7C               	bsf	124,7,c	;volatile
  6088   00001C                     
  6089                           ; BSR set to: 14
  6090                           ;interrupts.c: 76:         interrupt_flag = 1;
  6091   00001C  0E00               	movlw	0
  6092   00001E  0100               	movlb	0	; () banked
  6093   000020  6F9F               	movwf	(_interrupt_flag+1)& (0+255),b
  6094   000022  0E01               	movlw	1
  6095   000024  6F9E               	movwf	_interrupt_flag& (0+255),b
  6096   000026                     
  6097                           ; BSR set to: 0
  6098                           ;interrupts.c: 78:         Color_Interrupts_clear();
  6099   000026  EC01  F015         	call	_Color_Interrupts_clear	;wreg free
  6100   00002A                     
  6101                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  6102   00002A  010E               	movlb	14	; () banked
  6103   00002C  9133               	bcf	51,0,b	;volatile
  6104   00002E                     i2l475:
  6105                           
  6106                           ; BSR set to: 14
  6107   00002E  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6108   000030  0011               	retfie		f
  6109   000032                     __end_of_HighISR:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _Color_Interrupts_clear *****************
  6113 ;; Defined at:
  6114 ;;		line 51 in file "interrupts.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0, cstack
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 4
  6135 ;; This function calls:
  6136 ;;		i2_Color_Interrupts_init
  6137 ;;		i2_Color_Interrupts_threshold
  6138 ;;		i2_I2C_2_Master_Start
  6139 ;;		i2_I2C_2_Master_Stop
  6140 ;;		i2_I2C_2_Master_Write
  6141 ;;		i2_persistence_register
  6142 ;; This function is called by:
  6143 ;;		_HighISR
  6144 ;; This function uses a non-reentrant model
  6145 ;;
  6146                           
  6147                           	psect	text38
  6148   002A02                     __ptext38:
  6149                           	callstack 0
  6150   002A02                     _Color_Interrupts_clear:
  6151                           	callstack 21
  6152   002A02                     
  6153                           ;interrupts.c: 55:     I2C_2_Master_Start();
  6154   002A02  EC10  F016         	call	i2_I2C_2_Master_Start	;wreg free
  6155                           
  6156                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  6157   002A06  0E52               	movlw	82
  6158   002A08  ECF6  F015         	call	i2_I2C_2_Master_Write
  6159                           
  6160                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  6161   002A0C  0EE6               	movlw	230
  6162   002A0E  ECF6  F015         	call	i2_I2C_2_Master_Write
  6163                           
  6164                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  6165   002A12  EC0B  F016         	call	i2_I2C_2_Master_Stop	;wreg free
  6166                           
  6167                           ;interrupts.c: 61:     Color_Interrupts_init();
  6168   002A16  ECC1  F015         	call	i2_Color_Interrupts_init	;wreg free
  6169                           
  6170                           ;interrupts.c: 62:     persistence_register();
  6171   002A1A  ECF0  F015         	call	i2_persistence_register	;wreg free
  6172                           
  6173                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  6174   002A1E  C0F0  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  6175   002A22  C0F1  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  6176   002A26  C09C  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  6177   002A2A  C09D  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  6178   002A2E  EC44  F015         	call	i2_Color_Interrupts_threshold	;wreg free
  6179   002A32  0012               	return		;funcret
  6180   002A34                     __end_of_Color_Interrupts_clear:
  6181                           	callstack 0
  6182                           
  6183 ;; *************** function i2_persistence_register *****************
  6184 ;; Defined at:
  6185 ;;		line 46 in file "interrupts.c"
  6186 ;; Parameters:    Size  Location     Type
  6187 ;;		None
  6188 ;; Auto vars:     Size  Location     Type
  6189 ;;		None
  6190 ;; Return value:  Size  Location     Type
  6191 ;;                  1    wreg      void 
  6192 ;; Registers used:
  6193 ;;		wreg, status,2, status,0, cstack
  6194 ;; Tracked objects:
  6195 ;;		On entry : 0/0
  6196 ;;		On exit  : 0/0
  6197 ;;		Unchanged: 0/0
  6198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6203 ;;Total ram usage:        0 bytes
  6204 ;; Hardware stack levels used: 1
  6205 ;; Hardware stack levels required when called: 3
  6206 ;; This function calls:
  6207 ;;		i2_color_writetoaddr
  6208 ;; This function is called by:
  6209 ;;		_Color_Interrupts_clear
  6210 ;; This function uses a non-reentrant model
  6211 ;;
  6212                           
  6213                           	psect	text39
  6214   002BE0                     __ptext39:
  6215                           	callstack 0
  6216   002BE0                     i2_persistence_register:
  6217                           	callstack 21
  6218   002BE0                     
  6219                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  6220   002BE0  0E02               	movlw	2
  6221   002BE2  6E03               	movwf	i2color_writetoaddr@value^0,c
  6222   002BE4  0E0C               	movlw	12
  6223   002BE6  ECA4  F015         	call	i2_color_writetoaddr
  6224   002BEA  0012               	return		;funcret
  6225   002BEC                     __end_ofi2_persistence_register:
  6226                           	callstack 0
  6227                           
  6228 ;; *************** function i2_Color_Interrupts_threshold *****************
  6229 ;; Defined at:
  6230 ;;		line 38 in file "interrupts.c"
  6231 ;; Parameters:    Size  Location     Type
  6232 ;;  upperThresho    2    4[COMRAM] unsigned int 
  6233 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		wreg, status,2, status,0, cstack
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6245 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6249 ;;Total ram usage:        4 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; Hardware stack levels required when called: 3
  6252 ;; This function calls:
  6253 ;;		i2_color_writetoaddr
  6254 ;; This function is called by:
  6255 ;;		_Color_Interrupts_clear
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           	psect	text40
  6260   002A88                     __ptext40:
  6261                           	callstack 0
  6262   002A88                     i2_Color_Interrupts_threshold:
  6263                           	callstack 21
  6264   002A88                     
  6265                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  6266   002A88  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  6267   002A8C  0E04               	movlw	4
  6268   002A8E  ECA4  F015         	call	i2_color_writetoaddr
  6269                           
  6270                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  6271   002A92  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  6272   002A94  6E03               	movwf	i2color_writetoaddr@value^0,c
  6273   002A96  0E05               	movlw	5
  6274   002A98  ECA4  F015         	call	i2_color_writetoaddr
  6275                           
  6276                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  6277   002A9C  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  6278   002AA0  0E06               	movlw	6
  6279   002AA2  ECA4  F015         	call	i2_color_writetoaddr
  6280                           
  6281                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  6282   002AA6  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  6283   002AA8  6E03               	movwf	i2color_writetoaddr@value^0,c
  6284   002AAA  0E07               	movlw	7
  6285   002AAC  ECA4  F015         	call	i2_color_writetoaddr
  6286   002AB0  0012               	return		;funcret
  6287   002AB2                     __end_ofi2_Color_Interrupts_threshold:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function i2_Color_Interrupts_init *****************
  6291 ;; Defined at:
  6292 ;;		line 29 in file "interrupts.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;		None
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;		None
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2, status,0, cstack
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6310 ;;Total ram usage:        1 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; Hardware stack levels required when called: 3
  6313 ;; This function calls:
  6314 ;;		i2_color_writetoaddr
  6315 ;; This function is called by:
  6316 ;;		_Color_Interrupts_clear
  6317 ;; This function uses a non-reentrant model
  6318 ;;
  6319                           
  6320                           	psect	text41
  6321   002B82                     __ptext41:
  6322                           	callstack 0
  6323   002B82                     i2_Color_Interrupts_init:
  6324                           	callstack 21
  6325   002B82                     
  6326                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  6327   002B82  0E13               	movlw	19
  6328   002B84  6E03               	movwf	i2color_writetoaddr@value^0,c
  6329   002B86  0E00               	movlw	0
  6330   002B88  ECA4  F015         	call	i2_color_writetoaddr
  6331   002B8C                     
  6332                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  6333   002B8C  0ED0               	movlw	208
  6334   002B8E  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  6335   002B90  0ECA               	movlw	202
  6336   002B92                     i2u267_47:
  6337   002B92  2EE8               	decfsz	wreg,f,c
  6338   002B94  D7FE               	bra	i2u267_47
  6339   002B96  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  6340   002B98  D7FC               	bra	i2u267_47
  6341   002B9A  0012               	return		;funcret
  6342   002B9C                     __end_ofi2_Color_Interrupts_init:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function i2_color_writetoaddr *****************
  6346 ;; Defined at:
  6347 ;;		line 27 in file "color.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  address         1    wreg     unsigned char 
  6350 ;;  value           1    2[COMRAM] unsigned char 
  6351 ;; Auto vars:     Size  Location     Type
  6352 ;;  address         1    3[COMRAM] unsigned char 
  6353 ;; Return value:  Size  Location     Type
  6354 ;;                  1    wreg      void 
  6355 ;; Registers used:
  6356 ;;		wreg, status,2, status,0, cstack
  6357 ;; Tracked objects:
  6358 ;;		On entry : 0/0
  6359 ;;		On exit  : 0/0
  6360 ;;		Unchanged: 0/0
  6361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6362 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6366 ;;Total ram usage:        2 bytes
  6367 ;; Hardware stack levels used: 1
  6368 ;; Hardware stack levels required when called: 2
  6369 ;; This function calls:
  6370 ;;		i2_I2C_2_Master_Start
  6371 ;;		i2_I2C_2_Master_Stop
  6372 ;;		i2_I2C_2_Master_Write
  6373 ;; This function is called by:
  6374 ;;		i2_Color_Interrupts_init
  6375 ;;		i2_Color_Interrupts_threshold
  6376 ;;		i2_persistence_register
  6377 ;; This function uses a non-reentrant model
  6378 ;;
  6379                           
  6380                           	psect	text42
  6381   002B48                     __ptext42:
  6382                           	callstack 0
  6383   002B48                     i2_color_writetoaddr:
  6384                           	callstack 21
  6385                           
  6386                           ;incstack = 0
  6387                           ;i2color_writetoaddr@address stored from wreg
  6388   002B48  6E04               	movwf	i2color_writetoaddr@address^0,c
  6389   002B4A                     
  6390                           ;color.c: 28:     I2C_2_Master_Start();
  6391   002B4A  EC10  F016         	call	i2_I2C_2_Master_Start	;wreg free
  6392                           
  6393                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  6394   002B4E  0E52               	movlw	82
  6395   002B50  ECF6  F015         	call	i2_I2C_2_Master_Write
  6396                           
  6397                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  6398   002B54  5004               	movf	i2color_writetoaddr@address^0,w,c
  6399   002B56  0980               	iorlw	128
  6400   002B58  ECF6  F015         	call	i2_I2C_2_Master_Write
  6401                           
  6402                           ;color.c: 31:     I2C_2_Master_Write(value);
  6403   002B5C  5003               	movf	i2color_writetoaddr@value^0,w,c
  6404   002B5E  ECF6  F015         	call	i2_I2C_2_Master_Write
  6405                           
  6406                           ;color.c: 32:     I2C_2_Master_Stop();
  6407   002B62  EC0B  F016         	call	i2_I2C_2_Master_Stop	;wreg free
  6408   002B66  0012               	return		;funcret
  6409   002B68                     __end_ofi2_color_writetoaddr:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function i2_I2C_2_Master_Write *****************
  6413 ;; Defined at:
  6414 ;;		line 45 in file "i2c.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  data_byte       1    wreg     unsigned char 
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  data_byte       1    1[COMRAM] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  1    wreg      void 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, cstack
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6431 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6432 ;;Total ram usage:        1 bytes
  6433 ;; Hardware stack levels used: 1
  6434 ;; Hardware stack levels required when called: 1
  6435 ;; This function calls:
  6436 ;;		i2_I2C_2_Master_Idle
  6437 ;; This function is called by:
  6438 ;;		_Color_Interrupts_clear
  6439 ;;		i2_color_writetoaddr
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text43
  6444   002BEC                     __ptext43:
  6445                           	callstack 0
  6446   002BEC                     i2_I2C_2_Master_Write:
  6447                           	callstack 21
  6448                           
  6449                           ;incstack = 0
  6450                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  6451   002BEC  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  6452   002BEE                     
  6453                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6454   002BEE  EC6D  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6455   002BF2                     
  6456                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6457   002BF2  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  6458   002BF6  0012               	return		;funcret
  6459   002BF8                     __end_ofi2_I2C_2_Master_Write:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function i2_I2C_2_Master_Stop *****************
  6463 ;; Defined at:
  6464 ;;		line 39 in file "i2c.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;		None
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0, cstack
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 1
  6485 ;; This function calls:
  6486 ;;		i2_I2C_2_Master_Idle
  6487 ;; This function is called by:
  6488 ;;		_Color_Interrupts_clear
  6489 ;;		i2_color_writetoaddr
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           	psect	text44
  6494   002C16                     __ptext44:
  6495                           	callstack 0
  6496   002C16                     i2_I2C_2_Master_Stop:
  6497                           	callstack 21
  6498   002C16                     
  6499                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6500   002C16  EC6D  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6501   002C1A                     
  6502                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6503   002C1A  010E               	movlb	14	; () banked
  6504   002C1C  85DA               	bsf	218,2,b	;volatile
  6505   002C1E                     
  6506                           ; BSR set to: 14
  6507   002C1E  0012               	return		;funcret
  6508   002C20                     __end_ofi2_I2C_2_Master_Stop:
  6509                           	callstack 0
  6510                           
  6511 ;; *************** function i2_I2C_2_Master_Start *****************
  6512 ;; Defined at:
  6513 ;;		line 27 in file "i2c.c"
  6514 ;; Parameters:    Size  Location     Type
  6515 ;;		None
  6516 ;; Auto vars:     Size  Location     Type
  6517 ;;		None
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  1    wreg      void 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6531 ;;Total ram usage:        0 bytes
  6532 ;; Hardware stack levels used: 1
  6533 ;; Hardware stack levels required when called: 1
  6534 ;; This function calls:
  6535 ;;		i2_I2C_2_Master_Idle
  6536 ;; This function is called by:
  6537 ;;		_Color_Interrupts_clear
  6538 ;;		i2_color_writetoaddr
  6539 ;; This function uses a non-reentrant model
  6540 ;;
  6541                           
  6542                           	psect	text45
  6543   002C20                     __ptext45:
  6544                           	callstack 0
  6545   002C20                     i2_I2C_2_Master_Start:
  6546                           	callstack 21
  6547   002C20                     
  6548                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6549   002C20  EC6D  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6550   002C24                     
  6551                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6552   002C24  010E               	movlb	14	; () banked
  6553   002C26  81DA               	bsf	218,0,b	;volatile
  6554   002C28                     
  6555                           ; BSR set to: 14
  6556   002C28  0012               	return		;funcret
  6557   002C2A                     __end_ofi2_I2C_2_Master_Start:
  6558                           	callstack 0
  6559                           
  6560 ;; *************** function i2_I2C_2_Master_Idle *****************
  6561 ;; Defined at:
  6562 ;;		line 22 in file "i2c.c"
  6563 ;; Parameters:    Size  Location     Type
  6564 ;;		None
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;		None
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6578 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6579 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6580 ;;Total ram usage:        1 bytes
  6581 ;; Hardware stack levels used: 1
  6582 ;; This function calls:
  6583 ;;		Nothing
  6584 ;; This function is called by:
  6585 ;;		i2_I2C_2_Master_Start
  6586 ;;		i2_I2C_2_Master_Stop
  6587 ;;		i2_I2C_2_Master_Write
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text46
  6592   002ADA                     __ptext46:
  6593                           	callstack 0
  6594   002ADA                     i2_I2C_2_Master_Idle:
  6595                           	callstack 21
  6596   002ADA                     i2l192:
  6597   002ADA  010E               	movlb	14	; () banked
  6598   002ADC  B5D8               	btfsc	216,2,b	;volatile
  6599   002ADE  EF73  F015         	goto	i2u101_41
  6600   002AE2  EF75  F015         	goto	i2u101_40
  6601   002AE6                     i2u101_41:
  6602   002AE6  EF6D  F015         	goto	i2l192
  6603   002AEA                     i2u101_40:
  6604   002AEA                     
  6605                           ; BSR set to: 14
  6606   002AEA  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  6607   002AEE  0E1F               	movlw	31
  6608   002AF0  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  6609   002AF2  A4D8               	btfss	status,2,c
  6610   002AF4  EF7E  F015         	goto	i2u102_41
  6611   002AF8  EF80  F015         	goto	i2u102_40
  6612   002AFC                     i2u102_41:
  6613   002AFC  EF6D  F015         	goto	i2l192
  6614   002B00                     i2u102_40:
  6615   002B00                     
  6616                           ; BSR set to: 14
  6617   002B00  0012               	return		;funcret
  6618   002B02                     __end_ofi2_I2C_2_Master_Idle:
  6619                           	callstack 0
  6620                           
  6621                           	psect	rparam
  6622   000000                     
  6623                           	psect	temp
  6624   000057                     btemp:
  6625                           	callstack 0
  6626   000057                     	ds	1
  6627   000000                     int$flags	set	btemp
  6628   000000                     wtemp8	set	btemp+1
  6629   000000                     ttemp5	set	btemp+1
  6630   000000                     ttemp6	set	btemp+4
  6631   000000                     ttemp7	set	btemp+8
  6632                           
  6633                           	psect	idloc
  6634                           
  6635                           ;Config register IDLOC0 @ 0x200000
  6636                           ;	unspecified, using default values
  6637   200000                     	org	2097152
  6638   200000  0FFF               	dw	4095
  6639                           
  6640                           ;Config register IDLOC1 @ 0x200002
  6641                           ;	unspecified, using default values
  6642   200002                     	org	2097154
  6643   200002  0FFF               	dw	4095
  6644                           
  6645                           ;Config register IDLOC2 @ 0x200004
  6646                           ;	unspecified, using default values
  6647   200004                     	org	2097156
  6648   200004  0FFF               	dw	4095
  6649                           
  6650                           ;Config register IDLOC3 @ 0x200006
  6651                           ;	unspecified, using default values
  6652   200006                     	org	2097158
  6653   200006  0FFF               	dw	4095
  6654                           
  6655                           ;Config register IDLOC4 @ 0x200008
  6656                           ;	unspecified, using default values
  6657   200008                     	org	2097160
  6658   200008  0FFF               	dw	4095
  6659                           
  6660                           ;Config register IDLOC5 @ 0x20000A
  6661                           ;	unspecified, using default values
  6662   20000A                     	org	2097162
  6663   20000A  0FFF               	dw	4095
  6664                           
  6665                           ;Config register IDLOC6 @ 0x20000C
  6666                           ;	unspecified, using default values
  6667   20000C                     	org	2097164
  6668   20000C  0FFF               	dw	4095
  6669                           
  6670                           ;Config register IDLOC7 @ 0x20000E
  6671                           ;	unspecified, using default values
  6672   20000E                     	org	2097166
  6673   20000E  0FFF               	dw	4095
  6674                           
  6675                           	psect	config
  6676                           
  6677                           ;Config register CONFIG1L @ 0x300000
  6678                           ;	External Oscillator mode Selection bits
  6679                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6680                           ;	Power-up default value for COSC bits
  6681                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6682   300000                     	org	3145728
  6683   300000  AA                 	db	170
  6684                           
  6685                           ;Config register CONFIG1H @ 0x300001
  6686                           ;	unspecified, using default values
  6687                           ;	Clock Out Enable bit
  6688                           ;	CLKOUTEN = 0x1, unprogrammed default
  6689                           ;	Clock Switch Enable bit
  6690                           ;	CSWEN = 0x1, unprogrammed default
  6691                           ;	Fail-Safe Clock Monitor Enable bit
  6692                           ;	FCMEN = 0x1, unprogrammed default
  6693   300001                     	org	3145729
  6694   300001  FF                 	db	255
  6695                           
  6696                           ;Config register CONFIG2L @ 0x300002
  6697                           ;	unspecified, using default values
  6698                           ;	Master Clear Enable bit
  6699                           ;	MCLRE = 0x1, unprogrammed default
  6700                           ;	Power-up Timer Enable bit
  6701                           ;	PWRTE = 0x1, unprogrammed default
  6702                           ;	Low-power BOR enable bit
  6703                           ;	LPBOREN = 0x1, unprogrammed default
  6704                           ;	Brown-out Reset Enable bits
  6705                           ;	BOREN = 0x3, unprogrammed default
  6706   300002                     	org	3145730
  6707   300002  FF                 	db	255
  6708                           
  6709                           ;Config register CONFIG2H @ 0x300003
  6710                           ;	unspecified, using default values
  6711                           ;	Brown Out Reset Voltage selection bits
  6712                           ;	BORV = 0x3, unprogrammed default
  6713                           ;	ZCD Disable bit
  6714                           ;	ZCD = 0x1, unprogrammed default
  6715                           ;	PPSLOCK bit One-Way Set Enable bit
  6716                           ;	PPS1WAY = 0x1, unprogrammed default
  6717                           ;	Stack Full/Underflow Reset Enable bit
  6718                           ;	STVREN = 0x1, unprogrammed default
  6719                           ;	Debugger Enable bit
  6720                           ;	DEBUG = 0x1, unprogrammed default
  6721                           ;	Extended Instruction Set Enable bit
  6722                           ;	XINST = 0x1, unprogrammed default
  6723   300003                     	org	3145731
  6724   300003  FF                 	db	255
  6725                           
  6726                           ;Config register CONFIG3L @ 0x300004
  6727                           ;	WDT Period Select bits
  6728                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6729                           ;	WDT operating mode
  6730                           ;	WDTE = OFF, WDT Disabled
  6731   300004                     	org	3145732
  6732   300004  9F                 	db	159
  6733                           
  6734                           ;Config register CONFIG3H @ 0x300005
  6735                           ;	unspecified, using default values
  6736                           ;	WDT Window Select bits
  6737                           ;	WDTCWS = 0x7, unprogrammed default
  6738                           ;	WDT input clock selector
  6739                           ;	WDTCCS = 0x7, unprogrammed default
  6740   300005                     	org	3145733
  6741   300005  FF                 	db	255
  6742                           
  6743                           ;Config register CONFIG4L @ 0x300006
  6744                           ;	unspecified, using default values
  6745                           ;	Write Protection Block 0
  6746                           ;	WRT0 = 0x1, unprogrammed default
  6747                           ;	Write Protection Block 1
  6748                           ;	WRT1 = 0x1, unprogrammed default
  6749                           ;	Write Protection Block 2
  6750                           ;	WRT2 = 0x1, unprogrammed default
  6751                           ;	Write Protection Block 3
  6752                           ;	WRT3 = 0x1, unprogrammed default
  6753                           ;	Write Protection Block 3
  6754                           ;	WRT4 = 0x1, unprogrammed default
  6755                           ;	Write Protection Block 3
  6756                           ;	WRT5 = 0x1, unprogrammed default
  6757                           ;	Write Protection Block 3
  6758                           ;	WRT6 = 0x1, unprogrammed default
  6759                           ;	Write Protection Block 3
  6760                           ;	WRT7 = 0x1, unprogrammed default
  6761   300006                     	org	3145734
  6762   300006  FF                 	db	255
  6763                           
  6764                           ;Config register CONFIG4H @ 0x300007
  6765                           ;	unspecified, using default values
  6766                           ;	Configuration Register Write Protection bit
  6767                           ;	WRTC = 0x1, unprogrammed default
  6768                           ;	Boot Block Write Protection bit
  6769                           ;	WRTB = 0x1, unprogrammed default
  6770                           ;	Data EEPROM Write Protection bit
  6771                           ;	WRTD = 0x1, unprogrammed default
  6772                           ;	Scanner Enable bit
  6773                           ;	SCANE = 0x1, unprogrammed default
  6774                           ;	Low Voltage Programming Enable bit
  6775                           ;	LVP = 0x1, unprogrammed default
  6776   300007                     	org	3145735
  6777   300007  FF                 	db	255
  6778                           
  6779                           ;Config register CONFIG5L @ 0x300008
  6780                           ;	unspecified, using default values
  6781                           ;	UserNVM Program Memory Code Protection bit
  6782                           ;	CP = 0x1, unprogrammed default
  6783                           ;	DataNVM Memory Code Protection bit
  6784                           ;	CPD = 0x1, unprogrammed default
  6785   300008                     	org	3145736
  6786   300008  FF                 	db	255
  6787                           
  6788                           ;Config register CONFIG5H @ 0x300009
  6789                           ;	unspecified, using default values
  6790   300009                     	org	3145737
  6791   300009  FF                 	db	255
  6792                           
  6793                           ;Config register CONFIG6L @ 0x30000A
  6794                           ;	unspecified, using default values
  6795                           ;	Table Read Protection Block 0
  6796                           ;	EBTR0 = 0x1, unprogrammed default
  6797                           ;	Table Read Protection Block 1
  6798                           ;	EBTR1 = 0x1, unprogrammed default
  6799                           ;	Table Read Protection Block 2
  6800                           ;	EBTR2 = 0x1, unprogrammed default
  6801                           ;	Table Read Protection Block 3
  6802                           ;	EBTR3 = 0x1, unprogrammed default
  6803                           ;	Table Read Protection Block 4
  6804                           ;	EBTR4 = 0x1, unprogrammed default
  6805                           ;	Table Read Protection Block 5
  6806                           ;	EBTR5 = 0x1, unprogrammed default
  6807                           ;	Table Read Protection Block 6
  6808                           ;	EBTR6 = 0x1, unprogrammed default
  6809                           ;	Table Read Protection Block 7
  6810                           ;	EBTR7 = 0x1, unprogrammed default
  6811   30000A                     	org	3145738
  6812   30000A  FF                 	db	255
  6813                           
  6814                           ;Config register CONFIG6H @ 0x30000B
  6815                           ;	unspecified, using default values
  6816                           ;	Boot Block Table Read Protection bit
  6817                           ;	EBTRB = 0x1, unprogrammed default
  6818   30000B                     	org	3145739
  6819   30000B  FF                 	db	255
  6820                           tosu	equ	0xFFF
  6821                           tosh	equ	0xFFE
  6822                           tosl	equ	0xFFD
  6823                           stkptr	equ	0xFFC
  6824                           pclatu	equ	0xFFB
  6825                           pclath	equ	0xFFA
  6826                           pcl	equ	0xFF9
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           indf0	equ	0xFEF
  6834                           postinc0	equ	0xFEE
  6835                           postdec0	equ	0xFED
  6836                           preinc0	equ	0xFEC
  6837                           plusw0	equ	0xFEB
  6838                           fsr0h	equ	0xFEA
  6839                           fsr0l	equ	0xFE9
  6840                           wreg	equ	0xFE8
  6841                           indf1	equ	0xFE7
  6842                           postinc1	equ	0xFE6
  6843                           postdec1	equ	0xFE5
  6844                           preinc1	equ	0xFE4
  6845                           plusw1	equ	0xFE3
  6846                           fsr1h	equ	0xFE2
  6847                           fsr1l	equ	0xFE1
  6848                           bsr	equ	0xFE0
  6849                           indf2	equ	0xFDF
  6850                           postinc2	equ	0xFDE
  6851                           postdec2	equ	0xFDD
  6852                           preinc2	equ	0xFDC
  6853                           plusw2	equ	0xFDB
  6854                           fsr2h	equ	0xFDA
  6855                           fsr2l	equ	0xFD9
  6856                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     50      86
    BANK0           160     64     146
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_response@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2560$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2560$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), motor_response@mR(COMRAM[2]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), motor_response@mL(COMRAM[2]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), motor_response@mR(COMRAM[2]), motor_response@mL(COMRAM[2]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_retrace->_reverse
    _reverse->_setMotorPWM
    _motor_response->_fullSpeedAhead
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_motor_retrace

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               160   160      0   61360
                                             48 COMRAM     2     2      0
                                             14 BANK0     50    50      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                       22    16      6   21099
                                             32 COMRAM     8     2      6
                                              0 BANK0     14    14      0
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    4117
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      16    10      6   21730
                                             32 COMRAM    16    10      6
                             ___flge
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4589
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             4     0      4    4409
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5905
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4117
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3261
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1162
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _fullSpeedAhead
     _norm_stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _motor_retrace
     _norm_stop
     _reverse
       _setMotorPWM
     _turnLeft
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      92       5       91.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     32      56       1       91.5%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      61        0.0%
DATA                 0      0      E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 14:18:38 2022

                            _color_read_Red 27D8                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 2466  
                              ___fldiv@sign 0019                             _color_read_Blue 28C8  
                                        l83 29CE                                          l92 2876  
                                        l86 2B46                                          l95 2916  
                                        l89 2826                                          l98 28C6  
                           ??_motor_retrace 0027                         ___wmul@multiplicand 000B  
                          _color_read_Clear 2878                            _color_read_Green 2828  
                         ??_Interrupts_init 0009                                         l104 252A  
                                       l201 2C00                                         l113 2BB0  
                                       l210 299A                                         l107 217E  
                                       l204 2C0A                                         l207 2BDE  
                                       l119 17F6                                         l162 1356  
                                       l192 2AB2                                         l195 2AD8  
                                       l603 2464                                         l611 237A  
                                       l460 2B80                                         l189 2A5C  
                                       l198 2C14                                         l614 2B26  
                                       l606 231A                                         l463 2A86  
                                       l457 2BC6                                         l562 25AA  
                                       l466 2BD2                                         l572 27D6  
                                       l575 276C                                         l592 2690  
                                       l569 202C                                         l586 2A00  
                                       l589 2702                                         l884 2282  
                                       l879 223C                            ??_motor_response 0027  
                                       _ctr 004F              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 2B9C                         i2_color_writetoaddr 2B48  
                                       wreg 000FE8                             _color_normalise 202E  
                                      l1112 261E                                        l1201 19B4  
                                      l1105 2616                                        l1210 1A9C  
                                      l1207 1A36                                        l1209 1AAE  
                                      l2300 2996                                        l3100 25EA  
                                      l2302 2998                                        l3102 2600  
                                      l3110 1EC2                                        l2232 2AB2  
                                      l1272 1D44                                        l3104 2608  
                                      l3120 1F8C                                        l3112 1EDE  
                                      l3200 2302                                        l2234 2AC2  
                                      l2330 2A46                                        l3106 260A  
                                      l3122 1FA8                                        l3114 1F32  
                                      l3130 2648                                        l3210 236E  
                                      l3202 230E                                        l1283 1CDC  
                                      l2332 2A48                                        l2324 2A34  
                                      l2500 191A                                        l1196 1B90  
                                      l1276 1C80                                        l2340 281E  
                                      l3108 2610                                        l3124 1FEC  
                                      l3116 1F46                                        l3140 29D0  
                                      l3132 2658                                        l3300 177C  
                                      l3220 139E                                        l3212 1358  
                                      l3204 2332                                        l1269 1BE8  
                                      l2334 2A4A                                        l2326 2A3E  
                                      l1198 19F0                                        l2510 1958  
                                      l2502 191A                                        l2350 28C8  
                                      l3118 1F88                                        l3142 29E8  
                                      l3150 26BA                                        l3134 2668  
                                      l3126 2620                                        l3302 1794  
                                      l3230 141C                                        l3222 13B2  
                                      l3214 1396                                        l3206 234A  
                                      l2280 2BD6                                        l2336 2B2A  
                                      l2328 2A44                                        l2520 19A4  
                                      l2512 1968                                        l2352 290E  
                                      l2344 2828                                        l2600 222A  
                                      l3160 237C                                        l3144 29F4  
                                      l3152 26CA                                        l3136 2678  
                                      l3128 2638                                        l3304 17C0  
                                      l3224 13CA                                        l3208 2362  
                                      l3400 119C                                        l3320 0E3E  
                                      l3312 0E18                                        l2282 2BDA  
                                      l2530 19EE                                        l2522 19B2  
                                      l2514 1978                                        l2506 192E  
                                      l2450 1804                                        l2610 1BA4  
                                      l2290 2BFC                                        l2346 286E  
                                      l2338 27D8                                        l2602 227A  
                                      l3090 25B4                                        l3082 2B02  
                                      l3170 23D8                                        l3162 2394  
                                      l3154 26DA                                        l3146 2692  
                                      l3138 2684                                        l3306 17E0  
                                      l3250 14FC                                        l3226 13F6  
                                      l3234 1420                                        l3402 11C8  
                                      l3330 0EDA                                        l3322 0E52  
                                      l3314 0E34                                        l2276 2C0C  
                                      l2284 2C02                                        l2540 1A34  
                                      l2532 1A00                                        l2524 19BE  
                                      l2516 1980                                        l2508 1948  
                                      l2460 1844                                        l2452 1812  
                                      l2620 1C22                                        l2612 1BB2  
                                      l2292 295C                                        l2356 2878  
                                      l2604 2280                                        l3092 25C6  
                                      l3084 2B1E                                        l3180 2434  
                                      l3172 23EC                                        l3164 23A4  
                                      l3156 26EA                                        l3148 26AA  
                                      l3308 17F4                                        l3260 1560  
                                      l3252 151C                                        l3244 14A4  
                                      l3236 145E                                        l3228 1416  
                                      l3412 1216                                        l3420 1294  
                                      l3404 11EE                                        l3340 0F10  
                                      l3324 0E6A                                        l3500 1E8A  
                                      l2278 2C10                                        l2286 2C06  
                                      l2550 1A94                                        l2534 1A16  
                                      l2542 1A46                                        l2526 19DC  
                                      l2518 1990                                        l2470 186A  
                                      l2462 1846                                        l2454 1814  
                                      l2630 1C76                                        l2622 1C2A  
                                      l2614 1BF8                                        l2294 2960  
                                      l2358 28BE                                        l3094 25CE  
                                      l3182 244C                                        l3174 23F8  
                                      l3166 23B4                                        l3158 26F6  
                                      l3270 1696                                        l3262 159E  
                                      l3246 14B8                                        l3238 149C  
                                      l3190 22AC                                        l3430 12D0  
                                      l3422 12B2                                        l3414 122A  
                                      l3406 120C                                        l3342 0F3C  
                                      l3326 0E96                                        l3502 1E92  
                                      l2560 1B02                                        l2544 1A54  
                                      l2536 1A1C                                        l2528 19DE  
                                      l2480 18AA                                        l2472 1878  
                                      l2456 1824                                        l2464 184E  
                                      l2448 17F8                                        l2640 1CEC  
                                      l2632 1CB2                                        l2624 1C36  
                                      l2616 1C0E                                        l2608 1B94  
                                      l2296 2968                                        l2288 2BF8  
                                      l3096 25D6                                        l3088 25AC  
                                      l3184 2458                                        l3176 2404  
                                      l3168 23C4                                        l3280 16CA  
                                      l3264 15DC                                        l3248 14D0  
                                      l3192 22BC                                        l3440 1350  
                                      l3432 12E8                                        l3416 1242  
                                      l3352 0F8A                                        l3360 1008  
                                      l3336 0EE4                                        l3344 0F62  
                                      l3328 0EBC                                        l3504 1EAE  
                                      l2570 1B6C                                        l2554 1ABE  
                                      l2562 1B06                                        l2546 1A58  
                                      l2538 1A26                                        l2490 18EA  
                                      l2482 18AC                                        l2474 187A  
                                      l2466 185E                                        l2458 1834  
                                      l2650 1D34                                        l2642 1CF0  
                                      l2634 1CBE                                        l2626 1C68  
                                      l2298 2970                                        l3098 25E4  
                                      l3178 241C                                        l3282 16F6  
                                      l3266 161A                                        l3290 171C  
                                      l3258 1522                                        l3194 22CC  
                                      l3186 2284                                        l3434 1314  
                                      l3418 126E                                        l3362 1026  
                                      l3354 0F9E                                        l3346 0F80  
                                      l3338 0EF8                                        l3506 1EB0  
                                      l3450 1D7A                                        l3442 1D46  
                                      l2572 1B70                                        l2564 1B20  
                                      l2556 1ACA                                        l2548 1A66  
                                      l2492 18F2                                        l2476 188A  
                                      l2484 18B4                                        l2468 1864  
                                      l2644 1D14                                        l2636 1CCC  
                                      l2628 1C6A                                        l3292 175A  
                                      l3284 1716                                        l3276 169E  
                                      l3268 1658                                        l3196 22E0  
                                      l3188 229C                                        l3428 12BC  
                                      l3380 10D6                                        l3364 103A  
                                      l3356 0FB6                                        l3436 1336  
                                      l3460 1D98                                        l3452 1D86  
                                      l3444 1D4A                                        l2910 2B68  
                                      l2670 29C4                                        l2662 299C  
                                      l2574 1B7E                                        l2566 1B36  
                                      l2558 1AD8                                        l2494 18F6  
                                      l2486 18C4                                        l2478 189A  
                                      l2646 1D24                                        l2638 1CEA  
                                      l2590 21BE                                        l3278 16B2  
                                      l3198 22F4                                        l3438 133C  
                                      l3390 1166                                        l3374 107E  
                                      l3366 1048                                        l3382 10FC  
                                      l3358 0FE2                                        l3470 1DA2  
                                      l3462 1D9A                                        l3454 1D92  
                                      l3446 1D4E                                        l2912 2B72  
                                      l2664 29A0                                        l2576 1B84  
                                      l2568 1B50                                        l2488 18DA  
                                      l2648 1D32                                        l2672 2466  
                                      l2920 2556                                        l2592 21EC  
                                      l3384 111A                                        l3376 1092  
                                      l3368 1074                                        l3480 1DB8  
                                      l3472 1DA6                                        l3464 1D9C  
                                      l3456 1D94                                        l3448 1D6E  
                                      l2914 2A5E                                        l2666 29AA  
                                      l2578 1B86                                        l2498 190A  
                                      l2674 202E                                        l2930 2592  
                                      l2922 257A                                        l2594 21FC  
                                      l2586 2180                                        l3298 1768  
                                      l3386 112E                                        l3378 10AA  
                                      l3490 1E0E                                        l3482 1DCC  
                                      l3474 1DAA                                        l3466 1D9E  
                                      l3458 1D96                                        l2908 2BB2  
                                      l2668 29BA                                        l2932 259C  
                                      l2924 2584                                        l2940 277A  
                                      l2596 220A                                        l2588 21AE  
                                      l3396 1170                                        l3388 113C  
                                      l2916 2BC8                                        l2676 2B9C  
                                      l3492 1E1A                                        l3484 1DE0  
                                      l3476 1DAE                                        l3468 1DA0  
                                      l2934 259E                                        l2926 2586  
                                      l2918 252C                                        l2942 278A  
                                      l2950 2704                                        l2598 221C  
                                      l3398 1184                                        l3494 1E26  
                                      l3486 1DF4                                        l3478 1DB2  
                                      l2936 25A8                                        l2928 2590  
                                      l2944 279A                                        l2960 2758  
                                      l2952 2710                                        l3496 1E38  
                                      l3488 1E0C                                        l2946 27AE  
                                      l2938 276E                                        l2954 2720  
                                      l3498 1E5C                                        l2948 27C2  
                                      l2956 2730                                        l2958 2744  
                                      STR_1 0E01                                        u1030 2AC2  
                                      u1031 2ABE                                        u1040 2AD8  
                                      u1200 188A                                        u2000 2332  
                                      u1041 2AD4                                        u1201 1886  
                                      u2001 232E                                        u1210 189A  
                                      u2010 234A                                        u1211 1896  
                                      u2011 2346                                        u1300 1A54  
                                      u1220 18DA                                        u2100 161A  
                                      u2020 1396                                        u1301 1A50  
                                      u1221 18D6                                        u2101 1616  
                                      u2021 1392                                        u1310 1A66  
                                      u1230 191A                                        u2110 1658  
                                      u2030 1416                                        u1311 1A62  
                                      u1231 1916                                        u2111 1654  
                                      u2031 1412                                        u1320 1A94  
                                      u1240 1990                                        u1160 1812  
                                      u1080 2984                                        u1400 21EC  
                                      u2120 1696                                        u2040 145E  
                                      u2200 0F80                                        u1321 1A90  
                                      u1241 198C                                        u1161 180E  
                                      u1081 297C                                        u1401 21E8  
                                      u2121 1692                                        u2041 145A  
                                      u2201 0F7C                                        u1330 1AAA  
                                      u1250 19B2                                        u1170 1824  
                                      u1410 220A                                        u2130 1716  
                                      u2050 149C                                        u2210 1004  
                                      u1331 1AA6                                        u1251 19AE  
                                      u1171 1820                                        u1411 2206  
                                      u2131 1712                                        u2051 1498  
                                      u2211 1000                                        u1340 1ABE  
                                      u1260 19DC                                        u1180 1834  
                                      u1500 1CDC                                        u1420 222A  
                                      u2140 175A                                        u2060 151C  
                                      u2300 1350                                        u2220 1026  
                                      u1341 1ABA                                        u1261 19D8  
                                      u1181 1830                                        u1501 1CD8  
                                      u1421 2226                                        u2141 1756  
                                      u2061 1518                                        u2301 134C  
                                      u2221 1022                                        u1350 1AD8  
                                      u1270 1A00                                        u1190 1878  
                                      u1510 1CEA                                        u1430 227A  
                                      u2150 17E0                                        u2070 1560  
                                      u2230 10F8                                        u2310 1DE0  
                                      u1351 1AD4                                        u1271 19FC  
                                      u1191 1874                                        u1511 1CE6  
                                      u1431 2276                                        u2151 17DC  
                                      u2071 155C                                        u2231 10F4  
                                      u2311 1DDC                                        u1360 1B20  
                                      u1280 1A16                                        u1520 1D24  
                                      u1440 1BA4                                        u2080 159E  
                                      u2240 111A                                        u2160 0E34  
                                      u2320 1E38                                _BAUD4CONbits 000EE9  
                                      u1361 1B1C                                        u1281 1A12  
                                      u1521 1D20                                        u1441 1BA0  
                                      u2081 159A                                        u2241 1116  
                                      u2161 0E30                                        u2321 1E34  
                                      u1370 1B50                                        u1290 1A34  
                                      u1530 1D32                                        u1450 1BB2  
                                      u1098 2986                                        u2090 15DC  
                                      u2250 11EA                                        u2170 0EB8  
                                      u2330 1E4A                                        u1371 1B4C  
                                      u1291 1A30                                        u1531 1D2E  
                                      u1451 1BAE                                        u2091 15D8  
                                      u2251 11E6                                        u2171 0EB4  
                                      u2331 1E42                                        u1380 1B7E  
                                      u1460 1C0E                                        u2260 120C  
                                      u2180 0EDA                                        u1381 1B7A  
                                      u1461 1C0A                                        u2261 1208  
                                      u2181 0ED6                                        u1470 1C64  
                                      u1390 21AE                                        u2270 1290  
                                      u2190 0F5E                                        u1471 1C60  
                                      u1391 21AA                                        u2271 128C  
                                      u2191 0F5A                                        u2407 0F02  
                                      u1480 1CAE                                        u2280 12B2  
                                      u1481 1CAA                                        u2281 12AE  
                                      u2417 0F2E                                        u1490 1CCC  
                                      u2290 1336                                        _T2PR 000FBC  
                                      u1491 1CC8                                        u2291 1332  
                                      u2507 118E                                        u2427 0FA8  
                                      u2348 1E4C                                        u2517 11BA  
                                      u2437 0FD4                                        u2607 14EE  
                                      u2527 1234                                        u2447 1040  
                                      u2617 16BC                                        u2537 1260  
                                      u2457 1066                                        u2377 1DFE  
                                      u1930 25C6                                        u1931 25C2  
                                      u2627 16E8                                        u2547 12DA  
                                      u2467 109C                                        u2387 0E5C  
                                      u1940 25E4                                        u1941 25E0  
                                      u2637 1786                                        u2557 1306  
                                      u2477 10C8                                        u2397 0E88  
                                      u1950 2600                                        u1951 25FC  
                                      u2647 17B2                                        u2567 22FA  
                                      u2487 1134                                        u1960 1EDE  
                                      u2657 29B0                                        u1961 1EDA  
                                      u2577 13BC                                        u2497 115A  
                                      u1970 1FA8                                        u2667 2B78  
                                      u1971 1FA4                                        u2587 13E8  
                                      u1980 241C                                        u1981 2418  
                                      u2597 14C2                                        u1990 2434  
                                      u1991 2430                                        i2l86 2B66  
                                      _main 1D46                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 0057                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0032  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 001A  
                    __end_of_color_read_Red 2828                             __end_of_HighISR 0032  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___fldiv 1B92                             __end_of___lwdiv 2620  
                                     i2l204 2C1E                                       i2l207 2BF6  
                                     i2l192 2ADA                                       i2l195 2B00  
                                     i2l460 2B9A                                       i2l198 2C28  
                                     i2l463 2AB0                                       i2l466 2BEA  
                                     i2l475 002E                                       i2l469 2A32  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 2C16                  __end_of_I2C_2_Master_Write 2BE0  
                                     tablat 000FF5                       _Color_Interrupts_init 2B68  
                           __end_of_reverse 237C                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 252C                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 2918                       _I2C_2_Master_RepStart 2BF8  
                           ?_color_read_Red 000D                             __initialization 2918  
                              __end_of_main 1EC2                 ?_Color_Interrupts_threshold 000D  
                                    ??_main 0031                               __activetblptr 000001  
                   __end_of_color_normalise 2180                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l2230 2AEA  
                                    i2l2322 2B4A                                      i2l2228 2ADA  
                                    i2l3060 001C                                      i2l2270 2C1A  
                                    i2l3062 0026                                      i2l2264 2C20  
                                    i2l2272 2BEE                                      i2l3064 002A  
                                    i2l3056 000A                                      i2l2266 2C24  
                                    i2l2274 2BF2                                      i2l3058 001A  
                                    i2l2268 2C16                                      i2l2660 2BE0  
                                    i2l2654 2B82                                      i2l2656 2B8C  
                                    i2l2658 2A88                                      i2l2970 2A02  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 29D0                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 1D46  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 2BD4                                _CCPTMRS0bits 000FAD  
                                    ___flge 2180                                      ___wmul 2B02  
                                 ??___fldiv 0011                                   ??___lwdiv 0013  
                                    clear_0 2936                                      clear_1 2942  
                                    isa$std 000001                                      main@mL 00DE  
                                    main@mR 00E7                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 2A02                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 2704  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 2948                    __end_of_color_read_Clear 28C8  
                  __end_of_color_read_Green 2878                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 2BB2  
                        motor_retrace@j_510 00B2                          motor_retrace@j_511 00B4  
                        motor_retrace@j_512 00B6                          motor_retrace@j_513 00B8  
                        motor_retrace@j_514 00BA                          motor_retrace@j_515 00BC  
                            __pcstackCOMRAM 0001                                __pidataBANK0 2C2A  
            __end_ofi2_persistence_register 2BEC                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 2B82  
                                __pbssBANK0 0060                           _color_writetoaddr 2B28  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0023  
                          motor_response@mR 0025                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0021                       __end_of_motor_retrace 1358  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 2BC8                                  _buggy_path 00A1  
                   __end_of_Interrupts_init 2BC8                              _lowerThreshold 009C  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 2B48  
                        _I2C_2_Master_Start 2C0C                         i2_I2C_2_Master_Idle 2ADA  
                        _I2C_2_Master_Write 2BD4                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 2C16                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fldiv 17F8  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 25AC  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 004D                                     __pcinit 2918  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                   __ptext0 1D46                                     __ptext1 2B9C  
                                   __ptext2 2BC8                                     __ptext3 0E18  
                                   __ptext4 2284                                     __ptext5 1358  
                                   __ptext6 2620                                     __ptext7 2692  
                                   __ptext8 29D0                                     __ptext9 237C  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00F0                                     _reverse 2284  
                             _RxBufWriteCnt 0056                       ?_persistence_register 0001  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 2948                 __end_ofi2_color_writetoaddr 2B68  
                         ?_color_click_init 0001                           __end_of_norm_stop 2A02  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 276E                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 2704  
                             _interrupt_ctr 0051                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 252C                                  ??_turnLeft 0020  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 2692  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 0033  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 2A34  
                            __end_of___flge 2284                              _fullSpeedAhead 237C  
                            __end_of___wmul 2B28                         color_read_Clear@tmp 0012  
                       start_initialization 2918                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 25AC                      __end_of_fullSpeedAhead 2466  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022                                 __pdataBANK0 00F0  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 2C2A  
              __end_ofi2_I2C_2_Master_Write 2BF8                                   ___fldiv@a 000D  
                                 ___fldiv@b 0009                                 __pbssCOMRAM 0033  
                             __pcstackBANK0 00B0                              _motor_response 1358  
                                  ?_HighISR 0001                                   _amb_clear 0047  
                                 _amb_green 004B                             motor_retrace@mL 0023  
                           motor_retrace@mR 0025                            ___lwdiv@dividend 000F  
                           motor_response@j 0029                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fldiv 0009  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                         motor_response@j_502 002B  
                       motor_response@j_503 002D                         motor_response@j_504 002F  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 2AB2                           _I2C_2_Master_Init 2A34  
                         _I2C_2_Master_Read 295A                           _I2C_2_Master_Stop 2C02  
                              _RxBufReadCnt 0055                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0014  
                    __end_of_motor_response 17F8                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                                  i2u101_40 2AEA                                    i2u101_41 2AE6  
                                  i2u102_40 2B00                                    i2u102_41 2AFC  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u190_40 001A                                    i2u190_41 0016  
                                  _PIR0bits 000E33                                    i2u267_47 2B92  
                                  _PIR4bits 000E37                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 29D0  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 2ADA                   __end_of_I2C_2_Master_Init 2A5E  
                 __end_of_I2C_2_Master_Read 299C                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 2C0C                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0053  
                  i2color_writetoaddr@value 0003                                   _turnRight 2620  
             __end_of_Color_Interrupts_init 2B82                             ?_motor_response 0021  
             __end_of_I2C_2_Master_RepStart 2C02                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 202E                        i2_I2C_2_Master_Start 2C20  
                      i2_I2C_2_Master_Write 2BEC                                    __Hrparam 0000  
                   motor_retrace@buggy_path 0021                           ??_color_normalise 0024  
                                  __Lrparam 0000                                __Lsmallconst 0E00  
                                ?_norm_stop 001C        __end_ofi2_Color_Interrupts_threshold 2AB2  
              i2_Color_Interrupts_threshold 2A88                 __end_ofi2_I2C_2_Master_Idle 2B02  
               __end_ofi2_I2C_2_Master_Stop 2C20                    ?i2_Color_Interrupts_init 0001  
                                _ANSELBbits 000E9A                                  _ANSELDbits 000EA7  
                             _motor_retrace 0E18                               ??_tricolorLED 0009  
                                  _amb_blue 0049                                    ___xxtofl 1B92  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                            motor_retrace@j 00B0                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0013                                  ?_turnRight 001C  
                                  __ptext10 1EC2                                    __ptext11 2B02  
                                  __ptext20 2878                                    __ptext12 25AC  
                                  __ptext21 28C8                                    __ptext13 2180  
                                  __ptext30 2A5E                                    __ptext22 2BF8  
                                  __ptext14 2704                                    __ptext31 2B68  
                                  __ptext23 295A                                    __ptext15 276E  
                                  __ptext40 2A88                                    __ptext32 2B28  
                                  __ptext24 1B92                                    __ptext16 252C  
                                  __ptext41 2B82                                    __ptext33 2BD4  
                                  __ptext25 202E                                    __ptext17 2466  
                                  __ptext42 2B48                                    __ptext34 2C02  
                                  __ptext26 17F8                                    __ptext18 27D8  
                                  __ptext43 2BEC                                    __ptext35 2C0C  
                                  __ptext27 299C                                    __ptext19 2828  
                                  __ptext44 2C16                                    __ptext36 2AB2  
                                  __ptext28 2A34                                    __ptext45 2C20  
                                  __ptext29 2BB2                                    __ptext46 2ADA  
                                  __ptext38 2A02                                    __ptext39 2BE0  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 00BE                                    int$flags 0057  
        __end_of_Color_Interrupts_threshold 2A88               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 2A5E                                    _turnLeft 2692  
                            ?_motor_retrace 0021                                  _INTCONbits 000FF2  
                               _setMotorPWM 1EC2                                motorLinit@mL 0009  
                       __end_of_tricolorLED 2BB2                                    intlevel2 0000  
                              _motor_return 00A0                          __end_of_motorLinit 27D8  
                        __end_of_motorRinit 276E                                motorRinit@mR 0009  
                          ??_fullSpeedAhead 0020                                 ??_norm_stop 0020  
           __end_ofi2_Color_Interrupts_init 2B9C                            _color_click_init 299C  
                                _SSP2DATPPS 000E1D                                  _SSP2CLKPPS 000E1C  
                            _interrupt_flag 009E                      i2_persistence_register 2BE0  
                               ??_turnRight 0020                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                      ??i2_I2C_2_Master_Write 0002  
                  ??_Color_Interrupts_clear 0009  
