

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 11:47:57 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 06/04/2022 GMT
    57                           ; 
    58                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TRISBbits	set	3970
    91   000000                     _TX4REG	set	3812
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _LATHbits	set	3968
    95   000000                     _TRISCbits	set	3971
    96   000000                     _TRISDbits	set	3972
    97   000000                     _TRISEbits	set	3973
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISAbits	set	3969
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _RX4PPS	set	3605
   102   000000                     _SSP2CLKPPS	set	3612
   103   000000                     _SSP2DATPPS	set	3613
   104   000000                     _ANSELDbits	set	3751
   105   000000                     _SSP2ADD	set	3798
   106   000000                     _SSP2CON1bits	set	3801
   107   000000                     _LATAbits	set	3961
   108   000000                     _LATGbits	set	3967
   109   000000                     _TRISGbits	set	3975
   110   000000                     _T2PR	set	4028
   111   000000                     _T2CONbits	set	4029
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _T0CON0bits	set	4053
   115   000000                     _T0CON1bits	set	4054
   116   000000                     _INTCONbits	set	4082
   117   000000                     _TRISHbits	set	3976
   118   000000                     _CCPR2H	set	4006
   119   000000                     _CCPR1H	set	4010
   120   000000                     _LATDbits	set	3964
   121   000000                     _LATEbits	set	3965
   122   000000                     _LATFbits	set	3966
   123   000000                     _RC4REG	set	3811
   124   000000                     _SP4BRGL	set	3813
   125   000000                     _TX4STAbits	set	3816
   126   000000                     _BAUD4CONbits	set	3817
   127   000000                     _SSP2CON2	set	3802
   128   000000                     _SSP2STAT	set	3800
   129   000000                     _SSP2BUF	set	3797
   130   000000                     _IPR0bits	set	3615
   131   000000                     _PIE0bits	set	3625
   132   000000                     _PIE4bits	set	3629
   133   000000                     _RC0PPS	set	3682
   134   000000                     _RD5PPS	set	3695
   135   000000                     _RE2PPS	set	3700
   136   000000                     _ANSELBbits	set	3738
   137   000000                     _RD6PPS	set	3696
   138   000000                     _RC7PPS	set	3689
   139   000000                     _CCPR4H	set	3873
   140   000000                     _CCPR3H	set	3877
   141   000000                     _PIR0bits	set	3635
   142   000000                     _PIR4bits	set	3639
   143   000000                     _RE4PPS	set	3702
   144   000000                     _RG6PPS	set	3720
   145   000000                     _T2CLKCONbits	set	4031
   146   000000                     _T2HLTbits	set	4030
   147   000000                     _CCP1CONbits	set	4011
   148   000000                     _CCPTMRS0bits	set	4013
   149   000000                     _CCP2CONbits	set	4007
   150   000000                     _CCP3CONbits	set	3878
   151   000000                     _CCP4CONbits	set	3874
   152                           
   153                           	psect	smallconst
   154   000E00                     __psmallconst:
   155                           	callstack 0
   156   000E00  00                 	db	0
   157   000E01                     
   158                           ; BSR set to: 14
   159   000E01  52                 	db	82	;'R'
   160   000E02  47                 	db	71	;'G'
   161   000E03  42                 	db	66	;'B'
   162   000E04  43                 	db	67	;'C'
   163   000E05  3A                 	db	58	;':'
   164   000E06  25                 	db	37
   165   000E07  69                 	db	105	;'i'
   166   000E08  20                 	db	32
   167   000E09  25                 	db	37
   168   000E0A  69                 	db	105	;'i'
   169   000E0B  20                 	db	32
   170   000E0C  25                 	db	37
   171   000E0D  69                 	db	105	;'i'
   172   000E0E  20                 	db	32
   173   000E0F  25                 	db	37
   174   000E10  69                 	db	105	;'i'
   175   000E11  0A                 	db	10
   176   000E12  00                 	db	0
   177   000E13  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   0016B0                     __pcinit:
   183                           	callstack 0
   184   0016B0                     start_initialization:
   185                           	callstack 0
   186   0016B0                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK0 (80 bytes)
   190   0016B0  EE00  F060         	lfsr	0,__pbssBANK0
   191   0016B4  0E50               	movlw	80
   192   0016B6                     clear_0:
   193   0016B6  6AEE               	clrf	postinc0,c
   194   0016B8  06E8               	decf	wreg,f,c
   195   0016BA  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (8 bytes)
   198   0016BC  EE00  F044         	lfsr	0,__pbssCOMRAM
   199   0016C0  0E08               	movlw	8
   200   0016C2                     clear_1:
   201   0016C2  6AEE               	clrf	postinc0,c
   202   0016C4  06E8               	decf	wreg,f,c
   203   0016C6  E1FD               	bnz	clear_1
   204   0016C8                     end_of_initialization:
   205                           	callstack 0
   206   0016C8                     __end_of__initialization:
   207                           	callstack 0
   208   0016C8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   0016CA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   0016CC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   211   0016CE  6EF8               	movwf	tblptru,c
   212   0016D0  0E0E               	movlw	high __Lsmallconst
   213   0016D2  6EF7               	movwf	tblptrh,c
   214   0016D4  0100               	movlb	0
   215   0016D6  EFC0  F007         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218   000044                     __pbssCOMRAM:
   219                           	callstack 0
   220   000044                     _interrupt_ctr:
   221                           	callstack 0
   222   000044                     	ds	2
   223   000046                     _interrupt_flag:
   224                           	callstack 0
   225   000046                     	ds	2
   226   000048                     _TxBufReadCnt:
   227                           	callstack 0
   228   000048                     	ds	1
   229   000049                     _TxBufWriteCnt:
   230                           	callstack 0
   231   000049                     	ds	1
   232   00004A                     _RxBufReadCnt:
   233                           	callstack 0
   234   00004A                     	ds	1
   235   00004B                     _RxBufWriteCnt:
   236                           	callstack 0
   237   00004B                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240   000060                     __pbssBANK0:
   241                           	callstack 0
   242   000060                     _EUSART4TXbuf:
   243                           	callstack 0
   244   000060                     	ds	60
   245   00009C                     _EUSART4RXbuf:
   246                           	callstack 0
   247   00009C                     	ds	20
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??i2_I2C_2_Master_Idle:
   253   000001                     
   254                           ; 1 bytes @ 0x0
   255   000001                     	ds	1
   256   000002                     i2I2C_2_Master_Write@data_byte:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260   000002                     	ds	1
   261   000003                     i2color_writetoaddr@value:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265   000003                     	ds	1
   266   000004                     i2color_writetoaddr@address:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x3
   270   000004                     	ds	1
   271   000005                     ??i2_Color_Interrupts_init:
   272   000005                     i2Color_Interrupts_threshold@upperThreshold:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276   000005                     	ds	2
   277   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x6
   281   000007                     	ds	2
   282   000009                     ??_I2C_2_Master_Idle:
   283   000009                     ?___wmul:
   284                           	callstack 0
   285   000009                     initDCmotorsPWM@PWMperiod:
   286                           	callstack 0
   287   000009                     motorLinit@mL:
   288                           	callstack 0
   289   000009                     motorRinit@mR:
   290                           	callstack 0
   291   000009                     ___wmul@multiplier:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x8
   295   000009                     	ds	1
   296   00000A                     ??_I2C_2_Master_Read:
   297   00000A                     I2C_2_Master_Write@data_byte:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x9
   301   00000A                     	ds	1
   302   00000B                     color_writetoaddr@value:
   303                           	callstack 0
   304   00000B                     I2C_2_Master_Read@ack:
   305                           	callstack 0
   306   00000B                     ___wmul@multiplicand:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xA
   310   00000B                     	ds	1
   311   00000C                     color_writetoaddr@address:
   312                           	callstack 0
   313   00000C                     I2C_2_Master_Read@tmp:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xB
   317   00000C                     	ds	1
   318   00000D                     ??_Color_Interrupts_init:
   319   00000D                     ??_color_click_init:
   320   00000D                     ?_color_read_Red:
   321                           	callstack 0
   322   00000D                     ?_color_read_Green:
   323                           	callstack 0
   324   00000D                     ?_color_read_Blue:
   325                           	callstack 0
   326   00000D                     ?_color_read_Clear:
   327                           	callstack 0
   328   00000D                     Color_Interrupts_threshold@upperThreshold:
   329                           	callstack 0
   330   00000D                     ___wmul@product:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xC
   334   00000D                     	ds	2
   335   00000F                     ??_color_read_Red:
   336   00000F                     ??_color_read_Green:
   337   00000F                     ??_color_read_Blue:
   338   00000F                     ??_color_read_Clear:
   339   00000F                     ?___lwdiv:
   340                           	callstack 0
   341   00000F                     Color_Interrupts_threshold@lowerThreshold:
   342                           	callstack 0
   343   00000F                     ___lwdiv@dividend:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xE
   347   00000F                     	ds	2
   348   000011                     ___lwdiv@divisor:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x10
   352   000011                     	ds	1
   353   000012                     color_read_Red@tmp:
   354                           	callstack 0
   355   000012                     color_read_Green@tmp:
   356                           	callstack 0
   357   000012                     color_read_Blue@tmp:
   358                           	callstack 0
   359   000012                     color_read_Clear@tmp:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x11
   363   000012                     	ds	1
   364   000013                     ___lwdiv@quotient:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x12
   368   000013                     	ds	1
   369   000014                     color_read_RGBC@temp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x13
   373   000014                     	ds	1
   374   000015                     ___lwdiv@counter:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x14
   378   000015                     	ds	1
   379   000016                     setMotorPWM@m:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x15
   383   000016                     	ds	2
   384   000018                     ??_setMotorPWM:
   385                           
   386                           ; 1 bytes @ 0x17
   387   000018                     	ds	2
   388   00001A                     setMotorPWM@posDuty:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392   00001A                     	ds	1
   393   00001B                     setMotorPWM@negDuty:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397   00001B                     	ds	1
   398   00001C                     norm_stop@mL:
   399                           	callstack 0
   400   00001C                     turnRight@mL:
   401                           	callstack 0
   402   00001C                     fullSpeedAhead@mL:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x1B
   406   00001C                     	ds	2
   407   00001E                     norm_stop@mR:
   408                           	callstack 0
   409   00001E                     turnRight@mR:
   410                           	callstack 0
   411   00001E                     fullSpeedAhead@mR:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1D
   415   00001E                     	ds	2
   416   000020                     motor_response@temp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1F
   420   000020                     	ds	2
   421   000022                     motor_response@L:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x21
   425   000022                     	ds	2
   426   000024                     motor_response@R:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x23
   430   000024                     	ds	2
   431   000026                     ??_motor_response:
   432                           
   433                           ; 1 bytes @ 0x25
   434   000026                     	ds	2
   435   000028                     ??_main:
   436                           
   437                           ; 1 bytes @ 0x27
   438   000028                     	ds	2
   439   00002A                     main@RGBC:
   440                           	callstack 0
   441                           
   442                           ; 8 bytes @ 0x29
   443   00002A                     	ds	8
   444   000032                     main@mL:
   445                           	callstack 0
   446                           
   447                           ; 9 bytes @ 0x31
   448   000032                     	ds	9
   449   00003B                     main@mR:
   450                           	callstack 0
   451                           
   452                           ; 9 bytes @ 0x3A
   453   00003B                     	ds	9
   454                           
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 21 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  buf           100    0        unsigned char [100]
   465 ;;  mR              9   58[COMRAM] struct DC_motor
   466 ;;  mL              9   49[COMRAM] struct DC_motor
   467 ;;  RGBC            8   41[COMRAM] struct RGBC_val
   468 ;;  lowerThresho    2    0        int 
   469 ;;  upperThresho    2    0        int 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   482 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   483 ;;Total ram usage:       28 bytes
   484 ;; Hardware stack levels required when called: 10
   485 ;; This function calls:
   486 ;;		_Color_Interrupts_init
   487 ;;		_Color_Interrupts_threshold
   488 ;;		_Interrupts_init
   489 ;;		_color_click_init
   490 ;;		_color_read_RGBC
   491 ;;		_fullSpeedAhead
   492 ;;		_initDCmotorsPWM
   493 ;;		_motorLinit
   494 ;;		_motorRinit
   495 ;;		_motor_response
   496 ;;		_norm_stop
   497 ;;		_persistence_register
   498 ;;		_tricolorLED
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text0
   505   000F80                     __ptext0:
   506                           	callstack 0
   507   000F80                     _main:
   508                           	callstack 21
   509   000F80                     
   510                           ;main.c: 23:     tricolorLED();
   511   000F80  EC21  F00C         	call	_tricolorLED	;wreg free
   512   000F84                     
   513                           ;main.c: 29:     color_click_init();
   514   000F84  EC0C  F00B         	call	_color_click_init	;wreg free
   515   000F88                     
   516                           ;main.c: 31:     Interrupts_init();
   517   000F88  EC2C  F00C         	call	_Interrupts_init	;wreg free
   518                           
   519                           ;main.c: 32:     Color_Interrupts_init();
   520   000F8C  EC07  F00C         	call	_Color_Interrupts_init	;wreg free
   521                           
   522                           ;main.c: 33:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   523   000F90  0E13               	movlw	19
   524   000F92  6E0E               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
   525   000F94  0E88               	movlw	136
   526   000F96  6E0D               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
   527   000F98  0E00               	movlw	0
   528   000F9A  6E10               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
   529   000F9C  0E00               	movlw	0
   530   000F9E  6E0F               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
   531   000FA0  EC82  F00B         	call	_Color_Interrupts_threshold	;wreg free
   532                           
   533                           ;main.c: 34:     persistence_register();
   534   000FA4  EC37  F00C         	call	_persistence_register	;wreg free
   535   000FA8                     
   536                           ;main.c: 36:     initDCmotorsPWM(200);
   537   000FA8  0E00               	movlw	0
   538   000FAA  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   539   000FAC  0EC8               	movlw	200
   540   000FAE  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   541   000FB0  ECFF  F008         	call	_initDCmotorsPWM	;wreg free
   542   000FB4                     
   543                           ;main.c: 37:     DC_motor mL, mR;;main.c: 38:     motorLinit(&mL);
   544   000FB4  0E32               	movlw	low main@mL
   545   000FB6  6E09               	movwf	motorLinit@mL^0,c
   546   000FB8  0E00               	movlw	high main@mL
   547   000FBA  6E0A               	movwf	(motorLinit@mL+1)^0,c
   548   000FBC  ECE7  F009         	call	_motorLinit	;wreg free
   549   000FC0                     
   550                           ;main.c: 39:     motorRinit(&mR);
   551   000FC0  0E3B               	movlw	low main@mR
   552   000FC2  6E09               	movwf	motorRinit@mR^0,c
   553   000FC4  0E00               	movlw	high main@mR
   554   000FC6  6E0A               	movwf	(motorRinit@mR+1)^0,c
   555   000FC8  ECB2  F009         	call	_motorRinit	;wreg free
   556   000FCC                     
   557                           ;main.c: 41:     TRISEbits.TRISE2 = 0;
   558   000FCC  9485               	bcf	133,2,c	;volatile
   559   000FCE                     
   560                           ;main.c: 42:     TRISEbits.TRISE4 = 0;
   561   000FCE  9885               	bcf	133,4,c	;volatile
   562   000FD0                     
   563                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   564   000FD0  9E83               	bcf	131,7,c	;volatile
   565   000FD2                     
   566                           ;main.c: 44:     TRISGbits.TRISG6 = 0;
   567   000FD2  9C87               	bcf	135,6,c	;volatile
   568   000FD4                     
   569                           ;main.c: 45:     TRISDbits.TRISD7 = 0;
   570   000FD4  9E84               	bcf	132,7,c	;volatile
   571   000FD6                     
   572                           ;main.c: 46:     LATDbits.LATD7 = 0;
   573   000FD6  9E7C               	bcf	124,7,c	;volatile
   574   000FD8                     
   575                           ;main.c: 47:     TRISHbits.TRISH3 = 0;
   576   000FD8  9688               	bcf	136,3,c	;volatile
   577   000FDA                     
   578                           ;main.c: 48:     LATHbits.LATH3 = 0;
   579   000FDA  9680               	bcf	128,3,c	;volatile
   580   000FDC                     l1884:
   581                           
   582                           ;main.c: 51:         fullSpeedAhead(&mL, &mR);
   583   000FDC  0E32               	movlw	low main@mL
   584   000FDE  6E1C               	movwf	fullSpeedAhead@mL^0,c
   585   000FE0  0E00               	movlw	high main@mL
   586   000FE2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   587   000FE4  0E3B               	movlw	low main@mR
   588   000FE6  6E1E               	movwf	fullSpeedAhead@mR^0,c
   589   000FE8  0E00               	movlw	high main@mR
   590   000FEA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   591   000FEC  EC36  F008         	call	_fullSpeedAhead	;wreg free
   592   000FF0                     
   593                           ;main.c: 53:         LATHbits.LATH3 = 1;
   594   000FF0  8680               	bsf	128,3,c	;volatile
   595   000FF2                     
   596                           ;main.c: 54:         if (interrupt_flag == 1 ) {
   597   000FF2  0446               	decf	_interrupt_flag^0,w,c
   598   000FF4  1047               	iorwf	(_interrupt_flag+1)^0,w,c
   599   000FF6  A4D8               	btfss	status,2,c
   600   000FF8  EF00  F008         	goto	u431
   601   000FFC  EF02  F008         	goto	u430
   602   001000                     u431:
   603   001000  EFEE  F007         	goto	l1884
   604   001004                     u430:
   605   001004                     
   606                           ;main.c: 56:             norm_stop(&mL, &mR);
   607   001004  0E32               	movlw	low main@mL
   608   001006  6E1C               	movwf	norm_stop@mL^0,c
   609   001008  0E00               	movlw	high main@mL
   610   00100A  6E1D               	movwf	(norm_stop@mL+1)^0,c
   611   00100C  0E3B               	movlw	low main@mR
   612   00100E  6E1E               	movwf	norm_stop@mR^0,c
   613   001010  0E00               	movlw	high main@mR
   614   001012  6E1F               	movwf	(norm_stop@mR+1)^0,c
   615   001014  EC26  F00B         	call	_norm_stop	;wreg free
   616   001018                     
   617                           ;main.c: 57:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   618   001018  0E52               	movlw	82
   619   00101A  6E29               	movwf	(??_main+1)^0,c
   620   00101C  0E2B               	movlw	43
   621   00101E  6E28               	movwf	??_main^0,c
   622   001020  0E00               	movlw	0
   623   001022                     u537:
   624   001022  2EE8               	decfsz	wreg,f,c
   625   001024  D7FE               	bra	u537
   626   001026  2E28               	decfsz	??_main^0,f,c
   627   001028  D7FC               	bra	u537
   628   00102A  2E29               	decfsz	(??_main+1)^0,f,c
   629   00102C  D7FA               	bra	u537
   630   00102E  D000               	nop2	
   631   001030                     
   632                           ;main.c: 58:             LATDbits.LATD7 = 0;
   633   001030  9E7C               	bcf	124,7,c	;volatile
   634   001032                     
   635                           ;main.c: 59:             color_read_RGBC(&RGBC);
   636   001032  0E2A               	movlw	low main@RGBC
   637   001034  6E14               	movwf	color_read_RGBC@temp^0,c
   638   001036  0E00               	movlw	high main@RGBC
   639   001038  6E15               	movwf	(color_read_RGBC@temp+1)^0,c
   640   00103A  EC1C  F00A         	call	_color_read_RGBC	;wreg free
   641   00103E                     
   642                           ;main.c: 60:             motor_response(&RGBC,&mL,&mR);
   643   00103E  0E2A               	movlw	low main@RGBC
   644   001040  6E20               	movwf	motor_response@temp^0,c
   645   001042  0E00               	movlw	high main@RGBC
   646   001044  6E21               	movwf	(motor_response@temp+1)^0,c
   647   001046  0E32               	movlw	low main@mL
   648   001048  6E22               	movwf	motor_response@L^0,c
   649   00104A  0E00               	movlw	high main@mL
   650   00104C  6E23               	movwf	(motor_response@L+1)^0,c
   651   00104E  0E3B               	movlw	low main@mR
   652   001050  6E24               	movwf	motor_response@R^0,c
   653   001052  0E00               	movlw	high main@mR
   654   001054  6E25               	movwf	(motor_response@R+1)^0,c
   655   001056  ECAB  F008         	call	_motor_response	;wreg free
   656   00105A                     
   657                           ;main.c: 61:             LATHbits.LATH3 = 0;
   658   00105A  9680               	bcf	128,3,c	;volatile
   659   00105C                     
   660                           ;main.c: 62:             interrupt_flag = 0;
   661   00105C  0E00               	movlw	0
   662   00105E  6E47               	movwf	(_interrupt_flag+1)^0,c
   663   001060  0E00               	movlw	0
   664   001062  6E46               	movwf	_interrupt_flag^0,c
   665   001064  EFEE  F007         	goto	l1884
   666   001068  EF18  F000         	goto	start
   667   00106C                     __end_of_main:
   668                           	callstack 0
   669                           
   670 ;; *************** function _tricolorLED *****************
   671 ;; Defined at:
   672 ;;		line 104 in file "color.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		None
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 6
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701   001842                     __ptext1:
   702                           	callstack 0
   703   001842                     _tricolorLED:
   704                           	callstack 24
   705   001842                     
   706                           ;color.c: 106:     TRISGbits.TRISG0 = 0;
   707   001842  9087               	bcf	135,0,c	;volatile
   708                           
   709                           ;color.c: 107:     LATGbits.LATG0 = 1;
   710   001844  807F               	bsf	127,0,c	;volatile
   711                           
   712                           ;color.c: 108:     TRISAbits.TRISA4 = 0;
   713   001846  9881               	bcf	129,4,c	;volatile
   714                           
   715                           ;color.c: 109:     LATAbits.LATA4= 1;
   716   001848  8879               	bsf	121,4,c	;volatile
   717                           
   718                           ;color.c: 110:     TRISFbits.TRISF7 = 0;
   719   00184A  9E86               	bcf	134,7,c	;volatile
   720                           
   721                           ;color.c: 111:     LATFbits.LATF7 = 1;
   722   00184C  8E7E               	bsf	126,7,c	;volatile
   723                           
   724                           ;color.c: 112:     TRISAbits.TRISA3 = 0;
   725   00184E  9681               	bcf	129,3,c	;volatile
   726                           
   727                           ;color.c: 113:     LATAbits.LATA3 = 1;
   728   001850  8679               	bsf	121,3,c	;volatile
   729                           
   730                           ;color.c: 114:     TRISEbits.TRISE7 = 0;
   731   001852  9E85               	bcf	133,7,c	;volatile
   732                           
   733                           ;color.c: 115:     LATEbits.LATE7 = 1;
   734   001854  8E7D               	bsf	125,7,c	;volatile
   735   001856  0012               	return		;funcret
   736   001858                     __end_of_tricolorLED:
   737                           	callstack 0
   738                           
   739 ;; *************** function _persistence_register *****************
   740 ;; Defined at:
   741 ;;		line 46 in file "interrupts.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 9
   762 ;; This function calls:
   763 ;;		_color_writetoaddr
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770   00186E                     __ptext2:
   771                           	callstack 0
   772   00186E                     _persistence_register:
   773                           	callstack 21
   774   00186E                     
   775                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   776   00186E  0E02               	movlw	2
   777   001870  6E0B               	movwf	color_writetoaddr@value^0,c
   778   001872  0E0C               	movlw	12
   779   001874  ECE7  F00B         	call	_color_writetoaddr
   780   001878  0012               	return		;funcret
   781   00187A                     __end_of_persistence_register:
   782                           	callstack 0
   783                           
   784 ;; *************** function _motor_response *****************
   785 ;; Defined at:
   786 ;;		line 118 in file "color.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  temp            2   31[COMRAM] PTR struct RGBC_val
   789 ;;		 -> main@RGBC(8), 
   790 ;;  L               2   33[COMRAM] PTR struct DC_motor
   791 ;;		 -> main@mR(9), main@mL(9), 
   792 ;;  R               2   35[COMRAM] PTR struct DC_motor
   793 ;;		 -> main@mR(9), main@mL(9), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   809 ;;Total ram usage:        8 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 9
   812 ;; This function calls:
   813 ;;		_norm_stop
   814 ;;		_turnRight
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text3
   821   001156                     __ptext3:
   822                           	callstack 0
   823   001156                     _motor_response:
   824                           	callstack 21
   825   001156                     
   826                           ;color.c: 119:     if (temp->C > 2000) {
   827   001156  EE20 F006          	lfsr	2,6
   828   00115A  5020               	movf	motor_response@temp^0,w,c
   829   00115C  26D9               	addwf	fsr2l,f,c
   830   00115E  5021               	movf	(motor_response@temp+1)^0,w,c
   831   001160  22DA               	addwfc	fsr2h,f,c
   832   001162  0ED1               	movlw	209
   833   001164  5CDE               	subwf	postinc2,w,c
   834   001166  0E07               	movlw	7
   835   001168  58DE               	subwfb	postinc2,w,c
   836   00116A  A0D8               	btfss	status,0,c
   837   00116C  EFBA  F008         	goto	u391
   838   001170  EFBC  F008         	goto	u390
   839   001174                     u391:
   840   001174  EFFE  F008         	goto	l90
   841   001178                     u390:
   842   001178                     
   843                           ;color.c: 122:         norm_stop(&L, &R);
   844   001178  0E22               	movlw	low motor_response@L
   845   00117A  6E1C               	movwf	norm_stop@mL^0,c
   846   00117C  0E00               	movlw	high motor_response@L
   847   00117E  6E1D               	movwf	(norm_stop@mL+1)^0,c
   848   001180  0E24               	movlw	low motor_response@R
   849   001182  6E1E               	movwf	norm_stop@mR^0,c
   850   001184  0E00               	movlw	high motor_response@R
   851   001186  6E1F               	movwf	(norm_stop@mR+1)^0,c
   852   001188  EC26  F00B         	call	_norm_stop	;wreg free
   853   00118C                     
   854                           ;color.c: 123:         _delay((unsigned long)((100)*(64000000/4000.0)));
   855   00118C  0E09               	movlw	9
   856   00118E  6E27               	movwf	(??_motor_response+1)^0,c
   857   001190  0E1E               	movlw	30
   858   001192  6E26               	movwf	??_motor_response^0,c
   859   001194  0EE4               	movlw	228
   860   001196                     u547:
   861   001196  2EE8               	decfsz	wreg,f,c
   862   001198  D7FE               	bra	u547
   863   00119A  2E26               	decfsz	??_motor_response^0,f,c
   864   00119C  D7FC               	bra	u547
   865   00119E  2E27               	decfsz	(??_motor_response+1)^0,f,c
   866   0011A0  D7FA               	bra	u547
   867   0011A2  D000               	nop2	
   868   0011A4                     
   869                           ;color.c: 124:         turnRight(&L, &R);
   870   0011A4  0E22               	movlw	low motor_response@L
   871   0011A6  6E1C               	movwf	turnRight@mL^0,c
   872   0011A8  0E00               	movlw	high motor_response@L
   873   0011AA  6E1D               	movwf	(turnRight@mL+1)^0,c
   874   0011AC  0E24               	movlw	low motor_response@R
   875   0011AE  6E1E               	movwf	turnRight@mR^0,c
   876   0011B0  0E00               	movlw	high motor_response@R
   877   0011B2  6E1F               	movwf	(turnRight@mR+1)^0,c
   878   0011B4  EC79  F009         	call	_turnRight	;wreg free
   879                           
   880                           ;color.c: 125:         _delay((unsigned long)((210)*(64000000/4000.0)));
   881   0011B8  0E12               	movlw	18
   882   0011BA  6E27               	movwf	(??_motor_response+1)^0,c
   883   0011BC  0E0C               	movlw	12
   884   0011BE  6E26               	movwf	??_motor_response^0,c
   885   0011C0  0E95               	movlw	149
   886   0011C2                     u557:
   887   0011C2  2EE8               	decfsz	wreg,f,c
   888   0011C4  D7FE               	bra	u557
   889   0011C6  2E26               	decfsz	??_motor_response^0,f,c
   890   0011C8  D7FC               	bra	u557
   891   0011CA  2E27               	decfsz	(??_motor_response+1)^0,f,c
   892   0011CC  D7FA               	bra	u557
   893   0011CE  F000               	nop	
   894   0011D0                     
   895                           ;color.c: 126:         norm_stop(&L, &R);
   896   0011D0  0E22               	movlw	low motor_response@L
   897   0011D2  6E1C               	movwf	norm_stop@mL^0,c
   898   0011D4  0E00               	movlw	high motor_response@L
   899   0011D6  6E1D               	movwf	(norm_stop@mL+1)^0,c
   900   0011D8  0E24               	movlw	low motor_response@R
   901   0011DA  6E1E               	movwf	norm_stop@mR^0,c
   902   0011DC  0E00               	movlw	high motor_response@R
   903   0011DE  6E1F               	movwf	(norm_stop@mR+1)^0,c
   904   0011E0  EC26  F00B         	call	_norm_stop	;wreg free
   905   0011E4                     
   906                           ;color.c: 127:         _delay((unsigned long)((100)*(64000000/4000.0)));
   907   0011E4  0E09               	movlw	9
   908   0011E6  6E27               	movwf	(??_motor_response+1)^0,c
   909   0011E8  0E1E               	movlw	30
   910   0011EA  6E26               	movwf	??_motor_response^0,c
   911   0011EC  0EE4               	movlw	228
   912   0011EE                     u567:
   913   0011EE  2EE8               	decfsz	wreg,f,c
   914   0011F0  D7FE               	bra	u567
   915   0011F2  2E26               	decfsz	??_motor_response^0,f,c
   916   0011F4  D7FC               	bra	u567
   917   0011F6  2E27               	decfsz	(??_motor_response+1)^0,f,c
   918   0011F8  D7FA               	bra	u567
   919   0011FA  D000               	nop2	
   920   0011FC                     l90:
   921   0011FC  0012               	return		;funcret
   922   0011FE                     __end_of_motor_response:
   923                           	callstack 0
   924                           
   925 ;; *************** function _turnRight *****************
   926 ;; Defined at:
   927 ;;		line 144 in file "dc_motor.c"
   928 ;; Parameters:    Size  Location     Type
   929 ;;  mL              2   27[COMRAM] PTR struct DC_motor
   930 ;;		 -> motor_response@L(2), 
   931 ;;  mR              2   29[COMRAM] PTR struct DC_motor
   932 ;;		 -> motor_response@R(2), 
   933 ;; Auto vars:     Size  Location     Type
   934 ;;		None
   935 ;; Return value:  Size  Location     Type
   936 ;;                  1    wreg      void 
   937 ;; Registers used:
   938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   939 ;; Tracked objects:
   940 ;;		On entry : 0/0
   941 ;;		On exit  : 0/0
   942 ;;		Unchanged: 0/0
   943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   944 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   947 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   948 ;;Total ram usage:        4 bytes
   949 ;; Hardware stack levels used: 1
   950 ;; Hardware stack levels required when called: 8
   951 ;; This function calls:
   952 ;;		_setMotorPWM
   953 ;; This function is called by:
   954 ;;		_motor_response
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text4
   959   0012F2                     __ptext4:
   960                           	callstack 0
   961   0012F2                     _turnRight:
   962                           	callstack 21
   963   0012F2                     
   964                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
   965   0012F2  C01C  FFD9         	movff	turnRight@mL,fsr2l
   966   0012F6  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
   967   0012FA  0E32               	movlw	50
   968   0012FC  6EDF               	movwf	indf2,c
   969                           
   970                           ;dc_motor.c: 147:     mR->power = 50;
   971   0012FE  C01E  FFD9         	movff	turnRight@mR,fsr2l
   972   001302  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
   973   001306  0E32               	movlw	50
   974   001308  6EDF               	movwf	indf2,c
   975   00130A                     
   976                           ;dc_motor.c: 148:     mL->brakemode = 1;
   977   00130A  EE20 F002          	lfsr	2,2
   978   00130E  501C               	movf	turnRight@mL^0,w,c
   979   001310  26D9               	addwf	fsr2l,f,c
   980   001312  501D               	movf	(turnRight@mL+1)^0,w,c
   981   001314  22DA               	addwfc	fsr2h,f,c
   982   001316  0E01               	movlw	1
   983   001318  6EDF               	movwf	indf2,c
   984   00131A                     
   985                           ;dc_motor.c: 149:     mR->brakemode = 1;
   986   00131A  EE20 F002          	lfsr	2,2
   987   00131E  501E               	movf	turnRight@mR^0,w,c
   988   001320  26D9               	addwf	fsr2l,f,c
   989   001322  501F               	movf	(turnRight@mR+1)^0,w,c
   990   001324  22DA               	addwfc	fsr2h,f,c
   991   001326  0E01               	movlw	1
   992   001328  6EDF               	movwf	indf2,c
   993   00132A                     
   994                           ;dc_motor.c: 150:     mR->direction = 0;
   995   00132A  EE20 F001          	lfsr	2,1
   996   00132E  501E               	movf	turnRight@mR^0,w,c
   997   001330  26D9               	addwf	fsr2l,f,c
   998   001332  501F               	movf	(turnRight@mR+1)^0,w,c
   999   001334  22DA               	addwfc	fsr2h,f,c
  1000   001336  0E00               	movlw	0
  1001   001338  6EDF               	movwf	indf2,c
  1002   00133A                     
  1003                           ;dc_motor.c: 151:     mL->direction = 1;
  1004   00133A  EE20 F001          	lfsr	2,1
  1005   00133E  501C               	movf	turnRight@mL^0,w,c
  1006   001340  26D9               	addwf	fsr2l,f,c
  1007   001342  501D               	movf	(turnRight@mL+1)^0,w,c
  1008   001344  22DA               	addwfc	fsr2h,f,c
  1009   001346  0E01               	movlw	1
  1010   001348  6EDF               	movwf	indf2,c
  1011   00134A                     
  1012                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1013   00134A  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  1014   00134E  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  1015   001352  EC0A  F007         	call	_setMotorPWM	;wreg free
  1016   001356                     
  1017                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1018   001356  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  1019   00135A  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  1020   00135E  EC0A  F007         	call	_setMotorPWM	;wreg free
  1021   001362  0012               	return		;funcret
  1022   001364                     __end_of_turnRight:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _norm_stop *****************
  1026 ;; Defined at:
  1027 ;;		line 118 in file "dc_motor.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1030 ;;		 -> main@mL(9), motor_response@L(2), 
  1031 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1032 ;;		 -> main@mR(9), motor_response@R(2), 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;		None
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1044 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;Total ram usage:        4 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 8
  1051 ;; This function calls:
  1052 ;;		_setMotorPWM
  1053 ;; This function is called by:
  1054 ;;		_motor_response
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text5
  1060   00164C                     __ptext5:
  1061                           	callstack 0
  1062   00164C                     _norm_stop:
  1063                           	callstack 22
  1064   00164C                     
  1065                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1066   00164C  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  1067   001650  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  1068   001654  0E00               	movlw	0
  1069   001656  6EDF               	movwf	indf2,c
  1070                           
  1071                           ;dc_motor.c: 125:     mR->power = 0;
  1072   001658  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  1073   00165C  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  1074   001660  0E00               	movlw	0
  1075   001662  6EDF               	movwf	indf2,c
  1076   001664                     
  1077                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1078   001664  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  1079   001668  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1080   00166C  EC0A  F007         	call	_setMotorPWM	;wreg free
  1081   001670                     
  1082                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1083   001670  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  1084   001674  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1085   001678  EC0A  F007         	call	_setMotorPWM	;wreg free
  1086   00167C  0012               	return		;funcret
  1087   00167E                     __end_of_norm_stop:
  1088                           	callstack 0
  1089                           
  1090 ;; *************** function _motorRinit *****************
  1091 ;; Defined at:
  1092 ;;		line 88 in file "dc_motor.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  1095 ;;		 -> main@mR(9), 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used: 1
  1113 ;; Hardware stack levels required when called: 6
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text6
  1122   001364                     __ptext6:
  1123                           	callstack 0
  1124   001364                     _motorRinit:
  1125                           	callstack 24
  1126   001364                     
  1127                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1128   001364  C009  FFD9         	movff	motorRinit@mR,fsr2l
  1129   001368  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  1130   00136C  0E32               	movlw	50
  1131   00136E  6EDF               	movwf	indf2,c
  1132   001370                     
  1133                           ;dc_motor.c: 91:     mR->direction = 1;
  1134   001370  EE20 F001          	lfsr	2,1
  1135   001374  5009               	movf	motorRinit@mR^0,w,c
  1136   001376  26D9               	addwf	fsr2l,f,c
  1137   001378  500A               	movf	(motorRinit@mR+1)^0,w,c
  1138   00137A  22DA               	addwfc	fsr2h,f,c
  1139   00137C  0E01               	movlw	1
  1140   00137E  6EDF               	movwf	indf2,c
  1141   001380                     
  1142                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1143   001380  EE20 F002          	lfsr	2,2
  1144   001384  5009               	movf	motorRinit@mR^0,w,c
  1145   001386  26D9               	addwf	fsr2l,f,c
  1146   001388  500A               	movf	(motorRinit@mR+1)^0,w,c
  1147   00138A  22DA               	addwfc	fsr2h,f,c
  1148   00138C  0E01               	movlw	1
  1149   00138E  6EDF               	movwf	indf2,c
  1150   001390                     
  1151                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1152   001390  EE20 F005          	lfsr	2,5
  1153   001394  5009               	movf	motorRinit@mR^0,w,c
  1154   001396  26D9               	addwf	fsr2l,f,c
  1155   001398  500A               	movf	(motorRinit@mR+1)^0,w,c
  1156   00139A  22DA               	addwfc	fsr2h,f,c
  1157   00139C  0E25               	movlw	37
  1158   00139E  6EDE               	movwf	postinc2,c
  1159   0013A0  0E0F               	movlw	15
  1160   0013A2  6EDD               	movwf	postdec2,c
  1161   0013A4                     
  1162                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1163   0013A4  EE20 F007          	lfsr	2,7
  1164   0013A8  5009               	movf	motorRinit@mR^0,w,c
  1165   0013AA  26D9               	addwf	fsr2l,f,c
  1166   0013AC  500A               	movf	(motorRinit@mR+1)^0,w,c
  1167   0013AE  22DA               	addwfc	fsr2h,f,c
  1168   0013B0  0E21               	movlw	33
  1169   0013B2  6EDE               	movwf	postinc2,c
  1170   0013B4  0E0F               	movlw	15
  1171   0013B6  6EDD               	movwf	postdec2,c
  1172   0013B8                     
  1173                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1174   0013B8  EE20 F003          	lfsr	2,3
  1175   0013BC  5009               	movf	motorRinit@mR^0,w,c
  1176   0013BE  26D9               	addwf	fsr2l,f,c
  1177   0013C0  500A               	movf	(motorRinit@mR+1)^0,w,c
  1178   0013C2  22DA               	addwfc	fsr2h,f,c
  1179   0013C4  0EC8               	movlw	200
  1180   0013C6  6EDE               	movwf	postinc2,c
  1181   0013C8  0E00               	movlw	0
  1182   0013CA  6EDD               	movwf	postdec2,c
  1183   0013CC  0012               	return		;funcret
  1184   0013CE                     __end_of_motorRinit:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _motorLinit *****************
  1188 ;; Defined at:
  1189 ;;		line 78 in file "dc_motor.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  1192 ;;		 -> main@mL(9), 
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;                  1    wreg      void 
  1197 ;; Registers used:
  1198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1204 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1208 ;;Total ram usage:        2 bytes
  1209 ;; Hardware stack levels used: 1
  1210 ;; Hardware stack levels required when called: 6
  1211 ;; This function calls:
  1212 ;;		Nothing
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text7
  1219   0013CE                     __ptext7:
  1220                           	callstack 0
  1221   0013CE                     _motorLinit:
  1222                           	callstack 24
  1223   0013CE                     
  1224                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  1225   0013CE  C009  FFD9         	movff	motorLinit@mL,fsr2l
  1226   0013D2  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  1227   0013D6  0E32               	movlw	50
  1228   0013D8  6EDF               	movwf	indf2,c
  1229   0013DA                     
  1230                           ;dc_motor.c: 81:     mL->direction = 1;
  1231   0013DA  EE20 F001          	lfsr	2,1
  1232   0013DE  5009               	movf	motorLinit@mL^0,w,c
  1233   0013E0  26D9               	addwf	fsr2l,f,c
  1234   0013E2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1235   0013E4  22DA               	addwfc	fsr2h,f,c
  1236   0013E6  0E01               	movlw	1
  1237   0013E8  6EDF               	movwf	indf2,c
  1238   0013EA                     
  1239                           ;dc_motor.c: 82:     mL->brakemode = 1;
  1240   0013EA  EE20 F002          	lfsr	2,2
  1241   0013EE  5009               	movf	motorLinit@mL^0,w,c
  1242   0013F0  26D9               	addwf	fsr2l,f,c
  1243   0013F2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1244   0013F4  22DA               	addwfc	fsr2h,f,c
  1245   0013F6  0E01               	movlw	1
  1246   0013F8  6EDF               	movwf	indf2,c
  1247   0013FA                     
  1248                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  1249   0013FA  EE20 F005          	lfsr	2,5
  1250   0013FE  5009               	movf	motorLinit@mL^0,w,c
  1251   001400  26D9               	addwf	fsr2l,f,c
  1252   001402  500A               	movf	(motorLinit@mL+1)^0,w,c
  1253   001404  22DA               	addwfc	fsr2h,f,c
  1254   001406  0EAA               	movlw	170
  1255   001408  6EDE               	movwf	postinc2,c
  1256   00140A  0E0F               	movlw	15
  1257   00140C  6EDD               	movwf	postdec2,c
  1258   00140E                     
  1259                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  1260   00140E  EE20 F007          	lfsr	2,7
  1261   001412  5009               	movf	motorLinit@mL^0,w,c
  1262   001414  26D9               	addwf	fsr2l,f,c
  1263   001416  500A               	movf	(motorLinit@mL+1)^0,w,c
  1264   001418  22DA               	addwfc	fsr2h,f,c
  1265   00141A  0EA6               	movlw	166
  1266   00141C  6EDE               	movwf	postinc2,c
  1267   00141E  0E0F               	movlw	15
  1268   001420  6EDD               	movwf	postdec2,c
  1269   001422                     
  1270                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  1271   001422  EE20 F003          	lfsr	2,3
  1272   001426  5009               	movf	motorLinit@mL^0,w,c
  1273   001428  26D9               	addwf	fsr2l,f,c
  1274   00142A  500A               	movf	(motorLinit@mL+1)^0,w,c
  1275   00142C  22DA               	addwfc	fsr2h,f,c
  1276   00142E  0EC8               	movlw	200
  1277   001430  6EDE               	movwf	postinc2,c
  1278   001432  0E00               	movlw	0
  1279   001434  6EDD               	movwf	postdec2,c
  1280   001436  0012               	return		;funcret
  1281   001438                     __end_of_motorLinit:
  1282                           	callstack 0
  1283                           
  1284 ;; *************** function _initDCmotorsPWM *****************
  1285 ;; Defined at:
  1286 ;;		line 5 in file "dc_motor.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1304 ;;Total ram usage:        2 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 6
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_main
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           	psect	text8
  1315   0011FE                     __ptext8:
  1316                           	callstack 0
  1317   0011FE                     _initDCmotorsPWM:
  1318                           	callstack 24
  1319   0011FE                     
  1320                           ;dc_motor.c: 9:     RE2PPS=0x05;
  1321   0011FE  0E05               	movlw	5
  1322   001200  010E               	movlb	14	; () banked
  1323   001202  6F74               	movwf	116,b	;volatile
  1324                           
  1325                           ;dc_motor.c: 10:     RE4PPS=0x06;
  1326   001204  0E06               	movlw	6
  1327   001206  6F76               	movwf	118,b	;volatile
  1328                           
  1329                           ;dc_motor.c: 11:     RC7PPS=0x07;
  1330   001208  0E07               	movlw	7
  1331   00120A  6F69               	movwf	105,b	;volatile
  1332                           
  1333                           ;dc_motor.c: 12:     RG6PPS=0x08;
  1334   00120C  0E08               	movlw	8
  1335   00120E  6F88               	movwf	136,b	;volatile
  1336                           
  1337                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  1338   001210  50BD               	movf	189,w,c	;volatile
  1339   001212  0B8F               	andlw	-113
  1340   001214  0930               	iorlw	48
  1341   001216  6EBD               	movwf	189,c	;volatile
  1342                           
  1343                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  1344   001218  0EE0               	movlw	-32
  1345   00121A  16BE               	andwf	190,f,c	;volatile
  1346                           
  1347                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  1348   00121C  50BF               	movf	191,w,c	;volatile
  1349   00121E  0BF0               	andlw	-16
  1350   001220  0901               	iorlw	1
  1351   001222  6EBF               	movwf	191,c	;volatile
  1352                           
  1353                           ;dc_motor.c: 21:     T2PR=200;
  1354   001224  0EC8               	movlw	200
  1355   001226  6EBC               	movwf	188,c	;volatile
  1356   001228                     
  1357                           ; BSR set to: 14
  1358                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  1359   001228  8EBD               	bsf	189,7,c	;volatile
  1360                           
  1361                           ;dc_motor.c: 26:     CCPR1H=0;
  1362   00122A  0E00               	movlw	0
  1363   00122C  6EAA               	movwf	170,c	;volatile
  1364                           
  1365                           ;dc_motor.c: 27:     CCPR2H=0;
  1366   00122E  0E00               	movlw	0
  1367   001230  6EA6               	movwf	166,c	;volatile
  1368                           
  1369                           ;dc_motor.c: 28:     CCPR3H=0;
  1370   001232  0E00               	movlw	0
  1371   001234  010F               	movlb	15	; () banked
  1372   001236  6F25               	movwf	37,b	;volatile
  1373                           
  1374                           ;dc_motor.c: 29:     CCPR4H=0;
  1375   001238  0E00               	movlw	0
  1376   00123A  6F21               	movwf	33,b	;volatile
  1377                           
  1378                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  1379   00123C  0EFC               	movlw	-4
  1380   00123E  16AD               	andwf	173,f,c	;volatile
  1381                           
  1382                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  1383   001240  0EF3               	movlw	-13
  1384   001242  16AD               	andwf	173,f,c	;volatile
  1385                           
  1386                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  1387   001244  0ECF               	movlw	-49
  1388   001246  16AD               	andwf	173,f,c	;volatile
  1389                           
  1390                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  1391   001248  0E3F               	movlw	-193
  1392   00124A  16AD               	andwf	173,f,c	;volatile
  1393   00124C                     
  1394                           ; BSR set to: 15
  1395                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  1396   00124C  88AB               	bsf	171,4,c	;volatile
  1397                           
  1398                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  1399   00124E  50AB               	movf	171,w,c	;volatile
  1400   001250  0BF0               	andlw	-16
  1401   001252  090C               	iorlw	12
  1402   001254  6EAB               	movwf	171,c	;volatile
  1403   001256                     
  1404                           ; BSR set to: 15
  1405                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  1406   001256  8EAB               	bsf	171,7,c	;volatile
  1407   001258                     
  1408                           ; BSR set to: 15
  1409                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  1410   001258  88A7               	bsf	167,4,c	;volatile
  1411                           
  1412                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  1413   00125A  50A7               	movf	167,w,c	;volatile
  1414   00125C  0BF0               	andlw	-16
  1415   00125E  090C               	iorlw	12
  1416   001260  6EA7               	movwf	167,c	;volatile
  1417   001262                     
  1418                           ; BSR set to: 15
  1419                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  1420   001262  8EA7               	bsf	167,7,c	;volatile
  1421   001264                     
  1422                           ; BSR set to: 15
  1423                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  1424   001264  8926               	bsf	38,4,b	;volatile
  1425                           
  1426                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  1427   001266  5126               	movf	38,w,b	;volatile
  1428   001268  0BF0               	andlw	-16
  1429   00126A  090C               	iorlw	12
  1430   00126C  6F26               	movwf	38,b	;volatile
  1431   00126E                     
  1432                           ; BSR set to: 15
  1433                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  1434   00126E  8F26               	bsf	38,7,b	;volatile
  1435   001270                     
  1436                           ; BSR set to: 15
  1437                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  1438   001270  8922               	bsf	34,4,b	;volatile
  1439                           
  1440                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  1441   001272  5122               	movf	34,w,b	;volatile
  1442   001274  0BF0               	andlw	-16
  1443   001276  090C               	iorlw	12
  1444   001278  6F22               	movwf	34,b	;volatile
  1445   00127A                     
  1446                           ; BSR set to: 15
  1447                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  1448   00127A  8F22               	bsf	34,7,b	;volatile
  1449   00127C                     
  1450                           ; BSR set to: 15
  1451   00127C  0012               	return		;funcret
  1452   00127E                     __end_of_initDCmotorsPWM:
  1453                           	callstack 0
  1454                           
  1455 ;; *************** function _fullSpeedAhead *****************
  1456 ;; Defined at:
  1457 ;;		line 167 in file "dc_motor.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1460 ;;		 -> main@mL(9), 
  1461 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1462 ;;		 -> main@mR(9), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;		None
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1474 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1476 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1477 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1478 ;;Total ram usage:        5 bytes
  1479 ;; Hardware stack levels used: 1
  1480 ;; Hardware stack levels required when called: 8
  1481 ;; This function calls:
  1482 ;;		_setMotorPWM
  1483 ;; This function is called by:
  1484 ;;		_main
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text9
  1489   00106C                     __ptext9:
  1490                           	callstack 0
  1491   00106C                     _fullSpeedAhead:
  1492                           	callstack 22
  1493   00106C                     
  1494                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  1495   00106C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1496   001070  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1497   001074  0E05               	movlw	5
  1498   001076  6EDF               	movwf	indf2,c
  1499                           
  1500                           ;dc_motor.c: 170:     mR->power = 5;
  1501   001078  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1502   00107C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1503   001080  0E05               	movlw	5
  1504   001082  6EDF               	movwf	indf2,c
  1505   001084                     
  1506                           ;dc_motor.c: 171:     mR->direction = 1;
  1507   001084  EE20 F001          	lfsr	2,1
  1508   001088  501E               	movf	fullSpeedAhead@mR^0,w,c
  1509   00108A  26D9               	addwf	fsr2l,f,c
  1510   00108C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1511   00108E  22DA               	addwfc	fsr2h,f,c
  1512   001090  0E01               	movlw	1
  1513   001092  6EDF               	movwf	indf2,c
  1514   001094                     
  1515                           ;dc_motor.c: 172:     mL->direction = 1;
  1516   001094  EE20 F001          	lfsr	2,1
  1517   001098  501C               	movf	fullSpeedAhead@mL^0,w,c
  1518   00109A  26D9               	addwf	fsr2l,f,c
  1519   00109C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1520   00109E  22DA               	addwfc	fsr2h,f,c
  1521   0010A0  0E01               	movlw	1
  1522   0010A2  6EDF               	movwf	indf2,c
  1523   0010A4                     
  1524                           ;dc_motor.c: 173:     mL->brakemode = 1;
  1525   0010A4  EE20 F002          	lfsr	2,2
  1526   0010A8  501C               	movf	fullSpeedAhead@mL^0,w,c
  1527   0010AA  26D9               	addwf	fsr2l,f,c
  1528   0010AC  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1529   0010AE  22DA               	addwfc	fsr2h,f,c
  1530   0010B0  0E01               	movlw	1
  1531   0010B2  6EDF               	movwf	indf2,c
  1532   0010B4                     
  1533                           ;dc_motor.c: 174:     mR->brakemode = 1;
  1534   0010B4  EE20 F002          	lfsr	2,2
  1535   0010B8  501E               	movf	fullSpeedAhead@mR^0,w,c
  1536   0010BA  26D9               	addwf	fsr2l,f,c
  1537   0010BC  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1538   0010BE  22DA               	addwfc	fsr2h,f,c
  1539   0010C0  0E01               	movlw	1
  1540   0010C2  6EDF               	movwf	indf2,c
  1541                           
  1542                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1543   0010C4  EF7A  F008         	goto	l1832
  1544   0010C8                     l1826:
  1545                           
  1546                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  1547   0010C8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1548   0010CC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1549   0010D0  2ADF               	incf	indf2,f,c
  1550                           
  1551                           ;dc_motor.c: 178:         mR->power++;
  1552   0010D2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1553   0010D6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1554   0010DA  2ADF               	incf	indf2,f,c
  1555   0010DC                     
  1556                           ;dc_motor.c: 180:         setMotorPWM(mL);
  1557   0010DC  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1558   0010E0  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1559   0010E4  EC0A  F007         	call	_setMotorPWM	;wreg free
  1560   0010E8                     
  1561                           ;dc_motor.c: 181:         setMotorPWM(mR);
  1562   0010E8  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1563   0010EC  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1564   0010F0  EC0A  F007         	call	_setMotorPWM	;wreg free
  1565   0010F4                     l1832:
  1566                           
  1567                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1568   0010F4  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1569   0010F8  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1570   0010FC  0E15               	movlw	21
  1571   0010FE  60DF               	cpfslt	indf2,c
  1572   001100  EF84  F008         	goto	u401
  1573   001104  EF86  F008         	goto	u400
  1574   001108                     u401:
  1575   001108  EF92  F008         	goto	l1836
  1576   00110C                     u400:
  1577   00110C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1578   001110  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1579   001114  0E14               	movlw	20
  1580   001116  64DF               	cpfsgt	indf2,c
  1581   001118  EF90  F008         	goto	u411
  1582   00111C  EF92  F008         	goto	u410
  1583   001120                     u411:
  1584   001120  EF64  F008         	goto	l1826
  1585   001124                     u410:
  1586   001124                     l1836:
  1587                           
  1588                           ;dc_motor.c: 183:     mL->power = 20;
  1589   001124  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1590   001128  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1591   00112C  0E14               	movlw	20
  1592   00112E  6EDF               	movwf	indf2,c
  1593                           
  1594                           ;dc_motor.c: 184:     mR->power = 20;
  1595   001130  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1596   001134  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1597   001138  0E14               	movlw	20
  1598   00113A  6EDF               	movwf	indf2,c
  1599   00113C                     
  1600                           ;dc_motor.c: 185:     setMotorPWM(mL);
  1601   00113C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1602   001140  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1603   001144  EC0A  F007         	call	_setMotorPWM	;wreg free
  1604   001148                     
  1605                           ;dc_motor.c: 186:     setMotorPWM(mR);
  1606   001148  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1607   00114C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1608   001150  EC0A  F007         	call	_setMotorPWM	;wreg free
  1609   001154  0012               	return		;funcret
  1610   001156                     __end_of_fullSpeedAhead:
  1611                           	callstack 0
  1612                           
  1613 ;; *************** function _setMotorPWM *****************
  1614 ;; Defined at:
  1615 ;;		line 56 in file "dc_motor.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;  m               2   21[COMRAM] PTR struct DC_motor
  1618 ;;		 -> main@mR(9), main@mL(9), motor_response@R(2), motor_response@L(2), 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  negDuty         1   26[COMRAM] unsigned char 
  1621 ;;  posDuty         1   25[COMRAM] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  1    wreg      void 
  1624 ;; Registers used:
  1625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1631 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1633 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1635 ;;Total ram usage:        6 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; Hardware stack levels required when called: 7
  1638 ;; This function calls:
  1639 ;;		___lwdiv
  1640 ;;		___wmul
  1641 ;; This function is called by:
  1642 ;;		_norm_stop
  1643 ;;		_turnRight
  1644 ;;		_fullSpeedAhead
  1645 ;;		_stop
  1646 ;;		_turnLeft
  1647 ;;		_uturn
  1648 ;;		_reverse
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text10
  1653   000E14                     __ptext10:
  1654                           	callstack 0
  1655   000E14                     _setMotorPWM:
  1656                           	callstack 22
  1657   000E14                     
  1658                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  1659   000E14  EE20 F002          	lfsr	2,2
  1660   000E18  5016               	movf	setMotorPWM@m^0,w,c
  1661   000E1A  26D9               	addwf	fsr2l,f,c
  1662   000E1C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1663   000E1E  22DA               	addwfc	fsr2h,f,c
  1664   000E20  50DF               	movf	indf2,w,c
  1665   000E22  B4D8               	btfsc	status,2,c
  1666   000E24  EF16  F007         	goto	u371
  1667   000E28  EF18  F007         	goto	u370
  1668   000E2C                     u371:
  1669   000E2C  EF4C  F007         	goto	l1674
  1670   000E30                     u370:
  1671   000E30                     
  1672                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1673   000E30  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1674   000E34  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1675   000E38  50DF               	movf	indf2,w,c
  1676   000E3A  6E18               	movwf	??_setMotorPWM^0,c
  1677   000E3C  5018               	movf	??_setMotorPWM^0,w,c
  1678   000E3E  6E09               	movwf	___wmul@multiplier^0,c
  1679   000E40  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1680   000E42  EE20 F003          	lfsr	2,3
  1681   000E46  5016               	movf	setMotorPWM@m^0,w,c
  1682   000E48  26D9               	addwf	fsr2l,f,c
  1683   000E4A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1684   000E4C  22DA               	addwfc	fsr2h,f,c
  1685   000E4E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1686   000E52  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1687   000E56  ECD4  F00B         	call	___wmul	;wreg free
  1688   000E5A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1689   000E5E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1690   000E62  0E00               	movlw	0
  1691   000E64  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1692   000E66  0E64               	movlw	100
  1693   000E68  6E11               	movwf	___lwdiv@divisor^0,c
  1694   000E6A  EC3F  F009         	call	___lwdiv	;wreg free
  1695   000E6E  EE20 F003          	lfsr	2,3
  1696   000E72  5016               	movf	setMotorPWM@m^0,w,c
  1697   000E74  26D9               	addwf	fsr2l,f,c
  1698   000E76  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1699   000E78  22DA               	addwfc	fsr2h,f,c
  1700   000E7A  50DF               	movf	indf2,w,c
  1701   000E7C  6E19               	movwf	(??_setMotorPWM+1)^0,c
  1702   000E7E  500F               	movf	?___lwdiv^0,w,c
  1703   000E80  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  1704   000E82  6E1A               	movwf	setMotorPWM@posDuty^0,c
  1705   000E84                     
  1706                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  1707   000E84  EE20 F003          	lfsr	2,3
  1708   000E88  5016               	movf	setMotorPWM@m^0,w,c
  1709   000E8A  26D9               	addwf	fsr2l,f,c
  1710   000E8C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1711   000E8E  22DA               	addwfc	fsr2h,f,c
  1712   000E90  50DF               	movf	indf2,w,c
  1713   000E92  6E1B               	movwf	setMotorPWM@negDuty^0,c
  1714                           
  1715                           ;dc_motor.c: 63:     }
  1716   000E94  EF6F  F007         	goto	l1678
  1717   000E98                     l1674:
  1718                           
  1719                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1720   000E98  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1721   000E9C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1722   000EA0  50DF               	movf	indf2,w,c
  1723   000EA2  6E18               	movwf	??_setMotorPWM^0,c
  1724   000EA4  5018               	movf	??_setMotorPWM^0,w,c
  1725   000EA6  6E09               	movwf	___wmul@multiplier^0,c
  1726   000EA8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1727   000EAA  EE20 F003          	lfsr	2,3
  1728   000EAE  5016               	movf	setMotorPWM@m^0,w,c
  1729   000EB0  26D9               	addwf	fsr2l,f,c
  1730   000EB2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1731   000EB4  22DA               	addwfc	fsr2h,f,c
  1732   000EB6  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1733   000EBA  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1734   000EBE  ECD4  F00B         	call	___wmul	;wreg free
  1735   000EC2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1736   000EC6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1737   000ECA  0E00               	movlw	0
  1738   000ECC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1739   000ECE  0E64               	movlw	100
  1740   000ED0  6E11               	movwf	___lwdiv@divisor^0,c
  1741   000ED2  EC3F  F009         	call	___lwdiv	;wreg free
  1742   000ED6  500F               	movf	?___lwdiv^0,w,c
  1743   000ED8  6E1A               	movwf	setMotorPWM@posDuty^0,c
  1744   000EDA                     
  1745                           ;dc_motor.c: 66:         negDuty=0;
  1746   000EDA  0E00               	movlw	0
  1747   000EDC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  1748   000EDE                     l1678:
  1749                           
  1750                           ;dc_motor.c: 69:     if (m->direction) {
  1751   000EDE  EE20 F001          	lfsr	2,1
  1752   000EE2  5016               	movf	setMotorPWM@m^0,w,c
  1753   000EE4  26D9               	addwf	fsr2l,f,c
  1754   000EE6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1755   000EE8  22DA               	addwfc	fsr2h,f,c
  1756   000EEA  50DF               	movf	indf2,w,c
  1757   000EEC  B4D8               	btfsc	status,2,c
  1758   000EEE  EF7B  F007         	goto	u381
  1759   000EF2  EF7D  F007         	goto	u380
  1760   000EF6                     u381:
  1761   000EF6  EF9F  F007         	goto	l1682
  1762   000EFA                     u380:
  1763   000EFA                     
  1764                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  1765   000EFA  EE20 F005          	lfsr	2,5
  1766   000EFE  5016               	movf	setMotorPWM@m^0,w,c
  1767   000F00  26D9               	addwf	fsr2l,f,c
  1768   000F02  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1769   000F04  22DA               	addwfc	fsr2h,f,c
  1770   000F06  CFDE F018          	movff	postinc2,??_setMotorPWM
  1771   000F0A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1772   000F0E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1773   000F12  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1774   000F16  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1775                           
  1776                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  1777   000F1A  EE20 F007          	lfsr	2,7
  1778   000F1E  5016               	movf	setMotorPWM@m^0,w,c
  1779   000F20  26D9               	addwf	fsr2l,f,c
  1780   000F22  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1781   000F24  22DA               	addwfc	fsr2h,f,c
  1782   000F26  CFDE F018          	movff	postinc2,??_setMotorPWM
  1783   000F2A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1784   000F2E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1785   000F32  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1786   000F36  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1787                           
  1788                           ;dc_motor.c: 72:     } else {
  1789   000F3A  EFBF  F007         	goto	l429
  1790   000F3E                     l1682:
  1791                           
  1792                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  1793   000F3E  EE20 F005          	lfsr	2,5
  1794   000F42  5016               	movf	setMotorPWM@m^0,w,c
  1795   000F44  26D9               	addwf	fsr2l,f,c
  1796   000F46  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1797   000F48  22DA               	addwfc	fsr2h,f,c
  1798   000F4A  CFDE F018          	movff	postinc2,??_setMotorPWM
  1799   000F4E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1800   000F52  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1801   000F56  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1802   000F5A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1803                           
  1804                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  1805   000F5E  EE20 F007          	lfsr	2,7
  1806   000F62  5016               	movf	setMotorPWM@m^0,w,c
  1807   000F64  26D9               	addwf	fsr2l,f,c
  1808   000F66  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1809   000F68  22DA               	addwfc	fsr2h,f,c
  1810   000F6A  CFDE F018          	movff	postinc2,??_setMotorPWM
  1811   000F6E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1812   000F72  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1813   000F76  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1814   000F7A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1815   000F7E                     l429:
  1816   000F7E  0012               	return		;funcret
  1817   000F80                     __end_of_setMotorPWM:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function ___wmul *****************
  1821 ;; Defined at:
  1822 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  multiplier      2    8[COMRAM] unsigned int 
  1825 ;;  multiplicand    2   10[COMRAM] unsigned int 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  product         2   12[COMRAM] unsigned int 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  2    8[COMRAM] unsigned int 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, prodl, prodh
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1841 ;;Total ram usage:        6 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 6
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_setMotorPWM
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852   0017A8                     __ptext11:
  1853                           	callstack 0
  1854   0017A8                     ___wmul:
  1855                           	callstack 22
  1856   0017A8  5009               	movf	___wmul@multiplier^0,w,c
  1857   0017AA  020B               	mulwf	___wmul@multiplicand^0,c
  1858   0017AC  CFF3 F00D          	movff	prodl,___wmul@product
  1859   0017B0  CFF4 F00E          	movff	prodh,___wmul@product+1
  1860   0017B4  5009               	movf	___wmul@multiplier^0,w,c
  1861   0017B6  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  1862   0017B8  50F3               	movf	243,w,c
  1863   0017BA  260E               	addwf	(___wmul@product+1)^0,f,c
  1864   0017BC  500A               	movf	(___wmul@multiplier+1)^0,w,c
  1865   0017BE  020B               	mulwf	___wmul@multiplicand^0,c
  1866   0017C0  50F3               	movf	243,w,c
  1867   0017C2  260E               	addwf	(___wmul@product+1)^0,f,c
  1868   0017C4  C00D  F009         	movff	___wmul@product,?___wmul
  1869   0017C8  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  1870   0017CC  0012               	return		;funcret
  1871   0017CE                     __end_of___wmul:
  1872                           	callstack 0
  1873                           
  1874 ;; *************** function ___lwdiv *****************
  1875 ;; Defined at:
  1876 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1877 ;; Parameters:    Size  Location     Type
  1878 ;;  dividend        2   14[COMRAM] unsigned int 
  1879 ;;  divisor         2   16[COMRAM] unsigned int 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  quotient        2   18[COMRAM] unsigned int 
  1882 ;;  counter         1   20[COMRAM] unsigned char 
  1883 ;; Return value:  Size  Location     Type
  1884 ;;                  2   14[COMRAM] unsigned int 
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1892 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1893 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1895 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1896 ;;Total ram usage:        7 bytes
  1897 ;; Hardware stack levels used: 1
  1898 ;; Hardware stack levels required when called: 6
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_setMotorPWM
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           	psect	text12
  1907   00127E                     __ptext12:
  1908                           	callstack 0
  1909   00127E                     ___lwdiv:
  1910                           	callstack 22
  1911   00127E  0E00               	movlw	0
  1912   001280  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  1913   001282  0E00               	movlw	0
  1914   001284  6E13               	movwf	___lwdiv@quotient^0,c
  1915   001286  5011               	movf	___lwdiv@divisor^0,w,c
  1916   001288  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1917   00128A  B4D8               	btfsc	status,2,c
  1918   00128C  EF4A  F009         	goto	u341
  1919   001290  EF4C  F009         	goto	u340
  1920   001294                     u341:
  1921   001294  EF74  F009         	goto	l965
  1922   001298                     u340:
  1923   001298  0E01               	movlw	1
  1924   00129A  6E15               	movwf	___lwdiv@counter^0,c
  1925   00129C  EF54  F009         	goto	l1642
  1926   0012A0                     l1640:
  1927   0012A0  90D8               	bcf	status,0,c
  1928   0012A2  3611               	rlcf	___lwdiv@divisor^0,f,c
  1929   0012A4  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1930   0012A6  2A15               	incf	___lwdiv@counter^0,f,c
  1931   0012A8                     l1642:
  1932   0012A8  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  1933   0012AA  EF59  F009         	goto	u351
  1934   0012AE  EF5B  F009         	goto	u350
  1935   0012B2                     u351:
  1936   0012B2  EF50  F009         	goto	l1640
  1937   0012B6                     u350:
  1938   0012B6                     l1644:
  1939   0012B6  90D8               	bcf	status,0,c
  1940   0012B8  3613               	rlcf	___lwdiv@quotient^0,f,c
  1941   0012BA  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1942   0012BC  5011               	movf	___lwdiv@divisor^0,w,c
  1943   0012BE  5C0F               	subwf	___lwdiv@dividend^0,w,c
  1944   0012C0  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  1945   0012C2  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1946   0012C4  A0D8               	btfss	status,0,c
  1947   0012C6  EF67  F009         	goto	u361
  1948   0012CA  EF69  F009         	goto	u360
  1949   0012CE                     u361:
  1950   0012CE  EF6E  F009         	goto	l1652
  1951   0012D2                     u360:
  1952   0012D2  5011               	movf	___lwdiv@divisor^0,w,c
  1953   0012D4  5E0F               	subwf	___lwdiv@dividend^0,f,c
  1954   0012D6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  1955   0012D8  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1956   0012DA  8013               	bsf	___lwdiv@quotient^0,0,c
  1957   0012DC                     l1652:
  1958   0012DC  90D8               	bcf	status,0,c
  1959   0012DE  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1960   0012E0  3211               	rrcf	___lwdiv@divisor^0,f,c
  1961   0012E2  2E15               	decfsz	___lwdiv@counter^0,f,c
  1962   0012E4  EF5B  F009         	goto	l1644
  1963   0012E8                     l965:
  1964   0012E8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  1965   0012EC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1966   0012F0  0012               	return		;funcret
  1967   0012F2                     __end_of___lwdiv:
  1968                           	callstack 0
  1969                           
  1970 ;; *************** function _color_read_RGBC *****************
  1971 ;; Defined at:
  1972 ;;		line 92 in file "color.c"
  1973 ;; Parameters:    Size  Location     Type
  1974 ;;  temp            2   19[COMRAM] PTR struct RGBC_val
  1975 ;;		 -> main@RGBC(8), 
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;		None
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1987 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1990 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1991 ;;Total ram usage:        2 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 9
  1994 ;; This function calls:
  1995 ;;		_color_read_Blue
  1996 ;;		_color_read_Clear
  1997 ;;		_color_read_Green
  1998 ;;		_color_read_Red
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text13
  2005   001438                     __ptext13:
  2006                           	callstack 0
  2007   001438                     _color_read_RGBC:
  2008                           	callstack 21
  2009   001438                     
  2010                           ;color.c: 93:     temp->R = color_read_Red();
  2011   001438  EC4B  F00A         	call	_color_read_Red	;wreg free
  2012   00143C  C014  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2013   001440  C015  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2014   001444  C00D  FFDE         	movff	?_color_read_Red,postinc2
  2015   001448  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  2016                           
  2017                           ;color.c: 94:     temp->B = color_read_Blue();
  2018   00144C  ECC3  F00A         	call	_color_read_Blue	;wreg free
  2019   001450  EE20 F004          	lfsr	2,4
  2020   001454  5014               	movf	color_read_RGBC@temp^0,w,c
  2021   001456  26D9               	addwf	fsr2l,f,c
  2022   001458  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2023   00145A  22DA               	addwfc	fsr2h,f,c
  2024   00145C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  2025   001460  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  2026                           
  2027                           ;color.c: 95:     temp->G = color_read_Green();
  2028   001464  EC73  F00A         	call	_color_read_Green	;wreg free
  2029   001468  EE20 F002          	lfsr	2,2
  2030   00146C  5014               	movf	color_read_RGBC@temp^0,w,c
  2031   00146E  26D9               	addwf	fsr2l,f,c
  2032   001470  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2033   001472  22DA               	addwfc	fsr2h,f,c
  2034   001474  C00D  FFDE         	movff	?_color_read_Green,postinc2
  2035   001478  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  2036                           
  2037                           ;color.c: 96:     temp->C = color_read_Clear();
  2038   00147C  EC9B  F00A         	call	_color_read_Clear	;wreg free
  2039   001480  EE20 F006          	lfsr	2,6
  2040   001484  5014               	movf	color_read_RGBC@temp^0,w,c
  2041   001486  26D9               	addwf	fsr2l,f,c
  2042   001488  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2043   00148A  22DA               	addwfc	fsr2h,f,c
  2044   00148C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  2045   001490  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  2046   001494  0012               	return		;funcret
  2047   001496                     __end_of_color_read_RGBC:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _color_read_Red *****************
  2051 ;; Defined at:
  2052 ;;		line 33 in file "color.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;		None
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  tmp             2   17[COMRAM] unsigned int 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  2   12[COMRAM] unsigned int 
  2059 ;; Registers used:
  2060 ;;		wreg, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2066 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2068 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2069 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2070 ;;Total ram usage:        7 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 8
  2073 ;; This function calls:
  2074 ;;		_I2C_2_Master_Read
  2075 ;;		_I2C_2_Master_RepStart
  2076 ;;		_I2C_2_Master_Start
  2077 ;;		_I2C_2_Master_Stop
  2078 ;;		_I2C_2_Master_Write
  2079 ;; This function is called by:
  2080 ;;		_color_read_RGBC
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text14
  2085   001496                     __ptext14:
  2086                           	callstack 0
  2087   001496                     _color_read_Red:
  2088                           	callstack 21
  2089   001496                     
  2090                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  2091   001496  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2092                           
  2093                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  2094   00149A  0E52               	movlw	82
  2095   00149C  EC3D  F00C         	call	_I2C_2_Master_Write
  2096                           
  2097                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  2098   0014A0  0EB6               	movlw	182
  2099   0014A2  EC3D  F00C         	call	_I2C_2_Master_Write
  2100                           
  2101                           ;color.c: 39:  I2C_2_Master_RepStart();
  2102   0014A6  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2103                           
  2104                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  2105   0014AA  0E53               	movlw	83
  2106   0014AC  EC3D  F00C         	call	_I2C_2_Master_Write
  2107                           
  2108                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  2109   0014B0  0E01               	movlw	1
  2110   0014B2  ECEB  F00A         	call	_I2C_2_Master_Read
  2111   0014B6  6E0F               	movwf	??_color_read_Red^0,c
  2112   0014B8  500F               	movf	??_color_read_Red^0,w,c
  2113   0014BA  6E12               	movwf	color_read_Red@tmp^0,c
  2114   0014BC  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2115                           
  2116                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2117   0014BE  0E00               	movlw	0
  2118   0014C0  ECEB  F00A         	call	_I2C_2_Master_Read
  2119   0014C4  6E0F               	movwf	??_color_read_Red^0,c
  2120   0014C6  500F               	movf	??_color_read_Red^0,w,c
  2121   0014C8  6E11               	movwf	(??_color_read_Red+2)^0,c
  2122   0014CA  6A10               	clrf	(??_color_read_Red+1)^0,c
  2123   0014CC  5012               	movf	color_read_Red@tmp^0,w,c
  2124   0014CE  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2125   0014D0  6E12               	movwf	color_read_Red@tmp^0,c
  2126   0014D2  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2127   0014D4  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2128   0014D6  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2129                           
  2130                           ;color.c: 43:  I2C_2_Master_Stop();
  2131   0014D8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2132   0014DC                     
  2133                           ;color.c: 44:  return tmp;
  2134   0014DC  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2135   0014E0  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2136   0014E4  0012               	return		;funcret
  2137   0014E6                     __end_of_color_read_Red:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function _color_read_Green *****************
  2141 ;; Defined at:
  2142 ;;		line 47 in file "color.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;		None
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  tmp             2   17[COMRAM] unsigned int 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  2   12[COMRAM] unsigned int 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0, cstack
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2157 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2158 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2159 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2160 ;;Total ram usage:        7 bytes
  2161 ;; Hardware stack levels used: 1
  2162 ;; Hardware stack levels required when called: 8
  2163 ;; This function calls:
  2164 ;;		_I2C_2_Master_Read
  2165 ;;		_I2C_2_Master_RepStart
  2166 ;;		_I2C_2_Master_Start
  2167 ;;		_I2C_2_Master_Stop
  2168 ;;		_I2C_2_Master_Write
  2169 ;; This function is called by:
  2170 ;;		_color_read_RGBC
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           	psect	text15
  2175   0014E6                     __ptext15:
  2176                           	callstack 0
  2177   0014E6                     _color_read_Green:
  2178                           	callstack 21
  2179   0014E6                     
  2180                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  2181   0014E6  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2182                           
  2183                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  2184   0014EA  0E52               	movlw	82
  2185   0014EC  EC3D  F00C         	call	_I2C_2_Master_Write
  2186                           
  2187                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
  2188   0014F0  0EB8               	movlw	184
  2189   0014F2  EC3D  F00C         	call	_I2C_2_Master_Write
  2190                           
  2191                           ;color.c: 53:  I2C_2_Master_RepStart();
  2192   0014F6  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2193                           
  2194                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  2195   0014FA  0E53               	movlw	83
  2196   0014FC  EC3D  F00C         	call	_I2C_2_Master_Write
  2197                           
  2198                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  2199   001500  0E01               	movlw	1
  2200   001502  ECEB  F00A         	call	_I2C_2_Master_Read
  2201   001506  6E0F               	movwf	??_color_read_Green^0,c
  2202   001508  500F               	movf	??_color_read_Green^0,w,c
  2203   00150A  6E12               	movwf	color_read_Green@tmp^0,c
  2204   00150C  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2205                           
  2206                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2207   00150E  0E00               	movlw	0
  2208   001510  ECEB  F00A         	call	_I2C_2_Master_Read
  2209   001514  6E0F               	movwf	??_color_read_Green^0,c
  2210   001516  500F               	movf	??_color_read_Green^0,w,c
  2211   001518  6E11               	movwf	(??_color_read_Green+2)^0,c
  2212   00151A  6A10               	clrf	(??_color_read_Green+1)^0,c
  2213   00151C  5012               	movf	color_read_Green@tmp^0,w,c
  2214   00151E  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2215   001520  6E12               	movwf	color_read_Green@tmp^0,c
  2216   001522  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2217   001524  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2218   001526  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2219                           
  2220                           ;color.c: 57:  I2C_2_Master_Stop();
  2221   001528  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2222   00152C                     
  2223                           ;color.c: 58:  return tmp;
  2224   00152C  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2225   001530  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2226   001534  0012               	return		;funcret
  2227   001536                     __end_of_color_read_Green:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _color_read_Clear *****************
  2231 ;; Defined at:
  2232 ;;		line 75 in file "color.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  tmp             2   17[COMRAM] unsigned int 
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  2   12[COMRAM] unsigned int 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2247 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2248 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2249 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2250 ;;Total ram usage:        7 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 8
  2253 ;; This function calls:
  2254 ;;		_I2C_2_Master_Read
  2255 ;;		_I2C_2_Master_RepStart
  2256 ;;		_I2C_2_Master_Start
  2257 ;;		_I2C_2_Master_Stop
  2258 ;;		_I2C_2_Master_Write
  2259 ;; This function is called by:
  2260 ;;		_color_read_RGBC
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text16
  2265   001536                     __ptext16:
  2266                           	callstack 0
  2267   001536                     _color_read_Clear:
  2268                           	callstack 21
  2269   001536                     
  2270                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  2271   001536  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2272                           
  2273                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  2274   00153A  0E52               	movlw	82
  2275   00153C  EC3D  F00C         	call	_I2C_2_Master_Write
  2276                           
  2277                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  2278   001540  0EB4               	movlw	180
  2279   001542  EC3D  F00C         	call	_I2C_2_Master_Write
  2280                           
  2281                           ;color.c: 81:  I2C_2_Master_RepStart();
  2282   001546  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2283                           
  2284                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  2285   00154A  0E53               	movlw	83
  2286   00154C  EC3D  F00C         	call	_I2C_2_Master_Write
  2287                           
  2288                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  2289   001550  0E01               	movlw	1
  2290   001552  ECEB  F00A         	call	_I2C_2_Master_Read
  2291   001556  6E0F               	movwf	??_color_read_Clear^0,c
  2292   001558  500F               	movf	??_color_read_Clear^0,w,c
  2293   00155A  6E12               	movwf	color_read_Clear@tmp^0,c
  2294   00155C  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2295                           
  2296                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2297   00155E  0E00               	movlw	0
  2298   001560  ECEB  F00A         	call	_I2C_2_Master_Read
  2299   001564  6E0F               	movwf	??_color_read_Clear^0,c
  2300   001566  500F               	movf	??_color_read_Clear^0,w,c
  2301   001568  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2302   00156A  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2303   00156C  5012               	movf	color_read_Clear@tmp^0,w,c
  2304   00156E  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2305   001570  6E12               	movwf	color_read_Clear@tmp^0,c
  2306   001572  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2307   001574  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2308   001576  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2309                           
  2310                           ;color.c: 85:  I2C_2_Master_Stop();
  2311   001578  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2312   00157C                     
  2313                           ;color.c: 86:  return tmp;
  2314   00157C  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2315   001580  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2316   001584  0012               	return		;funcret
  2317   001586                     __end_of_color_read_Clear:
  2318                           	callstack 0
  2319                           
  2320 ;; *************** function _color_read_Blue *****************
  2321 ;; Defined at:
  2322 ;;		line 61 in file "color.c"
  2323 ;; Parameters:    Size  Location     Type
  2324 ;;		None
  2325 ;; Auto vars:     Size  Location     Type
  2326 ;;  tmp             2   17[COMRAM] unsigned int 
  2327 ;; Return value:  Size  Location     Type
  2328 ;;                  2   12[COMRAM] unsigned int 
  2329 ;; Registers used:
  2330 ;;		wreg, status,2, status,0, cstack
  2331 ;; Tracked objects:
  2332 ;;		On entry : 0/0
  2333 ;;		On exit  : 0/0
  2334 ;;		Unchanged: 0/0
  2335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2336 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2337 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2338 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2339 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2340 ;;Total ram usage:        7 bytes
  2341 ;; Hardware stack levels used: 1
  2342 ;; Hardware stack levels required when called: 8
  2343 ;; This function calls:
  2344 ;;		_I2C_2_Master_Read
  2345 ;;		_I2C_2_Master_RepStart
  2346 ;;		_I2C_2_Master_Start
  2347 ;;		_I2C_2_Master_Stop
  2348 ;;		_I2C_2_Master_Write
  2349 ;; This function is called by:
  2350 ;;		_color_read_RGBC
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text17
  2355   001586                     __ptext17:
  2356                           	callstack 0
  2357   001586                     _color_read_Blue:
  2358                           	callstack 21
  2359   001586                     
  2360                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  2361   001586  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2362                           
  2363                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  2364   00158A  0E52               	movlw	82
  2365   00158C  EC3D  F00C         	call	_I2C_2_Master_Write
  2366                           
  2367                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  2368   001590  0EBA               	movlw	186
  2369   001592  EC3D  F00C         	call	_I2C_2_Master_Write
  2370                           
  2371                           ;color.c: 67:  I2C_2_Master_RepStart();
  2372   001596  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2373                           
  2374                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  2375   00159A  0E53               	movlw	83
  2376   00159C  EC3D  F00C         	call	_I2C_2_Master_Write
  2377                           
  2378                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  2379   0015A0  0E01               	movlw	1
  2380   0015A2  ECEB  F00A         	call	_I2C_2_Master_Read
  2381   0015A6  6E0F               	movwf	??_color_read_Blue^0,c
  2382   0015A8  500F               	movf	??_color_read_Blue^0,w,c
  2383   0015AA  6E12               	movwf	color_read_Blue@tmp^0,c
  2384   0015AC  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2385                           
  2386                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2387   0015AE  0E00               	movlw	0
  2388   0015B0  ECEB  F00A         	call	_I2C_2_Master_Read
  2389   0015B4  6E0F               	movwf	??_color_read_Blue^0,c
  2390   0015B6  500F               	movf	??_color_read_Blue^0,w,c
  2391   0015B8  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2392   0015BA  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2393   0015BC  5012               	movf	color_read_Blue@tmp^0,w,c
  2394   0015BE  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2395   0015C0  6E12               	movwf	color_read_Blue@tmp^0,c
  2396   0015C2  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2397   0015C4  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2398   0015C6  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2399                           
  2400                           ;color.c: 71:  I2C_2_Master_Stop();
  2401   0015C8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2402   0015CC                     
  2403                           ;color.c: 72:  return tmp;
  2404   0015CC  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2405   0015D0  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2406   0015D4  0012               	return		;funcret
  2407   0015D6                     __end_of_color_read_Blue:
  2408                           	callstack 0
  2409                           
  2410 ;; *************** function _I2C_2_Master_RepStart *****************
  2411 ;; Defined at:
  2412 ;;		line 33 in file "i2c.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;		None
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      void 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2430 ;;Total ram usage:        0 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 7
  2433 ;; This function calls:
  2434 ;;		_I2C_2_Master_Idle
  2435 ;; This function is called by:
  2436 ;;		_color_read_Red
  2437 ;;		_color_read_Green
  2438 ;;		_color_read_Blue
  2439 ;;		_color_read_Clear
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text18
  2444   00189E                     __ptext18:
  2445                           	callstack 0
  2446   00189E                     _I2C_2_Master_RepStart:
  2447                           	callstack 21
  2448   00189E                     
  2449                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2450   00189E  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2451   0018A2                     
  2452                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2453   0018A2  010E               	movlb	14	; () banked
  2454   0018A4  83DA               	bsf	218,1,b	;volatile
  2455   0018A6                     
  2456                           ; BSR set to: 14
  2457   0018A6  0012               	return		;funcret
  2458   0018A8                     __end_of_I2C_2_Master_RepStart:
  2459                           	callstack 0
  2460                           
  2461 ;; *************** function _I2C_2_Master_Read *****************
  2462 ;; Defined at:
  2463 ;;		line 51 in file "i2c.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  ack             1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  ack             1   10[COMRAM] unsigned char 
  2468 ;;  tmp             1   11[COMRAM] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      unsigned char 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0, cstack
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2481 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2482 ;;Total ram usage:        3 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 7
  2485 ;; This function calls:
  2486 ;;		_I2C_2_Master_Idle
  2487 ;; This function is called by:
  2488 ;;		_color_read_Red
  2489 ;;		_color_read_Green
  2490 ;;		_color_read_Blue
  2491 ;;		_color_read_Clear
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text19
  2496   0015D6                     __ptext19:
  2497                           	callstack 0
  2498   0015D6                     _I2C_2_Master_Read:
  2499                           	callstack 21
  2500                           
  2501                           ; BSR set to: 14
  2502                           ;incstack = 0
  2503                           ;I2C_2_Master_Read@ack stored from wreg
  2504   0015D6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2505   0015D8                     
  2506                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2507   0015D8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2508   0015DC                     
  2509                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2510   0015DC  010E               	movlb	14	; () banked
  2511   0015DE  87DA               	bsf	218,3,b	;volatile
  2512                           
  2513                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2514   0015E0  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2515   0015E4                     
  2516                           ;i2c.c: 57:   tmp = SSP2BUF;
  2517   0015E4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2518                           
  2519                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2520   0015E8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2521   0015EC                     
  2522                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2523   0015EC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2524   0015EE  B4D8               	btfsc	status,2,c
  2525   0015F0  EFFC  F00A         	goto	u81
  2526   0015F4  EF00  F00B         	goto	u80
  2527   0015F8                     u81:
  2528   0015F8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2529   0015FA  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2530   0015FC  EF01  F00B         	goto	u98
  2531   001600                     u80:
  2532   001600  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2533   001602                     u98:
  2534   001602  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2535   001604  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2536   001606  010E               	movlb	14	; () banked
  2537   001608  51DA               	movf	218,w,b	;volatile
  2538   00160A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2539   00160C  0BDF               	andlw	-33
  2540   00160E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2541   001610  6FDA               	movwf	218,b	;volatile
  2542   001612                     
  2543                           ; BSR set to: 14
  2544                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2545   001612  89DA               	bsf	218,4,b	;volatile
  2546   001614                     
  2547                           ; BSR set to: 14
  2548                           ;i2c.c: 61:   return tmp;
  2549   001614  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2550   001616                     
  2551                           ; BSR set to: 14
  2552   001616  0012               	return		;funcret
  2553   001618                     __end_of_I2C_2_Master_Read:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _color_click_init *****************
  2557 ;; Defined at:
  2558 ;;		line 9 in file "color.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;		None
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0, cstack
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2574 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2575 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2576 ;;Total ram usage:        1 bytes
  2577 ;; Hardware stack levels used: 1
  2578 ;; Hardware stack levels required when called: 9
  2579 ;; This function calls:
  2580 ;;		_I2C_2_Master_Init
  2581 ;;		_color_writetoaddr
  2582 ;; This function is called by:
  2583 ;;		_main
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           	psect	text20
  2588   001618                     __ptext20:
  2589                           	callstack 0
  2590   001618                     _color_click_init:
  2591                           	callstack 21
  2592   001618                     
  2593                           ;color.c: 12:     I2C_2_Master_Init();
  2594   001618  EC6D  F00B         	call	_I2C_2_Master_Init	;wreg free
  2595   00161C                     
  2596                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  2597   00161C  0E01               	movlw	1
  2598   00161E  6E0B               	movwf	color_writetoaddr@value^0,c
  2599   001620  0E00               	movlw	0
  2600   001622  ECE7  F00B         	call	_color_writetoaddr
  2601   001626                     
  2602                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2603   001626  0E3F               	movlw	63
  2604   001628  6E0D               	movwf	??_color_click_init^0,c
  2605   00162A  0E55               	movlw	85
  2606   00162C                     u577:
  2607   00162C  2EE8               	decfsz	wreg,f,c
  2608   00162E  D7FE               	bra	u577
  2609   001630  2E0D               	decfsz	??_color_click_init^0,f,c
  2610   001632  D7FC               	bra	u577
  2611   001634  F000               	nop	
  2612   001636                     
  2613                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  2614   001636  0E03               	movlw	3
  2615   001638  6E0B               	movwf	color_writetoaddr@value^0,c
  2616   00163A  0E00               	movlw	0
  2617   00163C  ECE7  F00B         	call	_color_writetoaddr
  2618   001640                     
  2619                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  2620   001640  0ED5               	movlw	213
  2621   001642  6E0B               	movwf	color_writetoaddr@value^0,c
  2622   001644  0E01               	movlw	1
  2623   001646  ECE7  F00B         	call	_color_writetoaddr
  2624   00164A  0012               	return		;funcret
  2625   00164C                     __end_of_color_click_init:
  2626                           	callstack 0
  2627                           
  2628 ;; *************** function _I2C_2_Master_Init *****************
  2629 ;; Defined at:
  2630 ;;		line 4 in file "i2c.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 6
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_color_click_init
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text21
  2659   0016DA                     __ptext21:
  2660                           	callstack 0
  2661   0016DA                     _I2C_2_Master_Init:
  2662                           	callstack 23
  2663   0016DA                     
  2664                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2665   0016DA  010E               	movlb	14	; () banked
  2666   0016DC  51D9               	movf	217,w,b	;volatile
  2667   0016DE  0BF0               	andlw	-16
  2668   0016E0  0908               	iorlw	8
  2669   0016E2  6FD9               	movwf	217,b	;volatile
  2670   0016E4                     
  2671                           ; BSR set to: 14
  2672                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2673   0016E4  8BD9               	bsf	217,5,b	;volatile
  2674                           
  2675                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2676   0016E6  0E9F               	movlw	159
  2677   0016E8  6FD6               	movwf	214,b	;volatile
  2678   0016EA                     
  2679                           ; BSR set to: 14
  2680                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2681   0016EA  8A84               	bsf	132,5,c	;volatile
  2682   0016EC                     
  2683                           ; BSR set to: 14
  2684                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2685   0016EC  8C84               	bsf	132,6,c	;volatile
  2686   0016EE                     
  2687                           ; BSR set to: 14
  2688                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2689   0016EE  9BA7               	bcf	167,5,b	;volatile
  2690   0016F0                     
  2691                           ; BSR set to: 14
  2692                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2693   0016F0  9DA7               	bcf	167,6,b	;volatile
  2694                           
  2695                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2696   0016F2  0E1D               	movlw	29
  2697   0016F4  6F1D               	movwf	29,b	;volatile
  2698                           
  2699                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2700   0016F6  0E1E               	movlw	30
  2701   0016F8  6F1C               	movwf	28,b	;volatile
  2702                           
  2703                           ;i2c.c: 18:   RD5PPS=0x1C;
  2704   0016FA  0E1C               	movlw	28
  2705   0016FC  6F6F               	movwf	111,b	;volatile
  2706                           
  2707                           ;i2c.c: 19:   RD6PPS=0x1B;
  2708   0016FE  0E1B               	movlw	27
  2709   001700  6F70               	movwf	112,b	;volatile
  2710   001702                     
  2711                           ; BSR set to: 14
  2712   001702  0012               	return		;funcret
  2713   001704                     __end_of_I2C_2_Master_Init:
  2714                           	callstack 0
  2715                           
  2716 ;; *************** function _Interrupts_init *****************
  2717 ;; Defined at:
  2718 ;;		line 10 in file "interrupts.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;		None
  2721 ;; Auto vars:     Size  Location     Type
  2722 ;;		None
  2723 ;; Return value:  Size  Location     Type
  2724 ;;                  1    wreg      void 
  2725 ;; Registers used:
  2726 ;;		None
  2727 ;; Tracked objects:
  2728 ;;		On entry : 0/0
  2729 ;;		On exit  : 0/0
  2730 ;;		Unchanged: 0/0
  2731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;Total ram usage:        0 bytes
  2737 ;; Hardware stack levels used: 1
  2738 ;; Hardware stack levels required when called: 6
  2739 ;; This function calls:
  2740 ;;		Nothing
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text22
  2747   001858                     __ptext22:
  2748                           	callstack 0
  2749   001858                     _Interrupts_init:
  2750                           	callstack 24
  2751   001858                     
  2752                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  2753   001858  8082               	bsf	130,0,c	;volatile
  2754                           
  2755                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  2756   00185A  010E               	movlb	14	; () banked
  2757   00185C  919A               	bcf	154,0,b	;volatile
  2758                           
  2759                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  2760   00185E  9133               	bcf	51,0,b	;volatile
  2761                           
  2762                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  2763   001860  8129               	bsf	41,0,b	;volatile
  2764                           
  2765                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  2766   001862  811F               	bsf	31,0,b	;volatile
  2767                           
  2768                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  2769   001864  90F2               	bcf	242,0,c	;volatile
  2770                           
  2771                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  2772   001866  8AF2               	bsf	242,5,c	;volatile
  2773                           
  2774                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  2775   001868  8CF2               	bsf	242,6,c	;volatile
  2776                           
  2777                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  2778   00186A  8EF2               	bsf	242,7,c	;volatile
  2779   00186C                     
  2780                           ; BSR set to: 14
  2781   00186C  0012               	return		;funcret
  2782   00186E                     __end_of_Interrupts_init:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _Color_Interrupts_threshold *****************
  2786 ;; Defined at:
  2787 ;;		line 38 in file "interrupts.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  upperThresho    2   12[COMRAM] unsigned int 
  2790 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;		None
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2805 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2806 ;;Total ram usage:        4 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 9
  2809 ;; This function calls:
  2810 ;;		_color_writetoaddr
  2811 ;; This function is called by:
  2812 ;;		_main
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           	psect	text23
  2817   001704                     __ptext23:
  2818                           	callstack 0
  2819   001704                     _Color_Interrupts_threshold:
  2820                           	callstack 21
  2821   001704                     
  2822                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  2823   001704  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  2824   001708  0E04               	movlw	4
  2825   00170A  ECE7  F00B         	call	_color_writetoaddr
  2826                           
  2827                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  2828   00170E  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  2829   001710  6E0B               	movwf	color_writetoaddr@value^0,c
  2830   001712  0E05               	movlw	5
  2831   001714  ECE7  F00B         	call	_color_writetoaddr
  2832                           
  2833                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  2834   001718  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  2835   00171C  0E06               	movlw	6
  2836   00171E  ECE7  F00B         	call	_color_writetoaddr
  2837                           
  2838                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  2839   001722  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  2840   001724  6E0B               	movwf	color_writetoaddr@value^0,c
  2841   001726  0E07               	movlw	7
  2842   001728  ECE7  F00B         	call	_color_writetoaddr
  2843   00172C  0012               	return		;funcret
  2844   00172E                     __end_of_Color_Interrupts_threshold:
  2845                           	callstack 0
  2846                           
  2847 ;; *************** function _Color_Interrupts_init *****************
  2848 ;; Defined at:
  2849 ;;		line 29 in file "interrupts.c"
  2850 ;; Parameters:    Size  Location     Type
  2851 ;;		None
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;		None
  2854 ;; Return value:  Size  Location     Type
  2855 ;;                  1    wreg      void 
  2856 ;; Registers used:
  2857 ;;		wreg, status,2, status,0, cstack
  2858 ;; Tracked objects:
  2859 ;;		On entry : 0/0
  2860 ;;		On exit  : 0/0
  2861 ;;		Unchanged: 0/0
  2862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2865 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2866 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;Total ram usage:        1 bytes
  2868 ;; Hardware stack levels used: 1
  2869 ;; Hardware stack levels required when called: 9
  2870 ;; This function calls:
  2871 ;;		_color_writetoaddr
  2872 ;; This function is called by:
  2873 ;;		_main
  2874 ;; This function uses a non-reentrant model
  2875 ;;
  2876                           
  2877                           	psect	text24
  2878   00180E                     __ptext24:
  2879                           	callstack 0
  2880   00180E                     _Color_Interrupts_init:
  2881                           	callstack 21
  2882   00180E                     
  2883                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  2884   00180E  0E13               	movlw	19
  2885   001810  6E0B               	movwf	color_writetoaddr@value^0,c
  2886   001812  0E00               	movlw	0
  2887   001814  ECE7  F00B         	call	_color_writetoaddr
  2888   001818                     
  2889                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  2890   001818  0ED0               	movlw	208
  2891   00181A  6E0D               	movwf	??_Color_Interrupts_init^0,c
  2892   00181C  0ECA               	movlw	202
  2893   00181E                     u587:
  2894   00181E  2EE8               	decfsz	wreg,f,c
  2895   001820  D7FE               	bra	u587
  2896   001822  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  2897   001824  D7FC               	bra	u587
  2898   001826  0012               	return		;funcret
  2899   001828                     __end_of_Color_Interrupts_init:
  2900                           	callstack 0
  2901                           
  2902 ;; *************** function _color_writetoaddr *****************
  2903 ;; Defined at:
  2904 ;;		line 25 in file "color.c"
  2905 ;; Parameters:    Size  Location     Type
  2906 ;;  address         1    wreg     unsigned char 
  2907 ;;  value           1   10[COMRAM] unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  address         1   11[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      void 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2919 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;Total ram usage:        2 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 8
  2926 ;; This function calls:
  2927 ;;		_I2C_2_Master_Start
  2928 ;;		_I2C_2_Master_Stop
  2929 ;;		_I2C_2_Master_Write
  2930 ;; This function is called by:
  2931 ;;		_color_click_init
  2932 ;;		_Color_Interrupts_init
  2933 ;;		_Color_Interrupts_threshold
  2934 ;;		_persistence_register
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text25
  2939   0017CE                     __ptext25:
  2940                           	callstack 0
  2941   0017CE                     _color_writetoaddr:
  2942                           	callstack 21
  2943                           
  2944                           ;incstack = 0
  2945                           ;color_writetoaddr@address stored from wreg
  2946   0017CE  6E0C               	movwf	color_writetoaddr@address^0,c
  2947   0017D0                     
  2948                           ;color.c: 26:     I2C_2_Master_Start();
  2949   0017D0  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2950                           
  2951                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  2952   0017D4  0E52               	movlw	82
  2953   0017D6  EC3D  F00C         	call	_I2C_2_Master_Write
  2954                           
  2955                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  2956   0017DA  500C               	movf	color_writetoaddr@address^0,w,c
  2957   0017DC  0980               	iorlw	128
  2958   0017DE  EC3D  F00C         	call	_I2C_2_Master_Write
  2959                           
  2960                           ;color.c: 29:     I2C_2_Master_Write(value);
  2961   0017E2  500B               	movf	color_writetoaddr@value^0,w,c
  2962   0017E4  EC3D  F00C         	call	_I2C_2_Master_Write
  2963                           
  2964                           ;color.c: 30:     I2C_2_Master_Stop();
  2965   0017E8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2966   0017EC  0012               	return		;funcret
  2967   0017EE                     __end_of_color_writetoaddr:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _I2C_2_Master_Write *****************
  2971 ;; Defined at:
  2972 ;;		line 45 in file "i2c.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;  data_byte       1    wreg     unsigned char 
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;  data_byte       1    9[COMRAM] unsigned char 
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		wreg, status,2, status,0, cstack
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2987 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2989 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2990 ;;Total ram usage:        1 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; Hardware stack levels required when called: 7
  2993 ;; This function calls:
  2994 ;;		_I2C_2_Master_Idle
  2995 ;; This function is called by:
  2996 ;;		_color_writetoaddr
  2997 ;;		_color_read_Red
  2998 ;;		_color_read_Green
  2999 ;;		_color_read_Blue
  3000 ;;		_color_read_Clear
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text26
  3005   00187A                     __ptext26:
  3006                           	callstack 0
  3007   00187A                     _I2C_2_Master_Write:
  3008                           	callstack 21
  3009                           
  3010                           ;incstack = 0
  3011                           ;I2C_2_Master_Write@data_byte stored from wreg
  3012   00187A  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  3013   00187C                     
  3014                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3015   00187C  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3016   001880                     
  3017                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3018   001880  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3019   001884  0012               	return		;funcret
  3020   001886                     __end_of_I2C_2_Master_Write:
  3021                           	callstack 0
  3022                           
  3023 ;; *************** function _I2C_2_Master_Stop *****************
  3024 ;; Defined at:
  3025 ;;		line 39 in file "i2c.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;		None
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      void 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3043 ;;Total ram usage:        0 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 7
  3046 ;; This function calls:
  3047 ;;		_I2C_2_Master_Idle
  3048 ;; This function is called by:
  3049 ;;		_color_writetoaddr
  3050 ;;		_color_read_Red
  3051 ;;		_color_read_Green
  3052 ;;		_color_read_Blue
  3053 ;;		_color_read_Clear
  3054 ;; This function uses a non-reentrant model
  3055 ;;
  3056                           
  3057                           	psect	text27
  3058   0018A8                     __ptext27:
  3059                           	callstack 0
  3060   0018A8                     _I2C_2_Master_Stop:
  3061                           	callstack 21
  3062   0018A8                     
  3063                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3064   0018A8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3065   0018AC                     
  3066                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3067   0018AC  010E               	movlb	14	; () banked
  3068   0018AE  85DA               	bsf	218,2,b	;volatile
  3069   0018B0                     
  3070                           ; BSR set to: 14
  3071   0018B0  0012               	return		;funcret
  3072   0018B2                     __end_of_I2C_2_Master_Stop:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _I2C_2_Master_Start *****************
  3076 ;; Defined at:
  3077 ;;		line 27 in file "i2c.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;		None
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;		None
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3095 ;;Total ram usage:        0 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 7
  3098 ;; This function calls:
  3099 ;;		_I2C_2_Master_Idle
  3100 ;; This function is called by:
  3101 ;;		_color_writetoaddr
  3102 ;;		_color_read_Red
  3103 ;;		_color_read_Green
  3104 ;;		_color_read_Blue
  3105 ;;		_color_read_Clear
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text28
  3110   0018B2                     __ptext28:
  3111                           	callstack 0
  3112   0018B2                     _I2C_2_Master_Start:
  3113                           	callstack 21
  3114   0018B2                     
  3115                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3116   0018B2  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3117   0018B6                     
  3118                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3119   0018B6  010E               	movlb	14	; () banked
  3120   0018B8  81DA               	bsf	218,0,b	;volatile
  3121   0018BA                     
  3122                           ; BSR set to: 14
  3123   0018BA  0012               	return		;funcret
  3124   0018BC                     __end_of_I2C_2_Master_Start:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _I2C_2_Master_Idle *****************
  3128 ;; Defined at:
  3129 ;;		line 22 in file "i2c.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3145 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3146 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3147 ;;Total ram usage:        1 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 6
  3150 ;; This function calls:
  3151 ;;		Nothing
  3152 ;; This function is called by:
  3153 ;;		_I2C_2_Master_Start
  3154 ;;		_I2C_2_Master_RepStart
  3155 ;;		_I2C_2_Master_Stop
  3156 ;;		_I2C_2_Master_Write
  3157 ;;		_I2C_2_Master_Read
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161                           	psect	text29
  3162   001758                     __ptext29:
  3163                           	callstack 0
  3164   001758                     _I2C_2_Master_Idle:
  3165                           	callstack 21
  3166   001758                     l120:
  3167   001758  010E               	movlb	14	; () banked
  3168   00175A  B5D8               	btfsc	216,2,b	;volatile
  3169   00175C  EFB2  F00B         	goto	u31
  3170   001760  EFB4  F00B         	goto	u30
  3171   001764                     u31:
  3172   001764  EFAC  F00B         	goto	l120
  3173   001768                     u30:
  3174   001768                     
  3175                           ; BSR set to: 14
  3176   001768  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3177   00176C  0E1F               	movlw	31
  3178   00176E  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  3179   001770  A4D8               	btfss	status,2,c
  3180   001772  EFBD  F00B         	goto	u41
  3181   001776  EFBF  F00B         	goto	u40
  3182   00177A                     u41:
  3183   00177A  EFAC  F00B         	goto	l120
  3184   00177E                     u40:
  3185   00177E                     
  3186                           ; BSR set to: 14
  3187   00177E  0012               	return		;funcret
  3188   001780                     __end_of_I2C_2_Master_Idle:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _HighISR *****************
  3192 ;; Defined at:
  3193 ;;		line 71 in file "interrupts.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;		None
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;		None
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg, status,2, status,0, cstack
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3211 ;;Total ram usage:        0 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; Hardware stack levels required when called: 5
  3214 ;; This function calls:
  3215 ;;		_Color_Interrupts_clear
  3216 ;; This function is called by:
  3217 ;;		Interrupt level 2
  3218 ;; This function uses a non-reentrant model
  3219 ;;
  3220                           
  3221                           	psect	intcode
  3222   000008                     __pintcode:
  3223                           	callstack 0
  3224   000008                     _HighISR:
  3225                           	callstack 21
  3226                           
  3227                           ; BSR set to: 14
  3228                           ;incstack = 0
  3229   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3230   00000A                     
  3231                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  3232   00000A  010E               	movlb	14	; () banked
  3233   00000C  A133               	btfss	51,0,b	;volatile
  3234   00000E  EF0B  F000         	goto	i2u48_41
  3235   000012  EF0D  F000         	goto	i2u48_40
  3236   000016                     i2u48_41:
  3237   000016  EF16  F000         	goto	i2l353
  3238   00001A                     i2u48_40:
  3239   00001A                     
  3240                           ; BSR set to: 14
  3241                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  3242   00001A  8E7C               	bsf	124,7,c	;volatile
  3243   00001C                     
  3244                           ; BSR set to: 14
  3245                           ;interrupts.c: 76:         interrupt_flag = 1;
  3246   00001C  0E00               	movlw	0
  3247   00001E  6E47               	movwf	(_interrupt_flag+1)^0,c
  3248   000020  0E01               	movlw	1
  3249   000022  6E46               	movwf	_interrupt_flag^0,c
  3250   000024                     
  3251                           ; BSR set to: 14
  3252                           ;interrupts.c: 78:         Color_Interrupts_clear();
  3253   000024  EC3F  F00B         	call	_Color_Interrupts_clear	;wreg free
  3254   000028                     
  3255                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  3256   000028  010E               	movlb	14	; () banked
  3257   00002A  9133               	bcf	51,0,b	;volatile
  3258   00002C                     i2l353:
  3259                           
  3260                           ; BSR set to: 14
  3261   00002C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3262   00002E  0011               	retfie		f
  3263   000030                     __end_of_HighISR:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _Color_Interrupts_clear *****************
  3267 ;; Defined at:
  3268 ;;		line 51 in file "interrupts.c"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;		None
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;		None
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, status,0, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;Total ram usage:        0 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 4
  3289 ;; This function calls:
  3290 ;;		i2_Color_Interrupts_init
  3291 ;;		i2_Color_Interrupts_threshold
  3292 ;;		i2_I2C_2_Master_Start
  3293 ;;		i2_I2C_2_Master_Stop
  3294 ;;		i2_I2C_2_Master_Write
  3295 ;;		i2_persistence_register
  3296 ;; This function is called by:
  3297 ;;		_HighISR
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text31
  3302   00167E                     __ptext31:
  3303                           	callstack 0
  3304   00167E                     _Color_Interrupts_clear:
  3305                           	callstack 21
  3306   00167E                     
  3307                           ;interrupts.c: 55:     I2C_2_Master_Start();
  3308   00167E  EC63  F00C         	call	i2_I2C_2_Master_Start	;wreg free
  3309                           
  3310                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  3311   001682  0E52               	movlw	82
  3312   001684  EC49  F00C         	call	i2_I2C_2_Master_Write
  3313                           
  3314                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  3315   001688  0EE6               	movlw	230
  3316   00168A  EC49  F00C         	call	i2_I2C_2_Master_Write
  3317                           
  3318                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  3319   00168E  EC5E  F00C         	call	i2_I2C_2_Master_Stop	;wreg free
  3320                           
  3321                           ;interrupts.c: 61:     Color_Interrupts_init();
  3322   001692  EC14  F00C         	call	i2_Color_Interrupts_init	;wreg free
  3323                           
  3324                           ;interrupts.c: 62:     persistence_register();
  3325   001696  EC43  F00C         	call	i2_persistence_register	;wreg free
  3326                           
  3327                           ;interrupts.c: 63:     Color_Interrupts_threshold(5000, 0);
  3328   00169A  0E13               	movlw	19
  3329   00169C  6E06               	movwf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,c
  3330   00169E  0E88               	movlw	136
  3331   0016A0  6E05               	movwf	i2Color_Interrupts_threshold@upperThreshold^0,c
  3332   0016A2  0E00               	movlw	0
  3333   0016A4  6E08               	movwf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,c
  3334   0016A6  0E00               	movlw	0
  3335   0016A8  6E07               	movwf	i2Color_Interrupts_threshold@lowerThreshold^0,c
  3336   0016AA  EC97  F00B         	call	i2_Color_Interrupts_threshold	;wreg free
  3337   0016AE  0012               	return		;funcret
  3338   0016B0                     __end_of_Color_Interrupts_clear:
  3339                           	callstack 0
  3340                           
  3341 ;; *************** function i2_persistence_register *****************
  3342 ;; Defined at:
  3343 ;;		line 46 in file "interrupts.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		wreg, status,2, status,0, cstack
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 3
  3364 ;; This function calls:
  3365 ;;		i2_color_writetoaddr
  3366 ;; This function is called by:
  3367 ;;		_Color_Interrupts_clear
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           	psect	text32
  3372   001886                     __ptext32:
  3373                           	callstack 0
  3374   001886                     i2_persistence_register:
  3375                           	callstack 21
  3376   001886                     
  3377                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3378   001886  0E02               	movlw	2
  3379   001888  6E03               	movwf	i2color_writetoaddr@value^0,c
  3380   00188A  0E0C               	movlw	12
  3381   00188C  ECF7  F00B         	call	i2_color_writetoaddr
  3382   001890  0012               	return		;funcret
  3383   001892                     __end_ofi2_persistence_register:
  3384                           	callstack 0
  3385                           
  3386 ;; *************** function i2_Color_Interrupts_threshold *****************
  3387 ;; Defined at:
  3388 ;;		line 38 in file "interrupts.c"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;  upperThresho    2    4[COMRAM] unsigned int 
  3391 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3403 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3407 ;;Total ram usage:        4 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 3
  3410 ;; This function calls:
  3411 ;;		i2_color_writetoaddr
  3412 ;; This function is called by:
  3413 ;;		_Color_Interrupts_clear
  3414 ;; This function uses a non-reentrant model
  3415 ;;
  3416                           
  3417                           	psect	text33
  3418   00172E                     __ptext33:
  3419                           	callstack 0
  3420   00172E                     i2_Color_Interrupts_threshold:
  3421                           	callstack 21
  3422   00172E                     
  3423                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  3424   00172E  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  3425   001732  0E04               	movlw	4
  3426   001734  ECF7  F00B         	call	i2_color_writetoaddr
  3427                           
  3428                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  3429   001738  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  3430   00173A  6E03               	movwf	i2color_writetoaddr@value^0,c
  3431   00173C  0E05               	movlw	5
  3432   00173E  ECF7  F00B         	call	i2_color_writetoaddr
  3433                           
  3434                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  3435   001742  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  3436   001746  0E06               	movlw	6
  3437   001748  ECF7  F00B         	call	i2_color_writetoaddr
  3438                           
  3439                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  3440   00174C  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  3441   00174E  6E03               	movwf	i2color_writetoaddr@value^0,c
  3442   001750  0E07               	movlw	7
  3443   001752  ECF7  F00B         	call	i2_color_writetoaddr
  3444   001756  0012               	return		;funcret
  3445   001758                     __end_ofi2_Color_Interrupts_threshold:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function i2_Color_Interrupts_init *****************
  3449 ;; Defined at:
  3450 ;;		line 29 in file "interrupts.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;		None
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;Total ram usage:        1 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 3
  3471 ;; This function calls:
  3472 ;;		i2_color_writetoaddr
  3473 ;; This function is called by:
  3474 ;;		_Color_Interrupts_clear
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text34
  3479   001828                     __ptext34:
  3480                           	callstack 0
  3481   001828                     i2_Color_Interrupts_init:
  3482                           	callstack 21
  3483   001828                     
  3484                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  3485   001828  0E13               	movlw	19
  3486   00182A  6E03               	movwf	i2color_writetoaddr@value^0,c
  3487   00182C  0E00               	movlw	0
  3488   00182E  ECF7  F00B         	call	i2_color_writetoaddr
  3489   001832                     
  3490                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  3491   001832  0ED0               	movlw	208
  3492   001834  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  3493   001836  0ECA               	movlw	202
  3494   001838                     i2u59_47:
  3495   001838  2EE8               	decfsz	wreg,f,c
  3496   00183A  D7FE               	bra	i2u59_47
  3497   00183C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  3498   00183E  D7FC               	bra	i2u59_47
  3499   001840  0012               	return		;funcret
  3500   001842                     __end_ofi2_Color_Interrupts_init:
  3501                           	callstack 0
  3502                           
  3503 ;; *************** function i2_color_writetoaddr *****************
  3504 ;; Defined at:
  3505 ;;		line 25 in file "color.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  address         1    wreg     unsigned char 
  3508 ;;  value           1    2[COMRAM] unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  address         1    3[COMRAM] unsigned char 
  3511 ;; Return value:  Size  Location     Type
  3512 ;;                  1    wreg      void 
  3513 ;; Registers used:
  3514 ;;		wreg, status,2, status,0, cstack
  3515 ;; Tracked objects:
  3516 ;;		On entry : 0/0
  3517 ;;		On exit  : 0/0
  3518 ;;		Unchanged: 0/0
  3519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3520 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3521 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3524 ;;Total ram usage:        2 bytes
  3525 ;; Hardware stack levels used: 1
  3526 ;; Hardware stack levels required when called: 2
  3527 ;; This function calls:
  3528 ;;		i2_I2C_2_Master_Start
  3529 ;;		i2_I2C_2_Master_Stop
  3530 ;;		i2_I2C_2_Master_Write
  3531 ;; This function is called by:
  3532 ;;		i2_Color_Interrupts_init
  3533 ;;		i2_Color_Interrupts_threshold
  3534 ;;		i2_persistence_register
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text35
  3539   0017EE                     __ptext35:
  3540                           	callstack 0
  3541   0017EE                     i2_color_writetoaddr:
  3542                           	callstack 21
  3543                           
  3544                           ;incstack = 0
  3545                           ;i2color_writetoaddr@address stored from wreg
  3546   0017EE  6E04               	movwf	i2color_writetoaddr@address^0,c
  3547   0017F0                     
  3548                           ;color.c: 26:     I2C_2_Master_Start();
  3549   0017F0  EC63  F00C         	call	i2_I2C_2_Master_Start	;wreg free
  3550                           
  3551                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  3552   0017F4  0E52               	movlw	82
  3553   0017F6  EC49  F00C         	call	i2_I2C_2_Master_Write
  3554                           
  3555                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  3556   0017FA  5004               	movf	i2color_writetoaddr@address^0,w,c
  3557   0017FC  0980               	iorlw	128
  3558   0017FE  EC49  F00C         	call	i2_I2C_2_Master_Write
  3559                           
  3560                           ;color.c: 29:     I2C_2_Master_Write(value);
  3561   001802  5003               	movf	i2color_writetoaddr@value^0,w,c
  3562   001804  EC49  F00C         	call	i2_I2C_2_Master_Write
  3563                           
  3564                           ;color.c: 30:     I2C_2_Master_Stop();
  3565   001808  EC5E  F00C         	call	i2_I2C_2_Master_Stop	;wreg free
  3566   00180C  0012               	return		;funcret
  3567   00180E                     __end_ofi2_color_writetoaddr:
  3568                           	callstack 0
  3569                           
  3570 ;; *************** function i2_I2C_2_Master_Write *****************
  3571 ;; Defined at:
  3572 ;;		line 45 in file "i2c.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;  data_byte       1    wreg     unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  data_byte       1    1[COMRAM] unsigned char 
  3577 ;; Return value:  Size  Location     Type
  3578 ;;                  1    wreg      void 
  3579 ;; Registers used:
  3580 ;;		wreg, status,2, status,0, cstack
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3590 ;;Total ram usage:        1 bytes
  3591 ;; Hardware stack levels used: 1
  3592 ;; Hardware stack levels required when called: 1
  3593 ;; This function calls:
  3594 ;;		i2_I2C_2_Master_Idle
  3595 ;; This function is called by:
  3596 ;;		_Color_Interrupts_clear
  3597 ;;		i2_color_writetoaddr
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text36
  3602   001892                     __ptext36:
  3603                           	callstack 0
  3604   001892                     i2_I2C_2_Master_Write:
  3605                           	callstack 21
  3606                           
  3607                           ;incstack = 0
  3608                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  3609   001892  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  3610   001894                     
  3611                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3612   001894  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3613   001898                     
  3614                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3615   001898  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  3616   00189C  0012               	return		;funcret
  3617   00189E                     __end_ofi2_I2C_2_Master_Write:
  3618                           	callstack 0
  3619                           
  3620 ;; *************** function i2_I2C_2_Master_Stop *****************
  3621 ;; Defined at:
  3622 ;;		line 39 in file "i2c.c"
  3623 ;; Parameters:    Size  Location     Type
  3624 ;;		None
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;		None
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  1    wreg      void 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0, cstack
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3640 ;;Total ram usage:        0 bytes
  3641 ;; Hardware stack levels used: 1
  3642 ;; Hardware stack levels required when called: 1
  3643 ;; This function calls:
  3644 ;;		i2_I2C_2_Master_Idle
  3645 ;; This function is called by:
  3646 ;;		_Color_Interrupts_clear
  3647 ;;		i2_color_writetoaddr
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651                           	psect	text37
  3652   0018BC                     __ptext37:
  3653                           	callstack 0
  3654   0018BC                     i2_I2C_2_Master_Stop:
  3655                           	callstack 21
  3656   0018BC                     
  3657                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3658   0018BC  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3659   0018C0                     
  3660                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3661   0018C0  010E               	movlb	14	; () banked
  3662   0018C2  85DA               	bsf	218,2,b	;volatile
  3663   0018C4                     
  3664                           ; BSR set to: 14
  3665   0018C4  0012               	return		;funcret
  3666   0018C6                     __end_ofi2_I2C_2_Master_Stop:
  3667                           	callstack 0
  3668                           
  3669 ;; *************** function i2_I2C_2_Master_Start *****************
  3670 ;; Defined at:
  3671 ;;		line 27 in file "i2c.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used: 1
  3691 ;; Hardware stack levels required when called: 1
  3692 ;; This function calls:
  3693 ;;		i2_I2C_2_Master_Idle
  3694 ;; This function is called by:
  3695 ;;		_Color_Interrupts_clear
  3696 ;;		i2_color_writetoaddr
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text38
  3701   0018C6                     __ptext38:
  3702                           	callstack 0
  3703   0018C6                     i2_I2C_2_Master_Start:
  3704                           	callstack 21
  3705   0018C6                     
  3706                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3707   0018C6  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3708   0018CA                     
  3709                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3710   0018CA  010E               	movlb	14	; () banked
  3711   0018CC  81DA               	bsf	218,0,b	;volatile
  3712   0018CE                     
  3713                           ; BSR set to: 14
  3714   0018CE  0012               	return		;funcret
  3715   0018D0                     __end_ofi2_I2C_2_Master_Start:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function i2_I2C_2_Master_Idle *****************
  3719 ;; Defined at:
  3720 ;;		line 22 in file "i2c.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;		None
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      void 
  3727 ;; Registers used:
  3728 ;;		wreg, status,2, status,0
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3736 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3737 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3738 ;;Total ram usage:        1 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		i2_I2C_2_Master_Start
  3744 ;;		i2_I2C_2_Master_Stop
  3745 ;;		i2_I2C_2_Master_Write
  3746 ;; This function uses a non-reentrant model
  3747 ;;
  3748                           
  3749                           	psect	text39
  3750   001780                     __ptext39:
  3751                           	callstack 0
  3752   001780                     i2_I2C_2_Master_Idle:
  3753                           	callstack 21
  3754   001780                     i2l120:
  3755   001780  010E               	movlb	14	; () banked
  3756   001782  B5D8               	btfsc	216,2,b	;volatile
  3757   001784  EFC6  F00B         	goto	i2u32_41
  3758   001788  EFC8  F00B         	goto	i2u32_40
  3759   00178C                     i2u32_41:
  3760   00178C  EFC0  F00B         	goto	i2l120
  3761   001790                     i2u32_40:
  3762   001790                     
  3763                           ; BSR set to: 14
  3764   001790  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  3765   001794  0E1F               	movlw	31
  3766   001796  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  3767   001798  A4D8               	btfss	status,2,c
  3768   00179A  EFD1  F00B         	goto	i2u33_41
  3769   00179E  EFD3  F00B         	goto	i2u33_40
  3770   0017A2                     i2u33_41:
  3771   0017A2  EFC0  F00B         	goto	i2l120
  3772   0017A6                     i2u33_40:
  3773   0017A6                     
  3774                           ; BSR set to: 14
  3775   0017A6  0012               	return		;funcret
  3776   0017A8                     __end_ofi2_I2C_2_Master_Idle:
  3777                           	callstack 0
  3778                           
  3779                           	psect	rparam
  3780   000000                     
  3781                           	psect	temp
  3782   00004C                     btemp:
  3783                           	callstack 0
  3784   00004C                     	ds	1
  3785   000000                     int$flags	set	btemp
  3786   000000                     wtemp8	set	btemp+1
  3787   000000                     ttemp5	set	btemp+1
  3788   000000                     ttemp6	set	btemp+4
  3789   000000                     ttemp7	set	btemp+8
  3790                           
  3791                           	psect	idloc
  3792                           
  3793                           ;Config register IDLOC0 @ 0x200000
  3794                           ;	unspecified, using default values
  3795   200000                     	org	2097152
  3796   200000  0FFF               	dw	4095
  3797                           
  3798                           ;Config register IDLOC1 @ 0x200002
  3799                           ;	unspecified, using default values
  3800   200002                     	org	2097154
  3801   200002  0FFF               	dw	4095
  3802                           
  3803                           ;Config register IDLOC2 @ 0x200004
  3804                           ;	unspecified, using default values
  3805   200004                     	org	2097156
  3806   200004  0FFF               	dw	4095
  3807                           
  3808                           ;Config register IDLOC3 @ 0x200006
  3809                           ;	unspecified, using default values
  3810   200006                     	org	2097158
  3811   200006  0FFF               	dw	4095
  3812                           
  3813                           ;Config register IDLOC4 @ 0x200008
  3814                           ;	unspecified, using default values
  3815   200008                     	org	2097160
  3816   200008  0FFF               	dw	4095
  3817                           
  3818                           ;Config register IDLOC5 @ 0x20000A
  3819                           ;	unspecified, using default values
  3820   20000A                     	org	2097162
  3821   20000A  0FFF               	dw	4095
  3822                           
  3823                           ;Config register IDLOC6 @ 0x20000C
  3824                           ;	unspecified, using default values
  3825   20000C                     	org	2097164
  3826   20000C  0FFF               	dw	4095
  3827                           
  3828                           ;Config register IDLOC7 @ 0x20000E
  3829                           ;	unspecified, using default values
  3830   20000E                     	org	2097166
  3831   20000E  0FFF               	dw	4095
  3832                           
  3833                           	psect	config
  3834                           
  3835                           ;Config register CONFIG1L @ 0x300000
  3836                           ;	External Oscillator mode Selection bits
  3837                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3838                           ;	Power-up default value for COSC bits
  3839                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3840   300000                     	org	3145728
  3841   300000  AA                 	db	170
  3842                           
  3843                           ;Config register CONFIG1H @ 0x300001
  3844                           ;	unspecified, using default values
  3845                           ;	Clock Out Enable bit
  3846                           ;	CLKOUTEN = 0x1, unprogrammed default
  3847                           ;	Clock Switch Enable bit
  3848                           ;	CSWEN = 0x1, unprogrammed default
  3849                           ;	Fail-Safe Clock Monitor Enable bit
  3850                           ;	FCMEN = 0x1, unprogrammed default
  3851   300001                     	org	3145729
  3852   300001  FF                 	db	255
  3853                           
  3854                           ;Config register CONFIG2L @ 0x300002
  3855                           ;	unspecified, using default values
  3856                           ;	Master Clear Enable bit
  3857                           ;	MCLRE = 0x1, unprogrammed default
  3858                           ;	Power-up Timer Enable bit
  3859                           ;	PWRTE = 0x1, unprogrammed default
  3860                           ;	Low-power BOR enable bit
  3861                           ;	LPBOREN = 0x1, unprogrammed default
  3862                           ;	Brown-out Reset Enable bits
  3863                           ;	BOREN = 0x3, unprogrammed default
  3864   300002                     	org	3145730
  3865   300002  FF                 	db	255
  3866                           
  3867                           ;Config register CONFIG2H @ 0x300003
  3868                           ;	unspecified, using default values
  3869                           ;	Brown Out Reset Voltage selection bits
  3870                           ;	BORV = 0x3, unprogrammed default
  3871                           ;	ZCD Disable bit
  3872                           ;	ZCD = 0x1, unprogrammed default
  3873                           ;	PPSLOCK bit One-Way Set Enable bit
  3874                           ;	PPS1WAY = 0x1, unprogrammed default
  3875                           ;	Stack Full/Underflow Reset Enable bit
  3876                           ;	STVREN = 0x1, unprogrammed default
  3877                           ;	Debugger Enable bit
  3878                           ;	DEBUG = 0x1, unprogrammed default
  3879                           ;	Extended Instruction Set Enable bit
  3880                           ;	XINST = 0x1, unprogrammed default
  3881   300003                     	org	3145731
  3882   300003  FF                 	db	255
  3883                           
  3884                           ;Config register CONFIG3L @ 0x300004
  3885                           ;	WDT Period Select bits
  3886                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3887                           ;	WDT operating mode
  3888                           ;	WDTE = OFF, WDT Disabled
  3889   300004                     	org	3145732
  3890   300004  9F                 	db	159
  3891                           
  3892                           ;Config register CONFIG3H @ 0x300005
  3893                           ;	unspecified, using default values
  3894                           ;	WDT Window Select bits
  3895                           ;	WDTCWS = 0x7, unprogrammed default
  3896                           ;	WDT input clock selector
  3897                           ;	WDTCCS = 0x7, unprogrammed default
  3898   300005                     	org	3145733
  3899   300005  FF                 	db	255
  3900                           
  3901                           ;Config register CONFIG4L @ 0x300006
  3902                           ;	unspecified, using default values
  3903                           ;	Write Protection Block 0
  3904                           ;	WRT0 = 0x1, unprogrammed default
  3905                           ;	Write Protection Block 1
  3906                           ;	WRT1 = 0x1, unprogrammed default
  3907                           ;	Write Protection Block 2
  3908                           ;	WRT2 = 0x1, unprogrammed default
  3909                           ;	Write Protection Block 3
  3910                           ;	WRT3 = 0x1, unprogrammed default
  3911                           ;	Write Protection Block 3
  3912                           ;	WRT4 = 0x1, unprogrammed default
  3913                           ;	Write Protection Block 3
  3914                           ;	WRT5 = 0x1, unprogrammed default
  3915                           ;	Write Protection Block 3
  3916                           ;	WRT6 = 0x1, unprogrammed default
  3917                           ;	Write Protection Block 3
  3918                           ;	WRT7 = 0x1, unprogrammed default
  3919   300006                     	org	3145734
  3920   300006  FF                 	db	255
  3921                           
  3922                           ;Config register CONFIG4H @ 0x300007
  3923                           ;	unspecified, using default values
  3924                           ;	Configuration Register Write Protection bit
  3925                           ;	WRTC = 0x1, unprogrammed default
  3926                           ;	Boot Block Write Protection bit
  3927                           ;	WRTB = 0x1, unprogrammed default
  3928                           ;	Data EEPROM Write Protection bit
  3929                           ;	WRTD = 0x1, unprogrammed default
  3930                           ;	Scanner Enable bit
  3931                           ;	SCANE = 0x1, unprogrammed default
  3932                           ;	Low Voltage Programming Enable bit
  3933                           ;	LVP = 0x1, unprogrammed default
  3934   300007                     	org	3145735
  3935   300007  FF                 	db	255
  3936                           
  3937                           ;Config register CONFIG5L @ 0x300008
  3938                           ;	unspecified, using default values
  3939                           ;	UserNVM Program Memory Code Protection bit
  3940                           ;	CP = 0x1, unprogrammed default
  3941                           ;	DataNVM Memory Code Protection bit
  3942                           ;	CPD = 0x1, unprogrammed default
  3943   300008                     	org	3145736
  3944   300008  FF                 	db	255
  3945                           
  3946                           ;Config register CONFIG5H @ 0x300009
  3947                           ;	unspecified, using default values
  3948   300009                     	org	3145737
  3949   300009  FF                 	db	255
  3950                           
  3951                           ;Config register CONFIG6L @ 0x30000A
  3952                           ;	unspecified, using default values
  3953                           ;	Table Read Protection Block 0
  3954                           ;	EBTR0 = 0x1, unprogrammed default
  3955                           ;	Table Read Protection Block 1
  3956                           ;	EBTR1 = 0x1, unprogrammed default
  3957                           ;	Table Read Protection Block 2
  3958                           ;	EBTR2 = 0x1, unprogrammed default
  3959                           ;	Table Read Protection Block 3
  3960                           ;	EBTR3 = 0x1, unprogrammed default
  3961                           ;	Table Read Protection Block 4
  3962                           ;	EBTR4 = 0x1, unprogrammed default
  3963                           ;	Table Read Protection Block 5
  3964                           ;	EBTR5 = 0x1, unprogrammed default
  3965                           ;	Table Read Protection Block 6
  3966                           ;	EBTR6 = 0x1, unprogrammed default
  3967                           ;	Table Read Protection Block 7
  3968                           ;	EBTR7 = 0x1, unprogrammed default
  3969   30000A                     	org	3145738
  3970   30000A  FF                 	db	255
  3971                           
  3972                           ;Config register CONFIG6H @ 0x30000B
  3973                           ;	unspecified, using default values
  3974                           ;	Boot Block Table Read Protection bit
  3975                           ;	EBTRB = 0x1, unprogrammed default
  3976   30000B                     	org	3145739
  3977   30000B  FF                 	db	255
  3978                           tosu	equ	0xFFF
  3979                           tosh	equ	0xFFE
  3980                           tosl	equ	0xFFD
  3981                           stkptr	equ	0xFFC
  3982                           pclatu	equ	0xFFB
  3983                           pclath	equ	0xFFA
  3984                           pcl	equ	0xFF9
  3985                           tblptru	equ	0xFF8
  3986                           tblptrh	equ	0xFF7
  3987                           tblptrl	equ	0xFF6
  3988                           tablat	equ	0xFF5
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           indf0	equ	0xFEF
  3992                           postinc0	equ	0xFEE
  3993                           postdec0	equ	0xFED
  3994                           preinc0	equ	0xFEC
  3995                           plusw0	equ	0xFEB
  3996                           fsr0h	equ	0xFEA
  3997                           fsr0l	equ	0xFE9
  3998                           wreg	equ	0xFE8
  3999                           indf1	equ	0xFE7
  4000                           postinc1	equ	0xFE6
  4001                           postdec1	equ	0xFE5
  4002                           preinc1	equ	0xFE4
  4003                           plusw1	equ	0xFE3
  4004                           fsr1h	equ	0xFE2
  4005                           fsr1l	equ	0xFE1
  4006                           bsr	equ	0xFE0
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           postdec2	equ	0xFDD
  4010                           preinc2	equ	0xFDC
  4011                           plusw2	equ	0xFDB
  4012                           fsr2h	equ	0xFDA
  4013                           fsr2l	equ	0xFD9
  4014                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      75
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_response@L.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@L.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@R.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@R.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2451$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2451$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 2
		 -> motor_response@R(COMRAM[2]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 2
		 -> motor_response@L(COMRAM[2]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), motor_response@R(COMRAM[2]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), motor_response@L(COMRAM[2]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), main@mL(COMRAM[9]), motor_response@R(COMRAM[2]), motor_response@L(COMRAM[2]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S316DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S316DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@R	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), main@mL(COMRAM[9]), 

    motor_response@L	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), main@mL(COMRAM[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_response->_norm_stop
    _motor_response->_turnRight
    _turnRight->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   17379
                                             39 COMRAM    28    28      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     743
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_response                                       8     2      6    6472
                                             31 COMRAM     8     2      6
                          _norm_stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    2917
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    3133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3093
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     528
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     743
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1083
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     743
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     743
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     _norm_stop
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      4B       1       79.8%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B      61        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 11:47:57 2022

                            _color_read_Red 1496                             _color_read_RGBC 1438  
                           _color_read_Blue 1586                                          l62 17EC  
                                        l71 15D4                                          l80 1494  
                                        l65 14E4                                          l74 1584  
                                        l90 11FC                                          l59 164A  
                                        l68 1534                                          l86 1856  
                                        u30 1768                                          u31 1764  
                                        u40 177E                                          u41 177A  
                                        u80 1600                                          u81 15F8  
                                        u98 1602                         ___wmul@multiplicand 000B  
                          _color_read_Clear 1536                            _color_read_Green 14E6  
                         ??_Interrupts_init 0009                                         l120 1758  
                                       l123 177E                                         l132 18B0  
                                       l117 1702                                         l126 18BA  
                                       l135 1884                                         l129 18A6  
                                       l138 1616                                         l341 172C  
                                       l422 127C                                         l335 186C  
                                       l432 1436                                         l344 1878  
                                       l338 1826                                         l435 13CC  
                                       l452 1362                                         l429 0F7E  
                                       l446 167C                                         l463 1154  
                                       l474 17CC                                         l972 12F0  
                                       l965 12E8                                         u400 110C  
                                       u401 1108                                         u410 1124  
                                       u411 1120                                         u340 1298  
                                       u341 1294                                         u350 12B6  
                                       u430 1004                                         u351 12B2  
                                       u431 1000                                         u360 12D2  
                                       u361 12CE                                         u370 0E30  
                                       u371 0E2C                                         u380 0EFA  
                                       u381 0EF6                                         u390 1178  
                                       u391 1174                                         u537 1022  
                                       u547 1196                                         u557 11C2  
                                       u567 11EE                                         u577 162C  
                                       u587 181E                            ??_motor_response 0026  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 1842  
                       i2_color_writetoaddr 17EE                                         wreg 000FE8  
                                      l1202 18B2                                        l1210 18A8  
                                      l1204 18B6                                        l1212 18AC  
                                      l1220 15DC                                        l1206 187C  
                                      l1222 15E4                                        l1214 189E  
                                      l1160 1768                                        l1208 1880  
                                      l1224 15EC                                        l1216 18A2  
                                      l1250 16DA                                        l1226 1612  
                                      l1218 15D8                                        l1260 16F0  
                                      l1252 16E4                                        l1228 1614  
                                      l1158 1758                                        l1342 1858  
                                      l1254 16EA                                        l1256 16EC  
                                      l1328 1842                                        l1258 16EE  
                                      l1700 1586                                        l1702 15CC  
                                      l1630 17C4                                        l1640 12A0  
                                      l1800 140E                                        l1712 164C  
                                      l1720 130A                                        l1706 1536  
                                      l1650 12DA                                        l1642 12A8  
                                      l1634 127E                                        l1802 1422  
                                      l1810 1390                                        l1714 1664  
                                      l1730 1356                                        l1722 131A  
                                      l1740 1618                                        l1708 157C  
                                      l1652 12DC                                        l1644 12B6  
                                      l1636 1286                                        l1628 17A8  
                                      l1820 1094                                        l1812 13A4  
                                      l1804 1364                                        l1716 1670  
                                      l1724 132A                                        l1900 105A  
                                      l1742 161C                                        l1750 1438  
                                      l1654 12E2                                        l1646 12BC  
                                      l1638 1298                                        l1670 0E30  
                                      l1830 10E8                                        l1822 10A4  
                                      l1814 13B8                                        l1806 1370  
                                      l1726 133A                                        l1718 12F2  
                                      l1902 105C                                        l1744 1626  
                                      l1648 12D2                                        l1680 0EFA  
                                      l1672 0E84                                        l1840 1148  
                                      l1832 10F4                                        l1824 10B4  
                                      l1816 106C                                        l1808 1380  
                                      l1728 134A                                        l1760 11D0  
                                      l1752 1156                                        l1746 1636  
                                      l1690 14DC                                        l1682 0F3E  
                                      l1674 0E98                                        l1834 110C  
                                      l1826 10C8                                        l1818 1084  
                                      l1762 11E4                                        l1754 1178  
                                      l1770 186E                                        l1764 180E  
                                      l1748 1640                                        l1676 0EDA  
                                      l1668 0E14                                        l1836 1124  
                                      l1828 10DC                                        l1780 1258  
                                      l1772 11FE                                        l1756 118C  
                                      l1860 0F88                                        l1852 0F80  
                                      l1686 17D0                                        l1766 1818  
                                      l1694 14E6                                        l1678 0EDE  
                                      l1838 113C                                        l1790 127A  
                                      l1782 1262                                        l1774 1228  
                                      l1758 11A4                                        l1870 0FCE  
                                      l1862 0FA8                                        l1854 0F84  
                                      l1768 1704                                        l1696 152C  
                                      l1688 1496                                        l1784 1264  
                                      l1776 124C                                        l1792 13CE  
                                      l1880 0FD8                                        l1872 0FD0  
                                      l1864 0FB4                                        l1856 0F84  
                                      l1786 126E                                        l1778 1256  
                                      l1794 13DA                                        l1890 1004  
                                      l1882 0FDA                                        l1874 0FD2  
                                      l1866 0FC0                                        l1858 0F84  
                                      l1788 1270                                        l1796 13EA  
                                      l1892 1018                                        l1884 0FDC  
                                      l1876 0FD4                                        l1868 0FCC  
                                      l1798 13FA                                        l1894 1030  
                                      l1886 0FF0                                        l1878 0FD6  
                                      l1896 1032                                        l1888 0FF2  
                                      l1898 103E                                        STR_1 0E01  
                              _BAUD4CONbits 000EE9                                        _T2PR 000FBC  
                                      i2l62 180C                                        _main 0F80  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 004C  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0030                        ?i2_color_writetoaddr 0003  
                    __end_of_color_read_Red 14E6                             __end_of_HighISR 0030  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___lwdiv 12F2                                       i2l120 1780  
                                     i2l123 17A6                                       i2l132 18C4  
                                     i2l126 18CE                                       i2l135 189C  
                                     i2l341 1756                                       i2l344 1890  
                                     i2l353 002C                                       i2l338 1840  
                                     i2l347 16AE                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 18BC  
                __end_of_I2C_2_Master_Write 1886                       _Color_Interrupts_init 180E  
                                     ttemp5 004D                                       ttemp6 0050  
                                     ttemp7 0054                                       status 000FD8  
                                     wtemp8 004D                     __end_of_color_read_RGBC 1496  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 15D6  
                     _I2C_2_Master_RepStart 189E                             ?_color_read_Red 000D  
                           __initialization 16B0                                __end_of_main 106C  
               ?_Color_Interrupts_threshold 000D                                      ??_main 0028  
                             __activetblptr 000001                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l1624 1780  
                                    i2l1626 1790                                      i2l1660 18BC  
                                    i2l1732 1828                                      i2l1662 18C0  
                                    i2l1734 1832                                      i2l1656 18C6  
                                    i2l1664 1894                                      i2l1736 172E  
                                    i2l1658 18CA                                      i2l1666 1898  
                                    i2l1738 1886                                      i2l1850 167E  
                                    i2l1684 17F0                                      i2l1940 000A  
                                    i2l1942 001A                                      i2l1944 001C  
                                    i2l1946 0024                                      i2l1948 0028  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 164C                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 187A  
                              _CCPTMRS0bits 000FAD                                      ___wmul 17A8  
                                 ??___lwdiv 0013                                      clear_0 16B6  
                                    clear_1 16C2                                      isa$std 000001  
                                    main@mL 0032                                      main@mR 003B  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 167E  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptru 000FF8    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                                __accesstop 0060                     __end_of__initialization 16C8  
                  __end_of_color_read_Clear 1586                    __end_of_color_read_Green 1536  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0014                            ?_color_read_Blue 000D  
                           _Interrupts_init 1858                              __pcstackCOMRAM 0001  
            __end_ofi2_persistence_register 1892                                ?_tricolorLED 0001  
                   i2_Color_Interrupts_init 1828                                  __pbssBANK0 0060  
                         _color_writetoaddr 17CE                                _T2CLKCONbits 000FBF  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0020                         ??_color_writetoaddr 000C  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   i2u32_40 1790                                     i2u32_41 178C  
                                   i2u33_40 17A6                                     i2u33_41 17A2  
                                   i2u48_40 001A                                     i2u48_41 0016  
                                   i2u59_47 1838                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 186E  
                   __end_of_Interrupts_init 186E                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 17EE                          _I2C_2_Master_Start 18B2  
                       i2_I2C_2_Master_Idle 1780                          _I2C_2_Master_Write 187A  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 18BC  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 127E  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   __pcinit 16B0                                     __ramtop 0E00  
                                   __ptext0 0F80                                     __ptext1 1842  
                                   __ptext2 186E                                     __ptext3 1156  
                                   __ptext4 12F2                                     __ptext5 164C  
                                   __ptext6 1364                                     __ptext7 13CE  
                                   __ptext8 11FE                                     __ptext9 106C  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                               _RxBufWriteCnt 004B  
                     ?_persistence_register 0001                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 16C8  
               __end_ofi2_color_writetoaddr 180E                           ?_color_click_init 0001  
                         __end_of_norm_stop 167E                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 13CE  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 1364                               _interrupt_ctr 0044  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 11FE  
                       color_read_RGBC@temp 0014                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 1364  
                     ??i2_I2C_2_Master_Stop 0002                     ??_Color_Interrupts_init 000D  
                                 _TRISAbits 000F81                          setMotorPWM@posDuty 001A  
                                 _TRISBbits 000F82                                   _TRISCbits 000F83  
                                 _TRISDbits 000F84                                   _TRISEbits 000F85  
                                 _TRISFbits 000F86                                   _TRISGbits 000F87  
                                 _TRISHbits 000F88                            fullSpeedAhead@mL 001C  
                          fullSpeedAhead@mR 001E                    color_writetoaddr@address 000C  
                   ??_I2C_2_Master_RepStart 000A                            ?_Interrupts_init 0001  
                               _CCP1CONbits 000FAB                           ?_color_read_Clear 000D  
                              _EUSART4RXbuf 009C                                _EUSART4TXbuf 0060  
                               _CCP2CONbits 000FA7                           ?_color_read_Green 000D  
                               _CCP3CONbits 000F26                                 _CCP4CONbits 000F22  
                        ??_color_read_Clear 000F                          ??_color_read_Green 000F  
            __end_of_Color_Interrupts_clear 16B0                              _fullSpeedAhead 106C  
                            __end_of___wmul 17CE                         color_read_Clear@tmp 0012  
                       start_initialization 16B0                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0049                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 127E                      __end_of_fullSpeedAhead 1156  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 18D0                __end_ofi2_I2C_2_Master_Write 189E  
                               __pbssCOMRAM 0044                              _motor_response 1156  
                                  ?_HighISR 0001                            ___lwdiv@dividend 000F  
                           motor_response@L 0022                             motor_response@R 0024  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 1758  
                         _I2C_2_Master_Init 16DA                           _I2C_2_Master_Read 15D6  
                         _I2C_2_Master_Stop 18A8                                _RxBufReadCnt 004A  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 11FE                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  _PIR0bits 000E33                                    _PIR4bits 000E37  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 164C                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 1780  
                 __end_of_I2C_2_Master_Init 1704                   __end_of_I2C_2_Master_Read 1618  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 18B2  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0016                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 0048                    i2color_writetoaddr@value 0003  
                                 _turnRight 12F2               __end_of_Color_Interrupts_init 1828  
                           ?_motor_response 0020               __end_of_I2C_2_Master_RepStart 18A8  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 0F80  
                      i2_I2C_2_Master_Start 18C6                        i2_I2C_2_Master_Write 1892  
                                  __Hrparam 0000                                    __Lrparam 0000  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 1758                i2_Color_Interrupts_threshold 172E  
               __end_ofi2_I2C_2_Master_Idle 17A8                 __end_ofi2_I2C_2_Master_Stop 18C6  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               ??_tricolorLED 0009  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 0E14  
                                  __ptext11 17A8                                    __ptext20 1618  
                                  __ptext12 127E                                    __ptext21 16DA  
                                  __ptext13 1438                                    __ptext22 1858  
                                  __ptext14 1496                                    __ptext31 167E  
                                  __ptext23 1704                                    __ptext15 14E6  
                                  __ptext32 1886                                    __ptext24 180E  
                                  __ptext16 1536                                    __ptext33 172E  
                                  __ptext25 17CE                                    __ptext17 1586  
                                  __ptext34 1828                                    __ptext26 187A  
                                  __ptext18 189E                                    __ptext35 17EE  
                                  __ptext27 18A8                                    __ptext19 15D6  
                                  __ptext36 1892                                    __ptext28 18B2  
                                  __ptext37 18BC                                    __ptext29 1758  
                                  __ptext38 18C6                                    __ptext39 1780  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 002A                                    int$flags 004C  
        __end_of_Color_Interrupts_threshold 172E               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 1704                                  _INTCONbits 000FF2  
                               _setMotorPWM 0E14                                motorLinit@mL 0009  
                       __end_of_tricolorLED 1858                                    intlevel2 0000  
                        __end_of_motorLinit 1438                          __end_of_motorRinit 13CE  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 1842  
                          _color_click_init 1618                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 0046  
                    i2_persistence_register 1886                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
