

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 14 18:53:21 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 06/04/2022 GMT
    76                           ; 
    77                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F67K40 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000000                     
   110                           	psect	idataBANK0
   111   003B90                     __pidataBANK0:
   112                           	callstack 0
   113                           
   114                           ;initializer for _upperThreshold
   115   003B90  076C               	dw	1900
   116   000000                     _TRISCbits	set	3971
   117   000000                     _TRISBbits	set	3970
   118   000000                     _TX4REG	set	3812
   119   000000                     _RC4STAbits	set	3815
   120   000000                     _SP4BRGH	set	3814
   121   000000                     _TRISFbits	set	3974
   122   000000                     _TRISDbits	set	3972
   123   000000                     _LATFbits	set	3966
   124   000000                     _LATHbits	set	3968
   125   000000                     _TRISAbits	set	3969
   126   000000                     _TRISEbits	set	3973
   127   000000                     _SSP2CON2bits	set	3802
   128   000000                     _RX4PPS	set	3605
   129   000000                     _SSP2CLKPPS	set	3612
   130   000000                     _SSP2DATPPS	set	3613
   131   000000                     _ANSELDbits	set	3751
   132   000000                     _SSP2ADD	set	3798
   133   000000                     _SSP2CON1bits	set	3801
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _TRISGbits	set	3975
   138   000000                     _PORTFbits	set	3982
   139   000000                     _TRISHbits	set	3976
   140   000000                     _LATDbits	set	3964
   141   000000                     _RC4REG	set	3811
   142   000000                     _SP4BRGL	set	3813
   143   000000                     _TX4STAbits	set	3816
   144   000000                     _BAUD4CONbits	set	3817
   145   000000                     _SSP2CON2	set	3802
   146   000000                     _SSP2STAT	set	3800
   147   000000                     _ANSELFbits	set	3764
   148   000000                     _SSP2BUF	set	3797
   149   000000                     _IPR0bits	set	3615
   150   000000                     _PIE0bits	set	3625
   151   000000                     _PIE4bits	set	3629
   152   000000                     _RC0PPS	set	3682
   153   000000                     _RD5PPS	set	3695
   154   000000                     _RE2PPS	set	3700
   155   000000                     _ANSELBbits	set	3738
   156   000000                     _RD6PPS	set	3696
   157   000000                     _T2PR	set	4028
   158   000000                     _T2CONbits	set	4029
   159   000000                     _TMR0L	set	4051
   160   000000                     _TMR0H	set	4052
   161   000000                     _T0CON0bits	set	4053
   162   000000                     _T0CON1bits	set	4054
   163   000000                     _INTCONbits	set	4082
   164   000000                     _CCPR2H	set	4006
   165   000000                     _CCPR1H	set	4010
   166   000000                     _RC7PPS	set	3689
   167   000000                     _CCPR4H	set	3873
   168   000000                     _CCPR3H	set	3877
   169   000000                     _PIR0bits	set	3635
   170   000000                     _PIR4bits	set	3639
   171   000000                     _RE4PPS	set	3702
   172   000000                     _RG6PPS	set	3720
   173   000000                     _T2CLKCONbits	set	4031
   174   000000                     _T2HLTbits	set	4030
   175   000000                     _CCP1CONbits	set	4011
   176   000000                     _CCPTMRS0bits	set	4013
   177   000000                     _CCP2CONbits	set	4007
   178   000000                     _CCP3CONbits	set	3878
   179   000000                     _CCP4CONbits	set	3874
   180                           
   181                           	psect	smallconst
   182   000E00                     __psmallconst:
   183                           	callstack 0
   184   000E00  00                 	db	0
   185   000E01                     
   186                           ; BSR set to: 14
   187   000E01  52                 	db	82	;'R'
   188   000E02  47                 	db	71	;'G'
   189   000E03  42                 	db	66	;'B'
   190   000E04  43                 	db	67	;'C'
   191   000E05  3A                 	db	58	;':'
   192   000E06  25                 	db	37
   193   000E07  66                 	db	102	;'f'
   194   000E08  20                 	db	32
   195   000E09  25                 	db	37
   196   000E0A  66                 	db	102	;'f'
   197   000E0B  20                 	db	32
   198   000E0C  25                 	db	37
   199   000E0D  66                 	db	102	;'f'
   200   000E0E  20                 	db	32
   201   000E0F  25                 	db	37
   202   000E10  66                 	db	102	;'f'
   203   000E11  20                 	db	32
   204   000E12  25                 	db	37
   205   000E13  66                 	db	102	;'f'
   206   000E14  0A                 	db	10
   207   000E15  00                 	db	0
   208   000E16  00                 	db	0	; dummy byte at the end
   209   000000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213   00385E                     __pcinit:
   214                           	callstack 0
   215   00385E                     start_initialization:
   216                           	callstack 0
   217   00385E                     __initialization:
   218                           	callstack 0
   219                           
   220                           ; Initialize objects allocated to BANK0 (2 bytes)
   221                           ; load TBLPTR registers with __pidataBANK0
   222   00385E  0E90               	movlw	low __pidataBANK0
   223   003860  6EF6               	movwf	tblptrl,c
   224   003862  0E3B               	movlw	high __pidataBANK0
   225   003864  6EF7               	movwf	tblptrh,c
   226   003866  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   227   003868  6EF8               	movwf	tblptru,c
   228   00386A  0009               	tblrd		*+	;fetch initializer
   229   00386C  CFF5 F0E8          	movff	tablat,__pdataBANK0
   230   003870  0009               	tblrd		*+	;fetch initializer
   231   003872  CFF5 F0E9          	movff	tablat,__pdataBANK0+1
   232                           
   233                           ; Clear objects allocated to BANK1 (60 bytes)
   234   003876  EE01  F000         	lfsr	0,__pbssBANK1
   235   00387A  0E3C               	movlw	60
   236   00387C                     clear_0:
   237   00387C  6AEE               	clrf	postinc0,c
   238   00387E  06E8               	decf	wreg,f,c
   239   003880  E1FD               	bnz	clear_0
   240                           
   241                           ; Clear objects allocated to BANK0 (56 bytes)
   242   003882  EE00  F0B0         	lfsr	0,__pbssBANK0
   243   003886  0E38               	movlw	56
   244   003888                     clear_1:
   245   003888  6AEE               	clrf	postinc0,c
   246   00388A  06E8               	decf	wreg,f,c
   247   00388C  E1FD               	bnz	clear_1
   248                           
   249                           ; Clear objects allocated to COMRAM (22 bytes)
   250   00388E  EE00  F041         	lfsr	0,__pbssCOMRAM
   251   003892  0E16               	movlw	22
   252   003894                     clear_2:
   253   003894  6AEE               	clrf	postinc0,c
   254   003896  06E8               	decf	wreg,f,c
   255   003898  E1FD               	bnz	clear_2
   256   00389A                     end_of_initialization:
   257                           	callstack 0
   258   00389A                     __end_of__initialization:
   259                           	callstack 0
   260   00389A  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   261   00389C  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   262   00389E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   263   0038A0  6EF8               	movwf	tblptru,c
   264   0038A2  0E0E               	movlw	high __Lsmallconst
   265   0038A4  6EF7               	movwf	tblptrh,c
   266   0038A6  0100               	movlb	0
   267   0038A8  EF81  F011         	goto	_main	;jump to C main() function
   268                           
   269                           	psect	bssCOMRAM
   270   000041                     __pbssCOMRAM:
   271                           	callstack 0
   272   000041                     _CR2U:
   273                           	callstack 0
   274   000041                     	ds	4
   275   000045                     _CR1L:
   276                           	callstack 0
   277   000045                     	ds	4
   278   000049                     _amb_clear:
   279                           	callstack 0
   280   000049                     	ds	2
   281   00004B                     _amb_red:
   282                           	callstack 0
   283   00004B                     	ds	2
   284   00004D                     _lost_ctr:
   285                           	callstack 0
   286   00004D                     	ds	2
   287   00004F                     _buggy_step:
   288                           	callstack 0
   289   00004F                     	ds	2
   290   000051                     _interrupt_flag:
   291                           	callstack 0
   292   000051                     	ds	2
   293   000053                     _TxBufReadCnt:
   294                           	callstack 0
   295   000053                     	ds	1
   296   000054                     _TxBufWriteCnt:
   297                           	callstack 0
   298   000054                     	ds	1
   299   000055                     _RxBufReadCnt:
   300                           	callstack 0
   301   000055                     	ds	1
   302   000056                     _RxBufWriteCnt:
   303                           	callstack 0
   304   000056                     	ds	1
   305                           
   306                           	psect	bssBANK0
   307   0000B0                     __pbssBANK0:
   308                           	callstack 0
   309   0000B0                     _EUSART4RXbuf:
   310                           	callstack 0
   311   0000B0                     	ds	20
   312   0000C4                     _CR3L:
   313                           	callstack 0
   314   0000C4                     	ds	4
   315   0000C8                     _CR3U:
   316                           	callstack 0
   317   0000C8                     	ds	4
   318   0000CC                     _CR2L:
   319                           	callstack 0
   320   0000CC                     	ds	4
   321   0000D0                     _lowerThreshold:
   322                           	callstack 0
   323   0000D0                     	ds	2
   324   0000D2                     _amb_blue:
   325                           	callstack 0
   326   0000D2                     	ds	2
   327   0000D4                     _amb_green:
   328                           	callstack 0
   329   0000D4                     	ds	2
   330   0000D6                     _interrupt_ctr:
   331                           	callstack 0
   332   0000D6                     	ds	2
   333   0000D8                     _motor_return:
   334                           	callstack 0
   335   0000D8                     	ds	1
   336   0000D9                     _buggy_path:
   337                           	callstack 0
   338   0000D9                     	ds	15
   339                           
   340                           	psect	dataBANK0
   341   0000E8                     __pdataBANK0:
   342                           	callstack 0
   343   0000E8                     _upperThreshold:
   344                           	callstack 0
   345   0000E8                     	ds	2
   346                           
   347                           	psect	bssBANK1
   348   000100                     __pbssBANK1:
   349                           	callstack 0
   350   000100                     _EUSART4TXbuf:
   351                           	callstack 0
   352   000100                     	ds	60
   353                           
   354                           	psect	cstackBANK0
   355   000060                     __pcstackBANK0:
   356                           	callstack 0
   357   000060                     ??_rangeCalibrate:
   358                           
   359                           ; 1 bytes @ 0x0
   360   000060                     	ds	2
   361   000062                     rangeCalibrate@temp:
   362                           	callstack 0
   363                           
   364                           ; 4 bytes @ 0x2
   365   000062                     	ds	4
   366   000066                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x6
   369   000066                     	ds	2
   370   000068                     main@clearArr:
   371                           	callstack 0
   372                           
   373                           ; 20 bytes @ 0x8
   374   000068                     	ds	20
   375   00007C                     main@a:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0x1C
   379   00007C                     	ds	2
   380   00007E                     main@RGBC:
   381                           	callstack 0
   382                           
   383                           ; 32 bytes @ 0x1E
   384   00007E                     	ds	32
   385   00009E                     main@mL:
   386                           	callstack 0
   387                           
   388                           ; 9 bytes @ 0x3E
   389   00009E                     	ds	9
   390   0000A7                     main@mR:
   391                           	callstack 0
   392                           
   393                           ; 9 bytes @ 0x47
   394   0000A7                     	ds	9
   395                           
   396                           	psect	cstackCOMRAM
   397   000001                     __pcstackCOMRAM:
   398                           	callstack 0
   399   000001                     ??i2_I2C_2_Master_Idle:
   400   000001                     
   401                           ; 1 bytes @ 0x0
   402   000001                     	ds	1
   403   000002                     i2I2C_2_Master_Write@data_byte:
   404                           	callstack 0
   405                           
   406                           ; 1 bytes @ 0x1
   407   000002                     	ds	1
   408   000003                     i2color_writetoaddr@value:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x2
   412   000003                     	ds	1
   413   000004                     i2color_writetoaddr@address:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x3
   417   000004                     	ds	1
   418   000005                     ??i2_Color_Interrupts_init:
   419   000005                     i2Color_Interrupts_threshold@upperThreshold:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x4
   423   000005                     	ds	2
   424   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x6
   428   000007                     	ds	2
   429   000009                     ??_I2C_2_Master_Idle:
   430   000009                     ?___wmul:
   431                           	callstack 0
   432   000009                     ?___fladd:
   433                           	callstack 0
   434   000009                     initDCmotorsPWM@PWMperiod:
   435                           	callstack 0
   436   000009                     motorLinit@mL:
   437                           	callstack 0
   438   000009                     motorRinit@mR:
   439                           	callstack 0
   440   000009                     motorTRIS@mL:
   441                           	callstack 0
   442   000009                     ___wmul@multiplier:
   443                           	callstack 0
   444   000009                     ___flge@ff1:
   445                           	callstack 0
   446   000009                     ___fladd@b:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0x8
   450   000009                     	ds	1
   451   00000A                     ??_I2C_2_Master_Read:
   452   00000A                     I2C_2_Master_Write@data_byte:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x9
   456   00000A                     	ds	1
   457   00000B                     color_writetoaddr@value:
   458                           	callstack 0
   459   00000B                     I2C_2_Master_Read@ack:
   460                           	callstack 0
   461   00000B                     motorTRIS@mR:
   462                           	callstack 0
   463   00000B                     ___wmul@multiplicand:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0xA
   467   00000B                     	ds	1
   468   00000C                     color_writetoaddr@address:
   469                           	callstack 0
   470   00000C                     I2C_2_Master_Read@tmp:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xB
   474   00000C                     	ds	1
   475   00000D                     ??_Color_Interrupts_init:
   476   00000D                     ??_color_click_init:
   477   00000D                     ?_color_read_Red:
   478                           	callstack 0
   479   00000D                     ?_color_read_Green:
   480                           	callstack 0
   481   00000D                     ?_color_read_Blue:
   482                           	callstack 0
   483   00000D                     ?_color_read_Clear:
   484                           	callstack 0
   485   00000D                     Color_Interrupts_threshold@upperThreshold:
   486                           	callstack 0
   487   00000D                     ___wmul@product:
   488                           	callstack 0
   489   00000D                     ___flge@ff2:
   490                           	callstack 0
   491   00000D                     ___fladd@a:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0xC
   495   00000D                     	ds	2
   496   00000F                     ??_color_read_Red:
   497   00000F                     ??_color_read_Green:
   498   00000F                     ??_color_read_Blue:
   499   00000F                     ??_color_read_Clear:
   500   00000F                     ?___lwdiv:
   501                           	callstack 0
   502   00000F                     Color_Interrupts_threshold@lowerThreshold:
   503                           	callstack 0
   504   00000F                     ___lwdiv@dividend:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508   00000F                     	ds	2
   509   000011                     ??___fladd:
   510   000011                     ??___flge:
   511   000011                     ___lwdiv@divisor:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x10
   515   000011                     	ds	1
   516   000012                     color_read_Red@tmp:
   517                           	callstack 0
   518   000012                     color_read_Green@tmp:
   519                           	callstack 0
   520   000012                     color_read_Blue@tmp:
   521                           	callstack 0
   522   000012                     color_read_Clear@tmp:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0x11
   526   000012                     	ds	1
   527   000013                     ___lwdiv@quotient:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0x12
   531   000013                     	ds	1
   532   000014                     ?___xxtofl:
   533                           	callstack 0
   534   000014                     ___xxtofl@val:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x13
   538   000014                     	ds	1
   539   000015                     ___lwdiv@counter:
   540                           	callstack 0
   541   000015                     ___fladd@signs:
   542                           	callstack 0
   543                           
   544                           ; 1 bytes @ 0x14
   545   000015                     	ds	1
   546   000016                     ___fladd@aexp:
   547                           	callstack 0
   548   000016                     setMotorPWM@m:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x15
   552   000016                     	ds	1
   553   000017                     ___fladd@bexp:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x16
   557   000017                     	ds	1
   558   000018                     ??_setMotorPWM:
   559   000018                     ??___xxtofl:
   560   000018                     ___fladd@grs:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x17
   564   000018                     	ds	2
   565   00001A                     setMotorPWM@posDuty:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x19
   569   00001A                     	ds	1
   570   00001B                     setMotorPWM@negDuty:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x1A
   574   00001B                     	ds	1
   575   00001C                     ___xxtofl@sign:
   576                           	callstack 0
   577   00001C                     norm_stop@mL:
   578                           	callstack 0
   579   00001C                     turnLeft@mL:
   580                           	callstack 0
   581   00001C                     turnRight@mL:
   582                           	callstack 0
   583   00001C                     fullSpeedAhead@mL:
   584                           	callstack 0
   585   00001C                     wallSmash@mL:
   586                           	callstack 0
   587   00001C                     reverse@mL:
   588                           	callstack 0
   589                           
   590                           ; 2 bytes @ 0x1B
   591   00001C                     	ds	1
   592   00001D                     ___xxtofl@exp:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x1C
   596   00001D                     	ds	1
   597   00001E                     norm_stop@mR:
   598                           	callstack 0
   599   00001E                     turnLeft@mR:
   600                           	callstack 0
   601   00001E                     turnRight@mR:
   602                           	callstack 0
   603   00001E                     fullSpeedAhead@mR:
   604                           	callstack 0
   605   00001E                     wallSmash@mR:
   606                           	callstack 0
   607   00001E                     reverse@mR:
   608                           	callstack 0
   609   00001E                     ___xxtofl@arg:
   610                           	callstack 0
   611                           
   612                           ; 4 bytes @ 0x1D
   613   00001E                     	ds	2
   614   000020                     ??_reverse:
   615   000020                     
   616                           ; 1 bytes @ 0x1F
   617   000020                     	ds	1
   618   000021                     turnPrep@mL:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x20
   622   000021                     	ds	1
   623   000022                     ?___fldiv:
   624                           	callstack 0
   625   000022                     color_read_RGBC@temp:
   626                           	callstack 0
   627   000022                     ___fldiv@b:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x21
   631   000022                     	ds	1
   632   000023                     turnPrep@mR:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x22
   636   000023                     	ds	1
   637   000024                     
   638                           ; 1 bytes @ 0x23
   639   000024                     	ds	1
   640   000025                     ??_turnPrep:
   641                           
   642                           ; 1 bytes @ 0x24
   643   000025                     	ds	1
   644   000026                     ___fldiv@a:
   645                           	callstack 0
   646                           
   647                           ; 4 bytes @ 0x25
   648   000026                     	ds	1
   649   000027                     motor_response@temp:
   650                           	callstack 0
   651   000027                     motor_retrace@buggy_path:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x26
   655   000027                     	ds	2
   656   000029                     motor_response@mL:
   657                           	callstack 0
   658   000029                     motor_retrace@mL:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x28
   662   000029                     	ds	1
   663   00002A                     ??___fldiv:
   664                           
   665                           ; 1 bytes @ 0x29
   666   00002A                     	ds	1
   667   00002B                     motor_response@mR:
   668                           	callstack 0
   669   00002B                     motor_retrace@mR:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x2A
   673   00002B                     	ds	2
   674   00002D                     ??_motor_response:
   675   00002D                     ??_motor_retrace:
   676                           
   677                           ; 1 bytes @ 0x2C
   678   00002D                     	ds	1
   679   00002E                     ___fldiv@rem:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x2D
   683   00002E                     	ds	1
   684   00002F                     motor_response@j:
   685                           	callstack 0
   686                           
   687                           ; 2 bytes @ 0x2E
   688   00002F                     	ds	3
   689   000032                     ___fldiv@sign:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x31
   693   000032                     	ds	1
   694   000033                     ___fldiv@new_exp:
   695                           	callstack 0
   696                           
   697                           ; 2 bytes @ 0x32
   698   000033                     	ds	2
   699   000035                     ___fldiv@grs:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0x34
   703   000035                     	ds	4
   704   000039                     ___fldiv@bexp:
   705                           	callstack 0
   706                           
   707                           ; 1 bytes @ 0x38
   708   000039                     	ds	1
   709   00003A                     ___fldiv@aexp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x39
   713   00003A                     	ds	1
   714   00003B                     color_normalise@RGBC:
   715                           	callstack 0
   716                           
   717                           ; 2 bytes @ 0x3A
   718   00003B                     	ds	2
   719   00003D                     ?_rangeCalibrate:
   720                           	callstack 0
   721   00003D                     rangeCalibrate@RGBC:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3C
   725   00003D                     	ds	4
   726                           
   727 ;;
   728 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   729 ;;
   730 ;; *************** function _main *****************
   731 ;; Defined at:
   732 ;;		line 22 in file "main.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;		None
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  buf           100    0        unsigned char [100]
   737 ;;  RGBC           32   30[BANK0 ] struct RGBC_val
   738 ;;  clearArr       20    8[BANK0 ] float [5]
   739 ;;  mR              9   71[BANK0 ] struct DC_motor
   740 ;;  mL              9   62[BANK0 ] struct DC_motor
   741 ;;  a               2   28[BANK0 ] int 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   752 ;;      Locals:         0      72       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   753 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Totals:         0      74       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;Total ram usage:       74 bytes
   756 ;; Hardware stack levels required when called: 11
   757 ;; This function calls:
   758 ;;		_Color_Interrupts_init
   759 ;;		_Color_Interrupts_threshold
   760 ;;		_Interrupts_init
   761 ;;		___fladd
   762 ;;		___flge
   763 ;;		_color_click_init
   764 ;;		_color_normalise
   765 ;;		_color_read_RGBC
   766 ;;		_fullSpeedAhead
   767 ;;		_initDCmotorsPWM
   768 ;;		_motorLinit
   769 ;;		_motorRinit
   770 ;;		_motorTRIS
   771 ;;		_motor_response
   772 ;;		_motor_retrace
   773 ;;		_norm_stop
   774 ;;		_persistence_register
   775 ;;		_rangeCalibrate
   776 ;;		_tricolorLED
   777 ;;		_turnLeft
   778 ;;		_wallSmash
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text0
   785   002302                     __ptext0:
   786                           	callstack 0
   787   002302                     _main:
   788                           	callstack 20
   789   002302                     
   790                           ;main.c: 23:     tricolorLED();
   791   002302  EC82  F01D         	call	_tricolorLED	;wreg free
   792   002306                     
   793                           ;main.c: 24:     color_click_init();
   794   002306  EC77  F01C         	call	_color_click_init	;wreg free
   795   00230A                     
   796                           ;main.c: 25:     float clearArr[5];;main.c: 27:     initDCmotorsPWM(200);
   797   00230A  0E00               	movlw	0
   798   00230C  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   799   00230E  0EC8               	movlw	200
   800   002310  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   801   002312  ECDD  F019         	call	_initDCmotorsPWM	;wreg free
   802   002316                     
   803                           ;main.c: 28:     DC_motor mL, mR;;main.c: 29:     motorLinit(&mL);
   804   002316  0E9E               	movlw	low main@mL
   805   002318  6E09               	movwf	motorLinit@mL^0,c
   806   00231A  0E00               	movlw	high main@mL
   807   00231C  6E0A               	movwf	(motorLinit@mL+1)^0,c
   808   00231E  ECFE  F01A         	call	_motorLinit	;wreg free
   809   002322                     
   810                           ;main.c: 30:     motorRinit(&mR);
   811   002322  0EA7               	movlw	low main@mR
   812   002324  6E09               	movwf	motorRinit@mR^0,c
   813   002326  0E00               	movlw	high main@mR
   814   002328  6E0A               	movwf	(motorRinit@mR+1)^0,c
   815   00232A  ECC9  F01A         	call	_motorRinit	;wreg free
   816   00232E                     
   817                           ;main.c: 33:     motorTRIS(&mL, &mR);
   818   00232E  0E9E               	movlw	low main@mL
   819   002330  6E09               	movwf	motorTRIS@mL^0,c
   820   002332  0E00               	movlw	high main@mL
   821   002334  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   822   002336  0EA7               	movlw	low main@mR
   823   002338  6E0B               	movwf	motorTRIS@mR^0,c
   824   00233A  0E00               	movlw	high main@mR
   825   00233C  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   826   00233E  ECA6  F01D         	call	_motorTRIS	;wreg free
   827   002342                     
   828                           ;main.c: 37:     TRISDbits.TRISD7 = 0;
   829   002342  9E84               	bcf	132,7,c	;volatile
   830   002344                     
   831                           ;main.c: 38:     LATDbits.LATD7 = 0;
   832   002344  9E7C               	bcf	124,7,c	;volatile
   833   002346                     
   834                           ;main.c: 39:     TRISHbits.TRISH3 = 0;
   835   002346  9688               	bcf	136,3,c	;volatile
   836   002348                     
   837                           ;main.c: 40:     LATHbits.LATH3 = 0;
   838   002348  9680               	bcf	128,3,c	;volatile
   839                           
   840                           ;main.c: 43:     RGBC_val RGBC;;main.c: 44:     int a = 0;
   841   00234A  0E00               	movlw	0
   842   00234C  0100               	movlb	0	; () banked
   843   00234E  6F7D               	movwf	(main@a+1)& (0+255),b
   844   002350  0E00               	movlw	0
   845   002352  6F7C               	movwf	main@a& (0+255),b
   846   002354                     
   847                           ; BSR set to: 0
   848                           ;main.c: 45:     TRISFbits.TRISF2 = 1;
   849   002354  8486               	bsf	134,2,c	;volatile
   850   002356                     
   851                           ; BSR set to: 0
   852                           ;main.c: 46:     ANSELFbits.ANSELF2 = 0;
   853   002356  010E               	movlb	14	; () banked
   854   002358  95B4               	bcf	180,2,b	;volatile
   855                           
   856                           ;main.c: 47:     while (a < 5) {
   857   00235A  EFE1  F011         	goto	l4249
   858   00235E                     l4241:
   859                           
   860                           ; BSR set to: 0
   861                           ;main.c: 48:         wallSmash(&mL, &mR);
   862   00235E  0E9E               	movlw	low main@mL
   863   002360  6E1C               	movwf	wallSmash@mL^0,c
   864   002362  0E00               	movlw	high main@mL
   865   002364  6E1D               	movwf	(wallSmash@mL+1)^0,c
   866   002366  0EA7               	movlw	low main@mR
   867   002368  6E1E               	movwf	wallSmash@mR^0,c
   868   00236A  0E00               	movlw	high main@mR
   869   00236C  6E1F               	movwf	(wallSmash@mR+1)^0,c
   870   00236E  EC90  F018         	call	_wallSmash	;wreg free
   871   002372                     
   872                           ;main.c: 49:         if (!PORTFbits.RF2) {
   873   002372  B48E               	btfsc	142,2,c	;volatile
   874   002374  EFBE  F011         	goto	u3621
   875   002378  EFC0  F011         	goto	u3620
   876   00237C                     u3621:
   877   00237C  EFE1  F011         	goto	l4249
   878   002380                     u3620:
   879   002380                     
   880                           ;main.c: 51:             clearArr[a] = rangeCalibrate(&RGBC);
   881   002380  0E7E               	movlw	low main@RGBC
   882   002382  6E3D               	movwf	rangeCalibrate@RGBC^0,c
   883   002384  0E00               	movlw	high main@RGBC
   884   002386  6E3E               	movwf	(rangeCalibrate@RGBC+1)^0,c
   885   002388  EC33  F01B         	call	_rangeCalibrate	;wreg free
   886   00238C  0E68               	movlw	low main@clearArr
   887   00238E  0100               	movlb	0	; () banked
   888   002390  6F66               	movwf	??_main& (0+255),b
   889   002392  0E00               	movlw	high main@clearArr
   890   002394  6F67               	movwf	(??_main+1)& (0+255),b
   891   002396  90D8               	bcf	status,0,c
   892   002398  357C               	rlcf	main@a& (0+255),w,b
   893   00239A  6ED9               	movwf	fsr2l,c
   894   00239C  357D               	rlcf	(main@a+1)& (0+255),w,b
   895   00239E  6EDA               	movwf	fsr2h,c
   896   0023A0  90D8               	bcf	status,0,c
   897   0023A2  36D9               	rlcf	fsr2l,f,c
   898   0023A4  36DA               	rlcf	fsr2h,f,c
   899   0023A6  5166               	movf	??_main& (0+255),w,b
   900   0023A8  26D9               	addwf	fsr2l,f,c
   901   0023AA  5167               	movf	(??_main+1)& (0+255),w,b
   902   0023AC  22DA               	addwfc	fsr2h,f,c
   903   0023AE  C03D  FFDE         	movff	?_rangeCalibrate,postinc2
   904   0023B2  C03E  FFDE         	movff	?_rangeCalibrate+1,postinc2
   905   0023B6  C03F  FFDE         	movff	?_rangeCalibrate+2,postinc2
   906   0023BA  C040  FFDE         	movff	?_rangeCalibrate+3,postinc2
   907   0023BE                     
   908                           ; BSR set to: 0
   909                           ;main.c: 52:             a++;
   910   0023BE  4B7C               	infsnz	main@a& (0+255),f,b
   911   0023C0  2B7D               	incf	(main@a+1)& (0+255),f,b
   912   0023C2                     l4249:
   913                           
   914                           ;main.c: 47:     while (a < 5) {
   915   0023C2  0100               	movlb	0	; () banked
   916   0023C4  BF7D               	btfsc	(main@a+1)& (0+255),7,b
   917   0023C6  EFEE  F011         	goto	u3631
   918   0023CA  517D               	movf	(main@a+1)& (0+255),w,b
   919   0023CC  E109               	bnz	u3630
   920   0023CE  0E05               	movlw	5
   921   0023D0  5D7C               	subwf	main@a& (0+255),w,b
   922   0023D2  A0D8               	btfss	status,0,c
   923   0023D4  EFEE  F011         	goto	u3631
   924   0023D8  EFF0  F011         	goto	u3630
   925   0023DC                     u3631:
   926   0023DC  EFAF  F011         	goto	l4241
   927   0023E0                     u3630:
   928   0023E0                     
   929                           ; BSR set to: 0
   930                           ;main.c: 58:     CR1L = clearArr[0] - 0.4;
   931   0023E0  C068  F009         	movff	main@clearArr,___fladd@b
   932   0023E4  C069  F00A         	movff	main@clearArr+1,___fladd@b+1
   933   0023E8  C06A  F00B         	movff	main@clearArr+2,___fladd@b+2
   934   0023EC  C06B  F00C         	movff	main@clearArr+3,___fladd@b+3
   935   0023F0  0ECD               	movlw	205
   936   0023F2  6E0D               	movwf	___fladd@a^0,c
   937   0023F4  0ECC               	movlw	204
   938   0023F6  6E0E               	movwf	(___fladd@a+1)^0,c
   939   0023F8  0ECC               	movlw	204
   940   0023FA  6E0F               	movwf	(___fladd@a+2)^0,c
   941   0023FC  0EBE               	movlw	190
   942   0023FE  6E10               	movwf	(___fladd@a+3)^0,c
   943   002400  EC16  F00D         	call	___fladd	;wreg free
   944   002404  C009  F045         	movff	?___fladd,_CR1L
   945   002408  C00A  F046         	movff	?___fladd+1,_CR1L+1
   946   00240C  C00B  F047         	movff	?___fladd+2,_CR1L+2
   947   002410  C00C  F048         	movff	?___fladd+3,_CR1L+3
   948   002414                     
   949                           ;main.c: 59:     CR2U = 5.594;
   950   002414  0E0C               	movlw	12
   951   002416  6E41               	movwf	_CR2U^0,c
   952   002418  0E02               	movlw	2
   953   00241A  6E42               	movwf	(_CR2U+1)^0,c
   954   00241C  0EB3               	movlw	179
   955   00241E  6E43               	movwf	(_CR2U+2)^0,c
   956   002420  0E40               	movlw	64
   957   002422  6E44               	movwf	(_CR2U+3)^0,c
   958   002424                     
   959                           ;main.c: 60:     CR2L = 4.65;
   960   002424  0ECD               	movlw	205
   961   002426  0100               	movlb	0	; () banked
   962   002428  6FCC               	movwf	_CR2L& (0+255),b
   963   00242A  0ECC               	movlw	204
   964   00242C  6FCD               	movwf	(_CR2L+1)& (0+255),b
   965   00242E  0E94               	movlw	148
   966   002430  6FCE               	movwf	(_CR2L+2)& (0+255),b
   967   002432  0E40               	movlw	64
   968   002434  6FCF               	movwf	(_CR2L+3)& (0+255),b
   969   002436                     
   970                           ; BSR set to: 0
   971                           ;main.c: 61:     CR3U = 4.2;
   972   002436  0E66               	movlw	102
   973   002438  6FC8               	movwf	_CR3U& (0+255),b
   974   00243A  0E66               	movlw	102
   975   00243C  6FC9               	movwf	(_CR3U+1)& (0+255),b
   976   00243E  0E86               	movlw	134
   977   002440  6FCA               	movwf	(_CR3U+2)& (0+255),b
   978   002442  0E40               	movlw	64
   979   002444  6FCB               	movwf	(_CR3U+3)& (0+255),b
   980   002446                     
   981                           ; BSR set to: 0
   982                           ;main.c: 62:     CR3L = 1.2;
   983   002446  0E9A               	movlw	154
   984   002448  6FC4               	movwf	_CR3L& (0+255),b
   985   00244A  0E99               	movlw	153
   986   00244C  6FC5               	movwf	(_CR3L+1)& (0+255),b
   987   00244E  0E99               	movlw	153
   988   002450  6FC6               	movwf	(_CR3L+2)& (0+255),b
   989   002452  0E3F               	movlw	63
   990   002454  6FC7               	movwf	(_CR3L+3)& (0+255),b
   991                           
   992                           ;main.c: 63:     if (CR1L > 5) {
   993   002456  0E00               	movlw	0
   994   002458  6E09               	movwf	___flge@ff1^0,c
   995   00245A  0E00               	movlw	0
   996   00245C  6E0A               	movwf	(___flge@ff1+1)^0,c
   997   00245E  0EA0               	movlw	160
   998   002460  6E0B               	movwf	(___flge@ff1+2)^0,c
   999   002462  0E40               	movlw	64
  1000   002464  6E0C               	movwf	(___flge@ff1+3)^0,c
  1001   002466  C045  F00D         	movff	_CR1L,___flge@ff2
  1002   00246A  C046  F00E         	movff	_CR1L+1,___flge@ff2+1
  1003   00246E  C047  F00F         	movff	_CR1L+2,___flge@ff2+2
  1004   002472  C048  F010         	movff	_CR1L+3,___flge@ff2+3
  1005   002476  EC92  F017         	call	___flge	;wreg free
  1006   00247A  B0D8               	btfsc	status,0,c
  1007   00247C  EF42  F012         	goto	u3641
  1008   002480  EF44  F012         	goto	u3640
  1009   002484                     u3641:
  1010   002484  EF45  F012         	goto	l4263
  1011   002488                     u3640:
  1012   002488                     
  1013                           ;main.c: 64:         LATDbits.LATD7 = 1;
  1014   002488  8E7C               	bsf	124,7,c	;volatile
  1015   00248A                     l4263:
  1016                           
  1017                           ;main.c: 67:     Interrupts_init();
  1018   00248A  EC77  F01D         	call	_Interrupts_init	;wreg free
  1019   00248E                     
  1020                           ;main.c: 68:     Color_Interrupts_init();
  1021   00248E  EC5D  F01D         	call	_Color_Interrupts_init	;wreg free
  1022   002492                     
  1023                           ;main.c: 69:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  1024   002492  C0E8  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
  1025   002496  C0E9  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
  1026   00249A  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
  1027   00249E  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
  1028   0024A2  ECD8  F01C         	call	_Color_Interrupts_threshold	;wreg free
  1029   0024A6                     
  1030                           ;main.c: 70:     persistence_register();
  1031   0024A6  EC89  F01D         	call	_persistence_register	;wreg free
  1032   0024AA                     
  1033                           ;main.c: 75:     char buf[100];;main.c: 76:     motor_return = 0;
  1034   0024AA  0E00               	movlw	0
  1035   0024AC  0100               	movlb	0	; () banked
  1036   0024AE  6FD8               	movwf	_motor_return& (0+255),b
  1037   0024B0                     
  1038                           ; BSR set to: 0
  1039                           ;main.c: 77:     buggy_step = 0;
  1040   0024B0  0E00               	movlw	0
  1041   0024B2  6E50               	movwf	(_buggy_step+1)^0,c
  1042   0024B4  0E00               	movlw	0
  1043   0024B6  6E4F               	movwf	_buggy_step^0,c
  1044   0024B8                     
  1045                           ; BSR set to: 0
  1046                           ;main.c: 78:     lost_ctr = 0;
  1047   0024B8  0E00               	movlw	0
  1048   0024BA  6E4E               	movwf	(_lost_ctr+1)^0,c
  1049   0024BC  0E00               	movlw	0
  1050   0024BE  6E4D               	movwf	_lost_ctr^0,c
  1051   0024C0                     
  1052                           ; BSR set to: 0
  1053                           ;main.c: 79:     interrupt_ctr = 0;
  1054   0024C0  0E00               	movlw	0
  1055   0024C2  6FD7               	movwf	(_interrupt_ctr+1)& (0+255),b
  1056   0024C4  0E00               	movlw	0
  1057   0024C6  6FD6               	movwf	_interrupt_ctr& (0+255),b
  1058   0024C8                     
  1059                           ; BSR set to: 0
  1060                           ;main.c: 83:     TRISHbits.TRISH0 = 0;
  1061   0024C8  9088               	bcf	136,0,c	;volatile
  1062   0024CA                     
  1063                           ; BSR set to: 0
  1064                           ;main.c: 84:     LATHbits.LATH0 = 0;
  1065   0024CA  9080               	bcf	128,0,c	;volatile
  1066   0024CC                     
  1067                           ; BSR set to: 0
  1068                           ;main.c: 87:     TRISFbits.TRISF0 = 0;
  1069   0024CC  9086               	bcf	134,0,c	;volatile
  1070   0024CE                     
  1071                           ; BSR set to: 0
  1072                           ;main.c: 88:     LATFbits.LATF0 = 0;
  1073   0024CE  907E               	bcf	126,0,c	;volatile
  1074   0024D0                     
  1075                           ; BSR set to: 0
  1076                           ;main.c: 91:     TRISDbits.TRISD4 = 0;
  1077   0024D0  9884               	bcf	132,4,c	;volatile
  1078   0024D2                     
  1079                           ; BSR set to: 0
  1080                           ;main.c: 92:     LATDbits.LATD4 = 0;
  1081   0024D2  987C               	bcf	124,4,c	;volatile
  1082   0024D4                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 95:     TRISDbits.TRISD3 = 0;
  1085   0024D4  9684               	bcf	132,3,c	;volatile
  1086   0024D6                     
  1087                           ; BSR set to: 0
  1088                           ;main.c: 96:     LATDbits.LATD3 = 0;
  1089   0024D6  967C               	bcf	124,3,c	;volatile
  1090   0024D8                     l4295:
  1091                           
  1092                           ;main.c: 104:         fullSpeedAhead(&mL, &mR);
  1093   0024D8  0E9E               	movlw	low main@mL
  1094   0024DA  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1095   0024DC  0E00               	movlw	high main@mL
  1096   0024DE  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1097   0024E0  0EA7               	movlw	low main@mR
  1098   0024E2  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1099   0024E4  0E00               	movlw	high main@mR
  1100   0024E6  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1101   0024E8  EC05  F019         	call	_fullSpeedAhead	;wreg free
  1102   0024EC                     
  1103                           ;main.c: 105:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
  1104   0024EC  0451               	decf	_interrupt_flag^0,w,c
  1105   0024EE  1052               	iorwf	(_interrupt_flag+1)^0,w,c
  1106   0024F0  A4D8               	btfss	status,2,c
  1107   0024F2  EF7D  F012         	goto	u3651
  1108   0024F6  EF7F  F012         	goto	u3650
  1109   0024FA                     u3651:
  1110   0024FA  EF6C  F012         	goto	l4295
  1111   0024FE                     u3650:
  1112   0024FE  0100               	movlb	0	; () banked
  1113   002500  BFD7               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
  1114   002502  EF8C  F012         	goto	u3661
  1115   002506  51D7               	movf	(_interrupt_ctr+1)& (0+255),w,b
  1116   002508  E109               	bnz	u3660
  1117   00250A  0E02               	movlw	2
  1118   00250C  5DD6               	subwf	_interrupt_ctr& (0+255),w,b
  1119   00250E  A0D8               	btfss	status,0,c
  1120   002510  EF8C  F012         	goto	u3661
  1121   002514  EF8E  F012         	goto	u3660
  1122   002518                     u3661:
  1123   002518  EF6C  F012         	goto	l4295
  1124   00251C                     u3660:
  1125   00251C                     
  1126                           ; BSR set to: 0
  1127                           ;main.c: 106:             norm_stop(&mL, &mR);
  1128   00251C  0E9E               	movlw	low main@mL
  1129   00251E  6E1C               	movwf	norm_stop@mL^0,c
  1130   002520  0E00               	movlw	high main@mL
  1131   002522  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1132   002524  0EA7               	movlw	low main@mR
  1133   002526  6E1E               	movwf	norm_stop@mR^0,c
  1134   002528  0E00               	movlw	high main@mR
  1135   00252A  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1136   00252C  EC91  F01C         	call	_norm_stop	;wreg free
  1137   002530                     
  1138                           ;main.c: 107:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  1139   002530  0E52               	movlw	82
  1140   002532  0100               	movlb	0	; () banked
  1141   002534  6F67               	movwf	(??_main+1)& (0+255),b
  1142   002536  0E2B               	movlw	43
  1143   002538  6F66               	movwf	??_main& (0+255),b
  1144   00253A  0E00               	movlw	0
  1145   00253C                     u3737:
  1146   00253C  2EE8               	decfsz	wreg,f,c
  1147   00253E  D7FE               	bra	u3737
  1148   002540  2F66               	decfsz	??_main& (0+255),f,b
  1149   002542  D7FC               	bra	u3737
  1150   002544  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1151   002546  D7FA               	bra	u3737
  1152   002548  F000               	nop	
  1153   00254A                     
  1154                           ;main.c: 108:             LATDbits.LATD7 = 0;
  1155   00254A  9E7C               	bcf	124,7,c	;volatile
  1156   00254C                     
  1157                           ;main.c: 109:             if (motor_return == 0) {
  1158   00254C  0100               	movlb	0	; () banked
  1159   00254E  51D8               	movf	_motor_return& (0+255),w,b
  1160   002550  A4D8               	btfss	status,2,c
  1161   002552  EFAD  F012         	goto	u3671
  1162   002556  EFAF  F012         	goto	u3670
  1163   00255A                     u3671:
  1164   00255A  EF02  F013         	goto	l4321
  1165   00255E                     u3670:
  1166   00255E                     
  1167                           ; BSR set to: 0
  1168                           ;main.c: 110:                 wallSmash(&mL, &mR);
  1169   00255E  0E9E               	movlw	low main@mL
  1170   002560  6E1C               	movwf	wallSmash@mL^0,c
  1171   002562  0E00               	movlw	high main@mL
  1172   002564  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1173   002566  0EA7               	movlw	low main@mR
  1174   002568  6E1E               	movwf	wallSmash@mR^0,c
  1175   00256A  0E00               	movlw	high main@mR
  1176   00256C  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1177   00256E  EC90  F018         	call	_wallSmash	;wreg free
  1178   002572                     
  1179                           ;main.c: 111:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1180   002572  0E31               	movlw	49
  1181   002574  0100               	movlb	0	; () banked
  1182   002576  6F67               	movwf	(??_main+1)& (0+255),b
  1183   002578  0EB4               	movlw	180
  1184   00257A  6F66               	movwf	??_main& (0+255),b
  1185   00257C  0E65               	movlw	101
  1186   00257E                     u3747:
  1187   00257E  2EE8               	decfsz	wreg,f,c
  1188   002580  D7FE               	bra	u3747
  1189   002582  2F66               	decfsz	??_main& (0+255),f,b
  1190   002584  D7FC               	bra	u3747
  1191   002586  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1192   002588  D7FA               	bra	u3747
  1193   00258A  D000               	nop2	
  1194   00258C                     
  1195                           ;main.c: 112:                 color_read_RGBC(&RGBC);
  1196   00258C  0E7E               	movlw	low main@RGBC
  1197   00258E  6E22               	movwf	color_read_RGBC@temp^0,c
  1198   002590  0E00               	movlw	high main@RGBC
  1199   002592  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1200   002594  EC7A  F019         	call	_color_read_RGBC	;wreg free
  1201   002598                     
  1202                           ;main.c: 113:                 color_normalise(&RGBC);
  1203   002598  0E7E               	movlw	low main@RGBC
  1204   00259A  6E3B               	movwf	color_normalise@RGBC^0,c
  1205   00259C  0E00               	movlw	high main@RGBC
  1206   00259E  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1207   0025A0  EC24  F016         	call	_color_normalise	;wreg free
  1208   0025A4                     
  1209                           ;main.c: 114:                 LATHbits.LATH3 = !LATHbits.LATH3;
  1210   0025A4  A680               	btfss	128,3,c	;volatile
  1211   0025A6  EFD7  F012         	goto	u3681
  1212   0025AA  EFDC  F012         	goto	u3680
  1213   0025AE                     u3681:
  1214   0025AE  0100               	movlb	0	; () banked
  1215   0025B0  6B66               	clrf	??_main& (0+255),b
  1216   0025B2  2B66               	incf	??_main& (0+255),f,b
  1217   0025B4  EFDE  F012         	goto	u3698
  1218   0025B8                     u3680:
  1219   0025B8  0100               	movlb	0	; () banked
  1220   0025BA  6B66               	clrf	??_main& (0+255),b
  1221   0025BC                     u3698:
  1222   0025BC  4766               	rlncf	??_main& (0+255),f,b
  1223   0025BE  4766               	rlncf	??_main& (0+255),f,b
  1224   0025C0  4766               	rlncf	??_main& (0+255),f,b
  1225   0025C2  5080               	movf	128,w,c	;volatile
  1226   0025C4  1966               	xorwf	??_main& (0+255),w,b
  1227   0025C6  0BF7               	andlw	-9
  1228   0025C8  1966               	xorwf	??_main& (0+255),w,b
  1229   0025CA  6E80               	movwf	128,c	;volatile
  1230   0025CC                     
  1231                           ; BSR set to: 0
  1232                           ;main.c: 115:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1233   0025CC  0E7E               	movlw	low main@RGBC
  1234   0025CE  6E27               	movwf	motor_response@temp^0,c
  1235   0025D0  0E00               	movlw	high main@RGBC
  1236   0025D2  6E28               	movwf	(motor_response@temp+1)^0,c
  1237   0025D4  0E9E               	movlw	low main@mL
  1238   0025D6  6E29               	movwf	motor_response@mL^0,c
  1239   0025D8  0E00               	movlw	high main@mL
  1240   0025DA  6E2A               	movwf	(motor_response@mL+1)^0,c
  1241   0025DC  0EA7               	movlw	low main@mR
  1242   0025DE  6E2B               	movwf	motor_response@mR^0,c
  1243   0025E0  0E00               	movlw	high main@mR
  1244   0025E2  6E2C               	movwf	(motor_response@mR+1)^0,c
  1245   0025E4  EC0C  F007         	call	_motor_response	;wreg free
  1246   0025E8  0100               	movlb	0	; () banked
  1247   0025EA  6F66               	movwf	??_main& (0+255),b
  1248   0025EC  0ED9               	movlw	low _buggy_path
  1249   0025EE  244F               	addwf	_buggy_step^0,w,c
  1250   0025F0  6ED9               	movwf	fsr2l,c
  1251   0025F2  0E00               	movlw	high _buggy_path
  1252   0025F4  2050               	addwfc	(_buggy_step+1)^0,w,c
  1253   0025F6  6EDA               	movwf	fsr2h,c
  1254   0025F8  C066  FFDF         	movff	??_main,indf2
  1255                           
  1256                           ;main.c: 116:                 buggy_step++;
  1257   0025FC  4A4F               	infsnz	_buggy_step^0,f,c
  1258   0025FE  2A50               	incf	(_buggy_step+1)^0,f,c
  1259                           
  1260                           ;main.c: 117:             } else {
  1261   002600  EF74  F013         	goto	l4345
  1262   002604                     l4321:
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;main.c: 118:                 motor_retrace(&buggy_path, &mL, &mR);
  1266   002604  0ED9               	movlw	low _buggy_path
  1267   002606  6E27               	movwf	motor_retrace@buggy_path^0,c
  1268   002608  0E00               	movlw	high _buggy_path
  1269   00260A  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1270   00260C  0E9E               	movlw	low main@mL
  1271   00260E  6E29               	movwf	motor_retrace@mL^0,c
  1272   002610  0E00               	movlw	high main@mL
  1273   002612  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1274   002614  0EA7               	movlw	low main@mR
  1275   002616  6E2B               	movwf	motor_retrace@mR^0,c
  1276   002618  0E00               	movlw	high main@mR
  1277   00261A  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1278   00261C  EC76  F00F         	call	_motor_retrace	;wreg free
  1279   002620                     
  1280                           ;main.c: 119:                 buggy_step--;
  1281   002620  064F               	decf	_buggy_step^0,f,c
  1282   002622  A0D8               	btfss	status,0,c
  1283   002624  0650               	decf	(_buggy_step+1)^0,f,c
  1284   002626                     
  1285                           ;main.c: 121:                 if (buggy_step == 1) {
  1286   002626  044F               	decf	_buggy_step^0,w,c
  1287   002628  1050               	iorwf	(_buggy_step+1)^0,w,c
  1288   00262A  A4D8               	btfss	status,2,c
  1289   00262C  EF1A  F013         	goto	u3701
  1290   002630  EF1C  F013         	goto	u3700
  1291   002634                     u3701:
  1292   002634  EF74  F013         	goto	l4345
  1293   002638                     u3700:
  1294   002638                     
  1295                           ;main.c: 124:                     motor_return = 0;
  1296   002638  0E00               	movlw	0
  1297   00263A  0100               	movlb	0	; () banked
  1298   00263C  6FD8               	movwf	_motor_return& (0+255),b
  1299   00263E                     
  1300                           ; BSR set to: 0
  1301                           ;main.c: 125:                     LATDbits.LATD4 = 0;
  1302   00263E  987C               	bcf	124,4,c	;volatile
  1303   002640                     
  1304                           ; BSR set to: 0
  1305                           ;main.c: 126:                     norm_stop(&mL, &mR);
  1306   002640  0E9E               	movlw	low main@mL
  1307   002642  6E1C               	movwf	norm_stop@mL^0,c
  1308   002644  0E00               	movlw	high main@mL
  1309   002646  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1310   002648  0EA7               	movlw	low main@mR
  1311   00264A  6E1E               	movwf	norm_stop@mR^0,c
  1312   00264C  0E00               	movlw	high main@mR
  1313   00264E  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1314   002650  EC91  F01C         	call	_norm_stop	;wreg free
  1315   002654                     
  1316                           ;main.c: 127:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1317   002654  0E29               	movlw	41
  1318   002656  0100               	movlb	0	; () banked
  1319   002658  6F67               	movwf	(??_main+1)& (0+255),b
  1320   00265A  0E96               	movlw	150
  1321   00265C  6F66               	movwf	??_main& (0+255),b
  1322   00265E  0E7F               	movlw	127
  1323   002660                     u3757:
  1324   002660  2EE8               	decfsz	wreg,f,c
  1325   002662  D7FE               	bra	u3757
  1326   002664  2F66               	decfsz	??_main& (0+255),f,b
  1327   002666  D7FC               	bra	u3757
  1328   002668  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1329   00266A  D7FA               	bra	u3757
  1330   00266C                     
  1331                           ;main.c: 128:                     turnLeft(&mL, &mR);
  1332   00266C  0E9E               	movlw	low main@mL
  1333   00266E  6E1C               	movwf	turnLeft@mL^0,c
  1334   002670  0E00               	movlw	high main@mL
  1335   002672  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1336   002674  0EA7               	movlw	low main@mR
  1337   002676  6E1E               	movwf	turnLeft@mR^0,c
  1338   002678  0E00               	movlw	high main@mR
  1339   00267A  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1340   00267C  EC90  F01A         	call	_turnLeft	;wreg free
  1341   002680                     
  1342                           ;main.c: 129:                     _delay((unsigned long)((490)*(64000000/4000.0)));
  1343   002680  0E28               	movlw	40
  1344   002682  0100               	movlb	0	; () banked
  1345   002684  6F67               	movwf	(??_main+1)& (0+255),b
  1346   002686  0EC6               	movlw	198
  1347   002688  6F66               	movwf	??_main& (0+255),b
  1348   00268A  0EB5               	movlw	181
  1349   00268C                     u3767:
  1350   00268C  2EE8               	decfsz	wreg,f,c
  1351   00268E  D7FE               	bra	u3767
  1352   002690  2F66               	decfsz	??_main& (0+255),f,b
  1353   002692  D7FC               	bra	u3767
  1354   002694  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1355   002696  D7FA               	bra	u3767
  1356   002698                     
  1357                           ;main.c: 130:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1358   002698  A080               	btfss	128,0,c	;volatile
  1359   00269A  EF51  F013         	goto	u3711
  1360   00269E  EF56  F013         	goto	u3710
  1361   0026A2                     u3711:
  1362   0026A2  0100               	movlb	0	; () banked
  1363   0026A4  6B66               	clrf	??_main& (0+255),b
  1364   0026A6  2B66               	incf	??_main& (0+255),f,b
  1365   0026A8  EF58  F013         	goto	u3728
  1366   0026AC                     u3710:
  1367   0026AC  0100               	movlb	0	; () banked
  1368   0026AE  6B66               	clrf	??_main& (0+255),b
  1369   0026B0                     u3728:
  1370   0026B0  5080               	movf	128,w,c	;volatile
  1371   0026B2  1966               	xorwf	??_main& (0+255),w,b
  1372   0026B4  0BFE               	andlw	-2
  1373   0026B6  1966               	xorwf	??_main& (0+255),w,b
  1374   0026B8  6E80               	movwf	128,c	;volatile
  1375   0026BA                     
  1376                           ; BSR set to: 0
  1377                           ;main.c: 131:                     norm_stop(&mL, &mR);
  1378   0026BA  0E9E               	movlw	low main@mL
  1379   0026BC  6E1C               	movwf	norm_stop@mL^0,c
  1380   0026BE  0E00               	movlw	high main@mL
  1381   0026C0  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1382   0026C2  0EA7               	movlw	low main@mR
  1383   0026C4  6E1E               	movwf	norm_stop@mR^0,c
  1384   0026C6  0E00               	movlw	high main@mR
  1385   0026C8  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1386   0026CA  EC91  F01C         	call	_norm_stop	;wreg free
  1387   0026CE                     
  1388                           ;main.c: 132:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1389   0026CE  0EA3               	movlw	163
  1390   0026D0  0100               	movlb	0	; () banked
  1391   0026D2  6F67               	movwf	(??_main+1)& (0+255),b
  1392   0026D4  0E57               	movlw	87
  1393   0026D6  6F66               	movwf	??_main& (0+255),b
  1394   0026D8  0E02               	movlw	2
  1395   0026DA                     u3777:
  1396   0026DA  2EE8               	decfsz	wreg,f,c
  1397   0026DC  D7FE               	bra	u3777
  1398   0026DE  2F66               	decfsz	??_main& (0+255),f,b
  1399   0026E0  D7FC               	bra	u3777
  1400   0026E2  2F67               	decfsz	(??_main+1)& (0+255),f,b
  1401   0026E4  D7FA               	bra	u3777
  1402   0026E6  F000               	nop	
  1403   0026E8                     l4345:
  1404                           
  1405                           ;main.c: 135:             LATHbits.LATH3 = 0;
  1406   0026E8  9680               	bcf	128,3,c	;volatile
  1407   0026EA                     
  1408                           ;main.c: 136:             interrupt_flag = 0;
  1409   0026EA  0E00               	movlw	0
  1410   0026EC  6E52               	movwf	(_interrupt_flag+1)^0,c
  1411   0026EE  0E00               	movlw	0
  1412   0026F0  6E51               	movwf	_interrupt_flag^0,c
  1413   0026F2  EF6C  F012         	goto	l4295
  1414   0026F6  EF1B  F000         	goto	start
  1415   0026FA                     __end_of_main:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _wallSmash *****************
  1419 ;; Defined at:
  1420 ;;		line 200 in file "dc_motor.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1423 ;;		 -> main@mL(9), 
  1424 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1425 ;;		 -> main@mR(9), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1437 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1439 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1440 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1441 ;;Total ram usage:        5 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; Hardware stack levels required when called: 8
  1444 ;; This function calls:
  1445 ;;		_setMotorPWM
  1446 ;; This function is called by:
  1447 ;;		_main
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           
  1451                           	psect	text1
  1452   003120                     __ptext1:
  1453                           	callstack 0
  1454   003120                     _wallSmash:
  1455                           	callstack 22
  1456   003120                     
  1457                           ;dc_motor.c: 200: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 201: {;dc_motor
      +                          .c: 202:     mL->power =30;
  1458   003120  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1459   003124  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1460   003128  0E1E               	movlw	30
  1461   00312A  6EDF               	movwf	indf2,c
  1462                           
  1463                           ;dc_motor.c: 203:     mR->power = 30;
  1464   00312C  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1465   003130  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1466   003134  0E1E               	movlw	30
  1467   003136  6EDF               	movwf	indf2,c
  1468   003138                     
  1469                           ;dc_motor.c: 204:     mR->direction = 1;
  1470   003138  EE20 F001          	lfsr	2,1
  1471   00313C  501E               	movf	wallSmash@mR^0,w,c
  1472   00313E  26D9               	addwf	fsr2l,f,c
  1473   003140  501F               	movf	(wallSmash@mR+1)^0,w,c
  1474   003142  22DA               	addwfc	fsr2h,f,c
  1475   003144  0E01               	movlw	1
  1476   003146  6EDF               	movwf	indf2,c
  1477   003148                     
  1478                           ;dc_motor.c: 205:     mL->direction = 1;
  1479   003148  EE20 F001          	lfsr	2,1
  1480   00314C  501C               	movf	wallSmash@mL^0,w,c
  1481   00314E  26D9               	addwf	fsr2l,f,c
  1482   003150  501D               	movf	(wallSmash@mL+1)^0,w,c
  1483   003152  22DA               	addwfc	fsr2h,f,c
  1484   003154  0E01               	movlw	1
  1485   003156  6EDF               	movwf	indf2,c
  1486   003158                     
  1487                           ;dc_motor.c: 206:     mL->brakemode = 1;
  1488   003158  EE20 F002          	lfsr	2,2
  1489   00315C  501C               	movf	wallSmash@mL^0,w,c
  1490   00315E  26D9               	addwf	fsr2l,f,c
  1491   003160  501D               	movf	(wallSmash@mL+1)^0,w,c
  1492   003162  22DA               	addwfc	fsr2h,f,c
  1493   003164  0E01               	movlw	1
  1494   003166  6EDF               	movwf	indf2,c
  1495   003168                     
  1496                           ;dc_motor.c: 207:     mR->brakemode = 1;
  1497   003168  EE20 F002          	lfsr	2,2
  1498   00316C  501E               	movf	wallSmash@mR^0,w,c
  1499   00316E  26D9               	addwf	fsr2l,f,c
  1500   003170  501F               	movf	(wallSmash@mR+1)^0,w,c
  1501   003172  22DA               	addwfc	fsr2h,f,c
  1502   003174  0E01               	movlw	1
  1503   003176  6EDF               	movwf	indf2,c
  1504                           
  1505                           ;dc_motor.c: 208:     while (mL->power <= 70 && mR->power <=70)
  1506   003178  EFD4  F018         	goto	l3483
  1507   00317C                     l3477:
  1508                           
  1509                           ;dc_motor.c: 209:     {;dc_motor.c: 210:         mL->power++;
  1510   00317C  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1511   003180  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1512   003184  2ADF               	incf	indf2,f,c
  1513                           
  1514                           ;dc_motor.c: 211:         mR->power++;
  1515   003186  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1516   00318A  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1517   00318E  2ADF               	incf	indf2,f,c
  1518   003190                     
  1519                           ;dc_motor.c: 213:         setMotorPWM(mL);
  1520   003190  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1521   003194  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1522   003198  ECDC  F016         	call	_setMotorPWM	;wreg free
  1523   00319C                     
  1524                           ;dc_motor.c: 214:         setMotorPWM(mR);
  1525   00319C  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1526   0031A0  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1527   0031A4  ECDC  F016         	call	_setMotorPWM	;wreg free
  1528   0031A8                     l3483:
  1529                           
  1530                           ;dc_motor.c: 208:     while (mL->power <= 70 && mR->power <=70)
  1531   0031A8  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1532   0031AC  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1533   0031B0  0E47               	movlw	71
  1534   0031B2  60DF               	cpfslt	indf2,c
  1535   0031B4  EFDE  F018         	goto	u2651
  1536   0031B8  EFE0  F018         	goto	u2650
  1537   0031BC                     u2651:
  1538   0031BC  EFEC  F018         	goto	l3487
  1539   0031C0                     u2650:
  1540   0031C0  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1541   0031C4  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1542   0031C8  0E46               	movlw	70
  1543   0031CA  64DF               	cpfsgt	indf2,c
  1544   0031CC  EFEA  F018         	goto	u2661
  1545   0031D0  EFEC  F018         	goto	u2660
  1546   0031D4                     u2661:
  1547   0031D4  EFBE  F018         	goto	l3477
  1548   0031D8                     u2660:
  1549   0031D8                     l3487:
  1550                           
  1551                           ;dc_motor.c: 216:     mL->power = 70;
  1552   0031D8  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1553   0031DC  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1554   0031E0  0E46               	movlw	70
  1555   0031E2  6EDF               	movwf	indf2,c
  1556                           
  1557                           ;dc_motor.c: 217:     mR->power = 70;
  1558   0031E4  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1559   0031E8  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1560   0031EC  0E46               	movlw	70
  1561   0031EE  6EDF               	movwf	indf2,c
  1562   0031F0                     
  1563                           ;dc_motor.c: 218:     setMotorPWM(mL);
  1564   0031F0  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1565   0031F4  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1566   0031F8  ECDC  F016         	call	_setMotorPWM	;wreg free
  1567   0031FC                     
  1568                           ;dc_motor.c: 219:     setMotorPWM(mR);
  1569   0031FC  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1570   003200  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1571   003204  ECDC  F016         	call	_setMotorPWM	;wreg free
  1572   003208  0012               	return		;funcret
  1573   00320A                     __end_of_wallSmash:
  1574                           	callstack 0
  1575                           
  1576 ;; *************** function _tricolorLED *****************
  1577 ;; Defined at:
  1578 ;;		line 121 in file "color.c"
  1579 ;; Parameters:    Size  Location     Type
  1580 ;;		None
  1581 ;; Auto vars:     Size  Location     Type
  1582 ;;		None
  1583 ;; Return value:  Size  Location     Type
  1584 ;;                  1    wreg      void 
  1585 ;; Registers used:
  1586 ;;		cstack
  1587 ;; Tracked objects:
  1588 ;;		On entry : 0/0
  1589 ;;		On exit  : 0/0
  1590 ;;		Unchanged: 0/0
  1591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1596 ;;Total ram usage:        0 bytes
  1597 ;; Hardware stack levels used: 1
  1598 ;; Hardware stack levels required when called: 7
  1599 ;; This function calls:
  1600 ;;		_bLED
  1601 ;;		_gLED
  1602 ;;		_rLED
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text2
  1609   003B04                     __ptext2:
  1610                           	callstack 0
  1611   003B04                     _tricolorLED:
  1612                           	callstack 23
  1613   003B04                     
  1614                           ;color.c: 123:     rLED();
  1615   003B04  ECBF  F01D         	call	_rLED	;wreg free
  1616                           
  1617                           ;color.c: 124:     gLED();
  1618   003B08  ECC2  F01D         	call	_gLED	;wreg free
  1619                           
  1620                           ;color.c: 125:     bLED();
  1621   003B0C  ECC5  F01D         	call	_bLED	;wreg free
  1622   003B10  0012               	return		;funcret
  1623   003B12                     __end_of_tricolorLED:
  1624                           	callstack 0
  1625                           
  1626 ;; *************** function _rLED *****************
  1627 ;; Defined at:
  1628 ;;		line 130 in file "color.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;		None
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		None
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1646 ;;Total ram usage:        0 bytes
  1647 ;; Hardware stack levels used: 1
  1648 ;; Hardware stack levels required when called: 6
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		_tricolorLED
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text3
  1657   003B7E                     __ptext3:
  1658                           	callstack 0
  1659   003B7E                     _rLED:
  1660                           	callstack 23
  1661   003B7E                     
  1662                           ;color.c: 131:     TRISGbits.TRISG0 = 0;
  1663   003B7E  9087               	bcf	135,0,c	;volatile
  1664                           
  1665                           ;color.c: 132:     LATGbits.LATG0 = 1;
  1666   003B80  807F               	bsf	127,0,c	;volatile
  1667   003B82  0012               	return		;funcret
  1668   003B84                     __end_of_rLED:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _gLED *****************
  1672 ;; Defined at:
  1673 ;;		line 137 in file "color.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		None
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 6
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_tricolorLED
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text4
  1702   003B84                     __ptext4:
  1703                           	callstack 0
  1704   003B84                     _gLED:
  1705                           	callstack 23
  1706   003B84                     
  1707                           ;color.c: 138:     TRISEbits.TRISE7 = 0;
  1708   003B84  9E85               	bcf	133,7,c	;volatile
  1709                           
  1710                           ;color.c: 139:     LATEbits.LATE7 = 1;
  1711   003B86  8E7D               	bsf	125,7,c	;volatile
  1712   003B88  0012               	return		;funcret
  1713   003B8A                     __end_of_gLED:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function _bLED *****************
  1717 ;; Defined at:
  1718 ;;		line 144 in file "color.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;		None
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;		None
  1723 ;; Return value:  Size  Location     Type
  1724 ;;                  1    wreg      void 
  1725 ;; Registers used:
  1726 ;;		None
  1727 ;; Tracked objects:
  1728 ;;		On entry : 0/0
  1729 ;;		On exit  : 0/0
  1730 ;;		Unchanged: 0/0
  1731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1736 ;;Total ram usage:        0 bytes
  1737 ;; Hardware stack levels used: 1
  1738 ;; Hardware stack levels required when called: 6
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_tricolorLED
  1743 ;; This function uses a non-reentrant model
  1744 ;;
  1745                           
  1746                           	psect	text5
  1747   003B8A                     __ptext5:
  1748                           	callstack 0
  1749   003B8A                     _bLED:
  1750                           	callstack 23
  1751   003B8A                     
  1752                           ;color.c: 145:     TRISAbits.TRISA3 = 0;
  1753   003B8A  9681               	bcf	129,3,c	;volatile
  1754                           
  1755                           ;color.c: 146:     LATAbits.LATA3 = 1;
  1756   003B8C  8679               	bsf	121,3,c	;volatile
  1757   003B8E  0012               	return		;funcret
  1758   003B90                     __end_of_bLED:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _rangeCalibrate *****************
  1762 ;; Defined at:
  1763 ;;		line 160 in file "color.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  RGBC            2   60[COMRAM] PTR struct RGBC_val
  1766 ;;		 -> main@RGBC(32), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  temp            4    2[BANK0 ] float 
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  4   60[COMRAM] float 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:         4       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:       10 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 10
  1785 ;; This function calls:
  1786 ;;		_color_normalise
  1787 ;;		_color_read_RGBC
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text6
  1794   003666                     __ptext6:
  1795                           	callstack 0
  1796   003666                     _rangeCalibrate:
  1797                           	callstack 20
  1798   003666                     
  1799                           ;color.c: 164:     LATHbits.LATH3 = 1;
  1800   003666  8680               	bsf	128,3,c	;volatile
  1801   003668                     
  1802                           ;color.c: 165:     _delay((unsigned long)((500)*(64000000/4000.0)));
  1803   003668  0E29               	movlw	41
  1804   00366A  0100               	movlb	0	; () banked
  1805   00366C  6F61               	movwf	(??_rangeCalibrate+1)& (0+255),b
  1806   00366E  0E96               	movlw	150
  1807   003670  6F60               	movwf	??_rangeCalibrate& (0+255),b
  1808   003672  0E7F               	movlw	127
  1809   003674                     u3787:
  1810   003674  2EE8               	decfsz	wreg,f,c
  1811   003676  D7FE               	bra	u3787
  1812   003678  2F60               	decfsz	??_rangeCalibrate& (0+255),f,b
  1813   00367A  D7FC               	bra	u3787
  1814   00367C  2F61               	decfsz	(??_rangeCalibrate+1)& (0+255),f,b
  1815   00367E  D7FA               	bra	u3787
  1816   003680                     
  1817                           ;color.c: 166:     color_read_RGBC(RGBC);
  1818   003680  C03D  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1819   003684  C03E  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1820   003688  EC7A  F019         	call	_color_read_RGBC	;wreg free
  1821   00368C                     
  1822                           ;color.c: 167:     color_normalise(RGBC);
  1823   00368C  C03D  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1824   003690  C03E  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1825   003694  EC24  F016         	call	_color_normalise	;wreg free
  1826   003698                     
  1827                           ;color.c: 168:     float temp = RGBC->norm_C;
  1828   003698  EE20 F01C          	lfsr	2,28
  1829   00369C  503D               	movf	rangeCalibrate@RGBC^0,w,c
  1830   00369E  26D9               	addwf	fsr2l,f,c
  1831   0036A0  503E               	movf	(rangeCalibrate@RGBC+1)^0,w,c
  1832   0036A2  22DA               	addwfc	fsr2h,f,c
  1833   0036A4  CFDE F062          	movff	postinc2,rangeCalibrate@temp
  1834   0036A8  CFDE F063          	movff	postinc2,rangeCalibrate@temp+1
  1835   0036AC  CFDE F064          	movff	postinc2,rangeCalibrate@temp+2
  1836   0036B0  CFDE F065          	movff	postinc2,rangeCalibrate@temp+3
  1837   0036B4                     
  1838                           ;color.c: 169:     LATHbits.LATH3 = 0;
  1839   0036B4  9680               	bcf	128,3,c	;volatile
  1840   0036B6                     
  1841                           ;color.c: 170:     return temp;
  1842   0036B6  C062  F03D         	movff	rangeCalibrate@temp,?_rangeCalibrate
  1843   0036BA  C063  F03E         	movff	rangeCalibrate@temp+1,?_rangeCalibrate+1
  1844   0036BE  C064  F03F         	movff	rangeCalibrate@temp+2,?_rangeCalibrate+2
  1845   0036C2  C065  F040         	movff	rangeCalibrate@temp+3,?_rangeCalibrate+3
  1846   0036C6  0012               	return		;funcret
  1847   0036C8                     __end_of_rangeCalibrate:
  1848                           	callstack 0
  1849                           
  1850 ;; *************** function _color_read_RGBC *****************
  1851 ;; Defined at:
  1852 ;;		line 93 in file "color.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1855 ;;		 -> main@RGBC(32), 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1867 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1870 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 9
  1874 ;; This function calls:
  1875 ;;		___xxtofl
  1876 ;;		_color_read_Blue
  1877 ;;		_color_read_Clear
  1878 ;;		_color_read_Green
  1879 ;;		_color_read_Red
  1880 ;; This function is called by:
  1881 ;;		_rangeCalibrate
  1882 ;;		_main
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text7
  1887   0032F4                     __ptext7:
  1888                           	callstack 0
  1889   0032F4                     _color_read_RGBC:
  1890                           	callstack 20
  1891   0032F4                     
  1892                           ;color.c: 94:     temp->R = color_read_Red();
  1893   0032F4  EC8F  F01B         	call	_color_read_Red	;wreg free
  1894   0032F8  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  1895   0032FC  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  1896   003300  6A16               	clrf	(___xxtofl@val+2)^0,c
  1897   003302  6A17               	clrf	(___xxtofl@val+3)^0,c
  1898   003304  0E00               	movlw	0
  1899   003306  EC4A  F015         	call	___xxtofl
  1900   00330A  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  1901   00330E  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  1902   003312  C014  FFDE         	movff	?___xxtofl,postinc2
  1903   003316  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1904   00331A  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1905   00331E  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1906                           
  1907                           ;color.c: 95:     temp->B = color_read_Blue();
  1908   003322  EC07  F01C         	call	_color_read_Blue	;wreg free
  1909   003326  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  1910   00332A  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  1911   00332E  6A16               	clrf	(___xxtofl@val+2)^0,c
  1912   003330  6A17               	clrf	(___xxtofl@val+3)^0,c
  1913   003332  0E00               	movlw	0
  1914   003334  EC4A  F015         	call	___xxtofl
  1915   003338  EE20 F008          	lfsr	2,8
  1916   00333C  5022               	movf	color_read_RGBC@temp^0,w,c
  1917   00333E  26D9               	addwf	fsr2l,f,c
  1918   003340  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  1919   003342  22DA               	addwfc	fsr2h,f,c
  1920   003344  C014  FFDE         	movff	?___xxtofl,postinc2
  1921   003348  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1922   00334C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1923   003350  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1924                           
  1925                           ;color.c: 96:     temp->G = color_read_Green();
  1926   003354  ECB7  F01B         	call	_color_read_Green	;wreg free
  1927   003358  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  1928   00335C  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  1929   003360  6A16               	clrf	(___xxtofl@val+2)^0,c
  1930   003362  6A17               	clrf	(___xxtofl@val+3)^0,c
  1931   003364  0E00               	movlw	0
  1932   003366  EC4A  F015         	call	___xxtofl
  1933   00336A  EE20 F004          	lfsr	2,4
  1934   00336E  5022               	movf	color_read_RGBC@temp^0,w,c
  1935   003370  26D9               	addwf	fsr2l,f,c
  1936   003372  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  1937   003374  22DA               	addwfc	fsr2h,f,c
  1938   003376  C014  FFDE         	movff	?___xxtofl,postinc2
  1939   00337A  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1940   00337E  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1941   003382  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1942                           
  1943                           ;color.c: 97:     temp->C = color_read_Clear();
  1944   003386  ECDF  F01B         	call	_color_read_Clear	;wreg free
  1945   00338A  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  1946   00338E  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  1947   003392  6A16               	clrf	(___xxtofl@val+2)^0,c
  1948   003394  6A17               	clrf	(___xxtofl@val+3)^0,c
  1949   003396  0E00               	movlw	0
  1950   003398  EC4A  F015         	call	___xxtofl
  1951   00339C  EE20 F00C          	lfsr	2,12
  1952   0033A0  5022               	movf	color_read_RGBC@temp^0,w,c
  1953   0033A2  26D9               	addwf	fsr2l,f,c
  1954   0033A4  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  1955   0033A6  22DA               	addwfc	fsr2h,f,c
  1956   0033A8  C014  FFDE         	movff	?___xxtofl,postinc2
  1957   0033AC  C015  FFDE         	movff	?___xxtofl+1,postinc2
  1958   0033B0  C016  FFDE         	movff	?___xxtofl+2,postinc2
  1959   0033B4  C017  FFDE         	movff	?___xxtofl+3,postinc2
  1960   0033B8  0012               	return		;funcret
  1961   0033BA                     __end_of_color_read_RGBC:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _color_read_Red *****************
  1965 ;; Defined at:
  1966 ;;		line 32 in file "color.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  tmp             2   17[COMRAM] unsigned int 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  2   12[COMRAM] unsigned int 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;Total ram usage:        7 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 8
  1987 ;; This function calls:
  1988 ;;		_I2C_2_Master_Read
  1989 ;;		_I2C_2_Master_RepStart
  1990 ;;		_I2C_2_Master_Start
  1991 ;;		_I2C_2_Master_Stop
  1992 ;;		_I2C_2_Master_Write
  1993 ;; This function is called by:
  1994 ;;		_color_read_RGBC
  1995 ;; This function uses a non-reentrant model
  1996 ;;
  1997                           
  1998                           	psect	text8
  1999   00371E                     __ptext8:
  2000                           	callstack 0
  2001   00371E                     _color_read_Red:
  2002                           	callstack 20
  2003   00371E                     
  2004                           ;color.c: 33:     unsigned int tmp;;color.c: 34:     I2C_2_Master_Start();
  2005   00371E  ECB0  F01D         	call	_I2C_2_Master_Start	;wreg free
  2006                           
  2007                           ;color.c: 35:     I2C_2_Master_Write(0x52 | 0x00);
  2008   003722  0E52               	movlw	82
  2009   003724  EC8F  F01D         	call	_I2C_2_Master_Write
  2010                           
  2011                           ;color.c: 36:     I2C_2_Master_Write(0xA0 | 0x16);
  2012   003728  0EB6               	movlw	182
  2013   00372A  EC8F  F01D         	call	_I2C_2_Master_Write
  2014                           
  2015                           ;color.c: 37:     I2C_2_Master_RepStart();
  2016   00372E  ECA1  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  2017                           
  2018                           ;color.c: 38:     I2C_2_Master_Write(0x52 | 0x01);
  2019   003732  0E53               	movlw	83
  2020   003734  EC8F  F01D         	call	_I2C_2_Master_Write
  2021                           
  2022                           ;color.c: 39:     tmp = I2C_2_Master_Read(1);
  2023   003738  0E01               	movlw	1
  2024   00373A  EC56  F01C         	call	_I2C_2_Master_Read
  2025   00373E  6E0F               	movwf	??_color_read_Red^0,c
  2026   003740  500F               	movf	??_color_read_Red^0,w,c
  2027   003742  6E12               	movwf	color_read_Red@tmp^0,c
  2028   003744  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2029                           
  2030                           ;color.c: 40:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2031   003746  0E00               	movlw	0
  2032   003748  EC56  F01C         	call	_I2C_2_Master_Read
  2033   00374C  6E0F               	movwf	??_color_read_Red^0,c
  2034   00374E  500F               	movf	??_color_read_Red^0,w,c
  2035   003750  6E11               	movwf	(??_color_read_Red+2)^0,c
  2036   003752  6A10               	clrf	(??_color_read_Red+1)^0,c
  2037   003754  5012               	movf	color_read_Red@tmp^0,w,c
  2038   003756  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2039   003758  6E12               	movwf	color_read_Red@tmp^0,c
  2040   00375A  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2041   00375C  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2042   00375E  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2043                           
  2044                           ;color.c: 41:     I2C_2_Master_Stop();
  2045   003760  ECAB  F01D         	call	_I2C_2_Master_Stop	;wreg free
  2046   003764                     
  2047                           ;color.c: 42:     return tmp;
  2048   003764  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2049   003768  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2050   00376C  0012               	return		;funcret
  2051   00376E                     __end_of_color_read_Red:
  2052                           	callstack 0
  2053                           
  2054 ;; *************** function _color_read_Green *****************
  2055 ;; Defined at:
  2056 ;;		line 45 in file "color.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  tmp             2   17[COMRAM] unsigned int 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  2   12[COMRAM] unsigned int 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2070 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2071 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2072 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2073 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2074 ;;Total ram usage:        7 bytes
  2075 ;; Hardware stack levels used: 1
  2076 ;; Hardware stack levels required when called: 8
  2077 ;; This function calls:
  2078 ;;		_I2C_2_Master_Read
  2079 ;;		_I2C_2_Master_RepStart
  2080 ;;		_I2C_2_Master_Start
  2081 ;;		_I2C_2_Master_Stop
  2082 ;;		_I2C_2_Master_Write
  2083 ;; This function is called by:
  2084 ;;		_color_read_RGBC
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           	psect	text9
  2089   00376E                     __ptext9:
  2090                           	callstack 0
  2091   00376E                     _color_read_Green:
  2092                           	callstack 20
  2093   00376E                     
  2094                           ;color.c: 46:     unsigned int tmp;;color.c: 47:     I2C_2_Master_Start();
  2095   00376E  ECB0  F01D         	call	_I2C_2_Master_Start	;wreg free
  2096                           
  2097                           ;color.c: 48:     I2C_2_Master_Write(0x52 | 0x00);
  2098   003772  0E52               	movlw	82
  2099   003774  EC8F  F01D         	call	_I2C_2_Master_Write
  2100                           
  2101                           ;color.c: 49:     I2C_2_Master_Write(0xA0 | 0x18);
  2102   003778  0EB8               	movlw	184
  2103   00377A  EC8F  F01D         	call	_I2C_2_Master_Write
  2104                           
  2105                           ;color.c: 50:     I2C_2_Master_RepStart();
  2106   00377E  ECA1  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  2107                           
  2108                           ;color.c: 51:     I2C_2_Master_Write(0x52 | 0x01);
  2109   003782  0E53               	movlw	83
  2110   003784  EC8F  F01D         	call	_I2C_2_Master_Write
  2111                           
  2112                           ;color.c: 52:     tmp = I2C_2_Master_Read(1);
  2113   003788  0E01               	movlw	1
  2114   00378A  EC56  F01C         	call	_I2C_2_Master_Read
  2115   00378E  6E0F               	movwf	??_color_read_Green^0,c
  2116   003790  500F               	movf	??_color_read_Green^0,w,c
  2117   003792  6E12               	movwf	color_read_Green@tmp^0,c
  2118   003794  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2119                           
  2120                           ;color.c: 53:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2121   003796  0E00               	movlw	0
  2122   003798  EC56  F01C         	call	_I2C_2_Master_Read
  2123   00379C  6E0F               	movwf	??_color_read_Green^0,c
  2124   00379E  500F               	movf	??_color_read_Green^0,w,c
  2125   0037A0  6E11               	movwf	(??_color_read_Green+2)^0,c
  2126   0037A2  6A10               	clrf	(??_color_read_Green+1)^0,c
  2127   0037A4  5012               	movf	color_read_Green@tmp^0,w,c
  2128   0037A6  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2129   0037A8  6E12               	movwf	color_read_Green@tmp^0,c
  2130   0037AA  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2131   0037AC  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2132   0037AE  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2133                           
  2134                           ;color.c: 54:     I2C_2_Master_Stop();
  2135   0037B0  ECAB  F01D         	call	_I2C_2_Master_Stop	;wreg free
  2136   0037B4                     
  2137                           ;color.c: 55:     return tmp;
  2138   0037B4  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2139   0037B8  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2140   0037BC  0012               	return		;funcret
  2141   0037BE                     __end_of_color_read_Green:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _color_read_Clear *****************
  2145 ;; Defined at:
  2146 ;;		line 71 in file "color.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  tmp             2   17[COMRAM] unsigned int 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2   12[COMRAM] unsigned int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2160 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2162 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2163 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2164 ;;Total ram usage:        7 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 8
  2167 ;; This function calls:
  2168 ;;		_I2C_2_Master_Read
  2169 ;;		_I2C_2_Master_RepStart
  2170 ;;		_I2C_2_Master_Start
  2171 ;;		_I2C_2_Master_Stop
  2172 ;;		_I2C_2_Master_Write
  2173 ;; This function is called by:
  2174 ;;		_color_read_RGBC
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text10
  2179   0037BE                     __ptext10:
  2180                           	callstack 0
  2181   0037BE                     _color_read_Clear:
  2182                           	callstack 20
  2183   0037BE                     
  2184                           ;color.c: 72:     unsigned int tmp;;color.c: 73:     I2C_2_Master_Start();
  2185   0037BE  ECB0  F01D         	call	_I2C_2_Master_Start	;wreg free
  2186                           
  2187                           ;color.c: 74:     I2C_2_Master_Write(0x52 | 0x00);
  2188   0037C2  0E52               	movlw	82
  2189   0037C4  EC8F  F01D         	call	_I2C_2_Master_Write
  2190                           
  2191                           ;color.c: 75:     I2C_2_Master_Write(0xA0 | 0x14);
  2192   0037C8  0EB4               	movlw	180
  2193   0037CA  EC8F  F01D         	call	_I2C_2_Master_Write
  2194                           
  2195                           ;color.c: 76:     I2C_2_Master_RepStart();
  2196   0037CE  ECA1  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  2197                           
  2198                           ;color.c: 77:     I2C_2_Master_Write(0x52 | 0x01);
  2199   0037D2  0E53               	movlw	83
  2200   0037D4  EC8F  F01D         	call	_I2C_2_Master_Write
  2201                           
  2202                           ;color.c: 78:     tmp = I2C_2_Master_Read(1);
  2203   0037D8  0E01               	movlw	1
  2204   0037DA  EC56  F01C         	call	_I2C_2_Master_Read
  2205   0037DE  6E0F               	movwf	??_color_read_Clear^0,c
  2206   0037E0  500F               	movf	??_color_read_Clear^0,w,c
  2207   0037E2  6E12               	movwf	color_read_Clear@tmp^0,c
  2208   0037E4  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2209                           
  2210                           ;color.c: 79:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2211   0037E6  0E00               	movlw	0
  2212   0037E8  EC56  F01C         	call	_I2C_2_Master_Read
  2213   0037EC  6E0F               	movwf	??_color_read_Clear^0,c
  2214   0037EE  500F               	movf	??_color_read_Clear^0,w,c
  2215   0037F0  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2216   0037F2  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2217   0037F4  5012               	movf	color_read_Clear@tmp^0,w,c
  2218   0037F6  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2219   0037F8  6E12               	movwf	color_read_Clear@tmp^0,c
  2220   0037FA  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2221   0037FC  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2222   0037FE  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2223                           
  2224                           ;color.c: 80:     I2C_2_Master_Stop();
  2225   003800  ECAB  F01D         	call	_I2C_2_Master_Stop	;wreg free
  2226   003804                     
  2227                           ;color.c: 81:     return tmp;
  2228   003804  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2229   003808  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2230   00380C  0012               	return		;funcret
  2231   00380E                     __end_of_color_read_Clear:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function _color_read_Blue *****************
  2235 ;; Defined at:
  2236 ;;		line 58 in file "color.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  tmp             2   17[COMRAM] unsigned int 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  2   12[COMRAM] unsigned int 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        7 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 8
  2257 ;; This function calls:
  2258 ;;		_I2C_2_Master_Read
  2259 ;;		_I2C_2_Master_RepStart
  2260 ;;		_I2C_2_Master_Start
  2261 ;;		_I2C_2_Master_Stop
  2262 ;;		_I2C_2_Master_Write
  2263 ;; This function is called by:
  2264 ;;		_color_read_RGBC
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           	psect	text11
  2269   00380E                     __ptext11:
  2270                           	callstack 0
  2271   00380E                     _color_read_Blue:
  2272                           	callstack 20
  2273   00380E                     
  2274                           ;color.c: 59:     unsigned int tmp;;color.c: 60:     I2C_2_Master_Start();
  2275   00380E  ECB0  F01D         	call	_I2C_2_Master_Start	;wreg free
  2276                           
  2277                           ;color.c: 61:     I2C_2_Master_Write(0x52 | 0x00);
  2278   003812  0E52               	movlw	82
  2279   003814  EC8F  F01D         	call	_I2C_2_Master_Write
  2280                           
  2281                           ;color.c: 62:     I2C_2_Master_Write(0xA0 | 0x1A);
  2282   003818  0EBA               	movlw	186
  2283   00381A  EC8F  F01D         	call	_I2C_2_Master_Write
  2284                           
  2285                           ;color.c: 63:     I2C_2_Master_RepStart();
  2286   00381E  ECA1  F01D         	call	_I2C_2_Master_RepStart	;wreg free
  2287                           
  2288                           ;color.c: 64:     I2C_2_Master_Write(0x52 | 0x01);
  2289   003822  0E53               	movlw	83
  2290   003824  EC8F  F01D         	call	_I2C_2_Master_Write
  2291                           
  2292                           ;color.c: 65:     tmp = I2C_2_Master_Read(1);
  2293   003828  0E01               	movlw	1
  2294   00382A  EC56  F01C         	call	_I2C_2_Master_Read
  2295   00382E  6E0F               	movwf	??_color_read_Blue^0,c
  2296   003830  500F               	movf	??_color_read_Blue^0,w,c
  2297   003832  6E12               	movwf	color_read_Blue@tmp^0,c
  2298   003834  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2299                           
  2300                           ;color.c: 66:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2301   003836  0E00               	movlw	0
  2302   003838  EC56  F01C         	call	_I2C_2_Master_Read
  2303   00383C  6E0F               	movwf	??_color_read_Blue^0,c
  2304   00383E  500F               	movf	??_color_read_Blue^0,w,c
  2305   003840  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2306   003842  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2307   003844  5012               	movf	color_read_Blue@tmp^0,w,c
  2308   003846  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2309   003848  6E12               	movwf	color_read_Blue@tmp^0,c
  2310   00384A  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2311   00384C  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2312   00384E  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2313                           
  2314                           ;color.c: 67:     I2C_2_Master_Stop();
  2315   003850  ECAB  F01D         	call	_I2C_2_Master_Stop	;wreg free
  2316   003854                     
  2317                           ;color.c: 68:     return tmp;
  2318   003854  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2319   003858  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2320   00385C  0012               	return		;funcret
  2321   00385E                     __end_of_color_read_Blue:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _I2C_2_Master_RepStart *****************
  2325 ;; Defined at:
  2326 ;;		line 33 in file "i2c.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used: 1
  2346 ;; Hardware stack levels required when called: 7
  2347 ;; This function calls:
  2348 ;;		_I2C_2_Master_Idle
  2349 ;; This function is called by:
  2350 ;;		_color_read_Red
  2351 ;;		_color_read_Green
  2352 ;;		_color_read_Blue
  2353 ;;		_color_read_Clear
  2354 ;; This function uses a non-reentrant model
  2355 ;;
  2356                           
  2357                           	psect	text12
  2358   003B42                     __ptext12:
  2359                           	callstack 0
  2360   003B42                     _I2C_2_Master_RepStart:
  2361                           	callstack 20
  2362   003B42                     
  2363                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2364   003B42  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2365   003B46                     
  2366                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2367   003B46  010E               	movlb	14	; () banked
  2368   003B48  83DA               	bsf	218,1,b	;volatile
  2369   003B4A                     
  2370                           ; BSR set to: 14
  2371   003B4A  0012               	return		;funcret
  2372   003B4C                     __end_of_I2C_2_Master_RepStart:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _I2C_2_Master_Read *****************
  2376 ;; Defined at:
  2377 ;;		line 51 in file "i2c.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  ack             1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  ack             1   10[COMRAM] unsigned char 
  2382 ;;  tmp             1   11[COMRAM] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      unsigned char 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2394 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2395 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2396 ;;Total ram usage:        3 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 7
  2399 ;; This function calls:
  2400 ;;		_I2C_2_Master_Idle
  2401 ;; This function is called by:
  2402 ;;		_color_read_Red
  2403 ;;		_color_read_Green
  2404 ;;		_color_read_Blue
  2405 ;;		_color_read_Clear
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text13
  2410   0038AC                     __ptext13:
  2411                           	callstack 0
  2412   0038AC                     _I2C_2_Master_Read:
  2413                           	callstack 20
  2414                           
  2415                           ; BSR set to: 14
  2416                           ;incstack = 0
  2417                           ;I2C_2_Master_Read@ack stored from wreg
  2418   0038AC  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2419   0038AE                     
  2420                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2421   0038AE  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2422   0038B2                     
  2423                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2424   0038B2  010E               	movlb	14	; () banked
  2425   0038B4  87DA               	bsf	218,3,b	;volatile
  2426                           
  2427                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2428   0038B6  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2429   0038BA                     
  2430                           ;i2c.c: 57:   tmp = SSP2BUF;
  2431   0038BA  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2432                           
  2433                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2434   0038BE  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2435   0038C2                     
  2436                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2437   0038C2  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2438   0038C4  B4D8               	btfsc	status,2,c
  2439   0038C6  EF67  F01C         	goto	u3271
  2440   0038CA  EF6B  F01C         	goto	u3270
  2441   0038CE                     u3271:
  2442   0038CE  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2443   0038D0  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2444   0038D2  EF6C  F01C         	goto	u3288
  2445   0038D6                     u3270:
  2446   0038D6  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2447   0038D8                     u3288:
  2448   0038D8  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2449   0038DA  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2450   0038DC  010E               	movlb	14	; () banked
  2451   0038DE  51DA               	movf	218,w,b	;volatile
  2452   0038E0  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2453   0038E2  0BDF               	andlw	-33
  2454   0038E4  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2455   0038E6  6FDA               	movwf	218,b	;volatile
  2456   0038E8                     
  2457                           ; BSR set to: 14
  2458                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2459   0038E8  89DA               	bsf	218,4,b	;volatile
  2460   0038EA                     
  2461                           ; BSR set to: 14
  2462                           ;i2c.c: 61:   return tmp;
  2463   0038EA  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2464   0038EC                     
  2465                           ; BSR set to: 14
  2466   0038EC  0012               	return		;funcret
  2467   0038EE                     __end_of_I2C_2_Master_Read:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _color_normalise *****************
  2471 ;; Defined at:
  2472 ;;		line 102 in file "color.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2475 ;;		 -> main@RGBC(32), 
  2476 ;; Auto vars:     Size  Location     Type
  2477 ;;		None
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  1    wreg      void 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2487 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2490 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2491 ;;Total ram usage:        2 bytes
  2492 ;; Hardware stack levels used: 1
  2493 ;; Hardware stack levels required when called: 7
  2494 ;; This function calls:
  2495 ;;		___fldiv
  2496 ;;		___xxtofl
  2497 ;; This function is called by:
  2498 ;;		_rangeCalibrate
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text14
  2504   002C48                     __ptext14:
  2505                           	callstack 0
  2506   002C48                     _color_normalise:
  2507                           	callstack 22
  2508   002C48                     
  2509                           ;color.c: 103:     amb_clear = 2385;
  2510   002C48  0E09               	movlw	9
  2511   002C4A  6E4A               	movwf	(_amb_clear+1)^0,c
  2512   002C4C  0E51               	movlw	81
  2513   002C4E  6E49               	movwf	_amb_clear^0,c
  2514   002C50                     
  2515                           ;color.c: 104:     RGBC->norm_R = RGBC->C / RGBC->R;
  2516   002C50  EE20 F00C          	lfsr	2,12
  2517   002C54  503B               	movf	color_normalise@RGBC^0,w,c
  2518   002C56  26D9               	addwf	fsr2l,f,c
  2519   002C58  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2520   002C5A  22DA               	addwfc	fsr2h,f,c
  2521   002C5C  CFDE F022          	movff	postinc2,___fldiv@b
  2522   002C60  CFDE F023          	movff	postinc2,___fldiv@b+1
  2523   002C64  CFDE F024          	movff	postinc2,___fldiv@b+2
  2524   002C68  CFDE F025          	movff	postinc2,___fldiv@b+3
  2525   002C6C  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2526   002C70  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2527   002C74  CFDE F026          	movff	postinc2,___fldiv@a
  2528   002C78  CFDE F027          	movff	postinc2,___fldiv@a+1
  2529   002C7C  CFDE F028          	movff	postinc2,___fldiv@a+2
  2530   002C80  CFDE F029          	movff	postinc2,___fldiv@a+3
  2531   002C84  EC7D  F013         	call	___fldiv	;wreg free
  2532   002C88  EE20 F010          	lfsr	2,16
  2533   002C8C  503B               	movf	color_normalise@RGBC^0,w,c
  2534   002C8E  26D9               	addwf	fsr2l,f,c
  2535   002C90  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2536   002C92  22DA               	addwfc	fsr2h,f,c
  2537   002C94  C022  FFDE         	movff	?___fldiv,postinc2
  2538   002C98  C023  FFDE         	movff	?___fldiv+1,postinc2
  2539   002C9C  C024  FFDE         	movff	?___fldiv+2,postinc2
  2540   002CA0  C025  FFDE         	movff	?___fldiv+3,postinc2
  2541   002CA4                     
  2542                           ;color.c: 105:     RGBC->norm_G = RGBC->C / RGBC->G;
  2543   002CA4  EE20 F00C          	lfsr	2,12
  2544   002CA8  503B               	movf	color_normalise@RGBC^0,w,c
  2545   002CAA  26D9               	addwf	fsr2l,f,c
  2546   002CAC  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2547   002CAE  22DA               	addwfc	fsr2h,f,c
  2548   002CB0  CFDE F022          	movff	postinc2,___fldiv@b
  2549   002CB4  CFDE F023          	movff	postinc2,___fldiv@b+1
  2550   002CB8  CFDE F024          	movff	postinc2,___fldiv@b+2
  2551   002CBC  CFDE F025          	movff	postinc2,___fldiv@b+3
  2552   002CC0  EE20 F004          	lfsr	2,4
  2553   002CC4  503B               	movf	color_normalise@RGBC^0,w,c
  2554   002CC6  26D9               	addwf	fsr2l,f,c
  2555   002CC8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2556   002CCA  22DA               	addwfc	fsr2h,f,c
  2557   002CCC  CFDE F026          	movff	postinc2,___fldiv@a
  2558   002CD0  CFDE F027          	movff	postinc2,___fldiv@a+1
  2559   002CD4  CFDE F028          	movff	postinc2,___fldiv@a+2
  2560   002CD8  CFDE F029          	movff	postinc2,___fldiv@a+3
  2561   002CDC  EC7D  F013         	call	___fldiv	;wreg free
  2562   002CE0  EE20 F014          	lfsr	2,20
  2563   002CE4  503B               	movf	color_normalise@RGBC^0,w,c
  2564   002CE6  26D9               	addwf	fsr2l,f,c
  2565   002CE8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2566   002CEA  22DA               	addwfc	fsr2h,f,c
  2567   002CEC  C022  FFDE         	movff	?___fldiv,postinc2
  2568   002CF0  C023  FFDE         	movff	?___fldiv+1,postinc2
  2569   002CF4  C024  FFDE         	movff	?___fldiv+2,postinc2
  2570   002CF8  C025  FFDE         	movff	?___fldiv+3,postinc2
  2571   002CFC                     
  2572                           ;color.c: 106:     RGBC->norm_B = RGBC->C / RGBC->B;
  2573   002CFC  EE20 F00C          	lfsr	2,12
  2574   002D00  503B               	movf	color_normalise@RGBC^0,w,c
  2575   002D02  26D9               	addwf	fsr2l,f,c
  2576   002D04  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2577   002D06  22DA               	addwfc	fsr2h,f,c
  2578   002D08  CFDE F022          	movff	postinc2,___fldiv@b
  2579   002D0C  CFDE F023          	movff	postinc2,___fldiv@b+1
  2580   002D10  CFDE F024          	movff	postinc2,___fldiv@b+2
  2581   002D14  CFDE F025          	movff	postinc2,___fldiv@b+3
  2582   002D18  EE20 F008          	lfsr	2,8
  2583   002D1C  503B               	movf	color_normalise@RGBC^0,w,c
  2584   002D1E  26D9               	addwf	fsr2l,f,c
  2585   002D20  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2586   002D22  22DA               	addwfc	fsr2h,f,c
  2587   002D24  CFDE F026          	movff	postinc2,___fldiv@a
  2588   002D28  CFDE F027          	movff	postinc2,___fldiv@a+1
  2589   002D2C  CFDE F028          	movff	postinc2,___fldiv@a+2
  2590   002D30  CFDE F029          	movff	postinc2,___fldiv@a+3
  2591   002D34  EC7D  F013         	call	___fldiv	;wreg free
  2592   002D38  EE20 F018          	lfsr	2,24
  2593   002D3C  503B               	movf	color_normalise@RGBC^0,w,c
  2594   002D3E  26D9               	addwf	fsr2l,f,c
  2595   002D40  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2596   002D42  22DA               	addwfc	fsr2h,f,c
  2597   002D44  C022  FFDE         	movff	?___fldiv,postinc2
  2598   002D48  C023  FFDE         	movff	?___fldiv+1,postinc2
  2599   002D4C  C024  FFDE         	movff	?___fldiv+2,postinc2
  2600   002D50  C025  FFDE         	movff	?___fldiv+3,postinc2
  2601   002D54                     
  2602                           ;color.c: 107:     RGBC->norm_C = RGBC->C / amb_clear;
  2603   002D54  EE20 F00C          	lfsr	2,12
  2604   002D58  503B               	movf	color_normalise@RGBC^0,w,c
  2605   002D5A  26D9               	addwf	fsr2l,f,c
  2606   002D5C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2607   002D5E  22DA               	addwfc	fsr2h,f,c
  2608   002D60  CFDE F022          	movff	postinc2,___fldiv@b
  2609   002D64  CFDE F023          	movff	postinc2,___fldiv@b+1
  2610   002D68  CFDE F024          	movff	postinc2,___fldiv@b+2
  2611   002D6C  CFDE F025          	movff	postinc2,___fldiv@b+3
  2612   002D70  0E51               	movlw	81
  2613   002D72  6E14               	movwf	___xxtofl@val^0,c
  2614   002D74  0E09               	movlw	9
  2615   002D76  6E15               	movwf	(___xxtofl@val+1)^0,c
  2616   002D78  0E00               	movlw	0
  2617   002D7A  6E16               	movwf	(___xxtofl@val+2)^0,c
  2618   002D7C  0E00               	movlw	0
  2619   002D7E  6E17               	movwf	(___xxtofl@val+3)^0,c
  2620   002D80  0E01               	movlw	1
  2621   002D82  EC4A  F015         	call	___xxtofl
  2622   002D86  C014  F026         	movff	?___xxtofl,___fldiv@a
  2623   002D8A  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2624   002D8E  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2625   002D92  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2626   002D96  EC7D  F013         	call	___fldiv	;wreg free
  2627   002D9A  EE20 F01C          	lfsr	2,28
  2628   002D9E  503B               	movf	color_normalise@RGBC^0,w,c
  2629   002DA0  26D9               	addwf	fsr2l,f,c
  2630   002DA2  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2631   002DA4  22DA               	addwfc	fsr2h,f,c
  2632   002DA6  C022  FFDE         	movff	?___fldiv,postinc2
  2633   002DAA  C023  FFDE         	movff	?___fldiv+1,postinc2
  2634   002DAE  C024  FFDE         	movff	?___fldiv+2,postinc2
  2635   002DB2  C025  FFDE         	movff	?___fldiv+3,postinc2
  2636   002DB6  0012               	return		;funcret
  2637   002DB8                     __end_of_color_normalise:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function ___xxtofl *****************
  2641 ;; Defined at:
  2642 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  sign            1    wreg     unsigned char 
  2645 ;;  val             4   19[COMRAM] long 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  sign            1   27[COMRAM] unsigned char 
  2648 ;;  arg             4   29[COMRAM] unsigned long 
  2649 ;;  exp             1   28[COMRAM] unsigned char 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  4   19[COMRAM] unsigned char 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2660 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2662 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2663 ;;Total ram usage:       14 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 6
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_color_read_RGBC
  2670 ;;		_color_normalise
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text15
  2675   002A94                     __ptext15:
  2676                           	callstack 0
  2677   002A94                     ___xxtofl:
  2678                           	callstack 22
  2679                           
  2680                           ;incstack = 0
  2681                           ;___xxtofl@sign stored from wreg
  2682   002A94  6E1C               	movwf	___xxtofl@sign^0,c
  2683   002A96  501C               	movf	___xxtofl@sign^0,w,c
  2684   002A98  B4D8               	btfsc	status,2,c
  2685   002A9A  EF51  F015         	goto	u3521
  2686   002A9E  EF53  F015         	goto	u3520
  2687   002AA2                     u3521:
  2688   002AA2  EF75  F015         	goto	l1360
  2689   002AA6                     u3520:
  2690   002AA6  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2691   002AA8  EF5A  F015         	goto	u3530
  2692   002AAC  EF58  F015         	goto	u3531
  2693   002AB0                     u3531:
  2694   002AB0  EF75  F015         	goto	l1360
  2695   002AB4                     u3530:
  2696   002AB4  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2697   002AB8  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2698   002ABC  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2699   002AC0  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2700   002AC4  1E18               	comf	??___xxtofl^0,f,c
  2701   002AC6  1E19               	comf	(??___xxtofl+1)^0,f,c
  2702   002AC8  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2703   002ACA  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2704   002ACC  2A18               	incf	??___xxtofl^0,f,c
  2705   002ACE  0E00               	movlw	0
  2706   002AD0  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2707   002AD2  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2708   002AD4  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2709   002AD6  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2710   002ADA  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2711   002ADE  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2712   002AE2  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2713   002AE6  EF7D  F015         	goto	l4129
  2714   002AEA                     l1360:
  2715   002AEA  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2716   002AEE  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2717   002AF2  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2718   002AF6  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2719   002AFA                     l4129:
  2720   002AFA  5014               	movf	___xxtofl@val^0,w,c
  2721   002AFC  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2722   002AFE  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2723   002B00  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2724   002B02  A4D8               	btfss	status,2,c
  2725   002B04  EF86  F015         	goto	u3541
  2726   002B08  EF88  F015         	goto	u3540
  2727   002B0C                     u3541:
  2728   002B0C  EF92  F015         	goto	l4135
  2729   002B10                     u3540:
  2730   002B10  0E00               	movlw	0
  2731   002B12  6E14               	movwf	?___xxtofl^0,c
  2732   002B14  0E00               	movlw	0
  2733   002B16  6E15               	movwf	(?___xxtofl+1)^0,c
  2734   002B18  0E00               	movlw	0
  2735   002B1A  6E16               	movwf	(?___xxtofl+2)^0,c
  2736   002B1C  0E00               	movlw	0
  2737   002B1E  6E17               	movwf	(?___xxtofl+3)^0,c
  2738   002B20  EF23  F016         	goto	l1363
  2739   002B24                     l4135:
  2740   002B24  0E96               	movlw	150
  2741   002B26  6E1D               	movwf	___xxtofl@exp^0,c
  2742   002B28  EF9C  F015         	goto	l4139
  2743   002B2C                     l4137:
  2744   002B2C  2A1D               	incf	___xxtofl@exp^0,f,c
  2745   002B2E  90D8               	bcf	status,0,c
  2746   002B30  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2747   002B32  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2748   002B34  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2749   002B36  321E               	rrcf	___xxtofl@arg^0,f,c
  2750   002B38                     l4139:
  2751   002B38  0E00               	movlw	0
  2752   002B3A  141E               	andwf	___xxtofl@arg^0,w,c
  2753   002B3C  6E18               	movwf	??___xxtofl^0,c
  2754   002B3E  0E00               	movlw	0
  2755   002B40  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2756   002B42  6E19               	movwf	(??___xxtofl+1)^0,c
  2757   002B44  0E00               	movlw	0
  2758   002B46  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2759   002B48  6E1A               	movwf	(??___xxtofl+2)^0,c
  2760   002B4A  0EFE               	movlw	254
  2761   002B4C  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2762   002B4E  6E1B               	movwf	(??___xxtofl+3)^0,c
  2763   002B50  5018               	movf	??___xxtofl^0,w,c
  2764   002B52  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2765   002B54  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2766   002B56  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2767   002B58  A4D8               	btfss	status,2,c
  2768   002B5A  EFB1  F015         	goto	u3551
  2769   002B5E  EFB3  F015         	goto	u3550
  2770   002B62                     u3551:
  2771   002B62  EF96  F015         	goto	l4137
  2772   002B66                     u3550:
  2773   002B66  EFC1  F015         	goto	l1367
  2774   002B6A                     l4141:
  2775   002B6A  2A1D               	incf	___xxtofl@exp^0,f,c
  2776   002B6C  0E01               	movlw	1
  2777   002B6E  261E               	addwf	___xxtofl@arg^0,f,c
  2778   002B70  0E00               	movlw	0
  2779   002B72  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2780   002B74  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2781   002B76  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2782   002B78  90D8               	bcf	status,0,c
  2783   002B7A  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2784   002B7C  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2785   002B7E  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2786   002B80  321E               	rrcf	___xxtofl@arg^0,f,c
  2787   002B82                     l1367:
  2788   002B82  0E00               	movlw	0
  2789   002B84  141E               	andwf	___xxtofl@arg^0,w,c
  2790   002B86  6E18               	movwf	??___xxtofl^0,c
  2791   002B88  0E00               	movlw	0
  2792   002B8A  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2793   002B8C  6E19               	movwf	(??___xxtofl+1)^0,c
  2794   002B8E  0E00               	movlw	0
  2795   002B90  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2796   002B92  6E1A               	movwf	(??___xxtofl+2)^0,c
  2797   002B94  0EFF               	movlw	255
  2798   002B96  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2799   002B98  6E1B               	movwf	(??___xxtofl+3)^0,c
  2800   002B9A  5018               	movf	??___xxtofl^0,w,c
  2801   002B9C  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2802   002B9E  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2803   002BA0  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2804   002BA2  A4D8               	btfss	status,2,c
  2805   002BA4  EFD6  F015         	goto	u3561
  2806   002BA8  EFD8  F015         	goto	u3560
  2807   002BAC                     u3561:
  2808   002BAC  EFB5  F015         	goto	l4141
  2809   002BB0                     u3560:
  2810   002BB0  EFE0  F015         	goto	l4149
  2811   002BB4                     l4147:
  2812   002BB4  061D               	decf	___xxtofl@exp^0,f,c
  2813   002BB6  90D8               	bcf	status,0,c
  2814   002BB8  361E               	rlcf	___xxtofl@arg^0,f,c
  2815   002BBA  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2816   002BBC  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2817   002BBE  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2818   002BC0                     l4149:
  2819   002BC0  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2820   002BC2  EFE5  F015         	goto	u3571
  2821   002BC6  EFE7  F015         	goto	u3570
  2822   002BCA                     u3571:
  2823   002BCA  EFEF  F015         	goto	l1374
  2824   002BCE                     u3570:
  2825   002BCE  0E02               	movlw	2
  2826   002BD0  601D               	cpfslt	___xxtofl@exp^0,c
  2827   002BD2  EFED  F015         	goto	u3581
  2828   002BD6  EFEF  F015         	goto	u3580
  2829   002BDA                     u3581:
  2830   002BDA  EFDA  F015         	goto	l4147
  2831   002BDE                     u3580:
  2832   002BDE                     l1374:
  2833   002BDE  B01D               	btfsc	___xxtofl@exp^0,0,c
  2834   002BE0  EFF4  F015         	goto	u3591
  2835   002BE4  EFF6  F015         	goto	u3590
  2836   002BE8                     u3591:
  2837   002BE8  EFF7  F015         	goto	l4155
  2838   002BEC                     u3590:
  2839   002BEC  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2840   002BEE                     l4155:
  2841   002BEE  90D8               	bcf	status,0,c
  2842   002BF0  321D               	rrcf	___xxtofl@exp^0,f,c
  2843   002BF2  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2844   002BF6  6A19               	clrf	(??___xxtofl+1)^0,c
  2845   002BF8  6A1A               	clrf	(??___xxtofl+2)^0,c
  2846   002BFA  6A1B               	clrf	(??___xxtofl+3)^0,c
  2847   002BFC  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2848   002C00  6A1A               	clrf	(??___xxtofl+2)^0,c
  2849   002C02  6A19               	clrf	(??___xxtofl+1)^0,c
  2850   002C04  6A18               	clrf	??___xxtofl^0,c
  2851   002C06  5018               	movf	??___xxtofl^0,w,c
  2852   002C08  121E               	iorwf	___xxtofl@arg^0,f,c
  2853   002C0A  5019               	movf	(??___xxtofl+1)^0,w,c
  2854   002C0C  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2855   002C0E  501A               	movf	(??___xxtofl+2)^0,w,c
  2856   002C10  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2857   002C12  501B               	movf	(??___xxtofl+3)^0,w,c
  2858   002C14  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2859   002C16  501C               	movf	___xxtofl@sign^0,w,c
  2860   002C18  B4D8               	btfsc	status,2,c
  2861   002C1A  EF11  F016         	goto	u3601
  2862   002C1E  EF13  F016         	goto	u3600
  2863   002C22                     u3601:
  2864   002C22  EF1B  F016         	goto	l4165
  2865   002C26                     u3600:
  2866   002C26  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2867   002C28  EF1A  F016         	goto	u3610
  2868   002C2C  EF18  F016         	goto	u3611
  2869   002C30                     u3611:
  2870   002C30  EF1B  F016         	goto	l4165
  2871   002C34                     u3610:
  2872   002C34  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  2873   002C36                     l4165:
  2874   002C36  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  2875   002C3A  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  2876   002C3E  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  2877   002C42  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  2878   002C46                     l1363:
  2879   002C46  0012               	return		;funcret
  2880   002C48                     __end_of___xxtofl:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function ___fldiv *****************
  2884 ;; Defined at:
  2885 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  b               4   33[COMRAM] unsigned char 
  2888 ;;  a               4   37[COMRAM] unsigned char 
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  grs             4   52[COMRAM] unsigned long 
  2891 ;;  rem             4   45[COMRAM] unsigned long 
  2892 ;;  new_exp         2   50[COMRAM] short 
  2893 ;;  aexp            1   57[COMRAM] unsigned char 
  2894 ;;  bexp            1   56[COMRAM] unsigned char 
  2895 ;;  sign            1   49[COMRAM] unsigned char 
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  4   33[COMRAM] unsigned char 
  2898 ;; Registers used:
  2899 ;;		wreg, status,2, status,0
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2905 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2906 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2907 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;Total ram usage:       25 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 6
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_color_normalise
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text16
  2920   0026FA                     __ptext16:
  2921                           	callstack 0
  2922   0026FA                     ___fldiv:
  2923                           	callstack 22
  2924   0026FA  5025               	movf	(___fldiv@b+3)^0,w,c
  2925   0026FC  0B80               	andlw	128
  2926   0026FE  6E32               	movwf	___fldiv@sign^0,c
  2927   002700  5025               	movf	(___fldiv@b+3)^0,w,c
  2928   002702  2425               	addwf	(___fldiv@b+3)^0,w,c
  2929   002704  6E39               	movwf	___fldiv@bexp^0,c
  2930   002706  AE24               	btfss	(___fldiv@b+2)^0,7,c
  2931   002708  EF88  F013         	goto	u3291
  2932   00270C  EF8A  F013         	goto	u3290
  2933   002710                     u3291:
  2934   002710  EF8B  F013         	goto	l3991
  2935   002714                     u3290:
  2936   002714  8039               	bsf	___fldiv@bexp^0,0,c
  2937   002716                     l3991:
  2938   002716  5039               	movf	___fldiv@bexp^0,w,c
  2939   002718  B4D8               	btfsc	status,2,c
  2940   00271A  EF91  F013         	goto	u3301
  2941   00271E  EF93  F013         	goto	u3300
  2942   002722                     u3301:
  2943   002722  EFA8  F013         	goto	l4001
  2944   002726                     u3300:
  2945   002726  2839               	incf	___fldiv@bexp^0,w,c
  2946   002728  A4D8               	btfss	status,2,c
  2947   00272A  EF99  F013         	goto	u3311
  2948   00272E  EF9B  F013         	goto	u3310
  2949   002732                     u3311:
  2950   002732  EFA3  F013         	goto	l3997
  2951   002736                     u3310:
  2952   002736  0E00               	movlw	0
  2953   002738  6E22               	movwf	___fldiv@b^0,c
  2954   00273A  0E00               	movlw	0
  2955   00273C  6E23               	movwf	(___fldiv@b+1)^0,c
  2956   00273E  0E00               	movlw	0
  2957   002740  6E24               	movwf	(___fldiv@b+2)^0,c
  2958   002742  0E00               	movlw	0
  2959   002744  6E25               	movwf	(___fldiv@b+3)^0,c
  2960   002746                     l3997:
  2961   002746  8E24               	bsf	(___fldiv@b+2)^0,7,c
  2962   002748  0E00               	movlw	0
  2963   00274A  6E25               	movwf	(___fldiv@b+3)^0,c
  2964   00274C  EFB0  F013         	goto	l4003
  2965   002750                     l4001:
  2966   002750  0E00               	movlw	0
  2967   002752  6E22               	movwf	___fldiv@b^0,c
  2968   002754  0E00               	movlw	0
  2969   002756  6E23               	movwf	(___fldiv@b+1)^0,c
  2970   002758  0E00               	movlw	0
  2971   00275A  6E24               	movwf	(___fldiv@b+2)^0,c
  2972   00275C  0E00               	movlw	0
  2973   00275E  6E25               	movwf	(___fldiv@b+3)^0,c
  2974   002760                     l4003:
  2975   002760  5029               	movf	(___fldiv@a+3)^0,w,c
  2976   002762  0B80               	andlw	128
  2977   002764  1A32               	xorwf	___fldiv@sign^0,f,c
  2978   002766  5029               	movf	(___fldiv@a+3)^0,w,c
  2979   002768  2429               	addwf	(___fldiv@a+3)^0,w,c
  2980   00276A  6E3A               	movwf	___fldiv@aexp^0,c
  2981   00276C  AE28               	btfss	(___fldiv@a+2)^0,7,c
  2982   00276E  EFBB  F013         	goto	u3321
  2983   002772  EFBD  F013         	goto	u3320
  2984   002776                     u3321:
  2985   002776  EFBE  F013         	goto	l4011
  2986   00277A                     u3320:
  2987   00277A  803A               	bsf	___fldiv@aexp^0,0,c
  2988   00277C                     l4011:
  2989   00277C  503A               	movf	___fldiv@aexp^0,w,c
  2990   00277E  B4D8               	btfsc	status,2,c
  2991   002780  EFC4  F013         	goto	u3331
  2992   002784  EFC6  F013         	goto	u3330
  2993   002788                     u3331:
  2994   002788  EFDB  F013         	goto	l4021
  2995   00278C                     u3330:
  2996   00278C  283A               	incf	___fldiv@aexp^0,w,c
  2997   00278E  A4D8               	btfss	status,2,c
  2998   002790  EFCC  F013         	goto	u3341
  2999   002794  EFCE  F013         	goto	u3340
  3000   002798                     u3341:
  3001   002798  EFD6  F013         	goto	l4017
  3002   00279C                     u3340:
  3003   00279C  0E00               	movlw	0
  3004   00279E  6E26               	movwf	___fldiv@a^0,c
  3005   0027A0  0E00               	movlw	0
  3006   0027A2  6E27               	movwf	(___fldiv@a+1)^0,c
  3007   0027A4  0E00               	movlw	0
  3008   0027A6  6E28               	movwf	(___fldiv@a+2)^0,c
  3009   0027A8  0E00               	movlw	0
  3010   0027AA  6E29               	movwf	(___fldiv@a+3)^0,c
  3011   0027AC                     l4017:
  3012   0027AC  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3013   0027AE  0E00               	movlw	0
  3014   0027B0  6E29               	movwf	(___fldiv@a+3)^0,c
  3015   0027B2  EFE3  F013         	goto	l4023
  3016   0027B6                     l4021:
  3017   0027B6  0E00               	movlw	0
  3018   0027B8  6E26               	movwf	___fldiv@a^0,c
  3019   0027BA  0E00               	movlw	0
  3020   0027BC  6E27               	movwf	(___fldiv@a+1)^0,c
  3021   0027BE  0E00               	movlw	0
  3022   0027C0  6E28               	movwf	(___fldiv@a+2)^0,c
  3023   0027C2  0E00               	movlw	0
  3024   0027C4  6E29               	movwf	(___fldiv@a+3)^0,c
  3025   0027C6                     l4023:
  3026   0027C6  5026               	movf	___fldiv@a^0,w,c
  3027   0027C8  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3028   0027CA  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3029   0027CC  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3030   0027CE  A4D8               	btfss	status,2,c
  3031   0027D0  EFEC  F013         	goto	u3351
  3032   0027D4  EFEE  F013         	goto	u3350
  3033   0027D8                     u3351:
  3034   0027D8  EF06  F014         	goto	l4035
  3035   0027DC                     u3350:
  3036   0027DC  0E00               	movlw	0
  3037   0027DE  6E22               	movwf	___fldiv@b^0,c
  3038   0027E0  0E00               	movlw	0
  3039   0027E2  6E23               	movwf	(___fldiv@b+1)^0,c
  3040   0027E4  0E00               	movlw	0
  3041   0027E6  6E24               	movwf	(___fldiv@b+2)^0,c
  3042   0027E8  0E00               	movlw	0
  3043   0027EA  6E25               	movwf	(___fldiv@b+3)^0,c
  3044   0027EC  0E80               	movlw	128
  3045   0027EE  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3046   0027F0  0E7F               	movlw	127
  3047   0027F2  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3048   0027F4                     l4029:
  3049   0027F4  5032               	movf	___fldiv@sign^0,w,c
  3050   0027F6  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3051   0027F8  C022  F022         	movff	___fldiv@b,?___fldiv
  3052   0027FC  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3053   002800  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3054   002804  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3055   002808  EF49  F015         	goto	l1287
  3056   00280C                     l4035:
  3057   00280C  5039               	movf	___fldiv@bexp^0,w,c
  3058   00280E  A4D8               	btfss	status,2,c
  3059   002810  EF0C  F014         	goto	u3361
  3060   002814  EF0E  F014         	goto	u3360
  3061   002818                     u3361:
  3062   002818  EF18  F014         	goto	l4043
  3063   00281C                     u3360:
  3064   00281C  0E00               	movlw	0
  3065   00281E  6E22               	movwf	?___fldiv^0,c
  3066   002820  0E00               	movlw	0
  3067   002822  6E23               	movwf	(?___fldiv+1)^0,c
  3068   002824  0E00               	movlw	0
  3069   002826  6E24               	movwf	(?___fldiv+2)^0,c
  3070   002828  0E00               	movlw	0
  3071   00282A  6E25               	movwf	(?___fldiv+3)^0,c
  3072   00282C  EF49  F015         	goto	l1287
  3073   002830                     l4043:
  3074   002830  503A               	movf	___fldiv@aexp^0,w,c
  3075   002832  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3076   002836  6A2B               	clrf	(??___fldiv+1)^0,c
  3077   002838  5E2A               	subwf	??___fldiv^0,f,c
  3078   00283A  0E00               	movlw	0
  3079   00283C  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3080   00283E  0E7F               	movlw	127
  3081   002840  242A               	addwf	??___fldiv^0,w,c
  3082   002842  6E33               	movwf	___fldiv@new_exp^0,c
  3083   002844  0E00               	movlw	0
  3084   002846  202B               	addwfc	(??___fldiv+1)^0,w,c
  3085   002848  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3086   00284A  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3087   00284E  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3088   002852  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3089   002856  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3090   00285A  0E00               	movlw	0
  3091   00285C  6E22               	movwf	___fldiv@b^0,c
  3092   00285E  0E00               	movlw	0
  3093   002860  6E23               	movwf	(___fldiv@b+1)^0,c
  3094   002862  0E00               	movlw	0
  3095   002864  6E24               	movwf	(___fldiv@b+2)^0,c
  3096   002866  0E00               	movlw	0
  3097   002868  6E25               	movwf	(___fldiv@b+3)^0,c
  3098   00286A  0E00               	movlw	0
  3099   00286C  6E35               	movwf	___fldiv@grs^0,c
  3100   00286E  0E00               	movlw	0
  3101   002870  6E36               	movwf	(___fldiv@grs+1)^0,c
  3102   002872  0E00               	movlw	0
  3103   002874  6E37               	movwf	(___fldiv@grs+2)^0,c
  3104   002876  0E00               	movlw	0
  3105   002878  6E38               	movwf	(___fldiv@grs+3)^0,c
  3106   00287A  0E00               	movlw	0
  3107   00287C  6E3A               	movwf	___fldiv@aexp^0,c
  3108   00287E  EF79  F014         	goto	l1289
  3109   002882                     l4053:
  3110   002882  503A               	movf	___fldiv@aexp^0,w,c
  3111   002884  B4D8               	btfsc	status,2,c
  3112   002886  EF47  F014         	goto	u3371
  3113   00288A  EF49  F014         	goto	u3370
  3114   00288E                     u3371:
  3115   00288E  EF60  F014         	goto	l4061
  3116   002892                     u3370:
  3117   002892  90D8               	bcf	status,0,c
  3118   002894  362E               	rlcf	___fldiv@rem^0,f,c
  3119   002896  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3120   002898  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3121   00289A  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3122   00289C  90D8               	bcf	status,0,c
  3123   00289E  3622               	rlcf	___fldiv@b^0,f,c
  3124   0028A0  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3125   0028A2  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3126   0028A4  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3127   0028A6  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3128   0028A8  EF58  F014         	goto	u3381
  3129   0028AC  EF5A  F014         	goto	u3380
  3130   0028B0                     u3381:
  3131   0028B0  EF5B  F014         	goto	l1292
  3132   0028B4                     u3380:
  3133   0028B4  8022               	bsf	___fldiv@b^0,0,c
  3134   0028B6                     l1292:
  3135   0028B6  90D8               	bcf	status,0,c
  3136   0028B8  3635               	rlcf	___fldiv@grs^0,f,c
  3137   0028BA  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3138   0028BC  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3139   0028BE  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3140   0028C0                     l4061:
  3141   0028C0  5026               	movf	___fldiv@a^0,w,c
  3142   0028C2  5C2E               	subwf	___fldiv@rem^0,w,c
  3143   0028C4  5027               	movf	(___fldiv@a+1)^0,w,c
  3144   0028C6  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3145   0028C8  5028               	movf	(___fldiv@a+2)^0,w,c
  3146   0028CA  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3147   0028CC  5029               	movf	(___fldiv@a+3)^0,w,c
  3148   0028CE  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3149   0028D0  A0D8               	btfss	status,0,c
  3150   0028D2  EF6D  F014         	goto	u3391
  3151   0028D6  EF6F  F014         	goto	u3390
  3152   0028DA                     u3391:
  3153   0028DA  EF78  F014         	goto	l4067
  3154   0028DE                     u3390:
  3155   0028DE  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3156   0028E0  5026               	movf	___fldiv@a^0,w,c
  3157   0028E2  5E2E               	subwf	___fldiv@rem^0,f,c
  3158   0028E4  5027               	movf	(___fldiv@a+1)^0,w,c
  3159   0028E6  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3160   0028E8  5028               	movf	(___fldiv@a+2)^0,w,c
  3161   0028EA  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3162   0028EC  5029               	movf	(___fldiv@a+3)^0,w,c
  3163   0028EE  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3164   0028F0                     l4067:
  3165   0028F0  2A3A               	incf	___fldiv@aexp^0,f,c
  3166   0028F2                     l1289:
  3167   0028F2  0E19               	movlw	25
  3168   0028F4  643A               	cpfsgt	___fldiv@aexp^0,c
  3169   0028F6  EF7F  F014         	goto	u3401
  3170   0028FA  EF81  F014         	goto	u3400
  3171   0028FE                     u3401:
  3172   0028FE  EF41  F014         	goto	l4053
  3173   002902                     u3400:
  3174   002902  502E               	movf	___fldiv@rem^0,w,c
  3175   002904  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3176   002906  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3177   002908  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3178   00290A  B4D8               	btfsc	status,2,c
  3179   00290C  EF8A  F014         	goto	u3411
  3180   002910  EF8C  F014         	goto	u3410
  3181   002914                     u3411:
  3182   002914  EFA4  F014         	goto	l4079
  3183   002918                     u3410:
  3184   002918  8035               	bsf	___fldiv@grs^0,0,c
  3185   00291A  EFA4  F014         	goto	l4079
  3186   00291E                     l4073:
  3187   00291E  90D8               	bcf	status,0,c
  3188   002920  3622               	rlcf	___fldiv@b^0,f,c
  3189   002922  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3190   002924  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3191   002926  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3192   002928  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3193   00292A  EF99  F014         	goto	u3421
  3194   00292E  EF9B  F014         	goto	u3420
  3195   002932                     u3421:
  3196   002932  EF9C  F014         	goto	l1298
  3197   002936                     u3420:
  3198   002936  8022               	bsf	___fldiv@b^0,0,c
  3199   002938                     l1298:
  3200   002938  90D8               	bcf	status,0,c
  3201   00293A  3635               	rlcf	___fldiv@grs^0,f,c
  3202   00293C  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3203   00293E  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3204   002940  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3205   002942  0633               	decf	___fldiv@new_exp^0,f,c
  3206   002944  A0D8               	btfss	status,0,c
  3207   002946  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3208   002948                     l4079:
  3209   002948  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3210   00294A  EFA9  F014         	goto	u3431
  3211   00294E  EFAB  F014         	goto	u3430
  3212   002952                     u3431:
  3213   002952  EF8F  F014         	goto	l4073
  3214   002956                     u3430:
  3215   002956  0E00               	movlw	0
  3216   002958  6E3A               	movwf	___fldiv@aexp^0,c
  3217   00295A  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3218   00295C  EFB2  F014         	goto	u3441
  3219   002960  EFB4  F014         	goto	u3440
  3220   002964                     u3441:
  3221   002964  EFD8  F014         	goto	l1300
  3222   002968                     u3440:
  3223   002968  0EFF               	movlw	255
  3224   00296A  1435               	andwf	___fldiv@grs^0,w,c
  3225   00296C  6E2A               	movwf	??___fldiv^0,c
  3226   00296E  0EFF               	movlw	255
  3227   002970  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3228   002972  6E2B               	movwf	(??___fldiv+1)^0,c
  3229   002974  0EFF               	movlw	255
  3230   002976  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3231   002978  6E2C               	movwf	(??___fldiv+2)^0,c
  3232   00297A  0E7F               	movlw	127
  3233   00297C  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3234   00297E  6E2D               	movwf	(??___fldiv+3)^0,c
  3235   002980  502A               	movf	??___fldiv^0,w,c
  3236   002982  102B               	iorwf	(??___fldiv+1)^0,w,c
  3237   002984  102C               	iorwf	(??___fldiv+2)^0,w,c
  3238   002986  102D               	iorwf	(??___fldiv+3)^0,w,c
  3239   002988  B4D8               	btfsc	status,2,c
  3240   00298A  EFC9  F014         	goto	u3451
  3241   00298E  EFCB  F014         	goto	u3450
  3242   002992                     u3451:
  3243   002992  EFCF  F014         	goto	l1301
  3244   002996                     u3450:
  3245   002996                     l4087:
  3246   002996  0E01               	movlw	1
  3247   002998  6E3A               	movwf	___fldiv@aexp^0,c
  3248   00299A  EFD8  F014         	goto	l1300
  3249   00299E                     l1301:
  3250   00299E  A022               	btfss	___fldiv@b^0,0,c
  3251   0029A0  EFD4  F014         	goto	u3461
  3252   0029A4  EFD6  F014         	goto	u3460
  3253   0029A8                     u3461:
  3254   0029A8  EFD8  F014         	goto	l1300
  3255   0029AC                     u3460:
  3256   0029AC  EFCB  F014         	goto	l4087
  3257   0029B0                     l1300:
  3258   0029B0  503A               	movf	___fldiv@aexp^0,w,c
  3259   0029B2  B4D8               	btfsc	status,2,c
  3260   0029B4  EFDE  F014         	goto	u3471
  3261   0029B8  EFE0  F014         	goto	u3470
  3262   0029BC                     u3471:
  3263   0029BC  EF04  F015         	goto	l4099
  3264   0029C0                     u3470:
  3265   0029C0  0E01               	movlw	1
  3266   0029C2  2622               	addwf	___fldiv@b^0,f,c
  3267   0029C4  0E00               	movlw	0
  3268   0029C6  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3269   0029C8  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3270   0029CA  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3271   0029CC  A025               	btfss	(___fldiv@b+3)^0,0,c
  3272   0029CE  EFEB  F014         	goto	u3481
  3273   0029D2  EFED  F014         	goto	u3480
  3274   0029D6                     u3481:
  3275   0029D6  EF04  F015         	goto	l4099
  3276   0029DA                     u3480:
  3277   0029DA  C022  F02A         	movff	___fldiv@b,??___fldiv
  3278   0029DE  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3279   0029E2  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3280   0029E6  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3281   0029EA  342D               	rlcf	(??___fldiv+3)^0,w,c
  3282   0029EC  322D               	rrcf	(??___fldiv+3)^0,f,c
  3283   0029EE  322C               	rrcf	(??___fldiv+2)^0,f,c
  3284   0029F0  322B               	rrcf	(??___fldiv+1)^0,f,c
  3285   0029F2  322A               	rrcf	??___fldiv^0,f,c
  3286   0029F4  C02A  F022         	movff	??___fldiv,___fldiv@b
  3287   0029F8  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3288   0029FC  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3289   002A00  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3290   002A04  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3291   002A06  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3292   002A08                     l4099:
  3293   002A08  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3294   002A0A  EF0F  F015         	goto	u3491
  3295   002A0E  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3296   002A10  E108               	bnz	u3490
  3297   002A12  2833               	incf	___fldiv@new_exp^0,w,c
  3298   002A14  A0D8               	btfss	status,0,c
  3299   002A16  EF0F  F015         	goto	u3491
  3300   002A1A  EF11  F015         	goto	u3490
  3301   002A1E                     u3491:
  3302   002A1E  EF1C  F015         	goto	l4103
  3303   002A22                     u3490:
  3304   002A22  0E00               	movlw	0
  3305   002A24  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3306   002A26  6833               	setf	___fldiv@new_exp^0,c
  3307   002A28  0E00               	movlw	0
  3308   002A2A  6E22               	movwf	___fldiv@b^0,c
  3309   002A2C  0E00               	movlw	0
  3310   002A2E  6E23               	movwf	(___fldiv@b+1)^0,c
  3311   002A30  0E00               	movlw	0
  3312   002A32  6E24               	movwf	(___fldiv@b+2)^0,c
  3313   002A34  0E00               	movlw	0
  3314   002A36  6E25               	movwf	(___fldiv@b+3)^0,c
  3315   002A38                     l4103:
  3316   002A38  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3317   002A3A  EF29  F015         	goto	u3500
  3318   002A3E  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3319   002A40  E106               	bnz	u3501
  3320   002A42  0433               	decf	___fldiv@new_exp^0,w,c
  3321   002A44  B0D8               	btfsc	status,0,c
  3322   002A46  EF27  F015         	goto	u3501
  3323   002A4A  EF29  F015         	goto	u3500
  3324   002A4E                     u3501:
  3325   002A4E  EF37  F015         	goto	l4107
  3326   002A52                     u3500:
  3327   002A52  0E00               	movlw	0
  3328   002A54  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3329   002A56  0E00               	movlw	0
  3330   002A58  6E33               	movwf	___fldiv@new_exp^0,c
  3331   002A5A  0E00               	movlw	0
  3332   002A5C  6E22               	movwf	___fldiv@b^0,c
  3333   002A5E  0E00               	movlw	0
  3334   002A60  6E23               	movwf	(___fldiv@b+1)^0,c
  3335   002A62  0E00               	movlw	0
  3336   002A64  6E24               	movwf	(___fldiv@b+2)^0,c
  3337   002A66  0E00               	movlw	0
  3338   002A68  6E25               	movwf	(___fldiv@b+3)^0,c
  3339   002A6A  0E00               	movlw	0
  3340   002A6C  6E32               	movwf	___fldiv@sign^0,c
  3341   002A6E                     l4107:
  3342   002A6E  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3343   002A72  A039               	btfss	___fldiv@bexp^0,0,c
  3344   002A74  EF3E  F015         	goto	u3511
  3345   002A78  EF40  F015         	goto	u3510
  3346   002A7C                     u3511:
  3347   002A7C  EF43  F015         	goto	l4113
  3348   002A80                     u3510:
  3349   002A80  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3350   002A82  EF44  F015         	goto	l4115
  3351   002A86                     l4113:
  3352   002A86  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3353   002A88                     l4115:
  3354   002A88  90D8               	bcf	status,0,c
  3355   002A8A  3039               	rrcf	___fldiv@bexp^0,w,c
  3356   002A8C  6E25               	movwf	(___fldiv@b+3)^0,c
  3357   002A8E  EFFA  F013         	goto	l4029
  3358   002A92                     l1287:
  3359   002A92  0012               	return		;funcret
  3360   002A94                     __end_of___fldiv:
  3361                           	callstack 0
  3362                           
  3363 ;; *************** function _persistence_register *****************
  3364 ;; Defined at:
  3365 ;;		line 46 in file "interrupts.c"
  3366 ;; Parameters:    Size  Location     Type
  3367 ;;		None
  3368 ;; Auto vars:     Size  Location     Type
  3369 ;;		None
  3370 ;; Return value:  Size  Location     Type
  3371 ;;                  1    wreg      void 
  3372 ;; Registers used:
  3373 ;;		wreg, status,2, status,0, cstack
  3374 ;; Tracked objects:
  3375 ;;		On entry : 0/0
  3376 ;;		On exit  : 0/0
  3377 ;;		Unchanged: 0/0
  3378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3383 ;;Total ram usage:        0 bytes
  3384 ;; Hardware stack levels used: 1
  3385 ;; Hardware stack levels required when called: 9
  3386 ;; This function calls:
  3387 ;;		_color_writetoaddr
  3388 ;; This function is called by:
  3389 ;;		_main
  3390 ;; This function uses a non-reentrant model
  3391 ;;
  3392                           
  3393                           	psect	text17
  3394   003B12                     __ptext17:
  3395                           	callstack 0
  3396   003B12                     _persistence_register:
  3397                           	callstack 21
  3398   003B12                     
  3399                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3400   003B12  0E02               	movlw	2
  3401   003B14  6E0B               	movwf	color_writetoaddr@value^0,c
  3402   003B16  0E0C               	movlw	12
  3403   003B18  EC3D  F01D         	call	_color_writetoaddr
  3404   003B1C  0012               	return		;funcret
  3405   003B1E                     __end_of_persistence_register:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _motor_retrace *****************
  3409 ;; Defined at:
  3410 ;;		line 277 in file "color.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  3413 ;;		 -> buggy_path(15), 
  3414 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  3415 ;;		 -> main@mL(9), 
  3416 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  3417 ;;		 -> main@mR(9), 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;		None
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3429 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3431 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3432 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3433 ;;Total ram usage:        9 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 10
  3436 ;; This function calls:
  3437 ;;		_fullSpeedAhead
  3438 ;;		_norm_stop
  3439 ;;		_reverse
  3440 ;;		_turnLeft
  3441 ;;		_turnPrep
  3442 ;;		_turnRight
  3443 ;; This function is called by:
  3444 ;;		_main
  3445 ;; This function uses a non-reentrant model
  3446 ;;
  3447                           
  3448                           	psect	text18
  3449   001EEC                     __ptext18:
  3450                           	callstack 0
  3451   001EEC                     _motor_retrace:
  3452                           	callstack 20
  3453   001EEC                     
  3454                           ;color.c: 278:     if (buggy_path[buggy_step - 2] == 1) {
  3455   001EEC  504F               	movf	_buggy_step^0,w,c
  3456   001EEE  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3457   001EF0  6E2D               	movwf	??_motor_retrace^0,c
  3458   001EF2  5050               	movf	(_buggy_step+1)^0,w,c
  3459   001EF4  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3460   001EF6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3461   001EF8  0EFE               	movlw	254
  3462   001EFA  242D               	addwf	??_motor_retrace^0,w,c
  3463   001EFC  6ED9               	movwf	fsr2l,c
  3464   001EFE  0EFF               	movlw	255
  3465   001F00  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3466   001F02  6EDA               	movwf	fsr2h,c
  3467   001F04  04DE               	decf	postinc2,w,c
  3468   001F06  A4D8               	btfss	status,2,c
  3469   001F08  EF88  F00F         	goto	u2581
  3470   001F0C  EF8A  F00F         	goto	u2580
  3471   001F10                     u2581:
  3472   001F10  EFAC  F00F         	goto	l3363
  3473   001F14                     u2580:
  3474   001F14                     
  3475                           ;color.c: 279:         turnPrep(mL, mR);
  3476   001F14  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3477   001F18  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3478   001F1C  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3479   001F20  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3480   001F24  EC64  F01B         	call	_turnPrep	;wreg free
  3481                           
  3482                           ;color.c: 280:         turnLeft(mL, mR);
  3483   001F28  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3484   001F2C  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3485   001F30  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3486   001F34  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3487   001F38  EC90  F01A         	call	_turnLeft	;wreg free
  3488   001F3C                     l3361:
  3489                           
  3490                           ;color.c: 281:         _delay((unsigned long)((280)*(64000000/4000.0)));
  3491   001F3C  0E17               	movlw	23
  3492   001F3E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3493   001F40  0EBB               	movlw	187
  3494   001F42  6E2D               	movwf	??_motor_retrace^0,c
  3495   001F44  0E1D               	movlw	29
  3496   001F46                     u3797:
  3497   001F46  2EE8               	decfsz	wreg,f,c
  3498   001F48  D7FE               	bra	u3797
  3499   001F4A  2E2D               	decfsz	??_motor_retrace^0,f,c
  3500   001F4C  D7FC               	bra	u3797
  3501   001F4E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3502   001F50  D7FA               	bra	u3797
  3503   001F52  F000               	nop	
  3504                           
  3505                           ;color.c: 283:     } else if (buggy_path[buggy_step - 2] == 2) {
  3506   001F54  EF80  F011         	goto	l186
  3507   001F58                     l3363:
  3508   001F58  504F               	movf	_buggy_step^0,w,c
  3509   001F5A  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3510   001F5C  6E2D               	movwf	??_motor_retrace^0,c
  3511   001F5E  5050               	movf	(_buggy_step+1)^0,w,c
  3512   001F60  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3513   001F62  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3514   001F64  0EFE               	movlw	254
  3515   001F66  242D               	addwf	??_motor_retrace^0,w,c
  3516   001F68  6ED9               	movwf	fsr2l,c
  3517   001F6A  0EFF               	movlw	255
  3518   001F6C  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3519   001F6E  6EDA               	movwf	fsr2h,c
  3520   001F70  0E02               	movlw	2
  3521   001F72  18DE               	xorwf	postinc2,w,c
  3522   001F74  A4D8               	btfss	status,2,c
  3523   001F76  EFBF  F00F         	goto	u2591
  3524   001F7A  EFC1  F00F         	goto	u2590
  3525   001F7E                     u2591:
  3526   001F7E  EFD7  F00F         	goto	l3369
  3527   001F82                     u2590:
  3528   001F82                     
  3529                           ;color.c: 284:         turnPrep(mL, mR);
  3530   001F82  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3531   001F86  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3532   001F8A  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3533   001F8E  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3534   001F92  EC64  F01B         	call	_turnPrep	;wreg free
  3535                           
  3536                           ;color.c: 285:         turnRight(mL, mR);
  3537   001F96  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3538   001F9A  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3539   001F9E  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3540   001FA2  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3541   001FA6  EC57  F01A         	call	_turnRight	;wreg free
  3542   001FAA  EF9E  F00F         	goto	l3361
  3543   001FAE                     l3369:
  3544   001FAE  504F               	movf	_buggy_step^0,w,c
  3545   001FB0  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3546   001FB2  6E2D               	movwf	??_motor_retrace^0,c
  3547   001FB4  5050               	movf	(_buggy_step+1)^0,w,c
  3548   001FB6  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3549   001FB8  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3550   001FBA  0EFE               	movlw	254
  3551   001FBC  242D               	addwf	??_motor_retrace^0,w,c
  3552   001FBE  6ED9               	movwf	fsr2l,c
  3553   001FC0  0EFF               	movlw	255
  3554   001FC2  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3555   001FC4  6EDA               	movwf	fsr2h,c
  3556   001FC6  0E03               	movlw	3
  3557   001FC8  18DE               	xorwf	postinc2,w,c
  3558   001FCA  A4D8               	btfss	status,2,c
  3559   001FCC  EFEA  F00F         	goto	u2601
  3560   001FD0  EFEC  F00F         	goto	u2600
  3561   001FD4                     u2601:
  3562   001FD4  EF0D  F010         	goto	l3375
  3563   001FD8                     u2600:
  3564   001FD8                     
  3565                           ;color.c: 289:         turnPrep(mL, mR);
  3566   001FD8  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3567   001FDC  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3568   001FE0  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3569   001FE4  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3570   001FE8  EC64  F01B         	call	_turnPrep	;wreg free
  3571                           
  3572                           ;color.c: 290:         turnRight(mL, mR);
  3573   001FEC  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3574   001FF0  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3575   001FF4  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3576   001FF8  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3577   001FFC  EC57  F01A         	call	_turnRight	;wreg free
  3578   002000                     
  3579                           ;color.c: 291:         _delay((unsigned long)((495)*(64000000/4000.0)));
  3580   002000  0E29               	movlw	41
  3581   002002  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3582   002004  0E2E               	movlw	46
  3583   002006  6E2D               	movwf	??_motor_retrace^0,c
  3584   002008  0E9A               	movlw	154
  3585   00200A                     u3807:
  3586   00200A  2EE8               	decfsz	wreg,f,c
  3587   00200C  D7FE               	bra	u3807
  3588   00200E  2E2D               	decfsz	??_motor_retrace^0,f,c
  3589   002010  D7FC               	bra	u3807
  3590   002012  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3591   002014  D7FA               	bra	u3807
  3592                           
  3593                           ;color.c: 293:     } else if (buggy_path[buggy_step - 2] == 4) {
  3594   002016  EF80  F011         	goto	l186
  3595   00201A                     l3375:
  3596   00201A  504F               	movf	_buggy_step^0,w,c
  3597   00201C  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3598   00201E  6E2D               	movwf	??_motor_retrace^0,c
  3599   002020  5050               	movf	(_buggy_step+1)^0,w,c
  3600   002022  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3601   002024  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3602   002026  0EFE               	movlw	254
  3603   002028  242D               	addwf	??_motor_retrace^0,w,c
  3604   00202A  6ED9               	movwf	fsr2l,c
  3605   00202C  0EFF               	movlw	255
  3606   00202E  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3607   002030  6EDA               	movwf	fsr2h,c
  3608   002032  0E04               	movlw	4
  3609   002034  18DE               	xorwf	postinc2,w,c
  3610   002036  A4D8               	btfss	status,2,c
  3611   002038  EF20  F010         	goto	u2611
  3612   00203C  EF22  F010         	goto	u2610
  3613   002040                     u2611:
  3614   002040  EFAF  F010         	goto	l3395
  3615   002044                     u2610:
  3616   002044                     
  3617                           ;color.c: 294:         turnPrep(mL, mR);
  3618   002044  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3619   002048  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3620   00204C  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3621   002050  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3622   002054  EC64  F01B         	call	_turnPrep	;wreg free
  3623                           
  3624                           ;color.c: 295:         turnRight(mL, mR);
  3625   002058  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3626   00205C  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3627   002060  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3628   002064  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3629   002068  EC57  F01A         	call	_turnRight	;wreg free
  3630   00206C                     
  3631                           ;color.c: 296:         _delay((unsigned long)((280)*(64000000/4000.0)));
  3632   00206C  0E17               	movlw	23
  3633   00206E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3634   002070  0EBB               	movlw	187
  3635   002072  6E2D               	movwf	??_motor_retrace^0,c
  3636   002074  0E1D               	movlw	29
  3637   002076                     u3817:
  3638   002076  2EE8               	decfsz	wreg,f,c
  3639   002078  D7FE               	bra	u3817
  3640   00207A  2E2D               	decfsz	??_motor_retrace^0,f,c
  3641   00207C  D7FC               	bra	u3817
  3642   00207E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3643   002080  D7FA               	bra	u3817
  3644   002082  F000               	nop	
  3645   002084                     
  3646                           ;color.c: 297:         norm_stop(mL, mR);
  3647   002084  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3648   002088  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3649   00208C  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3650   002090  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3651   002094  EC91  F01C         	call	_norm_stop	;wreg free
  3652                           
  3653                           ;color.c: 298:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3654   002098  0E09               	movlw	9
  3655   00209A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3656   00209C  0E1E               	movlw	30
  3657   00209E  6E2D               	movwf	??_motor_retrace^0,c
  3658   0020A0  0EE4               	movlw	228
  3659   0020A2                     u3827:
  3660   0020A2  2EE8               	decfsz	wreg,f,c
  3661   0020A4  D7FE               	bra	u3827
  3662   0020A6  2E2D               	decfsz	??_motor_retrace^0,f,c
  3663   0020A8  D7FC               	bra	u3827
  3664   0020AA  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3665   0020AC  D7FA               	bra	u3827
  3666   0020AE  D000               	nop2	
  3667   0020B0                     
  3668                           ;color.c: 299:         fullSpeedAhead(mL, mR);
  3669   0020B0  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  3670   0020B4  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  3671   0020B8  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  3672   0020BC  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  3673   0020C0  EC05  F019         	call	_fullSpeedAhead	;wreg free
  3674   0020C4                     
  3675                           ;color.c: 300:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  3676   0020C4  0E62               	movlw	98
  3677   0020C6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3678   0020C8  0E67               	movlw	103
  3679   0020CA  6E2D               	movwf	??_motor_retrace^0,c
  3680   0020CC  0ECE               	movlw	206
  3681   0020CE                     u3837:
  3682   0020CE  2EE8               	decfsz	wreg,f,c
  3683   0020D0  D7FE               	bra	u3837
  3684   0020D2  2E2D               	decfsz	??_motor_retrace^0,f,c
  3685   0020D4  D7FC               	bra	u3837
  3686   0020D6  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3687   0020D8  D7FA               	bra	u3837
  3688                           
  3689                           ;color.c: 301:         reverse(mL, mR);
  3690   0020DA  C029  F01C         	movff	motor_retrace@mL,reverse@mL
  3691   0020DE  C02A  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  3692   0020E2  C02B  F01E         	movff	motor_retrace@mR,reverse@mR
  3693   0020E6  C02C  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  3694   0020EA  EC14  F018         	call	_reverse	;wreg free
  3695   0020EE                     
  3696                           ;color.c: 302:         _delay((unsigned long)((600)*(64000000/4000.0)));
  3697   0020EE  0E31               	movlw	49
  3698   0020F0  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3699   0020F2  0EB4               	movlw	180
  3700   0020F4  6E2D               	movwf	??_motor_retrace^0,c
  3701   0020F6  0E66               	movlw	102
  3702   0020F8                     u3847:
  3703   0020F8  2EE8               	decfsz	wreg,f,c
  3704   0020FA  D7FE               	bra	u3847
  3705   0020FC  2E2D               	decfsz	??_motor_retrace^0,f,c
  3706   0020FE  D7FC               	bra	u3847
  3707   002100  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3708   002102  D7FA               	bra	u3847
  3709   002104                     
  3710                           ;color.c: 303:         turnLeft(mL, mR);
  3711   002104  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3712   002108  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3713   00210C  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3714   002110  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3715   002114  EC90  F01A         	call	_turnLeft	;wreg free
  3716                           
  3717                           ;color.c: 304:         _delay((unsigned long)((285)*(64000000/4000.0)));
  3718   002118  0E18               	movlw	24
  3719   00211A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3720   00211C  0E23               	movlw	35
  3721   00211E  6E2D               	movwf	??_motor_retrace^0,c
  3722   002120  0E02               	movlw	2
  3723   002122                     u3857:
  3724   002122  2EE8               	decfsz	wreg,f,c
  3725   002124  D7FE               	bra	u3857
  3726   002126  2E2D               	decfsz	??_motor_retrace^0,f,c
  3727   002128  D7FC               	bra	u3857
  3728   00212A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3729   00212C  D7FA               	bra	u3857
  3730   00212E                     
  3731                           ;color.c: 305:         norm_stop(mL, mR);
  3732   00212E  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3733   002132  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3734   002136  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3735   00213A  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3736   00213E  EC91  F01C         	call	_norm_stop	;wreg free
  3737   002142                     
  3738                           ;color.c: 306:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3739   002142  0E09               	movlw	9
  3740   002144  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3741   002146  0E1E               	movlw	30
  3742   002148  6E2D               	movwf	??_motor_retrace^0,c
  3743   00214A  0EE4               	movlw	228
  3744   00214C                     u3867:
  3745   00214C  2EE8               	decfsz	wreg,f,c
  3746   00214E  D7FE               	bra	u3867
  3747   002150  2E2D               	decfsz	??_motor_retrace^0,f,c
  3748   002152  D7FC               	bra	u3867
  3749   002154  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3750   002156  D7FA               	bra	u3867
  3751   002158  D000               	nop2	
  3752                           
  3753                           ;color.c: 308:     } else if (buggy_path[buggy_step - 2] == 5) {
  3754   00215A  EF80  F011         	goto	l186
  3755   00215E                     l3395:
  3756   00215E  504F               	movf	_buggy_step^0,w,c
  3757   002160  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3758   002162  6E2D               	movwf	??_motor_retrace^0,c
  3759   002164  5050               	movf	(_buggy_step+1)^0,w,c
  3760   002166  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3761   002168  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3762   00216A  0EFE               	movlw	254
  3763   00216C  242D               	addwf	??_motor_retrace^0,w,c
  3764   00216E  6ED9               	movwf	fsr2l,c
  3765   002170  0EFF               	movlw	255
  3766   002172  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3767   002174  6EDA               	movwf	fsr2h,c
  3768   002176  0E05               	movlw	5
  3769   002178  18DE               	xorwf	postinc2,w,c
  3770   00217A  A4D8               	btfss	status,2,c
  3771   00217C  EFC2  F010         	goto	u2621
  3772   002180  EFC4  F010         	goto	u2620
  3773   002184                     u2621:
  3774   002184  EF1E  F011         	goto	l3409
  3775   002188                     u2620:
  3776   002188                     
  3777                           ;color.c: 309:         norm_stop(mL, mR);
  3778   002188  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3779   00218C  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3780   002190  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3781   002194  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3782   002198  EC91  F01C         	call	_norm_stop	;wreg free
  3783   00219C                     
  3784                           ;color.c: 310:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3785   00219C  0E09               	movlw	9
  3786   00219E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3787   0021A0  0E1E               	movlw	30
  3788   0021A2  6E2D               	movwf	??_motor_retrace^0,c
  3789   0021A4  0EE4               	movlw	228
  3790   0021A6                     u3877:
  3791   0021A6  2EE8               	decfsz	wreg,f,c
  3792   0021A8  D7FE               	bra	u3877
  3793   0021AA  2E2D               	decfsz	??_motor_retrace^0,f,c
  3794   0021AC  D7FC               	bra	u3877
  3795   0021AE  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3796   0021B0  D7FA               	bra	u3877
  3797   0021B2  D000               	nop2	
  3798   0021B4                     
  3799                           ;color.c: 311:         turnLeft(mL, mR);
  3800   0021B4  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3801   0021B8  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3802   0021BC  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3803   0021C0  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3804   0021C4  EC90  F01A         	call	_turnLeft	;wreg free
  3805                           
  3806                           ;color.c: 312:         _delay((unsigned long)((250)*(64000000/4000.0)));
  3807   0021C8  0E15               	movlw	21
  3808   0021CA  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3809   0021CC  0E4B               	movlw	75
  3810   0021CE  6E2D               	movwf	??_motor_retrace^0,c
  3811   0021D0  0EBE               	movlw	190
  3812   0021D2                     u3887:
  3813   0021D2  2EE8               	decfsz	wreg,f,c
  3814   0021D4  D7FE               	bra	u3887
  3815   0021D6  2E2D               	decfsz	??_motor_retrace^0,f,c
  3816   0021D8  D7FC               	bra	u3887
  3817   0021DA  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3818   0021DC  D7FA               	bra	u3887
  3819   0021DE  D000               	nop2	
  3820   0021E0                     
  3821                           ;color.c: 313:         norm_stop(mL, mR);
  3822   0021E0  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  3823   0021E4  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  3824   0021E8  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  3825   0021EC  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  3826   0021F0  EC91  F01C         	call	_norm_stop	;wreg free
  3827   0021F4                     
  3828                           ;color.c: 314:         _delay((unsigned long)((100)*(64000000/4000.0)));
  3829   0021F4  0E09               	movlw	9
  3830   0021F6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3831   0021F8  0E1E               	movlw	30
  3832   0021FA  6E2D               	movwf	??_motor_retrace^0,c
  3833   0021FC  0EE4               	movlw	228
  3834   0021FE                     u3897:
  3835   0021FE  2EE8               	decfsz	wreg,f,c
  3836   002200  D7FE               	bra	u3897
  3837   002202  2E2D               	decfsz	??_motor_retrace^0,f,c
  3838   002204  D7FC               	bra	u3897
  3839   002206  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3840   002208  D7FA               	bra	u3897
  3841   00220A  D000               	nop2	
  3842                           
  3843                           ;color.c: 315:         fullSpeedAhead(mL, mR);
  3844   00220C  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  3845   002210  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  3846   002214  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  3847   002218  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  3848   00221C  EC05  F019         	call	_fullSpeedAhead	;wreg free
  3849   002220                     
  3850                           ;color.c: 316:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  3851   002220  0EA3               	movlw	163
  3852   002222  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3853   002224  0E57               	movlw	87
  3854   002226  6E2D               	movwf	??_motor_retrace^0,c
  3855   002228  0E02               	movlw	2
  3856   00222A                     u3907:
  3857   00222A  2EE8               	decfsz	wreg,f,c
  3858   00222C  D7FE               	bra	u3907
  3859   00222E  2E2D               	decfsz	??_motor_retrace^0,f,c
  3860   002230  D7FC               	bra	u3907
  3861   002232  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3862   002234  D7FA               	bra	u3907
  3863   002236  D000               	nop2	
  3864                           
  3865                           ;color.c: 318:     } else if (buggy_path[buggy_step - 2] == 6) {
  3866   002238  EF80  F011         	goto	l186
  3867   00223C                     l3409:
  3868   00223C  504F               	movf	_buggy_step^0,w,c
  3869   00223E  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3870   002240  6E2D               	movwf	??_motor_retrace^0,c
  3871   002242  5050               	movf	(_buggy_step+1)^0,w,c
  3872   002244  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3873   002246  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3874   002248  0EFE               	movlw	254
  3875   00224A  242D               	addwf	??_motor_retrace^0,w,c
  3876   00224C  6ED9               	movwf	fsr2l,c
  3877   00224E  0EFF               	movlw	255
  3878   002250  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3879   002252  6EDA               	movwf	fsr2h,c
  3880   002254  0E06               	movlw	6
  3881   002256  18DE               	xorwf	postinc2,w,c
  3882   002258  A4D8               	btfss	status,2,c
  3883   00225A  EF31  F011         	goto	u2631
  3884   00225E  EF33  F011         	goto	u2630
  3885   002262                     u2631:
  3886   002262  EF55  F011         	goto	l3415
  3887   002266                     u2630:
  3888   002266                     
  3889                           ;color.c: 319:         turnPrep(mL, mR);
  3890   002266  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3891   00226A  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3892   00226E  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3893   002272  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3894   002276  EC64  F01B         	call	_turnPrep	;wreg free
  3895                           
  3896                           ;color.c: 320:         turnLeft(mL, mR);
  3897   00227A  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  3898   00227E  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  3899   002282  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  3900   002286  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  3901   00228A  EC90  F01A         	call	_turnLeft	;wreg free
  3902   00228E                     l3413:
  3903                           
  3904                           ;color.c: 321:         _delay((unsigned long)((350)*(64000000/4000.0)));
  3905   00228E  0E1D               	movlw	29
  3906   002290  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3907   002292  0E69               	movlw	105
  3908   002294  6E2D               	movwf	??_motor_retrace^0,c
  3909   002296  0EA5               	movlw	165
  3910   002298                     u3917:
  3911   002298  2EE8               	decfsz	wreg,f,c
  3912   00229A  D7FE               	bra	u3917
  3913   00229C  2E2D               	decfsz	??_motor_retrace^0,f,c
  3914   00229E  D7FC               	bra	u3917
  3915   0022A0  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  3916   0022A2  D7FA               	bra	u3917
  3917   0022A4  F000               	nop	
  3918                           
  3919                           ;color.c: 322:     } else if (buggy_path[buggy_step - 2] == 7) {
  3920   0022A6  EF80  F011         	goto	l186
  3921   0022AA                     l3415:
  3922   0022AA  504F               	movf	_buggy_step^0,w,c
  3923   0022AC  2427               	addwf	motor_retrace@buggy_path^0,w,c
  3924   0022AE  6E2D               	movwf	??_motor_retrace^0,c
  3925   0022B0  5050               	movf	(_buggy_step+1)^0,w,c
  3926   0022B2  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  3927   0022B4  6E2E               	movwf	(??_motor_retrace+1)^0,c
  3928   0022B6  0EFE               	movlw	254
  3929   0022B8  242D               	addwf	??_motor_retrace^0,w,c
  3930   0022BA  6ED9               	movwf	fsr2l,c
  3931   0022BC  0EFF               	movlw	255
  3932   0022BE  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  3933   0022C0  6EDA               	movwf	fsr2h,c
  3934   0022C2  0E07               	movlw	7
  3935   0022C4  18DE               	xorwf	postinc2,w,c
  3936   0022C6  A4D8               	btfss	status,2,c
  3937   0022C8  EF68  F011         	goto	u2641
  3938   0022CC  EF6A  F011         	goto	u2640
  3939   0022D0                     u2641:
  3940   0022D0  EF80  F011         	goto	l180
  3941   0022D4                     u2640:
  3942   0022D4                     
  3943                           ;color.c: 323:         turnPrep(mL, mR);
  3944   0022D4  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  3945   0022D8  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  3946   0022DC  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  3947   0022E0  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  3948   0022E4  EC64  F01B         	call	_turnPrep	;wreg free
  3949                           
  3950                           ;color.c: 324:         turnRight(mL, mR);
  3951   0022E8  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  3952   0022EC  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  3953   0022F0  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  3954   0022F4  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  3955   0022F8  EC57  F01A         	call	_turnRight	;wreg free
  3956   0022FC  EF47  F011         	goto	l3413
  3957   002300                     l180:
  3958   002300                     l186:
  3959   002300  0012               	return		;funcret
  3960   002302                     __end_of_motor_retrace:
  3961                           	callstack 0
  3962                           
  3963 ;; *************** function _fullSpeedAhead *****************
  3964 ;; Defined at:
  3965 ;;		line 178 in file "dc_motor.c"
  3966 ;; Parameters:    Size  Location     Type
  3967 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  3968 ;;		 -> main@mL(9), 
  3969 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  3970 ;;		 -> main@mR(9), 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;		None
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  1    wreg      void 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3984 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3985 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3986 ;;Total ram usage:        5 bytes
  3987 ;; Hardware stack levels used: 1
  3988 ;; Hardware stack levels required when called: 8
  3989 ;; This function calls:
  3990 ;;		_setMotorPWM
  3991 ;; This function is called by:
  3992 ;;		_motor_retrace
  3993 ;;		_main
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text19
  3998   00320A                     __ptext19:
  3999                           	callstack 0
  4000   00320A                     _fullSpeedAhead:
  4001                           	callstack 21
  4002   00320A                     
  4003                           ;dc_motor.c: 178: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 179: {;dc_
      +                          motor.c: 180:     mL->power =5;
  4004   00320A  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4005   00320E  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4006   003212  0E05               	movlw	5
  4007   003214  6EDF               	movwf	indf2,c
  4008                           
  4009                           ;dc_motor.c: 181:     mR->power = 5;
  4010   003216  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4011   00321A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4012   00321E  0E05               	movlw	5
  4013   003220  6EDF               	movwf	indf2,c
  4014   003222                     
  4015                           ;dc_motor.c: 182:     mR->direction = 1;
  4016   003222  EE20 F001          	lfsr	2,1
  4017   003226  501E               	movf	fullSpeedAhead@mR^0,w,c
  4018   003228  26D9               	addwf	fsr2l,f,c
  4019   00322A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4020   00322C  22DA               	addwfc	fsr2h,f,c
  4021   00322E  0E01               	movlw	1
  4022   003230  6EDF               	movwf	indf2,c
  4023   003232                     
  4024                           ;dc_motor.c: 183:     mL->direction = 1;
  4025   003232  EE20 F001          	lfsr	2,1
  4026   003236  501C               	movf	fullSpeedAhead@mL^0,w,c
  4027   003238  26D9               	addwf	fsr2l,f,c
  4028   00323A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4029   00323C  22DA               	addwfc	fsr2h,f,c
  4030   00323E  0E01               	movlw	1
  4031   003240  6EDF               	movwf	indf2,c
  4032   003242                     
  4033                           ;dc_motor.c: 184:     mL->brakemode = 1;
  4034   003242  EE20 F002          	lfsr	2,2
  4035   003246  501C               	movf	fullSpeedAhead@mL^0,w,c
  4036   003248  26D9               	addwf	fsr2l,f,c
  4037   00324A  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4038   00324C  22DA               	addwfc	fsr2h,f,c
  4039   00324E  0E01               	movlw	1
  4040   003250  6EDF               	movwf	indf2,c
  4041   003252                     
  4042                           ;dc_motor.c: 185:     mR->brakemode = 1;
  4043   003252  EE20 F002          	lfsr	2,2
  4044   003256  501E               	movf	fullSpeedAhead@mR^0,w,c
  4045   003258  26D9               	addwf	fsr2l,f,c
  4046   00325A  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4047   00325C  22DA               	addwfc	fsr2h,f,c
  4048   00325E  0E01               	movlw	1
  4049   003260  6EDF               	movwf	indf2,c
  4050                           
  4051                           ;dc_motor.c: 186:     while (mL->power <= 45 && mR->power <=45)
  4052   003262  EF49  F019         	goto	l3099
  4053   003266                     l3093:
  4054                           
  4055                           ;dc_motor.c: 187:     {;dc_motor.c: 188:         mL->power++;
  4056   003266  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4057   00326A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4058   00326E  2ADF               	incf	indf2,f,c
  4059                           
  4060                           ;dc_motor.c: 189:         mR->power++;
  4061   003270  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4062   003274  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4063   003278  2ADF               	incf	indf2,f,c
  4064   00327A                     
  4065                           ;dc_motor.c: 191:         setMotorPWM(mL);
  4066   00327A  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4067   00327E  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4068   003282  ECDC  F016         	call	_setMotorPWM	;wreg free
  4069   003286                     
  4070                           ;dc_motor.c: 192:         setMotorPWM(mR);
  4071   003286  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4072   00328A  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4073   00328E  ECDC  F016         	call	_setMotorPWM	;wreg free
  4074   003292                     l3099:
  4075                           
  4076                           ;dc_motor.c: 186:     while (mL->power <= 45 && mR->power <=45)
  4077   003292  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4078   003296  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4079   00329A  0E2E               	movlw	46
  4080   00329C  60DF               	cpfslt	indf2,c
  4081   00329E  EF53  F019         	goto	u2121
  4082   0032A2  EF55  F019         	goto	u2120
  4083   0032A6                     u2121:
  4084   0032A6  EF61  F019         	goto	l3103
  4085   0032AA                     u2120:
  4086   0032AA  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4087   0032AE  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4088   0032B2  0E2D               	movlw	45
  4089   0032B4  64DF               	cpfsgt	indf2,c
  4090   0032B6  EF5F  F019         	goto	u2131
  4091   0032BA  EF61  F019         	goto	u2130
  4092   0032BE                     u2131:
  4093   0032BE  EF33  F019         	goto	l3093
  4094   0032C2                     u2130:
  4095   0032C2                     l3103:
  4096                           
  4097                           ;dc_motor.c: 194:     mL->power = 45;
  4098   0032C2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4099   0032C6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4100   0032CA  0E2D               	movlw	45
  4101   0032CC  6EDF               	movwf	indf2,c
  4102                           
  4103                           ;dc_motor.c: 195:     mR->power = 45;
  4104   0032CE  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4105   0032D2  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4106   0032D6  0E2D               	movlw	45
  4107   0032D8  6EDF               	movwf	indf2,c
  4108   0032DA                     
  4109                           ;dc_motor.c: 196:     setMotorPWM(mL);
  4110   0032DA  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4111   0032DE  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4112   0032E2  ECDC  F016         	call	_setMotorPWM	;wreg free
  4113   0032E6                     
  4114                           ;dc_motor.c: 197:     setMotorPWM(mR);
  4115   0032E6  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4116   0032EA  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4117   0032EE  ECDC  F016         	call	_setMotorPWM	;wreg free
  4118   0032F2  0012               	return		;funcret
  4119   0032F4                     __end_of_fullSpeedAhead:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _motor_response *****************
  4123 ;; Defined at:
  4124 ;;		line 181 in file "color.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4127 ;;		 -> main@RGBC(32), 
  4128 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4129 ;;		 -> main@mL(9), 
  4130 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4131 ;;		 -> main@mR(9), 
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;  j               2   46[COMRAM] int 
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      unsigned char 
  4136 ;; Registers used:
  4137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4143 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4147 ;;Total ram usage:       10 bytes
  4148 ;; Hardware stack levels used: 1
  4149 ;; Hardware stack levels required when called: 10
  4150 ;; This function calls:
  4151 ;;		___flge
  4152 ;;		_norm_stop
  4153 ;;		_reverse
  4154 ;;		_turnLeft
  4155 ;;		_turnPrep
  4156 ;;		_turnRight
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text20
  4163   000E18                     __ptext20:
  4164                           	callstack 0
  4165   000E18                     _motor_response:
  4166                           	callstack 20
  4167   000E18                     
  4168                           ;color.c: 182:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4169   000E18  EE20 F01C          	lfsr	2,28
  4170   000E1C  5027               	movf	motor_response@temp^0,w,c
  4171   000E1E  26D9               	addwf	fsr2l,f,c
  4172   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4173   000E22  22DA               	addwfc	fsr2h,f,c
  4174   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4175   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4176   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4177   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4178   000E34  C041  F00D         	movff	_CR2U,___flge@ff2
  4179   000E38  C042  F00E         	movff	_CR2U+1,___flge@ff2+1
  4180   000E3C  C043  F00F         	movff	_CR2U+2,___flge@ff2+2
  4181   000E40  C044  F010         	movff	_CR2U+3,___flge@ff2+3
  4182   000E44  EC92  F017         	call	___flge	;wreg free
  4183   000E48  B0D8               	btfsc	status,0,c
  4184   000E4A  EF29  F007         	goto	u2191
  4185   000E4E  EF2B  F007         	goto	u2190
  4186   000E52                     u2191:
  4187   000E52  EF07  F00A         	goto	l3243
  4188   000E56                     u2190:
  4189   000E56  C0CC  F009         	movff	_CR2L,___flge@ff1
  4190   000E5A  C0CD  F00A         	movff	_CR2L+1,___flge@ff1+1
  4191   000E5E  C0CE  F00B         	movff	_CR2L+2,___flge@ff1+2
  4192   000E62  C0CF  F00C         	movff	_CR2L+3,___flge@ff1+3
  4193   000E66  EE20 F01C          	lfsr	2,28
  4194   000E6A  5027               	movf	motor_response@temp^0,w,c
  4195   000E6C  26D9               	addwf	fsr2l,f,c
  4196   000E6E  5028               	movf	(motor_response@temp+1)^0,w,c
  4197   000E70  22DA               	addwfc	fsr2h,f,c
  4198   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  4199   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4200   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4201   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  4202   000E82  EC92  F017         	call	___flge	;wreg free
  4203   000E86  B0D8               	btfsc	status,0,c
  4204   000E88  EF48  F007         	goto	u2201
  4205   000E8C  EF4A  F007         	goto	u2200
  4206   000E90                     u2201:
  4207   000E90  EF07  F00A         	goto	l3243
  4208   000E94                     u2200:
  4209   000E94                     
  4210                           ;color.c: 184:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4211   000E94  EE20 F018          	lfsr	2,24
  4212   000E98  5027               	movf	motor_response@temp^0,w,c
  4213   000E9A  26D9               	addwf	fsr2l,f,c
  4214   000E9C  5028               	movf	(motor_response@temp+1)^0,w,c
  4215   000E9E  22DA               	addwfc	fsr2h,f,c
  4216   000EA0  CFDE F009          	movff	postinc2,___flge@ff1
  4217   000EA4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4218   000EA8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4219   000EAC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4220   000EB0  0E00               	movlw	0
  4221   000EB2  6E0D               	movwf	___flge@ff2^0,c
  4222   000EB4  0E00               	movlw	0
  4223   000EB6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4224   000EB8  0EA0               	movlw	160
  4225   000EBA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4226   000EBC  0E40               	movlw	64
  4227   000EBE  6E10               	movwf	(___flge@ff2+3)^0,c
  4228   000EC0  EC92  F017         	call	___flge	;wreg free
  4229   000EC4  B0D8               	btfsc	status,0,c
  4230   000EC6  EF67  F007         	goto	u2211
  4231   000ECA  EF69  F007         	goto	u2210
  4232   000ECE                     u2211:
  4233   000ECE  EF2A  F008         	goto	l3195
  4234   000ED2                     u2210:
  4235   000ED2  0E9A               	movlw	154
  4236   000ED4  6E09               	movwf	___flge@ff1^0,c
  4237   000ED6  0E99               	movlw	153
  4238   000ED8  6E0A               	movwf	(___flge@ff1+1)^0,c
  4239   000EDA  0ED9               	movlw	217
  4240   000EDC  6E0B               	movwf	(___flge@ff1+2)^0,c
  4241   000EDE  0E3F               	movlw	63
  4242   000EE0  6E0C               	movwf	(___flge@ff1+3)^0,c
  4243   000EE2  EE20 F010          	lfsr	2,16
  4244   000EE6  5027               	movf	motor_response@temp^0,w,c
  4245   000EE8  26D9               	addwf	fsr2l,f,c
  4246   000EEA  5028               	movf	(motor_response@temp+1)^0,w,c
  4247   000EEC  22DA               	addwfc	fsr2h,f,c
  4248   000EEE  CFDE F00D          	movff	postinc2,___flge@ff2
  4249   000EF2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4250   000EF6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4251   000EFA  CFDE F010          	movff	postinc2,___flge@ff2+3
  4252   000EFE  EC92  F017         	call	___flge	;wreg free
  4253   000F02  B0D8               	btfsc	status,0,c
  4254   000F04  EF86  F007         	goto	u2221
  4255   000F08  EF88  F007         	goto	u2220
  4256   000F0C                     u2221:
  4257   000F0C  EF2A  F008         	goto	l3195
  4258   000F10                     u2220:
  4259   000F10  EE20 F010          	lfsr	2,16
  4260   000F14  5027               	movf	motor_response@temp^0,w,c
  4261   000F16  26D9               	addwf	fsr2l,f,c
  4262   000F18  5028               	movf	(motor_response@temp+1)^0,w,c
  4263   000F1A  22DA               	addwfc	fsr2h,f,c
  4264   000F1C  CFDE F009          	movff	postinc2,___flge@ff1
  4265   000F20  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4266   000F24  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4267   000F28  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4268   000F2C  0ECD               	movlw	205
  4269   000F2E  6E0D               	movwf	___flge@ff2^0,c
  4270   000F30  0ECC               	movlw	204
  4271   000F32  6E0E               	movwf	(___flge@ff2+1)^0,c
  4272   000F34  0E0C               	movlw	12
  4273   000F36  6E0F               	movwf	(___flge@ff2+2)^0,c
  4274   000F38  0E40               	movlw	64
  4275   000F3A  6E10               	movwf	(___flge@ff2+3)^0,c
  4276   000F3C  EC92  F017         	call	___flge	;wreg free
  4277   000F40  B0D8               	btfsc	status,0,c
  4278   000F42  EFA5  F007         	goto	u2231
  4279   000F46  EFA7  F007         	goto	u2230
  4280   000F4A                     u2231:
  4281   000F4A  EF2A  F008         	goto	l3195
  4282   000F4E                     u2230:
  4283   000F4E  0E00               	movlw	0
  4284   000F50  6E09               	movwf	___flge@ff1^0,c
  4285   000F52  0E00               	movlw	0
  4286   000F54  6E0A               	movwf	(___flge@ff1+1)^0,c
  4287   000F56  0E40               	movlw	64
  4288   000F58  6E0B               	movwf	(___flge@ff1+2)^0,c
  4289   000F5A  0E40               	movlw	64
  4290   000F5C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4291   000F5E  EE20 F014          	lfsr	2,20
  4292   000F62  5027               	movf	motor_response@temp^0,w,c
  4293   000F64  26D9               	addwf	fsr2l,f,c
  4294   000F66  5028               	movf	(motor_response@temp+1)^0,w,c
  4295   000F68  22DA               	addwfc	fsr2h,f,c
  4296   000F6A  CFDE F00D          	movff	postinc2,___flge@ff2
  4297   000F6E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4298   000F72  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4299   000F76  CFDE F010          	movff	postinc2,___flge@ff2+3
  4300   000F7A  EC92  F017         	call	___flge	;wreg free
  4301   000F7E  B0D8               	btfsc	status,0,c
  4302   000F80  EFC4  F007         	goto	u2241
  4303   000F84  EFC6  F007         	goto	u2240
  4304   000F88                     u2241:
  4305   000F88  EF2A  F008         	goto	l3195
  4306   000F8C                     u2240:
  4307   000F8C  EE20 F014          	lfsr	2,20
  4308   000F90  5027               	movf	motor_response@temp^0,w,c
  4309   000F92  26D9               	addwf	fsr2l,f,c
  4310   000F94  5028               	movf	(motor_response@temp+1)^0,w,c
  4311   000F96  22DA               	addwfc	fsr2h,f,c
  4312   000F98  CFDE F009          	movff	postinc2,___flge@ff1
  4313   000F9C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4314   000FA0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4315   000FA4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4316   000FA8  0E00               	movlw	0
  4317   000FAA  6E0D               	movwf	___flge@ff2^0,c
  4318   000FAC  0E00               	movlw	0
  4319   000FAE  6E0E               	movwf	(___flge@ff2+1)^0,c
  4320   000FB0  0E60               	movlw	96
  4321   000FB2  6E0F               	movwf	(___flge@ff2+2)^0,c
  4322   000FB4  0E40               	movlw	64
  4323   000FB6  6E10               	movwf	(___flge@ff2+3)^0,c
  4324   000FB8  EC92  F017         	call	___flge	;wreg free
  4325   000FBC  B0D8               	btfsc	status,0,c
  4326   000FBE  EFE3  F007         	goto	u2251
  4327   000FC2  EFE5  F007         	goto	u2250
  4328   000FC6                     u2251:
  4329   000FC6  EF2A  F008         	goto	l3195
  4330   000FCA                     u2250:
  4331   000FCA                     
  4332                           ;color.c: 185:             reverse(mL, mR);
  4333   000FCA  C029  F01C         	movff	motor_response@mL,reverse@mL
  4334   000FCE  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  4335   000FD2  C02B  F01E         	movff	motor_response@mR,reverse@mR
  4336   000FD6  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  4337   000FDA  EC14  F018         	call	_reverse	;wreg free
  4338   000FDE                     
  4339                           ;color.c: 186:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  4340   000FDE  0EF4               	movlw	244
  4341   000FE0  6E2E               	movwf	(??_motor_response+1)^0,c
  4342   000FE2  0E82               	movlw	130
  4343   000FE4  6E2D               	movwf	??_motor_response^0,c
  4344   000FE6  0E05               	movlw	5
  4345   000FE8                     u3927:
  4346   000FE8  2EE8               	decfsz	wreg,f,c
  4347   000FEA  D7FE               	bra	u3927
  4348   000FEC  2E2D               	decfsz	??_motor_response^0,f,c
  4349   000FEE  D7FC               	bra	u3927
  4350   000FF0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4351   000FF2  D7FA               	bra	u3927
  4352   000FF4  F000               	nop	
  4353   000FF6                     
  4354                           ;color.c: 187:             norm_stop(mL, mR);
  4355   000FF6  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4356   000FFA  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4357   000FFE  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4358   001002  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4359   001006  EC91  F01C         	call	_norm_stop	;wreg free
  4360                           
  4361                           ;color.c: 188:             _delay((unsigned long)((100)*(64000000/4000.0)));
  4362   00100A  0E09               	movlw	9
  4363   00100C  6E2E               	movwf	(??_motor_response+1)^0,c
  4364   00100E  0E1E               	movlw	30
  4365   001010  6E2D               	movwf	??_motor_response^0,c
  4366   001012  0EE4               	movlw	228
  4367   001014                     u3937:
  4368   001014  2EE8               	decfsz	wreg,f,c
  4369   001016  D7FE               	bra	u3937
  4370   001018  2E2D               	decfsz	??_motor_response^0,f,c
  4371   00101A  D7FC               	bra	u3937
  4372   00101C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4373   00101E  D7FA               	bra	u3937
  4374   001020  D000               	nop2	
  4375   001022                     
  4376                           ;color.c: 189:             turnLeft(mL, mR);
  4377   001022  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4378   001026  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4379   00102A  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4380   00102E  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4381   001032  EC90  F01A         	call	_turnLeft	;wreg free
  4382   001036                     
  4383                           ;color.c: 190:             _delay((unsigned long)((250)*(64000000/4000.0)));
  4384   001036  0E15               	movlw	21
  4385   001038  6E2E               	movwf	(??_motor_response+1)^0,c
  4386   00103A  0E4B               	movlw	75
  4387   00103C  6E2D               	movwf	??_motor_response^0,c
  4388   00103E  0EBE               	movlw	190
  4389   001040                     u3947:
  4390   001040  2EE8               	decfsz	wreg,f,c
  4391   001042  D7FE               	bra	u3947
  4392   001044  2E2D               	decfsz	??_motor_response^0,f,c
  4393   001046  D7FC               	bra	u3947
  4394   001048  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4395   00104A  D7FA               	bra	u3947
  4396   00104C  D000               	nop2	
  4397   00104E                     
  4398                           ;color.c: 191:             return 5;
  4399   00104E  0E05               	movlw	5
  4400   001050  EF15  F00D         	goto	l155
  4401   001054                     l3195:
  4402                           
  4403                           ;color.c: 194:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  4404   001054  0E00               	movlw	0
  4405   001056  6E09               	movwf	___flge@ff1^0,c
  4406   001058  0E00               	movlw	0
  4407   00105A  6E0A               	movwf	(___flge@ff1+1)^0,c
  4408   00105C  0EB0               	movlw	176
  4409   00105E  6E0B               	movwf	(___flge@ff1+2)^0,c
  4410   001060  0E40               	movlw	64
  4411   001062  6E0C               	movwf	(___flge@ff1+3)^0,c
  4412   001064  EE20 F018          	lfsr	2,24
  4413   001068  5027               	movf	motor_response@temp^0,w,c
  4414   00106A  26D9               	addwf	fsr2l,f,c
  4415   00106C  5028               	movf	(motor_response@temp+1)^0,w,c
  4416   00106E  22DA               	addwfc	fsr2h,f,c
  4417   001070  CFDE F00D          	movff	postinc2,___flge@ff2
  4418   001074  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4419   001078  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4420   00107C  CFDE F010          	movff	postinc2,___flge@ff2+3
  4421   001080  EC92  F017         	call	___flge	;wreg free
  4422   001084  B0D8               	btfsc	status,0,c
  4423   001086  EF47  F008         	goto	u2261
  4424   00108A  EF49  F008         	goto	u2260
  4425   00108E                     u2261:
  4426   00108E  EF06  F009         	goto	l3215
  4427   001092                     u2260:
  4428   001092  EE20 F018          	lfsr	2,24
  4429   001096  5027               	movf	motor_response@temp^0,w,c
  4430   001098  26D9               	addwf	fsr2l,f,c
  4431   00109A  5028               	movf	(motor_response@temp+1)^0,w,c
  4432   00109C  22DA               	addwfc	fsr2h,f,c
  4433   00109E  CFDE F009          	movff	postinc2,___flge@ff1
  4434   0010A2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4435   0010A6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4436   0010AA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4437   0010AE  0E00               	movlw	0
  4438   0010B0  6E0D               	movwf	___flge@ff2^0,c
  4439   0010B2  0E00               	movlw	0
  4440   0010B4  6E0E               	movwf	(___flge@ff2+1)^0,c
  4441   0010B6  0EC0               	movlw	192
  4442   0010B8  6E0F               	movwf	(___flge@ff2+2)^0,c
  4443   0010BA  0E40               	movlw	64
  4444   0010BC  6E10               	movwf	(___flge@ff2+3)^0,c
  4445   0010BE  EC92  F017         	call	___flge	;wreg free
  4446   0010C2  B0D8               	btfsc	status,0,c
  4447   0010C4  EF66  F008         	goto	u2271
  4448   0010C8  EF68  F008         	goto	u2270
  4449   0010CC                     u2271:
  4450   0010CC  EF06  F009         	goto	l3215
  4451   0010D0                     u2270:
  4452   0010D0  0E33               	movlw	51
  4453   0010D2  6E09               	movwf	___flge@ff1^0,c
  4454   0010D4  0E33               	movlw	51
  4455   0010D6  6E0A               	movwf	(___flge@ff1+1)^0,c
  4456   0010D8  0EB3               	movlw	179
  4457   0010DA  6E0B               	movwf	(___flge@ff1+2)^0,c
  4458   0010DC  0E3F               	movlw	63
  4459   0010DE  6E0C               	movwf	(___flge@ff1+3)^0,c
  4460   0010E0  EE20 F010          	lfsr	2,16
  4461   0010E4  5027               	movf	motor_response@temp^0,w,c
  4462   0010E6  26D9               	addwf	fsr2l,f,c
  4463   0010E8  5028               	movf	(motor_response@temp+1)^0,w,c
  4464   0010EA  22DA               	addwfc	fsr2h,f,c
  4465   0010EC  CFDE F00D          	movff	postinc2,___flge@ff2
  4466   0010F0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4467   0010F4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4468   0010F8  CFDE F010          	movff	postinc2,___flge@ff2+3
  4469   0010FC  EC92  F017         	call	___flge	;wreg free
  4470   001100  B0D8               	btfsc	status,0,c
  4471   001102  EF85  F008         	goto	u2281
  4472   001106  EF87  F008         	goto	u2280
  4473   00110A                     u2281:
  4474   00110A  EF06  F009         	goto	l3215
  4475   00110E                     u2280:
  4476   00110E  EE20 F010          	lfsr	2,16
  4477   001112  5027               	movf	motor_response@temp^0,w,c
  4478   001114  26D9               	addwf	fsr2l,f,c
  4479   001116  5028               	movf	(motor_response@temp+1)^0,w,c
  4480   001118  22DA               	addwfc	fsr2h,f,c
  4481   00111A  CFDE F009          	movff	postinc2,___flge@ff1
  4482   00111E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4483   001122  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4484   001126  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4485   00112A  0E9A               	movlw	154
  4486   00112C  6E0D               	movwf	___flge@ff2^0,c
  4487   00112E  0E99               	movlw	153
  4488   001130  6E0E               	movwf	(___flge@ff2+1)^0,c
  4489   001132  0ED9               	movlw	217
  4490   001134  6E0F               	movwf	(___flge@ff2+2)^0,c
  4491   001136  0E3F               	movlw	63
  4492   001138  6E10               	movwf	(___flge@ff2+3)^0,c
  4493   00113A  EC92  F017         	call	___flge	;wreg free
  4494   00113E  B0D8               	btfsc	status,0,c
  4495   001140  EFA4  F008         	goto	u2291
  4496   001144  EFA6  F008         	goto	u2290
  4497   001148                     u2291:
  4498   001148  EF06  F009         	goto	l3215
  4499   00114C                     u2290:
  4500   00114C  0E33               	movlw	51
  4501   00114E  6E09               	movwf	___flge@ff1^0,c
  4502   001150  0E33               	movlw	51
  4503   001152  6E0A               	movwf	(___flge@ff1+1)^0,c
  4504   001154  0E83               	movlw	131
  4505   001156  6E0B               	movwf	(___flge@ff1+2)^0,c
  4506   001158  0E40               	movlw	64
  4507   00115A  6E0C               	movwf	(___flge@ff1+3)^0,c
  4508   00115C  EE20 F014          	lfsr	2,20
  4509   001160  5027               	movf	motor_response@temp^0,w,c
  4510   001162  26D9               	addwf	fsr2l,f,c
  4511   001164  5028               	movf	(motor_response@temp+1)^0,w,c
  4512   001166  22DA               	addwfc	fsr2h,f,c
  4513   001168  CFDE F00D          	movff	postinc2,___flge@ff2
  4514   00116C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4515   001170  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4516   001174  CFDE F010          	movff	postinc2,___flge@ff2+3
  4517   001178  EC92  F017         	call	___flge	;wreg free
  4518   00117C  B0D8               	btfsc	status,0,c
  4519   00117E  EFC3  F008         	goto	u2301
  4520   001182  EFC5  F008         	goto	u2300
  4521   001186                     u2301:
  4522   001186  EF06  F009         	goto	l3215
  4523   00118A                     u2300:
  4524   00118A  EE20 F014          	lfsr	2,20
  4525   00118E  5027               	movf	motor_response@temp^0,w,c
  4526   001190  26D9               	addwf	fsr2l,f,c
  4527   001192  5028               	movf	(motor_response@temp+1)^0,w,c
  4528   001194  22DA               	addwfc	fsr2h,f,c
  4529   001196  CFDE F009          	movff	postinc2,___flge@ff1
  4530   00119A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4531   00119E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4532   0011A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4533   0011A6  0E00               	movlw	0
  4534   0011A8  6E0D               	movwf	___flge@ff2^0,c
  4535   0011AA  0E00               	movlw	0
  4536   0011AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  4537   0011AE  0E90               	movlw	144
  4538   0011B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  4539   0011B2  0E40               	movlw	64
  4540   0011B4  6E10               	movwf	(___flge@ff2+3)^0,c
  4541   0011B6  EC92  F017         	call	___flge	;wreg free
  4542   0011BA  B0D8               	btfsc	status,0,c
  4543   0011BC  EFE2  F008         	goto	u2311
  4544   0011C0  EFE4  F008         	goto	u2310
  4545   0011C4                     u2311:
  4546   0011C4  EF06  F009         	goto	l3215
  4547   0011C8                     u2310:
  4548   0011C8                     
  4549                           ;color.c: 196:             turnPrep(mL, mR);
  4550   0011C8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4551   0011CC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4552   0011D0  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4553   0011D4  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4554   0011D8  EC64  F01B         	call	_turnPrep	;wreg free
  4555                           
  4556                           ;color.c: 197:             turnRight(mL, mR);
  4557   0011DC  C029  F01C         	movff	motor_response@mL,turnRight@mL
  4558   0011E0  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  4559   0011E4  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  4560   0011E8  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  4561   0011EC  EC57  F01A         	call	_turnRight	;wreg free
  4562   0011F0                     
  4563                           ;color.c: 198:             _delay((unsigned long)((430)*(64000000/4000.0)));
  4564   0011F0  0E23               	movlw	35
  4565   0011F2  6E2E               	movwf	(??_motor_response+1)^0,c
  4566   0011F4  0EE7               	movlw	231
  4567   0011F6  6E2D               	movwf	??_motor_response^0,c
  4568   0011F8  0EF8               	movlw	248
  4569   0011FA                     u3957:
  4570   0011FA  2EE8               	decfsz	wreg,f,c
  4571   0011FC  D7FE               	bra	u3957
  4572   0011FE  2E2D               	decfsz	??_motor_response^0,f,c
  4573   001200  D7FC               	bra	u3957
  4574   001202  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4575   001204  D7FA               	bra	u3957
  4576   001206                     
  4577                           ;color.c: 199:             return 6;
  4578   001206  0E06               	movlw	6
  4579   001208  EF15  F00D         	goto	l155
  4580   00120C                     l3215:
  4581                           
  4582                           ;color.c: 201:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  4583   00120C  0E33               	movlw	51
  4584   00120E  6E09               	movwf	___flge@ff1^0,c
  4585   001210  0E33               	movlw	51
  4586   001212  6E0A               	movwf	(___flge@ff1+1)^0,c
  4587   001214  0E53               	movlw	83
  4588   001216  6E0B               	movwf	(___flge@ff1+2)^0,c
  4589   001218  0E40               	movlw	64
  4590   00121A  6E0C               	movwf	(___flge@ff1+3)^0,c
  4591   00121C  EE20 F018          	lfsr	2,24
  4592   001220  5027               	movf	motor_response@temp^0,w,c
  4593   001222  26D9               	addwf	fsr2l,f,c
  4594   001224  5028               	movf	(motor_response@temp+1)^0,w,c
  4595   001226  22DA               	addwfc	fsr2h,f,c
  4596   001228  CFDE F00D          	movff	postinc2,___flge@ff2
  4597   00122C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4598   001230  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4599   001234  CFDE F010          	movff	postinc2,___flge@ff2+3
  4600   001238  EC92  F017         	call	___flge	;wreg free
  4601   00123C  B0D8               	btfsc	status,0,c
  4602   00123E  EF23  F009         	goto	u2321
  4603   001242  EF25  F009         	goto	u2320
  4604   001246                     u2321:
  4605   001246  EF07  F00A         	goto	l3243
  4606   00124A                     u2320:
  4607   00124A  EE20 F018          	lfsr	2,24
  4608   00124E  5027               	movf	motor_response@temp^0,w,c
  4609   001250  26D9               	addwf	fsr2l,f,c
  4610   001252  5028               	movf	(motor_response@temp+1)^0,w,c
  4611   001254  22DA               	addwfc	fsr2h,f,c
  4612   001256  CFDE F009          	movff	postinc2,___flge@ff1
  4613   00125A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4614   00125E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4615   001262  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4616   001266  0E9A               	movlw	154
  4617   001268  6E0D               	movwf	___flge@ff2^0,c
  4618   00126A  0E99               	movlw	153
  4619   00126C  6E0E               	movwf	(___flge@ff2+1)^0,c
  4620   00126E  0E79               	movlw	121
  4621   001270  6E0F               	movwf	(___flge@ff2+2)^0,c
  4622   001272  0E40               	movlw	64
  4623   001274  6E10               	movwf	(___flge@ff2+3)^0,c
  4624   001276  EC92  F017         	call	___flge	;wreg free
  4625   00127A  B0D8               	btfsc	status,0,c
  4626   00127C  EF42  F009         	goto	u2331
  4627   001280  EF44  F009         	goto	u2330
  4628   001284                     u2331:
  4629   001284  EF07  F00A         	goto	l3243
  4630   001288                     u2330:
  4631   001288  0ECD               	movlw	205
  4632   00128A  6E09               	movwf	___flge@ff1^0,c
  4633   00128C  0ECC               	movlw	204
  4634   00128E  6E0A               	movwf	(___flge@ff1+1)^0,c
  4635   001290  0E2C               	movlw	44
  4636   001292  6E0B               	movwf	(___flge@ff1+2)^0,c
  4637   001294  0E40               	movlw	64
  4638   001296  6E0C               	movwf	(___flge@ff1+3)^0,c
  4639   001298  EE20 F010          	lfsr	2,16
  4640   00129C  5027               	movf	motor_response@temp^0,w,c
  4641   00129E  26D9               	addwf	fsr2l,f,c
  4642   0012A0  5028               	movf	(motor_response@temp+1)^0,w,c
  4643   0012A2  22DA               	addwfc	fsr2h,f,c
  4644   0012A4  CFDE F00D          	movff	postinc2,___flge@ff2
  4645   0012A8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4646   0012AC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4647   0012B0  CFDE F010          	movff	postinc2,___flge@ff2+3
  4648   0012B4  EC92  F017         	call	___flge	;wreg free
  4649   0012B8  B0D8               	btfsc	status,0,c
  4650   0012BA  EF61  F009         	goto	u2341
  4651   0012BE  EF63  F009         	goto	u2340
  4652   0012C2                     u2341:
  4653   0012C2  EF07  F00A         	goto	l3243
  4654   0012C6                     u2340:
  4655   0012C6  EE20 F010          	lfsr	2,16
  4656   0012CA  5027               	movf	motor_response@temp^0,w,c
  4657   0012CC  26D9               	addwf	fsr2l,f,c
  4658   0012CE  5028               	movf	(motor_response@temp+1)^0,w,c
  4659   0012D0  22DA               	addwfc	fsr2h,f,c
  4660   0012D2  CFDE F009          	movff	postinc2,___flge@ff1
  4661   0012D6  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4662   0012DA  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4663   0012DE  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4664   0012E2  0ECD               	movlw	205
  4665   0012E4  6E0D               	movwf	___flge@ff2^0,c
  4666   0012E6  0ECC               	movlw	204
  4667   0012E8  6E0E               	movwf	(___flge@ff2+1)^0,c
  4668   0012EA  0E4C               	movlw	76
  4669   0012EC  6E0F               	movwf	(___flge@ff2+2)^0,c
  4670   0012EE  0E40               	movlw	64
  4671   0012F0  6E10               	movwf	(___flge@ff2+3)^0,c
  4672   0012F2  EC92  F017         	call	___flge	;wreg free
  4673   0012F6  B0D8               	btfsc	status,0,c
  4674   0012F8  EF80  F009         	goto	u2351
  4675   0012FC  EF82  F009         	goto	u2350
  4676   001300                     u2351:
  4677   001300  EF07  F00A         	goto	l3243
  4678   001304                     u2350:
  4679   001304  0E00               	movlw	0
  4680   001306  6E09               	movwf	___flge@ff1^0,c
  4681   001308  0E00               	movlw	0
  4682   00130A  6E0A               	movwf	(___flge@ff1+1)^0,c
  4683   00130C  0E20               	movlw	32
  4684   00130E  6E0B               	movwf	(___flge@ff1+2)^0,c
  4685   001310  0E40               	movlw	64
  4686   001312  6E0C               	movwf	(___flge@ff1+3)^0,c
  4687   001314  EE20 F014          	lfsr	2,20
  4688   001318  5027               	movf	motor_response@temp^0,w,c
  4689   00131A  26D9               	addwf	fsr2l,f,c
  4690   00131C  5028               	movf	(motor_response@temp+1)^0,w,c
  4691   00131E  22DA               	addwfc	fsr2h,f,c
  4692   001320  CFDE F00D          	movff	postinc2,___flge@ff2
  4693   001324  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4694   001328  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4695   00132C  CFDE F010          	movff	postinc2,___flge@ff2+3
  4696   001330  EC92  F017         	call	___flge	;wreg free
  4697   001334  B0D8               	btfsc	status,0,c
  4698   001336  EF9F  F009         	goto	u2361
  4699   00133A  EFA1  F009         	goto	u2360
  4700   00133E                     u2361:
  4701   00133E  EF07  F00A         	goto	l3243
  4702   001342                     u2360:
  4703   001342  EE20 F014          	lfsr	2,20
  4704   001346  5027               	movf	motor_response@temp^0,w,c
  4705   001348  26D9               	addwf	fsr2l,f,c
  4706   00134A  5028               	movf	(motor_response@temp+1)^0,w,c
  4707   00134C  22DA               	addwfc	fsr2h,f,c
  4708   00134E  CFDE F009          	movff	postinc2,___flge@ff1
  4709   001352  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4710   001356  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4711   00135A  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4712   00135E  0E9A               	movlw	154
  4713   001360  6E0D               	movwf	___flge@ff2^0,c
  4714   001362  0E99               	movlw	153
  4715   001364  6E0E               	movwf	(___flge@ff2+1)^0,c
  4716   001366  0E39               	movlw	57
  4717   001368  6E0F               	movwf	(___flge@ff2+2)^0,c
  4718   00136A  0E40               	movlw	64
  4719   00136C  6E10               	movwf	(___flge@ff2+3)^0,c
  4720   00136E  EC92  F017         	call	___flge	;wreg free
  4721   001372  B0D8               	btfsc	status,0,c
  4722   001374  EFBE  F009         	goto	u2371
  4723   001378  EFC0  F009         	goto	u2370
  4724   00137C                     u2371:
  4725   00137C  EF07  F00A         	goto	l3243
  4726   001380                     u2370:
  4727   001380                     
  4728                           ;color.c: 202:             LATFbits.LATF0 = !LATFbits.LATF0;
  4729   001380  A07E               	btfss	126,0,c	;volatile
  4730   001382  EFC5  F009         	goto	u2381
  4731   001386  EFC9  F009         	goto	u2380
  4732   00138A                     u2381:
  4733   00138A  6A2D               	clrf	??_motor_response^0,c
  4734   00138C  2A2D               	incf	??_motor_response^0,f,c
  4735   00138E  EFCA  F009         	goto	u2398
  4736   001392                     u2380:
  4737   001392  6A2D               	clrf	??_motor_response^0,c
  4738   001394                     u2398:
  4739   001394  507E               	movf	126,w,c	;volatile
  4740   001396  182D               	xorwf	??_motor_response^0,w,c
  4741   001398  0BFE               	andlw	-2
  4742   00139A  182D               	xorwf	??_motor_response^0,w,c
  4743   00139C  6E7E               	movwf	126,c	;volatile
  4744   00139E                     
  4745                           ;color.c: 203:             turnPrep(mL, mR);
  4746   00139E  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4747   0013A2  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4748   0013A6  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4749   0013AA  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4750   0013AE  EC64  F01B         	call	_turnPrep	;wreg free
  4751   0013B2                     
  4752                           ;color.c: 204:             turnLeft(mL, mR);
  4753   0013B2  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4754   0013B6  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4755   0013BA  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4756   0013BE  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4757   0013C2  EC90  F01A         	call	_turnLeft	;wreg free
  4758   0013C6                     
  4759                           ;color.c: 205:             _delay((unsigned long)((430)*(64000000/4000.0)));
  4760   0013C6  0E23               	movlw	35
  4761   0013C8  6E2E               	movwf	(??_motor_response+1)^0,c
  4762   0013CA  0EE7               	movlw	231
  4763   0013CC  6E2D               	movwf	??_motor_response^0,c
  4764   0013CE  0EF8               	movlw	248
  4765   0013D0                     u3967:
  4766   0013D0  2EE8               	decfsz	wreg,f,c
  4767   0013D2  D7FE               	bra	u3967
  4768   0013D4  2E2D               	decfsz	??_motor_response^0,f,c
  4769   0013D6  D7FC               	bra	u3967
  4770   0013D8  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4771   0013DA  D7FA               	bra	u3967
  4772   0013DC                     
  4773                           ;color.c: 206:             norm_stop(mL, mR);
  4774   0013DC  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  4775   0013E0  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  4776   0013E4  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  4777   0013E8  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  4778   0013EC  EC91  F01C         	call	_norm_stop	;wreg free
  4779   0013F0                     
  4780                           ;color.c: 207:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  4781   0013F0  0E52               	movlw	82
  4782   0013F2  6E2E               	movwf	(??_motor_response+1)^0,c
  4783   0013F4  0E2B               	movlw	43
  4784   0013F6  6E2D               	movwf	??_motor_response^0,c
  4785   0013F8  0E00               	movlw	0
  4786   0013FA                     u3977:
  4787   0013FA  2EE8               	decfsz	wreg,f,c
  4788   0013FC  D7FE               	bra	u3977
  4789   0013FE  2E2D               	decfsz	??_motor_response^0,f,c
  4790   001400  D7FC               	bra	u3977
  4791   001402  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4792   001404  D7FA               	bra	u3977
  4793   001406  D000               	nop2	
  4794   001408                     
  4795                           ;color.c: 208:             return 7;
  4796   001408  0E07               	movlw	7
  4797   00140A  EF15  F00D         	goto	l155
  4798   00140E                     l3243:
  4799                           
  4800                           ;color.c: 214:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  4801   00140E  EE20 F01C          	lfsr	2,28
  4802   001412  5027               	movf	motor_response@temp^0,w,c
  4803   001414  26D9               	addwf	fsr2l,f,c
  4804   001416  5028               	movf	(motor_response@temp+1)^0,w,c
  4805   001418  22DA               	addwfc	fsr2h,f,c
  4806   00141A  CFDE F009          	movff	postinc2,___flge@ff1
  4807   00141E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4808   001422  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4809   001426  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4810   00142A  C0C8  F00D         	movff	_CR3U,___flge@ff2
  4811   00142E  C0C9  F00E         	movff	_CR3U+1,___flge@ff2+1
  4812   001432  C0CA  F00F         	movff	_CR3U+2,___flge@ff2+2
  4813   001436  C0CB  F010         	movff	_CR3U+3,___flge@ff2+3
  4814   00143A  EC92  F017         	call	___flge	;wreg free
  4815   00143E  B0D8               	btfsc	status,0,c
  4816   001440  EF24  F00A         	goto	u2401
  4817   001444  EF26  F00A         	goto	u2400
  4818   001448                     u2401:
  4819   001448  EFC4  F00B         	goto	l3289
  4820   00144C                     u2400:
  4821   00144C  C0C4  F009         	movff	_CR3L,___flge@ff1
  4822   001450  C0C5  F00A         	movff	_CR3L+1,___flge@ff1+1
  4823   001454  C0C6  F00B         	movff	_CR3L+2,___flge@ff1+2
  4824   001458  C0C7  F00C         	movff	_CR3L+3,___flge@ff1+3
  4825   00145C  EE20 F01C          	lfsr	2,28
  4826   001460  5027               	movf	motor_response@temp^0,w,c
  4827   001462  26D9               	addwf	fsr2l,f,c
  4828   001464  5028               	movf	(motor_response@temp+1)^0,w,c
  4829   001466  22DA               	addwfc	fsr2h,f,c
  4830   001468  CFDE F00D          	movff	postinc2,___flge@ff2
  4831   00146C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4832   001470  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4833   001474  CFDE F010          	movff	postinc2,___flge@ff2+3
  4834   001478  EC92  F017         	call	___flge	;wreg free
  4835   00147C  B0D8               	btfsc	status,0,c
  4836   00147E  EF43  F00A         	goto	u2411
  4837   001482  EF45  F00A         	goto	u2410
  4838   001486                     u2411:
  4839   001486  EFC4  F00B         	goto	l3289
  4840   00148A                     u2410:
  4841   00148A                     
  4842                           ;color.c: 215:         if (temp->norm_G > 8) {
  4843   00148A  0E00               	movlw	0
  4844   00148C  6E09               	movwf	___flge@ff1^0,c
  4845   00148E  0E00               	movlw	0
  4846   001490  6E0A               	movwf	(___flge@ff1+1)^0,c
  4847   001492  0E00               	movlw	0
  4848   001494  6E0B               	movwf	(___flge@ff1+2)^0,c
  4849   001496  0E41               	movlw	65
  4850   001498  6E0C               	movwf	(___flge@ff1+3)^0,c
  4851   00149A  EE20 F014          	lfsr	2,20
  4852   00149E  5027               	movf	motor_response@temp^0,w,c
  4853   0014A0  26D9               	addwf	fsr2l,f,c
  4854   0014A2  5028               	movf	(motor_response@temp+1)^0,w,c
  4855   0014A4  22DA               	addwfc	fsr2h,f,c
  4856   0014A6  CFDE F00D          	movff	postinc2,___flge@ff2
  4857   0014AA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4858   0014AE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4859   0014B2  CFDE F010          	movff	postinc2,___flge@ff2+3
  4860   0014B6  EC92  F017         	call	___flge	;wreg free
  4861   0014BA  B0D8               	btfsc	status,0,c
  4862   0014BC  EF62  F00A         	goto	u2421
  4863   0014C0  EF64  F00A         	goto	u2420
  4864   0014C4                     u2421:
  4865   0014C4  EF87  F00A         	goto	l3257
  4866   0014C8                     u2420:
  4867   0014C8                     
  4868                           ;color.c: 216:             turnPrep(mL, mR);
  4869   0014C8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4870   0014CC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4871   0014D0  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4872   0014D4  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4873   0014D8  EC64  F01B         	call	_turnPrep	;wreg free
  4874                           
  4875                           ;color.c: 217:             turnRight(mL, mR);
  4876   0014DC  C029  F01C         	movff	motor_response@mL,turnRight@mL
  4877   0014E0  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  4878   0014E4  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  4879   0014E8  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  4880   0014EC  EC57  F01A         	call	_turnRight	;wreg free
  4881   0014F0                     
  4882                           ;color.c: 218:             _delay((unsigned long)((280)*(64000000/4000.0)));
  4883   0014F0  0E17               	movlw	23
  4884   0014F2  6E2E               	movwf	(??_motor_response+1)^0,c
  4885   0014F4  0EBB               	movlw	187
  4886   0014F6  6E2D               	movwf	??_motor_response^0,c
  4887   0014F8  0E1D               	movlw	29
  4888   0014FA                     u3987:
  4889   0014FA  2EE8               	decfsz	wreg,f,c
  4890   0014FC  D7FE               	bra	u3987
  4891   0014FE  2E2D               	decfsz	??_motor_response^0,f,c
  4892   001500  D7FC               	bra	u3987
  4893   001502  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4894   001504  D7FA               	bra	u3987
  4895   001506  F000               	nop	
  4896   001508                     
  4897                           ;color.c: 219:             return 1;
  4898   001508  0E01               	movlw	1
  4899   00150A  EF15  F00D         	goto	l155
  4900   00150E                     l3257:
  4901                           
  4902                           ;color.c: 221:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  4903   00150E  0E00               	movlw	0
  4904   001510  6E09               	movwf	___flge@ff1^0,c
  4905   001512  0E00               	movlw	0
  4906   001514  6E0A               	movwf	(___flge@ff1+1)^0,c
  4907   001516  0E90               	movlw	144
  4908   001518  6E0B               	movwf	(___flge@ff1+2)^0,c
  4909   00151A  0E40               	movlw	64
  4910   00151C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4911   00151E  EE20 F018          	lfsr	2,24
  4912   001522  5027               	movf	motor_response@temp^0,w,c
  4913   001524  26D9               	addwf	fsr2l,f,c
  4914   001526  5028               	movf	(motor_response@temp+1)^0,w,c
  4915   001528  22DA               	addwfc	fsr2h,f,c
  4916   00152A  CFDE F00D          	movff	postinc2,___flge@ff2
  4917   00152E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4918   001532  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4919   001536  CFDE F010          	movff	postinc2,___flge@ff2+3
  4920   00153A  EC92  F017         	call	___flge	;wreg free
  4921   00153E  B0D8               	btfsc	status,0,c
  4922   001540  EFA4  F00A         	goto	u2431
  4923   001544  EFA6  F00A         	goto	u2430
  4924   001548                     u2431:
  4925   001548  EFE8  F00A         	goto	l3269
  4926   00154C                     u2430:
  4927   00154C  EE20 F018          	lfsr	2,24
  4928   001550  5027               	movf	motor_response@temp^0,w,c
  4929   001552  26D9               	addwf	fsr2l,f,c
  4930   001554  5028               	movf	(motor_response@temp+1)^0,w,c
  4931   001556  22DA               	addwfc	fsr2h,f,c
  4932   001558  CFDE F009          	movff	postinc2,___flge@ff1
  4933   00155C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4934   001560  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4935   001564  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4936   001568  0E00               	movlw	0
  4937   00156A  6E0D               	movwf	___flge@ff2^0,c
  4938   00156C  0E00               	movlw	0
  4939   00156E  6E0E               	movwf	(___flge@ff2+1)^0,c
  4940   001570  0EB0               	movlw	176
  4941   001572  6E0F               	movwf	(___flge@ff2+2)^0,c
  4942   001574  0E40               	movlw	64
  4943   001576  6E10               	movwf	(___flge@ff2+3)^0,c
  4944   001578  EC92  F017         	call	___flge	;wreg free
  4945   00157C  B0D8               	btfsc	status,0,c
  4946   00157E  EFC3  F00A         	goto	u2441
  4947   001582  EFC5  F00A         	goto	u2440
  4948   001586                     u2441:
  4949   001586  EFE8  F00A         	goto	l3269
  4950   00158A                     u2440:
  4951   00158A                     
  4952                           ;color.c: 222:             turnPrep(mL, mR);
  4953   00158A  C029  F021         	movff	motor_response@mL,turnPrep@mL
  4954   00158E  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  4955   001592  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  4956   001596  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  4957   00159A  EC64  F01B         	call	_turnPrep	;wreg free
  4958                           
  4959                           ;color.c: 223:             turnLeft(mL, mR);
  4960   00159E  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  4961   0015A2  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  4962   0015A6  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  4963   0015AA  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  4964   0015AE  EC90  F01A         	call	_turnLeft	;wreg free
  4965   0015B2                     
  4966                           ;color.c: 224:             _delay((unsigned long)((270)*(64000000/4000.0)));
  4967   0015B2  0E16               	movlw	22
  4968   0015B4  6E2E               	movwf	(??_motor_response+1)^0,c
  4969   0015B6  0EEB               	movlw	235
  4970   0015B8  6E2D               	movwf	??_motor_response^0,c
  4971   0015BA  0E53               	movlw	83
  4972   0015BC                     u3997:
  4973   0015BC  2EE8               	decfsz	wreg,f,c
  4974   0015BE  D7FE               	bra	u3997
  4975   0015C0  2E2D               	decfsz	??_motor_response^0,f,c
  4976   0015C2  D7FC               	bra	u3997
  4977   0015C4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  4978   0015C6  D7FA               	bra	u3997
  4979   0015C8  F000               	nop	
  4980   0015CA                     
  4981                           ;color.c: 225:             return 2;
  4982   0015CA  0E02               	movlw	2
  4983   0015CC  EF15  F00D         	goto	l155
  4984   0015D0                     l3269:
  4985                           
  4986                           ;color.c: 227:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  4987   0015D0  0ECD               	movlw	205
  4988   0015D2  6E09               	movwf	___flge@ff1^0,c
  4989   0015D4  0ECC               	movlw	204
  4990   0015D6  6E0A               	movwf	(___flge@ff1+1)^0,c
  4991   0015D8  0E2C               	movlw	44
  4992   0015DA  6E0B               	movwf	(___flge@ff1+2)^0,c
  4993   0015DC  0E40               	movlw	64
  4994   0015DE  6E0C               	movwf	(___flge@ff1+3)^0,c
  4995   0015E0  EE20 F018          	lfsr	2,24
  4996   0015E4  5027               	movf	motor_response@temp^0,w,c
  4997   0015E6  26D9               	addwf	fsr2l,f,c
  4998   0015E8  5028               	movf	(motor_response@temp+1)^0,w,c
  4999   0015EA  22DA               	addwfc	fsr2h,f,c
  5000   0015EC  CFDE F00D          	movff	postinc2,___flge@ff2
  5001   0015F0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5002   0015F4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5003   0015F8  CFDE F010          	movff	postinc2,___flge@ff2+3
  5004   0015FC  EC92  F017         	call	___flge	;wreg free
  5005   001600  B0D8               	btfsc	status,0,c
  5006   001602  EF05  F00B         	goto	u2451
  5007   001606  EF07  F00B         	goto	u2450
  5008   00160A                     u2451:
  5009   00160A  EFC4  F00B         	goto	l3289
  5010   00160E                     u2450:
  5011   00160E  EE20 F018          	lfsr	2,24
  5012   001612  5027               	movf	motor_response@temp^0,w,c
  5013   001614  26D9               	addwf	fsr2l,f,c
  5014   001616  5028               	movf	(motor_response@temp+1)^0,w,c
  5015   001618  22DA               	addwfc	fsr2h,f,c
  5016   00161A  CFDE F009          	movff	postinc2,___flge@ff1
  5017   00161E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5018   001622  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5019   001626  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5020   00162A  0E33               	movlw	51
  5021   00162C  6E0D               	movwf	___flge@ff2^0,c
  5022   00162E  0E33               	movlw	51
  5023   001630  6E0E               	movwf	(___flge@ff2+1)^0,c
  5024   001632  0E53               	movlw	83
  5025   001634  6E0F               	movwf	(___flge@ff2+2)^0,c
  5026   001636  0E40               	movlw	64
  5027   001638  6E10               	movwf	(___flge@ff2+3)^0,c
  5028   00163A  EC92  F017         	call	___flge	;wreg free
  5029   00163E  B0D8               	btfsc	status,0,c
  5030   001640  EF24  F00B         	goto	u2461
  5031   001644  EF26  F00B         	goto	u2460
  5032   001648                     u2461:
  5033   001648  EFC4  F00B         	goto	l3289
  5034   00164C                     u2460:
  5035   00164C  0ECD               	movlw	205
  5036   00164E  6E09               	movwf	___flge@ff1^0,c
  5037   001650  0ECC               	movlw	204
  5038   001652  6E0A               	movwf	(___flge@ff1+1)^0,c
  5039   001654  0E2C               	movlw	44
  5040   001656  6E0B               	movwf	(___flge@ff1+2)^0,c
  5041   001658  0E40               	movlw	64
  5042   00165A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5043   00165C  EE20 F010          	lfsr	2,16
  5044   001660  5027               	movf	motor_response@temp^0,w,c
  5045   001662  26D9               	addwf	fsr2l,f,c
  5046   001664  5028               	movf	(motor_response@temp+1)^0,w,c
  5047   001666  22DA               	addwfc	fsr2h,f,c
  5048   001668  CFDE F00D          	movff	postinc2,___flge@ff2
  5049   00166C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5050   001670  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5051   001674  CFDE F010          	movff	postinc2,___flge@ff2+3
  5052   001678  EC92  F017         	call	___flge	;wreg free
  5053   00167C  B0D8               	btfsc	status,0,c
  5054   00167E  EF43  F00B         	goto	u2471
  5055   001682  EF45  F00B         	goto	u2470
  5056   001686                     u2471:
  5057   001686  EFC4  F00B         	goto	l3289
  5058   00168A                     u2470:
  5059   00168A  EE20 F010          	lfsr	2,16
  5060   00168E  5027               	movf	motor_response@temp^0,w,c
  5061   001690  26D9               	addwf	fsr2l,f,c
  5062   001692  5028               	movf	(motor_response@temp+1)^0,w,c
  5063   001694  22DA               	addwfc	fsr2h,f,c
  5064   001696  CFDE F009          	movff	postinc2,___flge@ff1
  5065   00169A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5066   00169E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5067   0016A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5068   0016A6  0E33               	movlw	51
  5069   0016A8  6E0D               	movwf	___flge@ff2^0,c
  5070   0016AA  0E33               	movlw	51
  5071   0016AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5072   0016AE  0E53               	movlw	83
  5073   0016B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5074   0016B2  0E40               	movlw	64
  5075   0016B4  6E10               	movwf	(___flge@ff2+3)^0,c
  5076   0016B6  EC92  F017         	call	___flge	;wreg free
  5077   0016BA  B0D8               	btfsc	status,0,c
  5078   0016BC  EF62  F00B         	goto	u2481
  5079   0016C0  EF64  F00B         	goto	u2480
  5080   0016C4                     u2481:
  5081   0016C4  EFC4  F00B         	goto	l3289
  5082   0016C8                     u2480:
  5083   0016C8  0ECD               	movlw	205
  5084   0016CA  6E09               	movwf	___flge@ff1^0,c
  5085   0016CC  0ECC               	movlw	204
  5086   0016CE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5087   0016D0  0E2C               	movlw	44
  5088   0016D2  6E0B               	movwf	(___flge@ff1+2)^0,c
  5089   0016D4  0E40               	movlw	64
  5090   0016D6  6E0C               	movwf	(___flge@ff1+3)^0,c
  5091   0016D8  EE20 F014          	lfsr	2,20
  5092   0016DC  5027               	movf	motor_response@temp^0,w,c
  5093   0016DE  26D9               	addwf	fsr2l,f,c
  5094   0016E0  5028               	movf	(motor_response@temp+1)^0,w,c
  5095   0016E2  22DA               	addwfc	fsr2h,f,c
  5096   0016E4  CFDE F00D          	movff	postinc2,___flge@ff2
  5097   0016E8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5098   0016EC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5099   0016F0  CFDE F010          	movff	postinc2,___flge@ff2+3
  5100   0016F4  EC92  F017         	call	___flge	;wreg free
  5101   0016F8  B0D8               	btfsc	status,0,c
  5102   0016FA  EF81  F00B         	goto	u2491
  5103   0016FE  EF83  F00B         	goto	u2490
  5104   001702                     u2491:
  5105   001702  EFC4  F00B         	goto	l3289
  5106   001706                     u2490:
  5107   001706  EE20 F014          	lfsr	2,20
  5108   00170A  5027               	movf	motor_response@temp^0,w,c
  5109   00170C  26D9               	addwf	fsr2l,f,c
  5110   00170E  5028               	movf	(motor_response@temp+1)^0,w,c
  5111   001710  22DA               	addwfc	fsr2h,f,c
  5112   001712  CFDE F009          	movff	postinc2,___flge@ff1
  5113   001716  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5114   00171A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5115   00171E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5116   001722  0E33               	movlw	51
  5117   001724  6E0D               	movwf	___flge@ff2^0,c
  5118   001726  0E33               	movlw	51
  5119   001728  6E0E               	movwf	(___flge@ff2+1)^0,c
  5120   00172A  0E53               	movlw	83
  5121   00172C  6E0F               	movwf	(___flge@ff2+2)^0,c
  5122   00172E  0E40               	movlw	64
  5123   001730  6E10               	movwf	(___flge@ff2+3)^0,c
  5124   001732  EC92  F017         	call	___flge	;wreg free
  5125   001736  B0D8               	btfsc	status,0,c
  5126   001738  EFA0  F00B         	goto	u2501
  5127   00173C  EFA2  F00B         	goto	u2500
  5128   001740                     u2501:
  5129   001740  EFC4  F00B         	goto	l3289
  5130   001744                     u2500:
  5131   001744                     
  5132                           ;color.c: 228:             turnPrep(mL, mR);
  5133   001744  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5134   001748  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5135   00174C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5136   001750  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5137   001754  EC64  F01B         	call	_turnPrep	;wreg free
  5138                           
  5139                           ;color.c: 229:             turnLeft(mL, mR);
  5140   001758  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5141   00175C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5142   001760  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5143   001764  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5144   001768  EC90  F01A         	call	_turnLeft	;wreg free
  5145   00176C                     
  5146                           ;color.c: 230:             _delay((unsigned long)((485)*(64000000/4000.0)));
  5147   00176C  0E28               	movlw	40
  5148   00176E  6E2E               	movwf	(??_motor_response+1)^0,c
  5149   001770  0E5E               	movlw	94
  5150   001772  6E2D               	movwf	??_motor_response^0,c
  5151   001774  0ED0               	movlw	208
  5152   001776                     u4007:
  5153   001776  2EE8               	decfsz	wreg,f,c
  5154   001778  D7FE               	bra	u4007
  5155   00177A  2E2D               	decfsz	??_motor_response^0,f,c
  5156   00177C  D7FC               	bra	u4007
  5157   00177E  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5158   001780  D7FA               	bra	u4007
  5159   001782                     
  5160                           ;color.c: 231:             return 3;
  5161   001782  0E03               	movlw	3
  5162   001784  EF15  F00D         	goto	l155
  5163   001788                     l3289:
  5164                           
  5165                           ;color.c: 234:     if (temp->norm_C > CR1L) {
  5166   001788  C045  F009         	movff	_CR1L,___flge@ff1
  5167   00178C  C046  F00A         	movff	_CR1L+1,___flge@ff1+1
  5168   001790  C047  F00B         	movff	_CR1L+2,___flge@ff1+2
  5169   001794  C048  F00C         	movff	_CR1L+3,___flge@ff1+3
  5170   001798  EE20 F01C          	lfsr	2,28
  5171   00179C  5027               	movf	motor_response@temp^0,w,c
  5172   00179E  26D9               	addwf	fsr2l,f,c
  5173   0017A0  5028               	movf	(motor_response@temp+1)^0,w,c
  5174   0017A2  22DA               	addwfc	fsr2h,f,c
  5175   0017A4  CFDE F00D          	movff	postinc2,___flge@ff2
  5176   0017A8  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5177   0017AC  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5178   0017B0  CFDE F010          	movff	postinc2,___flge@ff2+3
  5179   0017B4  EC92  F017         	call	___flge	;wreg free
  5180   0017B8  B0D8               	btfsc	status,0,c
  5181   0017BA  EFE1  F00B         	goto	u2511
  5182   0017BE  EFE3  F00B         	goto	u2510
  5183   0017C2                     u2511:
  5184   0017C2  EF8B  F00C         	goto	l3323
  5185   0017C6                     u2510:
  5186   0017C6                     
  5187                           ;color.c: 235:         if (temp->norm_B > 5) {
  5188   0017C6  0E00               	movlw	0
  5189   0017C8  6E09               	movwf	___flge@ff1^0,c
  5190   0017CA  0E00               	movlw	0
  5191   0017CC  6E0A               	movwf	(___flge@ff1+1)^0,c
  5192   0017CE  0EA0               	movlw	160
  5193   0017D0  6E0B               	movwf	(___flge@ff1+2)^0,c
  5194   0017D2  0E40               	movlw	64
  5195   0017D4  6E0C               	movwf	(___flge@ff1+3)^0,c
  5196   0017D6  EE20 F018          	lfsr	2,24
  5197   0017DA  5027               	movf	motor_response@temp^0,w,c
  5198   0017DC  26D9               	addwf	fsr2l,f,c
  5199   0017DE  5028               	movf	(motor_response@temp+1)^0,w,c
  5200   0017E0  22DA               	addwfc	fsr2h,f,c
  5201   0017E2  CFDE F00D          	movff	postinc2,___flge@ff2
  5202   0017E6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5203   0017EA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5204   0017EE  CFDE F010          	movff	postinc2,___flge@ff2+3
  5205   0017F2  EC92  F017         	call	___flge	;wreg free
  5206   0017F6  B0D8               	btfsc	status,0,c
  5207   0017F8  EF00  F00C         	goto	u2521
  5208   0017FC  EF02  F00C         	goto	u2520
  5209   001800                     u2521:
  5210   001800  EF46  F00C         	goto	l3307
  5211   001804                     u2520:
  5212   001804                     
  5213                           ;color.c: 236:             reverse(mL, mR);
  5214   001804  C029  F01C         	movff	motor_response@mL,reverse@mL
  5215   001808  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5216   00180C  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5217   001810  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5218   001814  EC14  F018         	call	_reverse	;wreg free
  5219   001818                     
  5220                           ;color.c: 237:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5221   001818  0EF4               	movlw	244
  5222   00181A  6E2E               	movwf	(??_motor_response+1)^0,c
  5223   00181C  0E82               	movlw	130
  5224   00181E  6E2D               	movwf	??_motor_response^0,c
  5225   001820  0E05               	movlw	5
  5226   001822                     u4017:
  5227   001822  2EE8               	decfsz	wreg,f,c
  5228   001824  D7FE               	bra	u4017
  5229   001826  2E2D               	decfsz	??_motor_response^0,f,c
  5230   001828  D7FC               	bra	u4017
  5231   00182A  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5232   00182C  D7FA               	bra	u4017
  5233   00182E  F000               	nop	
  5234   001830                     
  5235                           ;color.c: 238:             norm_stop(mL, mR);
  5236   001830  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5237   001834  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5238   001838  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5239   00183C  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5240   001840  EC91  F01C         	call	_norm_stop	;wreg free
  5241                           
  5242                           ;color.c: 239:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5243   001844  0E09               	movlw	9
  5244   001846  6E2E               	movwf	(??_motor_response+1)^0,c
  5245   001848  0E1E               	movlw	30
  5246   00184A  6E2D               	movwf	??_motor_response^0,c
  5247   00184C  0EE4               	movlw	228
  5248   00184E                     u4027:
  5249   00184E  2EE8               	decfsz	wreg,f,c
  5250   001850  D7FE               	bra	u4027
  5251   001852  2E2D               	decfsz	??_motor_response^0,f,c
  5252   001854  D7FC               	bra	u4027
  5253   001856  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5254   001858  D7FA               	bra	u4027
  5255   00185A  D000               	nop2	
  5256   00185C                     
  5257                           ;color.c: 240:             turnRight(mL, mR);
  5258   00185C  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5259   001860  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5260   001864  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5261   001868  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5262   00186C  EC57  F01A         	call	_turnRight	;wreg free
  5263   001870                     
  5264                           ;color.c: 241:             _delay((unsigned long)((290)*(64000000/4000.0)));
  5265   001870  0E18               	movlw	24
  5266   001872  6E2E               	movwf	(??_motor_response+1)^0,c
  5267   001874  0E8A               	movlw	138
  5268   001876  6E2D               	movwf	??_motor_response^0,c
  5269   001878  0EE8               	movlw	232
  5270   00187A                     u4037:
  5271   00187A  2EE8               	decfsz	wreg,f,c
  5272   00187C  D7FE               	bra	u4037
  5273   00187E  2E2D               	decfsz	??_motor_response^0,f,c
  5274   001880  D7FC               	bra	u4037
  5275   001882  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5276   001884  D7FA               	bra	u4037
  5277   001886                     
  5278                           ;color.c: 242:             return 4;
  5279   001886  0E04               	movlw	4
  5280   001888  EF15  F00D         	goto	l155
  5281   00188C                     l3307:
  5282                           
  5283                           ;color.c: 245:         if (temp->norm_B < 5) {
  5284   00188C  EE20 F018          	lfsr	2,24
  5285   001890  5027               	movf	motor_response@temp^0,w,c
  5286   001892  26D9               	addwf	fsr2l,f,c
  5287   001894  5028               	movf	(motor_response@temp+1)^0,w,c
  5288   001896  22DA               	addwfc	fsr2h,f,c
  5289   001898  CFDE F009          	movff	postinc2,___flge@ff1
  5290   00189C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5291   0018A0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5292   0018A4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5293   0018A8  0E00               	movlw	0
  5294   0018AA  6E0D               	movwf	___flge@ff2^0,c
  5295   0018AC  0E00               	movlw	0
  5296   0018AE  6E0E               	movwf	(___flge@ff2+1)^0,c
  5297   0018B0  0EA0               	movlw	160
  5298   0018B2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5299   0018B4  0E40               	movlw	64
  5300   0018B6  6E10               	movwf	(___flge@ff2+3)^0,c
  5301   0018B8  EC92  F017         	call	___flge	;wreg free
  5302   0018BC  B0D8               	btfsc	status,0,c
  5303   0018BE  EF63  F00C         	goto	u2531
  5304   0018C2  EF65  F00C         	goto	u2530
  5305   0018C6                     u2531:
  5306   0018C6  EF15  F00D         	goto	l155
  5307   0018CA                     u2530:
  5308   0018CA                     
  5309                           ;color.c: 247:             motor_return = 1;
  5310   0018CA  0E01               	movlw	1
  5311   0018CC  0100               	movlb	0	; () banked
  5312   0018CE  6FD8               	movwf	_motor_return& (0+255),b
  5313   0018D0                     
  5314                           ; BSR set to: 0
  5315                           ;color.c: 248:             LATDbits.LATD4 = 1;
  5316   0018D0  887C               	bsf	124,4,c	;volatile
  5317   0018D2                     
  5318                           ; BSR set to: 0
  5319                           ;color.c: 249:             turnPrep(mL, mR);
  5320   0018D2  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5321   0018D6  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5322   0018DA  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5323   0018DE  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5324   0018E2  EC64  F01B         	call	_turnPrep	;wreg free
  5325   0018E6                     
  5326                           ;color.c: 250:             turnLeft(mL, mR);
  5327   0018E6  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5328   0018EA  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5329   0018EE  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5330   0018F2  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5331   0018F6  EC90  F01A         	call	_turnLeft	;wreg free
  5332   0018FA                     
  5333                           ;color.c: 251:             _delay((unsigned long)((470)*(64000000/4000.0)));
  5334   0018FA  0E27               	movlw	39
  5335   0018FC  6E2E               	movwf	(??_motor_response+1)^0,c
  5336   0018FE  0E27               	movlw	39
  5337   001900  6E2D               	movwf	??_motor_response^0,c
  5338   001902  0E20               	movlw	32
  5339   001904                     u4047:
  5340   001904  2EE8               	decfsz	wreg,f,c
  5341   001906  D7FE               	bra	u4047
  5342   001908  2E2D               	decfsz	??_motor_response^0,f,c
  5343   00190A  D7FC               	bra	u4047
  5344   00190C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5345   00190E  D7FA               	bra	u4047
  5346   001910                     
  5347                           ;color.c: 252:             return 8;
  5348   001910  0E08               	movlw	8
  5349   001912  EF15  F00D         	goto	l155
  5350   001916                     l3323:
  5351                           
  5352                           ;color.c: 255:         if (lost_ctr < 4) {
  5353   001916  BE4E               	btfsc	(_lost_ctr+1)^0,7,c
  5354   001918  EF99  F00C         	goto	u2540
  5355   00191C  504E               	movf	(_lost_ctr+1)^0,w,c
  5356   00191E  E107               	bnz	u2541
  5357   001920  0E04               	movlw	4
  5358   001922  5C4D               	subwf	_lost_ctr^0,w,c
  5359   001924  B0D8               	btfsc	status,0,c
  5360   001926  EF97  F00C         	goto	u2541
  5361   00192A  EF99  F00C         	goto	u2540
  5362   00192E                     u2541:
  5363   00192E  EF9D  F00C         	goto	l3327
  5364   001932                     u2540:
  5365   001932                     
  5366                           ;color.c: 256:             lost_ctr++;
  5367   001932  4A4D               	infsnz	_lost_ctr^0,f,c
  5368   001934  2A4E               	incf	(_lost_ctr+1)^0,f,c
  5369                           
  5370                           ;color.c: 257:         } else {
  5371   001936  EF05  F00D         	goto	l3347
  5372   00193A                     l3327:
  5373                           
  5374                           ;color.c: 258:             norm_stop(mL, mR);
  5375   00193A  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5376   00193E  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5377   001942  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5378   001946  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5379   00194A  EC91  F01C         	call	_norm_stop	;wreg free
  5380   00194E                     
  5381                           ;color.c: 259:             _delay((unsigned long)((80)*(64000000/4000.0)));
  5382   00194E  0E07               	movlw	7
  5383   001950  6E2E               	movwf	(??_motor_response+1)^0,c
  5384   001952  0E7F               	movlw	127
  5385   001954  6E2D               	movwf	??_motor_response^0,c
  5386   001956  0E50               	movlw	80
  5387   001958                     u4057:
  5388   001958  2EE8               	decfsz	wreg,f,c
  5389   00195A  D7FE               	bra	u4057
  5390   00195C  2E2D               	decfsz	??_motor_response^0,f,c
  5391   00195E  D7FC               	bra	u4057
  5392   001960  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5393   001962  D7FA               	bra	u4057
  5394   001964                     
  5395                           ;color.c: 260:             for (int j = 0; j <= 90; j++) {
  5396   001964  0E00               	movlw	0
  5397   001966  6E30               	movwf	(motor_response@j+1)^0,c
  5398   001968  0E00               	movlw	0
  5399   00196A  6E2F               	movwf	motor_response@j^0,c
  5400   00196C  BE30               	btfsc	(motor_response@j+1)^0,7,c
  5401   00196E  EFC2  F00C         	goto	u2551
  5402   001972  5030               	movf	(motor_response@j+1)^0,w,c
  5403   001974  E109               	bnz	u2550
  5404   001976  0E5B               	movlw	91
  5405   001978  5C2F               	subwf	motor_response@j^0,w,c
  5406   00197A  A0D8               	btfss	status,0,c
  5407   00197C  EFC2  F00C         	goto	u2551
  5408   001980  EFC4  F00C         	goto	u2550
  5409   001984                     u2551:
  5410   001984  EFC6  F00C         	goto	l3337
  5411   001988                     u2550:
  5412   001988  EF01  F00D         	goto	l3345
  5413   00198C                     l3337:
  5414                           
  5415                           ;color.c: 261:                 turnLeft(mL, mR);
  5416   00198C  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5417   001990  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5418   001994  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5419   001998  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5420   00199C  EC90  F01A         	call	_turnLeft	;wreg free
  5421   0019A0                     
  5422                           ;color.c: 262:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  5423   0019A0  0E03               	movlw	3
  5424   0019A2  6E2E               	movwf	(??_motor_response+1)^0,c
  5425   0019A4  0E70               	movlw	112
  5426   0019A6  6E2D               	movwf	??_motor_response^0,c
  5427   0019A8  0E5C               	movlw	92
  5428   0019AA                     u4067:
  5429   0019AA  2EE8               	decfsz	wreg,f,c
  5430   0019AC  D7FE               	bra	u4067
  5431   0019AE  2E2D               	decfsz	??_motor_response^0,f,c
  5432   0019B0  D7FC               	bra	u4067
  5433   0019B2  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5434   0019B4  D7FA               	bra	u4067
  5435   0019B6  D000               	nop2	
  5436   0019B8                     
  5437                           ;color.c: 263:                 norm_stop(mL, mR);
  5438   0019B8  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5439   0019BC  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5440   0019C0  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5441   0019C4  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5442   0019C8  EC91  F01C         	call	_norm_stop	;wreg free
  5443                           
  5444                           ;color.c: 264:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  5445   0019CC  0E05               	movlw	5
  5446   0019CE  6E2E               	movwf	(??_motor_response+1)^0,c
  5447   0019D0  0EDF               	movlw	223
  5448   0019D2  6E2D               	movwf	??_motor_response^0,c
  5449   0019D4  0EBC               	movlw	188
  5450   0019D6                     u4077:
  5451   0019D6  2EE8               	decfsz	wreg,f,c
  5452   0019D8  D7FE               	bra	u4077
  5453   0019DA  2E2D               	decfsz	??_motor_response^0,f,c
  5454   0019DC  D7FC               	bra	u4077
  5455   0019DE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5456   0019E0  D7FA               	bra	u4077
  5457   0019E2                     
  5458                           ;color.c: 265:             }
  5459   0019E2  4A2F               	infsnz	motor_response@j^0,f,c
  5460   0019E4  2A30               	incf	(motor_response@j+1)^0,f,c
  5461   0019E6  BE30               	btfsc	(motor_response@j+1)^0,7,c
  5462   0019E8  EFFF  F00C         	goto	u2561
  5463   0019EC  5030               	movf	(motor_response@j+1)^0,w,c
  5464   0019EE  E109               	bnz	u2560
  5465   0019F0  0E5B               	movlw	91
  5466   0019F2  5C2F               	subwf	motor_response@j^0,w,c
  5467   0019F4  A0D8               	btfss	status,0,c
  5468   0019F6  EFFF  F00C         	goto	u2561
  5469   0019FA  EF01  F00D         	goto	u2560
  5470   0019FE                     u2561:
  5471   0019FE  EFC6  F00C         	goto	l3337
  5472   001A02                     u2560:
  5473   001A02                     l3345:
  5474                           
  5475                           ;color.c: 266:             lost_ctr = 0;
  5476   001A02  0E00               	movlw	0
  5477   001A04  6E4E               	movwf	(_lost_ctr+1)^0,c
  5478   001A06  0E00               	movlw	0
  5479   001A08  6E4D               	movwf	_lost_ctr^0,c
  5480   001A0A                     l3347:
  5481                           
  5482                           ;color.c: 268:         if (interrupt_flag == 0) {
  5483   001A0A  5051               	movf	_interrupt_flag^0,w,c
  5484   001A0C  1052               	iorwf	(_interrupt_flag+1)^0,w,c
  5485   001A0E  A4D8               	btfss	status,2,c
  5486   001A10  EF0C  F00D         	goto	u2571
  5487   001A14  EF0E  F00D         	goto	u2570
  5488   001A18                     u2571:
  5489   001A18  EF11  F00D         	goto	l3351
  5490   001A1C                     u2570:
  5491   001A1C                     
  5492                           ;color.c: 269:             motor_return = 1;
  5493   001A1C  0E01               	movlw	1
  5494   001A1E  0100               	movlb	0	; () banked
  5495   001A20  6FD8               	movwf	_motor_return& (0+255),b
  5496   001A22                     l3351:
  5497                           
  5498                           ;color.c: 271:         buggy_step--;
  5499   001A22  064F               	decf	_buggy_step^0,f,c
  5500   001A24  A0D8               	btfss	status,0,c
  5501   001A26  0650               	decf	(_buggy_step+1)^0,f,c
  5502   001A28                     
  5503                           ;color.c: 272:         return 9;
  5504   001A28  0E09               	movlw	9
  5505   001A2A                     l155:
  5506   001A2A  0012               	return		;funcret
  5507   001A2C                     __end_of_motor_response:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _turnRight *****************
  5511 ;; Defined at:
  5512 ;;		line 144 in file "dc_motor.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5515 ;;		 -> main@mL(9), 
  5516 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5517 ;;		 -> main@mR(9), 
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;Total ram usage:        4 bytes
  5534 ;; Hardware stack levels used: 1
  5535 ;; Hardware stack levels required when called: 8
  5536 ;; This function calls:
  5537 ;;		_setMotorPWM
  5538 ;; This function is called by:
  5539 ;;		_motor_response
  5540 ;;		_motor_retrace
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text21
  5545   0034AE                     __ptext21:
  5546                           	callstack 0
  5547   0034AE                     _turnRight:
  5548                           	callstack 21
  5549   0034AE                     
  5550                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 60;
  5551   0034AE  C01C  FFD9         	movff	turnRight@mL,fsr2l
  5552   0034B2  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  5553   0034B6  0E3C               	movlw	60
  5554   0034B8  6EDF               	movwf	indf2,c
  5555                           
  5556                           ;dc_motor.c: 147:     mR->power = 60;
  5557   0034BA  C01E  FFD9         	movff	turnRight@mR,fsr2l
  5558   0034BE  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  5559   0034C2  0E3C               	movlw	60
  5560   0034C4  6EDF               	movwf	indf2,c
  5561   0034C6                     
  5562                           ;dc_motor.c: 148:     mL->brakemode = 1;
  5563   0034C6  EE20 F002          	lfsr	2,2
  5564   0034CA  501C               	movf	turnRight@mL^0,w,c
  5565   0034CC  26D9               	addwf	fsr2l,f,c
  5566   0034CE  501D               	movf	(turnRight@mL+1)^0,w,c
  5567   0034D0  22DA               	addwfc	fsr2h,f,c
  5568   0034D2  0E01               	movlw	1
  5569   0034D4  6EDF               	movwf	indf2,c
  5570   0034D6                     
  5571                           ;dc_motor.c: 149:     mR->brakemode = 1;
  5572   0034D6  EE20 F002          	lfsr	2,2
  5573   0034DA  501E               	movf	turnRight@mR^0,w,c
  5574   0034DC  26D9               	addwf	fsr2l,f,c
  5575   0034DE  501F               	movf	(turnRight@mR+1)^0,w,c
  5576   0034E0  22DA               	addwfc	fsr2h,f,c
  5577   0034E2  0E01               	movlw	1
  5578   0034E4  6EDF               	movwf	indf2,c
  5579   0034E6                     
  5580                           ;dc_motor.c: 150:     mR->direction = 0;
  5581   0034E6  EE20 F001          	lfsr	2,1
  5582   0034EA  501E               	movf	turnRight@mR^0,w,c
  5583   0034EC  26D9               	addwf	fsr2l,f,c
  5584   0034EE  501F               	movf	(turnRight@mR+1)^0,w,c
  5585   0034F0  22DA               	addwfc	fsr2h,f,c
  5586   0034F2  0E00               	movlw	0
  5587   0034F4  6EDF               	movwf	indf2,c
  5588   0034F6                     
  5589                           ;dc_motor.c: 151:     mL->direction = 1;
  5590   0034F6  EE20 F001          	lfsr	2,1
  5591   0034FA  501C               	movf	turnRight@mL^0,w,c
  5592   0034FC  26D9               	addwf	fsr2l,f,c
  5593   0034FE  501D               	movf	(turnRight@mL+1)^0,w,c
  5594   003500  22DA               	addwfc	fsr2h,f,c
  5595   003502  0E01               	movlw	1
  5596   003504  6EDF               	movwf	indf2,c
  5597   003506                     
  5598                           ;dc_motor.c: 152:     setMotorPWM(mL);
  5599   003506  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  5600   00350A  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  5601   00350E  ECDC  F016         	call	_setMotorPWM	;wreg free
  5602   003512                     
  5603                           ;dc_motor.c: 153:     setMotorPWM(mR);
  5604   003512  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  5605   003516  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  5606   00351A  ECDC  F016         	call	_setMotorPWM	;wreg free
  5607   00351E  0012               	return		;funcret
  5608   003520                     __end_of_turnRight:
  5609                           	callstack 0
  5610                           
  5611 ;; *************** function _turnPrep *****************
  5612 ;; Defined at:
  5613 ;;		line 245 in file "dc_motor.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  5616 ;;		 -> main@mL(9), 
  5617 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  5618 ;;		 -> main@mR(9), 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;		None
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5630 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;Total ram usage:        6 bytes
  5635 ;; Hardware stack levels used: 1
  5636 ;; Hardware stack levels required when called: 9
  5637 ;; This function calls:
  5638 ;;		_norm_stop
  5639 ;;		_reverse
  5640 ;; This function is called by:
  5641 ;;		_motor_response
  5642 ;;		_motor_retrace
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text22
  5647   0036C8                     __ptext22:
  5648                           	callstack 0
  5649   0036C8                     _turnPrep:
  5650                           	callstack 20
  5651   0036C8                     
  5652                           ;dc_motor.c: 246:         reverse(mL, mR);
  5653   0036C8  C021  F01C         	movff	turnPrep@mL,reverse@mL
  5654   0036CC  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  5655   0036D0  C023  F01E         	movff	turnPrep@mR,reverse@mR
  5656   0036D4  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  5657   0036D8  EC14  F018         	call	_reverse	;wreg free
  5658   0036DC                     
  5659                           ;dc_motor.c: 247:         _delay((unsigned long)((600)*(64000000/4000.0)));
  5660   0036DC  0E31               	movlw	49
  5661   0036DE  6E26               	movwf	(??_turnPrep+1)^0,c
  5662   0036E0  0EB4               	movlw	180
  5663   0036E2  6E25               	movwf	??_turnPrep^0,c
  5664   0036E4  0E66               	movlw	102
  5665   0036E6                     u4087:
  5666   0036E6  2EE8               	decfsz	wreg,f,c
  5667   0036E8  D7FE               	bra	u4087
  5668   0036EA  2E25               	decfsz	??_turnPrep^0,f,c
  5669   0036EC  D7FC               	bra	u4087
  5670   0036EE  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  5671   0036F0  D7FA               	bra	u4087
  5672   0036F2                     
  5673                           ;dc_motor.c: 248:         norm_stop(mL, mR);
  5674   0036F2  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  5675   0036F6  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  5676   0036FA  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  5677   0036FE  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  5678   003702  EC91  F01C         	call	_norm_stop	;wreg free
  5679                           
  5680                           ;dc_motor.c: 249:         _delay((unsigned long)((300)*(64000000/4000.0)));
  5681   003706  0E19               	movlw	25
  5682   003708  6E26               	movwf	(??_turnPrep+1)^0,c
  5683   00370A  0E5A               	movlw	90
  5684   00370C  6E25               	movwf	??_turnPrep^0,c
  5685   00370E  0EB2               	movlw	178
  5686   003710                     u4097:
  5687   003710  2EE8               	decfsz	wreg,f,c
  5688   003712  D7FE               	bra	u4097
  5689   003714  2E25               	decfsz	??_turnPrep^0,f,c
  5690   003716  D7FC               	bra	u4097
  5691   003718  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  5692   00371A  D7FA               	bra	u4097
  5693   00371C  0012               	return		;funcret
  5694   00371E                     __end_of_turnPrep:
  5695                           	callstack 0
  5696                           
  5697 ;; *************** function _reverse *****************
  5698 ;; Defined at:
  5699 ;;		line 222 in file "dc_motor.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5702 ;;		 -> main@mL(9), 
  5703 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5704 ;;		 -> main@mR(9), 
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;		None
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5716 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5718 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5719 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5720 ;;Total ram usage:        5 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; Hardware stack levels required when called: 8
  5723 ;; This function calls:
  5724 ;;		_setMotorPWM
  5725 ;; This function is called by:
  5726 ;;		_motor_response
  5727 ;;		_motor_retrace
  5728 ;;		_turnPrep
  5729 ;; This function uses a non-reentrant model
  5730 ;;
  5731                           
  5732                           	psect	text23
  5733   003028                     __ptext23:
  5734                           	callstack 0
  5735   003028                     _reverse:
  5736                           	callstack 20
  5737   003028                     
  5738                           ;dc_motor.c: 222: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 223: {;dc_motor.c
      +                          : 224:     mL->power = 5;
  5739   003028  C01C  FFD9         	movff	reverse@mL,fsr2l
  5740   00302C  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5741   003030  0E05               	movlw	5
  5742   003032  6EDF               	movwf	indf2,c
  5743                           
  5744                           ;dc_motor.c: 225:     mR->power = 5;
  5745   003034  C01E  FFD9         	movff	reverse@mR,fsr2l
  5746   003038  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5747   00303C  0E05               	movlw	5
  5748   00303E  6EDF               	movwf	indf2,c
  5749   003040                     
  5750                           ;dc_motor.c: 226:     mR->direction = 0;
  5751   003040  EE20 F001          	lfsr	2,1
  5752   003044  501E               	movf	reverse@mR^0,w,c
  5753   003046  26D9               	addwf	fsr2l,f,c
  5754   003048  501F               	movf	(reverse@mR+1)^0,w,c
  5755   00304A  22DA               	addwfc	fsr2h,f,c
  5756   00304C  0E00               	movlw	0
  5757   00304E  6EDF               	movwf	indf2,c
  5758   003050                     
  5759                           ;dc_motor.c: 227:     mL->direction = 0;
  5760   003050  EE20 F001          	lfsr	2,1
  5761   003054  501C               	movf	reverse@mL^0,w,c
  5762   003056  26D9               	addwf	fsr2l,f,c
  5763   003058  501D               	movf	(reverse@mL+1)^0,w,c
  5764   00305A  22DA               	addwfc	fsr2h,f,c
  5765   00305C  0E00               	movlw	0
  5766   00305E  6EDF               	movwf	indf2,c
  5767   003060                     
  5768                           ;dc_motor.c: 228:     mL->brakemode = 1;
  5769   003060  EE20 F002          	lfsr	2,2
  5770   003064  501C               	movf	reverse@mL^0,w,c
  5771   003066  26D9               	addwf	fsr2l,f,c
  5772   003068  501D               	movf	(reverse@mL+1)^0,w,c
  5773   00306A  22DA               	addwfc	fsr2h,f,c
  5774   00306C  0E01               	movlw	1
  5775   00306E  6EDF               	movwf	indf2,c
  5776   003070                     
  5777                           ;dc_motor.c: 229:     mR->brakemode = 1;
  5778   003070  EE20 F002          	lfsr	2,2
  5779   003074  501E               	movf	reverse@mR^0,w,c
  5780   003076  26D9               	addwf	fsr2l,f,c
  5781   003078  501F               	movf	(reverse@mR+1)^0,w,c
  5782   00307A  22DA               	addwfc	fsr2h,f,c
  5783   00307C  0E01               	movlw	1
  5784   00307E  6EDF               	movwf	indf2,c
  5785                           
  5786                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  5787   003080  EF5F  F018         	goto	l691
  5788   003084                     l2809:
  5789                           
  5790                           ;dc_motor.c: 231:     {;dc_motor.c: 232:         mL->power++;
  5791   003084  C01C  FFD9         	movff	reverse@mL,fsr2l
  5792   003088  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5793   00308C  2ADF               	incf	indf2,f,c
  5794                           
  5795                           ;dc_motor.c: 233:         mR->power++;
  5796   00308E  C01E  FFD9         	movff	reverse@mR,fsr2l
  5797   003092  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5798   003096  2ADF               	incf	indf2,f,c
  5799   003098                     
  5800                           ;dc_motor.c: 234:         _delay((unsigned long)((10)*(64000000/4000.0)));
  5801   003098  0ED0               	movlw	208
  5802   00309A  6E20               	movwf	??_reverse^0,c
  5803   00309C  0ECA               	movlw	202
  5804   00309E                     u4107:
  5805   00309E  2EE8               	decfsz	wreg,f,c
  5806   0030A0  D7FE               	bra	u4107
  5807   0030A2  2E20               	decfsz	??_reverse^0,f,c
  5808   0030A4  D7FC               	bra	u4107
  5809   0030A6                     
  5810                           ;dc_motor.c: 235:         setMotorPWM(mL);
  5811   0030A6  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  5812   0030AA  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  5813   0030AE  ECDC  F016         	call	_setMotorPWM	;wreg free
  5814   0030B2                     
  5815                           ;dc_motor.c: 236:         setMotorPWM(mR);
  5816   0030B2  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  5817   0030B6  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  5818   0030BA  ECDC  F016         	call	_setMotorPWM	;wreg free
  5819   0030BE                     l691:
  5820                           
  5821                           ;dc_motor.c: 230:     while (mL->power <= 20 && mR->power <=20)
  5822   0030BE  C01C  FFD9         	movff	reverse@mL,fsr2l
  5823   0030C2  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5824   0030C6  0E15               	movlw	21
  5825   0030C8  60DF               	cpfslt	indf2,c
  5826   0030CA  EF69  F018         	goto	u1771
  5827   0030CE  EF6B  F018         	goto	u1770
  5828   0030D2                     u1771:
  5829   0030D2  EF77  F018         	goto	l2819
  5830   0030D6                     u1770:
  5831   0030D6  C01E  FFD9         	movff	reverse@mR,fsr2l
  5832   0030DA  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5833   0030DE  0E14               	movlw	20
  5834   0030E0  64DF               	cpfsgt	indf2,c
  5835   0030E2  EF75  F018         	goto	u1781
  5836   0030E6  EF77  F018         	goto	u1780
  5837   0030EA                     u1781:
  5838   0030EA  EF42  F018         	goto	l2809
  5839   0030EE                     u1780:
  5840   0030EE                     l2819:
  5841                           
  5842                           ;dc_motor.c: 238:     mL->power = 20;
  5843   0030EE  C01C  FFD9         	movff	reverse@mL,fsr2l
  5844   0030F2  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  5845   0030F6  0E14               	movlw	20
  5846   0030F8  6EDF               	movwf	indf2,c
  5847                           
  5848                           ;dc_motor.c: 239:     mR->power = 20;
  5849   0030FA  C01E  FFD9         	movff	reverse@mR,fsr2l
  5850   0030FE  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  5851   003102  0E14               	movlw	20
  5852   003104  6EDF               	movwf	indf2,c
  5853   003106                     
  5854                           ;dc_motor.c: 240:     setMotorPWM(mL);
  5855   003106  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  5856   00310A  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  5857   00310E  ECDC  F016         	call	_setMotorPWM	;wreg free
  5858   003112                     
  5859                           ;dc_motor.c: 241:     setMotorPWM(mR);
  5860   003112  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  5861   003116  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  5862   00311A  ECDC  F016         	call	_setMotorPWM	;wreg free
  5863   00311E  0012               	return		;funcret
  5864   003120                     __end_of_reverse:
  5865                           	callstack 0
  5866                           
  5867 ;; *************** function _norm_stop *****************
  5868 ;; Defined at:
  5869 ;;		line 118 in file "dc_motor.c"
  5870 ;; Parameters:    Size  Location     Type
  5871 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5872 ;;		 -> main@mL(9), 
  5873 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5874 ;;		 -> main@mR(9), 
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5889 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;Total ram usage:        4 bytes
  5891 ;; Hardware stack levels used: 1
  5892 ;; Hardware stack levels required when called: 8
  5893 ;; This function calls:
  5894 ;;		_setMotorPWM
  5895 ;; This function is called by:
  5896 ;;		_motor_response
  5897 ;;		_motor_retrace
  5898 ;;		_main
  5899 ;;		_turnPrep
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text24
  5904   003922                     __ptext24:
  5905                           	callstack 0
  5906   003922                     _norm_stop:
  5907                           	callstack 22
  5908   003922                     
  5909                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  5910   003922  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  5911   003926  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  5912   00392A  0E00               	movlw	0
  5913   00392C  6EDF               	movwf	indf2,c
  5914                           
  5915                           ;dc_motor.c: 125:     mR->power = 0;
  5916   00392E  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  5917   003932  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  5918   003936  0E00               	movlw	0
  5919   003938  6EDF               	movwf	indf2,c
  5920   00393A                     
  5921                           ;dc_motor.c: 126:     setMotorPWM(mL);
  5922   00393A  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  5923   00393E  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  5924   003942  ECDC  F016         	call	_setMotorPWM	;wreg free
  5925   003946                     
  5926                           ;dc_motor.c: 127:     setMotorPWM(mR);
  5927   003946  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  5928   00394A  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  5929   00394E  ECDC  F016         	call	_setMotorPWM	;wreg free
  5930   003952  0012               	return		;funcret
  5931   003954                     __end_of_norm_stop:
  5932                           	callstack 0
  5933                           
  5934 ;; *************** function _turnLeft *****************
  5935 ;; Defined at:
  5936 ;;		line 131 in file "dc_motor.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  5939 ;;		 -> main@mL(9), 
  5940 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  5941 ;;		 -> main@mR(9), 
  5942 ;; Auto vars:     Size  Location     Type
  5943 ;;		None
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  1    wreg      void 
  5946 ;; Registers used:
  5947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5956 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5957 ;;Total ram usage:        4 bytes
  5958 ;; Hardware stack levels used: 1
  5959 ;; Hardware stack levels required when called: 8
  5960 ;; This function calls:
  5961 ;;		_setMotorPWM
  5962 ;; This function is called by:
  5963 ;;		_motor_response
  5964 ;;		_motor_retrace
  5965 ;;		_main
  5966 ;; This function uses a non-reentrant model
  5967 ;;
  5968                           
  5969                           	psect	text25
  5970   003520                     __ptext25:
  5971                           	callstack 0
  5972   003520                     _turnLeft:
  5973                           	callstack 22
  5974   003520                     
  5975                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 60;
  5976   003520  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  5977   003524  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  5978   003528  0E3C               	movlw	60
  5979   00352A  6EDF               	movwf	indf2,c
  5980                           
  5981                           ;dc_motor.c: 134:     mR->power = 60;
  5982   00352C  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  5983   003530  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  5984   003534  0E3C               	movlw	60
  5985   003536  6EDF               	movwf	indf2,c
  5986   003538                     
  5987                           ;dc_motor.c: 135:     mL->brakemode = 1;
  5988   003538  EE20 F002          	lfsr	2,2
  5989   00353C  501C               	movf	turnLeft@mL^0,w,c
  5990   00353E  26D9               	addwf	fsr2l,f,c
  5991   003540  501D               	movf	(turnLeft@mL+1)^0,w,c
  5992   003542  22DA               	addwfc	fsr2h,f,c
  5993   003544  0E01               	movlw	1
  5994   003546  6EDF               	movwf	indf2,c
  5995   003548                     
  5996                           ;dc_motor.c: 136:     mR->brakemode = 1;
  5997   003548  EE20 F002          	lfsr	2,2
  5998   00354C  501E               	movf	turnLeft@mR^0,w,c
  5999   00354E  26D9               	addwf	fsr2l,f,c
  6000   003550  501F               	movf	(turnLeft@mR+1)^0,w,c
  6001   003552  22DA               	addwfc	fsr2h,f,c
  6002   003554  0E01               	movlw	1
  6003   003556  6EDF               	movwf	indf2,c
  6004   003558                     
  6005                           ;dc_motor.c: 137:     mL->direction = 0;
  6006   003558  EE20 F001          	lfsr	2,1
  6007   00355C  501C               	movf	turnLeft@mL^0,w,c
  6008   00355E  26D9               	addwf	fsr2l,f,c
  6009   003560  501D               	movf	(turnLeft@mL+1)^0,w,c
  6010   003562  22DA               	addwfc	fsr2h,f,c
  6011   003564  0E00               	movlw	0
  6012   003566  6EDF               	movwf	indf2,c
  6013   003568                     
  6014                           ;dc_motor.c: 138:     mR->direction = 1;
  6015   003568  EE20 F001          	lfsr	2,1
  6016   00356C  501E               	movf	turnLeft@mR^0,w,c
  6017   00356E  26D9               	addwf	fsr2l,f,c
  6018   003570  501F               	movf	(turnLeft@mR+1)^0,w,c
  6019   003572  22DA               	addwfc	fsr2h,f,c
  6020   003574  0E01               	movlw	1
  6021   003576  6EDF               	movwf	indf2,c
  6022   003578                     
  6023                           ;dc_motor.c: 139:     setMotorPWM(mL);
  6024   003578  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6025   00357C  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6026   003580  ECDC  F016         	call	_setMotorPWM	;wreg free
  6027   003584                     
  6028                           ;dc_motor.c: 140:     setMotorPWM(mR);
  6029   003584  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6030   003588  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6031   00358C  ECDC  F016         	call	_setMotorPWM	;wreg free
  6032   003590  0012               	return		;funcret
  6033   003592                     __end_of_turnLeft:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _setMotorPWM *****************
  6037 ;; Defined at:
  6038 ;;		line 56 in file "dc_motor.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6041 ;;		 -> main@mR(9), main@mL(9), 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  negDuty         1   26[COMRAM] unsigned char 
  6044 ;;  posDuty         1   25[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      void 
  6047 ;; Registers used:
  6048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6056 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6057 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6058 ;;Total ram usage:        6 bytes
  6059 ;; Hardware stack levels used: 1
  6060 ;; Hardware stack levels required when called: 7
  6061 ;; This function calls:
  6062 ;;		___lwdiv
  6063 ;;		___wmul
  6064 ;; This function is called by:
  6065 ;;		_norm_stop
  6066 ;;		_turnLeft
  6067 ;;		_turnRight
  6068 ;;		_fullSpeedAhead
  6069 ;;		_wallSmash
  6070 ;;		_reverse
  6071 ;;		_stop
  6072 ;;		_slowSearch
  6073 ;;		_uturn
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text26
  6078   002DB8                     __ptext26:
  6079                           	callstack 0
  6080   002DB8                     _setMotorPWM:
  6081                           	callstack 22
  6082   002DB8                     
  6083                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  6084   002DB8  EE20 F002          	lfsr	2,2
  6085   002DBC  5016               	movf	setMotorPWM@m^0,w,c
  6086   002DBE  26D9               	addwf	fsr2l,f,c
  6087   002DC0  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6088   002DC2  22DA               	addwfc	fsr2h,f,c
  6089   002DC4  50DF               	movf	indf2,w,c
  6090   002DC6  B4D8               	btfsc	status,2,c
  6091   002DC8  EFE8  F016         	goto	u1751
  6092   002DCC  EFEA  F016         	goto	u1750
  6093   002DD0                     u1751:
  6094   002DD0  EF1E  F017         	goto	l2753
  6095   002DD4                     u1750:
  6096   002DD4                     
  6097                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6098   002DD4  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6099   002DD8  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6100   002DDC  50DF               	movf	indf2,w,c
  6101   002DDE  6E18               	movwf	??_setMotorPWM^0,c
  6102   002DE0  5018               	movf	??_setMotorPWM^0,w,c
  6103   002DE2  6E09               	movwf	___wmul@multiplier^0,c
  6104   002DE4  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6105   002DE6  EE20 F003          	lfsr	2,3
  6106   002DEA  5016               	movf	setMotorPWM@m^0,w,c
  6107   002DEC  26D9               	addwf	fsr2l,f,c
  6108   002DEE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6109   002DF0  22DA               	addwfc	fsr2h,f,c
  6110   002DF2  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6111   002DF6  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6112   002DFA  EC2A  F01D         	call	___wmul	;wreg free
  6113   002DFE  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6114   002E02  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6115   002E06  0E00               	movlw	0
  6116   002E08  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6117   002E0A  0E64               	movlw	100
  6118   002E0C  6E11               	movwf	___lwdiv@divisor^0,c
  6119   002E0E  EC1D  F01A         	call	___lwdiv	;wreg free
  6120   002E12  EE20 F003          	lfsr	2,3
  6121   002E16  5016               	movf	setMotorPWM@m^0,w,c
  6122   002E18  26D9               	addwf	fsr2l,f,c
  6123   002E1A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6124   002E1C  22DA               	addwfc	fsr2h,f,c
  6125   002E1E  50DF               	movf	indf2,w,c
  6126   002E20  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6127   002E22  500F               	movf	?___lwdiv^0,w,c
  6128   002E24  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6129   002E26  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6130   002E28                     
  6131                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  6132   002E28  EE20 F003          	lfsr	2,3
  6133   002E2C  5016               	movf	setMotorPWM@m^0,w,c
  6134   002E2E  26D9               	addwf	fsr2l,f,c
  6135   002E30  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6136   002E32  22DA               	addwfc	fsr2h,f,c
  6137   002E34  50DF               	movf	indf2,w,c
  6138   002E36  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6139                           
  6140                           ;dc_motor.c: 63:     }
  6141   002E38  EF41  F017         	goto	l2757
  6142   002E3C                     l2753:
  6143                           
  6144                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6145   002E3C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6146   002E40  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6147   002E44  50DF               	movf	indf2,w,c
  6148   002E46  6E18               	movwf	??_setMotorPWM^0,c
  6149   002E48  5018               	movf	??_setMotorPWM^0,w,c
  6150   002E4A  6E09               	movwf	___wmul@multiplier^0,c
  6151   002E4C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6152   002E4E  EE20 F003          	lfsr	2,3
  6153   002E52  5016               	movf	setMotorPWM@m^0,w,c
  6154   002E54  26D9               	addwf	fsr2l,f,c
  6155   002E56  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6156   002E58  22DA               	addwfc	fsr2h,f,c
  6157   002E5A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6158   002E5E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6159   002E62  EC2A  F01D         	call	___wmul	;wreg free
  6160   002E66  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6161   002E6A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6162   002E6E  0E00               	movlw	0
  6163   002E70  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6164   002E72  0E64               	movlw	100
  6165   002E74  6E11               	movwf	___lwdiv@divisor^0,c
  6166   002E76  EC1D  F01A         	call	___lwdiv	;wreg free
  6167   002E7A  500F               	movf	?___lwdiv^0,w,c
  6168   002E7C  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6169   002E7E                     
  6170                           ;dc_motor.c: 66:         negDuty=0;
  6171   002E7E  0E00               	movlw	0
  6172   002E80  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6173   002E82                     l2757:
  6174                           
  6175                           ;dc_motor.c: 69:     if (m->direction) {
  6176   002E82  EE20 F001          	lfsr	2,1
  6177   002E86  5016               	movf	setMotorPWM@m^0,w,c
  6178   002E88  26D9               	addwf	fsr2l,f,c
  6179   002E8A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6180   002E8C  22DA               	addwfc	fsr2h,f,c
  6181   002E8E  50DF               	movf	indf2,w,c
  6182   002E90  B4D8               	btfsc	status,2,c
  6183   002E92  EF4D  F017         	goto	u1761
  6184   002E96  EF4F  F017         	goto	u1760
  6185   002E9A                     u1761:
  6186   002E9A  EF71  F017         	goto	l2761
  6187   002E9E                     u1760:
  6188   002E9E                     
  6189                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  6190   002E9E  EE20 F005          	lfsr	2,5
  6191   002EA2  5016               	movf	setMotorPWM@m^0,w,c
  6192   002EA4  26D9               	addwf	fsr2l,f,c
  6193   002EA6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6194   002EA8  22DA               	addwfc	fsr2h,f,c
  6195   002EAA  CFDE F018          	movff	postinc2,??_setMotorPWM
  6196   002EAE  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6197   002EB2  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6198   002EB6  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6199   002EBA  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6200                           
  6201                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  6202   002EBE  EE20 F007          	lfsr	2,7
  6203   002EC2  5016               	movf	setMotorPWM@m^0,w,c
  6204   002EC4  26D9               	addwf	fsr2l,f,c
  6205   002EC6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6206   002EC8  22DA               	addwfc	fsr2h,f,c
  6207   002ECA  CFDE F018          	movff	postinc2,??_setMotorPWM
  6208   002ECE  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6209   002ED2  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6210   002ED6  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6211   002EDA  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6212                           
  6213                           ;dc_motor.c: 72:     } else {
  6214   002EDE  EF91  F017         	goto	l643
  6215   002EE2                     l2761:
  6216                           
  6217                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  6218   002EE2  EE20 F005          	lfsr	2,5
  6219   002EE6  5016               	movf	setMotorPWM@m^0,w,c
  6220   002EE8  26D9               	addwf	fsr2l,f,c
  6221   002EEA  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6222   002EEC  22DA               	addwfc	fsr2h,f,c
  6223   002EEE  CFDE F018          	movff	postinc2,??_setMotorPWM
  6224   002EF2  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6225   002EF6  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6226   002EFA  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6227   002EFE  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6228                           
  6229                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  6230   002F02  EE20 F007          	lfsr	2,7
  6231   002F06  5016               	movf	setMotorPWM@m^0,w,c
  6232   002F08  26D9               	addwf	fsr2l,f,c
  6233   002F0A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6234   002F0C  22DA               	addwfc	fsr2h,f,c
  6235   002F0E  CFDE F018          	movff	postinc2,??_setMotorPWM
  6236   002F12  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6237   002F16  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6238   002F1A  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6239   002F1E  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6240   002F22                     l643:
  6241   002F22  0012               	return		;funcret
  6242   002F24                     __end_of_setMotorPWM:
  6243                           	callstack 0
  6244                           
  6245 ;; *************** function ___wmul *****************
  6246 ;; Defined at:
  6247 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  6248 ;; Parameters:    Size  Location     Type
  6249 ;;  multiplier      2    8[COMRAM] unsigned int 
  6250 ;;  multiplicand    2   10[COMRAM] unsigned int 
  6251 ;; Auto vars:     Size  Location     Type
  6252 ;;  product         2   12[COMRAM] unsigned int 
  6253 ;; Return value:  Size  Location     Type
  6254 ;;                  2    8[COMRAM] unsigned int 
  6255 ;; Registers used:
  6256 ;;		wreg, status,2, status,0, prodl, prodh
  6257 ;; Tracked objects:
  6258 ;;		On entry : 0/0
  6259 ;;		On exit  : 0/0
  6260 ;;		Unchanged: 0/0
  6261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6263 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6265 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6266 ;;Total ram usage:        6 bytes
  6267 ;; Hardware stack levels used: 1
  6268 ;; Hardware stack levels required when called: 6
  6269 ;; This function calls:
  6270 ;;		Nothing
  6271 ;; This function is called by:
  6272 ;;		_setMotorPWM
  6273 ;; This function uses a non-reentrant model
  6274 ;;
  6275                           
  6276                           	psect	text27
  6277   003A54                     __ptext27:
  6278                           	callstack 0
  6279   003A54                     ___wmul:
  6280                           	callstack 22
  6281   003A54  5009               	movf	___wmul@multiplier^0,w,c
  6282   003A56  020B               	mulwf	___wmul@multiplicand^0,c
  6283   003A58  CFF3 F00D          	movff	prodl,___wmul@product
  6284   003A5C  CFF4 F00E          	movff	prodh,___wmul@product+1
  6285   003A60  5009               	movf	___wmul@multiplier^0,w,c
  6286   003A62  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  6287   003A64  50F3               	movf	243,w,c
  6288   003A66  260E               	addwf	(___wmul@product+1)^0,f,c
  6289   003A68  500A               	movf	(___wmul@multiplier+1)^0,w,c
  6290   003A6A  020B               	mulwf	___wmul@multiplicand^0,c
  6291   003A6C  50F3               	movf	243,w,c
  6292   003A6E  260E               	addwf	(___wmul@product+1)^0,f,c
  6293   003A70  C00D  F009         	movff	___wmul@product,?___wmul
  6294   003A74  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  6295   003A78  0012               	return		;funcret
  6296   003A7A                     __end_of___wmul:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function ___lwdiv *****************
  6300 ;; Defined at:
  6301 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;  dividend        2   14[COMRAM] unsigned int 
  6304 ;;  divisor         2   16[COMRAM] unsigned int 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  quotient        2   18[COMRAM] unsigned int 
  6307 ;;  counter         1   20[COMRAM] unsigned char 
  6308 ;; Return value:  Size  Location     Type
  6309 ;;                  2   14[COMRAM] unsigned int 
  6310 ;; Registers used:
  6311 ;;		wreg, status,2, status,0
  6312 ;; Tracked objects:
  6313 ;;		On entry : 0/0
  6314 ;;		On exit  : 0/0
  6315 ;;		Unchanged: 0/0
  6316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6317 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6318 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;Total ram usage:        7 bytes
  6322 ;; Hardware stack levels used: 1
  6323 ;; Hardware stack levels required when called: 6
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_setMotorPWM
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text28
  6332   00343A                     __ptext28:
  6333                           	callstack 0
  6334   00343A                     ___lwdiv:
  6335                           	callstack 22
  6336   00343A  0E00               	movlw	0
  6337   00343C  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  6338   00343E  0E00               	movlw	0
  6339   003440  6E13               	movwf	___lwdiv@quotient^0,c
  6340   003442  5011               	movf	___lwdiv@divisor^0,w,c
  6341   003444  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6342   003446  B4D8               	btfsc	status,2,c
  6343   003448  EF28  F01A         	goto	u1681
  6344   00344C  EF2A  F01A         	goto	u1680
  6345   003450                     u1681:
  6346   003450  EF52  F01A         	goto	l1196
  6347   003454                     u1680:
  6348   003454  0E01               	movlw	1
  6349   003456  6E15               	movwf	___lwdiv@counter^0,c
  6350   003458  EF32  F01A         	goto	l2699
  6351   00345C                     l2697:
  6352   00345C  90D8               	bcf	status,0,c
  6353   00345E  3611               	rlcf	___lwdiv@divisor^0,f,c
  6354   003460  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6355   003462  2A15               	incf	___lwdiv@counter^0,f,c
  6356   003464                     l2699:
  6357   003464  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  6358   003466  EF37  F01A         	goto	u1691
  6359   00346A  EF39  F01A         	goto	u1690
  6360   00346E                     u1691:
  6361   00346E  EF2E  F01A         	goto	l2697
  6362   003472                     u1690:
  6363   003472                     l2701:
  6364   003472  90D8               	bcf	status,0,c
  6365   003474  3613               	rlcf	___lwdiv@quotient^0,f,c
  6366   003476  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6367   003478  5011               	movf	___lwdiv@divisor^0,w,c
  6368   00347A  5C0F               	subwf	___lwdiv@dividend^0,w,c
  6369   00347C  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6370   00347E  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6371   003480  A0D8               	btfss	status,0,c
  6372   003482  EF45  F01A         	goto	u1701
  6373   003486  EF47  F01A         	goto	u1700
  6374   00348A                     u1701:
  6375   00348A  EF4C  F01A         	goto	l2709
  6376   00348E                     u1700:
  6377   00348E  5011               	movf	___lwdiv@divisor^0,w,c
  6378   003490  5E0F               	subwf	___lwdiv@dividend^0,f,c
  6379   003492  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  6380   003494  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6381   003496  8013               	bsf	___lwdiv@quotient^0,0,c
  6382   003498                     l2709:
  6383   003498  90D8               	bcf	status,0,c
  6384   00349A  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6385   00349C  3211               	rrcf	___lwdiv@divisor^0,f,c
  6386   00349E  2E15               	decfsz	___lwdiv@counter^0,f,c
  6387   0034A0  EF39  F01A         	goto	l2701
  6388   0034A4                     l1196:
  6389   0034A4  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  6390   0034A8  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6391   0034AC  0012               	return		;funcret
  6392   0034AE                     __end_of___lwdiv:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function ___flge *****************
  6396 ;; Defined at:
  6397 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  ff1             4    8[COMRAM] unsigned int 
  6400 ;;  ff2             4   12[COMRAM] unsigned int 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;		None
  6403 ;; Return value:  Size  Location     Type
  6404 ;;		None               void
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6412 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6416 ;;Total ram usage:       12 bytes
  6417 ;; Hardware stack levels used: 1
  6418 ;; Hardware stack levels required when called: 6
  6419 ;; This function calls:
  6420 ;;		Nothing
  6421 ;; This function is called by:
  6422 ;;		_motor_response
  6423 ;;		_main
  6424 ;; This function uses a non-reentrant model
  6425 ;;
  6426                           
  6427                           	psect	text29
  6428   002F24                     __ptext29:
  6429                           	callstack 0
  6430   002F24                     ___flge:
  6431                           	callstack 23
  6432   002F24  0E00               	movlw	0
  6433   002F26  1409               	andwf	___flge@ff1^0,w,c
  6434   002F28  6E11               	movwf	??___flge^0,c
  6435   002F2A  0E00               	movlw	0
  6436   002F2C  140A               	andwf	(___flge@ff1+1)^0,w,c
  6437   002F2E  6E12               	movwf	(??___flge+1)^0,c
  6438   002F30  0E80               	movlw	128
  6439   002F32  140B               	andwf	(___flge@ff1+2)^0,w,c
  6440   002F34  6E13               	movwf	(??___flge+2)^0,c
  6441   002F36  0E7F               	movlw	127
  6442   002F38  140C               	andwf	(___flge@ff1+3)^0,w,c
  6443   002F3A  6E14               	movwf	(??___flge+3)^0,c
  6444   002F3C  5011               	movf	??___flge^0,w,c
  6445   002F3E  1012               	iorwf	(??___flge+1)^0,w,c
  6446   002F40  1013               	iorwf	(??___flge+2)^0,w,c
  6447   002F42  1014               	iorwf	(??___flge+3)^0,w,c
  6448   002F44  A4D8               	btfss	status,2,c
  6449   002F46  EFA7  F017         	goto	u2141
  6450   002F4A  EFA9  F017         	goto	u2140
  6451   002F4E                     u2141:
  6452   002F4E  EFB1  F017         	goto	l3113
  6453   002F52                     u2140:
  6454   002F52  0E00               	movlw	0
  6455   002F54  6E09               	movwf	___flge@ff1^0,c
  6456   002F56  0E00               	movlw	0
  6457   002F58  6E0A               	movwf	(___flge@ff1+1)^0,c
  6458   002F5A  0E00               	movlw	0
  6459   002F5C  6E0B               	movwf	(___flge@ff1+2)^0,c
  6460   002F5E  0E00               	movlw	0
  6461   002F60  6E0C               	movwf	(___flge@ff1+3)^0,c
  6462   002F62                     l3113:
  6463   002F62  0E00               	movlw	0
  6464   002F64  140D               	andwf	___flge@ff2^0,w,c
  6465   002F66  6E11               	movwf	??___flge^0,c
  6466   002F68  0E00               	movlw	0
  6467   002F6A  140E               	andwf	(___flge@ff2+1)^0,w,c
  6468   002F6C  6E12               	movwf	(??___flge+1)^0,c
  6469   002F6E  0E80               	movlw	128
  6470   002F70  140F               	andwf	(___flge@ff2+2)^0,w,c
  6471   002F72  6E13               	movwf	(??___flge+2)^0,c
  6472   002F74  0E7F               	movlw	127
  6473   002F76  1410               	andwf	(___flge@ff2+3)^0,w,c
  6474   002F78  6E14               	movwf	(??___flge+3)^0,c
  6475   002F7A  5011               	movf	??___flge^0,w,c
  6476   002F7C  1012               	iorwf	(??___flge+1)^0,w,c
  6477   002F7E  1013               	iorwf	(??___flge+2)^0,w,c
  6478   002F80  1014               	iorwf	(??___flge+3)^0,w,c
  6479   002F82  A4D8               	btfss	status,2,c
  6480   002F84  EFC6  F017         	goto	u2151
  6481   002F88  EFC8  F017         	goto	u2150
  6482   002F8C                     u2151:
  6483   002F8C  EFD0  F017         	goto	l3117
  6484   002F90                     u2150:
  6485   002F90  0E00               	movlw	0
  6486   002F92  6E0D               	movwf	___flge@ff2^0,c
  6487   002F94  0E00               	movlw	0
  6488   002F96  6E0E               	movwf	(___flge@ff2+1)^0,c
  6489   002F98  0E00               	movlw	0
  6490   002F9A  6E0F               	movwf	(___flge@ff2+2)^0,c
  6491   002F9C  0E00               	movlw	0
  6492   002F9E  6E10               	movwf	(___flge@ff2+3)^0,c
  6493   002FA0                     l3117:
  6494   002FA0  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  6495   002FA2  EFD5  F017         	goto	u2161
  6496   002FA6  EFD7  F017         	goto	u2160
  6497   002FAA                     u2161:
  6498   002FAA  EFE0  F017         	goto	l3121
  6499   002FAE                     u2160:
  6500   002FAE  6C09               	negf	___flge@ff1^0,c
  6501   002FB0  1E0A               	comf	(___flge@ff1+1)^0,f,c
  6502   002FB2  B0D8               	btfsc	status,0,c
  6503   002FB4  2A0A               	incf	(___flge@ff1+1)^0,f,c
  6504   002FB6  1E0B               	comf	(___flge@ff1+2)^0,f,c
  6505   002FB8  B0D8               	btfsc	status,0,c
  6506   002FBA  2A0B               	incf	(___flge@ff1+2)^0,f,c
  6507   002FBC  0E80               	movlw	128
  6508   002FBE  560C               	subfwb	(___flge@ff1+3)^0,f,c
  6509   002FC0                     l3121:
  6510   002FC0  AE10               	btfss	(___flge@ff2+3)^0,7,c
  6511   002FC2  EFE5  F017         	goto	u2171
  6512   002FC6  EFE7  F017         	goto	u2170
  6513   002FCA                     u2171:
  6514   002FCA  EFF0  F017         	goto	l970
  6515   002FCE                     u2170:
  6516   002FCE  6C0D               	negf	___flge@ff2^0,c
  6517   002FD0  1E0E               	comf	(___flge@ff2+1)^0,f,c
  6518   002FD2  B0D8               	btfsc	status,0,c
  6519   002FD4  2A0E               	incf	(___flge@ff2+1)^0,f,c
  6520   002FD6  1E0F               	comf	(___flge@ff2+2)^0,f,c
  6521   002FD8  B0D8               	btfsc	status,0,c
  6522   002FDA  2A0F               	incf	(___flge@ff2+2)^0,f,c
  6523   002FDC  0E80               	movlw	128
  6524   002FDE  5610               	subfwb	(___flge@ff2+3)^0,f,c
  6525   002FE0                     l970:
  6526   002FE0  0E00               	movlw	0
  6527   002FE2  1A09               	xorwf	___flge@ff1^0,f,c
  6528   002FE4  0E00               	movlw	0
  6529   002FE6  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  6530   002FE8  0E00               	movlw	0
  6531   002FEA  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  6532   002FEC  0E80               	movlw	128
  6533   002FEE  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  6534   002FF0  0E00               	movlw	0
  6535   002FF2  1A0D               	xorwf	___flge@ff2^0,f,c
  6536   002FF4  0E00               	movlw	0
  6537   002FF6  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  6538   002FF8  0E00               	movlw	0
  6539   002FFA  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  6540   002FFC  0E80               	movlw	128
  6541   002FFE  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  6542   003000  500D               	movf	___flge@ff2^0,w,c
  6543   003002  5C09               	subwf	___flge@ff1^0,w,c
  6544   003004  500E               	movf	(___flge@ff2+1)^0,w,c
  6545   003006  580A               	subwfb	(___flge@ff1+1)^0,w,c
  6546   003008  500F               	movf	(___flge@ff2+2)^0,w,c
  6547   00300A  580B               	subwfb	(___flge@ff1+2)^0,w,c
  6548   00300C  5010               	movf	(___flge@ff2+3)^0,w,c
  6549   00300E  580C               	subwfb	(___flge@ff1+3)^0,w,c
  6550   003010  B0D8               	btfsc	status,0,c
  6551   003012  EF0D  F018         	goto	u2181
  6552   003016  EF0F  F018         	goto	u2180
  6553   00301A                     u2181:
  6554   00301A  EF12  F018         	goto	l3127
  6555   00301E                     u2180:
  6556   00301E  90D8               	bcf	status,0,c
  6557   003020  EF13  F018         	goto	l975
  6558   003024                     l3127:
  6559   003024  80D8               	bsf	status,0,c
  6560   003026                     l975:
  6561   003026  0012               	return		;funcret
  6562   003028                     __end_of___flge:
  6563                           	callstack 0
  6564                           
  6565 ;; *************** function _motorTRIS *****************
  6566 ;; Defined at:
  6567 ;;		line 252 in file "dc_motor.c"
  6568 ;; Parameters:    Size  Location     Type
  6569 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  6570 ;;		 -> main@mL(9), 
  6571 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  6572 ;;		 -> main@mR(9), 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;		None
  6575 ;; Return value:  Size  Location     Type
  6576 ;;                  1    wreg      void 
  6577 ;; Registers used:
  6578 ;;		None
  6579 ;; Tracked objects:
  6580 ;;		On entry : 0/0
  6581 ;;		On exit  : 0/0
  6582 ;;		Unchanged: 0/0
  6583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6584 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6587 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6588 ;;Total ram usage:        4 bytes
  6589 ;; Hardware stack levels used: 1
  6590 ;; Hardware stack levels required when called: 6
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_main
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text30
  6599   003B4C                     __ptext30:
  6600                           	callstack 0
  6601   003B4C                     _motorTRIS:
  6602                           	callstack 24
  6603   003B4C                     
  6604                           ;dc_motor.c: 253:     TRISEbits.TRISE2 = 0;
  6605   003B4C  9485               	bcf	133,2,c	;volatile
  6606                           
  6607                           ;dc_motor.c: 254:     TRISEbits.TRISE4 = 0;
  6608   003B4E  9885               	bcf	133,4,c	;volatile
  6609                           
  6610                           ;dc_motor.c: 255:     TRISCbits.TRISC7 = 0;
  6611   003B50  9E83               	bcf	131,7,c	;volatile
  6612                           
  6613                           ;dc_motor.c: 256:     TRISGbits.TRISG6 = 0;
  6614   003B52  9C87               	bcf	135,6,c	;volatile
  6615   003B54  0012               	return		;funcret
  6616   003B56                     __end_of_motorTRIS:
  6617                           	callstack 0
  6618                           
  6619 ;; *************** function _motorRinit *****************
  6620 ;; Defined at:
  6621 ;;		line 88 in file "dc_motor.c"
  6622 ;; Parameters:    Size  Location     Type
  6623 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  6624 ;;		 -> main@mR(9), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;		None
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      void 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6640 ;;Total ram usage:        2 bytes
  6641 ;; Hardware stack levels used: 1
  6642 ;; Hardware stack levels required when called: 6
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_main
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           	psect	text31
  6651   003592                     __ptext31:
  6652                           	callstack 0
  6653   003592                     _motorRinit:
  6654                           	callstack 24
  6655   003592                     
  6656                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  6657   003592  C009  FFD9         	movff	motorRinit@mR,fsr2l
  6658   003596  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  6659   00359A  0E32               	movlw	50
  6660   00359C  6EDF               	movwf	indf2,c
  6661   00359E                     
  6662                           ;dc_motor.c: 91:     mR->direction = 1;
  6663   00359E  EE20 F001          	lfsr	2,1
  6664   0035A2  5009               	movf	motorRinit@mR^0,w,c
  6665   0035A4  26D9               	addwf	fsr2l,f,c
  6666   0035A6  500A               	movf	(motorRinit@mR+1)^0,w,c
  6667   0035A8  22DA               	addwfc	fsr2h,f,c
  6668   0035AA  0E01               	movlw	1
  6669   0035AC  6EDF               	movwf	indf2,c
  6670   0035AE                     
  6671                           ;dc_motor.c: 92:     mR->brakemode = 1;
  6672   0035AE  EE20 F002          	lfsr	2,2
  6673   0035B2  5009               	movf	motorRinit@mR^0,w,c
  6674   0035B4  26D9               	addwf	fsr2l,f,c
  6675   0035B6  500A               	movf	(motorRinit@mR+1)^0,w,c
  6676   0035B8  22DA               	addwfc	fsr2h,f,c
  6677   0035BA  0E01               	movlw	1
  6678   0035BC  6EDF               	movwf	indf2,c
  6679   0035BE                     
  6680                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  6681   0035BE  EE20 F005          	lfsr	2,5
  6682   0035C2  5009               	movf	motorRinit@mR^0,w,c
  6683   0035C4  26D9               	addwf	fsr2l,f,c
  6684   0035C6  500A               	movf	(motorRinit@mR+1)^0,w,c
  6685   0035C8  22DA               	addwfc	fsr2h,f,c
  6686   0035CA  0E25               	movlw	37
  6687   0035CC  6EDE               	movwf	postinc2,c
  6688   0035CE  0E0F               	movlw	15
  6689   0035D0  6EDD               	movwf	postdec2,c
  6690   0035D2                     
  6691                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  6692   0035D2  EE20 F007          	lfsr	2,7
  6693   0035D6  5009               	movf	motorRinit@mR^0,w,c
  6694   0035D8  26D9               	addwf	fsr2l,f,c
  6695   0035DA  500A               	movf	(motorRinit@mR+1)^0,w,c
  6696   0035DC  22DA               	addwfc	fsr2h,f,c
  6697   0035DE  0E21               	movlw	33
  6698   0035E0  6EDE               	movwf	postinc2,c
  6699   0035E2  0E0F               	movlw	15
  6700   0035E4  6EDD               	movwf	postdec2,c
  6701   0035E6                     
  6702                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  6703   0035E6  EE20 F003          	lfsr	2,3
  6704   0035EA  5009               	movf	motorRinit@mR^0,w,c
  6705   0035EC  26D9               	addwf	fsr2l,f,c
  6706   0035EE  500A               	movf	(motorRinit@mR+1)^0,w,c
  6707   0035F0  22DA               	addwfc	fsr2h,f,c
  6708   0035F2  0EC8               	movlw	200
  6709   0035F4  6EDE               	movwf	postinc2,c
  6710   0035F6  0E00               	movlw	0
  6711   0035F8  6EDD               	movwf	postdec2,c
  6712   0035FA  0012               	return		;funcret
  6713   0035FC                     __end_of_motorRinit:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function _motorLinit *****************
  6717 ;; Defined at:
  6718 ;;		line 78 in file "dc_motor.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  6721 ;;		 -> main@mL(9), 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  1    wreg      void 
  6726 ;; Registers used:
  6727 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6733 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6737 ;;Total ram usage:        2 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 6
  6740 ;; This function calls:
  6741 ;;		Nothing
  6742 ;; This function is called by:
  6743 ;;		_main
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747                           	psect	text32
  6748   0035FC                     __ptext32:
  6749                           	callstack 0
  6750   0035FC                     _motorLinit:
  6751                           	callstack 24
  6752   0035FC                     
  6753                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  6754   0035FC  C009  FFD9         	movff	motorLinit@mL,fsr2l
  6755   003600  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  6756   003604  0E32               	movlw	50
  6757   003606  6EDF               	movwf	indf2,c
  6758   003608                     
  6759                           ;dc_motor.c: 81:     mL->direction = 1;
  6760   003608  EE20 F001          	lfsr	2,1
  6761   00360C  5009               	movf	motorLinit@mL^0,w,c
  6762   00360E  26D9               	addwf	fsr2l,f,c
  6763   003610  500A               	movf	(motorLinit@mL+1)^0,w,c
  6764   003612  22DA               	addwfc	fsr2h,f,c
  6765   003614  0E01               	movlw	1
  6766   003616  6EDF               	movwf	indf2,c
  6767   003618                     
  6768                           ;dc_motor.c: 82:     mL->brakemode = 1;
  6769   003618  EE20 F002          	lfsr	2,2
  6770   00361C  5009               	movf	motorLinit@mL^0,w,c
  6771   00361E  26D9               	addwf	fsr2l,f,c
  6772   003620  500A               	movf	(motorLinit@mL+1)^0,w,c
  6773   003622  22DA               	addwfc	fsr2h,f,c
  6774   003624  0E01               	movlw	1
  6775   003626  6EDF               	movwf	indf2,c
  6776   003628                     
  6777                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  6778   003628  EE20 F005          	lfsr	2,5
  6779   00362C  5009               	movf	motorLinit@mL^0,w,c
  6780   00362E  26D9               	addwf	fsr2l,f,c
  6781   003630  500A               	movf	(motorLinit@mL+1)^0,w,c
  6782   003632  22DA               	addwfc	fsr2h,f,c
  6783   003634  0EAA               	movlw	170
  6784   003636  6EDE               	movwf	postinc2,c
  6785   003638  0E0F               	movlw	15
  6786   00363A  6EDD               	movwf	postdec2,c
  6787   00363C                     
  6788                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  6789   00363C  EE20 F007          	lfsr	2,7
  6790   003640  5009               	movf	motorLinit@mL^0,w,c
  6791   003642  26D9               	addwf	fsr2l,f,c
  6792   003644  500A               	movf	(motorLinit@mL+1)^0,w,c
  6793   003646  22DA               	addwfc	fsr2h,f,c
  6794   003648  0EA6               	movlw	166
  6795   00364A  6EDE               	movwf	postinc2,c
  6796   00364C  0E0F               	movlw	15
  6797   00364E  6EDD               	movwf	postdec2,c
  6798   003650                     
  6799                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  6800   003650  EE20 F003          	lfsr	2,3
  6801   003654  5009               	movf	motorLinit@mL^0,w,c
  6802   003656  26D9               	addwf	fsr2l,f,c
  6803   003658  500A               	movf	(motorLinit@mL+1)^0,w,c
  6804   00365A  22DA               	addwfc	fsr2h,f,c
  6805   00365C  0EC8               	movlw	200
  6806   00365E  6EDE               	movwf	postinc2,c
  6807   003660  0E00               	movlw	0
  6808   003662  6EDD               	movwf	postdec2,c
  6809   003664  0012               	return		;funcret
  6810   003666                     __end_of_motorLinit:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function _initDCmotorsPWM *****************
  6814 ;; Defined at:
  6815 ;;		line 5 in file "dc_motor.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  1    wreg      void 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6833 ;;Total ram usage:        2 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; Hardware stack levels required when called: 6
  6836 ;; This function calls:
  6837 ;;		Nothing
  6838 ;; This function is called by:
  6839 ;;		_main
  6840 ;; This function uses a non-reentrant model
  6841 ;;
  6842                           
  6843                           	psect	text33
  6844   0033BA                     __ptext33:
  6845                           	callstack 0
  6846   0033BA                     _initDCmotorsPWM:
  6847                           	callstack 24
  6848   0033BA                     
  6849                           ;dc_motor.c: 9:     RE2PPS=0x05;
  6850   0033BA  0E05               	movlw	5
  6851   0033BC  010E               	movlb	14	; () banked
  6852   0033BE  6F74               	movwf	116,b	;volatile
  6853                           
  6854                           ;dc_motor.c: 10:     RE4PPS=0x06;
  6855   0033C0  0E06               	movlw	6
  6856   0033C2  6F76               	movwf	118,b	;volatile
  6857                           
  6858                           ;dc_motor.c: 11:     RC7PPS=0x07;
  6859   0033C4  0E07               	movlw	7
  6860   0033C6  6F69               	movwf	105,b	;volatile
  6861                           
  6862                           ;dc_motor.c: 12:     RG6PPS=0x08;
  6863   0033C8  0E08               	movlw	8
  6864   0033CA  6F88               	movwf	136,b	;volatile
  6865                           
  6866                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  6867   0033CC  50BD               	movf	189,w,c	;volatile
  6868   0033CE  0B8F               	andlw	-113
  6869   0033D0  0930               	iorlw	48
  6870   0033D2  6EBD               	movwf	189,c	;volatile
  6871                           
  6872                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  6873   0033D4  0EE0               	movlw	-32
  6874   0033D6  16BE               	andwf	190,f,c	;volatile
  6875                           
  6876                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  6877   0033D8  50BF               	movf	191,w,c	;volatile
  6878   0033DA  0BF0               	andlw	-16
  6879   0033DC  0901               	iorlw	1
  6880   0033DE  6EBF               	movwf	191,c	;volatile
  6881                           
  6882                           ;dc_motor.c: 21:     T2PR=200;
  6883   0033E0  0EC8               	movlw	200
  6884   0033E2  6EBC               	movwf	188,c	;volatile
  6885   0033E4                     
  6886                           ; BSR set to: 14
  6887                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  6888   0033E4  8EBD               	bsf	189,7,c	;volatile
  6889                           
  6890                           ;dc_motor.c: 26:     CCPR1H=0;
  6891   0033E6  0E00               	movlw	0
  6892   0033E8  6EAA               	movwf	170,c	;volatile
  6893                           
  6894                           ;dc_motor.c: 27:     CCPR2H=0;
  6895   0033EA  0E00               	movlw	0
  6896   0033EC  6EA6               	movwf	166,c	;volatile
  6897                           
  6898                           ;dc_motor.c: 28:     CCPR3H=0;
  6899   0033EE  0E00               	movlw	0
  6900   0033F0  010F               	movlb	15	; () banked
  6901   0033F2  6F25               	movwf	37,b	;volatile
  6902                           
  6903                           ;dc_motor.c: 29:     CCPR4H=0;
  6904   0033F4  0E00               	movlw	0
  6905   0033F6  6F21               	movwf	33,b	;volatile
  6906                           
  6907                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  6908   0033F8  0EFC               	movlw	-4
  6909   0033FA  16AD               	andwf	173,f,c	;volatile
  6910                           
  6911                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  6912   0033FC  0EF3               	movlw	-13
  6913   0033FE  16AD               	andwf	173,f,c	;volatile
  6914                           
  6915                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  6916   003400  0ECF               	movlw	-49
  6917   003402  16AD               	andwf	173,f,c	;volatile
  6918                           
  6919                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  6920   003404  0E3F               	movlw	-193
  6921   003406  16AD               	andwf	173,f,c	;volatile
  6922   003408                     
  6923                           ; BSR set to: 15
  6924                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  6925   003408  88AB               	bsf	171,4,c	;volatile
  6926                           
  6927                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  6928   00340A  50AB               	movf	171,w,c	;volatile
  6929   00340C  0BF0               	andlw	-16
  6930   00340E  090C               	iorlw	12
  6931   003410  6EAB               	movwf	171,c	;volatile
  6932   003412                     
  6933                           ; BSR set to: 15
  6934                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  6935   003412  8EAB               	bsf	171,7,c	;volatile
  6936   003414                     
  6937                           ; BSR set to: 15
  6938                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  6939   003414  88A7               	bsf	167,4,c	;volatile
  6940                           
  6941                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  6942   003416  50A7               	movf	167,w,c	;volatile
  6943   003418  0BF0               	andlw	-16
  6944   00341A  090C               	iorlw	12
  6945   00341C  6EA7               	movwf	167,c	;volatile
  6946   00341E                     
  6947                           ; BSR set to: 15
  6948                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  6949   00341E  8EA7               	bsf	167,7,c	;volatile
  6950   003420                     
  6951                           ; BSR set to: 15
  6952                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  6953   003420  8926               	bsf	38,4,b	;volatile
  6954                           
  6955                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  6956   003422  5126               	movf	38,w,b	;volatile
  6957   003424  0BF0               	andlw	-16
  6958   003426  090C               	iorlw	12
  6959   003428  6F26               	movwf	38,b	;volatile
  6960   00342A                     
  6961                           ; BSR set to: 15
  6962                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  6963   00342A  8F26               	bsf	38,7,b	;volatile
  6964   00342C                     
  6965                           ; BSR set to: 15
  6966                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  6967   00342C  8922               	bsf	34,4,b	;volatile
  6968                           
  6969                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  6970   00342E  5122               	movf	34,w,b	;volatile
  6971   003430  0BF0               	andlw	-16
  6972   003432  090C               	iorlw	12
  6973   003434  6F22               	movwf	34,b	;volatile
  6974   003436                     
  6975                           ; BSR set to: 15
  6976                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  6977   003436  8F22               	bsf	34,7,b	;volatile
  6978   003438                     
  6979                           ; BSR set to: 15
  6980   003438  0012               	return		;funcret
  6981   00343A                     __end_of_initDCmotorsPWM:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _color_click_init *****************
  6985 ;; Defined at:
  6986 ;;		line 9 in file "color.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;		None
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;		None
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg, status,2, status,0, cstack
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;Total ram usage:        1 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; Hardware stack levels required when called: 9
  7007 ;; This function calls:
  7008 ;;		_I2C_2_Master_Init
  7009 ;;		_color_writetoaddr
  7010 ;; This function is called by:
  7011 ;;		_main
  7012 ;; This function uses a non-reentrant model
  7013 ;;
  7014                           
  7015                           	psect	text34
  7016   0038EE                     __ptext34:
  7017                           	callstack 0
  7018   0038EE                     _color_click_init:
  7019                           	callstack 21
  7020   0038EE                     
  7021                           ;color.c: 11:     I2C_2_Master_Init();
  7022   0038EE  ECC3  F01C         	call	_I2C_2_Master_Init	;wreg free
  7023   0038F2                     
  7024                           ;color.c: 14:     color_writetoaddr(0x00, 0x01);
  7025   0038F2  0E01               	movlw	1
  7026   0038F4  6E0B               	movwf	color_writetoaddr@value^0,c
  7027   0038F6  0E00               	movlw	0
  7028   0038F8  EC3D  F01D         	call	_color_writetoaddr
  7029   0038FC                     
  7030                           ;color.c: 15:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7031   0038FC  0E3F               	movlw	63
  7032   0038FE  6E0D               	movwf	??_color_click_init^0,c
  7033   003900  0E55               	movlw	85
  7034   003902                     u4117:
  7035   003902  2EE8               	decfsz	wreg,f,c
  7036   003904  D7FE               	bra	u4117
  7037   003906  2E0D               	decfsz	??_color_click_init^0,f,c
  7038   003908  D7FC               	bra	u4117
  7039   00390A  F000               	nop	
  7040   00390C                     
  7041                           ;color.c: 18:     color_writetoaddr(0x00, 0x03);
  7042   00390C  0E03               	movlw	3
  7043   00390E  6E0B               	movwf	color_writetoaddr@value^0,c
  7044   003910  0E00               	movlw	0
  7045   003912  EC3D  F01D         	call	_color_writetoaddr
  7046   003916                     
  7047                           ;color.c: 21:     color_writetoaddr(0x01, 0xD5);
  7048   003916  0ED5               	movlw	213
  7049   003918  6E0B               	movwf	color_writetoaddr@value^0,c
  7050   00391A  0E01               	movlw	1
  7051   00391C  EC3D  F01D         	call	_color_writetoaddr
  7052   003920  0012               	return		;funcret
  7053   003922                     __end_of_color_click_init:
  7054                           	callstack 0
  7055                           
  7056 ;; *************** function _I2C_2_Master_Init *****************
  7057 ;; Defined at:
  7058 ;;		line 4 in file "i2c.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;		None
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;                  1    wreg      void 
  7065 ;; Registers used:
  7066 ;;		wreg, status,2
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7076 ;;Total ram usage:        0 bytes
  7077 ;; Hardware stack levels used: 1
  7078 ;; Hardware stack levels required when called: 6
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_color_click_init
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text35
  7087   003986                     __ptext35:
  7088                           	callstack 0
  7089   003986                     _I2C_2_Master_Init:
  7090                           	callstack 23
  7091   003986                     
  7092                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7093   003986  010E               	movlb	14	; () banked
  7094   003988  51D9               	movf	217,w,b	;volatile
  7095   00398A  0BF0               	andlw	-16
  7096   00398C  0908               	iorlw	8
  7097   00398E  6FD9               	movwf	217,b	;volatile
  7098   003990                     
  7099                           ; BSR set to: 14
  7100                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7101   003990  8BD9               	bsf	217,5,b	;volatile
  7102                           
  7103                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7104   003992  0E9F               	movlw	159
  7105   003994  6FD6               	movwf	214,b	;volatile
  7106   003996                     
  7107                           ; BSR set to: 14
  7108                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7109   003996  8A84               	bsf	132,5,c	;volatile
  7110   003998                     
  7111                           ; BSR set to: 14
  7112                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7113   003998  8C84               	bsf	132,6,c	;volatile
  7114   00399A                     
  7115                           ; BSR set to: 14
  7116                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7117   00399A  9BA7               	bcf	167,5,b	;volatile
  7118   00399C                     
  7119                           ; BSR set to: 14
  7120                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7121   00399C  9DA7               	bcf	167,6,b	;volatile
  7122                           
  7123                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7124   00399E  0E1D               	movlw	29
  7125   0039A0  6F1D               	movwf	29,b	;volatile
  7126                           
  7127                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7128   0039A2  0E1E               	movlw	30
  7129   0039A4  6F1C               	movwf	28,b	;volatile
  7130                           
  7131                           ;i2c.c: 18:   RD5PPS=0x1C;
  7132   0039A6  0E1C               	movlw	28
  7133   0039A8  6F6F               	movwf	111,b	;volatile
  7134                           
  7135                           ;i2c.c: 19:   RD6PPS=0x1B;
  7136   0039AA  0E1B               	movlw	27
  7137   0039AC  6F70               	movwf	112,b	;volatile
  7138   0039AE                     
  7139                           ; BSR set to: 14
  7140   0039AE  0012               	return		;funcret
  7141   0039B0                     __end_of_I2C_2_Master_Init:
  7142                           	callstack 0
  7143                           
  7144 ;; *************** function ___fladd *****************
  7145 ;; Defined at:
  7146 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  7147 ;; Parameters:    Size  Location     Type
  7148 ;;  b               4    8[COMRAM] void 
  7149 ;;  a               4   12[COMRAM] void 
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;  grs             1   23[COMRAM] unsigned char 
  7152 ;;  bexp            1   22[COMRAM] unsigned char 
  7153 ;;  aexp            1   21[COMRAM] unsigned char 
  7154 ;;  signs           1   20[COMRAM] unsigned char 
  7155 ;; Return value:  Size  Location     Type
  7156 ;;                  4    8[COMRAM] unsigned char 
  7157 ;; Registers used:
  7158 ;;		wreg, status,2, status,0
  7159 ;; Tracked objects:
  7160 ;;		On entry : 0/0
  7161 ;;		On exit  : 0/0
  7162 ;;		Unchanged: 0/0
  7163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7164 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7165 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7167 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7168 ;;Total ram usage:       16 bytes
  7169 ;; Hardware stack levels used: 1
  7170 ;; Hardware stack levels required when called: 6
  7171 ;; This function calls:
  7172 ;;		Nothing
  7173 ;; This function is called by:
  7174 ;;		_main
  7175 ;; This function uses a non-reentrant model
  7176 ;;
  7177                           
  7178                           	psect	text36
  7179   001A2C                     __ptext36:
  7180                           	callstack 0
  7181   001A2C                     ___fladd:
  7182                           	callstack 24
  7183   001A2C  500C               	movf	(___fladd@b+3)^0,w,c
  7184   001A2E  0B80               	andlw	128
  7185   001A30  6E15               	movwf	___fladd@signs^0,c
  7186   001A32  500C               	movf	(___fladd@b+3)^0,w,c
  7187   001A34  240C               	addwf	(___fladd@b+3)^0,w,c
  7188   001A36  6E17               	movwf	___fladd@bexp^0,c
  7189   001A38  AE0B               	btfss	(___fladd@b+2)^0,7,c
  7190   001A3A  EF21  F00D         	goto	u2681
  7191   001A3E  EF23  F00D         	goto	u2680
  7192   001A42                     u2681:
  7193   001A42  EF24  F00D         	goto	l3519
  7194   001A46                     u2680:
  7195   001A46  8017               	bsf	___fladd@bexp^0,0,c
  7196   001A48                     l3519:
  7197   001A48  5017               	movf	___fladd@bexp^0,w,c
  7198   001A4A  B4D8               	btfsc	status,2,c
  7199   001A4C  EF2A  F00D         	goto	u2691
  7200   001A50  EF2C  F00D         	goto	u2690
  7201   001A54                     u2691:
  7202   001A54  EF41  F00D         	goto	l3529
  7203   001A58                     u2690:
  7204   001A58  2817               	incf	___fladd@bexp^0,w,c
  7205   001A5A  A4D8               	btfss	status,2,c
  7206   001A5C  EF32  F00D         	goto	u2701
  7207   001A60  EF34  F00D         	goto	u2700
  7208   001A64                     u2701:
  7209   001A64  EF3C  F00D         	goto	l3525
  7210   001A68                     u2700:
  7211   001A68  0E00               	movlw	0
  7212   001A6A  6E09               	movwf	___fladd@b^0,c
  7213   001A6C  0E00               	movlw	0
  7214   001A6E  6E0A               	movwf	(___fladd@b+1)^0,c
  7215   001A70  0E00               	movlw	0
  7216   001A72  6E0B               	movwf	(___fladd@b+2)^0,c
  7217   001A74  0E00               	movlw	0
  7218   001A76  6E0C               	movwf	(___fladd@b+3)^0,c
  7219   001A78                     l3525:
  7220   001A78  8E0B               	bsf	(___fladd@b+2)^0,7,c
  7221   001A7A  0E00               	movlw	0
  7222   001A7C  6E0C               	movwf	(___fladd@b+3)^0,c
  7223   001A7E  EF49  F00D         	goto	l3531
  7224   001A82                     l3529:
  7225   001A82  0E00               	movlw	0
  7226   001A84  6E09               	movwf	___fladd@b^0,c
  7227   001A86  0E00               	movlw	0
  7228   001A88  6E0A               	movwf	(___fladd@b+1)^0,c
  7229   001A8A  0E00               	movlw	0
  7230   001A8C  6E0B               	movwf	(___fladd@b+2)^0,c
  7231   001A8E  0E00               	movlw	0
  7232   001A90  6E0C               	movwf	(___fladd@b+3)^0,c
  7233   001A92                     l3531:
  7234   001A92  5010               	movf	(___fladd@a+3)^0,w,c
  7235   001A94  0B80               	andlw	128
  7236   001A96  6E16               	movwf	___fladd@aexp^0,c
  7237   001A98  5015               	movf	___fladd@signs^0,w,c
  7238   001A9A  1816               	xorwf	___fladd@aexp^0,w,c
  7239   001A9C  B4D8               	btfsc	status,2,c
  7240   001A9E  EF53  F00D         	goto	u2711
  7241   001AA2  EF55  F00D         	goto	u2710
  7242   001AA6                     u2711:
  7243   001AA6  EF56  F00D         	goto	l3537
  7244   001AAA                     u2710:
  7245   001AAA  8C15               	bsf	___fladd@signs^0,6,c
  7246   001AAC                     l3537:
  7247   001AAC  5010               	movf	(___fladd@a+3)^0,w,c
  7248   001AAE  2410               	addwf	(___fladd@a+3)^0,w,c
  7249   001AB0  6E16               	movwf	___fladd@aexp^0,c
  7250   001AB2  AE0F               	btfss	(___fladd@a+2)^0,7,c
  7251   001AB4  EF5E  F00D         	goto	u2721
  7252   001AB8  EF60  F00D         	goto	u2720
  7253   001ABC                     u2721:
  7254   001ABC  EF61  F00D         	goto	l3543
  7255   001AC0                     u2720:
  7256   001AC0  8016               	bsf	___fladd@aexp^0,0,c
  7257   001AC2                     l3543:
  7258   001AC2  5016               	movf	___fladd@aexp^0,w,c
  7259   001AC4  B4D8               	btfsc	status,2,c
  7260   001AC6  EF67  F00D         	goto	u2731
  7261   001ACA  EF69  F00D         	goto	u2730
  7262   001ACE                     u2731:
  7263   001ACE  EF7E  F00D         	goto	l3553
  7264   001AD2                     u2730:
  7265   001AD2  2816               	incf	___fladd@aexp^0,w,c
  7266   001AD4  A4D8               	btfss	status,2,c
  7267   001AD6  EF6F  F00D         	goto	u2741
  7268   001ADA  EF71  F00D         	goto	u2740
  7269   001ADE                     u2741:
  7270   001ADE  EF79  F00D         	goto	l3549
  7271   001AE2                     u2740:
  7272   001AE2  0E00               	movlw	0
  7273   001AE4  6E0D               	movwf	___fladd@a^0,c
  7274   001AE6  0E00               	movlw	0
  7275   001AE8  6E0E               	movwf	(___fladd@a+1)^0,c
  7276   001AEA  0E00               	movlw	0
  7277   001AEC  6E0F               	movwf	(___fladd@a+2)^0,c
  7278   001AEE  0E00               	movlw	0
  7279   001AF0  6E10               	movwf	(___fladd@a+3)^0,c
  7280   001AF2                     l3549:
  7281   001AF2  8E0F               	bsf	(___fladd@a+2)^0,7,c
  7282   001AF4  0E00               	movlw	0
  7283   001AF6  6E10               	movwf	(___fladd@a+3)^0,c
  7284   001AF8  EF86  F00D         	goto	l3555
  7285   001AFC                     l3553:
  7286   001AFC  0E00               	movlw	0
  7287   001AFE  6E0D               	movwf	___fladd@a^0,c
  7288   001B00  0E00               	movlw	0
  7289   001B02  6E0E               	movwf	(___fladd@a+1)^0,c
  7290   001B04  0E00               	movlw	0
  7291   001B06  6E0F               	movwf	(___fladd@a+2)^0,c
  7292   001B08  0E00               	movlw	0
  7293   001B0A  6E10               	movwf	(___fladd@a+3)^0,c
  7294   001B0C                     l3555:
  7295   001B0C  5017               	movf	___fladd@bexp^0,w,c
  7296   001B0E  5C16               	subwf	___fladd@aexp^0,w,c
  7297   001B10  B0D8               	btfsc	status,0,c
  7298   001B12  EF8D  F00D         	goto	u2751
  7299   001B16  EF8F  F00D         	goto	u2750
  7300   001B1A                     u2751:
  7301   001B1A  EFB6  F00D         	goto	l3591
  7302   001B1E                     u2750:
  7303   001B1E  AC15               	btfss	___fladd@signs^0,6,c
  7304   001B20  EF94  F00D         	goto	u2761
  7305   001B24  EF96  F00D         	goto	u2760
  7306   001B28                     u2761:
  7307   001B28  EF98  F00D         	goto	l3561
  7308   001B2C                     u2760:
  7309   001B2C  0E80               	movlw	128
  7310   001B2E  1A15               	xorwf	___fladd@signs^0,f,c
  7311   001B30                     l3561:
  7312   001B30  C017  F018         	movff	___fladd@bexp,___fladd@grs
  7313   001B34  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  7314   001B38  C018  F016         	movff	___fladd@grs,___fladd@aexp
  7315   001B3C  C009  F018         	movff	___fladd@b,___fladd@grs
  7316   001B40  C00D  F009         	movff	___fladd@a,___fladd@b
  7317   001B44  C018  F00D         	movff	___fladd@grs,___fladd@a
  7318   001B48  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  7319   001B4C  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  7320   001B50  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  7321   001B54  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  7322   001B58  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  7323   001B5C  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  7324   001B60  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  7325   001B64  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  7326   001B68  C018  F010         	movff	___fladd@grs,___fladd@a+3
  7327   001B6C                     l3591:
  7328   001B6C  0E00               	movlw	0
  7329   001B6E  6E18               	movwf	___fladd@grs^0,c
  7330   001B70  5017               	movf	___fladd@bexp^0,w,c
  7331   001B72  C016  F011         	movff	___fladd@aexp,??___fladd
  7332   001B76  6A12               	clrf	(??___fladd+1)^0,c
  7333   001B78  5E11               	subwf	??___fladd^0,f,c
  7334   001B7A  0E00               	movlw	0
  7335   001B7C  5A12               	subwfb	(??___fladd+1)^0,f,c
  7336   001B7E  BE12               	btfsc	(??___fladd+1)^0,7,c
  7337   001B80  EFCB  F00D         	goto	u2771
  7338   001B84  5012               	movf	(??___fladd+1)^0,w,c
  7339   001B86  E109               	bnz	u2770
  7340   001B88  0E1A               	movlw	26
  7341   001B8A  5C11               	subwf	??___fladd^0,w,c
  7342   001B8C  A0D8               	btfss	status,0,c
  7343   001B8E  EFCB  F00D         	goto	u2771
  7344   001B92  EFCD  F00D         	goto	u2770
  7345   001B96                     u2771:
  7346   001B96  EF04  F00E         	goto	l1234
  7347   001B9A                     u2770:
  7348   001B9A  5009               	movf	___fladd@b^0,w,c
  7349   001B9C  100A               	iorwf	(___fladd@b+1)^0,w,c
  7350   001B9E  100B               	iorwf	(___fladd@b+2)^0,w,c
  7351   001BA0  100C               	iorwf	(___fladd@b+3)^0,w,c
  7352   001BA2  A4D8               	btfss	status,2,c
  7353   001BA4  EFD6  F00D         	goto	u2781
  7354   001BA8  EFD9  F00D         	goto	u2780
  7355   001BAC                     u2781:
  7356   001BAC  0E01               	movlw	1
  7357   001BAE  EFDA  F00D         	goto	u2790
  7358   001BB2                     u2780:
  7359   001BB2  0E00               	movlw	0
  7360   001BB4                     u2790:
  7361   001BB4  6E18               	movwf	___fladd@grs^0,c
  7362   001BB6  0E00               	movlw	0
  7363   001BB8  6E09               	movwf	___fladd@b^0,c
  7364   001BBA  0E00               	movlw	0
  7365   001BBC  6E0A               	movwf	(___fladd@b+1)^0,c
  7366   001BBE  0E00               	movlw	0
  7367   001BC0  6E0B               	movwf	(___fladd@b+2)^0,c
  7368   001BC2  0E00               	movlw	0
  7369   001BC4  6E0C               	movwf	(___fladd@b+3)^0,c
  7370   001BC6  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  7371   001BCA  EF0D  F00E         	goto	l1233
  7372   001BCE                     l1235:
  7373   001BCE  A018               	btfss	___fladd@grs^0,0,c
  7374   001BD0  EFEC  F00D         	goto	u2801
  7375   001BD4  EFEE  F00D         	goto	u2800
  7376   001BD8                     u2801:
  7377   001BD8  EFF4  F00D         	goto	l3603
  7378   001BDC                     u2800:
  7379   001BDC  90D8               	bcf	status,0,c
  7380   001BDE  3018               	rrcf	___fladd@grs^0,w,c
  7381   001BE0  0901               	iorlw	1
  7382   001BE2  6E18               	movwf	___fladd@grs^0,c
  7383   001BE4  EFF6  F00D         	goto	l3605
  7384   001BE8                     l3603:
  7385   001BE8  90D8               	bcf	status,0,c
  7386   001BEA  3218               	rrcf	___fladd@grs^0,f,c
  7387   001BEC                     l3605:
  7388   001BEC  A009               	btfss	___fladd@b^0,0,c
  7389   001BEE  EFFB  F00D         	goto	u2811
  7390   001BF2  EFFD  F00D         	goto	u2810
  7391   001BF6                     u2811:
  7392   001BF6  EFFE  F00D         	goto	l3609
  7393   001BFA                     u2810:
  7394   001BFA  8E18               	bsf	___fladd@grs^0,7,c
  7395   001BFC                     l3609:
  7396   001BFC  340C               	rlcf	(___fladd@b+3)^0,w,c
  7397   001BFE  320C               	rrcf	(___fladd@b+3)^0,f,c
  7398   001C00  320B               	rrcf	(___fladd@b+2)^0,f,c
  7399   001C02  320A               	rrcf	(___fladd@b+1)^0,f,c
  7400   001C04  3209               	rrcf	___fladd@b^0,f,c
  7401   001C06  2A17               	incf	___fladd@bexp^0,f,c
  7402   001C08                     l1234:
  7403   001C08  5016               	movf	___fladd@aexp^0,w,c
  7404   001C0A  5C17               	subwf	___fladd@bexp^0,w,c
  7405   001C0C  A0D8               	btfss	status,0,c
  7406   001C0E  EF0B  F00E         	goto	u2821
  7407   001C12  EF0D  F00E         	goto	u2820
  7408   001C16                     u2821:
  7409   001C16  EFE7  F00D         	goto	l1235
  7410   001C1A                     u2820:
  7411   001C1A                     l1233:
  7412   001C1A  BC15               	btfsc	___fladd@signs^0,6,c
  7413   001C1C  EF12  F00E         	goto	u2831
  7414   001C20  EF14  F00E         	goto	u2830
  7415   001C24                     u2831:
  7416   001C24  EF54  F00E         	goto	l3637
  7417   001C28                     u2830:
  7418   001C28  5017               	movf	___fladd@bexp^0,w,c
  7419   001C2A  A4D8               	btfss	status,2,c
  7420   001C2C  EF1A  F00E         	goto	u2841
  7421   001C30  EF1C  F00E         	goto	u2840
  7422   001C34                     u2841:
  7423   001C34  EF26  F00E         	goto	l3619
  7424   001C38                     u2840:
  7425   001C38  0E00               	movlw	0
  7426   001C3A  6E09               	movwf	?___fladd^0,c
  7427   001C3C  0E00               	movlw	0
  7428   001C3E  6E0A               	movwf	(?___fladd+1)^0,c
  7429   001C40  0E00               	movlw	0
  7430   001C42  6E0B               	movwf	(?___fladd+2)^0,c
  7431   001C44  0E00               	movlw	0
  7432   001C46  6E0C               	movwf	(?___fladd+3)^0,c
  7433   001C48  EF75  F00F         	goto	l1242
  7434   001C4C                     l3619:
  7435   001C4C  500D               	movf	___fladd@a^0,w,c
  7436   001C4E  2609               	addwf	___fladd@b^0,f,c
  7437   001C50  500E               	movf	(___fladd@a+1)^0,w,c
  7438   001C52  220A               	addwfc	(___fladd@b+1)^0,f,c
  7439   001C54  500F               	movf	(___fladd@a+2)^0,w,c
  7440   001C56  220B               	addwfc	(___fladd@b+2)^0,f,c
  7441   001C58  5010               	movf	(___fladd@a+3)^0,w,c
  7442   001C5A  220C               	addwfc	(___fladd@b+3)^0,f,c
  7443   001C5C  A00C               	btfss	(___fladd@b+3)^0,0,c
  7444   001C5E  EF33  F00E         	goto	u2851
  7445   001C62  EF35  F00E         	goto	u2850
  7446   001C66                     u2851:
  7447   001C66  EFE1  F00E         	goto	l3673
  7448   001C6A                     u2850:
  7449   001C6A  A018               	btfss	___fladd@grs^0,0,c
  7450   001C6C  EF3A  F00E         	goto	u2861
  7451   001C70  EF3C  F00E         	goto	u2860
  7452   001C74                     u2861:
  7453   001C74  EF42  F00E         	goto	l3627
  7454   001C78                     u2860:
  7455   001C78  90D8               	bcf	status,0,c
  7456   001C7A  3018               	rrcf	___fladd@grs^0,w,c
  7457   001C7C  0901               	iorlw	1
  7458   001C7E  6E18               	movwf	___fladd@grs^0,c
  7459   001C80  EF44  F00E         	goto	l3629
  7460   001C84                     l3627:
  7461   001C84  90D8               	bcf	status,0,c
  7462   001C86  3218               	rrcf	___fladd@grs^0,f,c
  7463   001C88                     l3629:
  7464   001C88  A009               	btfss	___fladd@b^0,0,c
  7465   001C8A  EF49  F00E         	goto	u2871
  7466   001C8E  EF4B  F00E         	goto	u2870
  7467   001C92                     u2871:
  7468   001C92  EF4C  F00E         	goto	l3633
  7469   001C96                     u2870:
  7470   001C96  8E18               	bsf	___fladd@grs^0,7,c
  7471   001C98                     l3633:
  7472   001C98  340C               	rlcf	(___fladd@b+3)^0,w,c
  7473   001C9A  320C               	rrcf	(___fladd@b+3)^0,f,c
  7474   001C9C  320B               	rrcf	(___fladd@b+2)^0,f,c
  7475   001C9E  320A               	rrcf	(___fladd@b+1)^0,f,c
  7476   001CA0  3209               	rrcf	___fladd@b^0,f,c
  7477   001CA2  2A17               	incf	___fladd@bexp^0,f,c
  7478   001CA4  EFE1  F00E         	goto	l3673
  7479   001CA8                     l3637:
  7480   001CA8  500D               	movf	___fladd@a^0,w,c
  7481   001CAA  5C09               	subwf	___fladd@b^0,w,c
  7482   001CAC  500E               	movf	(___fladd@a+1)^0,w,c
  7483   001CAE  580A               	subwfb	(___fladd@b+1)^0,w,c
  7484   001CB0  500F               	movf	(___fladd@a+2)^0,w,c
  7485   001CB2  580B               	subwfb	(___fladd@b+2)^0,w,c
  7486   001CB4  500C               	movf	(___fladd@b+3)^0,w,c
  7487   001CB6  0A80               	xorlw	128
  7488   001CB8  6E11               	movwf	??___fladd^0,c
  7489   001CBA  5010               	movf	(___fladd@a+3)^0,w,c
  7490   001CBC  0A80               	xorlw	128
  7491   001CBE  5811               	subwfb	??___fladd^0,w,c
  7492   001CC0  B0D8               	btfsc	status,0,c
  7493   001CC2  EF65  F00E         	goto	u2881
  7494   001CC6  EF67  F00E         	goto	u2880
  7495   001CCA                     u2881:
  7496   001CCA  EF92  F00E         	goto	l3647
  7497   001CCE                     u2880:
  7498   001CCE  5009               	movf	___fladd@b^0,w,c
  7499   001CD0  5C0D               	subwf	___fladd@a^0,w,c
  7500   001CD2  6E11               	movwf	??___fladd^0,c
  7501   001CD4  500A               	movf	(___fladd@b+1)^0,w,c
  7502   001CD6  580E               	subwfb	(___fladd@a+1)^0,w,c
  7503   001CD8  6E12               	movwf	(??___fladd+1)^0,c
  7504   001CDA  500B               	movf	(___fladd@b+2)^0,w,c
  7505   001CDC  580F               	subwfb	(___fladd@a+2)^0,w,c
  7506   001CDE  6E13               	movwf	(??___fladd+2)^0,c
  7507   001CE0  500C               	movf	(___fladd@b+3)^0,w,c
  7508   001CE2  5810               	subwfb	(___fladd@a+3)^0,w,c
  7509   001CE4  6E14               	movwf	(??___fladd+3)^0,c
  7510   001CE6  0EFF               	movlw	255
  7511   001CE8  2411               	addwf	??___fladd^0,w,c
  7512   001CEA  6E09               	movwf	___fladd@b^0,c
  7513   001CEC  0EFF               	movlw	255
  7514   001CEE  2012               	addwfc	(??___fladd+1)^0,w,c
  7515   001CF0  6E0A               	movwf	(___fladd@b+1)^0,c
  7516   001CF2  0EFF               	movlw	255
  7517   001CF4  2013               	addwfc	(??___fladd+2)^0,w,c
  7518   001CF6  6E0B               	movwf	(___fladd@b+2)^0,c
  7519   001CF8  0EFF               	movlw	255
  7520   001CFA  2014               	addwfc	(??___fladd+3)^0,w,c
  7521   001CFC  6E0C               	movwf	(___fladd@b+3)^0,c
  7522   001CFE  0E80               	movlw	128
  7523   001D00  1A15               	xorwf	___fladd@signs^0,f,c
  7524   001D02  6C18               	negf	___fladd@grs^0,c
  7525   001D04  5018               	movf	___fladd@grs^0,w,c
  7526   001D06  A4D8               	btfss	status,2,c
  7527   001D08  EF88  F00E         	goto	u2891
  7528   001D0C  EF8A  F00E         	goto	u2890
  7529   001D10                     u2891:
  7530   001D10  EF9A  F00E         	goto	l1250
  7531   001D14                     u2890:
  7532   001D14  0E01               	movlw	1
  7533   001D16  2609               	addwf	___fladd@b^0,f,c
  7534   001D18  0E00               	movlw	0
  7535   001D1A  220A               	addwfc	(___fladd@b+1)^0,f,c
  7536   001D1C  220B               	addwfc	(___fladd@b+2)^0,f,c
  7537   001D1E  220C               	addwfc	(___fladd@b+3)^0,f,c
  7538   001D20  EF9A  F00E         	goto	l1250
  7539   001D24                     l3647:
  7540   001D24  500D               	movf	___fladd@a^0,w,c
  7541   001D26  5E09               	subwf	___fladd@b^0,f,c
  7542   001D28  500E               	movf	(___fladd@a+1)^0,w,c
  7543   001D2A  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  7544   001D2C  500F               	movf	(___fladd@a+2)^0,w,c
  7545   001D2E  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  7546   001D30  5010               	movf	(___fladd@a+3)^0,w,c
  7547   001D32  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  7548   001D34                     l1250:
  7549   001D34  5009               	movf	___fladd@b^0,w,c
  7550   001D36  100A               	iorwf	(___fladd@b+1)^0,w,c
  7551   001D38  100B               	iorwf	(___fladd@b+2)^0,w,c
  7552   001D3A  100C               	iorwf	(___fladd@b+3)^0,w,c
  7553   001D3C  A4D8               	btfss	status,2,c
  7554   001D3E  EFA3  F00E         	goto	u2901
  7555   001D42  EFA5  F00E         	goto	u2900
  7556   001D46                     u2901:
  7557   001D46  EFDA  F00E         	goto	l3671
  7558   001D4A                     u2900:
  7559   001D4A  5018               	movf	___fladd@grs^0,w,c
  7560   001D4C  A4D8               	btfss	status,2,c
  7561   001D4E  EFAB  F00E         	goto	u2911
  7562   001D52  EFAD  F00E         	goto	u2910
  7563   001D56                     u2911:
  7564   001D56  EFDA  F00E         	goto	l3671
  7565   001D5A                     u2910:
  7566   001D5A  0E00               	movlw	0
  7567   001D5C  6E09               	movwf	?___fladd^0,c
  7568   001D5E  0E00               	movlw	0
  7569   001D60  6E0A               	movwf	(?___fladd+1)^0,c
  7570   001D62  0E00               	movlw	0
  7571   001D64  6E0B               	movwf	(?___fladd+2)^0,c
  7572   001D66  0E00               	movlw	0
  7573   001D68  6E0C               	movwf	(?___fladd+3)^0,c
  7574   001D6A  EF75  F00F         	goto	l1242
  7575   001D6E                     l3655:
  7576   001D6E  90D8               	bcf	status,0,c
  7577   001D70  3609               	rlcf	___fladd@b^0,f,c
  7578   001D72  360A               	rlcf	(___fladd@b+1)^0,f,c
  7579   001D74  360B               	rlcf	(___fladd@b+2)^0,f,c
  7580   001D76  360C               	rlcf	(___fladd@b+3)^0,f,c
  7581   001D78  AE18               	btfss	___fladd@grs^0,7,c
  7582   001D7A  EFC1  F00E         	goto	u2921
  7583   001D7E  EFC3  F00E         	goto	u2920
  7584   001D82                     u2921:
  7585   001D82  EFC4  F00E         	goto	l3661
  7586   001D86                     u2920:
  7587   001D86  8009               	bsf	___fladd@b^0,0,c
  7588   001D88                     l3661:
  7589   001D88  A018               	btfss	___fladd@grs^0,0,c
  7590   001D8A  EFC9  F00E         	goto	u2931
  7591   001D8E  EFCB  F00E         	goto	u2930
  7592   001D92                     u2931:
  7593   001D92  EFCF  F00E         	goto	l3665
  7594   001D96                     u2930:
  7595   001D96  80D8               	bsf	status,0,c
  7596   001D98  3618               	rlcf	___fladd@grs^0,f,c
  7597   001D9A  EFD1  F00E         	goto	l3667
  7598   001D9E                     l3665:
  7599   001D9E  90D8               	bcf	status,0,c
  7600   001DA0  3618               	rlcf	___fladd@grs^0,f,c
  7601   001DA2                     l3667:
  7602   001DA2  5017               	movf	___fladd@bexp^0,w,c
  7603   001DA4  B4D8               	btfsc	status,2,c
  7604   001DA6  EFD7  F00E         	goto	u2941
  7605   001DAA  EFD9  F00E         	goto	u2940
  7606   001DAE                     u2941:
  7607   001DAE  EFDA  F00E         	goto	l3671
  7608   001DB2                     u2940:
  7609   001DB2  0617               	decf	___fladd@bexp^0,f,c
  7610   001DB4                     l3671:
  7611   001DB4  AE0B               	btfss	(___fladd@b+2)^0,7,c
  7612   001DB6  EFDF  F00E         	goto	u2951
  7613   001DBA  EFE1  F00E         	goto	u2950
  7614   001DBE                     u2951:
  7615   001DBE  EFB7  F00E         	goto	l3655
  7616   001DC2                     u2950:
  7617   001DC2                     l3673:
  7618   001DC2  0E00               	movlw	0
  7619   001DC4  6E16               	movwf	___fladd@aexp^0,c
  7620   001DC6  AE18               	btfss	___fladd@grs^0,7,c
  7621   001DC8  EFE8  F00E         	goto	u2961
  7622   001DCC  EFEA  F00E         	goto	u2960
  7623   001DD0                     u2961:
  7624   001DD0  EF02  F00F         	goto	l1259
  7625   001DD4                     u2960:
  7626   001DD4  C018  F011         	movff	___fladd@grs,??___fladd
  7627   001DD8  0E7F               	movlw	127
  7628   001DDA  1611               	andwf	??___fladd^0,f,c
  7629   001DDC  B4D8               	btfsc	status,2,c
  7630   001DDE  EFF3  F00E         	goto	u2971
  7631   001DE2  EFF5  F00E         	goto	u2970
  7632   001DE6                     u2971:
  7633   001DE6  EFF9  F00E         	goto	l1260
  7634   001DEA                     u2970:
  7635   001DEA                     l3679:
  7636   001DEA  0E01               	movlw	1
  7637   001DEC  6E16               	movwf	___fladd@aexp^0,c
  7638   001DEE  EF02  F00F         	goto	l1259
  7639   001DF2                     l1260:
  7640   001DF2  A009               	btfss	___fladd@b^0,0,c
  7641   001DF4  EFFE  F00E         	goto	u2981
  7642   001DF8  EF00  F00F         	goto	u2980
  7643   001DFC                     u2981:
  7644   001DFC  EF02  F00F         	goto	l1259
  7645   001E00                     u2980:
  7646   001E00  EFF5  F00E         	goto	l3679
  7647   001E04                     l1259:
  7648   001E04  5016               	movf	___fladd@aexp^0,w,c
  7649   001E06  B4D8               	btfsc	status,2,c
  7650   001E08  EF08  F00F         	goto	u2991
  7651   001E0C  EF0A  F00F         	goto	u2990
  7652   001E10                     u2991:
  7653   001E10  EF35  F00F         	goto	l3691
  7654   001E14                     u2990:
  7655   001E14  0E01               	movlw	1
  7656   001E16  2609               	addwf	___fladd@b^0,f,c
  7657   001E18  0E00               	movlw	0
  7658   001E1A  220A               	addwfc	(___fladd@b+1)^0,f,c
  7659   001E1C  220B               	addwfc	(___fladd@b+2)^0,f,c
  7660   001E1E  220C               	addwfc	(___fladd@b+3)^0,f,c
  7661   001E20  A00C               	btfss	(___fladd@b+3)^0,0,c
  7662   001E22  EF15  F00F         	goto	u3001
  7663   001E26  EF17  F00F         	goto	u3000
  7664   001E2A                     u3001:
  7665   001E2A  EF35  F00F         	goto	l3691
  7666   001E2E                     u3000:
  7667   001E2E  C009  F011         	movff	___fladd@b,??___fladd
  7668   001E32  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  7669   001E36  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  7670   001E3A  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  7671   001E3E  3414               	rlcf	(??___fladd+3)^0,w,c
  7672   001E40  3214               	rrcf	(??___fladd+3)^0,f,c
  7673   001E42  3213               	rrcf	(??___fladd+2)^0,f,c
  7674   001E44  3212               	rrcf	(??___fladd+1)^0,f,c
  7675   001E46  3211               	rrcf	??___fladd^0,f,c
  7676   001E48  C011  F009         	movff	??___fladd,___fladd@b
  7677   001E4C  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  7678   001E50  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  7679   001E54  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  7680   001E58  2817               	incf	___fladd@bexp^0,w,c
  7681   001E5A  B4D8               	btfsc	status,2,c
  7682   001E5C  EF32  F00F         	goto	u3011
  7683   001E60  EF34  F00F         	goto	u3010
  7684   001E64                     u3011:
  7685   001E64  EF35  F00F         	goto	l3691
  7686   001E68                     u3010:
  7687   001E68  2A17               	incf	___fladd@bexp^0,f,c
  7688   001E6A                     l3691:
  7689   001E6A  2817               	incf	___fladd@bexp^0,w,c
  7690   001E6C  B4D8               	btfsc	status,2,c
  7691   001E6E  EF3B  F00F         	goto	u3021
  7692   001E72  EF3D  F00F         	goto	u3020
  7693   001E76                     u3021:
  7694   001E76  EF45  F00F         	goto	l3695
  7695   001E7A                     u3020:
  7696   001E7A  5017               	movf	___fladd@bexp^0,w,c
  7697   001E7C  A4D8               	btfss	status,2,c
  7698   001E7E  EF43  F00F         	goto	u3031
  7699   001E82  EF45  F00F         	goto	u3030
  7700   001E86                     u3031:
  7701   001E86  EF57  F00F         	goto	l3699
  7702   001E8A                     u3030:
  7703   001E8A                     l3695:
  7704   001E8A  0E00               	movlw	0
  7705   001E8C  6E09               	movwf	___fladd@b^0,c
  7706   001E8E  0E00               	movlw	0
  7707   001E90  6E0A               	movwf	(___fladd@b+1)^0,c
  7708   001E92  0E00               	movlw	0
  7709   001E94  6E0B               	movwf	(___fladd@b+2)^0,c
  7710   001E96  0E00               	movlw	0
  7711   001E98  6E0C               	movwf	(___fladd@b+3)^0,c
  7712   001E9A  5017               	movf	___fladd@bexp^0,w,c
  7713   001E9C  A4D8               	btfss	status,2,c
  7714   001E9E  EF53  F00F         	goto	u3041
  7715   001EA2  EF55  F00F         	goto	u3040
  7716   001EA6                     u3041:
  7717   001EA6  EF57  F00F         	goto	l3699
  7718   001EAA                     u3040:
  7719   001EAA  0E00               	movlw	0
  7720   001EAC  6E15               	movwf	___fladd@signs^0,c
  7721   001EAE                     l3699:
  7722   001EAE  A017               	btfss	___fladd@bexp^0,0,c
  7723   001EB0  EF5C  F00F         	goto	u3051
  7724   001EB4  EF5E  F00F         	goto	u3050
  7725   001EB8                     u3051:
  7726   001EB8  EF61  F00F         	goto	l3703
  7727   001EBC                     u3050:
  7728   001EBC  8E0B               	bsf	(___fladd@b+2)^0,7,c
  7729   001EBE  EF62  F00F         	goto	l3705
  7730   001EC2                     l3703:
  7731   001EC2  9E0B               	bcf	(___fladd@b+2)^0,7,c
  7732   001EC4                     l3705:
  7733   001EC4  90D8               	bcf	status,0,c
  7734   001EC6  3017               	rrcf	___fladd@bexp^0,w,c
  7735   001EC8  6E0C               	movwf	(___fladd@b+3)^0,c
  7736   001ECA  AE15               	btfss	___fladd@signs^0,7,c
  7737   001ECC  EF6A  F00F         	goto	u3061
  7738   001ED0  EF6C  F00F         	goto	u3060
  7739   001ED4                     u3061:
  7740   001ED4  EF6D  F00F         	goto	l3711
  7741   001ED8                     u3060:
  7742   001ED8  8E0C               	bsf	(___fladd@b+3)^0,7,c
  7743   001EDA                     l3711:
  7744   001EDA  C009  F009         	movff	___fladd@b,?___fladd
  7745   001EDE  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  7746   001EE2  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  7747   001EE6  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  7748   001EEA                     l1242:
  7749   001EEA  0012               	return		;funcret
  7750   001EEC                     __end_of___fladd:
  7751                           	callstack 0
  7752                           
  7753 ;; *************** function _Interrupts_init *****************
  7754 ;; Defined at:
  7755 ;;		line 10 in file "interrupts.c"
  7756 ;; Parameters:    Size  Location     Type
  7757 ;;		None
  7758 ;; Auto vars:     Size  Location     Type
  7759 ;;		None
  7760 ;; Return value:  Size  Location     Type
  7761 ;;                  1    wreg      void 
  7762 ;; Registers used:
  7763 ;;		None
  7764 ;; Tracked objects:
  7765 ;;		On entry : 0/0
  7766 ;;		On exit  : 0/0
  7767 ;;		Unchanged: 0/0
  7768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7773 ;;Total ram usage:        0 bytes
  7774 ;; Hardware stack levels used: 1
  7775 ;; Hardware stack levels required when called: 6
  7776 ;; This function calls:
  7777 ;;		Nothing
  7778 ;; This function is called by:
  7779 ;;		_main
  7780 ;; This function uses a non-reentrant model
  7781 ;;
  7782                           
  7783                           	psect	text37
  7784   003AEE                     __ptext37:
  7785                           	callstack 0
  7786   003AEE                     _Interrupts_init:
  7787                           	callstack 24
  7788   003AEE                     
  7789                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7790   003AEE  8082               	bsf	130,0,c	;volatile
  7791                           
  7792                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  7793   003AF0  010E               	movlb	14	; () banked
  7794   003AF2  919A               	bcf	154,0,b	;volatile
  7795                           
  7796                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  7797   003AF4  9133               	bcf	51,0,b	;volatile
  7798                           
  7799                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  7800   003AF6  8129               	bsf	41,0,b	;volatile
  7801                           
  7802                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  7803   003AF8  811F               	bsf	31,0,b	;volatile
  7804                           
  7805                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  7806   003AFA  90F2               	bcf	242,0,c	;volatile
  7807                           
  7808                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  7809   003AFC  8AF2               	bsf	242,5,c	;volatile
  7810                           
  7811                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  7812   003AFE  8CF2               	bsf	242,6,c	;volatile
  7813                           
  7814                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  7815   003B00  8EF2               	bsf	242,7,c	;volatile
  7816   003B02                     
  7817                           ; BSR set to: 14
  7818   003B02  0012               	return		;funcret
  7819   003B04                     __end_of_Interrupts_init:
  7820                           	callstack 0
  7821                           
  7822 ;; *************** function _Color_Interrupts_threshold *****************
  7823 ;; Defined at:
  7824 ;;		line 38 in file "interrupts.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;  upperThresho    2   12[COMRAM] unsigned int 
  7827 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;		None
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2, status,0, cstack
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7839 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;Total ram usage:        4 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; Hardware stack levels required when called: 9
  7846 ;; This function calls:
  7847 ;;		_color_writetoaddr
  7848 ;; This function is called by:
  7849 ;;		_main
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text38
  7854   0039B0                     __ptext38:
  7855                           	callstack 0
  7856   0039B0                     _Color_Interrupts_threshold:
  7857                           	callstack 21
  7858   0039B0                     
  7859                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  7860   0039B0  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  7861   0039B4  0E04               	movlw	4
  7862   0039B6  EC3D  F01D         	call	_color_writetoaddr
  7863                           
  7864                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  7865   0039BA  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  7866   0039BC  6E0B               	movwf	color_writetoaddr@value^0,c
  7867   0039BE  0E05               	movlw	5
  7868   0039C0  EC3D  F01D         	call	_color_writetoaddr
  7869                           
  7870                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  7871   0039C4  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  7872   0039C8  0E06               	movlw	6
  7873   0039CA  EC3D  F01D         	call	_color_writetoaddr
  7874                           
  7875                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  7876   0039CE  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  7877   0039D0  6E0B               	movwf	color_writetoaddr@value^0,c
  7878   0039D2  0E07               	movlw	7
  7879   0039D4  EC3D  F01D         	call	_color_writetoaddr
  7880   0039D8  0012               	return		;funcret
  7881   0039DA                     __end_of_Color_Interrupts_threshold:
  7882                           	callstack 0
  7883                           
  7884 ;; *************** function _Color_Interrupts_init *****************
  7885 ;; Defined at:
  7886 ;;		line 29 in file "interrupts.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1    wreg      void 
  7893 ;; Registers used:
  7894 ;;		wreg, status,2, status,0, cstack
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 0/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7904 ;;Total ram usage:        1 bytes
  7905 ;; Hardware stack levels used: 1
  7906 ;; Hardware stack levels required when called: 9
  7907 ;; This function calls:
  7908 ;;		_color_writetoaddr
  7909 ;; This function is called by:
  7910 ;;		_main
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text39
  7915   003ABA                     __ptext39:
  7916                           	callstack 0
  7917   003ABA                     _Color_Interrupts_init:
  7918                           	callstack 21
  7919   003ABA                     
  7920                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  7921   003ABA  0E13               	movlw	19
  7922   003ABC  6E0B               	movwf	color_writetoaddr@value^0,c
  7923   003ABE  0E00               	movlw	0
  7924   003AC0  EC3D  F01D         	call	_color_writetoaddr
  7925   003AC4                     
  7926                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  7927   003AC4  0ED0               	movlw	208
  7928   003AC6  6E0D               	movwf	??_Color_Interrupts_init^0,c
  7929   003AC8  0ECA               	movlw	202
  7930   003ACA                     u4127:
  7931   003ACA  2EE8               	decfsz	wreg,f,c
  7932   003ACC  D7FE               	bra	u4127
  7933   003ACE  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  7934   003AD0  D7FC               	bra	u4127
  7935   003AD2  0012               	return		;funcret
  7936   003AD4                     __end_of_Color_Interrupts_init:
  7937                           	callstack 0
  7938                           
  7939 ;; *************** function _color_writetoaddr *****************
  7940 ;; Defined at:
  7941 ;;		line 24 in file "color.c"
  7942 ;; Parameters:    Size  Location     Type
  7943 ;;  address         1    wreg     unsigned char 
  7944 ;;  value           1   10[COMRAM] unsigned char 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;  address         1   11[COMRAM] unsigned char 
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  1    wreg      void 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7956 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7957 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7960 ;;Total ram usage:        2 bytes
  7961 ;; Hardware stack levels used: 1
  7962 ;; Hardware stack levels required when called: 8
  7963 ;; This function calls:
  7964 ;;		_I2C_2_Master_Start
  7965 ;;		_I2C_2_Master_Stop
  7966 ;;		_I2C_2_Master_Write
  7967 ;; This function is called by:
  7968 ;;		_color_click_init
  7969 ;;		_Color_Interrupts_init
  7970 ;;		_Color_Interrupts_threshold
  7971 ;;		_persistence_register
  7972 ;; This function uses a non-reentrant model
  7973 ;;
  7974                           
  7975                           	psect	text40
  7976   003A7A                     __ptext40:
  7977                           	callstack 0
  7978   003A7A                     _color_writetoaddr:
  7979                           	callstack 21
  7980                           
  7981                           ;incstack = 0
  7982                           ;color_writetoaddr@address stored from wreg
  7983   003A7A  6E0C               	movwf	color_writetoaddr@address^0,c
  7984   003A7C                     
  7985                           ;color.c: 25:     I2C_2_Master_Start();
  7986   003A7C  ECB0  F01D         	call	_I2C_2_Master_Start	;wreg free
  7987                           
  7988                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  7989   003A80  0E52               	movlw	82
  7990   003A82  EC8F  F01D         	call	_I2C_2_Master_Write
  7991                           
  7992                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  7993   003A86  500C               	movf	color_writetoaddr@address^0,w,c
  7994   003A88  0980               	iorlw	128
  7995   003A8A  EC8F  F01D         	call	_I2C_2_Master_Write
  7996                           
  7997                           ;color.c: 28:     I2C_2_Master_Write(value);
  7998   003A8E  500B               	movf	color_writetoaddr@value^0,w,c
  7999   003A90  EC8F  F01D         	call	_I2C_2_Master_Write
  8000                           
  8001                           ;color.c: 29:     I2C_2_Master_Stop();
  8002   003A94  ECAB  F01D         	call	_I2C_2_Master_Stop	;wreg free
  8003   003A98  0012               	return		;funcret
  8004   003A9A                     __end_of_color_writetoaddr:
  8005                           	callstack 0
  8006                           
  8007 ;; *************** function _I2C_2_Master_Write *****************
  8008 ;; Defined at:
  8009 ;;		line 45 in file "i2c.c"
  8010 ;; Parameters:    Size  Location     Type
  8011 ;;  data_byte       1    wreg     unsigned char 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;  data_byte       1    9[COMRAM] unsigned char 
  8014 ;; Return value:  Size  Location     Type
  8015 ;;                  1    wreg      void 
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0, cstack
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8026 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8027 ;;Total ram usage:        1 bytes
  8028 ;; Hardware stack levels used: 1
  8029 ;; Hardware stack levels required when called: 7
  8030 ;; This function calls:
  8031 ;;		_I2C_2_Master_Idle
  8032 ;; This function is called by:
  8033 ;;		_color_writetoaddr
  8034 ;;		_color_read_Red
  8035 ;;		_color_read_Green
  8036 ;;		_color_read_Blue
  8037 ;;		_color_read_Clear
  8038 ;; This function uses a non-reentrant model
  8039 ;;
  8040                           
  8041                           	psect	text41
  8042   003B1E                     __ptext41:
  8043                           	callstack 0
  8044   003B1E                     _I2C_2_Master_Write:
  8045                           	callstack 20
  8046                           
  8047                           ;incstack = 0
  8048                           ;I2C_2_Master_Write@data_byte stored from wreg
  8049   003B1E  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8050   003B20                     
  8051                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8052   003B20  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8053   003B24                     
  8054                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8055   003B24  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8056   003B28  0012               	return		;funcret
  8057   003B2A                     __end_of_I2C_2_Master_Write:
  8058                           	callstack 0
  8059                           
  8060 ;; *************** function _I2C_2_Master_Stop *****************
  8061 ;; Defined at:
  8062 ;;		line 39 in file "i2c.c"
  8063 ;; Parameters:    Size  Location     Type
  8064 ;;		None
  8065 ;; Auto vars:     Size  Location     Type
  8066 ;;		None
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      void 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;Total ram usage:        0 bytes
  8081 ;; Hardware stack levels used: 1
  8082 ;; Hardware stack levels required when called: 7
  8083 ;; This function calls:
  8084 ;;		_I2C_2_Master_Idle
  8085 ;; This function is called by:
  8086 ;;		_color_writetoaddr
  8087 ;;		_color_read_Red
  8088 ;;		_color_read_Green
  8089 ;;		_color_read_Blue
  8090 ;;		_color_read_Clear
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text42
  8095   003B56                     __ptext42:
  8096                           	callstack 0
  8097   003B56                     _I2C_2_Master_Stop:
  8098                           	callstack 20
  8099   003B56                     
  8100                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8101   003B56  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8102   003B5A                     
  8103                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8104   003B5A  010E               	movlb	14	; () banked
  8105   003B5C  85DA               	bsf	218,2,b	;volatile
  8106   003B5E                     
  8107                           ; BSR set to: 14
  8108   003B5E  0012               	return		;funcret
  8109   003B60                     __end_of_I2C_2_Master_Stop:
  8110                           	callstack 0
  8111                           
  8112 ;; *************** function _I2C_2_Master_Start *****************
  8113 ;; Defined at:
  8114 ;;		line 27 in file "i2c.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;		None
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0, cstack
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8132 ;;Total ram usage:        0 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; Hardware stack levels required when called: 7
  8135 ;; This function calls:
  8136 ;;		_I2C_2_Master_Idle
  8137 ;; This function is called by:
  8138 ;;		_color_writetoaddr
  8139 ;;		_color_read_Red
  8140 ;;		_color_read_Green
  8141 ;;		_color_read_Blue
  8142 ;;		_color_read_Clear
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text43
  8147   003B60                     __ptext43:
  8148                           	callstack 0
  8149   003B60                     _I2C_2_Master_Start:
  8150                           	callstack 20
  8151   003B60                     
  8152                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8153   003B60  EC02  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8154   003B64                     
  8155                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8156   003B64  010E               	movlb	14	; () banked
  8157   003B66  81DA               	bsf	218,0,b	;volatile
  8158   003B68                     
  8159                           ; BSR set to: 14
  8160   003B68  0012               	return		;funcret
  8161   003B6A                     __end_of_I2C_2_Master_Start:
  8162                           	callstack 0
  8163                           
  8164 ;; *************** function _I2C_2_Master_Idle *****************
  8165 ;; Defined at:
  8166 ;;		line 22 in file "i2c.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;		None
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;		None
  8171 ;; Return value:  Size  Location     Type
  8172 ;;                  1    wreg      void 
  8173 ;; Registers used:
  8174 ;;		wreg, status,2, status,0
  8175 ;; Tracked objects:
  8176 ;;		On entry : 0/0
  8177 ;;		On exit  : 0/0
  8178 ;;		Unchanged: 0/0
  8179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8182 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;Total ram usage:        1 bytes
  8185 ;; Hardware stack levels used: 1
  8186 ;; Hardware stack levels required when called: 6
  8187 ;; This function calls:
  8188 ;;		Nothing
  8189 ;; This function is called by:
  8190 ;;		_I2C_2_Master_Start
  8191 ;;		_I2C_2_Master_RepStart
  8192 ;;		_I2C_2_Master_Stop
  8193 ;;		_I2C_2_Master_Write
  8194 ;;		_I2C_2_Master_Read
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text44
  8199   003A04                     __ptext44:
  8200                           	callstack 0
  8201   003A04                     _I2C_2_Master_Idle:
  8202                           	callstack 20
  8203   003A04                     l216:
  8204   003A04  010E               	movlb	14	; () banked
  8205   003A06  B5D8               	btfsc	216,2,b	;volatile
  8206   003A08  EF08  F01D         	goto	u3251
  8207   003A0C  EF0A  F01D         	goto	u3250
  8208   003A10                     u3251:
  8209   003A10  EF02  F01D         	goto	l216
  8210   003A14                     u3250:
  8211   003A14                     
  8212                           ; BSR set to: 14
  8213   003A14  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8214   003A18  0E1F               	movlw	31
  8215   003A1A  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8216   003A1C  A4D8               	btfss	status,2,c
  8217   003A1E  EF13  F01D         	goto	u3261
  8218   003A22  EF15  F01D         	goto	u3260
  8219   003A26                     u3261:
  8220   003A26  EF02  F01D         	goto	l216
  8221   003A2A                     u3260:
  8222   003A2A                     
  8223                           ; BSR set to: 14
  8224   003A2A  0012               	return		;funcret
  8225   003A2C                     __end_of_I2C_2_Master_Idle:
  8226                           	callstack 0
  8227                           
  8228 ;; *************** function _HighISR *****************
  8229 ;; Defined at:
  8230 ;;		line 71 in file "interrupts.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;		None
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      void 
  8237 ;; Registers used:
  8238 ;;		wreg, status,2, status,0, cstack
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used: 1
  8250 ;; Hardware stack levels required when called: 5
  8251 ;; This function calls:
  8252 ;;		_Color_Interrupts_clear
  8253 ;; This function is called by:
  8254 ;;		Interrupt level 2
  8255 ;; This function uses a non-reentrant model
  8256 ;;
  8257                           
  8258                           	psect	intcode
  8259   000008                     __pintcode:
  8260                           	callstack 0
  8261   000008                     _HighISR:
  8262                           	callstack 20
  8263                           
  8264                           ; BSR set to: 14
  8265                           ;incstack = 0
  8266   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8267   00000A                     
  8268                           ;interrupts.c: 76:     if (PIR0bits.INT0IF == 1) {
  8269   00000A  010E               	movlb	14	; () banked
  8270   00000C  A133               	btfss	51,0,b	;volatile
  8271   00000E  EF0B  F000         	goto	i2u322_41
  8272   000012  EF0D  F000         	goto	i2u322_40
  8273   000016                     i2u322_41:
  8274   000016  EF19  F000         	goto	i2l531
  8275   00001A                     i2u322_40:
  8276   00001A                     
  8277                           ; BSR set to: 14
  8278                           ;interrupts.c: 77:         LATDbits.LATD7 = 1;
  8279   00001A  8E7C               	bsf	124,7,c	;volatile
  8280   00001C                     
  8281                           ; BSR set to: 14
  8282                           ;interrupts.c: 78:         interrupt_flag = 1;
  8283   00001C  0E00               	movlw	0
  8284   00001E  6E52               	movwf	(_interrupt_flag+1)^0,c
  8285   000020  0E01               	movlw	1
  8286   000022  6E51               	movwf	_interrupt_flag^0,c
  8287   000024                     
  8288                           ; BSR set to: 14
  8289                           ;interrupts.c: 79:         interrupt_ctr++;
  8290   000024  0100               	movlb	0	; () banked
  8291   000026  4BD6               	infsnz	_interrupt_ctr& (0+255),f,b
  8292   000028  2BD7               	incf	(_interrupt_ctr+1)& (0+255),f,b
  8293   00002A                     
  8294                           ; BSR set to: 0
  8295                           ;interrupts.c: 80:         Color_Interrupts_clear();
  8296   00002A  ECAA  F01C         	call	_Color_Interrupts_clear	;wreg free
  8297   00002E                     
  8298                           ;interrupts.c: 81:         PIR0bits.INT0IF = 0;
  8299   00002E  010E               	movlb	14	; () banked
  8300   000030  9133               	bcf	51,0,b	;volatile
  8301   000032                     i2l531:
  8302                           
  8303                           ; BSR set to: 14
  8304   000032  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8305   000034  0011               	retfie		f
  8306   000036                     __end_of_HighISR:
  8307                           	callstack 0
  8308                           
  8309 ;; *************** function _Color_Interrupts_clear *****************
  8310 ;; Defined at:
  8311 ;;		line 51 in file "interrupts.c"
  8312 ;; Parameters:    Size  Location     Type
  8313 ;;		None
  8314 ;; Auto vars:     Size  Location     Type
  8315 ;;		None
  8316 ;; Return value:  Size  Location     Type
  8317 ;;                  1    wreg      void 
  8318 ;; Registers used:
  8319 ;;		wreg, status,2, status,0, cstack
  8320 ;; Tracked objects:
  8321 ;;		On entry : 0/0
  8322 ;;		On exit  : 0/0
  8323 ;;		Unchanged: 0/0
  8324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8329 ;;Total ram usage:        0 bytes
  8330 ;; Hardware stack levels used: 1
  8331 ;; Hardware stack levels required when called: 4
  8332 ;; This function calls:
  8333 ;;		i2_Color_Interrupts_init
  8334 ;;		i2_Color_Interrupts_threshold
  8335 ;;		i2_I2C_2_Master_Start
  8336 ;;		i2_I2C_2_Master_Stop
  8337 ;;		i2_I2C_2_Master_Write
  8338 ;;		i2_persistence_register
  8339 ;; This function is called by:
  8340 ;;		_HighISR
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           	psect	text46
  8345   003954                     __ptext46:
  8346                           	callstack 0
  8347   003954                     _Color_Interrupts_clear:
  8348                           	callstack 20
  8349   003954                     
  8350                           ;interrupts.c: 55:     I2C_2_Master_Start();
  8351   003954  ECBA  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  8352                           
  8353                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  8354   003958  0E52               	movlw	82
  8355   00395A  EC9B  F01D         	call	i2_I2C_2_Master_Write
  8356                           
  8357                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  8358   00395E  0EE6               	movlw	230
  8359   003960  EC9B  F01D         	call	i2_I2C_2_Master_Write
  8360                           
  8361                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  8362   003964  ECB5  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  8363                           
  8364                           ;interrupts.c: 61:     Color_Interrupts_init();
  8365   003968  EC6A  F01D         	call	i2_Color_Interrupts_init	;wreg free
  8366                           
  8367                           ;interrupts.c: 62:     persistence_register();
  8368   00396C  EC95  F01D         	call	i2_persistence_register	;wreg free
  8369                           
  8370                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  8371   003970  C0E8  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  8372   003974  C0E9  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  8373   003978  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  8374   00397C  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  8375   003980  ECED  F01C         	call	i2_Color_Interrupts_threshold	;wreg free
  8376   003984  0012               	return		;funcret
  8377   003986                     __end_of_Color_Interrupts_clear:
  8378                           	callstack 0
  8379                           
  8380 ;; *************** function i2_persistence_register *****************
  8381 ;; Defined at:
  8382 ;;		line 46 in file "interrupts.c"
  8383 ;; Parameters:    Size  Location     Type
  8384 ;;		None
  8385 ;; Auto vars:     Size  Location     Type
  8386 ;;		None
  8387 ;; Return value:  Size  Location     Type
  8388 ;;                  1    wreg      void 
  8389 ;; Registers used:
  8390 ;;		wreg, status,2, status,0, cstack
  8391 ;; Tracked objects:
  8392 ;;		On entry : 0/0
  8393 ;;		On exit  : 0/0
  8394 ;;		Unchanged: 0/0
  8395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8400 ;;Total ram usage:        0 bytes
  8401 ;; Hardware stack levels used: 1
  8402 ;; Hardware stack levels required when called: 3
  8403 ;; This function calls:
  8404 ;;		i2_color_writetoaddr
  8405 ;; This function is called by:
  8406 ;;		_Color_Interrupts_clear
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text47
  8411   003B2A                     __ptext47:
  8412                           	callstack 0
  8413   003B2A                     i2_persistence_register:
  8414                           	callstack 20
  8415   003B2A                     
  8416                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  8417   003B2A  0E02               	movlw	2
  8418   003B2C  6E03               	movwf	i2color_writetoaddr@value^0,c
  8419   003B2E  0E0C               	movlw	12
  8420   003B30  EC4D  F01D         	call	i2_color_writetoaddr
  8421   003B34  0012               	return		;funcret
  8422   003B36                     __end_ofi2_persistence_register:
  8423                           	callstack 0
  8424                           
  8425 ;; *************** function i2_Color_Interrupts_threshold *****************
  8426 ;; Defined at:
  8427 ;;		line 38 in file "interrupts.c"
  8428 ;; Parameters:    Size  Location     Type
  8429 ;;  upperThresho    2    4[COMRAM] unsigned int 
  8430 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8442 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;Total ram usage:        4 bytes
  8447 ;; Hardware stack levels used: 1
  8448 ;; Hardware stack levels required when called: 3
  8449 ;; This function calls:
  8450 ;;		i2_color_writetoaddr
  8451 ;; This function is called by:
  8452 ;;		_Color_Interrupts_clear
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text48
  8457   0039DA                     __ptext48:
  8458                           	callstack 0
  8459   0039DA                     i2_Color_Interrupts_threshold:
  8460                           	callstack 20
  8461   0039DA                     
  8462                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8463   0039DA  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  8464   0039DE  0E04               	movlw	4
  8465   0039E0  EC4D  F01D         	call	i2_color_writetoaddr
  8466                           
  8467                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  8468   0039E4  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8469   0039E6  6E03               	movwf	i2color_writetoaddr@value^0,c
  8470   0039E8  0E05               	movlw	5
  8471   0039EA  EC4D  F01D         	call	i2_color_writetoaddr
  8472                           
  8473                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  8474   0039EE  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  8475   0039F2  0E06               	movlw	6
  8476   0039F4  EC4D  F01D         	call	i2_color_writetoaddr
  8477                           
  8478                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  8479   0039F8  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8480   0039FA  6E03               	movwf	i2color_writetoaddr@value^0,c
  8481   0039FC  0E07               	movlw	7
  8482   0039FE  EC4D  F01D         	call	i2_color_writetoaddr
  8483   003A02  0012               	return		;funcret
  8484   003A04                     __end_ofi2_Color_Interrupts_threshold:
  8485                           	callstack 0
  8486                           
  8487 ;; *************** function i2_Color_Interrupts_init *****************
  8488 ;; Defined at:
  8489 ;;		line 29 in file "interrupts.c"
  8490 ;; Parameters:    Size  Location     Type
  8491 ;;		None
  8492 ;; Auto vars:     Size  Location     Type
  8493 ;;		None
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  1    wreg      void 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, cstack
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8507 ;;Total ram usage:        1 bytes
  8508 ;; Hardware stack levels used: 1
  8509 ;; Hardware stack levels required when called: 3
  8510 ;; This function calls:
  8511 ;;		i2_color_writetoaddr
  8512 ;; This function is called by:
  8513 ;;		_Color_Interrupts_clear
  8514 ;; This function uses a non-reentrant model
  8515 ;;
  8516                           
  8517                           	psect	text49
  8518   003AD4                     __ptext49:
  8519                           	callstack 0
  8520   003AD4                     i2_Color_Interrupts_init:
  8521                           	callstack 20
  8522   003AD4                     
  8523                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  8524   003AD4  0E13               	movlw	19
  8525   003AD6  6E03               	movwf	i2color_writetoaddr@value^0,c
  8526   003AD8  0E00               	movlw	0
  8527   003ADA  EC4D  F01D         	call	i2_color_writetoaddr
  8528   003ADE                     
  8529                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8530   003ADE  0ED0               	movlw	208
  8531   003AE0  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  8532   003AE2  0ECA               	movlw	202
  8533   003AE4                     i2u413_47:
  8534   003AE4  2EE8               	decfsz	wreg,f,c
  8535   003AE6  D7FE               	bra	i2u413_47
  8536   003AE8  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  8537   003AEA  D7FC               	bra	i2u413_47
  8538   003AEC  0012               	return		;funcret
  8539   003AEE                     __end_ofi2_Color_Interrupts_init:
  8540                           	callstack 0
  8541                           
  8542 ;; *************** function i2_color_writetoaddr *****************
  8543 ;; Defined at:
  8544 ;;		line 24 in file "color.c"
  8545 ;; Parameters:    Size  Location     Type
  8546 ;;  address         1    wreg     unsigned char 
  8547 ;;  value           1    2[COMRAM] unsigned char 
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  address         1    3[COMRAM] unsigned char 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, status,2, status,0, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8559 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;Total ram usage:        2 bytes
  8564 ;; Hardware stack levels used: 1
  8565 ;; Hardware stack levels required when called: 2
  8566 ;; This function calls:
  8567 ;;		i2_I2C_2_Master_Start
  8568 ;;		i2_I2C_2_Master_Stop
  8569 ;;		i2_I2C_2_Master_Write
  8570 ;; This function is called by:
  8571 ;;		i2_Color_Interrupts_init
  8572 ;;		i2_Color_Interrupts_threshold
  8573 ;;		i2_persistence_register
  8574 ;; This function uses a non-reentrant model
  8575 ;;
  8576                           
  8577                           	psect	text50
  8578   003A9A                     __ptext50:
  8579                           	callstack 0
  8580   003A9A                     i2_color_writetoaddr:
  8581                           	callstack 20
  8582                           
  8583                           ;incstack = 0
  8584                           ;i2color_writetoaddr@address stored from wreg
  8585   003A9A  6E04               	movwf	i2color_writetoaddr@address^0,c
  8586   003A9C                     
  8587                           ;color.c: 25:     I2C_2_Master_Start();
  8588   003A9C  ECBA  F01D         	call	i2_I2C_2_Master_Start	;wreg free
  8589                           
  8590                           ;color.c: 26:     I2C_2_Master_Write(0x52 | 0x00);
  8591   003AA0  0E52               	movlw	82
  8592   003AA2  EC9B  F01D         	call	i2_I2C_2_Master_Write
  8593                           
  8594                           ;color.c: 27:     I2C_2_Master_Write(0x80 | address);
  8595   003AA6  5004               	movf	i2color_writetoaddr@address^0,w,c
  8596   003AA8  0980               	iorlw	128
  8597   003AAA  EC9B  F01D         	call	i2_I2C_2_Master_Write
  8598                           
  8599                           ;color.c: 28:     I2C_2_Master_Write(value);
  8600   003AAE  5003               	movf	i2color_writetoaddr@value^0,w,c
  8601   003AB0  EC9B  F01D         	call	i2_I2C_2_Master_Write
  8602                           
  8603                           ;color.c: 29:     I2C_2_Master_Stop();
  8604   003AB4  ECB5  F01D         	call	i2_I2C_2_Master_Stop	;wreg free
  8605   003AB8  0012               	return		;funcret
  8606   003ABA                     __end_ofi2_color_writetoaddr:
  8607                           	callstack 0
  8608                           
  8609 ;; *************** function i2_I2C_2_Master_Write *****************
  8610 ;; Defined at:
  8611 ;;		line 45 in file "i2c.c"
  8612 ;; Parameters:    Size  Location     Type
  8613 ;;  data_byte       1    wreg     unsigned char 
  8614 ;; Auto vars:     Size  Location     Type
  8615 ;;  data_byte       1    1[COMRAM] unsigned char 
  8616 ;; Return value:  Size  Location     Type
  8617 ;;                  1    wreg      void 
  8618 ;; Registers used:
  8619 ;;		wreg, status,2, status,0, cstack
  8620 ;; Tracked objects:
  8621 ;;		On entry : 0/0
  8622 ;;		On exit  : 0/0
  8623 ;;		Unchanged: 0/0
  8624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8628 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8629 ;;Total ram usage:        1 bytes
  8630 ;; Hardware stack levels used: 1
  8631 ;; Hardware stack levels required when called: 1
  8632 ;; This function calls:
  8633 ;;		i2_I2C_2_Master_Idle
  8634 ;; This function is called by:
  8635 ;;		_Color_Interrupts_clear
  8636 ;;		i2_color_writetoaddr
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text51
  8641   003B36                     __ptext51:
  8642                           	callstack 0
  8643   003B36                     i2_I2C_2_Master_Write:
  8644                           	callstack 20
  8645                           
  8646                           ;incstack = 0
  8647                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8648   003B36  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8649   003B38                     
  8650                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8651   003B38  EC16  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8652   003B3C                     
  8653                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8654   003B3C  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8655   003B40  0012               	return		;funcret
  8656   003B42                     __end_ofi2_I2C_2_Master_Write:
  8657                           	callstack 0
  8658                           
  8659 ;; *************** function i2_I2C_2_Master_Stop *****************
  8660 ;; Defined at:
  8661 ;;		line 39 in file "i2c.c"
  8662 ;; Parameters:    Size  Location     Type
  8663 ;;		None
  8664 ;; Auto vars:     Size  Location     Type
  8665 ;;		None
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  1    wreg      void 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0, cstack
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8679 ;;Total ram usage:        0 bytes
  8680 ;; Hardware stack levels used: 1
  8681 ;; Hardware stack levels required when called: 1
  8682 ;; This function calls:
  8683 ;;		i2_I2C_2_Master_Idle
  8684 ;; This function is called by:
  8685 ;;		_Color_Interrupts_clear
  8686 ;;		i2_color_writetoaddr
  8687 ;; This function uses a non-reentrant model
  8688 ;;
  8689                           
  8690                           	psect	text52
  8691   003B6A                     __ptext52:
  8692                           	callstack 0
  8693   003B6A                     i2_I2C_2_Master_Stop:
  8694                           	callstack 20
  8695   003B6A                     
  8696                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8697   003B6A  EC16  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8698   003B6E                     
  8699                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8700   003B6E  010E               	movlb	14	; () banked
  8701   003B70  85DA               	bsf	218,2,b	;volatile
  8702   003B72                     
  8703                           ; BSR set to: 14
  8704   003B72  0012               	return		;funcret
  8705   003B74                     __end_ofi2_I2C_2_Master_Stop:
  8706                           	callstack 0
  8707                           
  8708 ;; *************** function i2_I2C_2_Master_Start *****************
  8709 ;; Defined at:
  8710 ;;		line 27 in file "i2c.c"
  8711 ;; Parameters:    Size  Location     Type
  8712 ;;		None
  8713 ;; Auto vars:     Size  Location     Type
  8714 ;;		None
  8715 ;; Return value:  Size  Location     Type
  8716 ;;                  1    wreg      void 
  8717 ;; Registers used:
  8718 ;;		wreg, status,2, status,0, cstack
  8719 ;; Tracked objects:
  8720 ;;		On entry : 0/0
  8721 ;;		On exit  : 0/0
  8722 ;;		Unchanged: 0/0
  8723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;Total ram usage:        0 bytes
  8729 ;; Hardware stack levels used: 1
  8730 ;; Hardware stack levels required when called: 1
  8731 ;; This function calls:
  8732 ;;		i2_I2C_2_Master_Idle
  8733 ;; This function is called by:
  8734 ;;		_Color_Interrupts_clear
  8735 ;;		i2_color_writetoaddr
  8736 ;; This function uses a non-reentrant model
  8737 ;;
  8738                           
  8739                           	psect	text53
  8740   003B74                     __ptext53:
  8741                           	callstack 0
  8742   003B74                     i2_I2C_2_Master_Start:
  8743                           	callstack 20
  8744   003B74                     
  8745                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8746   003B74  EC16  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8747   003B78                     
  8748                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8749   003B78  010E               	movlb	14	; () banked
  8750   003B7A  81DA               	bsf	218,0,b	;volatile
  8751   003B7C                     
  8752                           ; BSR set to: 14
  8753   003B7C  0012               	return		;funcret
  8754   003B7E                     __end_ofi2_I2C_2_Master_Start:
  8755                           	callstack 0
  8756                           
  8757 ;; *************** function i2_I2C_2_Master_Idle *****************
  8758 ;; Defined at:
  8759 ;;		line 22 in file "i2c.c"
  8760 ;; Parameters:    Size  Location     Type
  8761 ;;		None
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;		None
  8764 ;; Return value:  Size  Location     Type
  8765 ;;                  1    wreg      void 
  8766 ;; Registers used:
  8767 ;;		wreg, status,2, status,0
  8768 ;; Tracked objects:
  8769 ;;		On entry : 0/0
  8770 ;;		On exit  : 0/0
  8771 ;;		Unchanged: 0/0
  8772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8776 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8777 ;;Total ram usage:        1 bytes
  8778 ;; Hardware stack levels used: 1
  8779 ;; This function calls:
  8780 ;;		Nothing
  8781 ;; This function is called by:
  8782 ;;		i2_I2C_2_Master_Start
  8783 ;;		i2_I2C_2_Master_Stop
  8784 ;;		i2_I2C_2_Master_Write
  8785 ;; This function uses a non-reentrant model
  8786 ;;
  8787                           
  8788                           	psect	text54
  8789   003A2C                     __ptext54:
  8790                           	callstack 0
  8791   003A2C                     i2_I2C_2_Master_Idle:
  8792                           	callstack 20
  8793   003A2C                     i2l216:
  8794   003A2C  010E               	movlb	14	; () banked
  8795   003A2E  B5D8               	btfsc	216,2,b	;volatile
  8796   003A30  EF1C  F01D         	goto	i2u171_41
  8797   003A34  EF1E  F01D         	goto	i2u171_40
  8798   003A38                     i2u171_41:
  8799   003A38  EF16  F01D         	goto	i2l216
  8800   003A3C                     i2u171_40:
  8801   003A3C                     
  8802                           ; BSR set to: 14
  8803   003A3C  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  8804   003A40  0E1F               	movlw	31
  8805   003A42  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  8806   003A44  A4D8               	btfss	status,2,c
  8807   003A46  EF27  F01D         	goto	i2u172_41
  8808   003A4A  EF29  F01D         	goto	i2u172_40
  8809   003A4E                     i2u172_41:
  8810   003A4E  EF16  F01D         	goto	i2l216
  8811   003A52                     i2u172_40:
  8812   003A52                     
  8813                           ; BSR set to: 14
  8814   003A52  0012               	return		;funcret
  8815   003A54                     __end_ofi2_I2C_2_Master_Idle:
  8816                           	callstack 0
  8817                           
  8818                           	psect	rparam
  8819   000000                     
  8820                           	psect	temp
  8821   000057                     btemp:
  8822                           	callstack 0
  8823   000057                     	ds	1
  8824   000000                     int$flags	set	btemp
  8825   000000                     wtemp8	set	btemp+1
  8826   000000                     ttemp5	set	btemp+1
  8827   000000                     ttemp6	set	btemp+4
  8828   000000                     ttemp7	set	btemp+8
  8829                           
  8830                           	psect	idloc
  8831                           
  8832                           ;Config register IDLOC0 @ 0x200000
  8833                           ;	unspecified, using default values
  8834   200000                     	org	2097152
  8835   200000  0FFF               	dw	4095
  8836                           
  8837                           ;Config register IDLOC1 @ 0x200002
  8838                           ;	unspecified, using default values
  8839   200002                     	org	2097154
  8840   200002  0FFF               	dw	4095
  8841                           
  8842                           ;Config register IDLOC2 @ 0x200004
  8843                           ;	unspecified, using default values
  8844   200004                     	org	2097156
  8845   200004  0FFF               	dw	4095
  8846                           
  8847                           ;Config register IDLOC3 @ 0x200006
  8848                           ;	unspecified, using default values
  8849   200006                     	org	2097158
  8850   200006  0FFF               	dw	4095
  8851                           
  8852                           ;Config register IDLOC4 @ 0x200008
  8853                           ;	unspecified, using default values
  8854   200008                     	org	2097160
  8855   200008  0FFF               	dw	4095
  8856                           
  8857                           ;Config register IDLOC5 @ 0x20000A
  8858                           ;	unspecified, using default values
  8859   20000A                     	org	2097162
  8860   20000A  0FFF               	dw	4095
  8861                           
  8862                           ;Config register IDLOC6 @ 0x20000C
  8863                           ;	unspecified, using default values
  8864   20000C                     	org	2097164
  8865   20000C  0FFF               	dw	4095
  8866                           
  8867                           ;Config register IDLOC7 @ 0x20000E
  8868                           ;	unspecified, using default values
  8869   20000E                     	org	2097166
  8870   20000E  0FFF               	dw	4095
  8871                           
  8872                           	psect	config
  8873                           
  8874                           ;Config register CONFIG1L @ 0x300000
  8875                           ;	External Oscillator mode Selection bits
  8876                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  8877                           ;	Power-up default value for COSC bits
  8878                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  8879   300000                     	org	3145728
  8880   300000  AA                 	db	170
  8881                           
  8882                           ;Config register CONFIG1H @ 0x300001
  8883                           ;	unspecified, using default values
  8884                           ;	Clock Out Enable bit
  8885                           ;	CLKOUTEN = 0x1, unprogrammed default
  8886                           ;	Clock Switch Enable bit
  8887                           ;	CSWEN = 0x1, unprogrammed default
  8888                           ;	Fail-Safe Clock Monitor Enable bit
  8889                           ;	FCMEN = 0x1, unprogrammed default
  8890   300001                     	org	3145729
  8891   300001  FF                 	db	255
  8892                           
  8893                           ;Config register CONFIG2L @ 0x300002
  8894                           ;	unspecified, using default values
  8895                           ;	Master Clear Enable bit
  8896                           ;	MCLRE = 0x1, unprogrammed default
  8897                           ;	Power-up Timer Enable bit
  8898                           ;	PWRTE = 0x1, unprogrammed default
  8899                           ;	Low-power BOR enable bit
  8900                           ;	LPBOREN = 0x1, unprogrammed default
  8901                           ;	Brown-out Reset Enable bits
  8902                           ;	BOREN = 0x3, unprogrammed default
  8903   300002                     	org	3145730
  8904   300002  FF                 	db	255
  8905                           
  8906                           ;Config register CONFIG2H @ 0x300003
  8907                           ;	unspecified, using default values
  8908                           ;	Brown Out Reset Voltage selection bits
  8909                           ;	BORV = 0x3, unprogrammed default
  8910                           ;	ZCD Disable bit
  8911                           ;	ZCD = 0x1, unprogrammed default
  8912                           ;	PPSLOCK bit One-Way Set Enable bit
  8913                           ;	PPS1WAY = 0x1, unprogrammed default
  8914                           ;	Stack Full/Underflow Reset Enable bit
  8915                           ;	STVREN = 0x1, unprogrammed default
  8916                           ;	Debugger Enable bit
  8917                           ;	DEBUG = 0x1, unprogrammed default
  8918                           ;	Extended Instruction Set Enable bit
  8919                           ;	XINST = 0x1, unprogrammed default
  8920   300003                     	org	3145731
  8921   300003  FF                 	db	255
  8922                           
  8923                           ;Config register CONFIG3L @ 0x300004
  8924                           ;	WDT Period Select bits
  8925                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8926                           ;	WDT operating mode
  8927                           ;	WDTE = OFF, WDT Disabled
  8928   300004                     	org	3145732
  8929   300004  9F                 	db	159
  8930                           
  8931                           ;Config register CONFIG3H @ 0x300005
  8932                           ;	unspecified, using default values
  8933                           ;	WDT Window Select bits
  8934                           ;	WDTCWS = 0x7, unprogrammed default
  8935                           ;	WDT input clock selector
  8936                           ;	WDTCCS = 0x7, unprogrammed default
  8937   300005                     	org	3145733
  8938   300005  FF                 	db	255
  8939                           
  8940                           ;Config register CONFIG4L @ 0x300006
  8941                           ;	unspecified, using default values
  8942                           ;	Write Protection Block 0
  8943                           ;	WRT0 = 0x1, unprogrammed default
  8944                           ;	Write Protection Block 1
  8945                           ;	WRT1 = 0x1, unprogrammed default
  8946                           ;	Write Protection Block 2
  8947                           ;	WRT2 = 0x1, unprogrammed default
  8948                           ;	Write Protection Block 3
  8949                           ;	WRT3 = 0x1, unprogrammed default
  8950                           ;	Write Protection Block 3
  8951                           ;	WRT4 = 0x1, unprogrammed default
  8952                           ;	Write Protection Block 3
  8953                           ;	WRT5 = 0x1, unprogrammed default
  8954                           ;	Write Protection Block 3
  8955                           ;	WRT6 = 0x1, unprogrammed default
  8956                           ;	Write Protection Block 3
  8957                           ;	WRT7 = 0x1, unprogrammed default
  8958   300006                     	org	3145734
  8959   300006  FF                 	db	255
  8960                           
  8961                           ;Config register CONFIG4H @ 0x300007
  8962                           ;	unspecified, using default values
  8963                           ;	Configuration Register Write Protection bit
  8964                           ;	WRTC = 0x1, unprogrammed default
  8965                           ;	Boot Block Write Protection bit
  8966                           ;	WRTB = 0x1, unprogrammed default
  8967                           ;	Data EEPROM Write Protection bit
  8968                           ;	WRTD = 0x1, unprogrammed default
  8969                           ;	Scanner Enable bit
  8970                           ;	SCANE = 0x1, unprogrammed default
  8971                           ;	Low Voltage Programming Enable bit
  8972                           ;	LVP = 0x1, unprogrammed default
  8973   300007                     	org	3145735
  8974   300007  FF                 	db	255
  8975                           
  8976                           ;Config register CONFIG5L @ 0x300008
  8977                           ;	unspecified, using default values
  8978                           ;	UserNVM Program Memory Code Protection bit
  8979                           ;	CP = 0x1, unprogrammed default
  8980                           ;	DataNVM Memory Code Protection bit
  8981                           ;	CPD = 0x1, unprogrammed default
  8982   300008                     	org	3145736
  8983   300008  FF                 	db	255
  8984                           
  8985                           ;Config register CONFIG5H @ 0x300009
  8986                           ;	unspecified, using default values
  8987   300009                     	org	3145737
  8988   300009  FF                 	db	255
  8989                           
  8990                           ;Config register CONFIG6L @ 0x30000A
  8991                           ;	unspecified, using default values
  8992                           ;	Table Read Protection Block 0
  8993                           ;	EBTR0 = 0x1, unprogrammed default
  8994                           ;	Table Read Protection Block 1
  8995                           ;	EBTR1 = 0x1, unprogrammed default
  8996                           ;	Table Read Protection Block 2
  8997                           ;	EBTR2 = 0x1, unprogrammed default
  8998                           ;	Table Read Protection Block 3
  8999                           ;	EBTR3 = 0x1, unprogrammed default
  9000                           ;	Table Read Protection Block 4
  9001                           ;	EBTR4 = 0x1, unprogrammed default
  9002                           ;	Table Read Protection Block 5
  9003                           ;	EBTR5 = 0x1, unprogrammed default
  9004                           ;	Table Read Protection Block 6
  9005                           ;	EBTR6 = 0x1, unprogrammed default
  9006                           ;	Table Read Protection Block 7
  9007                           ;	EBTR7 = 0x1, unprogrammed default
  9008   30000A                     	org	3145738
  9009   30000A  FF                 	db	255
  9010                           
  9011                           ;Config register CONFIG6H @ 0x30000B
  9012                           ;	unspecified, using default values
  9013                           ;	Boot Block Table Read Protection bit
  9014                           ;	EBTRB = 0x1, unprogrammed default
  9015   30000B                     	org	3145739
  9016   30000B  FF                 	db	255
  9017                           tosu	equ	0xFFF
  9018                           tosh	equ	0xFFE
  9019                           tosl	equ	0xFFD
  9020                           stkptr	equ	0xFFC
  9021                           pclatu	equ	0xFFB
  9022                           pclath	equ	0xFFA
  9023                           pcl	equ	0xFF9
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           prodh	equ	0xFF4
  9029                           prodl	equ	0xFF3
  9030                           indf0	equ	0xFEF
  9031                           postinc0	equ	0xFEE
  9032                           postdec0	equ	0xFED
  9033                           preinc0	equ	0xFEC
  9034                           plusw0	equ	0xFEB
  9035                           fsr0h	equ	0xFEA
  9036                           fsr0l	equ	0xFE9
  9037                           wreg	equ	0xFE8
  9038                           indf1	equ	0xFE7
  9039                           postinc1	equ	0xFE6
  9040                           postdec1	equ	0xFE5
  9041                           preinc1	equ	0xFE4
  9042                           plusw1	equ	0xFE3
  9043                           fsr1h	equ	0xFE2
  9044                           fsr1l	equ	0xFE1
  9045                           bsr	equ	0xFE0
  9046                           indf2	equ	0xFDF
  9047                           postinc2	equ	0xFDE
  9048                           postdec2	equ	0xFDD
  9049                           preinc2	equ	0xFDC
  9050                           plusw2	equ	0xFDB
  9051                           fsr2h	equ	0xFDA
  9052                           fsr2l	equ	0xFD9
  9053                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     64      86
    BANK0           160     80     138
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2785$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2785$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S323DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S323DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _wallSmash->_setMotorPWM
    _rangeCalibrate->_color_normalise
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               174   174      0  110541
                                              6 BANK0     74    74      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                            ___fladd
                             ___flge
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3701
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      10     6      4    5853
                                             60 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                    _color_normalise
                    _color_read_RGBC
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1886
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      65
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    3750
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     926
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2303
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     903
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   34477
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34854
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4285
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11026
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5109
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    4893
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3568
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     903
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1317
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     903
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     903
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      31
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   ___fladd
   ___flge
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _reverse
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     _color_normalise
     _color_read_RGBC
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash
     _setMotorPWM

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      8A       5       86.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     40      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllll     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhl      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRlllllh      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11C      63        0.0%
DATA                 0      0     11C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 14 18:53:21 2022

                            _color_read_Red 371E                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 32F4  
                              ___fldiv@sign 0032                             _color_read_Blue 380E  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 37BE                            _color_read_Green 376E  
                         ??_Interrupts_init 0009                                         l111 376C  
                                       l120 380C                                         l105 3920  
                                       l114 37BC                                         l108 3A98  
                                       l213 39AE                                         l117 385C  
                                       l141 3B88                                         l222 3B68  
                                       l126 33B8                                         l150 36C6  
                                       l231 3B28                                         l135 3B10  
                                       l216 3A04                                         l144 3B8E  
                                       l129 2DB6                                         l225 3B4A  
                                       l234 38EC                                         l138 3B82  
                                       l219 3A2A                                         l155 1A2A  
                                       l228 3B5E                                         l180 2300  
                                       l513 3B02                                         l186 2300  
                                       l522 3B1C                                         l516 3AD2  
                                       l702 3B54                                         l519 39D8  
                                       l705 3A78                                         l643 2F22  
                                       l636 3438                                         l660 3952  
                                       l646 3664                                         l663 3590  
                                       l680 32F2                                         l649 35FA  
                                       l666 351E                                         l691 30BE  
                                       l696 311E                                         l688 3208  
                                       l970 2FE0                                         l699 371C  
                                       l975 3026                            ??_motor_response 002D  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 3B04  
                       i2_color_writetoaddr 3A9A                                         wreg 000FE8  
                           _color_normalise 2C48                                        l1203 34AC  
                                      l1300 29B0                                        l1301 299E  
                                      l1233 1C1A                                        l1250 1D34  
                                      l1242 1EEA                                        l1234 1C08  
                                      l1235 1BCE                                        l1260 1DF2  
                                      l3021 3996                                        l3101 32AA  
                                      l3023 3998                                        l3111 2F52  
                                      l3103 32C2                                        l1360 2AEA  
                                      l3025 399A                                        l3017 3986  
                                      l3121 2FC0                                        l3113 2F62  
                                      l3201 110E                                        l3105 32DA  
                                      l4001 2750                                        l1259 1E04  
                                      l3027 399C                                        l3019 3990  
                                      l3123 2FCE                                        l3115 2F90  
                                      l3051 3538                                        l3211 1206  
                                      l3203 114C                                        l3107 32E6  
                                      l4011 277C                                        l4003 2760  
                                      l1363 2C46                                        l3043 3B7E  
                                      l1196 34A4                                        l1292 28B6  
                                      l3125 301E                                        l3117 2FA0  
                                      l3109 2F24                                        l3061 3584  
                                      l3053 3548                                        l3301 1870  
                                      l3221 12C6                                        l3205 118A  
                                      l4101 2A22                                        l4013 278C  
                                      l4021 27B6                                        l4005 2766  
                                      l3045 3B84                                        l1374 2BDE  
                                      l3127 3024                                        l3119 2FAE  
                                      l3055 3558                                        l3063 36C8  
                                      l3071 34C6                                        l3311 18D0  
                                      l3303 1886                                        l3231 13B2  
                                      l3223 1304                                        l3207 11C8  
                                      l3215 120C                                        l4111 2A80  
                                      l4103 2A38                                        l1287 2A92  
                                      l4031 27F8                                        l4023 27C6  
                                      l4015 279C                                        l4007 276C  
                                      l1367 2B82                                        l3047 3B8A  
                                      l3057 3568                                        l3049 3520  
                                      l3065 36DC                                        l3081 3512  
                                      l3073 34D6                                        l3313 18D2  
                                      l3233 13C6                                        l3225 1342  
                                      l3217 124A                                        l3209 11F0  
                                      l3401 21B4                                        l4113 2A86  
                                      l4105 2A52                                        l1289 28F2  
                                      l4025 27DC                                        l4017 27AC  
                                      l4009 277A                                        l4201 3698  
                                      l1298 2938                                        l4211 3AC4  
                                      l3059 3578                                        l3067 36F2  
                                      l3075 34E6                                        l3331 1964  
                                      l3315 18E6                                        l3307 188C  
                                      l3323 1916                                        l3251 14F0  
                                      l3235 13DC                                        l3227 1380  
                                      l3219 1288                                        l3171 0E94  
                                      l3243 140E                                        l3091 3252  
                                      l3083 320A                                        l3411 2266  
                                      l3403 21E0                                        l4115 2A88  
                                      l4107 2A6E                                        l4051 287A  
                                      l4043 2830                                        l4027 27EC  
                                      l4035 280C                                        l4019 27AE  
                                      l4131 2B10                                        l4123 2A96  
                                      l4203 36B4                                        l4213 39B0  
                                      l3421 33BA                                        l2701 3472  
                                      l3077 34F6                                        l3069 34AE  
                                      l3341 19B8                                        l3333 196C  
                                      l3325 1932                                        l3317 18FA  
                                      l3309 18CA                                        l3261 158A  
                                      l3253 1508                                        l3245 144C  
                                      l3237 13F0                                        l3229 139E  
                                      l3181 0FCA                                        l3173 0ED2  
                                      l3093 3266                                        l3085 3222  
                                      l3413 228E                                        l3405 21F4  
                                      l4109 2A72                                        l4061 28C0  
                                      l4053 2882                                        l4045 284A  
                                      l4037 281C                                        l4029 27F4  
                                      l4141 2B6A                                        l4125 2AA6  
                                      l4205 36B6                                        l3149 3B04  
                                      l4301 251C                                        l4221 230A  
                                      l3431 341E                                        l3423 33E4  
                                      l2711 349E                                        l2703 3478  
                                      l3079 3506                                        l3351 1A22  
                                      l3343 19E2                                        l3327 193A  
                                      l3319 1910                                        l3271 160E  
                                      l3263 15B2                                        l3247 148A  
                                      l3239 1408                                        l3191 104E  
                                      l3183 0FDE                                        l3175 0F10  
                                      l3167 0E18                                        l3095 327A  
                                      l3087 3232                                        l3415 22AA  
                                      l3407 2220                                        l4215 3B12  
                                      l4071 2918                                        l4063 28DE  
                                      l4055 2892                                        l4047 285A  
                                      l4039 281C                                        l4151 2BCE  
                                      l4143 2B6C                                        l4135 2B24  
                                      l4127 2AB4                                        l4311 2572  
                                      l4303 2530                                        l4231 2344  
                                      l4223 2316                                        l4209 3ABA  
                                      l3601 1BDC                                        l3521 1A58  
                                      l3513 1A2C                                        l3433 3420  
                                      l3425 3408                                        l3441 35FC  
                                      l2705 348E                                        l2801 3040  
                                      l3353 1A28                                        l3345 1A02  
                                      l3337 198C                                        l3329 194E  
                                      l3281 1744                                        l3273 164C  
                                      l3265 15CA                                        l3249 14C8  
                                      l3257 150E                                        l3185 0FF6  
                                      l3177 0F4E                                        l3169 0E56  
                                      l3097 3286                                        l3089 3242  
                                      l3417 22D4                                        l3409 223C  
                                      l3361 1F3C                                        l4081 2956  
                                      l4073 291E                                        l4065 28E0  
                                      l4057 28A6                                        l4049 286A  
                                      l4161 2C26                                        l4153 2BEC  
                                      l4145 2B78                                        l4137 2B2C  
                                      l4129 2AFA                                        l4313 258C  
                                      l4321 2604                                        l4305 254A  
                                      l4241 235E                                        l4233 2346  
                                      l4225 2322                                        l4217 2302  
                                      l3611 1C06                                        l3603 1BE8  
                                      l3531 1A92                                        l3523 1A68  
                                      l3515 1A38                                        l3435 342A  
                                      l3427 3412                                        l3451 3650  
                                      l3443 3608                                        l2707 3496  
                                      l2811 3098                                        l2803 3050  
                                      l3339 19A0                                        l3347 1A0A  
                                      l3291 17C6                                        l3283 176C  
                                      l3275 168A                                        l3259 154C  
                                      l3187 1022                                        l3179 0F8C  
                                      l3195 1054                                        l3099 3292  
                                      l3371 1FD8                                        l3363 1F58  
                                      l4091 29C0                                        l4083 295A  
                                      l4075 2928                                        l4067 28F0  
                                      l4059 28B4                                        l4163 2C34  
                                      l4155 2BEE                                        l4147 2BB4  
                                      l4139 2B38                                        l4171 32F4  
                                      l4331 2640                                        l4323 2620  
                                      l4315 2598                                        l4307 254C  
                                      l4251 23E0                                        l4243 2372  
                                      l4235 2348                                        l4227 232E  
                                      l4219 2306                                        l3701 1EBC  
                                      l3621 1C5C                                        l3613 1C28  
                                      l3605 1BEC                                        l3541 1AC0  
                                      l3533 1A98                                        l3525 1A78  
                                      l3517 1A46                                        l3437 342C  
                                      l3429 3414                                        l3445 3618  
                                      l3461 35D2                                        l3453 3592  
                                      l2709 3498                                        l2821 3106  
                                      l2813 30A6                                        l2805 3060  
                                      l3349 1A1C                                        l3293 1804  
                                      l3285 1782                                        l3277 16C8  
                                      l3269 15D0                                        l3197 1092  
                                      l3189 1036                                        l3381 2084  
                                      l3373 2000                                        l3365 1F82  
                                      l3357 1EEC                                        l4093 29CC  
                                      l4085 2968                                        l4077 2936  
                                      l4069 2902                                        l4165 2C36  
                                      l4157 2BF2                                        l4149 2BC0  
                                      l4181 2D54                                        l4173 2C48  
                                      l4341 26BA                                        l4333 2654  
                                      l4325 2626                                        l4317 25A4  
                                      l4309 255E                                        l4261 2488  
                                      l4253 2414                                        l4245 2380  
                                      l4237 2354                                        l4229 2342  
                                      l3711 1EDA                                        l3703 1EC2  
                                      l3631 1C96                                        l3623 1C6A  
                                      l3615 1C38                                        l3607 1BFA  
                                      l3551 1AF4                                        l3543 1AC2  
                                      l3535 1AAA                                        l3527 1A7A  
                                      l3519 1A48                                        l4191 3916  
                                      l4183 38EE                                        l3439 3436  
                                      l3447 3628                                        l3463 35E6  
                                      l3455 359E                                        l2751 2E28  
                                      l2823 3112                                        l2815 30B2  
                                      l2807 3070                                        l3295 1818  
                                      l3279 1706                                        l3199 10D0  
                                      l3391 212E                                        l3383 20B0  
                                      l3375 201A                                        l3359 1F14  
                                      l4095 29DA                                        l4087 2996  
                                      l4079 2948                                        l4159 2C16  
                                      l4175 2C50                                        l3471 3148  
                                      l4343 26CE                                        l4335 266C  
                                      l4327 2638                                        l4319 25CC  
                                      l4271 24AA                                        l4263 248A  
                                      l4255 2424                                        l4247 23BE  
                                      l4239 2356                                        l4169 3A7C  
                                      l3705 1EC4                                        l3641 1D02  
                                      l3633 1C98                                        l3625 1C78  
                                      l3609 1BFC                                        l3561 1B30  
                                      l3545 1AD2                                        l3553 1AFC  
                                      l3537 1AAC                                        l3529 1A82  
                                      l4185 38F2                                        l3449 363C  
                                      l3457 35AE                                        l3465 3B4C  
                                      l2761 2EE2                                        l2753 2E3C  
                                      l2825 3922                                        l2817 30D6  
                                      l2809 3084                                        l3297 1830  
                                      l3289 1788                                        l3393 2142  
                                      l3385 20C4                                        l3377 2044  
                                      l3369 1FAE                                        l4097 2A04  
                                      l4177 2CA4                                        l4193 3666  
                                      l3481 319C                                        l3473 3158  
                                      l4337 2680                                        l4329 263E  
                                      l4345 26E8                                        l4281 24CA  
                                      l4273 24B0                                        l4265 248E  
                                      l4257 2436                                        l4249 23C2  
                                      l3707 1ECA                                        l3651 1D5A  
                                      l3643 1D04                                        l3635 1CA2  
                                      l3627 1C84                                        l3619 1C4C  
                                      l3571 1B44                                        l3563 1B34  
                                      l3555 1B0C                                        l3547 1AE2  
                                      l3539 1AB2                                        l4187 38FC  
                                      l3459 35BE                                        l2691 343A  
                                      l2755 2E7E                                        l2747 2DB8  
                                      l2827 393A                                        l2819 30EE  
                                      l3299 185C                                        l3387 20EE  
                                      l3379 206C                                        l3395 215E  
                                      l4099 2A08                                        l4179 2CFC  
                                      l4195 3668                                        l3491 31FC  
                                      l3483 31A8                                        l3475 3168  
                                      l3467 3120                                        l4347 26EA  
                                      l4339 2698                                        l4291 24D4  
                                      l4283 24CC                                        l4275 24B8  
                                      l4267 2492                                        l4259 2446  
                                      l3493 3AEE                                        l3709 1ED8  
                                      l3661 1D88                                        l3645 1D14  
                                      l3629 1C88                                        l3637 1CA8  
                                      l3581 1B58                                        l3573 1B48  
                                      l3565 1B38                                        l3557 1B1E  
                                      l3549 1AF2                                        l4189 390C  
                                      l2693 3442                                        l2685 3A54  
                                      l2757 2E82                                        l2749 2DD4  
                                      l2829 3946                                        l3397 2188  
                                      l3389 2104                                        l4197 3680  
                                      l3485 31C0                                        l3477 317C  
                                      l3469 3138                                        l4293 24D6  
                                      l4285 24CE                                        l4277 24C0  
                                      l4269 24A6                                        l3663 1D96  
                                      l3655 1D6E                                        l3671 1DB4  
                                      l3639 1CCE                                        l3647 1D24  
                                      l3583 1B5C                                        l3575 1B4C  
                                      l3567 1B3C                                        l3559 1B2C  
                                      l3591 1B6C                                        l2695 3454  
                                      l2687 3A70                                        l2759 2E9E  
                                      l3399 219C                                        l4199 368C  
                                      l3487 31D8                                        l3479 3190  
                                      l4295 24D8                                        l4287 24D0  
                                      l4279 24C8                                        l3665 1D9E  
                                      l3657 1D78                                        l3649 1D4A  
                                      l3673 1DC2                                        l3593 1B70  
                                      l3585 1B60                                        l3577 1B50  
                                      l3569 1B40                                        l2697 345C  
                                      l3489 31F0                                        l4297 24EC  
                                      l4289 24D2                                        l3931 3B60  
                                      l3683 1E14                                        l3691 1E6A  
                                      l3675 1DC6                                        l3667 1DA2  
                                      l3659 1D86                                        l3595 1B9A  
                                      l3587 1B64                                        l3579 1B54  
                                      l2699 3464                                        l4299 24FE  
                                      l3933 3B64                                        l3941 3B5A  
                                      l3693 1E7A                                        l3685 1E20  
                                      l3677 1DD4                                        l3669 1DB2  
                                      l3597 1BB6                                        l3589 1B68  
                                      l3927 3A04                                        l3935 3B20  
                                      l3695 1E8A                                        l3687 1E2E  
                                      l3679 1DEA                                        l3599 1BC6  
                                      l2799 3028                                        l3951 38BA  
                                      l3943 3B42                                        l3929 3A14  
                                      l3937 3B24                                        l3697 1EAA  
                                      l3689 1E68                                        l3953 38C2  
                                      l3945 3B46                                        l3961 371E  
                                      l3939 3B56                                        l3699 1EAE  
                                      l3955 38E8                                        l3947 38AE  
                                      l3963 3764                                        l3957 38EA  
                                      l3949 38B2                                        l3973 380E  
                                      l3981 3804                                        l3991 2716  
                                      l3975 3854                                        l3967 376E  
                                      l3993 2726                                        l3985 26FA  
                                      l3969 37B4                                        l3995 2736  
                                      l3987 2706                                        l3979 37BE  
                                      l3997 2746                                        l3989 2714  
                                      l3999 2748                                        _CR1L 0045  
                                      _CR2L 00CC                                        _CR3L 00C4  
                                      STR_1 0E01                                        _CR2U 0041  
                                      _CR3U 00C8                                        u3000 1E2E  
                                      u2200 0E94                                        u2120 32AA  
                                      u3001 1E2A                                        u2201 0E90  
                                      u2121 32A6                                        u3010 1E68  
                                      u2210 0ED2                                        u2130 32C2  
                                      u3011 1E64                                        u2211 0ECE  
                                      u2131 32BE                                        u3020 1E7A  
                                      u2140 2F52                                        u2300 118A  
                                      u2220 0F10                                        u3021 1E76  
                                      u2141 2F4E                                        u2301 1186  
                                      u2221 0F0C                                        u3030 1E8A  
                                      u2150 2F90                                        u2310 11C8  
                                      u2230 0F4E                                        u3031 1E86  
                                      u2151 2F8C                                        u2311 11C4  
                                      u2231 0F4A                                        u3040 1EAA  
                                      u2160 2FAE                                        u2400 144C  
                                      u2320 124A                                        u2240 0F8C  
                              _BAUD4CONbits 000EE9                                        u3041 1EA6  
                                      u2161 2FAA                                        u2401 1448  
                                      u2321 1246                                        u2241 0F88  
                                      u3050 1EBC                                        u2170 2FCE  
                                      u2410 148A                                        u2330 1288  
                                      u2250 0FCA                                        u3051 1EB8  
                                      u2171 2FCA                                        u2411 1486  
                                      u2331 1284                                        u2251 0FC6  
                                      u3060 1ED8                                        u2180 301E  
                                      u1700 348E                                        u2500 1744  
                                      u2420 14C8                                        u2340 12C6  
                                      u2260 1092                                        u3300 2726  
                                      u3061 1ED4                                        u2181 301A  
                                      u1701 348A                                        u2501 1740  
                                      u2421 14C4                                        u2341 12C2  
                                      u2261 108E                                        u3301 2722  
                                      u2510 17C6                                        u2430 154C  
                                      u2350 1304                                        u2270 10D0  
                                      u2190 0E56                                        u3310 2736  
                                      u2511 17C2                                        u4007 1776  
                                      u2431 1548                                        u2351 1300  
                                      u2271 10CC                                        u2191 0E52  
                                      u3311 2732                                        u2520 1804  
                                      u2440 158A                                        u2360 1342  
                                      u2280 110E                                        u2600 1FD8  
                                      u3400 2902                                        u3320 277A  
                                      u4017 1822                                        u2521 1800  
                                      u2441 1586                                        u2361 133E  
                                      u2281 110A                                        u2601 1FD4  
                                      u3401 28FE                                        u3321 2776  
                                      u3250 3A14                                        u2530 18CA  
                                      u2450 160E                                        u2370 1380  
                                      u2290 114C                                        u2610 2044  
                                      u3410 2918                                        u3330 278C  
                                      _T2PR 000FBC                                        u3251 3A10  
                                      u4107 309E                                        u2531 18C6  
                                      u4027 184E                                        u2451 160A  
                                      u2371 137C                                        u2291 1148  
                                      u2611 2040                                        u3411 2914  
                                      u3331 2788                                        u3260 3A2A  
                                      u2700 1A68                                        u2540 1932  
                                      u2460 164C                                        u2380 1392  
                                      u2620 2188                                        u3500 2A52  
                                      u3420 2936                                        u3340 279C  
                                      u3261 3A26                                        u2701 1A64  
                                      u4117 3902                                        u2541 192E  
                                      u4037 187A                                        u2461 1648  
                                      u2381 138A                                        u2621 2184  
                                      u3501 2A4E                                        u3421 2932  
                                      u3341 2798                                        u2710 1AAA  
                                      u1750 2DD4                                        u2550 1988  
                                      u2470 168A                                        u2630 2266  
                                      u3510 2A80                                        u3430 2956  
                                      u3350 27DC                                        u3270 38D6  
                                      u4127 3ACA                                        u2711 1AA6  
                                      u1751 2DD0                                        u2551 1984  
                                      u4047 1904                                        u2471 1686  
                                      u2631 2262                                        u3511 2A7C  
                                      u3431 2952                                        u3351 27D8  
                                      u3271 38CE                                        u2800 1BDC  
                                      u2720 1AC0                                        u1680 3454  
                                      u1760 2E9E                                        u2560 1A02  
                                      u2480 16C8                                        u2640 22D4  
                                      u3440 2968                                        u3360 281C  
                                      u3600 2C26                                        u3520 2AA6  
                                      u2801 1BD8                                        u2721 1ABC  
                                      u1681 3450                                        u1761 2E9A  
                                      u2561 19FE                                        u4057 1958  
                                      u2481 16C4                                        u2641 22D0  
                                      u3441 2964                                        u3361 2818  
                                      u3601 2C22                                        u3521 2AA2  
                                      u2810 1BFA                                        u2730 1AD2  
                                      u1690 3472                                        u1770 30D6  
                                      u2570 1A1C                                        u2490 1706  
                                      u3450 2996                                        u3370 2892  
                                      u3290 2714                                        u3610 2C34  
                                      u3530 2AB4                                        u2650 31C0  
                                      u2811 1BF6                                        u2731 1ACE  
                                      u1691 346E                                        u1771 30D2  
                                      u2571 1A18                                        u4067 19AA  
                                      u2491 1702                                        u3451 2992  
                                      u3371 288E                                        u3291 2710  
                                      u3611 2C30                                        u3531 2AB0  
                                      u2651 31BC                                        u2900 1D4A  
                                      u2820 1C1A                                        u2740 1AE2  
                                      u1780 30EE                                        u2580 1F14  
                                      u3460 29AC                                        u3380 28B4  
                                      u3540 2B10                                        u2660 31D8  
                                      u3700 2638                                        u3620 2380  
                                      u2901 1D46                                        u2821 1C16  
                                      u2741 1ADE                                        u1781 30EA  
                                      u4077 19D6                                        u2581 1F10  
                                      u3461 29A8                                        u3381 28B0  
                                      u3541 2B0C                                        u2661 31D4  
                                      u3701 2634                                        u3621 237C  
                                      u2910 1D5A                                        u2830 1C28  
                                      u2750 1B1E                                        u2398 1394  
                                      u2590 1F82                                        u3470 29C0  
                                      u3390 28DE                                        u3550 2B66  
                                      u3710 26AC                                        u3630 23E0  
                                      u2911 1D56                                        u2831 1C24  
                                      u2751 1B1A                                        u4087 36E6  
                                      u2591 1F7E                                        u3471 29BC  
                                      u3391 28DA                                        u3551 2B62  
                                      u3711 26A2                                        u3631 23DC  
                                      u2920 1D86                                        u2840 1C38  
                                      u2760 1B2C                                        u2680 1A46  
                                      u3480 29DA                                        u3560 2BB0  
                                      u3288 38D8                                        u3640 2488  
                                      u2921 1D82                                        u2841 1C34  
                                      u2761 1B28                                        u2681 1A42  
                                      u4097 3710                                        u3481 29D6  
                                      u3561 2BAC                                        u3641 2484  
                                      u2930 1D96                                        u2850 1C6A  
                                      u2770 1B9A                                        u2690 1A58  
                                      u3490 2A22                                        u3570 2BCE  
                                      u3650 24FE                                        u2931 1D92  
                                      u2851 1C66                                        u2771 1B96  
                                      u2691 1A54                                        u3491 2A1E  
                                      u3571 2BCA                                        u3651 24FA  
                                      u2940 1DB2                                        u2860 1C78  
                                      u2780 1BB2                                        u3580 2BDE  
                                      u3660 251C                                        u2941 1DAE  
                                      u2861 1C74                                        u2781 1BAC  
                                      u3581 2BDA                                        u3661 2518  
                                      u2950 1DC2                                        u2870 1C96  
                                      u2790 1BB4                                        u3590 2BEC  
                                      u3670 255E                                        u2951 1DBE  
                                      u2871 1C92                                        u3807 200A  
                                      u3591 2BE8                                        u3671 255A  
                                      u2960 1DD4                                        u2880 1CCE  
                                      u3728 26B0                                        u3680 25B8  
                                      u2961 1DD0                                        u2881 1CCA  
                                      u3817 2076                                        u3681 25AE  
                                      u3737 253C                                        u2970 1DEA  
                                      u2890 1D14                                        u2971 1DE6  
                                      u2891 1D10                                        u3907 222A  
                                      u3827 20A2                                        u3747 257E  
                                      u2980 1E00                                        u2981 1DFC  
                                      u3917 2298                                        u3837 20CE  
                                      u3757 2660                                        u2990 1E14  
                                      u2991 1E10                                        u3927 0FE8  
                                      u3847 20F8                                        u3767 268C  
                                      u3937 1014                                        u3857 2122  
                                      u3777 26DA                                        u3698 25BC  
                                      u3947 1040                                        u3867 214C  
                                      u3787 3674                                        u3957 11FA  
                                      u3877 21A6                                        u3797 1F46  
                                      u3967 13D0                                        u3887 21D2  
                                      u3977 13FA                                        u3897 21FE  
                                      u3987 14FA                                        u3997 15BC  
                                      _bLED 3B8A                                        _gLED 3B84  
                                      _rLED 3B7E                                        _main 2302  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0057  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0036                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 0033                      __end_of_color_read_Red 376E  
                           __end_of_HighISR 0036                                ___param_bank 000000  
                              main@clearArr 0068                                       ?_bLED 0001  
                                     ?_gLED 0001                                       ?_rLED 0001  
                           __end_of___fladd 1EEC                                       ?_main 0001  
                           __end_of___fldiv 2A94                             __end_of___lwdiv 34AE  
                                     i2l108 3AB8                                       i2l222 3B7C  
                                     i2l231 3B40                                       i2l216 3A2C  
                                     i2l219 3A52                                       i2l228 3B72  
                                     i2l522 3B34                                       i2l531 0032  
                                     i2l516 3AEC                                       i2l525 3984  
                                     i2l519 3A02                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 3B6A  
                __end_of_I2C_2_Master_Write 3B2A                                       main@a 007C  
                                     tablat 000FF5                       _Color_Interrupts_init 3ABA  
                           __end_of_reverse 3120                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 33BA                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 385E                       _I2C_2_Master_RepStart 3B42  
                           ?_color_read_Red 000D                                __end_of_bLED 3B90  
                              __end_of_gLED 3B8A                             __initialization 385E  
                              __end_of_rLED 3B84                                __end_of_main 26FA  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                            ??_rangeCalibrate 0060  
                                    ??_rLED 0009                                      ??_main 0066  
                             __activetblptr 000001                     __end_of_color_normalise 2DB8  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l3015 3A9C                                      i2l3131 3AD4  
                                    i2l3133 3ADE                                      i2l3135 39DA  
                                    i2l3137 3B2A                                      i2l3511 3954  
                                    i2l2713 3A2C                                      i2l2715 3A3C  
                                    i2l2763 3B74                                      i2l2771 3B38  
                                    i2l2765 3B78                                      i2l2773 3B3C  
                                    i2l3901 001C                                      i2l2767 3B6A  
                                    i2l3903 0024                                      i2l2769 3B6E  
                                    i2l3905 002A                                      i2l3907 002E  
                                    _RG6PPS 000E88                                      i2l3897 000A  
                                    i2l3899 001A                                   ??_HighISR 0009  
                  __end_of_color_click_init 3922                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4                            __end_of___xxtofl 2C48  
  Color_Interrupts_threshold@lowerThreshold 000F  i2Color_Interrupts_threshold@lowerThreshold 0007  
              __end_of_persistence_register 3B1E                                _CCPTMRS0bits 000FAD  
                                    ___flge 2F24                                   ??___fladd 0011  
                                    ___wmul 3A54                                   ??___fldiv 002A  
                                 ??___lwdiv 0013                                      clear_0 387C  
                                    clear_1 3888                                      clear_2 3894  
                                    isa$std 000001                                      main@mL 009E  
                                    main@mR 00A7                     ?i2_persistence_register 0001  
                    _Color_Interrupts_clear 3954                                __mediumconst 0000  
                                    tblptrh 000FF7                                      tblptrl 000FF6  
                                    tblptru 000FF8                                   ??_reverse 0020  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 3592  
                          __end_of_turnPrep 371E                                  ___flge@ff1 0009  
                                ___flge@ff2 000D                                ___xxtofl@arg 001E  
                              ___xxtofl@exp 001D                                ___xxtofl@val 0014  
                                __accesstop 0060                     __end_of__initialization 389A  
                  __end_of_color_read_Clear 380E                    __end_of_color_read_Green 37BE  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0022                            ?_color_read_Blue 000D  
                           _Interrupts_init 3AEE                              __pcstackCOMRAM 0001  
                              __pidataBANK0 3B90              __end_ofi2_persistence_register 3B36  
                              ?_tricolorLED 0001                            ?_color_normalise 003B  
                   i2_Color_Interrupts_init 3AD4                          rangeCalibrate@RGBC 003D  
                                __pbssBANK0 00B0                                  __pbssBANK1 0100  
                        rangeCalibrate@temp 0062                           _color_writetoaddr 3A7A  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0027                       __end_of_motor_retrace 2302  
                       ??_color_writetoaddr 000C                                   ?___xxtofl 0014  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   _SSP2ADD 000ED6                                     _SSP2BUF 000ED5  
                      _persistence_register 3B12                                  _buggy_path 00D9  
                                _buggy_step 004F                     __end_of_Interrupts_init 3B04  
                            _lowerThreshold 00D0                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 3A9A                          _I2C_2_Master_Start 3B60  
                       i2_I2C_2_Master_Idle 3A2C                          _I2C_2_Master_Write 3B1E  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 3B6A  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fladd 1A2C                                     ___fldiv 26FA  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 343A  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   _amb_red 004B                                     __pcinit 385E  
                                   __ramtop 0E00                                   ?_turnLeft 001C  
                                 ?_turnPrep 0021                                     __ptext0 2302  
                                   __ptext1 3120                                     __ptext2 3B04  
                                   __ptext3 3B7E                                     __ptext4 3B84  
                                   __ptext5 3B8A                                     __ptext6 3666  
                                   __ptext7 32F4                                     __ptext8 371E  
                                   __ptext9 376E                        ?i2_I2C_2_Master_Idle 0001  
                                 _T2CONbits 000FBD                                  ??___xxtofl 0018  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                              _upperThreshold 00E8  
                                   _reverse 3028                               _RxBufWriteCnt 0056  
                               motorTRIS@mL 0009                       ?_persistence_register 0001  
                               motorTRIS@mR 000B                                 wallSmash@mL 001C  
                               wallSmash@mR 001E                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 389A  
               __end_ofi2_color_writetoaddr 3ABA                           ?_color_click_init 0001  
                         __end_of_motorTRIS 3B56                           __end_of_wallSmash 320A  
                         __end_of_norm_stop 3954                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 35FC  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 3592                               _interrupt_ctr 00D6  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 33BA  
                                ??_turnLeft 0020                                  ??_turnPrep 0025  
                                 _PORTFbits 000F8E                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 3520                       ??i2_I2C_2_Master_Stop 0002  
                               ___fladd@grs 0018                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 0035                                 ___fldiv@rem 002E  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 00B0  
                              _EUSART4TXbuf 0100                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 3986  
                            __end_of___flge 3028                              _fullSpeedAhead 320A  
                            __end_of___wmul 3A7A                         color_read_Clear@tmp 0012  
                       start_initialization 385E                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 343A                      __end_of_fullSpeedAhead 32F4  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 003B                                 __pdataBANK0 00E8  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 3B7E  
              __end_ofi2_I2C_2_Master_Write 3B42                                   ___fladd@a 000D  
                                 ___fladd@b 0009                                   ___fldiv@a 0026  
                                 ___fldiv@b 0022                                 __pbssCOMRAM 0041  
                             __pcstackBANK0 0060                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 0049  
                                 _amb_green 00D4                             motor_retrace@mL 0029  
                           motor_retrace@mR 002B                            ___lwdiv@dividend 000F  
                           motor_response@j 002F                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fladd 0009  
                                  ?___fldiv 0022                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                      I2C_2_Master_Read@tmp 000C                                 __smallconst 0E00  
                         _I2C_2_Master_Idle 3A04                           _I2C_2_Master_Init 3986  
                         _I2C_2_Master_Read 38AC                           _I2C_2_Master_Stop 3B56  
                              _RxBufReadCnt 0055                                    ?_reverse 001C  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 1A2C                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u322_40 001A                                    i2u322_41 0016  
                                  i2u171_40 3A3C                                    i2u171_41 3A38  
                                  i2u172_40 3A52                                    i2u172_41 3A4E  
                                  i2u413_47 3AE4                                    _PIR0bits 000E33  
                                  _PIR4bits 000E37                                   _motorTRIS 3B4C  
                                 _wallSmash 3120                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 3922  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 3A2C                   __end_of_I2C_2_Master_Init 39B0  
                 __end_of_I2C_2_Master_Read 38EE                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3B60                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0053  
                  i2color_writetoaddr@value 0003                                   _turnRight 34AE  
                            _rangeCalibrate 3666               __end_of_Color_Interrupts_init 3AD4  
                           ?_motor_response 0027               __end_of_I2C_2_Master_RepStart 3B4C  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 2F24  
                      i2_I2C_2_Master_Start 3B74                        i2_I2C_2_Master_Write 3B36  
                                  __Hrparam 0000                     motor_retrace@buggy_path 0027  
                         ??_color_normalise 003D                                  ?_motorTRIS 0009  
                                  __Lrparam 0000                                  ?_wallSmash 001C  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 3A04                i2_Color_Interrupts_threshold 39DA  
               __end_ofi2_I2C_2_Master_Idle 3A54                 __end_ofi2_I2C_2_Master_Stop 3B74  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               _motor_retrace 1EEC  
                                _ANSELFbits 000EB4                               ??_tricolorLED 0009  
                                  _amb_blue 00D2                                    ___xxtofl 2A94  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                    __end_of_rangeCalibrate 36C8                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 37BE                                    __ptext11 380E  
                                  __ptext20 0E18                                    __ptext12 3B42  
                                  __ptext21 34AE                                    __ptext13 38AC  
                                  __ptext30 3B4C                                    __ptext22 36C8  
                                  __ptext14 2C48                                    __ptext31 3592  
                                  __ptext23 3028                                    __ptext15 2A94  
                                  __ptext40 3A7A                                    __ptext32 35FC  
                                  __ptext24 3922                                    __ptext16 26FA  
                                  __ptext41 3B1E                                    __ptext33 33BA  
                                  __ptext25 3520                                    __ptext17 3B12  
                                  __ptext50 3A9A                                    __ptext42 3B56  
                                  __ptext34 38EE                                    __ptext26 2DB8  
                                  __ptext18 1EEC                                    __ptext51 3B36  
                                  __ptext43 3B60                                    __ptext35 3986  
                                  __ptext27 3A54                                    __ptext19 320A  
                                  __ptext52 3B6A                                    __ptext44 3A04  
                                  __ptext36 1A2C                                    __ptext28 343A  
                                  __ptext53 3B74                                    __ptext37 3AEE  
                                  __ptext29 2F24                                    __ptext54 3A2C  
                                  __ptext46 3954                                    __ptext38 39B0  
                                  __ptext47 3B2A                                    __ptext39 3ABA  
                                  __ptext48 39DA                                    __ptext49 3AD4  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  _lost_ctr 004D                                  turnPrep@mL 0021  
                                turnPrep@mR 0023                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 007E  
                                  int$flags 0057          __end_of_Color_Interrupts_threshold 39DA  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 39B0  
                                  _turnLeft 3520                                    _turnPrep 36C8  
                            ?_motor_retrace 0027                                  _INTCONbits 000FF2  
                           ?_rangeCalibrate 003D                                 _setMotorPWM 2DB8  
                              motorLinit@mL 0009                         __end_of_tricolorLED 3B12  
                                  intlevel2 0000                                _motor_return 00D8  
                        __end_of_motorLinit 3666                          __end_of_motorRinit 35FC  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3AEE  
                          _color_click_init 38EE                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 0051  
                    i2_persistence_register 3B2A                                 ??_turnRight 0020  
                             ___fladd@signs 0015                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                                ___fladd@aexp 0016  
                    ??i2_I2C_2_Master_Write 0002                                ___fladd@bexp 0017  
                  ??_Color_Interrupts_clear 0009  
