

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 15 11:34:31 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	text49,global,reloc=2,class=CODE,delta=1
    64                           	psect	text50,global,reloc=2,class=CODE,delta=1
    65                           	psect	text51,global,reloc=2,class=CODE,delta=1
    66                           	psect	text52,global,reloc=2,class=CODE,delta=1
    67                           	psect	text53,global,reloc=2,class=CODE,delta=1
    68                           	psect	text54,global,reloc=2,class=CODE,delta=1
    69                           	psect	text55,global,reloc=2,class=CODE,delta=1
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    73                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    74                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    75   000000                     
    76                           ; Generated 06/04/2022 GMT
    77                           ; 
    78                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution. Publication is not required when
    92                           ;        this file is used in an embedded application.
    93                           ; 
    94                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    95                           ;        software without specific prior written permission.
    96                           ; 
    97                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    98                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    99                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   100                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   101                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   102                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   103                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   104                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   105                           ; 
   106                           ; 
   107                           ; Code-generator required, PIC18F67K40 Definitions
   108                           ; 
   109                           ; SFR Addresses
   110   000000                     
   111                           	psect	idataBANK0
   112   003CC2                     __pidataBANK0:
   113                           	callstack 0
   114                           
   115                           ;initializer for _upperThreshold
   116   003CC2  07D0               	dw	2000
   117   000000                     _TRISCbits	set	3971
   118   000000                     _TRISBbits	set	3970
   119   000000                     _TX4REG	set	3812
   120   000000                     _RC4STAbits	set	3815
   121   000000                     _SP4BRGH	set	3814
   122   000000                     _TRISDbits	set	3972
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATFbits	set	3966
   125   000000                     _LATHbits	set	3968
   126   000000                     _TRISAbits	set	3969
   127   000000                     _TRISEbits	set	3973
   128   000000                     _SSP2CON2bits	set	3802
   129   000000                     _RX4PPS	set	3605
   130   000000                     _SSP2CLKPPS	set	3612
   131   000000                     _SSP2DATPPS	set	3613
   132   000000                     _ANSELDbits	set	3751
   133   000000                     _ANSELFbits	set	3764
   134   000000                     _LATAbits	set	3961
   135   000000                     _LATEbits	set	3965
   136   000000                     _LATGbits	set	3967
   137   000000                     _TRISGbits	set	3975
   138   000000                     _TRISHbits	set	3976
   139   000000                     _PORTFbits	set	3982
   140   000000                     _LATDbits	set	3964
   141   000000                     _T2PR	set	4028
   142   000000                     _T2CONbits	set	4029
   143   000000                     _TMR0L	set	4051
   144   000000                     _TMR0H	set	4052
   145   000000                     _T0CON0bits	set	4053
   146   000000                     _T0CON1bits	set	4054
   147   000000                     _INTCONbits	set	4082
   148   000000                     _CCPR2H	set	4006
   149   000000                     _CCPR1H	set	4010
   150   000000                     _SSP2BUF	set	3797
   151   000000                     _SSP2ADD	set	3798
   152   000000                     _SSP2CON1bits	set	3801
   153   000000                     _RC4REG	set	3811
   154   000000                     _SP4BRGL	set	3813
   155   000000                     _TX4STAbits	set	3816
   156   000000                     _BAUD4CONbits	set	3817
   157   000000                     _SSP2CON2	set	3802
   158   000000                     _SSP2STAT	set	3800
   159   000000                     _IPR0bits	set	3615
   160   000000                     _PIE0bits	set	3625
   161   000000                     _PIE4bits	set	3629
   162   000000                     _RC0PPS	set	3682
   163   000000                     _RD5PPS	set	3695
   164   000000                     _RE2PPS	set	3700
   165   000000                     _ANSELBbits	set	3738
   166   000000                     _RD6PPS	set	3696
   167   000000                     _RC7PPS	set	3689
   168   000000                     _CCPR4H	set	3873
   169   000000                     _CCPR3H	set	3877
   170   000000                     _PIR0bits	set	3635
   171   000000                     _PIR4bits	set	3639
   172   000000                     _RE4PPS	set	3702
   173   000000                     _RG6PPS	set	3720
   174   000000                     _T2CLKCONbits	set	4031
   175   000000                     _T2HLTbits	set	4030
   176   000000                     _CCP1CONbits	set	4011
   177   000000                     _CCPTMRS0bits	set	4013
   178   000000                     _CCP2CONbits	set	4007
   179   000000                     _CCP3CONbits	set	3878
   180   000000                     _CCP4CONbits	set	3874
   181                           
   182                           	psect	smallconst
   183   000E00                     __psmallconst:
   184                           	callstack 0
   185   000E00  00                 	db	0
   186   000E01                     
   187                           ; BSR set to: 14
   188   000E01  52                 	db	82	;'R'
   189   000E02  47                 	db	71	;'G'
   190   000E03  42                 	db	66	;'B'
   191   000E04  43                 	db	67	;'C'
   192   000E05  3A                 	db	58	;':'
   193   000E06  25                 	db	37
   194   000E07  66                 	db	102	;'f'
   195   000E08  20                 	db	32
   196   000E09  25                 	db	37
   197   000E0A  66                 	db	102	;'f'
   198   000E0B  20                 	db	32
   199   000E0C  25                 	db	37
   200   000E0D  66                 	db	102	;'f'
   201   000E0E  20                 	db	32
   202   000E0F  25                 	db	37
   203   000E10  66                 	db	102	;'f'
   204   000E11  20                 	db	32
   205   000E12  25                 	db	37
   206   000E13  66                 	db	102	;'f'
   207   000E14  0A                 	db	10
   208   000E15  00                 	db	0
   209   000E16  00                 	db	0	; dummy byte at the end
   210   000000                     
   211                           ; #config settings
   212                           
   213                           	psect	cinit
   214   003988                     __pcinit:
   215                           	callstack 0
   216   003988                     start_initialization:
   217                           	callstack 0
   218   003988                     __initialization:
   219                           	callstack 0
   220                           
   221                           ; Initialize objects allocated to BANK0 (2 bytes)
   222                           ; load TBLPTR registers with __pidataBANK0
   223   003988  0EC2               	movlw	low __pidataBANK0
   224   00398A  6EF6               	movwf	tblptrl,c
   225   00398C  0E3C               	movlw	high __pidataBANK0
   226   00398E  6EF7               	movwf	tblptrh,c
   227   003990  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   228   003992  6EF8               	movwf	tblptru,c
   229   003994  0009               	tblrd		*+	;fetch initializer
   230   003996  CFF5 F0EA          	movff	tablat,__pdataBANK0
   231   00399A  0009               	tblrd		*+	;fetch initializer
   232   00399C  CFF5 F0EB          	movff	tablat,__pdataBANK0+1
   233                           
   234                           ; Clear objects allocated to BANK1 (60 bytes)
   235   0039A0  EE01  F000         	lfsr	0,__pbssBANK1
   236   0039A4  0E3C               	movlw	60
   237   0039A6                     clear_0:
   238   0039A6  6AEE               	clrf	postinc0,c
   239   0039A8  06E8               	decf	wreg,f,c
   240   0039AA  E1FD               	bnz	clear_0
   241                           
   242                           ; Clear objects allocated to BANK0 (54 bytes)
   243   0039AC  EE00  F0B4         	lfsr	0,__pbssBANK0
   244   0039B0  0E36               	movlw	54
   245   0039B2                     clear_1:
   246   0039B2  6AEE               	clrf	postinc0,c
   247   0039B4  06E8               	decf	wreg,f,c
   248   0039B6  E1FD               	bnz	clear_1
   249                           
   250                           ; Clear objects allocated to COMRAM (24 bytes)
   251   0039B8  EE00  F03F         	lfsr	0,__pbssCOMRAM
   252   0039BC  0E18               	movlw	24
   253   0039BE                     clear_2:
   254   0039BE  6AEE               	clrf	postinc0,c
   255   0039C0  06E8               	decf	wreg,f,c
   256   0039C2  E1FD               	bnz	clear_2
   257   0039C4                     end_of_initialization:
   258                           	callstack 0
   259   0039C4                     __end_of__initialization:
   260                           	callstack 0
   261   0039C4  9057               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   262   0039C6  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   263   0039C8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   264   0039CA  6EF8               	movwf	tblptru,c
   265   0039CC  0E0E               	movlw	high __Lsmallconst
   266   0039CE  6EF7               	movwf	tblptrh,c
   267   0039D0  0100               	movlb	0
   268   0039D2  EF5E  F013         	goto	_main	;jump to C main() function
   269                           
   270                           	psect	bssCOMRAM
   271   00003F                     __pbssCOMRAM:
   272                           	callstack 0
   273   00003F                     _CR2L:
   274                           	callstack 0
   275   00003F                     	ds	4
   276   000043                     _CR2U:
   277                           	callstack 0
   278   000043                     	ds	4
   279   000047                     _CR1L:
   280                           	callstack 0
   281   000047                     	ds	4
   282   00004B                     _amb_clear:
   283                           	callstack 0
   284   00004B                     	ds	2
   285   00004D                     _amb_red:
   286                           	callstack 0
   287   00004D                     	ds	2
   288   00004F                     _lost_ctr:
   289                           	callstack 0
   290   00004F                     	ds	2
   291   000051                     _buggy_step:
   292                           	callstack 0
   293   000051                     	ds	2
   294   000053                     _TxBufReadCnt:
   295                           	callstack 0
   296   000053                     	ds	1
   297   000054                     _TxBufWriteCnt:
   298                           	callstack 0
   299   000054                     	ds	1
   300   000055                     _RxBufReadCnt:
   301                           	callstack 0
   302   000055                     	ds	1
   303   000056                     _RxBufWriteCnt:
   304                           	callstack 0
   305   000056                     	ds	1
   306                           
   307                           	psect	bssBANK0
   308   0000B4                     __pbssBANK0:
   309                           	callstack 0
   310   0000B4                     _EUSART4RXbuf:
   311                           	callstack 0
   312   0000B4                     	ds	20
   313   0000C8                     _CR3L:
   314                           	callstack 0
   315   0000C8                     	ds	4
   316   0000CC                     _CR3U:
   317                           	callstack 0
   318   0000CC                     	ds	4
   319   0000D0                     _lowerThreshold:
   320                           	callstack 0
   321   0000D0                     	ds	2
   322   0000D2                     _amb_blue:
   323                           	callstack 0
   324   0000D2                     	ds	2
   325   0000D4                     _amb_green:
   326                           	callstack 0
   327   0000D4                     	ds	2
   328   0000D6                     _interrupt_ctr:
   329                           	callstack 0
   330   0000D6                     	ds	2
   331   0000D8                     _interrupt_flag:
   332                           	callstack 0
   333   0000D8                     	ds	2
   334   0000DA                     _motor_return:
   335                           	callstack 0
   336   0000DA                     	ds	1
   337   0000DB                     _buggy_path:
   338                           	callstack 0
   339   0000DB                     	ds	15
   340                           
   341                           	psect	dataBANK0
   342   0000EA                     __pdataBANK0:
   343                           	callstack 0
   344   0000EA                     _upperThreshold:
   345                           	callstack 0
   346   0000EA                     	ds	2
   347                           
   348                           	psect	bssBANK1
   349   000100                     __pbssBANK1:
   350                           	callstack 0
   351   000100                     _EUSART4TXbuf:
   352                           	callstack 0
   353   000100                     	ds	60
   354                           
   355                           	psect	cstackBANK0
   356   000060                     __pcstackBANK0:
   357                           	callstack 0
   358   000060                     rangeCalibrate@RGBC:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x0
   362   000060                     	ds	2
   363   000062                     rangeCalibrate@mL:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x2
   367   000062                     	ds	2
   368   000064                     rangeCalibrate@mR:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x4
   372   000064                     	ds	2
   373   000066                     rangeCalibrate@clearArr:
   374                           	callstack 0
   375                           
   376                           ; 24 bytes @ 0x6
   377   000066                     	ds	24
   378   00007E                     rangeCalibrate@calibCtr:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x1E
   382   00007E                     	ds	2
   383   000080                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x20
   386   000080                     	ds	2
   387   000082                     main@RGBC:
   388                           	callstack 0
   389                           
   390                           ; 32 bytes @ 0x22
   391   000082                     	ds	32
   392   0000A2                     main@mL:
   393                           	callstack 0
   394                           
   395                           ; 9 bytes @ 0x42
   396   0000A2                     	ds	9
   397   0000AB                     main@mR:
   398                           	callstack 0
   399                           
   400                           ; 9 bytes @ 0x4B
   401   0000AB                     	ds	9
   402                           
   403                           	psect	cstackCOMRAM
   404   000001                     __pcstackCOMRAM:
   405                           	callstack 0
   406   000001                     ??i2_I2C_2_Master_Idle:
   407   000001                     
   408                           ; 1 bytes @ 0x0
   409   000001                     	ds	1
   410   000002                     i2I2C_2_Master_Write@data_byte:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414   000002                     	ds	1
   415   000003                     i2color_writetoaddr@value:
   416                           	callstack 0
   417                           
   418                           ; 1 bytes @ 0x2
   419   000003                     	ds	1
   420   000004                     i2color_writetoaddr@address:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x3
   424   000004                     	ds	1
   425   000005                     ??i2_Color_Interrupts_init:
   426   000005                     i2Color_Interrupts_threshold@upperThreshold:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x4
   430   000005                     	ds	2
   431   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x6
   435   000007                     	ds	2
   436   000009                     ??_I2C_2_Master_Idle:
   437   000009                     ?___wmul:
   438                           	callstack 0
   439   000009                     ?___fladd:
   440                           	callstack 0
   441   000009                     initDCmotorsPWM@PWMperiod:
   442                           	callstack 0
   443   000009                     motorLinit@mL:
   444                           	callstack 0
   445   000009                     motorRinit@mR:
   446                           	callstack 0
   447   000009                     motorTRIS@mL:
   448                           	callstack 0
   449   000009                     ___wmul@multiplier:
   450                           	callstack 0
   451   000009                     ___flge@ff1:
   452                           	callstack 0
   453   000009                     ___fladd@b:
   454                           	callstack 0
   455                           
   456                           ; 4 bytes @ 0x8
   457   000009                     	ds	1
   458   00000A                     ??_I2C_2_Master_Read:
   459   00000A                     I2C_2_Master_Write@data_byte:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x9
   463   00000A                     	ds	1
   464   00000B                     color_writetoaddr@value:
   465                           	callstack 0
   466   00000B                     I2C_2_Master_Read@ack:
   467                           	callstack 0
   468   00000B                     motorTRIS@mR:
   469                           	callstack 0
   470   00000B                     ___wmul@multiplicand:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xA
   474   00000B                     	ds	1
   475   00000C                     color_writetoaddr@address:
   476                           	callstack 0
   477   00000C                     I2C_2_Master_Read@tmp:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xB
   481   00000C                     	ds	1
   482   00000D                     ??_Color_Interrupts_init:
   483   00000D                     ??_color_click_init:
   484   00000D                     ?_color_read_Red:
   485                           	callstack 0
   486   00000D                     ?_color_read_Green:
   487                           	callstack 0
   488   00000D                     ?_color_read_Blue:
   489                           	callstack 0
   490   00000D                     ?_color_read_Clear:
   491                           	callstack 0
   492   00000D                     Color_Interrupts_threshold@upperThreshold:
   493                           	callstack 0
   494   00000D                     ___wmul@product:
   495                           	callstack 0
   496   00000D                     ___flge@ff2:
   497                           	callstack 0
   498   00000D                     ___fladd@a:
   499                           	callstack 0
   500                           
   501                           ; 4 bytes @ 0xC
   502   00000D                     	ds	2
   503   00000F                     ??_color_read_Red:
   504   00000F                     ??_color_read_Green:
   505   00000F                     ??_color_read_Blue:
   506   00000F                     ??_color_read_Clear:
   507   00000F                     ?___lwdiv:
   508                           	callstack 0
   509   00000F                     Color_Interrupts_threshold@lowerThreshold:
   510                           	callstack 0
   511   00000F                     ___lwdiv@dividend:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0xE
   515   00000F                     	ds	2
   516   000011                     ??___fladd:
   517   000011                     ??___flge:
   518   000011                     ___lwdiv@divisor:
   519                           	callstack 0
   520                           
   521                           ; 2 bytes @ 0x10
   522   000011                     	ds	1
   523   000012                     color_read_Red@tmp:
   524                           	callstack 0
   525   000012                     color_read_Green@tmp:
   526                           	callstack 0
   527   000012                     color_read_Blue@tmp:
   528                           	callstack 0
   529   000012                     color_read_Clear@tmp:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x11
   533   000012                     	ds	1
   534   000013                     ___lwdiv@quotient:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x12
   538   000013                     	ds	1
   539   000014                     ?___xxtofl:
   540                           	callstack 0
   541   000014                     ___xxtofl@val:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x13
   545   000014                     	ds	1
   546   000015                     ___lwdiv@counter:
   547                           	callstack 0
   548   000015                     ___fladd@signs:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x14
   552   000015                     	ds	1
   553   000016                     ___fladd@aexp:
   554                           	callstack 0
   555   000016                     setMotorPWM@m:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x15
   559   000016                     	ds	1
   560   000017                     ___fladd@bexp:
   561                           	callstack 0
   562                           
   563                           ; 1 bytes @ 0x16
   564   000017                     	ds	1
   565   000018                     ??_setMotorPWM:
   566   000018                     ??___xxtofl:
   567   000018                     ___fladd@grs:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x17
   571   000018                     	ds	2
   572   00001A                     setMotorPWM@posDuty:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x19
   576   00001A                     	ds	1
   577   00001B                     setMotorPWM@negDuty:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x1A
   581   00001B                     	ds	1
   582   00001C                     ___xxtofl@sign:
   583                           	callstack 0
   584   00001C                     norm_stop@mL:
   585                           	callstack 0
   586   00001C                     turnLeft@mL:
   587                           	callstack 0
   588   00001C                     turnRight@mL:
   589                           	callstack 0
   590   00001C                     fullSpeedAhead@mL:
   591                           	callstack 0
   592   00001C                     wallSmash@mL:
   593                           	callstack 0
   594   00001C                     reverse@mL:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x1B
   598   00001C                     	ds	1
   599   00001D                     ___xxtofl@exp:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x1C
   603   00001D                     	ds	1
   604   00001E                     norm_stop@mR:
   605                           	callstack 0
   606   00001E                     turnLeft@mR:
   607                           	callstack 0
   608   00001E                     turnRight@mR:
   609                           	callstack 0
   610   00001E                     fullSpeedAhead@mR:
   611                           	callstack 0
   612   00001E                     wallSmash@mR:
   613                           	callstack 0
   614   00001E                     reverse@mR:
   615                           	callstack 0
   616   00001E                     ___xxtofl@arg:
   617                           	callstack 0
   618                           
   619                           ; 4 bytes @ 0x1D
   620   00001E                     	ds	2
   621   000020                     ??_reverse:
   622   000020                     
   623                           ; 1 bytes @ 0x1F
   624   000020                     	ds	1
   625   000021                     turnPrep@mL:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x20
   629   000021                     	ds	1
   630   000022                     ?___fldiv:
   631                           	callstack 0
   632   000022                     color_read_RGBC@temp:
   633                           	callstack 0
   634   000022                     ___fldiv@b:
   635                           	callstack 0
   636                           
   637                           ; 4 bytes @ 0x21
   638   000022                     	ds	1
   639   000023                     turnPrep@mR:
   640                           	callstack 0
   641                           
   642                           ; 2 bytes @ 0x22
   643   000023                     	ds	1
   644   000024                     
   645                           ; 1 bytes @ 0x23
   646   000024                     	ds	1
   647   000025                     ??_turnPrep:
   648                           
   649                           ; 1 bytes @ 0x24
   650   000025                     	ds	1
   651   000026                     ___fldiv@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x25
   655   000026                     	ds	1
   656   000027                     motor_response@temp:
   657                           	callstack 0
   658   000027                     motor_retrace@buggy_path:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x26
   662   000027                     	ds	2
   663   000029                     motor_response@mL:
   664                           	callstack 0
   665   000029                     motor_retrace@mL:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x28
   669   000029                     	ds	1
   670   00002A                     ??___fldiv:
   671                           
   672                           ; 1 bytes @ 0x29
   673   00002A                     	ds	1
   674   00002B                     motor_response@mR:
   675                           	callstack 0
   676   00002B                     motor_retrace@mR:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x2A
   680   00002B                     	ds	2
   681   00002D                     ??_motor_response:
   682   00002D                     ??_motor_retrace:
   683                           
   684                           ; 1 bytes @ 0x2C
   685   00002D                     	ds	1
   686   00002E                     ___fldiv@rem:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x2D
   690   00002E                     	ds	1
   691   00002F                     motor_response@j:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x2E
   695   00002F                     	ds	3
   696   000032                     ___fldiv@sign:
   697                           	callstack 0
   698                           
   699                           ; 1 bytes @ 0x31
   700   000032                     	ds	1
   701   000033                     ___fldiv@new_exp:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x32
   705   000033                     	ds	2
   706   000035                     ___fldiv@grs:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x34
   710   000035                     	ds	4
   711   000039                     ___fldiv@bexp:
   712                           	callstack 0
   713                           
   714                           ; 1 bytes @ 0x38
   715   000039                     	ds	1
   716   00003A                     ___fldiv@aexp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x39
   720   00003A                     	ds	1
   721   00003B                     color_normalise@RGBC:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x3A
   725   00003B                     	ds	2
   726   00003D                     ??_rangeCalibrate:
   727                           
   728                           ; 1 bytes @ 0x3C
   729   00003D                     	ds	2
   730                           
   731 ;;
   732 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   733 ;;
   734 ;; *************** function _main *****************
   735 ;; Defined at:
   736 ;;		line 21 in file "main.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;		None
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  buf           100    0        unsigned char [100]
   741 ;;  RGBC           32   34[BANK0 ] struct RGBC_val
   742 ;;  mR              9   75[BANK0 ] struct DC_motor
   743 ;;  mL              9   66[BANK0 ] struct DC_motor
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   754 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   755 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;Total ram usage:       52 bytes
   758 ;; Hardware stack levels required when called: 11
   759 ;; This function calls:
   760 ;;		_Color_Interrupts_init
   761 ;;		_Color_Interrupts_threshold
   762 ;;		_Interrupts_init
   763 ;;		_calibSwitchInit
   764 ;;		_color_click_init
   765 ;;		_color_normalise
   766 ;;		_color_read_RGBC
   767 ;;		_fullSpeedAhead
   768 ;;		_initDCmotorsPWM
   769 ;;		_motorLinit
   770 ;;		_motorRinit
   771 ;;		_motorTRIS
   772 ;;		_motor_response
   773 ;;		_motor_retrace
   774 ;;		_norm_stop
   775 ;;		_persistence_register
   776 ;;		_rangeCalibrate
   777 ;;		_tricolorLED
   778 ;;		_turnLeft
   779 ;;		_wallSmash
   780 ;; This function is called by:
   781 ;;		Startup code after reset
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text0
   786   0026BC                     __ptext0:
   787                           	callstack 0
   788   0026BC                     _main:
   789                           	callstack 20
   790   0026BC                     
   791                           ;main.c: 23:     tricolorLED();
   792   0026BC  EC17  F01E         	call	_tricolorLED	;wreg free
   793   0026C0                     
   794                           ;main.c: 24:     color_click_init();
   795   0026C0  EC0C  F01D         	call	_color_click_init	;wreg free
   796   0026C4                     
   797                           ;main.c: 27:     initDCmotorsPWM(200);
   798   0026C4  0E00               	movlw	0
   799   0026C6  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   800   0026C8  0EC8               	movlw	200
   801   0026CA  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   802   0026CC  ECA3  F01A         	call	_initDCmotorsPWM	;wreg free
   803   0026D0                     
   804                           ;main.c: 28:     DC_motor mL, mR;;main.c: 29:     motorLinit(&mL);
   805   0026D0  0EA2               	movlw	low main@mL
   806   0026D2  6E09               	movwf	motorLinit@mL^0,c
   807   0026D4  0E00               	movlw	high main@mL
   808   0026D6  6E0A               	movwf	(motorLinit@mL+1)^0,c
   809   0026D8  ECC4  F01B         	call	_motorLinit	;wreg free
   810   0026DC                     
   811                           ;main.c: 30:     motorRinit(&mR);
   812   0026DC  0EAB               	movlw	low main@mR
   813   0026DE  6E09               	movwf	motorRinit@mR^0,c
   814   0026E0  0E00               	movlw	high main@mR
   815   0026E2  6E0A               	movwf	(motorRinit@mR+1)^0,c
   816   0026E4  EC8F  F01B         	call	_motorRinit	;wreg free
   817   0026E8                     
   818                           ;main.c: 31:     motorTRIS(&mL, &mR);
   819   0026E8  0EA2               	movlw	low main@mL
   820   0026EA  6E09               	movwf	motorTRIS@mL^0,c
   821   0026EC  0E00               	movlw	high main@mL
   822   0026EE  6E0A               	movwf	(motorTRIS@mL+1)^0,c
   823   0026F0  0EAB               	movlw	low main@mR
   824   0026F2  6E0B               	movwf	motorTRIS@mR^0,c
   825   0026F4  0E00               	movlw	high main@mR
   826   0026F6  6E0C               	movwf	(motorTRIS@mR+1)^0,c
   827   0026F8  EC3B  F01E         	call	_motorTRIS	;wreg free
   828   0026FC                     
   829                           ;main.c: 36:     TRISDbits.TRISD7 = 0;
   830   0026FC  9E84               	bcf	132,7,c	;volatile
   831   0026FE                     
   832                           ;main.c: 37:     LATDbits.LATD7 = 0;
   833   0026FE  9E7C               	bcf	124,7,c	;volatile
   834   002700                     
   835                           ;main.c: 38:     TRISHbits.TRISH3 = 0;
   836   002700  9688               	bcf	136,3,c	;volatile
   837   002702                     
   838                           ;main.c: 39:     LATHbits.LATH3 = 0;
   839   002702  9680               	bcf	128,3,c	;volatile
   840   002704                     
   841                           ;main.c: 42:     RGBC_val RGBC;;main.c: 43:     calibSwitchInit();
   842   002704  EC54  F01E         	call	_calibSwitchInit	;wreg free
   843   002708                     
   844                           ;main.c: 44:     rangeCalibrate(&RGBC, &mL, &mR);
   845   002708  0E82               	movlw	low main@RGBC
   846   00270A  0100               	movlb	0	; () banked
   847   00270C  6F60               	movwf	rangeCalibrate@RGBC& (0+255),b
   848   00270E  0E00               	movlw	high main@RGBC
   849   002710  6F61               	movwf	(rangeCalibrate@RGBC+1)& (0+255),b
   850   002712  0EA2               	movlw	low main@mL
   851   002714  6F62               	movwf	rangeCalibrate@mL& (0+255),b
   852   002716  0E00               	movlw	high main@mL
   853   002718  6F63               	movwf	(rangeCalibrate@mL+1)& (0+255),b
   854   00271A  0EAB               	movlw	low main@mR
   855   00271C  6F64               	movwf	rangeCalibrate@mR& (0+255),b
   856   00271E  0E00               	movlw	high main@mR
   857   002720  6F65               	movwf	(rangeCalibrate@mR+1)& (0+255),b
   858   002722  ECE9  F014         	call	_rangeCalibrate	;wreg free
   859   002726                     
   860                           ;main.c: 47:     Interrupts_init();
   861   002726  EC0C  F01E         	call	_Interrupts_init	;wreg free
   862   00272A                     
   863                           ;main.c: 48:     Color_Interrupts_init();
   864   00272A  ECF2  F01D         	call	_Color_Interrupts_init	;wreg free
   865   00272E                     
   866                           ;main.c: 49:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   867   00272E  C0EA  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   868   002732  C0EB  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   869   002736  C0D0  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   870   00273A  C0D1  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   871   00273E  EC6D  F01D         	call	_Color_Interrupts_threshold	;wreg free
   872   002742                     
   873                           ;main.c: 50:     persistence_register();
   874   002742  EC1E  F01E         	call	_persistence_register	;wreg free
   875   002746                     
   876                           ;main.c: 53:     char buf[100];;main.c: 54:     motor_return = 0;
   877   002746  0E00               	movlw	0
   878   002748  0100               	movlb	0	; () banked
   879   00274A  6FDA               	movwf	_motor_return& (0+255),b
   880   00274C                     
   881                           ; BSR set to: 0
   882                           ;main.c: 55:     buggy_step = 0;
   883   00274C  0E00               	movlw	0
   884   00274E  6E52               	movwf	(_buggy_step+1)^0,c
   885   002750  0E00               	movlw	0
   886   002752  6E51               	movwf	_buggy_step^0,c
   887   002754                     
   888                           ; BSR set to: 0
   889                           ;main.c: 56:     lost_ctr = 0;
   890   002754  0E00               	movlw	0
   891   002756  6E50               	movwf	(_lost_ctr+1)^0,c
   892   002758  0E00               	movlw	0
   893   00275A  6E4F               	movwf	_lost_ctr^0,c
   894   00275C                     
   895                           ; BSR set to: 0
   896                           ;main.c: 57:     interrupt_ctr = 0;
   897   00275C  0E00               	movlw	0
   898   00275E  6FD7               	movwf	(_interrupt_ctr+1)& (0+255),b
   899   002760  0E00               	movlw	0
   900   002762  6FD6               	movwf	_interrupt_ctr& (0+255),b
   901   002764                     
   902                           ; BSR set to: 0
   903                           ;main.c: 62:     TRISHbits.TRISH0 = 0;
   904   002764  9088               	bcf	136,0,c	;volatile
   905   002766                     
   906                           ; BSR set to: 0
   907                           ;main.c: 63:     LATHbits.LATH0 = 0;
   908   002766  9080               	bcf	128,0,c	;volatile
   909   002768                     
   910                           ; BSR set to: 0
   911                           ;main.c: 66:     TRISFbits.TRISF0 = 0;
   912   002768  9086               	bcf	134,0,c	;volatile
   913   00276A                     
   914                           ; BSR set to: 0
   915                           ;main.c: 67:     LATFbits.LATF0 = 0;
   916   00276A  907E               	bcf	126,0,c	;volatile
   917   00276C                     
   918                           ; BSR set to: 0
   919                           ;main.c: 70:     TRISDbits.TRISD4 = 0;
   920   00276C  9884               	bcf	132,4,c	;volatile
   921   00276E                     
   922                           ; BSR set to: 0
   923                           ;main.c: 71:     LATDbits.LATD4 = 0;
   924   00276E  987C               	bcf	124,4,c	;volatile
   925   002770                     
   926                           ; BSR set to: 0
   927                           ;main.c: 74:     TRISDbits.TRISD3 = 0;
   928   002770  9684               	bcf	132,3,c	;volatile
   929   002772                     
   930                           ; BSR set to: 0
   931                           ;main.c: 75:     LATDbits.LATD3 = 0;
   932   002772  967C               	bcf	124,3,c	;volatile
   933   002774                     l4046:
   934                           
   935                           ; BSR set to: 0
   936                           ;main.c: 79:         fullSpeedAhead(&mL, &mR);
   937   002774  0EA2               	movlw	low main@mL
   938   002776  6E1C               	movwf	fullSpeedAhead@mL^0,c
   939   002778  0E00               	movlw	high main@mL
   940   00277A  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   941   00277C  0EAB               	movlw	low main@mR
   942   00277E  6E1E               	movwf	fullSpeedAhead@mR^0,c
   943   002780  0E00               	movlw	high main@mR
   944   002782  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   945   002784  ECCB  F019         	call	_fullSpeedAhead	;wreg free
   946   002788                     
   947                           ;main.c: 81:         if (interrupt_flag == 1 && interrupt_ctr > 1) {
   948   002788  0100               	movlb	0	; () banked
   949   00278A  05D8               	decf	_interrupt_flag& (0+255),w,b
   950   00278C  11D9               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   951   00278E  A4D8               	btfss	status,2,c
   952   002790  EFCC  F013         	goto	u3221
   953   002794  EFCE  F013         	goto	u3220
   954   002798                     u3221:
   955   002798  EFBA  F013         	goto	l4046
   956   00279C                     u3220:
   957   00279C                     
   958                           ; BSR set to: 0
   959   00279C  BFD7               	btfsc	(_interrupt_ctr+1)& (0+255),7,b
   960   00279E  EFDA  F013         	goto	u3231
   961   0027A2  51D7               	movf	(_interrupt_ctr+1)& (0+255),w,b
   962   0027A4  E109               	bnz	u3230
   963   0027A6  0E02               	movlw	2
   964   0027A8  5DD6               	subwf	_interrupt_ctr& (0+255),w,b
   965   0027AA  A0D8               	btfss	status,0,c
   966   0027AC  EFDA  F013         	goto	u3231
   967   0027B0  EFDC  F013         	goto	u3230
   968   0027B4                     u3231:
   969   0027B4  EFBA  F013         	goto	l4046
   970   0027B8                     u3230:
   971   0027B8                     
   972                           ; BSR set to: 0
   973                           ;main.c: 82:             norm_stop(&mL, &mR);
   974   0027B8  0EA2               	movlw	low main@mL
   975   0027BA  6E1C               	movwf	norm_stop@mL^0,c
   976   0027BC  0E00               	movlw	high main@mL
   977   0027BE  6E1D               	movwf	(norm_stop@mL+1)^0,c
   978   0027C0  0EAB               	movlw	low main@mR
   979   0027C2  6E1E               	movwf	norm_stop@mR^0,c
   980   0027C4  0E00               	movlw	high main@mR
   981   0027C6  6E1F               	movwf	(norm_stop@mR+1)^0,c
   982   0027C8  EC26  F01D         	call	_norm_stop	;wreg free
   983   0027CC                     
   984                           ;main.c: 83:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   985   0027CC  0E52               	movlw	82
   986   0027CE  0100               	movlb	0	; () banked
   987   0027D0  6F81               	movwf	(??_main+1)& (0+255),b
   988   0027D2  0E2B               	movlw	43
   989   0027D4  6F80               	movwf	??_main& (0+255),b
   990   0027D6  0E00               	movlw	0
   991   0027D8                     u3287:
   992   0027D8  2EE8               	decfsz	wreg,f,c
   993   0027DA  D7FE               	bra	u3287
   994   0027DC  2F80               	decfsz	??_main& (0+255),f,b
   995   0027DE  D7FC               	bra	u3287
   996   0027E0  2F81               	decfsz	(??_main+1)& (0+255),f,b
   997   0027E2  D7FA               	bra	u3287
   998   0027E4  F000               	nop	
   999   0027E6                     
  1000                           ;main.c: 84:             LATDbits.LATD7 = 0;
  1001   0027E6  9E7C               	bcf	124,7,c	;volatile
  1002   0027E8                     
  1003                           ;main.c: 86:             if (motor_return == 0) {
  1004   0027E8  0100               	movlb	0	; () banked
  1005   0027EA  51DA               	movf	_motor_return& (0+255),w,b
  1006   0027EC  A4D8               	btfss	status,2,c
  1007   0027EE  EFFB  F013         	goto	u3241
  1008   0027F2  EFFD  F013         	goto	u3240
  1009   0027F6                     u3241:
  1010   0027F6  EF3D  F014         	goto	l355
  1011   0027FA                     u3240:
  1012   0027FA                     
  1013                           ; BSR set to: 0
  1014                           ;main.c: 87:                 LATHbits.LATH3 = 1;
  1015   0027FA  8680               	bsf	128,3,c	;volatile
  1016   0027FC                     
  1017                           ; BSR set to: 0
  1018                           ;main.c: 88:                 wallSmash(&mL, &mR);
  1019   0027FC  0EA2               	movlw	low main@mL
  1020   0027FE  6E1C               	movwf	wallSmash@mL^0,c
  1021   002800  0E00               	movlw	high main@mL
  1022   002802  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1023   002804  0EAB               	movlw	low main@mR
  1024   002806  6E1E               	movwf	wallSmash@mR^0,c
  1025   002808  0E00               	movlw	high main@mR
  1026   00280A  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1027   00280C  EC56  F019         	call	_wallSmash	;wreg free
  1028   002810                     
  1029                           ;main.c: 89:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1030   002810  0E31               	movlw	49
  1031   002812  0100               	movlb	0	; () banked
  1032   002814  6F81               	movwf	(??_main+1)& (0+255),b
  1033   002816  0EB4               	movlw	180
  1034   002818  6F80               	movwf	??_main& (0+255),b
  1035   00281A  0E65               	movlw	101
  1036   00281C                     u3297:
  1037   00281C  2EE8               	decfsz	wreg,f,c
  1038   00281E  D7FE               	bra	u3297
  1039   002820  2F80               	decfsz	??_main& (0+255),f,b
  1040   002822  D7FC               	bra	u3297
  1041   002824  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1042   002826  D7FA               	bra	u3297
  1043   002828  D000               	nop2	
  1044   00282A                     
  1045                           ;main.c: 90:                 color_read_RGBC(&RGBC);
  1046   00282A  0E82               	movlw	low main@RGBC
  1047   00282C  6E22               	movwf	color_read_RGBC@temp^0,c
  1048   00282E  0E00               	movlw	high main@RGBC
  1049   002830  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
  1050   002832  EC40  F01A         	call	_color_read_RGBC	;wreg free
  1051   002836                     
  1052                           ;main.c: 91:                 color_normalise(&RGBC);
  1053   002836  0E82               	movlw	low main@RGBC
  1054   002838  6E3B               	movwf	color_normalise@RGBC^0,c
  1055   00283A  0E00               	movlw	high main@RGBC
  1056   00283C  6E3C               	movwf	(color_normalise@RGBC+1)^0,c
  1057   00283E  ECEA  F016         	call	_color_normalise	;wreg free
  1058   002842                     
  1059                           ;main.c: 92:                 buggy_path[buggy_step] = motor_response(&RGBC, &mL, &mR);
  1060   002842  0E82               	movlw	low main@RGBC
  1061   002844  6E27               	movwf	motor_response@temp^0,c
  1062   002846  0E00               	movlw	high main@RGBC
  1063   002848  6E28               	movwf	(motor_response@temp+1)^0,c
  1064   00284A  0EA2               	movlw	low main@mL
  1065   00284C  6E29               	movwf	motor_response@mL^0,c
  1066   00284E  0E00               	movlw	high main@mL
  1067   002850  6E2A               	movwf	(motor_response@mL+1)^0,c
  1068   002852  0EAB               	movlw	low main@mR
  1069   002854  6E2B               	movwf	motor_response@mR^0,c
  1070   002856  0E00               	movlw	high main@mR
  1071   002858  6E2C               	movwf	(motor_response@mR+1)^0,c
  1072   00285A  EC0C  F007         	call	_motor_response	;wreg free
  1073   00285E  0100               	movlb	0	; () banked
  1074   002860  6F80               	movwf	??_main& (0+255),b
  1075   002862  0EDB               	movlw	low _buggy_path
  1076   002864  2451               	addwf	_buggy_step^0,w,c
  1077   002866  6ED9               	movwf	fsr2l,c
  1078   002868  0E00               	movlw	high _buggy_path
  1079   00286A  2052               	addwfc	(_buggy_step+1)^0,w,c
  1080   00286C  6EDA               	movwf	fsr2h,c
  1081   00286E  C080  FFDF         	movff	??_main,indf2
  1082   002872                     
  1083                           ; BSR set to: 0
  1084                           ;main.c: 93:                 buggy_step++;
  1085   002872  4A51               	infsnz	_buggy_step^0,f,c
  1086   002874  2A52               	incf	(_buggy_step+1)^0,f,c
  1087                           
  1088                           ;main.c: 95:             } else {
  1089   002876  EFDF  F014         	goto	l4104
  1090   00287A                     l355:
  1091                           
  1092                           ; BSR set to: 0
  1093                           ;main.c: 96:                 LATDbits.LATD7 = 1;
  1094   00287A  8E7C               	bsf	124,7,c	;volatile
  1095   00287C                     
  1096                           ; BSR set to: 0
  1097                           ;main.c: 97:                 wallSmash(&mL, &mR);
  1098   00287C  0EA2               	movlw	low main@mL
  1099   00287E  6E1C               	movwf	wallSmash@mL^0,c
  1100   002880  0E00               	movlw	high main@mL
  1101   002882  6E1D               	movwf	(wallSmash@mL+1)^0,c
  1102   002884  0EAB               	movlw	low main@mR
  1103   002886  6E1E               	movwf	wallSmash@mR^0,c
  1104   002888  0E00               	movlw	high main@mR
  1105   00288A  6E1F               	movwf	(wallSmash@mR+1)^0,c
  1106   00288C  EC56  F019         	call	_wallSmash	;wreg free
  1107   002890                     
  1108                           ;main.c: 98:                 _delay((unsigned long)((600)*(64000000/4000.0)));
  1109   002890  0E31               	movlw	49
  1110   002892  0100               	movlb	0	; () banked
  1111   002894  6F81               	movwf	(??_main+1)& (0+255),b
  1112   002896  0EB4               	movlw	180
  1113   002898  6F80               	movwf	??_main& (0+255),b
  1114   00289A  0E65               	movlw	101
  1115   00289C                     u3307:
  1116   00289C  2EE8               	decfsz	wreg,f,c
  1117   00289E  D7FE               	bra	u3307
  1118   0028A0  2F80               	decfsz	??_main& (0+255),f,b
  1119   0028A2  D7FC               	bra	u3307
  1120   0028A4  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1121   0028A6  D7FA               	bra	u3307
  1122   0028A8  D000               	nop2	
  1123   0028AA                     
  1124                           ;main.c: 99:                 motor_retrace(&buggy_path, &mL, &mR);
  1125   0028AA  0EDB               	movlw	low _buggy_path
  1126   0028AC  6E27               	movwf	motor_retrace@buggy_path^0,c
  1127   0028AE  0E00               	movlw	high _buggy_path
  1128   0028B0  6E28               	movwf	(motor_retrace@buggy_path+1)^0,c
  1129   0028B2  0EA2               	movlw	low main@mL
  1130   0028B4  6E29               	movwf	motor_retrace@mL^0,c
  1131   0028B6  0E00               	movlw	high main@mL
  1132   0028B8  6E2A               	movwf	(motor_retrace@mL+1)^0,c
  1133   0028BA  0EAB               	movlw	low main@mR
  1134   0028BC  6E2B               	movwf	motor_retrace@mR^0,c
  1135   0028BE  0E00               	movlw	high main@mR
  1136   0028C0  6E2C               	movwf	(motor_retrace@mR+1)^0,c
  1137   0028C2  ECAD  F00F         	call	_motor_retrace	;wreg free
  1138   0028C6                     
  1139                           ;main.c: 100:                 buggy_step--;
  1140   0028C6  0651               	decf	_buggy_step^0,f,c
  1141   0028C8  A0D8               	btfss	status,0,c
  1142   0028CA  0652               	decf	(_buggy_step+1)^0,f,c
  1143                           
  1144                           ;main.c: 103:                 if (buggy_step == 1) {
  1145   0028CC  0451               	decf	_buggy_step^0,w,c
  1146   0028CE  1052               	iorwf	(_buggy_step+1)^0,w,c
  1147   0028D0  A4D8               	btfss	status,2,c
  1148   0028D2  EF6D  F014         	goto	u3251
  1149   0028D6  EF6F  F014         	goto	u3250
  1150   0028DA                     u3251:
  1151   0028DA  EFDF  F014         	goto	l4104
  1152   0028DE                     u3250:
  1153   0028DE                     
  1154                           ;main.c: 104:                     motor_return = 0;
  1155   0028DE  0E00               	movlw	0
  1156   0028E0  0100               	movlb	0	; () banked
  1157   0028E2  6FDA               	movwf	_motor_return& (0+255),b
  1158   0028E4                     
  1159                           ; BSR set to: 0
  1160                           ;main.c: 105:                     LATDbits.LATD4 = 0;
  1161   0028E4  987C               	bcf	124,4,c	;volatile
  1162   0028E6                     
  1163                           ; BSR set to: 0
  1164                           ;main.c: 106:                     fullSpeedAhead(&mL, &mR);
  1165   0028E6  0EA2               	movlw	low main@mL
  1166   0028E8  6E1C               	movwf	fullSpeedAhead@mL^0,c
  1167   0028EA  0E00               	movlw	high main@mL
  1168   0028EC  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  1169   0028EE  0EAB               	movlw	low main@mR
  1170   0028F0  6E1E               	movwf	fullSpeedAhead@mR^0,c
  1171   0028F2  0E00               	movlw	high main@mR
  1172   0028F4  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  1173   0028F6  ECCB  F019         	call	_fullSpeedAhead	;wreg free
  1174   0028FA                     
  1175                           ;main.c: 107:                     _delay((unsigned long)((2500)*(64000000/4000.0)));
  1176   0028FA  0ECB               	movlw	203
  1177   0028FC  0100               	movlb	0	; () banked
  1178   0028FE  6F81               	movwf	(??_main+1)& (0+255),b
  1179   002900  0EEC               	movlw	236
  1180   002902  6F80               	movwf	??_main& (0+255),b
  1181   002904  0E84               	movlw	132
  1182   002906                     u3317:
  1183   002906  2EE8               	decfsz	wreg,f,c
  1184   002908  D7FE               	bra	u3317
  1185   00290A  2F80               	decfsz	??_main& (0+255),f,b
  1186   00290C  D7FC               	bra	u3317
  1187   00290E  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1188   002910  D7FA               	bra	u3317
  1189   002912  F000               	nop	
  1190   002914                     
  1191                           ;main.c: 108:                     norm_stop(&mL, &mR);
  1192   002914  0EA2               	movlw	low main@mL
  1193   002916  6E1C               	movwf	norm_stop@mL^0,c
  1194   002918  0E00               	movlw	high main@mL
  1195   00291A  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1196   00291C  0EAB               	movlw	low main@mR
  1197   00291E  6E1E               	movwf	norm_stop@mR^0,c
  1198   002920  0E00               	movlw	high main@mR
  1199   002922  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1200   002924  EC26  F01D         	call	_norm_stop	;wreg free
  1201   002928                     
  1202                           ;main.c: 109:                     _delay((unsigned long)((500)*(64000000/4000.0)));
  1203   002928  0E29               	movlw	41
  1204   00292A  0100               	movlb	0	; () banked
  1205   00292C  6F81               	movwf	(??_main+1)& (0+255),b
  1206   00292E  0E96               	movlw	150
  1207   002930  6F80               	movwf	??_main& (0+255),b
  1208   002932  0E7F               	movlw	127
  1209   002934                     u3327:
  1210   002934  2EE8               	decfsz	wreg,f,c
  1211   002936  D7FE               	bra	u3327
  1212   002938  2F80               	decfsz	??_main& (0+255),f,b
  1213   00293A  D7FC               	bra	u3327
  1214   00293C  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1215   00293E  D7FA               	bra	u3327
  1216   002940                     
  1217                           ;main.c: 110:                     turnLeft(&mL, &mR);
  1218   002940  0EA2               	movlw	low main@mL
  1219   002942  6E1C               	movwf	turnLeft@mL^0,c
  1220   002944  0E00               	movlw	high main@mL
  1221   002946  6E1D               	movwf	(turnLeft@mL+1)^0,c
  1222   002948  0EAB               	movlw	low main@mR
  1223   00294A  6E1E               	movwf	turnLeft@mR^0,c
  1224   00294C  0E00               	movlw	high main@mR
  1225   00294E  6E1F               	movwf	(turnLeft@mR+1)^0,c
  1226   002950  EC56  F01B         	call	_turnLeft	;wreg free
  1227   002954                     
  1228                           ;main.c: 111:                     _delay((unsigned long)((430)*(64000000/4000.0)));
  1229   002954  0E23               	movlw	35
  1230   002956  0100               	movlb	0	; () banked
  1231   002958  6F81               	movwf	(??_main+1)& (0+255),b
  1232   00295A  0EE7               	movlw	231
  1233   00295C  6F80               	movwf	??_main& (0+255),b
  1234   00295E  0EF7               	movlw	247
  1235   002960                     u3337:
  1236   002960  2EE8               	decfsz	wreg,f,c
  1237   002962  D7FE               	bra	u3337
  1238   002964  2F80               	decfsz	??_main& (0+255),f,b
  1239   002966  D7FC               	bra	u3337
  1240   002968  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1241   00296A  D7FA               	bra	u3337
  1242   00296C  D000               	nop2	
  1243   00296E                     
  1244                           ;main.c: 112:                     LATHbits.LATH0 = !LATHbits.LATH0;
  1245   00296E  A080               	btfss	128,0,c	;volatile
  1246   002970  EFBC  F014         	goto	u3261
  1247   002974  EFC1  F014         	goto	u3260
  1248   002978                     u3261:
  1249   002978  0100               	movlb	0	; () banked
  1250   00297A  6B80               	clrf	??_main& (0+255),b
  1251   00297C  2B80               	incf	??_main& (0+255),f,b
  1252   00297E  EFC3  F014         	goto	u3278
  1253   002982                     u3260:
  1254   002982  0100               	movlb	0	; () banked
  1255   002984  6B80               	clrf	??_main& (0+255),b
  1256   002986                     u3278:
  1257   002986  5080               	movf	128,w,c	;volatile
  1258   002988  1980               	xorwf	??_main& (0+255),w,b
  1259   00298A  0BFE               	andlw	-2
  1260   00298C  1980               	xorwf	??_main& (0+255),w,b
  1261   00298E  6E80               	movwf	128,c	;volatile
  1262   002990                     
  1263                           ; BSR set to: 0
  1264                           ;main.c: 113:                     norm_stop(&mL, &mR);
  1265   002990  0EA2               	movlw	low main@mL
  1266   002992  6E1C               	movwf	norm_stop@mL^0,c
  1267   002994  0E00               	movlw	high main@mL
  1268   002996  6E1D               	movwf	(norm_stop@mL+1)^0,c
  1269   002998  0EAB               	movlw	low main@mR
  1270   00299A  6E1E               	movwf	norm_stop@mR^0,c
  1271   00299C  0E00               	movlw	high main@mR
  1272   00299E  6E1F               	movwf	(norm_stop@mR+1)^0,c
  1273   0029A0  EC26  F01D         	call	_norm_stop	;wreg free
  1274   0029A4                     
  1275                           ;main.c: 114:                     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1276   0029A4  0EA3               	movlw	163
  1277   0029A6  0100               	movlb	0	; () banked
  1278   0029A8  6F81               	movwf	(??_main+1)& (0+255),b
  1279   0029AA  0E57               	movlw	87
  1280   0029AC  6F80               	movwf	??_main& (0+255),b
  1281   0029AE  0E02               	movlw	2
  1282   0029B0                     u3347:
  1283   0029B0  2EE8               	decfsz	wreg,f,c
  1284   0029B2  D7FE               	bra	u3347
  1285   0029B4  2F80               	decfsz	??_main& (0+255),f,b
  1286   0029B6  D7FC               	bra	u3347
  1287   0029B8  2F81               	decfsz	(??_main+1)& (0+255),f,b
  1288   0029BA  D7FA               	bra	u3347
  1289   0029BC  F000               	nop	
  1290   0029BE                     l4104:
  1291                           
  1292                           ;main.c: 118:             LATHbits.LATH3 = 0;
  1293   0029BE  9680               	bcf	128,3,c	;volatile
  1294   0029C0                     
  1295                           ;main.c: 119:             interrupt_flag = 0;
  1296   0029C0  0E00               	movlw	0
  1297   0029C2  0100               	movlb	0	; () banked
  1298   0029C4  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  1299   0029C6  0E00               	movlw	0
  1300   0029C8  6FD8               	movwf	_interrupt_flag& (0+255),b
  1301   0029CA  EFBA  F013         	goto	l4046
  1302   0029CE  EF1A  F000         	goto	start
  1303   0029D2                     __end_of_main:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _tricolorLED *****************
  1307 ;; Defined at:
  1308 ;;		line 143 in file "color.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:        0 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 7
  1329 ;; This function calls:
  1330 ;;		_bLED
  1331 ;;		_gLED
  1332 ;;		_rLED
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text1
  1339   003C2E                     __ptext1:
  1340                           	callstack 0
  1341   003C2E                     _tricolorLED:
  1342                           	callstack 23
  1343   003C2E                     
  1344                           ;color.c: 145:     rLED();
  1345   003C2E  EC58  F01E         	call	_rLED	;wreg free
  1346                           
  1347                           ;color.c: 146:     gLED();
  1348   003C32  EC5B  F01E         	call	_gLED	;wreg free
  1349                           
  1350                           ;color.c: 147:     bLED();
  1351   003C36  EC5E  F01E         	call	_bLED	;wreg free
  1352   003C3A  0012               	return		;funcret
  1353   003C3C                     __end_of_tricolorLED:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _rLED *****************
  1357 ;; Defined at:
  1358 ;;		line 153 in file "color.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;		None
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;		None
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		None
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1376 ;;Total ram usage:        0 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; Hardware stack levels required when called: 6
  1379 ;; This function calls:
  1380 ;;		Nothing
  1381 ;; This function is called by:
  1382 ;;		_tricolorLED
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text2
  1387   003CB0                     __ptext2:
  1388                           	callstack 0
  1389   003CB0                     _rLED:
  1390                           	callstack 23
  1391   003CB0                     
  1392                           ;color.c: 154:     TRISGbits.TRISG0 = 0;
  1393   003CB0  9087               	bcf	135,0,c	;volatile
  1394                           
  1395                           ;color.c: 155:     LATGbits.LATG0 = 1;
  1396   003CB2  807F               	bsf	127,0,c	;volatile
  1397   003CB4  0012               	return		;funcret
  1398   003CB6                     __end_of_rLED:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _gLED *****************
  1402 ;; Defined at:
  1403 ;;		line 161 in file "color.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		None
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels used: 1
  1423 ;; Hardware stack levels required when called: 6
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_tricolorLED
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text3
  1432   003CB6                     __ptext3:
  1433                           	callstack 0
  1434   003CB6                     _gLED:
  1435                           	callstack 23
  1436   003CB6                     
  1437                           ;color.c: 162:     TRISEbits.TRISE7 = 0;
  1438   003CB6  9E85               	bcf	133,7,c	;volatile
  1439                           
  1440                           ;color.c: 163:     LATEbits.LATE7 = 1;
  1441   003CB8  8E7D               	bsf	125,7,c	;volatile
  1442   003CBA  0012               	return		;funcret
  1443   003CBC                     __end_of_gLED:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _bLED *****************
  1447 ;; Defined at:
  1448 ;;		line 169 in file "color.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;Total ram usage:        0 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 6
  1469 ;; This function calls:
  1470 ;;		Nothing
  1471 ;; This function is called by:
  1472 ;;		_tricolorLED
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text4
  1477   003CBC                     __ptext4:
  1478                           	callstack 0
  1479   003CBC                     _bLED:
  1480                           	callstack 23
  1481   003CBC                     
  1482                           ;color.c: 170:     TRISAbits.TRISA3 = 0;
  1483   003CBC  9681               	bcf	129,3,c	;volatile
  1484                           
  1485                           ;color.c: 171:     LATAbits.LATA3 = 1;
  1486   003CBE  8679               	bsf	121,3,c	;volatile
  1487   003CC0  0012               	return		;funcret
  1488   003CC2                     __end_of_bLED:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _rangeCalibrate *****************
  1492 ;; Defined at:
  1493 ;;		line 188 in file "color.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  RGBC            2    0[BANK0 ] PTR struct RGBC_val
  1496 ;;		 -> main@RGBC(32), 
  1497 ;;  mL              2    2[BANK0 ] PTR struct DC_motor
  1498 ;;		 -> main@mL(9), 
  1499 ;;  mR              2    4[BANK0 ] PTR struct DC_motor
  1500 ;;		 -> main@mR(9), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  calibCtr        2   30[BANK0 ] int 
  1503 ;;  clearArr       24    6[BANK0 ] float [6]
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1513 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1514 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1516 ;;      Totals:         2      32       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1517 ;;Total ram usage:       34 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 10
  1520 ;; This function calls:
  1521 ;;		___fladd
  1522 ;;		_color_normalise
  1523 ;;		_color_read_RGBC
  1524 ;;		_norm_stop
  1525 ;;		_wallSmash
  1526 ;; This function is called by:
  1527 ;;		_main
  1528 ;; This function uses a non-reentrant model
  1529 ;;
  1530                           
  1531                           	psect	text5
  1532   0029D2                     __ptext5:
  1533                           	callstack 0
  1534   0029D2                     _rangeCalibrate:
  1535                           	callstack 20
  1536   0029D2                     
  1537                           ;color.c: 189:     float clearArr[6];;color.c: 190:     for (int calibCtr = 0; calibCtr 
      +                          < 6;) {
  1538   0029D2  0E00               	movlw	0
  1539   0029D4  0100               	movlb	0	; () banked
  1540   0029D6  6F7F               	movwf	(rangeCalibrate@calibCtr+1)& (0+255),b
  1541   0029D8  0E00               	movlw	0
  1542   0029DA  6F7E               	movwf	rangeCalibrate@calibCtr& (0+255),b
  1543   0029DC                     l158:
  1544                           
  1545                           ; BSR set to: 0
  1546                           ;color.c: 191:         if (!PORTFbits.RF2) {
  1547   0029DC  B48E               	btfsc	142,2,c	;volatile
  1548   0029DE  EFF3  F014         	goto	u3191
  1549   0029E2  EFF5  F014         	goto	u3190
  1550   0029E6                     u3191:
  1551   0029E6  EF73  F015         	goto	l3984
  1552   0029EA                     u3190:
  1553   0029EA                     
  1554                           ; BSR set to: 0
  1555                           ;color.c: 192:             if (calibCtr != 5) {
  1556   0029EA  0E05               	movlw	5
  1557   0029EC  197E               	xorwf	rangeCalibrate@calibCtr& (0+255),w,b
  1558   0029EE  117F               	iorwf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1559   0029F0  B4D8               	btfsc	status,2,c
  1560   0029F2  EFFD  F014         	goto	u3201
  1561   0029F6  EFFF  F014         	goto	u3200
  1562   0029FA                     u3201:
  1563   0029FA  EF09  F015         	goto	l3962
  1564   0029FE                     u3200:
  1565   0029FE                     
  1566                           ; BSR set to: 0
  1567                           ;color.c: 193:                 wallSmash(mL, mR);
  1568   0029FE  C062  F01C         	movff	rangeCalibrate@mL,wallSmash@mL
  1569   002A02  C063  F01D         	movff	rangeCalibrate@mL+1,wallSmash@mL+1
  1570   002A06  C064  F01E         	movff	rangeCalibrate@mR,wallSmash@mR
  1571   002A0A  C065  F01F         	movff	rangeCalibrate@mR+1,wallSmash@mR+1
  1572   002A0E  EC56  F019         	call	_wallSmash	;wreg free
  1573   002A12                     l3962:
  1574                           
  1575                           ;color.c: 195:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1576   002A12  0E29               	movlw	41
  1577   002A14  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1578   002A16  0E96               	movlw	150
  1579   002A18  6E3D               	movwf	??_rangeCalibrate^0,c
  1580   002A1A  0E7F               	movlw	127
  1581   002A1C                     u3357:
  1582   002A1C  2EE8               	decfsz	wreg,f,c
  1583   002A1E  D7FE               	bra	u3357
  1584   002A20  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1585   002A22  D7FC               	bra	u3357
  1586   002A24  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1587   002A26  D7FA               	bra	u3357
  1588   002A28  F000               	nop	
  1589   002A2A                     
  1590                           ;color.c: 196:             LATHbits.LATH3 = 1;
  1591   002A2A  8680               	bsf	128,3,c	;volatile
  1592   002A2C                     
  1593                           ;color.c: 197:             color_read_RGBC(RGBC);
  1594   002A2C  C060  F022         	movff	rangeCalibrate@RGBC,color_read_RGBC@temp
  1595   002A30  C061  F023         	movff	rangeCalibrate@RGBC+1,color_read_RGBC@temp+1
  1596   002A34  EC40  F01A         	call	_color_read_RGBC	;wreg free
  1597   002A38                     
  1598                           ;color.c: 198:             color_normalise(RGBC);
  1599   002A38  C060  F03B         	movff	rangeCalibrate@RGBC,color_normalise@RGBC
  1600   002A3C  C061  F03C         	movff	rangeCalibrate@RGBC+1,color_normalise@RGBC+1
  1601   002A40  ECEA  F016         	call	_color_normalise	;wreg free
  1602   002A44                     
  1603                           ;color.c: 199:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1604   002A44  0E29               	movlw	41
  1605   002A46  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1606   002A48  0E96               	movlw	150
  1607   002A4A  6E3D               	movwf	??_rangeCalibrate^0,c
  1608   002A4C  0E7F               	movlw	127
  1609   002A4E                     u3367:
  1610   002A4E  2EE8               	decfsz	wreg,f,c
  1611   002A50  D7FE               	bra	u3367
  1612   002A52  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1613   002A54  D7FC               	bra	u3367
  1614   002A56  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1615   002A58  D7FA               	bra	u3367
  1616   002A5A  F000               	nop	
  1617   002A5C                     
  1618                           ;color.c: 200:             LATHbits.LATH3 = 0;
  1619   002A5C  9680               	bcf	128,3,c	;volatile
  1620   002A5E                     
  1621                           ;color.c: 201:             clearArr[calibCtr] = RGBC->norm_C;
  1622   002A5E  0100               	movlb	0	; () banked
  1623   002A60  EE20 F01C          	lfsr	2,28
  1624   002A64  5160               	movf	rangeCalibrate@RGBC& (0+255),w,b
  1625   002A66  26D9               	addwf	fsr2l,f,c
  1626   002A68  5161               	movf	(rangeCalibrate@RGBC+1)& (0+255),w,b
  1627   002A6A  22DA               	addwfc	fsr2h,f,c
  1628   002A6C  0E66               	movlw	low rangeCalibrate@clearArr
  1629   002A6E  6E3D               	movwf	??_rangeCalibrate^0,c
  1630   002A70  0E00               	movlw	high rangeCalibrate@clearArr
  1631   002A72  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1632   002A74  90D8               	bcf	status,0,c
  1633   002A76  357E               	rlcf	rangeCalibrate@calibCtr& (0+255),w,b
  1634   002A78  6EE1               	movwf	fsr1l,c
  1635   002A7A  357F               	rlcf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1636   002A7C  6EE2               	movwf	fsr1h,c
  1637   002A7E  90D8               	bcf	status,0,c
  1638   002A80  36E1               	rlcf	fsr1l,f,c
  1639   002A82  36E2               	rlcf	fsr1h,f,c
  1640   002A84  503D               	movf	??_rangeCalibrate^0,w,c
  1641   002A86  26E1               	addwf	fsr1l,f,c
  1642   002A88  503E               	movf	(??_rangeCalibrate+1)^0,w,c
  1643   002A8A  22E2               	addwfc	fsr1h,f,c
  1644   002A8C  CFDE FFE6          	movff	postinc2,postinc1
  1645   002A90  CFDE FFE6          	movff	postinc2,postinc1
  1646   002A94  CFDE FFE6          	movff	postinc2,postinc1
  1647   002A98  CFDE FFE6          	movff	postinc2,postinc1
  1648   002A9C                     
  1649                           ; BSR set to: 0
  1650                           ;color.c: 202:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1651   002A9C  0E29               	movlw	41
  1652   002A9E  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1653   002AA0  0E96               	movlw	150
  1654   002AA2  6E3D               	movwf	??_rangeCalibrate^0,c
  1655   002AA4  0E7F               	movlw	127
  1656   002AA6                     u3377:
  1657   002AA6  2EE8               	decfsz	wreg,f,c
  1658   002AA8  D7FE               	bra	u3377
  1659   002AAA  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1660   002AAC  D7FC               	bra	u3377
  1661   002AAE  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1662   002AB0  D7FA               	bra	u3377
  1663   002AB2  F000               	nop	
  1664   002AB4                     
  1665                           ;color.c: 203:             norm_stop(mL, mR);
  1666   002AB4  C062  F01C         	movff	rangeCalibrate@mL,norm_stop@mL
  1667   002AB8  C063  F01D         	movff	rangeCalibrate@mL+1,norm_stop@mL+1
  1668   002ABC  C064  F01E         	movff	rangeCalibrate@mR,norm_stop@mR
  1669   002AC0  C065  F01F         	movff	rangeCalibrate@mR+1,norm_stop@mR+1
  1670   002AC4  EC26  F01D         	call	_norm_stop	;wreg free
  1671   002AC8                     
  1672                           ;color.c: 204:             _delay((unsigned long)((500)*(64000000/4000.0)));
  1673   002AC8  0E29               	movlw	41
  1674   002ACA  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1675   002ACC  0E96               	movlw	150
  1676   002ACE  6E3D               	movwf	??_rangeCalibrate^0,c
  1677   002AD0  0E7F               	movlw	127
  1678   002AD2                     u3387:
  1679   002AD2  2EE8               	decfsz	wreg,f,c
  1680   002AD4  D7FE               	bra	u3387
  1681   002AD6  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1682   002AD8  D7FC               	bra	u3387
  1683   002ADA  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1684   002ADC  D7FA               	bra	u3387
  1685   002ADE  F000               	nop	
  1686   002AE0                     
  1687                           ;color.c: 205:             calibCtr++;
  1688   002AE0  0100               	movlb	0	; () banked
  1689   002AE2  4B7E               	infsnz	rangeCalibrate@calibCtr& (0+255),f,b
  1690   002AE4  2B7F               	incf	(rangeCalibrate@calibCtr+1)& (0+255),f,b
  1691   002AE6                     l3984:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;color.c: 207:     }
  1695   002AE6  BF7F               	btfsc	(rangeCalibrate@calibCtr+1)& (0+255),7,b
  1696   002AE8  EF7F  F015         	goto	u3211
  1697   002AEC  517F               	movf	(rangeCalibrate@calibCtr+1)& (0+255),w,b
  1698   002AEE  E109               	bnz	u3210
  1699   002AF0  0E06               	movlw	6
  1700   002AF2  5D7E               	subwf	rangeCalibrate@calibCtr& (0+255),w,b
  1701   002AF4  A0D8               	btfss	status,0,c
  1702   002AF6  EF7F  F015         	goto	u3211
  1703   002AFA  EF81  F015         	goto	u3210
  1704   002AFE                     u3211:
  1705   002AFE  EFEE  F014         	goto	l158
  1706   002B02                     u3210:
  1707   002B02                     
  1708                           ; BSR set to: 0
  1709                           ;color.c: 209:     CR1L = clearArr[0] - 0.4;
  1710   002B02  C066  F009         	movff	rangeCalibrate@clearArr,___fladd@b
  1711   002B06  C067  F00A         	movff	rangeCalibrate@clearArr+1,___fladd@b+1
  1712   002B0A  C068  F00B         	movff	rangeCalibrate@clearArr+2,___fladd@b+2
  1713   002B0E  C069  F00C         	movff	rangeCalibrate@clearArr+3,___fladd@b+3
  1714   002B12  0ECD               	movlw	205
  1715   002B14  6E0D               	movwf	___fladd@a^0,c
  1716   002B16  0ECC               	movlw	204
  1717   002B18  6E0E               	movwf	(___fladd@a+1)^0,c
  1718   002B1A  0ECC               	movlw	204
  1719   002B1C  6E0F               	movwf	(___fladd@a+2)^0,c
  1720   002B1E  0EBE               	movlw	190
  1721   002B20  6E10               	movwf	(___fladd@a+3)^0,c
  1722   002B22  EC4D  F00D         	call	___fladd	;wreg free
  1723   002B26  C009  F047         	movff	?___fladd,_CR1L
  1724   002B2A  C00A  F048         	movff	?___fladd+1,_CR1L+1
  1725   002B2E  C00B  F049         	movff	?___fladd+2,_CR1L+2
  1726   002B32  C00C  F04A         	movff	?___fladd+3,_CR1L+3
  1727                           
  1728                           ;color.c: 210:     CR2U = clearArr[1] + 0.3;
  1729   002B36  C06A  F009         	movff	rangeCalibrate@clearArr+4,___fladd@b
  1730   002B3A  C06B  F00A         	movff	rangeCalibrate@clearArr+5,___fladd@b+1
  1731   002B3E  C06C  F00B         	movff	rangeCalibrate@clearArr+6,___fladd@b+2
  1732   002B42  C06D  F00C         	movff	rangeCalibrate@clearArr+7,___fladd@b+3
  1733   002B46  0E9A               	movlw	154
  1734   002B48  6E0D               	movwf	___fladd@a^0,c
  1735   002B4A  0E99               	movlw	153
  1736   002B4C  6E0E               	movwf	(___fladd@a+1)^0,c
  1737   002B4E  0E99               	movlw	153
  1738   002B50  6E0F               	movwf	(___fladd@a+2)^0,c
  1739   002B52  0E3E               	movlw	62
  1740   002B54  6E10               	movwf	(___fladd@a+3)^0,c
  1741   002B56  EC4D  F00D         	call	___fladd	;wreg free
  1742   002B5A  C009  F043         	movff	?___fladd,_CR2U
  1743   002B5E  C00A  F044         	movff	?___fladd+1,_CR2U+1
  1744   002B62  C00B  F045         	movff	?___fladd+2,_CR2U+2
  1745   002B66  C00C  F046         	movff	?___fladd+3,_CR2U+3
  1746                           
  1747                           ;color.c: 211:     CR2L = clearArr[2] - 0.3;
  1748   002B6A  C06E  F009         	movff	rangeCalibrate@clearArr+8,___fladd@b
  1749   002B6E  C06F  F00A         	movff	rangeCalibrate@clearArr+9,___fladd@b+1
  1750   002B72  C070  F00B         	movff	rangeCalibrate@clearArr+10,___fladd@b+2
  1751   002B76  C071  F00C         	movff	rangeCalibrate@clearArr+11,___fladd@b+3
  1752   002B7A  0E9A               	movlw	154
  1753   002B7C  6E0D               	movwf	___fladd@a^0,c
  1754   002B7E  0E99               	movlw	153
  1755   002B80  6E0E               	movwf	(___fladd@a+1)^0,c
  1756   002B82  0E99               	movlw	153
  1757   002B84  6E0F               	movwf	(___fladd@a+2)^0,c
  1758   002B86  0EBE               	movlw	190
  1759   002B88  6E10               	movwf	(___fladd@a+3)^0,c
  1760   002B8A  EC4D  F00D         	call	___fladd	;wreg free
  1761   002B8E  C009  F03F         	movff	?___fladd,_CR2L
  1762   002B92  C00A  F040         	movff	?___fladd+1,_CR2L+1
  1763   002B96  C00B  F041         	movff	?___fladd+2,_CR2L+2
  1764   002B9A  C00C  F042         	movff	?___fladd+3,_CR2L+3
  1765                           
  1766                           ;color.c: 212:     CR3U = clearArr[3] + 0.4;
  1767   002B9E  C072  F009         	movff	rangeCalibrate@clearArr+12,___fladd@b
  1768   002BA2  C073  F00A         	movff	rangeCalibrate@clearArr+13,___fladd@b+1
  1769   002BA6  C074  F00B         	movff	rangeCalibrate@clearArr+14,___fladd@b+2
  1770   002BAA  C075  F00C         	movff	rangeCalibrate@clearArr+15,___fladd@b+3
  1771   002BAE  0ECD               	movlw	205
  1772   002BB0  6E0D               	movwf	___fladd@a^0,c
  1773   002BB2  0ECC               	movlw	204
  1774   002BB4  6E0E               	movwf	(___fladd@a+1)^0,c
  1775   002BB6  0ECC               	movlw	204
  1776   002BB8  6E0F               	movwf	(___fladd@a+2)^0,c
  1777   002BBA  0E3E               	movlw	62
  1778   002BBC  6E10               	movwf	(___fladd@a+3)^0,c
  1779   002BBE  EC4D  F00D         	call	___fladd	;wreg free
  1780   002BC2  C009  F0CC         	movff	?___fladd,_CR3U
  1781   002BC6  C00A  F0CD         	movff	?___fladd+1,_CR3U+1
  1782   002BCA  C00B  F0CE         	movff	?___fladd+2,_CR3U+2
  1783   002BCE  C00C  F0CF         	movff	?___fladd+3,_CR3U+3
  1784                           
  1785                           ;color.c: 213:     CR3L = clearArr[4] - 0.2;
  1786   002BD2  C076  F009         	movff	rangeCalibrate@clearArr+16,___fladd@b
  1787   002BD6  C077  F00A         	movff	rangeCalibrate@clearArr+17,___fladd@b+1
  1788   002BDA  C078  F00B         	movff	rangeCalibrate@clearArr+18,___fladd@b+2
  1789   002BDE  C079  F00C         	movff	rangeCalibrate@clearArr+19,___fladd@b+3
  1790   002BE2  0ECD               	movlw	205
  1791   002BE4  6E0D               	movwf	___fladd@a^0,c
  1792   002BE6  0ECC               	movlw	204
  1793   002BE8  6E0E               	movwf	(___fladd@a+1)^0,c
  1794   002BEA  0E4C               	movlw	76
  1795   002BEC  6E0F               	movwf	(___fladd@a+2)^0,c
  1796   002BEE  0EBE               	movlw	190
  1797   002BF0  6E10               	movwf	(___fladd@a+3)^0,c
  1798   002BF2  EC4D  F00D         	call	___fladd	;wreg free
  1799   002BF6  C009  F0C8         	movff	?___fladd,_CR3L
  1800   002BFA  C00A  F0C9         	movff	?___fladd+1,_CR3L+1
  1801   002BFE  C00B  F0CA         	movff	?___fladd+2,_CR3L+2
  1802   002C02  C00C  F0CB         	movff	?___fladd+3,_CR3L+3
  1803   002C06                     
  1804                           ;color.c: 214:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  1805   002C06  0EA3               	movlw	163
  1806   002C08  6E3E               	movwf	(??_rangeCalibrate+1)^0,c
  1807   002C0A  0E57               	movlw	87
  1808   002C0C  6E3D               	movwf	??_rangeCalibrate^0,c
  1809   002C0E  0E02               	movlw	2
  1810   002C10                     u3397:
  1811   002C10  2EE8               	decfsz	wreg,f,c
  1812   002C12  D7FE               	bra	u3397
  1813   002C14  2E3D               	decfsz	??_rangeCalibrate^0,f,c
  1814   002C16  D7FC               	bra	u3397
  1815   002C18  2E3E               	decfsz	(??_rangeCalibrate+1)^0,f,c
  1816   002C1A  D7FA               	bra	u3397
  1817   002C1C  D000               	nop2	
  1818   002C1E  0012               	return		;funcret
  1819   002C20                     __end_of_rangeCalibrate:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function _wallSmash *****************
  1823 ;; Defined at:
  1824 ;;		line 226 in file "dc_motor.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1827 ;;		 -> main@mL(9), 
  1828 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1829 ;;		 -> main@mR(9), 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1844 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1845 ;;Total ram usage:        5 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; Hardware stack levels required when called: 8
  1848 ;; This function calls:
  1849 ;;		_setMotorPWM
  1850 ;; This function is called by:
  1851 ;;		_rangeCalibrate
  1852 ;;		_main
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text6
  1857   0032AC                     __ptext6:
  1858                           	callstack 0
  1859   0032AC                     _wallSmash:
  1860                           	callstack 22
  1861   0032AC                     
  1862                           ;dc_motor.c: 226: void wallSmash(DC_motor *mL, DC_motor *mR);dc_motor.c: 227: {;dc_motor
      +                          .c: 228:     mL->power =50;
  1863   0032AC  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1864   0032B0  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1865   0032B4  0E32               	movlw	50
  1866   0032B6  6EDF               	movwf	indf2,c
  1867                           
  1868                           ;dc_motor.c: 229:     mR->power = 50;
  1869   0032B8  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1870   0032BC  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1871   0032C0  0E32               	movlw	50
  1872   0032C2  6EDF               	movwf	indf2,c
  1873   0032C4                     
  1874                           ;dc_motor.c: 230:     mR->direction = 1;
  1875   0032C4  EE20 F001          	lfsr	2,1
  1876   0032C8  501E               	movf	wallSmash@mR^0,w,c
  1877   0032CA  26D9               	addwf	fsr2l,f,c
  1878   0032CC  501F               	movf	(wallSmash@mR+1)^0,w,c
  1879   0032CE  22DA               	addwfc	fsr2h,f,c
  1880   0032D0  0E01               	movlw	1
  1881   0032D2  6EDF               	movwf	indf2,c
  1882   0032D4                     
  1883                           ;dc_motor.c: 231:     mL->direction = 1;
  1884   0032D4  EE20 F001          	lfsr	2,1
  1885   0032D8  501C               	movf	wallSmash@mL^0,w,c
  1886   0032DA  26D9               	addwf	fsr2l,f,c
  1887   0032DC  501D               	movf	(wallSmash@mL+1)^0,w,c
  1888   0032DE  22DA               	addwfc	fsr2h,f,c
  1889   0032E0  0E01               	movlw	1
  1890   0032E2  6EDF               	movwf	indf2,c
  1891   0032E4                     
  1892                           ;dc_motor.c: 232:     mL->brakemode = 1;
  1893   0032E4  EE20 F002          	lfsr	2,2
  1894   0032E8  501C               	movf	wallSmash@mL^0,w,c
  1895   0032EA  26D9               	addwf	fsr2l,f,c
  1896   0032EC  501D               	movf	(wallSmash@mL+1)^0,w,c
  1897   0032EE  22DA               	addwfc	fsr2h,f,c
  1898   0032F0  0E01               	movlw	1
  1899   0032F2  6EDF               	movwf	indf2,c
  1900   0032F4                     
  1901                           ;dc_motor.c: 233:     mR->brakemode = 1;
  1902   0032F4  EE20 F002          	lfsr	2,2
  1903   0032F8  501E               	movf	wallSmash@mR^0,w,c
  1904   0032FA  26D9               	addwf	fsr2l,f,c
  1905   0032FC  501F               	movf	(wallSmash@mR+1)^0,w,c
  1906   0032FE  22DA               	addwfc	fsr2h,f,c
  1907   003300  0E01               	movlw	1
  1908   003302  6EDF               	movwf	indf2,c
  1909                           
  1910                           ;dc_motor.c: 234:     while (mL->power <= 85 && mR->power <=85)
  1911   003304  EF9A  F019         	goto	l3080
  1912   003308                     l3074:
  1913                           
  1914                           ;dc_motor.c: 235:     {;dc_motor.c: 236:         mL->power++;
  1915   003308  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1916   00330C  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1917   003310  2ADF               	incf	indf2,f,c
  1918                           
  1919                           ;dc_motor.c: 237:         mR->power++;
  1920   003312  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1921   003316  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1922   00331A  2ADF               	incf	indf2,f,c
  1923   00331C                     
  1924                           ;dc_motor.c: 238:         setMotorPWM(mL);
  1925   00331C  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1926   003320  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1927   003324  ECA2  F017         	call	_setMotorPWM	;wreg free
  1928   003328                     
  1929                           ;dc_motor.c: 239:         setMotorPWM(mR);
  1930   003328  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1931   00332C  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1932   003330  ECA2  F017         	call	_setMotorPWM	;wreg free
  1933   003334                     l3080:
  1934                           
  1935                           ;dc_motor.c: 234:     while (mL->power <= 85 && mR->power <=85)
  1936   003334  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1937   003338  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1938   00333C  0E56               	movlw	86
  1939   00333E  60DF               	cpfslt	indf2,c
  1940   003340  EFA4  F019         	goto	u2091
  1941   003344  EFA6  F019         	goto	u2090
  1942   003348                     u2091:
  1943   003348  EFB2  F019         	goto	l3084
  1944   00334C                     u2090:
  1945   00334C  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1946   003350  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1947   003354  0E55               	movlw	85
  1948   003356  64DF               	cpfsgt	indf2,c
  1949   003358  EFB0  F019         	goto	u2101
  1950   00335C  EFB2  F019         	goto	u2100
  1951   003360                     u2101:
  1952   003360  EF84  F019         	goto	l3074
  1953   003364                     u2100:
  1954   003364                     l3084:
  1955                           
  1956                           ;dc_motor.c: 241:     mL->power = 85;
  1957   003364  C01C  FFD9         	movff	wallSmash@mL,fsr2l
  1958   003368  C01D  FFDA         	movff	wallSmash@mL+1,fsr2h
  1959   00336C  0E55               	movlw	85
  1960   00336E  6EDF               	movwf	indf2,c
  1961                           
  1962                           ;dc_motor.c: 242:     mR->power = 85;
  1963   003370  C01E  FFD9         	movff	wallSmash@mR,fsr2l
  1964   003374  C01F  FFDA         	movff	wallSmash@mR+1,fsr2h
  1965   003378  0E55               	movlw	85
  1966   00337A  6EDF               	movwf	indf2,c
  1967   00337C                     
  1968                           ;dc_motor.c: 243:     setMotorPWM(mL);
  1969   00337C  C01C  F016         	movff	wallSmash@mL,setMotorPWM@m
  1970   003380  C01D  F017         	movff	wallSmash@mL+1,setMotorPWM@m+1
  1971   003384  ECA2  F017         	call	_setMotorPWM	;wreg free
  1972   003388                     
  1973                           ;dc_motor.c: 244:     setMotorPWM(mR);
  1974   003388  C01E  F016         	movff	wallSmash@mR,setMotorPWM@m
  1975   00338C  C01F  F017         	movff	wallSmash@mR+1,setMotorPWM@m+1
  1976   003390  ECA2  F017         	call	_setMotorPWM	;wreg free
  1977   003394  0012               	return		;funcret
  1978   003396                     __end_of_wallSmash:
  1979                           	callstack 0
  1980                           
  1981 ;; *************** function _color_read_RGBC *****************
  1982 ;; Defined at:
  1983 ;;		line 110 in file "color.c"
  1984 ;; Parameters:    Size  Location     Type
  1985 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  1986 ;;		 -> main@RGBC(32), 
  1987 ;; Auto vars:     Size  Location     Type
  1988 ;;		None
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      void 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2001 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2002 ;;Total ram usage:        2 bytes
  2003 ;; Hardware stack levels used: 1
  2004 ;; Hardware stack levels required when called: 9
  2005 ;; This function calls:
  2006 ;;		___xxtofl
  2007 ;;		_color_read_Blue
  2008 ;;		_color_read_Clear
  2009 ;;		_color_read_Green
  2010 ;;		_color_read_Red
  2011 ;; This function is called by:
  2012 ;;		_rangeCalibrate
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text7
  2018   003480                     __ptext7:
  2019                           	callstack 0
  2020   003480                     _color_read_RGBC:
  2021                           	callstack 20
  2022   003480                     
  2023                           ;color.c: 112:     temp->R = color_read_Red();
  2024   003480  EC24  F01C         	call	_color_read_Red	;wreg free
  2025   003484  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2026   003488  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2027   00348C  6A16               	clrf	(___xxtofl@val+2)^0,c
  2028   00348E  6A17               	clrf	(___xxtofl@val+3)^0,c
  2029   003490  0E00               	movlw	0
  2030   003492  EC10  F016         	call	___xxtofl
  2031   003496  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2032   00349A  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2033   00349E  C014  FFDE         	movff	?___xxtofl,postinc2
  2034   0034A2  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2035   0034A6  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2036   0034AA  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2037                           
  2038                           ;color.c: 113:     temp->B = color_read_Blue();
  2039   0034AE  EC9C  F01C         	call	_color_read_Blue	;wreg free
  2040   0034B2  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2041   0034B6  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2042   0034BA  6A16               	clrf	(___xxtofl@val+2)^0,c
  2043   0034BC  6A17               	clrf	(___xxtofl@val+3)^0,c
  2044   0034BE  0E00               	movlw	0
  2045   0034C0  EC10  F016         	call	___xxtofl
  2046   0034C4  EE20 F008          	lfsr	2,8
  2047   0034C8  5022               	movf	color_read_RGBC@temp^0,w,c
  2048   0034CA  26D9               	addwf	fsr2l,f,c
  2049   0034CC  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2050   0034CE  22DA               	addwfc	fsr2h,f,c
  2051   0034D0  C014  FFDE         	movff	?___xxtofl,postinc2
  2052   0034D4  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2053   0034D8  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2054   0034DC  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2055                           
  2056                           ;color.c: 114:     temp->G = color_read_Green();
  2057   0034E0  EC4C  F01C         	call	_color_read_Green	;wreg free
  2058   0034E4  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2059   0034E8  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2060   0034EC  6A16               	clrf	(___xxtofl@val+2)^0,c
  2061   0034EE  6A17               	clrf	(___xxtofl@val+3)^0,c
  2062   0034F0  0E00               	movlw	0
  2063   0034F2  EC10  F016         	call	___xxtofl
  2064   0034F6  EE20 F004          	lfsr	2,4
  2065   0034FA  5022               	movf	color_read_RGBC@temp^0,w,c
  2066   0034FC  26D9               	addwf	fsr2l,f,c
  2067   0034FE  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2068   003500  22DA               	addwfc	fsr2h,f,c
  2069   003502  C014  FFDE         	movff	?___xxtofl,postinc2
  2070   003506  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2071   00350A  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2072   00350E  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2073                           
  2074                           ;color.c: 115:     temp->C = color_read_Clear();
  2075   003512  EC74  F01C         	call	_color_read_Clear	;wreg free
  2076   003516  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2077   00351A  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2078   00351E  6A16               	clrf	(___xxtofl@val+2)^0,c
  2079   003520  6A17               	clrf	(___xxtofl@val+3)^0,c
  2080   003522  0E00               	movlw	0
  2081   003524  EC10  F016         	call	___xxtofl
  2082   003528  EE20 F00C          	lfsr	2,12
  2083   00352C  5022               	movf	color_read_RGBC@temp^0,w,c
  2084   00352E  26D9               	addwf	fsr2l,f,c
  2085   003530  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2086   003532  22DA               	addwfc	fsr2h,f,c
  2087   003534  C014  FFDE         	movff	?___xxtofl,postinc2
  2088   003538  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2089   00353C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2090   003540  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2091   003544  0012               	return		;funcret
  2092   003546                     __end_of_color_read_RGBC:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _color_read_Red *****************
  2096 ;; Defined at:
  2097 ;;		line 47 in file "color.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  tmp             2   17[COMRAM] unsigned int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2   12[COMRAM] unsigned int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;Total ram usage:        7 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 8
  2118 ;; This function calls:
  2119 ;;		_I2C_2_Master_Read
  2120 ;;		_I2C_2_Master_RepStart
  2121 ;;		_I2C_2_Master_Start
  2122 ;;		_I2C_2_Master_Stop
  2123 ;;		_I2C_2_Master_Write
  2124 ;; This function is called by:
  2125 ;;		_color_read_RGBC
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text8
  2130   003848                     __ptext8:
  2131                           	callstack 0
  2132   003848                     _color_read_Red:
  2133                           	callstack 20
  2134   003848                     
  2135                           ;color.c: 48:     unsigned int tmp;;color.c: 49:     I2C_2_Master_Start();
  2136   003848  EC45  F01E         	call	_I2C_2_Master_Start	;wreg free
  2137                           
  2138                           ;color.c: 50:     I2C_2_Master_Write(0x52 | 0x00);
  2139   00384C  0E52               	movlw	82
  2140   00384E  EC24  F01E         	call	_I2C_2_Master_Write
  2141                           
  2142                           ;color.c: 51:     I2C_2_Master_Write(0xA0 | 0x16);
  2143   003852  0EB6               	movlw	182
  2144   003854  EC24  F01E         	call	_I2C_2_Master_Write
  2145                           
  2146                           ;color.c: 52:     I2C_2_Master_RepStart();
  2147   003858  EC36  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2148                           
  2149                           ;color.c: 53:     I2C_2_Master_Write(0x52 | 0x01);
  2150   00385C  0E53               	movlw	83
  2151   00385E  EC24  F01E         	call	_I2C_2_Master_Write
  2152                           
  2153                           ;color.c: 54:     tmp = I2C_2_Master_Read(1);
  2154   003862  0E01               	movlw	1
  2155   003864  ECEB  F01C         	call	_I2C_2_Master_Read
  2156   003868  6E0F               	movwf	??_color_read_Red^0,c
  2157   00386A  500F               	movf	??_color_read_Red^0,w,c
  2158   00386C  6E12               	movwf	color_read_Red@tmp^0,c
  2159   00386E  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2160                           
  2161                           ;color.c: 55:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2162   003870  0E00               	movlw	0
  2163   003872  ECEB  F01C         	call	_I2C_2_Master_Read
  2164   003876  6E0F               	movwf	??_color_read_Red^0,c
  2165   003878  500F               	movf	??_color_read_Red^0,w,c
  2166   00387A  6E11               	movwf	(??_color_read_Red+2)^0,c
  2167   00387C  6A10               	clrf	(??_color_read_Red+1)^0,c
  2168   00387E  5012               	movf	color_read_Red@tmp^0,w,c
  2169   003880  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2170   003882  6E12               	movwf	color_read_Red@tmp^0,c
  2171   003884  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2172   003886  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2173   003888  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2174                           
  2175                           ;color.c: 56:     I2C_2_Master_Stop();
  2176   00388A  EC40  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2177   00388E                     
  2178                           ;color.c: 57:     return tmp;
  2179   00388E  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2180   003892  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2181   003896  0012               	return		;funcret
  2182   003898                     __end_of_color_read_Red:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _color_read_Green *****************
  2186 ;; Defined at:
  2187 ;;		line 60 in file "color.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  tmp             2   17[COMRAM] unsigned int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2   12[COMRAM] unsigned int 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;Total ram usage:        7 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 8
  2208 ;; This function calls:
  2209 ;;		_I2C_2_Master_Read
  2210 ;;		_I2C_2_Master_RepStart
  2211 ;;		_I2C_2_Master_Start
  2212 ;;		_I2C_2_Master_Stop
  2213 ;;		_I2C_2_Master_Write
  2214 ;; This function is called by:
  2215 ;;		_color_read_RGBC
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text9
  2220   003898                     __ptext9:
  2221                           	callstack 0
  2222   003898                     _color_read_Green:
  2223                           	callstack 20
  2224   003898                     
  2225                           ;color.c: 61:     unsigned int tmp;;color.c: 62:     I2C_2_Master_Start();
  2226   003898  EC45  F01E         	call	_I2C_2_Master_Start	;wreg free
  2227                           
  2228                           ;color.c: 63:     I2C_2_Master_Write(0x52 | 0x00);
  2229   00389C  0E52               	movlw	82
  2230   00389E  EC24  F01E         	call	_I2C_2_Master_Write
  2231                           
  2232                           ;color.c: 64:     I2C_2_Master_Write(0xA0 | 0x18);
  2233   0038A2  0EB8               	movlw	184
  2234   0038A4  EC24  F01E         	call	_I2C_2_Master_Write
  2235                           
  2236                           ;color.c: 65:     I2C_2_Master_RepStart();
  2237   0038A8  EC36  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2238                           
  2239                           ;color.c: 66:     I2C_2_Master_Write(0x52 | 0x01);
  2240   0038AC  0E53               	movlw	83
  2241   0038AE  EC24  F01E         	call	_I2C_2_Master_Write
  2242                           
  2243                           ;color.c: 67:     tmp = I2C_2_Master_Read(1);
  2244   0038B2  0E01               	movlw	1
  2245   0038B4  ECEB  F01C         	call	_I2C_2_Master_Read
  2246   0038B8  6E0F               	movwf	??_color_read_Green^0,c
  2247   0038BA  500F               	movf	??_color_read_Green^0,w,c
  2248   0038BC  6E12               	movwf	color_read_Green@tmp^0,c
  2249   0038BE  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2250                           
  2251                           ;color.c: 68:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2252   0038C0  0E00               	movlw	0
  2253   0038C2  ECEB  F01C         	call	_I2C_2_Master_Read
  2254   0038C6  6E0F               	movwf	??_color_read_Green^0,c
  2255   0038C8  500F               	movf	??_color_read_Green^0,w,c
  2256   0038CA  6E11               	movwf	(??_color_read_Green+2)^0,c
  2257   0038CC  6A10               	clrf	(??_color_read_Green+1)^0,c
  2258   0038CE  5012               	movf	color_read_Green@tmp^0,w,c
  2259   0038D0  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2260   0038D2  6E12               	movwf	color_read_Green@tmp^0,c
  2261   0038D4  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2262   0038D6  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2263   0038D8  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2264                           
  2265                           ;color.c: 69:     I2C_2_Master_Stop();
  2266   0038DA  EC40  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2267   0038DE                     
  2268                           ;color.c: 70:     return tmp;
  2269   0038DE  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2270   0038E2  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2271   0038E6  0012               	return		;funcret
  2272   0038E8                     __end_of_color_read_Green:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _color_read_Clear *****************
  2276 ;; Defined at:
  2277 ;;		line 86 in file "color.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  tmp             2   17[COMRAM] unsigned int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2   12[COMRAM] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        7 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 8
  2298 ;; This function calls:
  2299 ;;		_I2C_2_Master_Read
  2300 ;;		_I2C_2_Master_RepStart
  2301 ;;		_I2C_2_Master_Start
  2302 ;;		_I2C_2_Master_Stop
  2303 ;;		_I2C_2_Master_Write
  2304 ;; This function is called by:
  2305 ;;		_color_read_RGBC
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text10
  2310   0038E8                     __ptext10:
  2311                           	callstack 0
  2312   0038E8                     _color_read_Clear:
  2313                           	callstack 20
  2314   0038E8                     
  2315                           ;color.c: 87:     unsigned int tmp;;color.c: 88:     I2C_2_Master_Start();
  2316   0038E8  EC45  F01E         	call	_I2C_2_Master_Start	;wreg free
  2317                           
  2318                           ;color.c: 89:     I2C_2_Master_Write(0x52 | 0x00);
  2319   0038EC  0E52               	movlw	82
  2320   0038EE  EC24  F01E         	call	_I2C_2_Master_Write
  2321                           
  2322                           ;color.c: 90:     I2C_2_Master_Write(0xA0 | 0x14);
  2323   0038F2  0EB4               	movlw	180
  2324   0038F4  EC24  F01E         	call	_I2C_2_Master_Write
  2325                           
  2326                           ;color.c: 91:     I2C_2_Master_RepStart();
  2327   0038F8  EC36  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2328                           
  2329                           ;color.c: 92:     I2C_2_Master_Write(0x52 | 0x01);
  2330   0038FC  0E53               	movlw	83
  2331   0038FE  EC24  F01E         	call	_I2C_2_Master_Write
  2332                           
  2333                           ;color.c: 93:     tmp = I2C_2_Master_Read(1);
  2334   003902  0E01               	movlw	1
  2335   003904  ECEB  F01C         	call	_I2C_2_Master_Read
  2336   003908  6E0F               	movwf	??_color_read_Clear^0,c
  2337   00390A  500F               	movf	??_color_read_Clear^0,w,c
  2338   00390C  6E12               	movwf	color_read_Clear@tmp^0,c
  2339   00390E  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2340                           
  2341                           ;color.c: 94:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2342   003910  0E00               	movlw	0
  2343   003912  ECEB  F01C         	call	_I2C_2_Master_Read
  2344   003916  6E0F               	movwf	??_color_read_Clear^0,c
  2345   003918  500F               	movf	??_color_read_Clear^0,w,c
  2346   00391A  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2347   00391C  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2348   00391E  5012               	movf	color_read_Clear@tmp^0,w,c
  2349   003920  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2350   003922  6E12               	movwf	color_read_Clear@tmp^0,c
  2351   003924  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2352   003926  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2353   003928  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2354                           
  2355                           ;color.c: 95:     I2C_2_Master_Stop();
  2356   00392A  EC40  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2357   00392E                     
  2358                           ;color.c: 96:     return tmp;
  2359   00392E  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2360   003932  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2361   003936  0012               	return		;funcret
  2362   003938                     __end_of_color_read_Clear:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _color_read_Blue *****************
  2366 ;; Defined at:
  2367 ;;		line 73 in file "color.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  tmp             2   17[COMRAM] unsigned int 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2   12[COMRAM] unsigned int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 8
  2388 ;; This function calls:
  2389 ;;		_I2C_2_Master_Read
  2390 ;;		_I2C_2_Master_RepStart
  2391 ;;		_I2C_2_Master_Start
  2392 ;;		_I2C_2_Master_Stop
  2393 ;;		_I2C_2_Master_Write
  2394 ;; This function is called by:
  2395 ;;		_color_read_RGBC
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text11
  2400   003938                     __ptext11:
  2401                           	callstack 0
  2402   003938                     _color_read_Blue:
  2403                           	callstack 20
  2404   003938                     
  2405                           ;color.c: 74:     unsigned int tmp;;color.c: 75:     I2C_2_Master_Start();
  2406   003938  EC45  F01E         	call	_I2C_2_Master_Start	;wreg free
  2407                           
  2408                           ;color.c: 76:     I2C_2_Master_Write(0x52 | 0x00);
  2409   00393C  0E52               	movlw	82
  2410   00393E  EC24  F01E         	call	_I2C_2_Master_Write
  2411                           
  2412                           ;color.c: 77:     I2C_2_Master_Write(0xA0 | 0x1A);
  2413   003942  0EBA               	movlw	186
  2414   003944  EC24  F01E         	call	_I2C_2_Master_Write
  2415                           
  2416                           ;color.c: 78:     I2C_2_Master_RepStart();
  2417   003948  EC36  F01E         	call	_I2C_2_Master_RepStart	;wreg free
  2418                           
  2419                           ;color.c: 79:     I2C_2_Master_Write(0x52 | 0x01);
  2420   00394C  0E53               	movlw	83
  2421   00394E  EC24  F01E         	call	_I2C_2_Master_Write
  2422                           
  2423                           ;color.c: 80:     tmp = I2C_2_Master_Read(1);
  2424   003952  0E01               	movlw	1
  2425   003954  ECEB  F01C         	call	_I2C_2_Master_Read
  2426   003958  6E0F               	movwf	??_color_read_Blue^0,c
  2427   00395A  500F               	movf	??_color_read_Blue^0,w,c
  2428   00395C  6E12               	movwf	color_read_Blue@tmp^0,c
  2429   00395E  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2430                           
  2431                           ;color.c: 81:     tmp = tmp | (I2C_2_Master_Read(0) << 8);
  2432   003960  0E00               	movlw	0
  2433   003962  ECEB  F01C         	call	_I2C_2_Master_Read
  2434   003966  6E0F               	movwf	??_color_read_Blue^0,c
  2435   003968  500F               	movf	??_color_read_Blue^0,w,c
  2436   00396A  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2437   00396C  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2438   00396E  5012               	movf	color_read_Blue@tmp^0,w,c
  2439   003970  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2440   003972  6E12               	movwf	color_read_Blue@tmp^0,c
  2441   003974  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2442   003976  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2443   003978  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2444                           
  2445                           ;color.c: 82:     I2C_2_Master_Stop();
  2446   00397A  EC40  F01E         	call	_I2C_2_Master_Stop	;wreg free
  2447   00397E                     
  2448                           ;color.c: 83:     return tmp;
  2449   00397E  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2450   003982  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2451   003986  0012               	return		;funcret
  2452   003988                     __end_of_color_read_Blue:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _I2C_2_Master_RepStart *****************
  2456 ;; Defined at:
  2457 ;;		line 33 in file "i2c.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 7
  2478 ;; This function calls:
  2479 ;;		_I2C_2_Master_Idle
  2480 ;; This function is called by:
  2481 ;;		_color_read_Red
  2482 ;;		_color_read_Green
  2483 ;;		_color_read_Blue
  2484 ;;		_color_read_Clear
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text12
  2489   003C6C                     __ptext12:
  2490                           	callstack 0
  2491   003C6C                     _I2C_2_Master_RepStart:
  2492                           	callstack 20
  2493   003C6C                     
  2494                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2495   003C6C  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2496   003C70                     
  2497                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2498   003C70  010E               	movlb	14	; () banked
  2499   003C72  83DA               	bsf	218,1,b	;volatile
  2500   003C74                     
  2501                           ; BSR set to: 14
  2502   003C74  0012               	return		;funcret
  2503   003C76                     __end_of_I2C_2_Master_RepStart:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _I2C_2_Master_Read *****************
  2507 ;; Defined at:
  2508 ;;		line 51 in file "i2c.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  ack             1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  ack             1   10[COMRAM] unsigned char 
  2513 ;;  tmp             1   11[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 7
  2530 ;; This function calls:
  2531 ;;		_I2C_2_Master_Idle
  2532 ;; This function is called by:
  2533 ;;		_color_read_Red
  2534 ;;		_color_read_Green
  2535 ;;		_color_read_Blue
  2536 ;;		_color_read_Clear
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text13
  2541   0039D6                     __ptext13:
  2542                           	callstack 0
  2543   0039D6                     _I2C_2_Master_Read:
  2544                           	callstack 20
  2545                           
  2546                           ; BSR set to: 14
  2547                           ;incstack = 0
  2548                           ;I2C_2_Master_Read@ack stored from wreg
  2549   0039D6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2550   0039D8                     
  2551                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2552   0039D8  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2553   0039DC                     
  2554                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2555   0039DC  010E               	movlb	14	; () banked
  2556   0039DE  87DA               	bsf	218,3,b	;volatile
  2557                           
  2558                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2559   0039E0  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2560   0039E4                     
  2561                           ;i2c.c: 57:   tmp = SSP2BUF;
  2562   0039E4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2563                           
  2564                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2565   0039E8  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  2566   0039EC                     
  2567                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2568   0039EC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2569   0039EE  B4D8               	btfsc	status,2,c
  2570   0039F0  EFFC  F01C         	goto	u1701
  2571   0039F4  EF00  F01D         	goto	u1700
  2572   0039F8                     u1701:
  2573   0039F8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2574   0039FA  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2575   0039FC  EF01  F01D         	goto	u1718
  2576   003A00                     u1700:
  2577   003A00  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2578   003A02                     u1718:
  2579   003A02  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2580   003A04  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2581   003A06  010E               	movlb	14	; () banked
  2582   003A08  51DA               	movf	218,w,b	;volatile
  2583   003A0A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2584   003A0C  0BDF               	andlw	-33
  2585   003A0E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2586   003A10  6FDA               	movwf	218,b	;volatile
  2587   003A12                     
  2588                           ; BSR set to: 14
  2589                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2590   003A12  89DA               	bsf	218,4,b	;volatile
  2591   003A14                     
  2592                           ; BSR set to: 14
  2593                           ;i2c.c: 61:   return tmp;
  2594   003A14  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2595   003A16                     
  2596                           ; BSR set to: 14
  2597   003A16  0012               	return		;funcret
  2598   003A18                     __end_of_I2C_2_Master_Read:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _color_normalise *****************
  2602 ;; Defined at:
  2603 ;;		line 122 in file "color.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  RGBC            2   58[COMRAM] PTR struct RGBC_val
  2606 ;;		 -> main@RGBC(32), 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2622 ;;Total ram usage:        2 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 7
  2625 ;; This function calls:
  2626 ;;		___fldiv
  2627 ;;		___xxtofl
  2628 ;; This function is called by:
  2629 ;;		_rangeCalibrate
  2630 ;;		_main
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text14
  2635   002DD4                     __ptext14:
  2636                           	callstack 0
  2637   002DD4                     _color_normalise:
  2638                           	callstack 22
  2639   002DD4                     
  2640                           ;color.c: 123:     amb_clear = 2385;
  2641   002DD4  0E09               	movlw	9
  2642   002DD6  6E4C               	movwf	(_amb_clear+1)^0,c
  2643   002DD8  0E51               	movlw	81
  2644   002DDA  6E4B               	movwf	_amb_clear^0,c
  2645   002DDC                     
  2646                           ;color.c: 124:     RGBC->norm_R = RGBC->C / RGBC->R;
  2647   002DDC  EE20 F00C          	lfsr	2,12
  2648   002DE0  503B               	movf	color_normalise@RGBC^0,w,c
  2649   002DE2  26D9               	addwf	fsr2l,f,c
  2650   002DE4  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2651   002DE6  22DA               	addwfc	fsr2h,f,c
  2652   002DE8  CFDE F022          	movff	postinc2,___fldiv@b
  2653   002DEC  CFDE F023          	movff	postinc2,___fldiv@b+1
  2654   002DF0  CFDE F024          	movff	postinc2,___fldiv@b+2
  2655   002DF4  CFDE F025          	movff	postinc2,___fldiv@b+3
  2656   002DF8  C03B  FFD9         	movff	color_normalise@RGBC,fsr2l
  2657   002DFC  C03C  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  2658   002E00  CFDE F026          	movff	postinc2,___fldiv@a
  2659   002E04  CFDE F027          	movff	postinc2,___fldiv@a+1
  2660   002E08  CFDE F028          	movff	postinc2,___fldiv@a+2
  2661   002E0C  CFDE F029          	movff	postinc2,___fldiv@a+3
  2662   002E10  EC91  F011         	call	___fldiv	;wreg free
  2663   002E14  EE20 F010          	lfsr	2,16
  2664   002E18  503B               	movf	color_normalise@RGBC^0,w,c
  2665   002E1A  26D9               	addwf	fsr2l,f,c
  2666   002E1C  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2667   002E1E  22DA               	addwfc	fsr2h,f,c
  2668   002E20  C022  FFDE         	movff	?___fldiv,postinc2
  2669   002E24  C023  FFDE         	movff	?___fldiv+1,postinc2
  2670   002E28  C024  FFDE         	movff	?___fldiv+2,postinc2
  2671   002E2C  C025  FFDE         	movff	?___fldiv+3,postinc2
  2672   002E30                     
  2673                           ;color.c: 125:     RGBC->norm_G = RGBC->C / RGBC->G;
  2674   002E30  EE20 F00C          	lfsr	2,12
  2675   002E34  503B               	movf	color_normalise@RGBC^0,w,c
  2676   002E36  26D9               	addwf	fsr2l,f,c
  2677   002E38  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2678   002E3A  22DA               	addwfc	fsr2h,f,c
  2679   002E3C  CFDE F022          	movff	postinc2,___fldiv@b
  2680   002E40  CFDE F023          	movff	postinc2,___fldiv@b+1
  2681   002E44  CFDE F024          	movff	postinc2,___fldiv@b+2
  2682   002E48  CFDE F025          	movff	postinc2,___fldiv@b+3
  2683   002E4C  EE20 F004          	lfsr	2,4
  2684   002E50  503B               	movf	color_normalise@RGBC^0,w,c
  2685   002E52  26D9               	addwf	fsr2l,f,c
  2686   002E54  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2687   002E56  22DA               	addwfc	fsr2h,f,c
  2688   002E58  CFDE F026          	movff	postinc2,___fldiv@a
  2689   002E5C  CFDE F027          	movff	postinc2,___fldiv@a+1
  2690   002E60  CFDE F028          	movff	postinc2,___fldiv@a+2
  2691   002E64  CFDE F029          	movff	postinc2,___fldiv@a+3
  2692   002E68  EC91  F011         	call	___fldiv	;wreg free
  2693   002E6C  EE20 F014          	lfsr	2,20
  2694   002E70  503B               	movf	color_normalise@RGBC^0,w,c
  2695   002E72  26D9               	addwf	fsr2l,f,c
  2696   002E74  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2697   002E76  22DA               	addwfc	fsr2h,f,c
  2698   002E78  C022  FFDE         	movff	?___fldiv,postinc2
  2699   002E7C  C023  FFDE         	movff	?___fldiv+1,postinc2
  2700   002E80  C024  FFDE         	movff	?___fldiv+2,postinc2
  2701   002E84  C025  FFDE         	movff	?___fldiv+3,postinc2
  2702   002E88                     
  2703                           ;color.c: 126:     RGBC->norm_B = RGBC->C / RGBC->B;
  2704   002E88  EE20 F00C          	lfsr	2,12
  2705   002E8C  503B               	movf	color_normalise@RGBC^0,w,c
  2706   002E8E  26D9               	addwf	fsr2l,f,c
  2707   002E90  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2708   002E92  22DA               	addwfc	fsr2h,f,c
  2709   002E94  CFDE F022          	movff	postinc2,___fldiv@b
  2710   002E98  CFDE F023          	movff	postinc2,___fldiv@b+1
  2711   002E9C  CFDE F024          	movff	postinc2,___fldiv@b+2
  2712   002EA0  CFDE F025          	movff	postinc2,___fldiv@b+3
  2713   002EA4  EE20 F008          	lfsr	2,8
  2714   002EA8  503B               	movf	color_normalise@RGBC^0,w,c
  2715   002EAA  26D9               	addwf	fsr2l,f,c
  2716   002EAC  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2717   002EAE  22DA               	addwfc	fsr2h,f,c
  2718   002EB0  CFDE F026          	movff	postinc2,___fldiv@a
  2719   002EB4  CFDE F027          	movff	postinc2,___fldiv@a+1
  2720   002EB8  CFDE F028          	movff	postinc2,___fldiv@a+2
  2721   002EBC  CFDE F029          	movff	postinc2,___fldiv@a+3
  2722   002EC0  EC91  F011         	call	___fldiv	;wreg free
  2723   002EC4  EE20 F018          	lfsr	2,24
  2724   002EC8  503B               	movf	color_normalise@RGBC^0,w,c
  2725   002ECA  26D9               	addwf	fsr2l,f,c
  2726   002ECC  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2727   002ECE  22DA               	addwfc	fsr2h,f,c
  2728   002ED0  C022  FFDE         	movff	?___fldiv,postinc2
  2729   002ED4  C023  FFDE         	movff	?___fldiv+1,postinc2
  2730   002ED8  C024  FFDE         	movff	?___fldiv+2,postinc2
  2731   002EDC  C025  FFDE         	movff	?___fldiv+3,postinc2
  2732   002EE0                     
  2733                           ;color.c: 127:     RGBC->norm_C = RGBC->C / amb_clear;
  2734   002EE0  EE20 F00C          	lfsr	2,12
  2735   002EE4  503B               	movf	color_normalise@RGBC^0,w,c
  2736   002EE6  26D9               	addwf	fsr2l,f,c
  2737   002EE8  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2738   002EEA  22DA               	addwfc	fsr2h,f,c
  2739   002EEC  CFDE F022          	movff	postinc2,___fldiv@b
  2740   002EF0  CFDE F023          	movff	postinc2,___fldiv@b+1
  2741   002EF4  CFDE F024          	movff	postinc2,___fldiv@b+2
  2742   002EF8  CFDE F025          	movff	postinc2,___fldiv@b+3
  2743   002EFC  0E51               	movlw	81
  2744   002EFE  6E14               	movwf	___xxtofl@val^0,c
  2745   002F00  0E09               	movlw	9
  2746   002F02  6E15               	movwf	(___xxtofl@val+1)^0,c
  2747   002F04  0E00               	movlw	0
  2748   002F06  6E16               	movwf	(___xxtofl@val+2)^0,c
  2749   002F08  0E00               	movlw	0
  2750   002F0A  6E17               	movwf	(___xxtofl@val+3)^0,c
  2751   002F0C  0E01               	movlw	1
  2752   002F0E  EC10  F016         	call	___xxtofl
  2753   002F12  C014  F026         	movff	?___xxtofl,___fldiv@a
  2754   002F16  C015  F027         	movff	?___xxtofl+1,___fldiv@a+1
  2755   002F1A  C016  F028         	movff	?___xxtofl+2,___fldiv@a+2
  2756   002F1E  C017  F029         	movff	?___xxtofl+3,___fldiv@a+3
  2757   002F22  EC91  F011         	call	___fldiv	;wreg free
  2758   002F26  EE20 F01C          	lfsr	2,28
  2759   002F2A  503B               	movf	color_normalise@RGBC^0,w,c
  2760   002F2C  26D9               	addwf	fsr2l,f,c
  2761   002F2E  503C               	movf	(color_normalise@RGBC+1)^0,w,c
  2762   002F30  22DA               	addwfc	fsr2h,f,c
  2763   002F32  C022  FFDE         	movff	?___fldiv,postinc2
  2764   002F36  C023  FFDE         	movff	?___fldiv+1,postinc2
  2765   002F3A  C024  FFDE         	movff	?___fldiv+2,postinc2
  2766   002F3E  C025  FFDE         	movff	?___fldiv+3,postinc2
  2767   002F42  0012               	return		;funcret
  2768   002F44                     __end_of_color_normalise:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function ___xxtofl *****************
  2772 ;; Defined at:
  2773 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;  sign            1    wreg     unsigned char 
  2776 ;;  val             4   19[COMRAM] long 
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;  sign            1   27[COMRAM] unsigned char 
  2779 ;;  arg             4   29[COMRAM] unsigned long 
  2780 ;;  exp             1   28[COMRAM] unsigned char 
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  4   19[COMRAM] unsigned char 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:       14 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 6
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_color_read_RGBC
  2801 ;;		_color_normalise
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text15
  2806   002C20                     __ptext15:
  2807                           	callstack 0
  2808   002C20                     ___xxtofl:
  2809                           	callstack 22
  2810                           
  2811                           ;incstack = 0
  2812                           ;___xxtofl@sign stored from wreg
  2813   002C20  6E1C               	movwf	___xxtofl@sign^0,c
  2814   002C22  501C               	movf	___xxtofl@sign^0,w,c
  2815   002C24  B4D8               	btfsc	status,2,c
  2816   002C26  EF17  F016         	goto	u1991
  2817   002C2A  EF19  F016         	goto	u1990
  2818   002C2E                     u1991:
  2819   002C2E  EF3B  F016         	goto	l1365
  2820   002C32                     u1990:
  2821   002C32  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2822   002C34  EF20  F016         	goto	u2000
  2823   002C38  EF1E  F016         	goto	u2001
  2824   002C3C                     u2001:
  2825   002C3C  EF3B  F016         	goto	l1365
  2826   002C40                     u2000:
  2827   002C40  C014  F018         	movff	___xxtofl@val,??___xxtofl
  2828   002C44  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  2829   002C48  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  2830   002C4C  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  2831   002C50  1E18               	comf	??___xxtofl^0,f,c
  2832   002C52  1E19               	comf	(??___xxtofl+1)^0,f,c
  2833   002C54  1E1A               	comf	(??___xxtofl+2)^0,f,c
  2834   002C56  1E1B               	comf	(??___xxtofl+3)^0,f,c
  2835   002C58  2A18               	incf	??___xxtofl^0,f,c
  2836   002C5A  0E00               	movlw	0
  2837   002C5C  2219               	addwfc	(??___xxtofl+1)^0,f,c
  2838   002C5E  221A               	addwfc	(??___xxtofl+2)^0,f,c
  2839   002C60  221B               	addwfc	(??___xxtofl+3)^0,f,c
  2840   002C62  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  2841   002C66  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  2842   002C6A  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  2843   002C6E  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  2844   002C72  EF43  F016         	goto	l2990
  2845   002C76                     l1365:
  2846   002C76  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  2847   002C7A  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2848   002C7E  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2849   002C82  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2850   002C86                     l2990:
  2851   002C86  5014               	movf	___xxtofl@val^0,w,c
  2852   002C88  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  2853   002C8A  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  2854   002C8C  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  2855   002C8E  A4D8               	btfss	status,2,c
  2856   002C90  EF4C  F016         	goto	u2011
  2857   002C94  EF4E  F016         	goto	u2010
  2858   002C98                     u2011:
  2859   002C98  EF58  F016         	goto	l2996
  2860   002C9C                     u2010:
  2861   002C9C  0E00               	movlw	0
  2862   002C9E  6E14               	movwf	?___xxtofl^0,c
  2863   002CA0  0E00               	movlw	0
  2864   002CA2  6E15               	movwf	(?___xxtofl+1)^0,c
  2865   002CA4  0E00               	movlw	0
  2866   002CA6  6E16               	movwf	(?___xxtofl+2)^0,c
  2867   002CA8  0E00               	movlw	0
  2868   002CAA  6E17               	movwf	(?___xxtofl+3)^0,c
  2869   002CAC  EFE9  F016         	goto	l1368
  2870   002CB0                     l2996:
  2871   002CB0  0E96               	movlw	150
  2872   002CB2  6E1D               	movwf	___xxtofl@exp^0,c
  2873   002CB4  EF62  F016         	goto	l3000
  2874   002CB8                     l2998:
  2875   002CB8  2A1D               	incf	___xxtofl@exp^0,f,c
  2876   002CBA  90D8               	bcf	status,0,c
  2877   002CBC  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2878   002CBE  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2879   002CC0  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2880   002CC2  321E               	rrcf	___xxtofl@arg^0,f,c
  2881   002CC4                     l3000:
  2882   002CC4  0E00               	movlw	0
  2883   002CC6  141E               	andwf	___xxtofl@arg^0,w,c
  2884   002CC8  6E18               	movwf	??___xxtofl^0,c
  2885   002CCA  0E00               	movlw	0
  2886   002CCC  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2887   002CCE  6E19               	movwf	(??___xxtofl+1)^0,c
  2888   002CD0  0E00               	movlw	0
  2889   002CD2  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2890   002CD4  6E1A               	movwf	(??___xxtofl+2)^0,c
  2891   002CD6  0EFE               	movlw	254
  2892   002CD8  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2893   002CDA  6E1B               	movwf	(??___xxtofl+3)^0,c
  2894   002CDC  5018               	movf	??___xxtofl^0,w,c
  2895   002CDE  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2896   002CE0  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2897   002CE2  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2898   002CE4  A4D8               	btfss	status,2,c
  2899   002CE6  EF77  F016         	goto	u2021
  2900   002CEA  EF79  F016         	goto	u2020
  2901   002CEE                     u2021:
  2902   002CEE  EF5C  F016         	goto	l2998
  2903   002CF2                     u2020:
  2904   002CF2  EF87  F016         	goto	l1372
  2905   002CF6                     l3002:
  2906   002CF6  2A1D               	incf	___xxtofl@exp^0,f,c
  2907   002CF8  0E01               	movlw	1
  2908   002CFA  261E               	addwf	___xxtofl@arg^0,f,c
  2909   002CFC  0E00               	movlw	0
  2910   002CFE  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  2911   002D00  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  2912   002D02  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  2913   002D04  90D8               	bcf	status,0,c
  2914   002D06  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  2915   002D08  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  2916   002D0A  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  2917   002D0C  321E               	rrcf	___xxtofl@arg^0,f,c
  2918   002D0E                     l1372:
  2919   002D0E  0E00               	movlw	0
  2920   002D10  141E               	andwf	___xxtofl@arg^0,w,c
  2921   002D12  6E18               	movwf	??___xxtofl^0,c
  2922   002D14  0E00               	movlw	0
  2923   002D16  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  2924   002D18  6E19               	movwf	(??___xxtofl+1)^0,c
  2925   002D1A  0E00               	movlw	0
  2926   002D1C  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  2927   002D1E  6E1A               	movwf	(??___xxtofl+2)^0,c
  2928   002D20  0EFF               	movlw	255
  2929   002D22  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  2930   002D24  6E1B               	movwf	(??___xxtofl+3)^0,c
  2931   002D26  5018               	movf	??___xxtofl^0,w,c
  2932   002D28  1019               	iorwf	(??___xxtofl+1)^0,w,c
  2933   002D2A  101A               	iorwf	(??___xxtofl+2)^0,w,c
  2934   002D2C  101B               	iorwf	(??___xxtofl+3)^0,w,c
  2935   002D2E  A4D8               	btfss	status,2,c
  2936   002D30  EF9C  F016         	goto	u2031
  2937   002D34  EF9E  F016         	goto	u2030
  2938   002D38                     u2031:
  2939   002D38  EF7B  F016         	goto	l3002
  2940   002D3C                     u2030:
  2941   002D3C  EFA6  F016         	goto	l3010
  2942   002D40                     l3008:
  2943   002D40  061D               	decf	___xxtofl@exp^0,f,c
  2944   002D42  90D8               	bcf	status,0,c
  2945   002D44  361E               	rlcf	___xxtofl@arg^0,f,c
  2946   002D46  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  2947   002D48  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  2948   002D4A  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  2949   002D4C                     l3010:
  2950   002D4C  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  2951   002D4E  EFAB  F016         	goto	u2041
  2952   002D52  EFAD  F016         	goto	u2040
  2953   002D56                     u2041:
  2954   002D56  EFB5  F016         	goto	l1379
  2955   002D5A                     u2040:
  2956   002D5A  0E02               	movlw	2
  2957   002D5C  601D               	cpfslt	___xxtofl@exp^0,c
  2958   002D5E  EFB3  F016         	goto	u2051
  2959   002D62  EFB5  F016         	goto	u2050
  2960   002D66                     u2051:
  2961   002D66  EFA0  F016         	goto	l3008
  2962   002D6A                     u2050:
  2963   002D6A                     l1379:
  2964   002D6A  B01D               	btfsc	___xxtofl@exp^0,0,c
  2965   002D6C  EFBA  F016         	goto	u2061
  2966   002D70  EFBC  F016         	goto	u2060
  2967   002D74                     u2061:
  2968   002D74  EFBD  F016         	goto	l3016
  2969   002D78                     u2060:
  2970   002D78  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  2971   002D7A                     l3016:
  2972   002D7A  90D8               	bcf	status,0,c
  2973   002D7C  321D               	rrcf	___xxtofl@exp^0,f,c
  2974   002D7E  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  2975   002D82  6A19               	clrf	(??___xxtofl+1)^0,c
  2976   002D84  6A1A               	clrf	(??___xxtofl+2)^0,c
  2977   002D86  6A1B               	clrf	(??___xxtofl+3)^0,c
  2978   002D88  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  2979   002D8C  6A1A               	clrf	(??___xxtofl+2)^0,c
  2980   002D8E  6A19               	clrf	(??___xxtofl+1)^0,c
  2981   002D90  6A18               	clrf	??___xxtofl^0,c
  2982   002D92  5018               	movf	??___xxtofl^0,w,c
  2983   002D94  121E               	iorwf	___xxtofl@arg^0,f,c
  2984   002D96  5019               	movf	(??___xxtofl+1)^0,w,c
  2985   002D98  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  2986   002D9A  501A               	movf	(??___xxtofl+2)^0,w,c
  2987   002D9C  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  2988   002D9E  501B               	movf	(??___xxtofl+3)^0,w,c
  2989   002DA0  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  2990   002DA2  501C               	movf	___xxtofl@sign^0,w,c
  2991   002DA4  B4D8               	btfsc	status,2,c
  2992   002DA6  EFD7  F016         	goto	u2071
  2993   002DAA  EFD9  F016         	goto	u2070
  2994   002DAE                     u2071:
  2995   002DAE  EFE1  F016         	goto	l3026
  2996   002DB2                     u2070:
  2997   002DB2  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  2998   002DB4  EFE0  F016         	goto	u2080
  2999   002DB8  EFDE  F016         	goto	u2081
  3000   002DBC                     u2081:
  3001   002DBC  EFE1  F016         	goto	l3026
  3002   002DC0                     u2080:
  3003   002DC0  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3004   002DC2                     l3026:
  3005   002DC2  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3006   002DC6  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3007   002DCA  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3008   002DCE  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3009   002DD2                     l1368:
  3010   002DD2  0012               	return		;funcret
  3011   002DD4                     __end_of___xxtofl:
  3012                           	callstack 0
  3013                           
  3014 ;; *************** function ___fldiv *****************
  3015 ;; Defined at:
  3016 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3017 ;; Parameters:    Size  Location     Type
  3018 ;;  b               4   33[COMRAM] unsigned char 
  3019 ;;  a               4   37[COMRAM] unsigned char 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  grs             4   52[COMRAM] unsigned long 
  3022 ;;  rem             4   45[COMRAM] unsigned long 
  3023 ;;  new_exp         2   50[COMRAM] short 
  3024 ;;  aexp            1   57[COMRAM] unsigned char 
  3025 ;;  bexp            1   56[COMRAM] unsigned char 
  3026 ;;  sign            1   49[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  4   33[COMRAM] unsigned char 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3036 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3037 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3038 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3039 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3040 ;;Total ram usage:       25 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 6
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_color_normalise
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050                           	psect	text16
  3051   002322                     __ptext16:
  3052                           	callstack 0
  3053   002322                     ___fldiv:
  3054                           	callstack 22
  3055   002322  5025               	movf	(___fldiv@b+3)^0,w,c
  3056   002324  0B80               	andlw	128
  3057   002326  6E32               	movwf	___fldiv@sign^0,c
  3058   002328  5025               	movf	(___fldiv@b+3)^0,w,c
  3059   00232A  2425               	addwf	(___fldiv@b+3)^0,w,c
  3060   00232C  6E39               	movwf	___fldiv@bexp^0,c
  3061   00232E  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3062   002330  EF9C  F011         	goto	u1761
  3063   002334  EF9E  F011         	goto	u1760
  3064   002338                     u1761:
  3065   002338  EF9F  F011         	goto	l2852
  3066   00233C                     u1760:
  3067   00233C  8039               	bsf	___fldiv@bexp^0,0,c
  3068   00233E                     l2852:
  3069   00233E  5039               	movf	___fldiv@bexp^0,w,c
  3070   002340  B4D8               	btfsc	status,2,c
  3071   002342  EFA5  F011         	goto	u1771
  3072   002346  EFA7  F011         	goto	u1770
  3073   00234A                     u1771:
  3074   00234A  EFBC  F011         	goto	l2862
  3075   00234E                     u1770:
  3076   00234E  2839               	incf	___fldiv@bexp^0,w,c
  3077   002350  A4D8               	btfss	status,2,c
  3078   002352  EFAD  F011         	goto	u1781
  3079   002356  EFAF  F011         	goto	u1780
  3080   00235A                     u1781:
  3081   00235A  EFB7  F011         	goto	l2858
  3082   00235E                     u1780:
  3083   00235E  0E00               	movlw	0
  3084   002360  6E22               	movwf	___fldiv@b^0,c
  3085   002362  0E00               	movlw	0
  3086   002364  6E23               	movwf	(___fldiv@b+1)^0,c
  3087   002366  0E00               	movlw	0
  3088   002368  6E24               	movwf	(___fldiv@b+2)^0,c
  3089   00236A  0E00               	movlw	0
  3090   00236C  6E25               	movwf	(___fldiv@b+3)^0,c
  3091   00236E                     l2858:
  3092   00236E  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3093   002370  0E00               	movlw	0
  3094   002372  6E25               	movwf	(___fldiv@b+3)^0,c
  3095   002374  EFC4  F011         	goto	l2864
  3096   002378                     l2862:
  3097   002378  0E00               	movlw	0
  3098   00237A  6E22               	movwf	___fldiv@b^0,c
  3099   00237C  0E00               	movlw	0
  3100   00237E  6E23               	movwf	(___fldiv@b+1)^0,c
  3101   002380  0E00               	movlw	0
  3102   002382  6E24               	movwf	(___fldiv@b+2)^0,c
  3103   002384  0E00               	movlw	0
  3104   002386  6E25               	movwf	(___fldiv@b+3)^0,c
  3105   002388                     l2864:
  3106   002388  5029               	movf	(___fldiv@a+3)^0,w,c
  3107   00238A  0B80               	andlw	128
  3108   00238C  1A32               	xorwf	___fldiv@sign^0,f,c
  3109   00238E  5029               	movf	(___fldiv@a+3)^0,w,c
  3110   002390  2429               	addwf	(___fldiv@a+3)^0,w,c
  3111   002392  6E3A               	movwf	___fldiv@aexp^0,c
  3112   002394  AE28               	btfss	(___fldiv@a+2)^0,7,c
  3113   002396  EFCF  F011         	goto	u1791
  3114   00239A  EFD1  F011         	goto	u1790
  3115   00239E                     u1791:
  3116   00239E  EFD2  F011         	goto	l2872
  3117   0023A2                     u1790:
  3118   0023A2  803A               	bsf	___fldiv@aexp^0,0,c
  3119   0023A4                     l2872:
  3120   0023A4  503A               	movf	___fldiv@aexp^0,w,c
  3121   0023A6  B4D8               	btfsc	status,2,c
  3122   0023A8  EFD8  F011         	goto	u1801
  3123   0023AC  EFDA  F011         	goto	u1800
  3124   0023B0                     u1801:
  3125   0023B0  EFEF  F011         	goto	l2882
  3126   0023B4                     u1800:
  3127   0023B4  283A               	incf	___fldiv@aexp^0,w,c
  3128   0023B6  A4D8               	btfss	status,2,c
  3129   0023B8  EFE0  F011         	goto	u1811
  3130   0023BC  EFE2  F011         	goto	u1810
  3131   0023C0                     u1811:
  3132   0023C0  EFEA  F011         	goto	l2878
  3133   0023C4                     u1810:
  3134   0023C4  0E00               	movlw	0
  3135   0023C6  6E26               	movwf	___fldiv@a^0,c
  3136   0023C8  0E00               	movlw	0
  3137   0023CA  6E27               	movwf	(___fldiv@a+1)^0,c
  3138   0023CC  0E00               	movlw	0
  3139   0023CE  6E28               	movwf	(___fldiv@a+2)^0,c
  3140   0023D0  0E00               	movlw	0
  3141   0023D2  6E29               	movwf	(___fldiv@a+3)^0,c
  3142   0023D4                     l2878:
  3143   0023D4  8E28               	bsf	(___fldiv@a+2)^0,7,c
  3144   0023D6  0E00               	movlw	0
  3145   0023D8  6E29               	movwf	(___fldiv@a+3)^0,c
  3146   0023DA  EFF7  F011         	goto	l2884
  3147   0023DE                     l2882:
  3148   0023DE  0E00               	movlw	0
  3149   0023E0  6E26               	movwf	___fldiv@a^0,c
  3150   0023E2  0E00               	movlw	0
  3151   0023E4  6E27               	movwf	(___fldiv@a+1)^0,c
  3152   0023E6  0E00               	movlw	0
  3153   0023E8  6E28               	movwf	(___fldiv@a+2)^0,c
  3154   0023EA  0E00               	movlw	0
  3155   0023EC  6E29               	movwf	(___fldiv@a+3)^0,c
  3156   0023EE                     l2884:
  3157   0023EE  5026               	movf	___fldiv@a^0,w,c
  3158   0023F0  1027               	iorwf	(___fldiv@a+1)^0,w,c
  3159   0023F2  1028               	iorwf	(___fldiv@a+2)^0,w,c
  3160   0023F4  1029               	iorwf	(___fldiv@a+3)^0,w,c
  3161   0023F6  A4D8               	btfss	status,2,c
  3162   0023F8  EF00  F012         	goto	u1821
  3163   0023FC  EF02  F012         	goto	u1820
  3164   002400                     u1821:
  3165   002400  EF1A  F012         	goto	l2896
  3166   002404                     u1820:
  3167   002404  0E00               	movlw	0
  3168   002406  6E22               	movwf	___fldiv@b^0,c
  3169   002408  0E00               	movlw	0
  3170   00240A  6E23               	movwf	(___fldiv@b+1)^0,c
  3171   00240C  0E00               	movlw	0
  3172   00240E  6E24               	movwf	(___fldiv@b+2)^0,c
  3173   002410  0E00               	movlw	0
  3174   002412  6E25               	movwf	(___fldiv@b+3)^0,c
  3175   002414  0E80               	movlw	128
  3176   002416  1224               	iorwf	(___fldiv@b+2)^0,f,c
  3177   002418  0E7F               	movlw	127
  3178   00241A  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3179   00241C                     l2890:
  3180   00241C  5032               	movf	___fldiv@sign^0,w,c
  3181   00241E  1225               	iorwf	(___fldiv@b+3)^0,f,c
  3182   002420  C022  F022         	movff	___fldiv@b,?___fldiv
  3183   002424  C023  F023         	movff	___fldiv@b+1,?___fldiv+1
  3184   002428  C024  F024         	movff	___fldiv@b+2,?___fldiv+2
  3185   00242C  C025  F025         	movff	___fldiv@b+3,?___fldiv+3
  3186   002430  EF5D  F013         	goto	l1292
  3187   002434                     l2896:
  3188   002434  5039               	movf	___fldiv@bexp^0,w,c
  3189   002436  A4D8               	btfss	status,2,c
  3190   002438  EF20  F012         	goto	u1831
  3191   00243C  EF22  F012         	goto	u1830
  3192   002440                     u1831:
  3193   002440  EF2C  F012         	goto	l2904
  3194   002444                     u1830:
  3195   002444  0E00               	movlw	0
  3196   002446  6E22               	movwf	?___fldiv^0,c
  3197   002448  0E00               	movlw	0
  3198   00244A  6E23               	movwf	(?___fldiv+1)^0,c
  3199   00244C  0E00               	movlw	0
  3200   00244E  6E24               	movwf	(?___fldiv+2)^0,c
  3201   002450  0E00               	movlw	0
  3202   002452  6E25               	movwf	(?___fldiv+3)^0,c
  3203   002454  EF5D  F013         	goto	l1292
  3204   002458                     l2904:
  3205   002458  503A               	movf	___fldiv@aexp^0,w,c
  3206   00245A  C039  F02A         	movff	___fldiv@bexp,??___fldiv
  3207   00245E  6A2B               	clrf	(??___fldiv+1)^0,c
  3208   002460  5E2A               	subwf	??___fldiv^0,f,c
  3209   002462  0E00               	movlw	0
  3210   002464  5A2B               	subwfb	(??___fldiv+1)^0,f,c
  3211   002466  0E7F               	movlw	127
  3212   002468  242A               	addwf	??___fldiv^0,w,c
  3213   00246A  6E33               	movwf	___fldiv@new_exp^0,c
  3214   00246C  0E00               	movlw	0
  3215   00246E  202B               	addwfc	(??___fldiv+1)^0,w,c
  3216   002470  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3217   002472  C022  F02E         	movff	___fldiv@b,___fldiv@rem
  3218   002476  C023  F02F         	movff	___fldiv@b+1,___fldiv@rem+1
  3219   00247A  C024  F030         	movff	___fldiv@b+2,___fldiv@rem+2
  3220   00247E  C025  F031         	movff	___fldiv@b+3,___fldiv@rem+3
  3221   002482  0E00               	movlw	0
  3222   002484  6E22               	movwf	___fldiv@b^0,c
  3223   002486  0E00               	movlw	0
  3224   002488  6E23               	movwf	(___fldiv@b+1)^0,c
  3225   00248A  0E00               	movlw	0
  3226   00248C  6E24               	movwf	(___fldiv@b+2)^0,c
  3227   00248E  0E00               	movlw	0
  3228   002490  6E25               	movwf	(___fldiv@b+3)^0,c
  3229   002492  0E00               	movlw	0
  3230   002494  6E35               	movwf	___fldiv@grs^0,c
  3231   002496  0E00               	movlw	0
  3232   002498  6E36               	movwf	(___fldiv@grs+1)^0,c
  3233   00249A  0E00               	movlw	0
  3234   00249C  6E37               	movwf	(___fldiv@grs+2)^0,c
  3235   00249E  0E00               	movlw	0
  3236   0024A0  6E38               	movwf	(___fldiv@grs+3)^0,c
  3237   0024A2  0E00               	movlw	0
  3238   0024A4  6E3A               	movwf	___fldiv@aexp^0,c
  3239   0024A6  EF8D  F012         	goto	l1294
  3240   0024AA                     l2914:
  3241   0024AA  503A               	movf	___fldiv@aexp^0,w,c
  3242   0024AC  B4D8               	btfsc	status,2,c
  3243   0024AE  EF5B  F012         	goto	u1841
  3244   0024B2  EF5D  F012         	goto	u1840
  3245   0024B6                     u1841:
  3246   0024B6  EF74  F012         	goto	l2922
  3247   0024BA                     u1840:
  3248   0024BA  90D8               	bcf	status,0,c
  3249   0024BC  362E               	rlcf	___fldiv@rem^0,f,c
  3250   0024BE  362F               	rlcf	(___fldiv@rem+1)^0,f,c
  3251   0024C0  3630               	rlcf	(___fldiv@rem+2)^0,f,c
  3252   0024C2  3631               	rlcf	(___fldiv@rem+3)^0,f,c
  3253   0024C4  90D8               	bcf	status,0,c
  3254   0024C6  3622               	rlcf	___fldiv@b^0,f,c
  3255   0024C8  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3256   0024CA  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3257   0024CC  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3258   0024CE  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3259   0024D0  EF6C  F012         	goto	u1851
  3260   0024D4  EF6E  F012         	goto	u1850
  3261   0024D8                     u1851:
  3262   0024D8  EF6F  F012         	goto	l1297
  3263   0024DC                     u1850:
  3264   0024DC  8022               	bsf	___fldiv@b^0,0,c
  3265   0024DE                     l1297:
  3266   0024DE  90D8               	bcf	status,0,c
  3267   0024E0  3635               	rlcf	___fldiv@grs^0,f,c
  3268   0024E2  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3269   0024E4  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3270   0024E6  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3271   0024E8                     l2922:
  3272   0024E8  5026               	movf	___fldiv@a^0,w,c
  3273   0024EA  5C2E               	subwf	___fldiv@rem^0,w,c
  3274   0024EC  5027               	movf	(___fldiv@a+1)^0,w,c
  3275   0024EE  582F               	subwfb	(___fldiv@rem+1)^0,w,c
  3276   0024F0  5028               	movf	(___fldiv@a+2)^0,w,c
  3277   0024F2  5830               	subwfb	(___fldiv@rem+2)^0,w,c
  3278   0024F4  5029               	movf	(___fldiv@a+3)^0,w,c
  3279   0024F6  5831               	subwfb	(___fldiv@rem+3)^0,w,c
  3280   0024F8  A0D8               	btfss	status,0,c
  3281   0024FA  EF81  F012         	goto	u1861
  3282   0024FE  EF83  F012         	goto	u1860
  3283   002502                     u1861:
  3284   002502  EF8C  F012         	goto	l2928
  3285   002506                     u1860:
  3286   002506  8C38               	bsf	(___fldiv@grs+3)^0,6,c
  3287   002508  5026               	movf	___fldiv@a^0,w,c
  3288   00250A  5E2E               	subwf	___fldiv@rem^0,f,c
  3289   00250C  5027               	movf	(___fldiv@a+1)^0,w,c
  3290   00250E  5A2F               	subwfb	(___fldiv@rem+1)^0,f,c
  3291   002510  5028               	movf	(___fldiv@a+2)^0,w,c
  3292   002512  5A30               	subwfb	(___fldiv@rem+2)^0,f,c
  3293   002514  5029               	movf	(___fldiv@a+3)^0,w,c
  3294   002516  5A31               	subwfb	(___fldiv@rem+3)^0,f,c
  3295   002518                     l2928:
  3296   002518  2A3A               	incf	___fldiv@aexp^0,f,c
  3297   00251A                     l1294:
  3298   00251A  0E19               	movlw	25
  3299   00251C  643A               	cpfsgt	___fldiv@aexp^0,c
  3300   00251E  EF93  F012         	goto	u1871
  3301   002522  EF95  F012         	goto	u1870
  3302   002526                     u1871:
  3303   002526  EF55  F012         	goto	l2914
  3304   00252A                     u1870:
  3305   00252A  502E               	movf	___fldiv@rem^0,w,c
  3306   00252C  102F               	iorwf	(___fldiv@rem+1)^0,w,c
  3307   00252E  1030               	iorwf	(___fldiv@rem+2)^0,w,c
  3308   002530  1031               	iorwf	(___fldiv@rem+3)^0,w,c
  3309   002532  B4D8               	btfsc	status,2,c
  3310   002534  EF9E  F012         	goto	u1881
  3311   002538  EFA0  F012         	goto	u1880
  3312   00253C                     u1881:
  3313   00253C  EFB8  F012         	goto	l2940
  3314   002540                     u1880:
  3315   002540  8035               	bsf	___fldiv@grs^0,0,c
  3316   002542  EFB8  F012         	goto	l2940
  3317   002546                     l2934:
  3318   002546  90D8               	bcf	status,0,c
  3319   002548  3622               	rlcf	___fldiv@b^0,f,c
  3320   00254A  3623               	rlcf	(___fldiv@b+1)^0,f,c
  3321   00254C  3624               	rlcf	(___fldiv@b+2)^0,f,c
  3322   00254E  3625               	rlcf	(___fldiv@b+3)^0,f,c
  3323   002550  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3324   002552  EFAD  F012         	goto	u1891
  3325   002556  EFAF  F012         	goto	u1890
  3326   00255A                     u1891:
  3327   00255A  EFB0  F012         	goto	l1303
  3328   00255E                     u1890:
  3329   00255E  8022               	bsf	___fldiv@b^0,0,c
  3330   002560                     l1303:
  3331   002560  90D8               	bcf	status,0,c
  3332   002562  3635               	rlcf	___fldiv@grs^0,f,c
  3333   002564  3636               	rlcf	(___fldiv@grs+1)^0,f,c
  3334   002566  3637               	rlcf	(___fldiv@grs+2)^0,f,c
  3335   002568  3638               	rlcf	(___fldiv@grs+3)^0,f,c
  3336   00256A  0633               	decf	___fldiv@new_exp^0,f,c
  3337   00256C  A0D8               	btfss	status,0,c
  3338   00256E  0634               	decf	(___fldiv@new_exp+1)^0,f,c
  3339   002570                     l2940:
  3340   002570  AE24               	btfss	(___fldiv@b+2)^0,7,c
  3341   002572  EFBD  F012         	goto	u1901
  3342   002576  EFBF  F012         	goto	u1900
  3343   00257A                     u1901:
  3344   00257A  EFA3  F012         	goto	l2934
  3345   00257E                     u1900:
  3346   00257E  0E00               	movlw	0
  3347   002580  6E3A               	movwf	___fldiv@aexp^0,c
  3348   002582  AE38               	btfss	(___fldiv@grs+3)^0,7,c
  3349   002584  EFC6  F012         	goto	u1911
  3350   002588  EFC8  F012         	goto	u1910
  3351   00258C                     u1911:
  3352   00258C  EFEC  F012         	goto	l1305
  3353   002590                     u1910:
  3354   002590  0EFF               	movlw	255
  3355   002592  1435               	andwf	___fldiv@grs^0,w,c
  3356   002594  6E2A               	movwf	??___fldiv^0,c
  3357   002596  0EFF               	movlw	255
  3358   002598  1436               	andwf	(___fldiv@grs+1)^0,w,c
  3359   00259A  6E2B               	movwf	(??___fldiv+1)^0,c
  3360   00259C  0EFF               	movlw	255
  3361   00259E  1437               	andwf	(___fldiv@grs+2)^0,w,c
  3362   0025A0  6E2C               	movwf	(??___fldiv+2)^0,c
  3363   0025A2  0E7F               	movlw	127
  3364   0025A4  1438               	andwf	(___fldiv@grs+3)^0,w,c
  3365   0025A6  6E2D               	movwf	(??___fldiv+3)^0,c
  3366   0025A8  502A               	movf	??___fldiv^0,w,c
  3367   0025AA  102B               	iorwf	(??___fldiv+1)^0,w,c
  3368   0025AC  102C               	iorwf	(??___fldiv+2)^0,w,c
  3369   0025AE  102D               	iorwf	(??___fldiv+3)^0,w,c
  3370   0025B0  B4D8               	btfsc	status,2,c
  3371   0025B2  EFDD  F012         	goto	u1921
  3372   0025B6  EFDF  F012         	goto	u1920
  3373   0025BA                     u1921:
  3374   0025BA  EFE3  F012         	goto	l1306
  3375   0025BE                     u1920:
  3376   0025BE                     l2948:
  3377   0025BE  0E01               	movlw	1
  3378   0025C0  6E3A               	movwf	___fldiv@aexp^0,c
  3379   0025C2  EFEC  F012         	goto	l1305
  3380   0025C6                     l1306:
  3381   0025C6  A022               	btfss	___fldiv@b^0,0,c
  3382   0025C8  EFE8  F012         	goto	u1931
  3383   0025CC  EFEA  F012         	goto	u1930
  3384   0025D0                     u1931:
  3385   0025D0  EFEC  F012         	goto	l1305
  3386   0025D4                     u1930:
  3387   0025D4  EFDF  F012         	goto	l2948
  3388   0025D8                     l1305:
  3389   0025D8  503A               	movf	___fldiv@aexp^0,w,c
  3390   0025DA  B4D8               	btfsc	status,2,c
  3391   0025DC  EFF2  F012         	goto	u1941
  3392   0025E0  EFF4  F012         	goto	u1940
  3393   0025E4                     u1941:
  3394   0025E4  EF18  F013         	goto	l2960
  3395   0025E8                     u1940:
  3396   0025E8  0E01               	movlw	1
  3397   0025EA  2622               	addwf	___fldiv@b^0,f,c
  3398   0025EC  0E00               	movlw	0
  3399   0025EE  2223               	addwfc	(___fldiv@b+1)^0,f,c
  3400   0025F0  2224               	addwfc	(___fldiv@b+2)^0,f,c
  3401   0025F2  2225               	addwfc	(___fldiv@b+3)^0,f,c
  3402   0025F4  A025               	btfss	(___fldiv@b+3)^0,0,c
  3403   0025F6  EFFF  F012         	goto	u1951
  3404   0025FA  EF01  F013         	goto	u1950
  3405   0025FE                     u1951:
  3406   0025FE  EF18  F013         	goto	l2960
  3407   002602                     u1950:
  3408   002602  C022  F02A         	movff	___fldiv@b,??___fldiv
  3409   002606  C023  F02B         	movff	___fldiv@b+1,??___fldiv+1
  3410   00260A  C024  F02C         	movff	___fldiv@b+2,??___fldiv+2
  3411   00260E  C025  F02D         	movff	___fldiv@b+3,??___fldiv+3
  3412   002612  342D               	rlcf	(??___fldiv+3)^0,w,c
  3413   002614  322D               	rrcf	(??___fldiv+3)^0,f,c
  3414   002616  322C               	rrcf	(??___fldiv+2)^0,f,c
  3415   002618  322B               	rrcf	(??___fldiv+1)^0,f,c
  3416   00261A  322A               	rrcf	??___fldiv^0,f,c
  3417   00261C  C02A  F022         	movff	??___fldiv,___fldiv@b
  3418   002620  C02B  F023         	movff	??___fldiv+1,___fldiv@b+1
  3419   002624  C02C  F024         	movff	??___fldiv+2,___fldiv@b+2
  3420   002628  C02D  F025         	movff	??___fldiv+3,___fldiv@b+3
  3421   00262C  4A33               	infsnz	___fldiv@new_exp^0,f,c
  3422   00262E  2A34               	incf	(___fldiv@new_exp+1)^0,f,c
  3423   002630                     l2960:
  3424   002630  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3425   002632  EF23  F013         	goto	u1961
  3426   002636  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3427   002638  E108               	bnz	u1960
  3428   00263A  2833               	incf	___fldiv@new_exp^0,w,c
  3429   00263C  A0D8               	btfss	status,0,c
  3430   00263E  EF23  F013         	goto	u1961
  3431   002642  EF25  F013         	goto	u1960
  3432   002646                     u1961:
  3433   002646  EF30  F013         	goto	l2964
  3434   00264A                     u1960:
  3435   00264A  0E00               	movlw	0
  3436   00264C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3437   00264E  6833               	setf	___fldiv@new_exp^0,c
  3438   002650  0E00               	movlw	0
  3439   002652  6E22               	movwf	___fldiv@b^0,c
  3440   002654  0E00               	movlw	0
  3441   002656  6E23               	movwf	(___fldiv@b+1)^0,c
  3442   002658  0E00               	movlw	0
  3443   00265A  6E24               	movwf	(___fldiv@b+2)^0,c
  3444   00265C  0E00               	movlw	0
  3445   00265E  6E25               	movwf	(___fldiv@b+3)^0,c
  3446   002660                     l2964:
  3447   002660  BE34               	btfsc	(___fldiv@new_exp+1)^0,7,c
  3448   002662  EF3D  F013         	goto	u1970
  3449   002666  5034               	movf	(___fldiv@new_exp+1)^0,w,c
  3450   002668  E106               	bnz	u1971
  3451   00266A  0433               	decf	___fldiv@new_exp^0,w,c
  3452   00266C  B0D8               	btfsc	status,0,c
  3453   00266E  EF3B  F013         	goto	u1971
  3454   002672  EF3D  F013         	goto	u1970
  3455   002676                     u1971:
  3456   002676  EF4B  F013         	goto	l2968
  3457   00267A                     u1970:
  3458   00267A  0E00               	movlw	0
  3459   00267C  6E34               	movwf	(___fldiv@new_exp+1)^0,c
  3460   00267E  0E00               	movlw	0
  3461   002680  6E33               	movwf	___fldiv@new_exp^0,c
  3462   002682  0E00               	movlw	0
  3463   002684  6E22               	movwf	___fldiv@b^0,c
  3464   002686  0E00               	movlw	0
  3465   002688  6E23               	movwf	(___fldiv@b+1)^0,c
  3466   00268A  0E00               	movlw	0
  3467   00268C  6E24               	movwf	(___fldiv@b+2)^0,c
  3468   00268E  0E00               	movlw	0
  3469   002690  6E25               	movwf	(___fldiv@b+3)^0,c
  3470   002692  0E00               	movlw	0
  3471   002694  6E32               	movwf	___fldiv@sign^0,c
  3472   002696                     l2968:
  3473   002696  C033  F039         	movff	___fldiv@new_exp,___fldiv@bexp
  3474   00269A  A039               	btfss	___fldiv@bexp^0,0,c
  3475   00269C  EF52  F013         	goto	u1981
  3476   0026A0  EF54  F013         	goto	u1980
  3477   0026A4                     u1981:
  3478   0026A4  EF57  F013         	goto	l2974
  3479   0026A8                     u1980:
  3480   0026A8  8E24               	bsf	(___fldiv@b+2)^0,7,c
  3481   0026AA  EF58  F013         	goto	l2976
  3482   0026AE                     l2974:
  3483   0026AE  9E24               	bcf	(___fldiv@b+2)^0,7,c
  3484   0026B0                     l2976:
  3485   0026B0  90D8               	bcf	status,0,c
  3486   0026B2  3039               	rrcf	___fldiv@bexp^0,w,c
  3487   0026B4  6E25               	movwf	(___fldiv@b+3)^0,c
  3488   0026B6  EF0E  F012         	goto	l2890
  3489   0026BA                     l1292:
  3490   0026BA  0012               	return		;funcret
  3491   0026BC                     __end_of___fldiv:
  3492                           	callstack 0
  3493                           
  3494 ;; *************** function ___fladd *****************
  3495 ;; Defined at:
  3496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;  b               4    8[COMRAM] unsigned char 
  3499 ;;  a               4   12[COMRAM] unsigned char 
  3500 ;; Auto vars:     Size  Location     Type
  3501 ;;  grs             1   23[COMRAM] unsigned char 
  3502 ;;  bexp            1   22[COMRAM] unsigned char 
  3503 ;;  aexp            1   21[COMRAM] unsigned char 
  3504 ;;  signs           1   20[COMRAM] unsigned char 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4    8[COMRAM] unsigned char 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3514 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3515 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3516 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3517 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3518 ;;Total ram usage:       16 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 6
  3521 ;; This function calls:
  3522 ;;		Nothing
  3523 ;; This function is called by:
  3524 ;;		_rangeCalibrate
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           	psect	text17
  3529   001A9A                     __ptext17:
  3530                           	callstack 0
  3531   001A9A                     ___fladd:
  3532                           	callstack 23
  3533   001A9A  500C               	movf	(___fladd@b+3)^0,w,c
  3534   001A9C  0B80               	andlw	128
  3535   001A9E  6E15               	movwf	___fladd@signs^0,c
  3536   001AA0  500C               	movf	(___fladd@b+3)^0,w,c
  3537   001AA2  240C               	addwf	(___fladd@b+3)^0,w,c
  3538   001AA4  6E17               	movwf	___fladd@bexp^0,c
  3539   001AA6  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3540   001AA8  EF58  F00D         	goto	u2131
  3541   001AAC  EF5A  F00D         	goto	u2130
  3542   001AB0                     u2131:
  3543   001AB0  EF5B  F00D         	goto	l3156
  3544   001AB4                     u2130:
  3545   001AB4  8017               	bsf	___fladd@bexp^0,0,c
  3546   001AB6                     l3156:
  3547   001AB6  5017               	movf	___fladd@bexp^0,w,c
  3548   001AB8  B4D8               	btfsc	status,2,c
  3549   001ABA  EF61  F00D         	goto	u2141
  3550   001ABE  EF63  F00D         	goto	u2140
  3551   001AC2                     u2141:
  3552   001AC2  EF78  F00D         	goto	l3166
  3553   001AC6                     u2140:
  3554   001AC6  2817               	incf	___fladd@bexp^0,w,c
  3555   001AC8  A4D8               	btfss	status,2,c
  3556   001ACA  EF69  F00D         	goto	u2151
  3557   001ACE  EF6B  F00D         	goto	u2150
  3558   001AD2                     u2151:
  3559   001AD2  EF73  F00D         	goto	l3162
  3560   001AD6                     u2150:
  3561   001AD6  0E00               	movlw	0
  3562   001AD8  6E09               	movwf	___fladd@b^0,c
  3563   001ADA  0E00               	movlw	0
  3564   001ADC  6E0A               	movwf	(___fladd@b+1)^0,c
  3565   001ADE  0E00               	movlw	0
  3566   001AE0  6E0B               	movwf	(___fladd@b+2)^0,c
  3567   001AE2  0E00               	movlw	0
  3568   001AE4  6E0C               	movwf	(___fladd@b+3)^0,c
  3569   001AE6                     l3162:
  3570   001AE6  8E0B               	bsf	(___fladd@b+2)^0,7,c
  3571   001AE8  0E00               	movlw	0
  3572   001AEA  6E0C               	movwf	(___fladd@b+3)^0,c
  3573   001AEC  EF80  F00D         	goto	l3168
  3574   001AF0                     l3166:
  3575   001AF0  0E00               	movlw	0
  3576   001AF2  6E09               	movwf	___fladd@b^0,c
  3577   001AF4  0E00               	movlw	0
  3578   001AF6  6E0A               	movwf	(___fladd@b+1)^0,c
  3579   001AF8  0E00               	movlw	0
  3580   001AFA  6E0B               	movwf	(___fladd@b+2)^0,c
  3581   001AFC  0E00               	movlw	0
  3582   001AFE  6E0C               	movwf	(___fladd@b+3)^0,c
  3583   001B00                     l3168:
  3584   001B00  5010               	movf	(___fladd@a+3)^0,w,c
  3585   001B02  0B80               	andlw	128
  3586   001B04  6E16               	movwf	___fladd@aexp^0,c
  3587   001B06  5015               	movf	___fladd@signs^0,w,c
  3588   001B08  1816               	xorwf	___fladd@aexp^0,w,c
  3589   001B0A  B4D8               	btfsc	status,2,c
  3590   001B0C  EF8A  F00D         	goto	u2161
  3591   001B10  EF8C  F00D         	goto	u2160
  3592   001B14                     u2161:
  3593   001B14  EF8D  F00D         	goto	l3174
  3594   001B18                     u2160:
  3595   001B18  8C15               	bsf	___fladd@signs^0,6,c
  3596   001B1A                     l3174:
  3597   001B1A  5010               	movf	(___fladd@a+3)^0,w,c
  3598   001B1C  2410               	addwf	(___fladd@a+3)^0,w,c
  3599   001B1E  6E16               	movwf	___fladd@aexp^0,c
  3600   001B20  AE0F               	btfss	(___fladd@a+2)^0,7,c
  3601   001B22  EF95  F00D         	goto	u2171
  3602   001B26  EF97  F00D         	goto	u2170
  3603   001B2A                     u2171:
  3604   001B2A  EF98  F00D         	goto	l3180
  3605   001B2E                     u2170:
  3606   001B2E  8016               	bsf	___fladd@aexp^0,0,c
  3607   001B30                     l3180:
  3608   001B30  5016               	movf	___fladd@aexp^0,w,c
  3609   001B32  B4D8               	btfsc	status,2,c
  3610   001B34  EF9E  F00D         	goto	u2181
  3611   001B38  EFA0  F00D         	goto	u2180
  3612   001B3C                     u2181:
  3613   001B3C  EFB5  F00D         	goto	l3190
  3614   001B40                     u2180:
  3615   001B40  2816               	incf	___fladd@aexp^0,w,c
  3616   001B42  A4D8               	btfss	status,2,c
  3617   001B44  EFA6  F00D         	goto	u2191
  3618   001B48  EFA8  F00D         	goto	u2190
  3619   001B4C                     u2191:
  3620   001B4C  EFB0  F00D         	goto	l3186
  3621   001B50                     u2190:
  3622   001B50  0E00               	movlw	0
  3623   001B52  6E0D               	movwf	___fladd@a^0,c
  3624   001B54  0E00               	movlw	0
  3625   001B56  6E0E               	movwf	(___fladd@a+1)^0,c
  3626   001B58  0E00               	movlw	0
  3627   001B5A  6E0F               	movwf	(___fladd@a+2)^0,c
  3628   001B5C  0E00               	movlw	0
  3629   001B5E  6E10               	movwf	(___fladd@a+3)^0,c
  3630   001B60                     l3186:
  3631   001B60  8E0F               	bsf	(___fladd@a+2)^0,7,c
  3632   001B62  0E00               	movlw	0
  3633   001B64  6E10               	movwf	(___fladd@a+3)^0,c
  3634   001B66  EFBD  F00D         	goto	l3192
  3635   001B6A                     l3190:
  3636   001B6A  0E00               	movlw	0
  3637   001B6C  6E0D               	movwf	___fladd@a^0,c
  3638   001B6E  0E00               	movlw	0
  3639   001B70  6E0E               	movwf	(___fladd@a+1)^0,c
  3640   001B72  0E00               	movlw	0
  3641   001B74  6E0F               	movwf	(___fladd@a+2)^0,c
  3642   001B76  0E00               	movlw	0
  3643   001B78  6E10               	movwf	(___fladd@a+3)^0,c
  3644   001B7A                     l3192:
  3645   001B7A  5017               	movf	___fladd@bexp^0,w,c
  3646   001B7C  5C16               	subwf	___fladd@aexp^0,w,c
  3647   001B7E  B0D8               	btfsc	status,0,c
  3648   001B80  EFC4  F00D         	goto	u2201
  3649   001B84  EFC6  F00D         	goto	u2200
  3650   001B88                     u2201:
  3651   001B88  EFED  F00D         	goto	l3228
  3652   001B8C                     u2200:
  3653   001B8C  AC15               	btfss	___fladd@signs^0,6,c
  3654   001B8E  EFCB  F00D         	goto	u2211
  3655   001B92  EFCD  F00D         	goto	u2210
  3656   001B96                     u2211:
  3657   001B96  EFCF  F00D         	goto	l3198
  3658   001B9A                     u2210:
  3659   001B9A  0E80               	movlw	128
  3660   001B9C  1A15               	xorwf	___fladd@signs^0,f,c
  3661   001B9E                     l3198:
  3662   001B9E  C017  F018         	movff	___fladd@bexp,___fladd@grs
  3663   001BA2  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3664   001BA6  C018  F016         	movff	___fladd@grs,___fladd@aexp
  3665   001BAA  C009  F018         	movff	___fladd@b,___fladd@grs
  3666   001BAE  C00D  F009         	movff	___fladd@a,___fladd@b
  3667   001BB2  C018  F00D         	movff	___fladd@grs,___fladd@a
  3668   001BB6  C00A  F018         	movff	___fladd@b+1,___fladd@grs
  3669   001BBA  C00E  F00A         	movff	___fladd@a+1,___fladd@b+1
  3670   001BBE  C018  F00E         	movff	___fladd@grs,___fladd@a+1
  3671   001BC2  C00B  F018         	movff	___fladd@b+2,___fladd@grs
  3672   001BC6  C00F  F00B         	movff	___fladd@a+2,___fladd@b+2
  3673   001BCA  C018  F00F         	movff	___fladd@grs,___fladd@a+2
  3674   001BCE  C00C  F018         	movff	___fladd@b+3,___fladd@grs
  3675   001BD2  C010  F00C         	movff	___fladd@a+3,___fladd@b+3
  3676   001BD6  C018  F010         	movff	___fladd@grs,___fladd@a+3
  3677   001BDA                     l3228:
  3678   001BDA  0E00               	movlw	0
  3679   001BDC  6E18               	movwf	___fladd@grs^0,c
  3680   001BDE  5017               	movf	___fladd@bexp^0,w,c
  3681   001BE0  C016  F011         	movff	___fladd@aexp,??___fladd
  3682   001BE4  6A12               	clrf	(??___fladd+1)^0,c
  3683   001BE6  5E11               	subwf	??___fladd^0,f,c
  3684   001BE8  0E00               	movlw	0
  3685   001BEA  5A12               	subwfb	(??___fladd+1)^0,f,c
  3686   001BEC  BE12               	btfsc	(??___fladd+1)^0,7,c
  3687   001BEE  EF02  F00E         	goto	u2221
  3688   001BF2  5012               	movf	(??___fladd+1)^0,w,c
  3689   001BF4  E109               	bnz	u2220
  3690   001BF6  0E1A               	movlw	26
  3691   001BF8  5C11               	subwf	??___fladd^0,w,c
  3692   001BFA  A0D8               	btfss	status,0,c
  3693   001BFC  EF02  F00E         	goto	u2221
  3694   001C00  EF04  F00E         	goto	u2220
  3695   001C04                     u2221:
  3696   001C04  EF3B  F00E         	goto	l1239
  3697   001C08                     u2220:
  3698   001C08  5009               	movf	___fladd@b^0,w,c
  3699   001C0A  100A               	iorwf	(___fladd@b+1)^0,w,c
  3700   001C0C  100B               	iorwf	(___fladd@b+2)^0,w,c
  3701   001C0E  100C               	iorwf	(___fladd@b+3)^0,w,c
  3702   001C10  A4D8               	btfss	status,2,c
  3703   001C12  EF0D  F00E         	goto	u2231
  3704   001C16  EF10  F00E         	goto	u2230
  3705   001C1A                     u2231:
  3706   001C1A  0E01               	movlw	1
  3707   001C1C  EF11  F00E         	goto	u2240
  3708   001C20                     u2230:
  3709   001C20  0E00               	movlw	0
  3710   001C22                     u2240:
  3711   001C22  6E18               	movwf	___fladd@grs^0,c
  3712   001C24  0E00               	movlw	0
  3713   001C26  6E09               	movwf	___fladd@b^0,c
  3714   001C28  0E00               	movlw	0
  3715   001C2A  6E0A               	movwf	(___fladd@b+1)^0,c
  3716   001C2C  0E00               	movlw	0
  3717   001C2E  6E0B               	movwf	(___fladd@b+2)^0,c
  3718   001C30  0E00               	movlw	0
  3719   001C32  6E0C               	movwf	(___fladd@b+3)^0,c
  3720   001C34  C016  F017         	movff	___fladd@aexp,___fladd@bexp
  3721   001C38  EF44  F00E         	goto	l1238
  3722   001C3C                     l1240:
  3723   001C3C  A018               	btfss	___fladd@grs^0,0,c
  3724   001C3E  EF23  F00E         	goto	u2251
  3725   001C42  EF25  F00E         	goto	u2250
  3726   001C46                     u2251:
  3727   001C46  EF2B  F00E         	goto	l3240
  3728   001C4A                     u2250:
  3729   001C4A  90D8               	bcf	status,0,c
  3730   001C4C  3018               	rrcf	___fladd@grs^0,w,c
  3731   001C4E  0901               	iorlw	1
  3732   001C50  6E18               	movwf	___fladd@grs^0,c
  3733   001C52  EF2D  F00E         	goto	l3242
  3734   001C56                     l3240:
  3735   001C56  90D8               	bcf	status,0,c
  3736   001C58  3218               	rrcf	___fladd@grs^0,f,c
  3737   001C5A                     l3242:
  3738   001C5A  A009               	btfss	___fladd@b^0,0,c
  3739   001C5C  EF32  F00E         	goto	u2261
  3740   001C60  EF34  F00E         	goto	u2260
  3741   001C64                     u2261:
  3742   001C64  EF35  F00E         	goto	l3246
  3743   001C68                     u2260:
  3744   001C68  8E18               	bsf	___fladd@grs^0,7,c
  3745   001C6A                     l3246:
  3746   001C6A  340C               	rlcf	(___fladd@b+3)^0,w,c
  3747   001C6C  320C               	rrcf	(___fladd@b+3)^0,f,c
  3748   001C6E  320B               	rrcf	(___fladd@b+2)^0,f,c
  3749   001C70  320A               	rrcf	(___fladd@b+1)^0,f,c
  3750   001C72  3209               	rrcf	___fladd@b^0,f,c
  3751   001C74  2A17               	incf	___fladd@bexp^0,f,c
  3752   001C76                     l1239:
  3753   001C76  5016               	movf	___fladd@aexp^0,w,c
  3754   001C78  5C17               	subwf	___fladd@bexp^0,w,c
  3755   001C7A  A0D8               	btfss	status,0,c
  3756   001C7C  EF42  F00E         	goto	u2271
  3757   001C80  EF44  F00E         	goto	u2270
  3758   001C84                     u2271:
  3759   001C84  EF1E  F00E         	goto	l1240
  3760   001C88                     u2270:
  3761   001C88                     l1238:
  3762   001C88  BC15               	btfsc	___fladd@signs^0,6,c
  3763   001C8A  EF49  F00E         	goto	u2281
  3764   001C8E  EF4B  F00E         	goto	u2280
  3765   001C92                     u2281:
  3766   001C92  EF8B  F00E         	goto	l3274
  3767   001C96                     u2280:
  3768   001C96  5017               	movf	___fladd@bexp^0,w,c
  3769   001C98  A4D8               	btfss	status,2,c
  3770   001C9A  EF51  F00E         	goto	u2291
  3771   001C9E  EF53  F00E         	goto	u2290
  3772   001CA2                     u2291:
  3773   001CA2  EF5D  F00E         	goto	l3256
  3774   001CA6                     u2290:
  3775   001CA6  0E00               	movlw	0
  3776   001CA8  6E09               	movwf	?___fladd^0,c
  3777   001CAA  0E00               	movlw	0
  3778   001CAC  6E0A               	movwf	(?___fladd+1)^0,c
  3779   001CAE  0E00               	movlw	0
  3780   001CB0  6E0B               	movwf	(?___fladd+2)^0,c
  3781   001CB2  0E00               	movlw	0
  3782   001CB4  6E0C               	movwf	(?___fladd+3)^0,c
  3783   001CB6  EFAC  F00F         	goto	l1247
  3784   001CBA                     l3256:
  3785   001CBA  500D               	movf	___fladd@a^0,w,c
  3786   001CBC  2609               	addwf	___fladd@b^0,f,c
  3787   001CBE  500E               	movf	(___fladd@a+1)^0,w,c
  3788   001CC0  220A               	addwfc	(___fladd@b+1)^0,f,c
  3789   001CC2  500F               	movf	(___fladd@a+2)^0,w,c
  3790   001CC4  220B               	addwfc	(___fladd@b+2)^0,f,c
  3791   001CC6  5010               	movf	(___fladd@a+3)^0,w,c
  3792   001CC8  220C               	addwfc	(___fladd@b+3)^0,f,c
  3793   001CCA  A00C               	btfss	(___fladd@b+3)^0,0,c
  3794   001CCC  EF6A  F00E         	goto	u2301
  3795   001CD0  EF6C  F00E         	goto	u2300
  3796   001CD4                     u2301:
  3797   001CD4  EF18  F00F         	goto	l3310
  3798   001CD8                     u2300:
  3799   001CD8  A018               	btfss	___fladd@grs^0,0,c
  3800   001CDA  EF71  F00E         	goto	u2311
  3801   001CDE  EF73  F00E         	goto	u2310
  3802   001CE2                     u2311:
  3803   001CE2  EF79  F00E         	goto	l3264
  3804   001CE6                     u2310:
  3805   001CE6  90D8               	bcf	status,0,c
  3806   001CE8  3018               	rrcf	___fladd@grs^0,w,c
  3807   001CEA  0901               	iorlw	1
  3808   001CEC  6E18               	movwf	___fladd@grs^0,c
  3809   001CEE  EF7B  F00E         	goto	l3266
  3810   001CF2                     l3264:
  3811   001CF2  90D8               	bcf	status,0,c
  3812   001CF4  3218               	rrcf	___fladd@grs^0,f,c
  3813   001CF6                     l3266:
  3814   001CF6  A009               	btfss	___fladd@b^0,0,c
  3815   001CF8  EF80  F00E         	goto	u2321
  3816   001CFC  EF82  F00E         	goto	u2320
  3817   001D00                     u2321:
  3818   001D00  EF83  F00E         	goto	l3270
  3819   001D04                     u2320:
  3820   001D04  8E18               	bsf	___fladd@grs^0,7,c
  3821   001D06                     l3270:
  3822   001D06  340C               	rlcf	(___fladd@b+3)^0,w,c
  3823   001D08  320C               	rrcf	(___fladd@b+3)^0,f,c
  3824   001D0A  320B               	rrcf	(___fladd@b+2)^0,f,c
  3825   001D0C  320A               	rrcf	(___fladd@b+1)^0,f,c
  3826   001D0E  3209               	rrcf	___fladd@b^0,f,c
  3827   001D10  2A17               	incf	___fladd@bexp^0,f,c
  3828   001D12  EF18  F00F         	goto	l3310
  3829   001D16                     l3274:
  3830   001D16  500D               	movf	___fladd@a^0,w,c
  3831   001D18  5C09               	subwf	___fladd@b^0,w,c
  3832   001D1A  500E               	movf	(___fladd@a+1)^0,w,c
  3833   001D1C  580A               	subwfb	(___fladd@b+1)^0,w,c
  3834   001D1E  500F               	movf	(___fladd@a+2)^0,w,c
  3835   001D20  580B               	subwfb	(___fladd@b+2)^0,w,c
  3836   001D22  500C               	movf	(___fladd@b+3)^0,w,c
  3837   001D24  0A80               	xorlw	128
  3838   001D26  6E11               	movwf	??___fladd^0,c
  3839   001D28  5010               	movf	(___fladd@a+3)^0,w,c
  3840   001D2A  0A80               	xorlw	128
  3841   001D2C  5811               	subwfb	??___fladd^0,w,c
  3842   001D2E  B0D8               	btfsc	status,0,c
  3843   001D30  EF9C  F00E         	goto	u2331
  3844   001D34  EF9E  F00E         	goto	u2330
  3845   001D38                     u2331:
  3846   001D38  EFC9  F00E         	goto	l3284
  3847   001D3C                     u2330:
  3848   001D3C  5009               	movf	___fladd@b^0,w,c
  3849   001D3E  5C0D               	subwf	___fladd@a^0,w,c
  3850   001D40  6E11               	movwf	??___fladd^0,c
  3851   001D42  500A               	movf	(___fladd@b+1)^0,w,c
  3852   001D44  580E               	subwfb	(___fladd@a+1)^0,w,c
  3853   001D46  6E12               	movwf	(??___fladd+1)^0,c
  3854   001D48  500B               	movf	(___fladd@b+2)^0,w,c
  3855   001D4A  580F               	subwfb	(___fladd@a+2)^0,w,c
  3856   001D4C  6E13               	movwf	(??___fladd+2)^0,c
  3857   001D4E  500C               	movf	(___fladd@b+3)^0,w,c
  3858   001D50  5810               	subwfb	(___fladd@a+3)^0,w,c
  3859   001D52  6E14               	movwf	(??___fladd+3)^0,c
  3860   001D54  0EFF               	movlw	255
  3861   001D56  2411               	addwf	??___fladd^0,w,c
  3862   001D58  6E09               	movwf	___fladd@b^0,c
  3863   001D5A  0EFF               	movlw	255
  3864   001D5C  2012               	addwfc	(??___fladd+1)^0,w,c
  3865   001D5E  6E0A               	movwf	(___fladd@b+1)^0,c
  3866   001D60  0EFF               	movlw	255
  3867   001D62  2013               	addwfc	(??___fladd+2)^0,w,c
  3868   001D64  6E0B               	movwf	(___fladd@b+2)^0,c
  3869   001D66  0EFF               	movlw	255
  3870   001D68  2014               	addwfc	(??___fladd+3)^0,w,c
  3871   001D6A  6E0C               	movwf	(___fladd@b+3)^0,c
  3872   001D6C  0E80               	movlw	128
  3873   001D6E  1A15               	xorwf	___fladd@signs^0,f,c
  3874   001D70  6C18               	negf	___fladd@grs^0,c
  3875   001D72  5018               	movf	___fladd@grs^0,w,c
  3876   001D74  A4D8               	btfss	status,2,c
  3877   001D76  EFBF  F00E         	goto	u2341
  3878   001D7A  EFC1  F00E         	goto	u2340
  3879   001D7E                     u2341:
  3880   001D7E  EFD1  F00E         	goto	l1255
  3881   001D82                     u2340:
  3882   001D82  0E01               	movlw	1
  3883   001D84  2609               	addwf	___fladd@b^0,f,c
  3884   001D86  0E00               	movlw	0
  3885   001D88  220A               	addwfc	(___fladd@b+1)^0,f,c
  3886   001D8A  220B               	addwfc	(___fladd@b+2)^0,f,c
  3887   001D8C  220C               	addwfc	(___fladd@b+3)^0,f,c
  3888   001D8E  EFD1  F00E         	goto	l1255
  3889   001D92                     l3284:
  3890   001D92  500D               	movf	___fladd@a^0,w,c
  3891   001D94  5E09               	subwf	___fladd@b^0,f,c
  3892   001D96  500E               	movf	(___fladd@a+1)^0,w,c
  3893   001D98  5A0A               	subwfb	(___fladd@b+1)^0,f,c
  3894   001D9A  500F               	movf	(___fladd@a+2)^0,w,c
  3895   001D9C  5A0B               	subwfb	(___fladd@b+2)^0,f,c
  3896   001D9E  5010               	movf	(___fladd@a+3)^0,w,c
  3897   001DA0  5A0C               	subwfb	(___fladd@b+3)^0,f,c
  3898   001DA2                     l1255:
  3899   001DA2  5009               	movf	___fladd@b^0,w,c
  3900   001DA4  100A               	iorwf	(___fladd@b+1)^0,w,c
  3901   001DA6  100B               	iorwf	(___fladd@b+2)^0,w,c
  3902   001DA8  100C               	iorwf	(___fladd@b+3)^0,w,c
  3903   001DAA  A4D8               	btfss	status,2,c
  3904   001DAC  EFDA  F00E         	goto	u2351
  3905   001DB0  EFDC  F00E         	goto	u2350
  3906   001DB4                     u2351:
  3907   001DB4  EF11  F00F         	goto	l3308
  3908   001DB8                     u2350:
  3909   001DB8  5018               	movf	___fladd@grs^0,w,c
  3910   001DBA  A4D8               	btfss	status,2,c
  3911   001DBC  EFE2  F00E         	goto	u2361
  3912   001DC0  EFE4  F00E         	goto	u2360
  3913   001DC4                     u2361:
  3914   001DC4  EF11  F00F         	goto	l3308
  3915   001DC8                     u2360:
  3916   001DC8  0E00               	movlw	0
  3917   001DCA  6E09               	movwf	?___fladd^0,c
  3918   001DCC  0E00               	movlw	0
  3919   001DCE  6E0A               	movwf	(?___fladd+1)^0,c
  3920   001DD0  0E00               	movlw	0
  3921   001DD2  6E0B               	movwf	(?___fladd+2)^0,c
  3922   001DD4  0E00               	movlw	0
  3923   001DD6  6E0C               	movwf	(?___fladd+3)^0,c
  3924   001DD8  EFAC  F00F         	goto	l1247
  3925   001DDC                     l3292:
  3926   001DDC  90D8               	bcf	status,0,c
  3927   001DDE  3609               	rlcf	___fladd@b^0,f,c
  3928   001DE0  360A               	rlcf	(___fladd@b+1)^0,f,c
  3929   001DE2  360B               	rlcf	(___fladd@b+2)^0,f,c
  3930   001DE4  360C               	rlcf	(___fladd@b+3)^0,f,c
  3931   001DE6  AE18               	btfss	___fladd@grs^0,7,c
  3932   001DE8  EFF8  F00E         	goto	u2371
  3933   001DEC  EFFA  F00E         	goto	u2370
  3934   001DF0                     u2371:
  3935   001DF0  EFFB  F00E         	goto	l3298
  3936   001DF4                     u2370:
  3937   001DF4  8009               	bsf	___fladd@b^0,0,c
  3938   001DF6                     l3298:
  3939   001DF6  A018               	btfss	___fladd@grs^0,0,c
  3940   001DF8  EF00  F00F         	goto	u2381
  3941   001DFC  EF02  F00F         	goto	u2380
  3942   001E00                     u2381:
  3943   001E00  EF06  F00F         	goto	l3302
  3944   001E04                     u2380:
  3945   001E04  80D8               	bsf	status,0,c
  3946   001E06  3618               	rlcf	___fladd@grs^0,f,c
  3947   001E08  EF08  F00F         	goto	l3304
  3948   001E0C                     l3302:
  3949   001E0C  90D8               	bcf	status,0,c
  3950   001E0E  3618               	rlcf	___fladd@grs^0,f,c
  3951   001E10                     l3304:
  3952   001E10  5017               	movf	___fladd@bexp^0,w,c
  3953   001E12  B4D8               	btfsc	status,2,c
  3954   001E14  EF0E  F00F         	goto	u2391
  3955   001E18  EF10  F00F         	goto	u2390
  3956   001E1C                     u2391:
  3957   001E1C  EF11  F00F         	goto	l3308
  3958   001E20                     u2390:
  3959   001E20  0617               	decf	___fladd@bexp^0,f,c
  3960   001E22                     l3308:
  3961   001E22  AE0B               	btfss	(___fladd@b+2)^0,7,c
  3962   001E24  EF16  F00F         	goto	u2401
  3963   001E28  EF18  F00F         	goto	u2400
  3964   001E2C                     u2401:
  3965   001E2C  EFEE  F00E         	goto	l3292
  3966   001E30                     u2400:
  3967   001E30                     l3310:
  3968   001E30  0E00               	movlw	0
  3969   001E32  6E16               	movwf	___fladd@aexp^0,c
  3970   001E34  AE18               	btfss	___fladd@grs^0,7,c
  3971   001E36  EF1F  F00F         	goto	u2411
  3972   001E3A  EF21  F00F         	goto	u2410
  3973   001E3E                     u2411:
  3974   001E3E  EF39  F00F         	goto	l1264
  3975   001E42                     u2410:
  3976   001E42  C018  F011         	movff	___fladd@grs,??___fladd
  3977   001E46  0E7F               	movlw	127
  3978   001E48  1611               	andwf	??___fladd^0,f,c
  3979   001E4A  B4D8               	btfsc	status,2,c
  3980   001E4C  EF2A  F00F         	goto	u2421
  3981   001E50  EF2C  F00F         	goto	u2420
  3982   001E54                     u2421:
  3983   001E54  EF30  F00F         	goto	l1265
  3984   001E58                     u2420:
  3985   001E58                     l3316:
  3986   001E58  0E01               	movlw	1
  3987   001E5A  6E16               	movwf	___fladd@aexp^0,c
  3988   001E5C  EF39  F00F         	goto	l1264
  3989   001E60                     l1265:
  3990   001E60  A009               	btfss	___fladd@b^0,0,c
  3991   001E62  EF35  F00F         	goto	u2431
  3992   001E66  EF37  F00F         	goto	u2430
  3993   001E6A                     u2431:
  3994   001E6A  EF39  F00F         	goto	l1264
  3995   001E6E                     u2430:
  3996   001E6E  EF2C  F00F         	goto	l3316
  3997   001E72                     l1264:
  3998   001E72  5016               	movf	___fladd@aexp^0,w,c
  3999   001E74  B4D8               	btfsc	status,2,c
  4000   001E76  EF3F  F00F         	goto	u2441
  4001   001E7A  EF41  F00F         	goto	u2440
  4002   001E7E                     u2441:
  4003   001E7E  EF6C  F00F         	goto	l3328
  4004   001E82                     u2440:
  4005   001E82  0E01               	movlw	1
  4006   001E84  2609               	addwf	___fladd@b^0,f,c
  4007   001E86  0E00               	movlw	0
  4008   001E88  220A               	addwfc	(___fladd@b+1)^0,f,c
  4009   001E8A  220B               	addwfc	(___fladd@b+2)^0,f,c
  4010   001E8C  220C               	addwfc	(___fladd@b+3)^0,f,c
  4011   001E8E  A00C               	btfss	(___fladd@b+3)^0,0,c
  4012   001E90  EF4C  F00F         	goto	u2451
  4013   001E94  EF4E  F00F         	goto	u2450
  4014   001E98                     u2451:
  4015   001E98  EF6C  F00F         	goto	l3328
  4016   001E9C                     u2450:
  4017   001E9C  C009  F011         	movff	___fladd@b,??___fladd
  4018   001EA0  C00A  F012         	movff	___fladd@b+1,??___fladd+1
  4019   001EA4  C00B  F013         	movff	___fladd@b+2,??___fladd+2
  4020   001EA8  C00C  F014         	movff	___fladd@b+3,??___fladd+3
  4021   001EAC  3414               	rlcf	(??___fladd+3)^0,w,c
  4022   001EAE  3214               	rrcf	(??___fladd+3)^0,f,c
  4023   001EB0  3213               	rrcf	(??___fladd+2)^0,f,c
  4024   001EB2  3212               	rrcf	(??___fladd+1)^0,f,c
  4025   001EB4  3211               	rrcf	??___fladd^0,f,c
  4026   001EB6  C011  F009         	movff	??___fladd,___fladd@b
  4027   001EBA  C012  F00A         	movff	??___fladd+1,___fladd@b+1
  4028   001EBE  C013  F00B         	movff	??___fladd+2,___fladd@b+2
  4029   001EC2  C014  F00C         	movff	??___fladd+3,___fladd@b+3
  4030   001EC6  2817               	incf	___fladd@bexp^0,w,c
  4031   001EC8  B4D8               	btfsc	status,2,c
  4032   001ECA  EF69  F00F         	goto	u2461
  4033   001ECE  EF6B  F00F         	goto	u2460
  4034   001ED2                     u2461:
  4035   001ED2  EF6C  F00F         	goto	l3328
  4036   001ED6                     u2460:
  4037   001ED6  2A17               	incf	___fladd@bexp^0,f,c
  4038   001ED8                     l3328:
  4039   001ED8  2817               	incf	___fladd@bexp^0,w,c
  4040   001EDA  B4D8               	btfsc	status,2,c
  4041   001EDC  EF72  F00F         	goto	u2471
  4042   001EE0  EF74  F00F         	goto	u2470
  4043   001EE4                     u2471:
  4044   001EE4  EF7C  F00F         	goto	l3332
  4045   001EE8                     u2470:
  4046   001EE8  5017               	movf	___fladd@bexp^0,w,c
  4047   001EEA  A4D8               	btfss	status,2,c
  4048   001EEC  EF7A  F00F         	goto	u2481
  4049   001EF0  EF7C  F00F         	goto	u2480
  4050   001EF4                     u2481:
  4051   001EF4  EF8E  F00F         	goto	l3336
  4052   001EF8                     u2480:
  4053   001EF8                     l3332:
  4054   001EF8  0E00               	movlw	0
  4055   001EFA  6E09               	movwf	___fladd@b^0,c
  4056   001EFC  0E00               	movlw	0
  4057   001EFE  6E0A               	movwf	(___fladd@b+1)^0,c
  4058   001F00  0E00               	movlw	0
  4059   001F02  6E0B               	movwf	(___fladd@b+2)^0,c
  4060   001F04  0E00               	movlw	0
  4061   001F06  6E0C               	movwf	(___fladd@b+3)^0,c
  4062   001F08  5017               	movf	___fladd@bexp^0,w,c
  4063   001F0A  A4D8               	btfss	status,2,c
  4064   001F0C  EF8A  F00F         	goto	u2491
  4065   001F10  EF8C  F00F         	goto	u2490
  4066   001F14                     u2491:
  4067   001F14  EF8E  F00F         	goto	l3336
  4068   001F18                     u2490:
  4069   001F18  0E00               	movlw	0
  4070   001F1A  6E15               	movwf	___fladd@signs^0,c
  4071   001F1C                     l3336:
  4072   001F1C  A017               	btfss	___fladd@bexp^0,0,c
  4073   001F1E  EF93  F00F         	goto	u2501
  4074   001F22  EF95  F00F         	goto	u2500
  4075   001F26                     u2501:
  4076   001F26  EF98  F00F         	goto	l3340
  4077   001F2A                     u2500:
  4078   001F2A  8E0B               	bsf	(___fladd@b+2)^0,7,c
  4079   001F2C  EF99  F00F         	goto	l3342
  4080   001F30                     l3340:
  4081   001F30  9E0B               	bcf	(___fladd@b+2)^0,7,c
  4082   001F32                     l3342:
  4083   001F32  90D8               	bcf	status,0,c
  4084   001F34  3017               	rrcf	___fladd@bexp^0,w,c
  4085   001F36  6E0C               	movwf	(___fladd@b+3)^0,c
  4086   001F38  AE15               	btfss	___fladd@signs^0,7,c
  4087   001F3A  EFA1  F00F         	goto	u2511
  4088   001F3E  EFA3  F00F         	goto	u2510
  4089   001F42                     u2511:
  4090   001F42  EFA4  F00F         	goto	l3348
  4091   001F46                     u2510:
  4092   001F46  8E0C               	bsf	(___fladd@b+3)^0,7,c
  4093   001F48                     l3348:
  4094   001F48  C009  F009         	movff	___fladd@b,?___fladd
  4095   001F4C  C00A  F00A         	movff	___fladd@b+1,?___fladd+1
  4096   001F50  C00B  F00B         	movff	___fladd@b+2,?___fladd+2
  4097   001F54  C00C  F00C         	movff	___fladd@b+3,?___fladd+3
  4098   001F58                     l1247:
  4099   001F58  0012               	return		;funcret
  4100   001F5A                     __end_of___fladd:
  4101                           	callstack 0
  4102                           
  4103 ;; *************** function _persistence_register *****************
  4104 ;; Defined at:
  4105 ;;		line 43 in file "interrupts.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2, status,0, cstack
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used: 1
  4125 ;; Hardware stack levels required when called: 9
  4126 ;; This function calls:
  4127 ;;		_color_writetoaddr
  4128 ;; This function is called by:
  4129 ;;		_main
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           
  4133                           	psect	text18
  4134   003C3C                     __ptext18:
  4135                           	callstack 0
  4136   003C3C                     _persistence_register:
  4137                           	callstack 21
  4138   003C3C                     
  4139                           ;interrupts.c: 45:  color_writetoaddr(0x0C, 0b010);
  4140   003C3C  0E02               	movlw	2
  4141   003C3E  6E0B               	movwf	color_writetoaddr@value^0,c
  4142   003C40  0E0C               	movlw	12
  4143   003C42  ECD2  F01D         	call	_color_writetoaddr
  4144   003C46  0012               	return		;funcret
  4145   003C48                     __end_of_persistence_register:
  4146                           	callstack 0
  4147                           
  4148 ;; *************** function _motor_retrace *****************
  4149 ;; Defined at:
  4150 ;;		line 331 in file "color.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  buggy_path      2   38[COMRAM] PTR unsigned char 
  4153 ;;		 -> buggy_path(15), 
  4154 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4155 ;;		 -> main@mL(9), 
  4156 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4157 ;;		 -> main@mR(9), 
  4158 ;; Auto vars:     Size  Location     Type
  4159 ;;		None
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4171 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4172 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4173 ;;Total ram usage:        9 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 10
  4176 ;; This function calls:
  4177 ;;		_fullSpeedAhead
  4178 ;;		_norm_stop
  4179 ;;		_turnLeft
  4180 ;;		_turnPrep
  4181 ;;		_turnRight
  4182 ;; This function is called by:
  4183 ;;		_main
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text19
  4188   001F5A                     __ptext19:
  4189                           	callstack 0
  4190   001F5A                     _motor_retrace:
  4191                           	callstack 20
  4192   001F5A                     
  4193                           ;color.c: 332:     if (buggy_path[buggy_step - 2] == 1) {
  4194   001F5A  5051               	movf	_buggy_step^0,w,c
  4195   001F5C  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4196   001F5E  6E2D               	movwf	??_motor_retrace^0,c
  4197   001F60  5052               	movf	(_buggy_step+1)^0,w,c
  4198   001F62  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4199   001F64  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4200   001F66  0EFE               	movlw	254
  4201   001F68  242D               	addwf	??_motor_retrace^0,w,c
  4202   001F6A  6ED9               	movwf	fsr2l,c
  4203   001F6C  0EFF               	movlw	255
  4204   001F6E  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4205   001F70  6EDA               	movwf	fsr2h,c
  4206   001F72  04DE               	decf	postinc2,w,c
  4207   001F74  A4D8               	btfss	status,2,c
  4208   001F76  EFBF  F00F         	goto	u2981
  4209   001F7A  EFC1  F00F         	goto	u2980
  4210   001F7E                     u2981:
  4211   001F7E  EFE3  F00F         	goto	l3638
  4212   001F82                     u2980:
  4213   001F82                     
  4214                           ;color.c: 333:         turnPrep(mL, mR);
  4215   001F82  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4216   001F86  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4217   001F8A  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4218   001F8E  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4219   001F92  ECF9  F01B         	call	_turnPrep	;wreg free
  4220                           
  4221                           ;color.c: 334:         turnLeft(mL, mR);
  4222   001F96  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4223   001F9A  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4224   001F9E  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4225   001FA2  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4226   001FA6  EC56  F01B         	call	_turnLeft	;wreg free
  4227   001FAA                     
  4228                           ;color.c: 335:         _delay((unsigned long)((200)*(64000000/4000.0)));
  4229   001FAA  0E11               	movlw	17
  4230   001FAC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4231   001FAE  0E3C               	movlw	60
  4232   001FB0  6E2D               	movwf	??_motor_retrace^0,c
  4233   001FB2  0ECB               	movlw	203
  4234   001FB4                     u3407:
  4235   001FB4  2EE8               	decfsz	wreg,f,c
  4236   001FB6  D7FE               	bra	u3407
  4237   001FB8  2E2D               	decfsz	??_motor_retrace^0,f,c
  4238   001FBA  D7FC               	bra	u3407
  4239   001FBC  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4240   001FBE  D7FA               	bra	u3407
  4241   001FC0  F000               	nop	
  4242                           
  4243                           ;color.c: 337:     } else if (buggy_path[buggy_step - 2] == 2) {
  4244   001FC2  EF90  F011         	goto	l197
  4245   001FC6                     l3638:
  4246   001FC6  5051               	movf	_buggy_step^0,w,c
  4247   001FC8  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4248   001FCA  6E2D               	movwf	??_motor_retrace^0,c
  4249   001FCC  5052               	movf	(_buggy_step+1)^0,w,c
  4250   001FCE  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4251   001FD0  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4252   001FD2  0EFE               	movlw	254
  4253   001FD4  242D               	addwf	??_motor_retrace^0,w,c
  4254   001FD6  6ED9               	movwf	fsr2l,c
  4255   001FD8  0EFF               	movlw	255
  4256   001FDA  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4257   001FDC  6EDA               	movwf	fsr2h,c
  4258   001FDE  0E02               	movlw	2
  4259   001FE0  18DE               	xorwf	postinc2,w,c
  4260   001FE2  A4D8               	btfss	status,2,c
  4261   001FE4  EFF6  F00F         	goto	u2991
  4262   001FE8  EFF8  F00F         	goto	u2990
  4263   001FEC                     u2991:
  4264   001FEC  EF1A  F010         	goto	l3644
  4265   001FF0                     u2990:
  4266   001FF0                     
  4267                           ;color.c: 338:         turnPrep(mL, mR);
  4268   001FF0  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4269   001FF4  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4270   001FF8  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4271   001FFC  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4272   002000  ECF9  F01B         	call	_turnPrep	;wreg free
  4273                           
  4274                           ;color.c: 339:         turnRight(mL, mR);
  4275   002004  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4276   002008  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4277   00200C  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4278   002010  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4279   002014  EC1D  F01B         	call	_turnRight	;wreg free
  4280   002018                     
  4281                           ;color.c: 340:         _delay((unsigned long)((215)*(64000000/4000.0)));
  4282   002018  0E12               	movlw	18
  4283   00201A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4284   00201C  0E74               	movlw	116
  4285   00201E  6E2D               	movwf	??_motor_retrace^0,c
  4286   002020  0E7A               	movlw	122
  4287   002022                     u3417:
  4288   002022  2EE8               	decfsz	wreg,f,c
  4289   002024  D7FE               	bra	u3417
  4290   002026  2E2D               	decfsz	??_motor_retrace^0,f,c
  4291   002028  D7FC               	bra	u3417
  4292   00202A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4293   00202C  D7FA               	bra	u3417
  4294   00202E  D000               	nop2	
  4295                           
  4296                           ;color.c: 342:     } else if (buggy_path[buggy_step - 2] == 3) {
  4297   002030  EF90  F011         	goto	l197
  4298   002034                     l3644:
  4299   002034  5051               	movf	_buggy_step^0,w,c
  4300   002036  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4301   002038  6E2D               	movwf	??_motor_retrace^0,c
  4302   00203A  5052               	movf	(_buggy_step+1)^0,w,c
  4303   00203C  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4304   00203E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4305   002040  0EFE               	movlw	254
  4306   002042  242D               	addwf	??_motor_retrace^0,w,c
  4307   002044  6ED9               	movwf	fsr2l,c
  4308   002046  0EFF               	movlw	255
  4309   002048  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4310   00204A  6EDA               	movwf	fsr2h,c
  4311   00204C  0E03               	movlw	3
  4312   00204E  18DE               	xorwf	postinc2,w,c
  4313   002050  A4D8               	btfss	status,2,c
  4314   002052  EF2D  F010         	goto	u3001
  4315   002056  EF2F  F010         	goto	u3000
  4316   00205A                     u3001:
  4317   00205A  EF51  F010         	goto	l3650
  4318   00205E                     u3000:
  4319   00205E                     
  4320                           ;color.c: 343:         turnPrep(mL, mR);
  4321   00205E  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4322   002062  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4323   002066  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4324   00206A  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4325   00206E  ECF9  F01B         	call	_turnPrep	;wreg free
  4326                           
  4327                           ;color.c: 344:         turnLeft(mL, mR);
  4328   002072  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4329   002076  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4330   00207A  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4331   00207E  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4332   002082  EC56  F01B         	call	_turnLeft	;wreg free
  4333   002086                     
  4334                           ;color.c: 345:         _delay((unsigned long)((385)*(64000000/4000.0)));
  4335   002086  0E20               	movlw	32
  4336   002088  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4337   00208A  0E40               	movlw	64
  4338   00208C  6E2D               	movwf	??_motor_retrace^0,c
  4339   00208E  0EE9               	movlw	233
  4340   002090                     u3427:
  4341   002090  2EE8               	decfsz	wreg,f,c
  4342   002092  D7FE               	bra	u3427
  4343   002094  2E2D               	decfsz	??_motor_retrace^0,f,c
  4344   002096  D7FC               	bra	u3427
  4345   002098  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4346   00209A  D7FA               	bra	u3427
  4347   00209C  F000               	nop	
  4348                           
  4349                           ;color.c: 347:     } else if (buggy_path[buggy_step - 2] == 4) {
  4350   00209E  EF90  F011         	goto	l197
  4351   0020A2                     l3650:
  4352   0020A2  5051               	movf	_buggy_step^0,w,c
  4353   0020A4  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4354   0020A6  6E2D               	movwf	??_motor_retrace^0,c
  4355   0020A8  5052               	movf	(_buggy_step+1)^0,w,c
  4356   0020AA  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4357   0020AC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4358   0020AE  0EFE               	movlw	254
  4359   0020B0  242D               	addwf	??_motor_retrace^0,w,c
  4360   0020B2  6ED9               	movwf	fsr2l,c
  4361   0020B4  0EFF               	movlw	255
  4362   0020B6  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4363   0020B8  6EDA               	movwf	fsr2h,c
  4364   0020BA  0E04               	movlw	4
  4365   0020BC  18DE               	xorwf	postinc2,w,c
  4366   0020BE  A4D8               	btfss	status,2,c
  4367   0020C0  EF64  F010         	goto	u3011
  4368   0020C4  EF66  F010         	goto	u3010
  4369   0020C8                     u3011:
  4370   0020C8  EFB3  F010         	goto	l3662
  4371   0020CC                     u3010:
  4372   0020CC                     
  4373                           ;color.c: 348:         turnPrep(mL, mR);
  4374   0020CC  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4375   0020D0  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4376   0020D4  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4377   0020D8  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4378   0020DC  ECF9  F01B         	call	_turnPrep	;wreg free
  4379                           
  4380                           ;color.c: 349:         turnLeft(mL, mR);
  4381   0020E0  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4382   0020E4  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4383   0020E8  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4384   0020EC  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4385   0020F0  EC56  F01B         	call	_turnLeft	;wreg free
  4386   0020F4                     
  4387                           ;color.c: 350:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4388   0020F4  0E12               	movlw	18
  4389   0020F6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4390   0020F8  0E0C               	movlw	12
  4391   0020FA  6E2D               	movwf	??_motor_retrace^0,c
  4392   0020FC  0E95               	movlw	149
  4393   0020FE                     u3437:
  4394   0020FE  2EE8               	decfsz	wreg,f,c
  4395   002100  D7FE               	bra	u3437
  4396   002102  2E2D               	decfsz	??_motor_retrace^0,f,c
  4397   002104  D7FC               	bra	u3437
  4398   002106  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4399   002108  D7FA               	bra	u3437
  4400   00210A  F000               	nop	
  4401   00210C                     
  4402                           ;color.c: 351:         norm_stop(mL, mR);
  4403   00210C  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4404   002110  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4405   002114  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4406   002118  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4407   00211C  EC26  F01D         	call	_norm_stop	;wreg free
  4408                           
  4409                           ;color.c: 352:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4410   002120  0E09               	movlw	9
  4411   002122  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4412   002124  0E1E               	movlw	30
  4413   002126  6E2D               	movwf	??_motor_retrace^0,c
  4414   002128  0EE4               	movlw	228
  4415   00212A                     u3447:
  4416   00212A  2EE8               	decfsz	wreg,f,c
  4417   00212C  D7FE               	bra	u3447
  4418   00212E  2E2D               	decfsz	??_motor_retrace^0,f,c
  4419   002130  D7FC               	bra	u3447
  4420   002132  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4421   002134  D7FA               	bra	u3447
  4422   002136  D000               	nop2	
  4423   002138                     
  4424                           ;color.c: 353:         fullSpeedAhead(mL, mR);
  4425   002138  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4426   00213C  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4427   002140  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4428   002144  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4429   002148  ECCB  F019         	call	_fullSpeedAhead	;wreg free
  4430   00214C                     
  4431                           ;color.c: 354:         _delay((unsigned long)((1200)*(64000000/4000.0)));
  4432   00214C  0E62               	movlw	98
  4433   00214E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4434   002150  0E67               	movlw	103
  4435   002152  6E2D               	movwf	??_motor_retrace^0,c
  4436   002154  0ECE               	movlw	206
  4437   002156                     u3457:
  4438   002156  2EE8               	decfsz	wreg,f,c
  4439   002158  D7FE               	bra	u3457
  4440   00215A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4441   00215C  D7FC               	bra	u3457
  4442   00215E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4443   002160  D7FA               	bra	u3457
  4444                           
  4445                           ;color.c: 356:     } else if (buggy_path[buggy_step - 2] == 5) {
  4446   002162  EF90  F011         	goto	l197
  4447   002166                     l3662:
  4448   002166  5051               	movf	_buggy_step^0,w,c
  4449   002168  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4450   00216A  6E2D               	movwf	??_motor_retrace^0,c
  4451   00216C  5052               	movf	(_buggy_step+1)^0,w,c
  4452   00216E  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4453   002170  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4454   002172  0EFE               	movlw	254
  4455   002174  242D               	addwf	??_motor_retrace^0,w,c
  4456   002176  6ED9               	movwf	fsr2l,c
  4457   002178  0EFF               	movlw	255
  4458   00217A  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4459   00217C  6EDA               	movwf	fsr2h,c
  4460   00217E  0E05               	movlw	5
  4461   002180  18DE               	xorwf	postinc2,w,c
  4462   002182  A4D8               	btfss	status,2,c
  4463   002184  EFC6  F010         	goto	u3021
  4464   002188  EFC8  F010         	goto	u3020
  4465   00218C                     u3021:
  4466   00218C  EF22  F011         	goto	l3676
  4467   002190                     u3020:
  4468   002190                     
  4469                           ;color.c: 357:         norm_stop(mL, mR);
  4470   002190  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4471   002194  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4472   002198  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4473   00219C  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4474   0021A0  EC26  F01D         	call	_norm_stop	;wreg free
  4475   0021A4                     
  4476                           ;color.c: 358:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4477   0021A4  0E09               	movlw	9
  4478   0021A6  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4479   0021A8  0E1E               	movlw	30
  4480   0021AA  6E2D               	movwf	??_motor_retrace^0,c
  4481   0021AC  0EE4               	movlw	228
  4482   0021AE                     u3467:
  4483   0021AE  2EE8               	decfsz	wreg,f,c
  4484   0021B0  D7FE               	bra	u3467
  4485   0021B2  2E2D               	decfsz	??_motor_retrace^0,f,c
  4486   0021B4  D7FC               	bra	u3467
  4487   0021B6  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4488   0021B8  D7FA               	bra	u3467
  4489   0021BA  D000               	nop2	
  4490   0021BC                     
  4491                           ;color.c: 359:         turnRight(mL, mR);
  4492   0021BC  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4493   0021C0  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4494   0021C4  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4495   0021C8  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4496   0021CC  EC1D  F01B         	call	_turnRight	;wreg free
  4497                           
  4498                           ;color.c: 360:         _delay((unsigned long)((210)*(64000000/4000.0)));
  4499   0021D0  0E12               	movlw	18
  4500   0021D2  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4501   0021D4  0E0C               	movlw	12
  4502   0021D6  6E2D               	movwf	??_motor_retrace^0,c
  4503   0021D8  0E95               	movlw	149
  4504   0021DA                     u3477:
  4505   0021DA  2EE8               	decfsz	wreg,f,c
  4506   0021DC  D7FE               	bra	u3477
  4507   0021DE  2E2D               	decfsz	??_motor_retrace^0,f,c
  4508   0021E0  D7FC               	bra	u3477
  4509   0021E2  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4510   0021E4  D7FA               	bra	u3477
  4511   0021E6  F000               	nop	
  4512   0021E8                     
  4513                           ;color.c: 361:         norm_stop(mL, mR);
  4514   0021E8  C029  F01C         	movff	motor_retrace@mL,norm_stop@mL
  4515   0021EC  C02A  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  4516   0021F0  C02B  F01E         	movff	motor_retrace@mR,norm_stop@mR
  4517   0021F4  C02C  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  4518   0021F8  EC26  F01D         	call	_norm_stop	;wreg free
  4519   0021FC                     
  4520                           ;color.c: 362:         _delay((unsigned long)((100)*(64000000/4000.0)));
  4521   0021FC  0E09               	movlw	9
  4522   0021FE  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4523   002200  0E1E               	movlw	30
  4524   002202  6E2D               	movwf	??_motor_retrace^0,c
  4525   002204  0EE4               	movlw	228
  4526   002206                     u3487:
  4527   002206  2EE8               	decfsz	wreg,f,c
  4528   002208  D7FE               	bra	u3487
  4529   00220A  2E2D               	decfsz	??_motor_retrace^0,f,c
  4530   00220C  D7FC               	bra	u3487
  4531   00220E  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4532   002210  D7FA               	bra	u3487
  4533   002212  D000               	nop2	
  4534                           
  4535                           ;color.c: 363:         fullSpeedAhead(mL, mR);
  4536   002214  C029  F01C         	movff	motor_retrace@mL,fullSpeedAhead@mL
  4537   002218  C02A  F01D         	movff	motor_retrace@mL+1,fullSpeedAhead@mL+1
  4538   00221C  C02B  F01E         	movff	motor_retrace@mR,fullSpeedAhead@mR
  4539   002220  C02C  F01F         	movff	motor_retrace@mR+1,fullSpeedAhead@mR+1
  4540   002224  ECCB  F019         	call	_fullSpeedAhead	;wreg free
  4541   002228                     
  4542                           ;color.c: 364:         _delay((unsigned long)((2000)*(64000000/4000.0)));
  4543   002228  0EA3               	movlw	163
  4544   00222A  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4545   00222C  0E57               	movlw	87
  4546   00222E  6E2D               	movwf	??_motor_retrace^0,c
  4547   002230  0E02               	movlw	2
  4548   002232                     u3497:
  4549   002232  2EE8               	decfsz	wreg,f,c
  4550   002234  D7FE               	bra	u3497
  4551   002236  2E2D               	decfsz	??_motor_retrace^0,f,c
  4552   002238  D7FC               	bra	u3497
  4553   00223A  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4554   00223C  D7FA               	bra	u3497
  4555   00223E  D000               	nop2	
  4556                           
  4557                           ;color.c: 366:     } else if (buggy_path[buggy_step - 2] == 6) {
  4558   002240  EF90  F011         	goto	l197
  4559   002244                     l3676:
  4560   002244  5051               	movf	_buggy_step^0,w,c
  4561   002246  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4562   002248  6E2D               	movwf	??_motor_retrace^0,c
  4563   00224A  5052               	movf	(_buggy_step+1)^0,w,c
  4564   00224C  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4565   00224E  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4566   002250  0EFE               	movlw	254
  4567   002252  242D               	addwf	??_motor_retrace^0,w,c
  4568   002254  6ED9               	movwf	fsr2l,c
  4569   002256  0EFF               	movlw	255
  4570   002258  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4571   00225A  6EDA               	movwf	fsr2h,c
  4572   00225C  0E06               	movlw	6
  4573   00225E  18DE               	xorwf	postinc2,w,c
  4574   002260  A4D8               	btfss	status,2,c
  4575   002262  EF35  F011         	goto	u3031
  4576   002266  EF37  F011         	goto	u3030
  4577   00226A                     u3031:
  4578   00226A  EF59  F011         	goto	l3682
  4579   00226E                     u3030:
  4580   00226E                     
  4581                           ;color.c: 367:         turnPrep(mL, mR);
  4582   00226E  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4583   002272  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4584   002276  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4585   00227A  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4586   00227E  ECF9  F01B         	call	_turnPrep	;wreg free
  4587                           
  4588                           ;color.c: 368:         turnLeft(mL, mR);
  4589   002282  C029  F01C         	movff	motor_retrace@mL,turnLeft@mL
  4590   002286  C02A  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  4591   00228A  C02B  F01E         	movff	motor_retrace@mR,turnLeft@mR
  4592   00228E  C02C  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  4593   002292  EC56  F01B         	call	_turnLeft	;wreg free
  4594   002296                     
  4595                           ;color.c: 369:         _delay((unsigned long)((330)*(64000000/4000.0)));
  4596   002296  0E1B               	movlw	27
  4597   002298  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4598   00229A  0ECA               	movlw	202
  4599   00229C  6E2D               	movwf	??_motor_retrace^0,c
  4600   00229E  0E10               	movlw	16
  4601   0022A0                     u3507:
  4602   0022A0  2EE8               	decfsz	wreg,f,c
  4603   0022A2  D7FE               	bra	u3507
  4604   0022A4  2E2D               	decfsz	??_motor_retrace^0,f,c
  4605   0022A6  D7FC               	bra	u3507
  4606   0022A8  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4607   0022AA  D7FA               	bra	u3507
  4608   0022AC  D000               	nop2	
  4609                           
  4610                           ;color.c: 371:     } else if (buggy_path[buggy_step - 2] == 7) {
  4611   0022AE  EF90  F011         	goto	l197
  4612   0022B2                     l3682:
  4613   0022B2  5051               	movf	_buggy_step^0,w,c
  4614   0022B4  2427               	addwf	motor_retrace@buggy_path^0,w,c
  4615   0022B6  6E2D               	movwf	??_motor_retrace^0,c
  4616   0022B8  5052               	movf	(_buggy_step+1)^0,w,c
  4617   0022BA  2028               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  4618   0022BC  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4619   0022BE  0EFE               	movlw	254
  4620   0022C0  242D               	addwf	??_motor_retrace^0,w,c
  4621   0022C2  6ED9               	movwf	fsr2l,c
  4622   0022C4  0EFF               	movlw	255
  4623   0022C6  202E               	addwfc	(??_motor_retrace+1)^0,w,c
  4624   0022C8  6EDA               	movwf	fsr2h,c
  4625   0022CA  0E07               	movlw	7
  4626   0022CC  18DE               	xorwf	postinc2,w,c
  4627   0022CE  A4D8               	btfss	status,2,c
  4628   0022D0  EF6C  F011         	goto	u3041
  4629   0022D4  EF6E  F011         	goto	u3040
  4630   0022D8                     u3041:
  4631   0022D8  EF90  F011         	goto	l191
  4632   0022DC                     u3040:
  4633   0022DC                     
  4634                           ;color.c: 372:         turnPrep(mL, mR);
  4635   0022DC  C029  F021         	movff	motor_retrace@mL,turnPrep@mL
  4636   0022E0  C02A  F022         	movff	motor_retrace@mL+1,turnPrep@mL+1
  4637   0022E4  C02B  F023         	movff	motor_retrace@mR,turnPrep@mR
  4638   0022E8  C02C  F024         	movff	motor_retrace@mR+1,turnPrep@mR+1
  4639   0022EC  ECF9  F01B         	call	_turnPrep	;wreg free
  4640                           
  4641                           ;color.c: 373:         turnRight(mL, mR);
  4642   0022F0  C029  F01C         	movff	motor_retrace@mL,turnRight@mL
  4643   0022F4  C02A  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  4644   0022F8  C02B  F01E         	movff	motor_retrace@mR,turnRight@mR
  4645   0022FC  C02C  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  4646   002300  EC1D  F01B         	call	_turnRight	;wreg free
  4647   002304                     
  4648                           ;color.c: 374:         _delay((unsigned long)((325)*(64000000/4000.0)));
  4649   002304  0E1B               	movlw	27
  4650   002306  6E2E               	movwf	(??_motor_retrace+1)^0,c
  4651   002308  0E62               	movlw	98
  4652   00230A  6E2D               	movwf	??_motor_retrace^0,c
  4653   00230C  0E2B               	movlw	43
  4654   00230E                     u3517:
  4655   00230E  2EE8               	decfsz	wreg,f,c
  4656   002310  D7FE               	bra	u3517
  4657   002312  2E2D               	decfsz	??_motor_retrace^0,f,c
  4658   002314  D7FC               	bra	u3517
  4659   002316  2E2E               	decfsz	(??_motor_retrace+1)^0,f,c
  4660   002318  D7FA               	bra	u3517
  4661   00231A  F000               	nop	
  4662   00231C  EF90  F011         	goto	l197
  4663   002320                     l191:
  4664   002320                     l197:
  4665   002320  0012               	return		;funcret
  4666   002322                     __end_of_motor_retrace:
  4667                           	callstack 0
  4668                           
  4669 ;; *************** function _fullSpeedAhead *****************
  4670 ;; Defined at:
  4671 ;;		line 201 in file "dc_motor.c"
  4672 ;; Parameters:    Size  Location     Type
  4673 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  4674 ;;		 -> main@mL(9), 
  4675 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  4676 ;;		 -> main@mR(9), 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4688 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4691 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4692 ;;Total ram usage:        5 bytes
  4693 ;; Hardware stack levels used: 1
  4694 ;; Hardware stack levels required when called: 8
  4695 ;; This function calls:
  4696 ;;		_setMotorPWM
  4697 ;; This function is called by:
  4698 ;;		_motor_retrace
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text20
  4704   003396                     __ptext20:
  4705                           	callstack 0
  4706   003396                     _fullSpeedAhead:
  4707                           	callstack 21
  4708   003396                     
  4709                           ;dc_motor.c: 201: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 202: {;dc_
      +                          motor.c: 203:     mL->power =5;
  4710   003396  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4711   00339A  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4712   00339E  0E05               	movlw	5
  4713   0033A0  6EDF               	movwf	indf2,c
  4714                           
  4715                           ;dc_motor.c: 204:     mR->power = 5;
  4716   0033A2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4717   0033A6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4718   0033AA  0E05               	movlw	5
  4719   0033AC  6EDF               	movwf	indf2,c
  4720   0033AE                     
  4721                           ;dc_motor.c: 205:     mR->direction = 1;
  4722   0033AE  EE20 F001          	lfsr	2,1
  4723   0033B2  501E               	movf	fullSpeedAhead@mR^0,w,c
  4724   0033B4  26D9               	addwf	fsr2l,f,c
  4725   0033B6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4726   0033B8  22DA               	addwfc	fsr2h,f,c
  4727   0033BA  0E01               	movlw	1
  4728   0033BC  6EDF               	movwf	indf2,c
  4729   0033BE                     
  4730                           ;dc_motor.c: 206:     mL->direction = 1;
  4731   0033BE  EE20 F001          	lfsr	2,1
  4732   0033C2  501C               	movf	fullSpeedAhead@mL^0,w,c
  4733   0033C4  26D9               	addwf	fsr2l,f,c
  4734   0033C6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4735   0033C8  22DA               	addwfc	fsr2h,f,c
  4736   0033CA  0E01               	movlw	1
  4737   0033CC  6EDF               	movwf	indf2,c
  4738   0033CE                     
  4739                           ;dc_motor.c: 207:     mL->brakemode = 1;
  4740   0033CE  EE20 F002          	lfsr	2,2
  4741   0033D2  501C               	movf	fullSpeedAhead@mL^0,w,c
  4742   0033D4  26D9               	addwf	fsr2l,f,c
  4743   0033D6  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  4744   0033D8  22DA               	addwfc	fsr2h,f,c
  4745   0033DA  0E01               	movlw	1
  4746   0033DC  6EDF               	movwf	indf2,c
  4747   0033DE                     
  4748                           ;dc_motor.c: 208:     mR->brakemode = 1;
  4749   0033DE  EE20 F002          	lfsr	2,2
  4750   0033E2  501E               	movf	fullSpeedAhead@mR^0,w,c
  4751   0033E4  26D9               	addwf	fsr2l,f,c
  4752   0033E6  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  4753   0033E8  22DA               	addwfc	fsr2h,f,c
  4754   0033EA  0E01               	movlw	1
  4755   0033EC  6EDF               	movwf	indf2,c
  4756                           
  4757                           ;dc_motor.c: 209:     while (mL->power <= 50 && mR->power <=50)
  4758   0033EE  EF0F  F01A         	goto	l3140
  4759   0033F2                     l3134:
  4760                           
  4761                           ;dc_motor.c: 210:     {;dc_motor.c: 211:         mL->power++;
  4762   0033F2  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4763   0033F6  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4764   0033FA  2ADF               	incf	indf2,f,c
  4765                           
  4766                           ;dc_motor.c: 212:         mR->power++;
  4767   0033FC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4768   003400  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4769   003404  2ADF               	incf	indf2,f,c
  4770   003406                     
  4771                           ;dc_motor.c: 213:         setMotorPWM(mL);
  4772   003406  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4773   00340A  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4774   00340E  ECA2  F017         	call	_setMotorPWM	;wreg free
  4775   003412                     
  4776                           ;dc_motor.c: 214:         setMotorPWM(mR);
  4777   003412  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4778   003416  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4779   00341A  ECA2  F017         	call	_setMotorPWM	;wreg free
  4780   00341E                     l3140:
  4781                           
  4782                           ;dc_motor.c: 209:     while (mL->power <= 50 && mR->power <=50)
  4783   00341E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4784   003422  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4785   003426  0E33               	movlw	51
  4786   003428  60DF               	cpfslt	indf2,c
  4787   00342A  EF19  F01A         	goto	u2111
  4788   00342E  EF1B  F01A         	goto	u2110
  4789   003432                     u2111:
  4790   003432  EF27  F01A         	goto	l3144
  4791   003436                     u2110:
  4792   003436  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4793   00343A  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4794   00343E  0E32               	movlw	50
  4795   003440  64DF               	cpfsgt	indf2,c
  4796   003442  EF25  F01A         	goto	u2121
  4797   003446  EF27  F01A         	goto	u2120
  4798   00344A                     u2121:
  4799   00344A  EFF9  F019         	goto	l3134
  4800   00344E                     u2120:
  4801   00344E                     l3144:
  4802                           
  4803                           ;dc_motor.c: 216:     mL->power = 50;
  4804   00344E  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  4805   003452  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  4806   003456  0E32               	movlw	50
  4807   003458  6EDF               	movwf	indf2,c
  4808                           
  4809                           ;dc_motor.c: 217:     mR->power = 50;
  4810   00345A  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  4811   00345E  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  4812   003462  0E32               	movlw	50
  4813   003464  6EDF               	movwf	indf2,c
  4814   003466                     
  4815                           ;dc_motor.c: 218:     setMotorPWM(mL);
  4816   003466  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  4817   00346A  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  4818   00346E  ECA2  F017         	call	_setMotorPWM	;wreg free
  4819   003472                     
  4820                           ;dc_motor.c: 219:     setMotorPWM(mR);
  4821   003472  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  4822   003476  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  4823   00347A  ECA2  F017         	call	_setMotorPWM	;wreg free
  4824   00347E  0012               	return		;funcret
  4825   003480                     __end_of_fullSpeedAhead:
  4826                           	callstack 0
  4827                           
  4828 ;; *************** function _motor_response *****************
  4829 ;; Defined at:
  4830 ;;		line 222 in file "color.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;  temp            2   38[COMRAM] PTR struct RGBC_val
  4833 ;;		 -> main@RGBC(32), 
  4834 ;;  mL              2   40[COMRAM] PTR struct DC_motor
  4835 ;;		 -> main@mL(9), 
  4836 ;;  mR              2   42[COMRAM] PTR struct DC_motor
  4837 ;;		 -> main@mR(9), 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  j               2   46[COMRAM] int 
  4840 ;; Return value:  Size  Location     Type
  4841 ;;                  1    wreg      unsigned char 
  4842 ;; Registers used:
  4843 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4849 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4851 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;Total ram usage:       10 bytes
  4854 ;; Hardware stack levels used: 1
  4855 ;; Hardware stack levels required when called: 10
  4856 ;; This function calls:
  4857 ;;		___flge
  4858 ;;		_norm_stop
  4859 ;;		_reverse
  4860 ;;		_turnLeft
  4861 ;;		_turnPrep
  4862 ;;		_turnRight
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text21
  4869   000E18                     __ptext21:
  4870                           	callstack 0
  4871   000E18                     _motor_response:
  4872                           	callstack 20
  4873   000E18                     
  4874                           ;color.c: 224:     if (temp->norm_C < CR2U && temp->norm_C > CR2L) {
  4875   000E18  EE20 F01C          	lfsr	2,28
  4876   000E1C  5027               	movf	motor_response@temp^0,w,c
  4877   000E1E  26D9               	addwf	fsr2l,f,c
  4878   000E20  5028               	movf	(motor_response@temp+1)^0,w,c
  4879   000E22  22DA               	addwfc	fsr2h,f,c
  4880   000E24  CFDE F009          	movff	postinc2,___flge@ff1
  4881   000E28  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4882   000E2C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4883   000E30  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4884   000E34  C043  F00D         	movff	_CR2U,___flge@ff2
  4885   000E38  C044  F00E         	movff	_CR2U+1,___flge@ff2+1
  4886   000E3C  C045  F00F         	movff	_CR2U+2,___flge@ff2+2
  4887   000E40  C046  F010         	movff	_CR2U+3,___flge@ff2+3
  4888   000E44  EC58  F018         	call	___flge	;wreg free
  4889   000E48  B0D8               	btfsc	status,0,c
  4890   000E4A  EF29  F007         	goto	u2601
  4891   000E4E  EF2B  F007         	goto	u2600
  4892   000E52                     u2601:
  4893   000E52  EF1F  F00A         	goto	l3508
  4894   000E56                     u2600:
  4895   000E56  C03F  F009         	movff	_CR2L,___flge@ff1
  4896   000E5A  C040  F00A         	movff	_CR2L+1,___flge@ff1+1
  4897   000E5E  C041  F00B         	movff	_CR2L+2,___flge@ff1+2
  4898   000E62  C042  F00C         	movff	_CR2L+3,___flge@ff1+3
  4899   000E66  EE20 F01C          	lfsr	2,28
  4900   000E6A  5027               	movf	motor_response@temp^0,w,c
  4901   000E6C  26D9               	addwf	fsr2l,f,c
  4902   000E6E  5028               	movf	(motor_response@temp+1)^0,w,c
  4903   000E70  22DA               	addwfc	fsr2h,f,c
  4904   000E72  CFDE F00D          	movff	postinc2,___flge@ff2
  4905   000E76  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4906   000E7A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4907   000E7E  CFDE F010          	movff	postinc2,___flge@ff2+3
  4908   000E82  EC58  F018         	call	___flge	;wreg free
  4909   000E86  B0D8               	btfsc	status,0,c
  4910   000E88  EF48  F007         	goto	u2611
  4911   000E8C  EF4A  F007         	goto	u2610
  4912   000E90                     u2611:
  4913   000E90  EF1F  F00A         	goto	l3508
  4914   000E94                     u2610:
  4915   000E94                     
  4916                           ;color.c: 226:         if (temp->norm_B < 5 && temp->norm_R > 1.7 && temp->norm_R < 2.2 
      +                          && temp->norm_G > 3 && temp->norm_G < 3.5) {
  4917   000E94  EE20 F018          	lfsr	2,24
  4918   000E98  5027               	movf	motor_response@temp^0,w,c
  4919   000E9A  26D9               	addwf	fsr2l,f,c
  4920   000E9C  5028               	movf	(motor_response@temp+1)^0,w,c
  4921   000E9E  22DA               	addwfc	fsr2h,f,c
  4922   000EA0  CFDE F009          	movff	postinc2,___flge@ff1
  4923   000EA4  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4924   000EA8  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4925   000EAC  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4926   000EB0  0E00               	movlw	0
  4927   000EB2  6E0D               	movwf	___flge@ff2^0,c
  4928   000EB4  0E00               	movlw	0
  4929   000EB6  6E0E               	movwf	(___flge@ff2+1)^0,c
  4930   000EB8  0EA0               	movlw	160
  4931   000EBA  6E0F               	movwf	(___flge@ff2+2)^0,c
  4932   000EBC  0E40               	movlw	64
  4933   000EBE  6E10               	movwf	(___flge@ff2+3)^0,c
  4934   000EC0  EC58  F018         	call	___flge	;wreg free
  4935   000EC4  B0D8               	btfsc	status,0,c
  4936   000EC6  EF67  F007         	goto	u2621
  4937   000ECA  EF69  F007         	goto	u2620
  4938   000ECE                     u2621:
  4939   000ECE  EF2A  F008         	goto	l3460
  4940   000ED2                     u2620:
  4941   000ED2  0E9A               	movlw	154
  4942   000ED4  6E09               	movwf	___flge@ff1^0,c
  4943   000ED6  0E99               	movlw	153
  4944   000ED8  6E0A               	movwf	(___flge@ff1+1)^0,c
  4945   000EDA  0ED9               	movlw	217
  4946   000EDC  6E0B               	movwf	(___flge@ff1+2)^0,c
  4947   000EDE  0E3F               	movlw	63
  4948   000EE0  6E0C               	movwf	(___flge@ff1+3)^0,c
  4949   000EE2  EE20 F010          	lfsr	2,16
  4950   000EE6  5027               	movf	motor_response@temp^0,w,c
  4951   000EE8  26D9               	addwf	fsr2l,f,c
  4952   000EEA  5028               	movf	(motor_response@temp+1)^0,w,c
  4953   000EEC  22DA               	addwfc	fsr2h,f,c
  4954   000EEE  CFDE F00D          	movff	postinc2,___flge@ff2
  4955   000EF2  CFDE F00E          	movff	postinc2,___flge@ff2+1
  4956   000EF6  CFDE F00F          	movff	postinc2,___flge@ff2+2
  4957   000EFA  CFDE F010          	movff	postinc2,___flge@ff2+3
  4958   000EFE  EC58  F018         	call	___flge	;wreg free
  4959   000F02  B0D8               	btfsc	status,0,c
  4960   000F04  EF86  F007         	goto	u2631
  4961   000F08  EF88  F007         	goto	u2630
  4962   000F0C                     u2631:
  4963   000F0C  EF2A  F008         	goto	l3460
  4964   000F10                     u2630:
  4965   000F10  EE20 F010          	lfsr	2,16
  4966   000F14  5027               	movf	motor_response@temp^0,w,c
  4967   000F16  26D9               	addwf	fsr2l,f,c
  4968   000F18  5028               	movf	(motor_response@temp+1)^0,w,c
  4969   000F1A  22DA               	addwfc	fsr2h,f,c
  4970   000F1C  CFDE F009          	movff	postinc2,___flge@ff1
  4971   000F20  CFDE F00A          	movff	postinc2,___flge@ff1+1
  4972   000F24  CFDE F00B          	movff	postinc2,___flge@ff1+2
  4973   000F28  CFDE F00C          	movff	postinc2,___flge@ff1+3
  4974   000F2C  0ECD               	movlw	205
  4975   000F2E  6E0D               	movwf	___flge@ff2^0,c
  4976   000F30  0ECC               	movlw	204
  4977   000F32  6E0E               	movwf	(___flge@ff2+1)^0,c
  4978   000F34  0E0C               	movlw	12
  4979   000F36  6E0F               	movwf	(___flge@ff2+2)^0,c
  4980   000F38  0E40               	movlw	64
  4981   000F3A  6E10               	movwf	(___flge@ff2+3)^0,c
  4982   000F3C  EC58  F018         	call	___flge	;wreg free
  4983   000F40  B0D8               	btfsc	status,0,c
  4984   000F42  EFA5  F007         	goto	u2641
  4985   000F46  EFA7  F007         	goto	u2640
  4986   000F4A                     u2641:
  4987   000F4A  EF2A  F008         	goto	l3460
  4988   000F4E                     u2640:
  4989   000F4E  0E00               	movlw	0
  4990   000F50  6E09               	movwf	___flge@ff1^0,c
  4991   000F52  0E00               	movlw	0
  4992   000F54  6E0A               	movwf	(___flge@ff1+1)^0,c
  4993   000F56  0E40               	movlw	64
  4994   000F58  6E0B               	movwf	(___flge@ff1+2)^0,c
  4995   000F5A  0E40               	movlw	64
  4996   000F5C  6E0C               	movwf	(___flge@ff1+3)^0,c
  4997   000F5E  EE20 F014          	lfsr	2,20
  4998   000F62  5027               	movf	motor_response@temp^0,w,c
  4999   000F64  26D9               	addwf	fsr2l,f,c
  5000   000F66  5028               	movf	(motor_response@temp+1)^0,w,c
  5001   000F68  22DA               	addwfc	fsr2h,f,c
  5002   000F6A  CFDE F00D          	movff	postinc2,___flge@ff2
  5003   000F6E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5004   000F72  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5005   000F76  CFDE F010          	movff	postinc2,___flge@ff2+3
  5006   000F7A  EC58  F018         	call	___flge	;wreg free
  5007   000F7E  B0D8               	btfsc	status,0,c
  5008   000F80  EFC4  F007         	goto	u2651
  5009   000F84  EFC6  F007         	goto	u2650
  5010   000F88                     u2651:
  5011   000F88  EF2A  F008         	goto	l3460
  5012   000F8C                     u2650:
  5013   000F8C  EE20 F014          	lfsr	2,20
  5014   000F90  5027               	movf	motor_response@temp^0,w,c
  5015   000F92  26D9               	addwf	fsr2l,f,c
  5016   000F94  5028               	movf	(motor_response@temp+1)^0,w,c
  5017   000F96  22DA               	addwfc	fsr2h,f,c
  5018   000F98  CFDE F009          	movff	postinc2,___flge@ff1
  5019   000F9C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5020   000FA0  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5021   000FA4  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5022   000FA8  0E00               	movlw	0
  5023   000FAA  6E0D               	movwf	___flge@ff2^0,c
  5024   000FAC  0E00               	movlw	0
  5025   000FAE  6E0E               	movwf	(___flge@ff2+1)^0,c
  5026   000FB0  0E60               	movlw	96
  5027   000FB2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5028   000FB4  0E40               	movlw	64
  5029   000FB6  6E10               	movwf	(___flge@ff2+3)^0,c
  5030   000FB8  EC58  F018         	call	___flge	;wreg free
  5031   000FBC  B0D8               	btfsc	status,0,c
  5032   000FBE  EFE3  F007         	goto	u2661
  5033   000FC2  EFE5  F007         	goto	u2660
  5034   000FC6                     u2661:
  5035   000FC6  EF2A  F008         	goto	l3460
  5036   000FCA                     u2660:
  5037   000FCA                     
  5038                           ;color.c: 227:             reverse(mL, mR);
  5039   000FCA  C029  F01C         	movff	motor_response@mL,reverse@mL
  5040   000FCE  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5041   000FD2  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5042   000FD6  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5043   000FDA  ECDA  F018         	call	_reverse	;wreg free
  5044   000FDE                     
  5045                           ;color.c: 228:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5046   000FDE  0EF4               	movlw	244
  5047   000FE0  6E2E               	movwf	(??_motor_response+1)^0,c
  5048   000FE2  0E82               	movlw	130
  5049   000FE4  6E2D               	movwf	??_motor_response^0,c
  5050   000FE6  0E05               	movlw	5
  5051   000FE8                     u3527:
  5052   000FE8  2EE8               	decfsz	wreg,f,c
  5053   000FEA  D7FE               	bra	u3527
  5054   000FEC  2E2D               	decfsz	??_motor_response^0,f,c
  5055   000FEE  D7FC               	bra	u3527
  5056   000FF0  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5057   000FF2  D7FA               	bra	u3527
  5058   000FF4  F000               	nop	
  5059   000FF6                     
  5060                           ;color.c: 229:             norm_stop(mL, mR);
  5061   000FF6  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5062   000FFA  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5063   000FFE  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5064   001002  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5065   001006  EC26  F01D         	call	_norm_stop	;wreg free
  5066                           
  5067                           ;color.c: 230:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5068   00100A  0E09               	movlw	9
  5069   00100C  6E2E               	movwf	(??_motor_response+1)^0,c
  5070   00100E  0E1E               	movlw	30
  5071   001010  6E2D               	movwf	??_motor_response^0,c
  5072   001012  0EE4               	movlw	228
  5073   001014                     u3537:
  5074   001014  2EE8               	decfsz	wreg,f,c
  5075   001016  D7FE               	bra	u3537
  5076   001018  2E2D               	decfsz	??_motor_response^0,f,c
  5077   00101A  D7FC               	bra	u3537
  5078   00101C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5079   00101E  D7FA               	bra	u3537
  5080   001020  D000               	nop2	
  5081   001022                     
  5082                           ;color.c: 231:             turnLeft(mL, mR);
  5083   001022  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5084   001026  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5085   00102A  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5086   00102E  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5087   001032  EC56  F01B         	call	_turnLeft	;wreg free
  5088   001036                     
  5089                           ;color.c: 232:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5090   001036  0E12               	movlw	18
  5091   001038  6E2E               	movwf	(??_motor_response+1)^0,c
  5092   00103A  0E0C               	movlw	12
  5093   00103C  6E2D               	movwf	??_motor_response^0,c
  5094   00103E  0E95               	movlw	149
  5095   001040                     u3547:
  5096   001040  2EE8               	decfsz	wreg,f,c
  5097   001042  D7FE               	bra	u3547
  5098   001044  2E2D               	decfsz	??_motor_response^0,f,c
  5099   001046  D7FC               	bra	u3547
  5100   001048  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5101   00104A  D7FA               	bra	u3547
  5102   00104C  F000               	nop	
  5103   00104E                     
  5104                           ;color.c: 233:             return 5;
  5105   00104E  0E05               	movlw	5
  5106   001050  EF4C  F00D         	goto	l167
  5107   001054                     l3460:
  5108                           
  5109                           ;color.c: 236:         if (temp->norm_B > 5.5 && temp->norm_B < 6 && temp->norm_R > 1.4 
      +                          && temp->norm_R < 1.7 && temp->norm_G > 4.1 && temp->norm_G < 4.5) {
  5110   001054  0E00               	movlw	0
  5111   001056  6E09               	movwf	___flge@ff1^0,c
  5112   001058  0E00               	movlw	0
  5113   00105A  6E0A               	movwf	(___flge@ff1+1)^0,c
  5114   00105C  0EB0               	movlw	176
  5115   00105E  6E0B               	movwf	(___flge@ff1+2)^0,c
  5116   001060  0E40               	movlw	64
  5117   001062  6E0C               	movwf	(___flge@ff1+3)^0,c
  5118   001064  EE20 F018          	lfsr	2,24
  5119   001068  5027               	movf	motor_response@temp^0,w,c
  5120   00106A  26D9               	addwf	fsr2l,f,c
  5121   00106C  5028               	movf	(motor_response@temp+1)^0,w,c
  5122   00106E  22DA               	addwfc	fsr2h,f,c
  5123   001070  CFDE F00D          	movff	postinc2,___flge@ff2
  5124   001074  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5125   001078  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5126   00107C  CFDE F010          	movff	postinc2,___flge@ff2+3
  5127   001080  EC58  F018         	call	___flge	;wreg free
  5128   001084  B0D8               	btfsc	status,0,c
  5129   001086  EF47  F008         	goto	u2671
  5130   00108A  EF49  F008         	goto	u2670
  5131   00108E                     u2671:
  5132   00108E  EF1D  F009         	goto	l3480
  5133   001092                     u2670:
  5134   001092  EE20 F018          	lfsr	2,24
  5135   001096  5027               	movf	motor_response@temp^0,w,c
  5136   001098  26D9               	addwf	fsr2l,f,c
  5137   00109A  5028               	movf	(motor_response@temp+1)^0,w,c
  5138   00109C  22DA               	addwfc	fsr2h,f,c
  5139   00109E  CFDE F009          	movff	postinc2,___flge@ff1
  5140   0010A2  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5141   0010A6  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5142   0010AA  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5143   0010AE  0E00               	movlw	0
  5144   0010B0  6E0D               	movwf	___flge@ff2^0,c
  5145   0010B2  0E00               	movlw	0
  5146   0010B4  6E0E               	movwf	(___flge@ff2+1)^0,c
  5147   0010B6  0EC0               	movlw	192
  5148   0010B8  6E0F               	movwf	(___flge@ff2+2)^0,c
  5149   0010BA  0E40               	movlw	64
  5150   0010BC  6E10               	movwf	(___flge@ff2+3)^0,c
  5151   0010BE  EC58  F018         	call	___flge	;wreg free
  5152   0010C2  B0D8               	btfsc	status,0,c
  5153   0010C4  EF66  F008         	goto	u2681
  5154   0010C8  EF68  F008         	goto	u2680
  5155   0010CC                     u2681:
  5156   0010CC  EF1D  F009         	goto	l3480
  5157   0010D0                     u2680:
  5158   0010D0  0E33               	movlw	51
  5159   0010D2  6E09               	movwf	___flge@ff1^0,c
  5160   0010D4  0E33               	movlw	51
  5161   0010D6  6E0A               	movwf	(___flge@ff1+1)^0,c
  5162   0010D8  0EB3               	movlw	179
  5163   0010DA  6E0B               	movwf	(___flge@ff1+2)^0,c
  5164   0010DC  0E3F               	movlw	63
  5165   0010DE  6E0C               	movwf	(___flge@ff1+3)^0,c
  5166   0010E0  EE20 F010          	lfsr	2,16
  5167   0010E4  5027               	movf	motor_response@temp^0,w,c
  5168   0010E6  26D9               	addwf	fsr2l,f,c
  5169   0010E8  5028               	movf	(motor_response@temp+1)^0,w,c
  5170   0010EA  22DA               	addwfc	fsr2h,f,c
  5171   0010EC  CFDE F00D          	movff	postinc2,___flge@ff2
  5172   0010F0  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5173   0010F4  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5174   0010F8  CFDE F010          	movff	postinc2,___flge@ff2+3
  5175   0010FC  EC58  F018         	call	___flge	;wreg free
  5176   001100  B0D8               	btfsc	status,0,c
  5177   001102  EF85  F008         	goto	u2691
  5178   001106  EF87  F008         	goto	u2690
  5179   00110A                     u2691:
  5180   00110A  EF1D  F009         	goto	l3480
  5181   00110E                     u2690:
  5182   00110E  EE20 F010          	lfsr	2,16
  5183   001112  5027               	movf	motor_response@temp^0,w,c
  5184   001114  26D9               	addwf	fsr2l,f,c
  5185   001116  5028               	movf	(motor_response@temp+1)^0,w,c
  5186   001118  22DA               	addwfc	fsr2h,f,c
  5187   00111A  CFDE F009          	movff	postinc2,___flge@ff1
  5188   00111E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5189   001122  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5190   001126  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5191   00112A  0E9A               	movlw	154
  5192   00112C  6E0D               	movwf	___flge@ff2^0,c
  5193   00112E  0E99               	movlw	153
  5194   001130  6E0E               	movwf	(___flge@ff2+1)^0,c
  5195   001132  0ED9               	movlw	217
  5196   001134  6E0F               	movwf	(___flge@ff2+2)^0,c
  5197   001136  0E3F               	movlw	63
  5198   001138  6E10               	movwf	(___flge@ff2+3)^0,c
  5199   00113A  EC58  F018         	call	___flge	;wreg free
  5200   00113E  B0D8               	btfsc	status,0,c
  5201   001140  EFA4  F008         	goto	u2701
  5202   001144  EFA6  F008         	goto	u2700
  5203   001148                     u2701:
  5204   001148  EF1D  F009         	goto	l3480
  5205   00114C                     u2700:
  5206   00114C  0E33               	movlw	51
  5207   00114E  6E09               	movwf	___flge@ff1^0,c
  5208   001150  0E33               	movlw	51
  5209   001152  6E0A               	movwf	(___flge@ff1+1)^0,c
  5210   001154  0E83               	movlw	131
  5211   001156  6E0B               	movwf	(___flge@ff1+2)^0,c
  5212   001158  0E40               	movlw	64
  5213   00115A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5214   00115C  EE20 F014          	lfsr	2,20
  5215   001160  5027               	movf	motor_response@temp^0,w,c
  5216   001162  26D9               	addwf	fsr2l,f,c
  5217   001164  5028               	movf	(motor_response@temp+1)^0,w,c
  5218   001166  22DA               	addwfc	fsr2h,f,c
  5219   001168  CFDE F00D          	movff	postinc2,___flge@ff2
  5220   00116C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5221   001170  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5222   001174  CFDE F010          	movff	postinc2,___flge@ff2+3
  5223   001178  EC58  F018         	call	___flge	;wreg free
  5224   00117C  B0D8               	btfsc	status,0,c
  5225   00117E  EFC3  F008         	goto	u2711
  5226   001182  EFC5  F008         	goto	u2710
  5227   001186                     u2711:
  5228   001186  EF1D  F009         	goto	l3480
  5229   00118A                     u2710:
  5230   00118A  EE20 F014          	lfsr	2,20
  5231   00118E  5027               	movf	motor_response@temp^0,w,c
  5232   001190  26D9               	addwf	fsr2l,f,c
  5233   001192  5028               	movf	(motor_response@temp+1)^0,w,c
  5234   001194  22DA               	addwfc	fsr2h,f,c
  5235   001196  CFDE F009          	movff	postinc2,___flge@ff1
  5236   00119A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5237   00119E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5238   0011A2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5239   0011A6  0E00               	movlw	0
  5240   0011A8  6E0D               	movwf	___flge@ff2^0,c
  5241   0011AA  0E00               	movlw	0
  5242   0011AC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5243   0011AE  0E90               	movlw	144
  5244   0011B0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5245   0011B2  0E40               	movlw	64
  5246   0011B4  6E10               	movwf	(___flge@ff2+3)^0,c
  5247   0011B6  EC58  F018         	call	___flge	;wreg free
  5248   0011BA  B0D8               	btfsc	status,0,c
  5249   0011BC  EFE2  F008         	goto	u2721
  5250   0011C0  EFE4  F008         	goto	u2720
  5251   0011C4                     u2721:
  5252   0011C4  EF1D  F009         	goto	l3480
  5253   0011C8                     u2720:
  5254   0011C8                     
  5255                           ;color.c: 237:             turnPrep(mL, mR);
  5256   0011C8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5257   0011CC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5258   0011D0  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5259   0011D4  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5260   0011D8  ECF9  F01B         	call	_turnPrep	;wreg free
  5261                           
  5262                           ;color.c: 238:             turnRight(mL, mR);
  5263   0011DC  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5264   0011E0  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5265   0011E4  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5266   0011E8  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5267   0011EC  EC1D  F01B         	call	_turnRight	;wreg free
  5268   0011F0                     
  5269                           ;color.c: 239:             _delay((unsigned long)((325)*(64000000/4000.0)));
  5270   0011F0  0E1B               	movlw	27
  5271   0011F2  6E2E               	movwf	(??_motor_response+1)^0,c
  5272   0011F4  0E62               	movlw	98
  5273   0011F6  6E2D               	movwf	??_motor_response^0,c
  5274   0011F8  0E2B               	movlw	43
  5275   0011FA                     u3557:
  5276   0011FA  2EE8               	decfsz	wreg,f,c
  5277   0011FC  D7FE               	bra	u3557
  5278   0011FE  2E2D               	decfsz	??_motor_response^0,f,c
  5279   001200  D7FC               	bra	u3557
  5280   001202  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5281   001204  D7FA               	bra	u3557
  5282   001206  F000               	nop	
  5283   001208                     
  5284                           ;color.c: 240:             norm_stop(mL, mR);
  5285   001208  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5286   00120C  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5287   001210  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5288   001214  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5289   001218  EC26  F01D         	call	_norm_stop	;wreg free
  5290                           
  5291                           ;color.c: 241:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5292   00121C  0E52               	movlw	82
  5293   00121E  6E2E               	movwf	(??_motor_response+1)^0,c
  5294   001220  0E2B               	movlw	43
  5295   001222  6E2D               	movwf	??_motor_response^0,c
  5296   001224  0E00               	movlw	0
  5297   001226                     u3567:
  5298   001226  2EE8               	decfsz	wreg,f,c
  5299   001228  D7FE               	bra	u3567
  5300   00122A  2E2D               	decfsz	??_motor_response^0,f,c
  5301   00122C  D7FC               	bra	u3567
  5302   00122E  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5303   001230  D7FA               	bra	u3567
  5304   001232  D000               	nop2	
  5305                           
  5306                           ;color.c: 242:             return 6;
  5307   001234  0E06               	movlw	6
  5308   001236  EF4C  F00D         	goto	l167
  5309   00123A                     l3480:
  5310                           
  5311                           ;color.c: 244:         if (temp->norm_B > 3.3 && temp->norm_B < 3.9 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.2 && temp->norm_G > 2.5 && temp->norm_G < 2.9) {
  5312   00123A  0E33               	movlw	51
  5313   00123C  6E09               	movwf	___flge@ff1^0,c
  5314   00123E  0E33               	movlw	51
  5315   001240  6E0A               	movwf	(___flge@ff1+1)^0,c
  5316   001242  0E53               	movlw	83
  5317   001244  6E0B               	movwf	(___flge@ff1+2)^0,c
  5318   001246  0E40               	movlw	64
  5319   001248  6E0C               	movwf	(___flge@ff1+3)^0,c
  5320   00124A  EE20 F018          	lfsr	2,24
  5321   00124E  5027               	movf	motor_response@temp^0,w,c
  5322   001250  26D9               	addwf	fsr2l,f,c
  5323   001252  5028               	movf	(motor_response@temp+1)^0,w,c
  5324   001254  22DA               	addwfc	fsr2h,f,c
  5325   001256  CFDE F00D          	movff	postinc2,___flge@ff2
  5326   00125A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5327   00125E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5328   001262  CFDE F010          	movff	postinc2,___flge@ff2+3
  5329   001266  EC58  F018         	call	___flge	;wreg free
  5330   00126A  B0D8               	btfsc	status,0,c
  5331   00126C  EF3A  F009         	goto	u2731
  5332   001270  EF3C  F009         	goto	u2730
  5333   001274                     u2731:
  5334   001274  EF1F  F00A         	goto	l3508
  5335   001278                     u2730:
  5336   001278  EE20 F018          	lfsr	2,24
  5337   00127C  5027               	movf	motor_response@temp^0,w,c
  5338   00127E  26D9               	addwf	fsr2l,f,c
  5339   001280  5028               	movf	(motor_response@temp+1)^0,w,c
  5340   001282  22DA               	addwfc	fsr2h,f,c
  5341   001284  CFDE F009          	movff	postinc2,___flge@ff1
  5342   001288  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5343   00128C  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5344   001290  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5345   001294  0E9A               	movlw	154
  5346   001296  6E0D               	movwf	___flge@ff2^0,c
  5347   001298  0E99               	movlw	153
  5348   00129A  6E0E               	movwf	(___flge@ff2+1)^0,c
  5349   00129C  0E79               	movlw	121
  5350   00129E  6E0F               	movwf	(___flge@ff2+2)^0,c
  5351   0012A0  0E40               	movlw	64
  5352   0012A2  6E10               	movwf	(___flge@ff2+3)^0,c
  5353   0012A4  EC58  F018         	call	___flge	;wreg free
  5354   0012A8  B0D8               	btfsc	status,0,c
  5355   0012AA  EF59  F009         	goto	u2741
  5356   0012AE  EF5B  F009         	goto	u2740
  5357   0012B2                     u2741:
  5358   0012B2  EF1F  F00A         	goto	l3508
  5359   0012B6                     u2740:
  5360   0012B6  0ECD               	movlw	205
  5361   0012B8  6E09               	movwf	___flge@ff1^0,c
  5362   0012BA  0ECC               	movlw	204
  5363   0012BC  6E0A               	movwf	(___flge@ff1+1)^0,c
  5364   0012BE  0E2C               	movlw	44
  5365   0012C0  6E0B               	movwf	(___flge@ff1+2)^0,c
  5366   0012C2  0E40               	movlw	64
  5367   0012C4  6E0C               	movwf	(___flge@ff1+3)^0,c
  5368   0012C6  EE20 F010          	lfsr	2,16
  5369   0012CA  5027               	movf	motor_response@temp^0,w,c
  5370   0012CC  26D9               	addwf	fsr2l,f,c
  5371   0012CE  5028               	movf	(motor_response@temp+1)^0,w,c
  5372   0012D0  22DA               	addwfc	fsr2h,f,c
  5373   0012D2  CFDE F00D          	movff	postinc2,___flge@ff2
  5374   0012D6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5375   0012DA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5376   0012DE  CFDE F010          	movff	postinc2,___flge@ff2+3
  5377   0012E2  EC58  F018         	call	___flge	;wreg free
  5378   0012E6  B0D8               	btfsc	status,0,c
  5379   0012E8  EF78  F009         	goto	u2751
  5380   0012EC  EF7A  F009         	goto	u2750
  5381   0012F0                     u2751:
  5382   0012F0  EF1F  F00A         	goto	l3508
  5383   0012F4                     u2750:
  5384   0012F4  EE20 F010          	lfsr	2,16
  5385   0012F8  5027               	movf	motor_response@temp^0,w,c
  5386   0012FA  26D9               	addwf	fsr2l,f,c
  5387   0012FC  5028               	movf	(motor_response@temp+1)^0,w,c
  5388   0012FE  22DA               	addwfc	fsr2h,f,c
  5389   001300  CFDE F009          	movff	postinc2,___flge@ff1
  5390   001304  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5391   001308  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5392   00130C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5393   001310  0ECD               	movlw	205
  5394   001312  6E0D               	movwf	___flge@ff2^0,c
  5395   001314  0ECC               	movlw	204
  5396   001316  6E0E               	movwf	(___flge@ff2+1)^0,c
  5397   001318  0E4C               	movlw	76
  5398   00131A  6E0F               	movwf	(___flge@ff2+2)^0,c
  5399   00131C  0E40               	movlw	64
  5400   00131E  6E10               	movwf	(___flge@ff2+3)^0,c
  5401   001320  EC58  F018         	call	___flge	;wreg free
  5402   001324  B0D8               	btfsc	status,0,c
  5403   001326  EF97  F009         	goto	u2761
  5404   00132A  EF99  F009         	goto	u2760
  5405   00132E                     u2761:
  5406   00132E  EF1F  F00A         	goto	l3508
  5407   001332                     u2760:
  5408   001332  0E00               	movlw	0
  5409   001334  6E09               	movwf	___flge@ff1^0,c
  5410   001336  0E00               	movlw	0
  5411   001338  6E0A               	movwf	(___flge@ff1+1)^0,c
  5412   00133A  0E20               	movlw	32
  5413   00133C  6E0B               	movwf	(___flge@ff1+2)^0,c
  5414   00133E  0E40               	movlw	64
  5415   001340  6E0C               	movwf	(___flge@ff1+3)^0,c
  5416   001342  EE20 F014          	lfsr	2,20
  5417   001346  5027               	movf	motor_response@temp^0,w,c
  5418   001348  26D9               	addwf	fsr2l,f,c
  5419   00134A  5028               	movf	(motor_response@temp+1)^0,w,c
  5420   00134C  22DA               	addwfc	fsr2h,f,c
  5421   00134E  CFDE F00D          	movff	postinc2,___flge@ff2
  5422   001352  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5423   001356  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5424   00135A  CFDE F010          	movff	postinc2,___flge@ff2+3
  5425   00135E  EC58  F018         	call	___flge	;wreg free
  5426   001362  B0D8               	btfsc	status,0,c
  5427   001364  EFB6  F009         	goto	u2771
  5428   001368  EFB8  F009         	goto	u2770
  5429   00136C                     u2771:
  5430   00136C  EF1F  F00A         	goto	l3508
  5431   001370                     u2770:
  5432   001370  EE20 F014          	lfsr	2,20
  5433   001374  5027               	movf	motor_response@temp^0,w,c
  5434   001376  26D9               	addwf	fsr2l,f,c
  5435   001378  5028               	movf	(motor_response@temp+1)^0,w,c
  5436   00137A  22DA               	addwfc	fsr2h,f,c
  5437   00137C  CFDE F009          	movff	postinc2,___flge@ff1
  5438   001380  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5439   001384  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5440   001388  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5441   00138C  0E9A               	movlw	154
  5442   00138E  6E0D               	movwf	___flge@ff2^0,c
  5443   001390  0E99               	movlw	153
  5444   001392  6E0E               	movwf	(___flge@ff2+1)^0,c
  5445   001394  0E39               	movlw	57
  5446   001396  6E0F               	movwf	(___flge@ff2+2)^0,c
  5447   001398  0E40               	movlw	64
  5448   00139A  6E10               	movwf	(___flge@ff2+3)^0,c
  5449   00139C  EC58  F018         	call	___flge	;wreg free
  5450   0013A0  B0D8               	btfsc	status,0,c
  5451   0013A2  EFD5  F009         	goto	u2781
  5452   0013A6  EFD7  F009         	goto	u2780
  5453   0013AA                     u2781:
  5454   0013AA  EF1F  F00A         	goto	l3508
  5455   0013AE                     u2780:
  5456   0013AE                     
  5457                           ;color.c: 245:             LATFbits.LATF0 = !LATFbits.LATF0;
  5458   0013AE  A07E               	btfss	126,0,c	;volatile
  5459   0013B0  EFDC  F009         	goto	u2791
  5460   0013B4  EFE0  F009         	goto	u2790
  5461   0013B8                     u2791:
  5462   0013B8  6A2D               	clrf	??_motor_response^0,c
  5463   0013BA  2A2D               	incf	??_motor_response^0,f,c
  5464   0013BC  EFE1  F009         	goto	u2808
  5465   0013C0                     u2790:
  5466   0013C0  6A2D               	clrf	??_motor_response^0,c
  5467   0013C2                     u2808:
  5468   0013C2  507E               	movf	126,w,c	;volatile
  5469   0013C4  182D               	xorwf	??_motor_response^0,w,c
  5470   0013C6  0BFE               	andlw	-2
  5471   0013C8  182D               	xorwf	??_motor_response^0,w,c
  5472   0013CA  6E7E               	movwf	126,c	;volatile
  5473   0013CC                     
  5474                           ;color.c: 246:             turnPrep(mL, mR);
  5475   0013CC  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5476   0013D0  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5477   0013D4  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5478   0013D8  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5479   0013DC  ECF9  F01B         	call	_turnPrep	;wreg free
  5480   0013E0                     
  5481                           ;color.c: 247:             turnLeft(mL, mR);
  5482   0013E0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5483   0013E4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5484   0013E8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5485   0013EC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5486   0013F0  EC56  F01B         	call	_turnLeft	;wreg free
  5487   0013F4                     
  5488                           ;color.c: 248:             _delay((unsigned long)((330)*(64000000/4000.0)));
  5489   0013F4  0E1B               	movlw	27
  5490   0013F6  6E2E               	movwf	(??_motor_response+1)^0,c
  5491   0013F8  0ECA               	movlw	202
  5492   0013FA  6E2D               	movwf	??_motor_response^0,c
  5493   0013FC  0E10               	movlw	16
  5494   0013FE                     u3577:
  5495   0013FE  2EE8               	decfsz	wreg,f,c
  5496   001400  D7FE               	bra	u3577
  5497   001402  2E2D               	decfsz	??_motor_response^0,f,c
  5498   001404  D7FC               	bra	u3577
  5499   001406  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5500   001408  D7FA               	bra	u3577
  5501   00140A  D000               	nop2	
  5502   00140C                     
  5503                           ;color.c: 249:             norm_stop(mL, mR);
  5504   00140C  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5505   001410  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5506   001414  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5507   001418  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5508   00141C  EC26  F01D         	call	_norm_stop	;wreg free
  5509   001420                     
  5510                           ;color.c: 250:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  5511   001420  0E52               	movlw	82
  5512   001422  6E2E               	movwf	(??_motor_response+1)^0,c
  5513   001424  0E2B               	movlw	43
  5514   001426  6E2D               	movwf	??_motor_response^0,c
  5515   001428  0E00               	movlw	0
  5516   00142A                     u3587:
  5517   00142A  2EE8               	decfsz	wreg,f,c
  5518   00142C  D7FE               	bra	u3587
  5519   00142E  2E2D               	decfsz	??_motor_response^0,f,c
  5520   001430  D7FC               	bra	u3587
  5521   001432  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5522   001434  D7FA               	bra	u3587
  5523   001436  D000               	nop2	
  5524   001438                     
  5525                           ;color.c: 251:             return 7;
  5526   001438  0E07               	movlw	7
  5527   00143A  EF4C  F00D         	goto	l167
  5528   00143E                     l3508:
  5529                           
  5530                           ;color.c: 257:     if (temp->norm_C < CR3U && temp->norm_C > CR3L) {
  5531   00143E  EE20 F01C          	lfsr	2,28
  5532   001442  5027               	movf	motor_response@temp^0,w,c
  5533   001444  26D9               	addwf	fsr2l,f,c
  5534   001446  5028               	movf	(motor_response@temp+1)^0,w,c
  5535   001448  22DA               	addwfc	fsr2h,f,c
  5536   00144A  CFDE F009          	movff	postinc2,___flge@ff1
  5537   00144E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5538   001452  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5539   001456  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5540   00145A  C0CC  F00D         	movff	_CR3U,___flge@ff2
  5541   00145E  C0CD  F00E         	movff	_CR3U+1,___flge@ff2+1
  5542   001462  C0CE  F00F         	movff	_CR3U+2,___flge@ff2+2
  5543   001466  C0CF  F010         	movff	_CR3U+3,___flge@ff2+3
  5544   00146A  EC58  F018         	call	___flge	;wreg free
  5545   00146E  B0D8               	btfsc	status,0,c
  5546   001470  EF3C  F00A         	goto	u2811
  5547   001474  EF3E  F00A         	goto	u2810
  5548   001478                     u2811:
  5549   001478  EFDD  F00B         	goto	l3554
  5550   00147C                     u2810:
  5551   00147C  C0C8  F009         	movff	_CR3L,___flge@ff1
  5552   001480  C0C9  F00A         	movff	_CR3L+1,___flge@ff1+1
  5553   001484  C0CA  F00B         	movff	_CR3L+2,___flge@ff1+2
  5554   001488  C0CB  F00C         	movff	_CR3L+3,___flge@ff1+3
  5555   00148C  EE20 F01C          	lfsr	2,28
  5556   001490  5027               	movf	motor_response@temp^0,w,c
  5557   001492  26D9               	addwf	fsr2l,f,c
  5558   001494  5028               	movf	(motor_response@temp+1)^0,w,c
  5559   001496  22DA               	addwfc	fsr2h,f,c
  5560   001498  CFDE F00D          	movff	postinc2,___flge@ff2
  5561   00149C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5562   0014A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5563   0014A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5564   0014A8  EC58  F018         	call	___flge	;wreg free
  5565   0014AC  B0D8               	btfsc	status,0,c
  5566   0014AE  EF5B  F00A         	goto	u2821
  5567   0014B2  EF5D  F00A         	goto	u2820
  5568   0014B6                     u2821:
  5569   0014B6  EFDD  F00B         	goto	l3554
  5570   0014BA                     u2820:
  5571   0014BA                     
  5572                           ;color.c: 258:         if (temp->norm_G > 8) {
  5573   0014BA  0E00               	movlw	0
  5574   0014BC  6E09               	movwf	___flge@ff1^0,c
  5575   0014BE  0E00               	movlw	0
  5576   0014C0  6E0A               	movwf	(___flge@ff1+1)^0,c
  5577   0014C2  0E00               	movlw	0
  5578   0014C4  6E0B               	movwf	(___flge@ff1+2)^0,c
  5579   0014C6  0E41               	movlw	65
  5580   0014C8  6E0C               	movwf	(___flge@ff1+3)^0,c
  5581   0014CA  EE20 F014          	lfsr	2,20
  5582   0014CE  5027               	movf	motor_response@temp^0,w,c
  5583   0014D0  26D9               	addwf	fsr2l,f,c
  5584   0014D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5585   0014D4  22DA               	addwfc	fsr2h,f,c
  5586   0014D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5587   0014DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5588   0014DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5589   0014E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5590   0014E6  EC58  F018         	call	___flge	;wreg free
  5591   0014EA  B0D8               	btfsc	status,0,c
  5592   0014EC  EF7A  F00A         	goto	u2831
  5593   0014F0  EF7C  F00A         	goto	u2830
  5594   0014F4                     u2831:
  5595   0014F4  EF9F  F00A         	goto	l3522
  5596   0014F8                     u2830:
  5597   0014F8                     
  5598                           ;color.c: 259:             turnPrep(mL, mR);
  5599   0014F8  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5600   0014FC  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5601   001500  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5602   001504  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5603   001508  ECF9  F01B         	call	_turnPrep	;wreg free
  5604                           
  5605                           ;color.c: 260:             turnRight(mL, mR);
  5606   00150C  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5607   001510  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5608   001514  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5609   001518  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5610   00151C  EC1D  F01B         	call	_turnRight	;wreg free
  5611   001520                     
  5612                           ;color.c: 261:             _delay((unsigned long)((225)*(64000000/4000.0)));
  5613   001520  0E13               	movlw	19
  5614   001522  6E2E               	movwf	(??_motor_response+1)^0,c
  5615   001524  0E44               	movlw	68
  5616   001526  6E2D               	movwf	??_motor_response^0,c
  5617   001528  0E44               	movlw	68
  5618   00152A                     u3597:
  5619   00152A  2EE8               	decfsz	wreg,f,c
  5620   00152C  D7FE               	bra	u3597
  5621   00152E  2E2D               	decfsz	??_motor_response^0,f,c
  5622   001530  D7FC               	bra	u3597
  5623   001532  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5624   001534  D7FA               	bra	u3597
  5625   001536  D000               	nop2	
  5626   001538                     
  5627                           ;color.c: 262:             return 1;
  5628   001538  0E01               	movlw	1
  5629   00153A  EF4C  F00D         	goto	l167
  5630   00153E                     l3522:
  5631                           
  5632                           ;color.c: 264:         if (temp->norm_B > 4.5 && temp->norm_B < 5.5) {
  5633   00153E  0E00               	movlw	0
  5634   001540  6E09               	movwf	___flge@ff1^0,c
  5635   001542  0E00               	movlw	0
  5636   001544  6E0A               	movwf	(___flge@ff1+1)^0,c
  5637   001546  0E90               	movlw	144
  5638   001548  6E0B               	movwf	(___flge@ff1+2)^0,c
  5639   00154A  0E40               	movlw	64
  5640   00154C  6E0C               	movwf	(___flge@ff1+3)^0,c
  5641   00154E  EE20 F018          	lfsr	2,24
  5642   001552  5027               	movf	motor_response@temp^0,w,c
  5643   001554  26D9               	addwf	fsr2l,f,c
  5644   001556  5028               	movf	(motor_response@temp+1)^0,w,c
  5645   001558  22DA               	addwfc	fsr2h,f,c
  5646   00155A  CFDE F00D          	movff	postinc2,___flge@ff2
  5647   00155E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5648   001562  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5649   001566  CFDE F010          	movff	postinc2,___flge@ff2+3
  5650   00156A  EC58  F018         	call	___flge	;wreg free
  5651   00156E  B0D8               	btfsc	status,0,c
  5652   001570  EFBC  F00A         	goto	u2841
  5653   001574  EFBE  F00A         	goto	u2840
  5654   001578                     u2841:
  5655   001578  EF00  F00B         	goto	l3534
  5656   00157C                     u2840:
  5657   00157C  EE20 F018          	lfsr	2,24
  5658   001580  5027               	movf	motor_response@temp^0,w,c
  5659   001582  26D9               	addwf	fsr2l,f,c
  5660   001584  5028               	movf	(motor_response@temp+1)^0,w,c
  5661   001586  22DA               	addwfc	fsr2h,f,c
  5662   001588  CFDE F009          	movff	postinc2,___flge@ff1
  5663   00158C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5664   001590  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5665   001594  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5666   001598  0E00               	movlw	0
  5667   00159A  6E0D               	movwf	___flge@ff2^0,c
  5668   00159C  0E00               	movlw	0
  5669   00159E  6E0E               	movwf	(___flge@ff2+1)^0,c
  5670   0015A0  0EB0               	movlw	176
  5671   0015A2  6E0F               	movwf	(___flge@ff2+2)^0,c
  5672   0015A4  0E40               	movlw	64
  5673   0015A6  6E10               	movwf	(___flge@ff2+3)^0,c
  5674   0015A8  EC58  F018         	call	___flge	;wreg free
  5675   0015AC  B0D8               	btfsc	status,0,c
  5676   0015AE  EFDB  F00A         	goto	u2851
  5677   0015B2  EFDD  F00A         	goto	u2850
  5678   0015B6                     u2851:
  5679   0015B6  EF00  F00B         	goto	l3534
  5680   0015BA                     u2850:
  5681   0015BA                     
  5682                           ;color.c: 265:             turnPrep(mL, mR);
  5683   0015BA  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5684   0015BE  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5685   0015C2  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5686   0015C6  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5687   0015CA  ECF9  F01B         	call	_turnPrep	;wreg free
  5688                           
  5689                           ;color.c: 266:             turnLeft(mL, mR);
  5690   0015CE  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5691   0015D2  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5692   0015D6  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5693   0015DA  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5694   0015DE  EC56  F01B         	call	_turnLeft	;wreg free
  5695   0015E2                     
  5696                           ;color.c: 267:             _delay((unsigned long)((210)*(64000000/4000.0)));
  5697   0015E2  0E12               	movlw	18
  5698   0015E4  6E2E               	movwf	(??_motor_response+1)^0,c
  5699   0015E6  0E0C               	movlw	12
  5700   0015E8  6E2D               	movwf	??_motor_response^0,c
  5701   0015EA  0E95               	movlw	149
  5702   0015EC                     u3607:
  5703   0015EC  2EE8               	decfsz	wreg,f,c
  5704   0015EE  D7FE               	bra	u3607
  5705   0015F0  2E2D               	decfsz	??_motor_response^0,f,c
  5706   0015F2  D7FC               	bra	u3607
  5707   0015F4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5708   0015F6  D7FA               	bra	u3607
  5709   0015F8  F000               	nop	
  5710   0015FA                     
  5711                           ;color.c: 268:             return 2;
  5712   0015FA  0E02               	movlw	2
  5713   0015FC  EF4C  F00D         	goto	l167
  5714   001600                     l3534:
  5715                           
  5716                           ;color.c: 270:         if (temp->norm_B > 2.7 && temp->norm_B < 3.3 && temp->norm_R > 2.
      +                          7 && temp->norm_R < 3.3 && temp->norm_G > 2.7 && temp->norm_G < 3.3) {
  5717   001600  0ECD               	movlw	205
  5718   001602  6E09               	movwf	___flge@ff1^0,c
  5719   001604  0ECC               	movlw	204
  5720   001606  6E0A               	movwf	(___flge@ff1+1)^0,c
  5721   001608  0E2C               	movlw	44
  5722   00160A  6E0B               	movwf	(___flge@ff1+2)^0,c
  5723   00160C  0E40               	movlw	64
  5724   00160E  6E0C               	movwf	(___flge@ff1+3)^0,c
  5725   001610  EE20 F018          	lfsr	2,24
  5726   001614  5027               	movf	motor_response@temp^0,w,c
  5727   001616  26D9               	addwf	fsr2l,f,c
  5728   001618  5028               	movf	(motor_response@temp+1)^0,w,c
  5729   00161A  22DA               	addwfc	fsr2h,f,c
  5730   00161C  CFDE F00D          	movff	postinc2,___flge@ff2
  5731   001620  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5732   001624  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5733   001628  CFDE F010          	movff	postinc2,___flge@ff2+3
  5734   00162C  EC58  F018         	call	___flge	;wreg free
  5735   001630  B0D8               	btfsc	status,0,c
  5736   001632  EF1D  F00B         	goto	u2861
  5737   001636  EF1F  F00B         	goto	u2860
  5738   00163A                     u2861:
  5739   00163A  EFDD  F00B         	goto	l3554
  5740   00163E                     u2860:
  5741   00163E  EE20 F018          	lfsr	2,24
  5742   001642  5027               	movf	motor_response@temp^0,w,c
  5743   001644  26D9               	addwf	fsr2l,f,c
  5744   001646  5028               	movf	(motor_response@temp+1)^0,w,c
  5745   001648  22DA               	addwfc	fsr2h,f,c
  5746   00164A  CFDE F009          	movff	postinc2,___flge@ff1
  5747   00164E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5748   001652  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5749   001656  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5750   00165A  0E33               	movlw	51
  5751   00165C  6E0D               	movwf	___flge@ff2^0,c
  5752   00165E  0E33               	movlw	51
  5753   001660  6E0E               	movwf	(___flge@ff2+1)^0,c
  5754   001662  0E53               	movlw	83
  5755   001664  6E0F               	movwf	(___flge@ff2+2)^0,c
  5756   001666  0E40               	movlw	64
  5757   001668  6E10               	movwf	(___flge@ff2+3)^0,c
  5758   00166A  EC58  F018         	call	___flge	;wreg free
  5759   00166E  B0D8               	btfsc	status,0,c
  5760   001670  EF3C  F00B         	goto	u2871
  5761   001674  EF3E  F00B         	goto	u2870
  5762   001678                     u2871:
  5763   001678  EFDD  F00B         	goto	l3554
  5764   00167C                     u2870:
  5765   00167C  0ECD               	movlw	205
  5766   00167E  6E09               	movwf	___flge@ff1^0,c
  5767   001680  0ECC               	movlw	204
  5768   001682  6E0A               	movwf	(___flge@ff1+1)^0,c
  5769   001684  0E2C               	movlw	44
  5770   001686  6E0B               	movwf	(___flge@ff1+2)^0,c
  5771   001688  0E40               	movlw	64
  5772   00168A  6E0C               	movwf	(___flge@ff1+3)^0,c
  5773   00168C  EE20 F010          	lfsr	2,16
  5774   001690  5027               	movf	motor_response@temp^0,w,c
  5775   001692  26D9               	addwf	fsr2l,f,c
  5776   001694  5028               	movf	(motor_response@temp+1)^0,w,c
  5777   001696  22DA               	addwfc	fsr2h,f,c
  5778   001698  CFDE F00D          	movff	postinc2,___flge@ff2
  5779   00169C  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5780   0016A0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5781   0016A4  CFDE F010          	movff	postinc2,___flge@ff2+3
  5782   0016A8  EC58  F018         	call	___flge	;wreg free
  5783   0016AC  B0D8               	btfsc	status,0,c
  5784   0016AE  EF5B  F00B         	goto	u2881
  5785   0016B2  EF5D  F00B         	goto	u2880
  5786   0016B6                     u2881:
  5787   0016B6  EFDD  F00B         	goto	l3554
  5788   0016BA                     u2880:
  5789   0016BA  EE20 F010          	lfsr	2,16
  5790   0016BE  5027               	movf	motor_response@temp^0,w,c
  5791   0016C0  26D9               	addwf	fsr2l,f,c
  5792   0016C2  5028               	movf	(motor_response@temp+1)^0,w,c
  5793   0016C4  22DA               	addwfc	fsr2h,f,c
  5794   0016C6  CFDE F009          	movff	postinc2,___flge@ff1
  5795   0016CA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5796   0016CE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5797   0016D2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5798   0016D6  0E33               	movlw	51
  5799   0016D8  6E0D               	movwf	___flge@ff2^0,c
  5800   0016DA  0E33               	movlw	51
  5801   0016DC  6E0E               	movwf	(___flge@ff2+1)^0,c
  5802   0016DE  0E53               	movlw	83
  5803   0016E0  6E0F               	movwf	(___flge@ff2+2)^0,c
  5804   0016E2  0E40               	movlw	64
  5805   0016E4  6E10               	movwf	(___flge@ff2+3)^0,c
  5806   0016E6  EC58  F018         	call	___flge	;wreg free
  5807   0016EA  B0D8               	btfsc	status,0,c
  5808   0016EC  EF7A  F00B         	goto	u2891
  5809   0016F0  EF7C  F00B         	goto	u2890
  5810   0016F4                     u2891:
  5811   0016F4  EFDD  F00B         	goto	l3554
  5812   0016F8                     u2890:
  5813   0016F8  0ECD               	movlw	205
  5814   0016FA  6E09               	movwf	___flge@ff1^0,c
  5815   0016FC  0ECC               	movlw	204
  5816   0016FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5817   001700  0E2C               	movlw	44
  5818   001702  6E0B               	movwf	(___flge@ff1+2)^0,c
  5819   001704  0E40               	movlw	64
  5820   001706  6E0C               	movwf	(___flge@ff1+3)^0,c
  5821   001708  EE20 F014          	lfsr	2,20
  5822   00170C  5027               	movf	motor_response@temp^0,w,c
  5823   00170E  26D9               	addwf	fsr2l,f,c
  5824   001710  5028               	movf	(motor_response@temp+1)^0,w,c
  5825   001712  22DA               	addwfc	fsr2h,f,c
  5826   001714  CFDE F00D          	movff	postinc2,___flge@ff2
  5827   001718  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5828   00171C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5829   001720  CFDE F010          	movff	postinc2,___flge@ff2+3
  5830   001724  EC58  F018         	call	___flge	;wreg free
  5831   001728  B0D8               	btfsc	status,0,c
  5832   00172A  EF99  F00B         	goto	u2901
  5833   00172E  EF9B  F00B         	goto	u2900
  5834   001732                     u2901:
  5835   001732  EFDD  F00B         	goto	l3554
  5836   001736                     u2900:
  5837   001736  EE20 F014          	lfsr	2,20
  5838   00173A  5027               	movf	motor_response@temp^0,w,c
  5839   00173C  26D9               	addwf	fsr2l,f,c
  5840   00173E  5028               	movf	(motor_response@temp+1)^0,w,c
  5841   001740  22DA               	addwfc	fsr2h,f,c
  5842   001742  CFDE F009          	movff	postinc2,___flge@ff1
  5843   001746  CFDE F00A          	movff	postinc2,___flge@ff1+1
  5844   00174A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  5845   00174E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  5846   001752  0E33               	movlw	51
  5847   001754  6E0D               	movwf	___flge@ff2^0,c
  5848   001756  0E33               	movlw	51
  5849   001758  6E0E               	movwf	(___flge@ff2+1)^0,c
  5850   00175A  0E53               	movlw	83
  5851   00175C  6E0F               	movwf	(___flge@ff2+2)^0,c
  5852   00175E  0E40               	movlw	64
  5853   001760  6E10               	movwf	(___flge@ff2+3)^0,c
  5854   001762  EC58  F018         	call	___flge	;wreg free
  5855   001766  B0D8               	btfsc	status,0,c
  5856   001768  EFB8  F00B         	goto	u2911
  5857   00176C  EFBA  F00B         	goto	u2910
  5858   001770                     u2911:
  5859   001770  EFDD  F00B         	goto	l3554
  5860   001774                     u2910:
  5861   001774                     
  5862                           ;color.c: 271:             turnPrep(mL, mR);
  5863   001774  C029  F021         	movff	motor_response@mL,turnPrep@mL
  5864   001778  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  5865   00177C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  5866   001780  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  5867   001784  ECF9  F01B         	call	_turnPrep	;wreg free
  5868                           
  5869                           ;color.c: 272:             turnLeft(mL, mR);
  5870   001788  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  5871   00178C  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  5872   001790  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  5873   001794  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  5874   001798  EC56  F01B         	call	_turnLeft	;wreg free
  5875   00179C                     
  5876                           ;color.c: 273:             _delay((unsigned long)((385)*(64000000/4000.0)));
  5877   00179C  0E20               	movlw	32
  5878   00179E  6E2E               	movwf	(??_motor_response+1)^0,c
  5879   0017A0  0E40               	movlw	64
  5880   0017A2  6E2D               	movwf	??_motor_response^0,c
  5881   0017A4  0EE9               	movlw	233
  5882   0017A6                     u3617:
  5883   0017A6  2EE8               	decfsz	wreg,f,c
  5884   0017A8  D7FE               	bra	u3617
  5885   0017AA  2E2D               	decfsz	??_motor_response^0,f,c
  5886   0017AC  D7FC               	bra	u3617
  5887   0017AE  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5888   0017B0  D7FA               	bra	u3617
  5889   0017B2  F000               	nop	
  5890   0017B4                     
  5891                           ;color.c: 274:             return 3;
  5892   0017B4  0E03               	movlw	3
  5893   0017B6  EF4C  F00D         	goto	l167
  5894   0017BA                     l3554:
  5895                           
  5896                           ;color.c: 277:     if (temp->norm_C > CR1L) {
  5897   0017BA  C047  F009         	movff	_CR1L,___flge@ff1
  5898   0017BE  C048  F00A         	movff	_CR1L+1,___flge@ff1+1
  5899   0017C2  C049  F00B         	movff	_CR1L+2,___flge@ff1+2
  5900   0017C6  C04A  F00C         	movff	_CR1L+3,___flge@ff1+3
  5901   0017CA  EE20 F01C          	lfsr	2,28
  5902   0017CE  5027               	movf	motor_response@temp^0,w,c
  5903   0017D0  26D9               	addwf	fsr2l,f,c
  5904   0017D2  5028               	movf	(motor_response@temp+1)^0,w,c
  5905   0017D4  22DA               	addwfc	fsr2h,f,c
  5906   0017D6  CFDE F00D          	movff	postinc2,___flge@ff2
  5907   0017DA  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5908   0017DE  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5909   0017E2  CFDE F010          	movff	postinc2,___flge@ff2+3
  5910   0017E6  EC58  F018         	call	___flge	;wreg free
  5911   0017EA  B0D8               	btfsc	status,0,c
  5912   0017EC  EFFA  F00B         	goto	u2921
  5913   0017F0  EFFC  F00B         	goto	u2920
  5914   0017F4                     u2921:
  5915   0017F4  EFA8  F00C         	goto	l3592
  5916   0017F8                     u2920:
  5917   0017F8                     
  5918                           ;color.c: 278:         if (temp->norm_B > 5) {
  5919   0017F8  0E00               	movlw	0
  5920   0017FA  6E09               	movwf	___flge@ff1^0,c
  5921   0017FC  0E00               	movlw	0
  5922   0017FE  6E0A               	movwf	(___flge@ff1+1)^0,c
  5923   001800  0EA0               	movlw	160
  5924   001802  6E0B               	movwf	(___flge@ff1+2)^0,c
  5925   001804  0E40               	movlw	64
  5926   001806  6E0C               	movwf	(___flge@ff1+3)^0,c
  5927   001808  EE20 F018          	lfsr	2,24
  5928   00180C  5027               	movf	motor_response@temp^0,w,c
  5929   00180E  26D9               	addwf	fsr2l,f,c
  5930   001810  5028               	movf	(motor_response@temp+1)^0,w,c
  5931   001812  22DA               	addwfc	fsr2h,f,c
  5932   001814  CFDE F00D          	movff	postinc2,___flge@ff2
  5933   001818  CFDE F00E          	movff	postinc2,___flge@ff2+1
  5934   00181C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  5935   001820  CFDE F010          	movff	postinc2,___flge@ff2+3
  5936   001824  EC58  F018         	call	___flge	;wreg free
  5937   001828  B0D8               	btfsc	status,0,c
  5938   00182A  EF19  F00C         	goto	u2931
  5939   00182E  EF1B  F00C         	goto	u2930
  5940   001832                     u2931:
  5941   001832  EF60  F00C         	goto	l3572
  5942   001836                     u2930:
  5943   001836                     
  5944                           ;color.c: 279:             reverse(mL, mR);
  5945   001836  C029  F01C         	movff	motor_response@mL,reverse@mL
  5946   00183A  C02A  F01D         	movff	motor_response@mL+1,reverse@mL+1
  5947   00183E  C02B  F01E         	movff	motor_response@mR,reverse@mR
  5948   001842  C02C  F01F         	movff	motor_response@mR+1,reverse@mR+1
  5949   001846  ECDA  F018         	call	_reverse	;wreg free
  5950   00184A                     
  5951                           ;color.c: 280:             _delay((unsigned long)((3000)*(64000000/4000.0)));
  5952   00184A  0EF4               	movlw	244
  5953   00184C  6E2E               	movwf	(??_motor_response+1)^0,c
  5954   00184E  0E82               	movlw	130
  5955   001850  6E2D               	movwf	??_motor_response^0,c
  5956   001852  0E05               	movlw	5
  5957   001854                     u3627:
  5958   001854  2EE8               	decfsz	wreg,f,c
  5959   001856  D7FE               	bra	u3627
  5960   001858  2E2D               	decfsz	??_motor_response^0,f,c
  5961   00185A  D7FC               	bra	u3627
  5962   00185C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5963   00185E  D7FA               	bra	u3627
  5964   001860  F000               	nop	
  5965   001862                     
  5966                           ;color.c: 281:             norm_stop(mL, mR);
  5967   001862  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  5968   001866  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  5969   00186A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  5970   00186E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  5971   001872  EC26  F01D         	call	_norm_stop	;wreg free
  5972                           
  5973                           ;color.c: 282:             _delay((unsigned long)((100)*(64000000/4000.0)));
  5974   001876  0E09               	movlw	9
  5975   001878  6E2E               	movwf	(??_motor_response+1)^0,c
  5976   00187A  0E1E               	movlw	30
  5977   00187C  6E2D               	movwf	??_motor_response^0,c
  5978   00187E  0EE4               	movlw	228
  5979   001880                     u3637:
  5980   001880  2EE8               	decfsz	wreg,f,c
  5981   001882  D7FE               	bra	u3637
  5982   001884  2E2D               	decfsz	??_motor_response^0,f,c
  5983   001886  D7FC               	bra	u3637
  5984   001888  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  5985   00188A  D7FA               	bra	u3637
  5986   00188C  D000               	nop2	
  5987   00188E                     
  5988                           ;color.c: 283:             turnRight(mL, mR);
  5989   00188E  C029  F01C         	movff	motor_response@mL,turnRight@mL
  5990   001892  C02A  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  5991   001896  C02B  F01E         	movff	motor_response@mR,turnRight@mR
  5992   00189A  C02C  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  5993   00189E  EC1D  F01B         	call	_turnRight	;wreg free
  5994   0018A2                     
  5995                           ;color.c: 284:             _delay((unsigned long)((205)*(64000000/4000.0)));
  5996   0018A2  0E11               	movlw	17
  5997   0018A4  6E2E               	movwf	(??_motor_response+1)^0,c
  5998   0018A6  0EA4               	movlw	164
  5999   0018A8  6E2D               	movwf	??_motor_response^0,c
  6000   0018AA  0EB0               	movlw	176
  6001   0018AC                     u3647:
  6002   0018AC  2EE8               	decfsz	wreg,f,c
  6003   0018AE  D7FE               	bra	u3647
  6004   0018B0  2E2D               	decfsz	??_motor_response^0,f,c
  6005   0018B2  D7FC               	bra	u3647
  6006   0018B4  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6007   0018B6  D7FA               	bra	u3647
  6008   0018B8  D000               	nop2	
  6009   0018BA                     
  6010                           ;color.c: 285:             return 4;
  6011   0018BA  0E04               	movlw	4
  6012   0018BC  EF4C  F00D         	goto	l167
  6013   0018C0                     l3572:
  6014                           
  6015                           ;color.c: 288:         if (temp->norm_B < 5) {
  6016   0018C0  EE20 F018          	lfsr	2,24
  6017   0018C4  5027               	movf	motor_response@temp^0,w,c
  6018   0018C6  26D9               	addwf	fsr2l,f,c
  6019   0018C8  5028               	movf	(motor_response@temp+1)^0,w,c
  6020   0018CA  22DA               	addwfc	fsr2h,f,c
  6021   0018CC  CFDE F009          	movff	postinc2,___flge@ff1
  6022   0018D0  CFDE F00A          	movff	postinc2,___flge@ff1+1
  6023   0018D4  CFDE F00B          	movff	postinc2,___flge@ff1+2
  6024   0018D8  CFDE F00C          	movff	postinc2,___flge@ff1+3
  6025   0018DC  0E00               	movlw	0
  6026   0018DE  6E0D               	movwf	___flge@ff2^0,c
  6027   0018E0  0E00               	movlw	0
  6028   0018E2  6E0E               	movwf	(___flge@ff2+1)^0,c
  6029   0018E4  0EA0               	movlw	160
  6030   0018E6  6E0F               	movwf	(___flge@ff2+2)^0,c
  6031   0018E8  0E40               	movlw	64
  6032   0018EA  6E10               	movwf	(___flge@ff2+3)^0,c
  6033   0018EC  EC58  F018         	call	___flge	;wreg free
  6034   0018F0  B0D8               	btfsc	status,0,c
  6035   0018F2  EF7D  F00C         	goto	u2941
  6036   0018F6  EF7F  F00C         	goto	u2940
  6037   0018FA                     u2941:
  6038   0018FA  EF4C  F00D         	goto	l167
  6039   0018FE                     u2940:
  6040   0018FE                     
  6041                           ;color.c: 290:             motor_return = 1;
  6042   0018FE  0E01               	movlw	1
  6043   001900  0100               	movlb	0	; () banked
  6044   001902  6FDA               	movwf	_motor_return& (0+255),b
  6045   001904                     
  6046                           ; BSR set to: 0
  6047                           ;color.c: 291:             LATDbits.LATD4 = 1;
  6048   001904  887C               	bsf	124,4,c	;volatile
  6049   001906                     
  6050                           ; BSR set to: 0
  6051                           ;color.c: 292:             turnPrep(mL, mR);
  6052   001906  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6053   00190A  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6054   00190E  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6055   001912  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6056   001916  ECF9  F01B         	call	_turnPrep	;wreg free
  6057   00191A                     
  6058                           ;color.c: 293:             turnLeft(mL, mR);
  6059   00191A  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6060   00191E  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6061   001922  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6062   001926  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6063   00192A  EC56  F01B         	call	_turnLeft	;wreg free
  6064   00192E                     
  6065                           ;color.c: 294:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6066   00192E  0E20               	movlw	32
  6067   001930  6E2E               	movwf	(??_motor_response+1)^0,c
  6068   001932  0E40               	movlw	64
  6069   001934  6E2D               	movwf	??_motor_response^0,c
  6070   001936  0EE9               	movlw	233
  6071   001938                     u3657:
  6072   001938  2EE8               	decfsz	wreg,f,c
  6073   00193A  D7FE               	bra	u3657
  6074   00193C  2E2D               	decfsz	??_motor_response^0,f,c
  6075   00193E  D7FC               	bra	u3657
  6076   001940  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6077   001942  D7FA               	bra	u3657
  6078   001944  F000               	nop	
  6079   001946                     
  6080                           ;color.c: 295:             LATHbits.LATH3 = 0;
  6081   001946  9680               	bcf	128,3,c	;volatile
  6082   001948                     
  6083                           ;color.c: 296:             LATDbits.LATD7 = 1;
  6084   001948  8E7C               	bsf	124,7,c	;volatile
  6085   00194A                     
  6086                           ;color.c: 297:             return 8;
  6087   00194A  0E08               	movlw	8
  6088   00194C  EF4C  F00D         	goto	l167
  6089   001950                     l3592:
  6090                           
  6091                           ;color.c: 300:         if (lost_ctr < 2) {
  6092   001950  BE50               	btfsc	(_lost_ctr+1)^0,7,c
  6093   001952  EFB6  F00C         	goto	u2950
  6094   001956  5050               	movf	(_lost_ctr+1)^0,w,c
  6095   001958  E107               	bnz	u2951
  6096   00195A  0E02               	movlw	2
  6097   00195C  5C4F               	subwf	_lost_ctr^0,w,c
  6098   00195E  B0D8               	btfsc	status,0,c
  6099   001960  EFB4  F00C         	goto	u2951
  6100   001964  EFB6  F00C         	goto	u2950
  6101   001968                     u2951:
  6102   001968  EFBA  F00C         	goto	l3596
  6103   00196C                     u2950:
  6104   00196C                     
  6105                           ;color.c: 301:             lost_ctr++;
  6106   00196C  4A4F               	infsnz	_lost_ctr^0,f,c
  6107   00196E  2A50               	incf	(_lost_ctr+1)^0,f,c
  6108                           
  6109                           ;color.c: 302:         } else {
  6110   001970  EF4C  F00D         	goto	l167
  6111   001974                     l3596:
  6112                           
  6113                           ;color.c: 303:             turnPrep(mL, mR);
  6114   001974  C029  F021         	movff	motor_response@mL,turnPrep@mL
  6115   001978  C02A  F022         	movff	motor_response@mL+1,turnPrep@mL+1
  6116   00197C  C02B  F023         	movff	motor_response@mR,turnPrep@mR
  6117   001980  C02C  F024         	movff	motor_response@mR+1,turnPrep@mR+1
  6118   001984  ECF9  F01B         	call	_turnPrep	;wreg free
  6119   001988                     
  6120                           ;color.c: 305:             for (int j = 0; j <= 75; j++) {
  6121   001988  0E00               	movlw	0
  6122   00198A  6E30               	movwf	(motor_response@j+1)^0,c
  6123   00198C  0E00               	movlw	0
  6124   00198E  6E2F               	movwf	motor_response@j^0,c
  6125   001990  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6126   001992  EFD4  F00C         	goto	u2961
  6127   001996  5030               	movf	(motor_response@j+1)^0,w,c
  6128   001998  E109               	bnz	u2960
  6129   00199A  0E4C               	movlw	76
  6130   00199C  5C2F               	subwf	motor_response@j^0,w,c
  6131   00199E  A0D8               	btfss	status,0,c
  6132   0019A0  EFD4  F00C         	goto	u2961
  6133   0019A4  EFD6  F00C         	goto	u2960
  6134   0019A8                     u2961:
  6135   0019A8  EFD8  F00C         	goto	l3604
  6136   0019AC                     u2960:
  6137   0019AC  EF13  F00D         	goto	l3612
  6138   0019B0                     l3604:
  6139                           
  6140                           ;color.c: 306:                 turnLeft(mL, mR);
  6141   0019B0  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6142   0019B4  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6143   0019B8  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6144   0019BC  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6145   0019C0  EC56  F01B         	call	_turnLeft	;wreg free
  6146   0019C4                     
  6147                           ;color.c: 307:                 _delay((unsigned long)((30)*(64000000/4000.0)));
  6148   0019C4  0E03               	movlw	3
  6149   0019C6  6E2E               	movwf	(??_motor_response+1)^0,c
  6150   0019C8  0E70               	movlw	112
  6151   0019CA  6E2D               	movwf	??_motor_response^0,c
  6152   0019CC  0E5C               	movlw	92
  6153   0019CE                     u3667:
  6154   0019CE  2EE8               	decfsz	wreg,f,c
  6155   0019D0  D7FE               	bra	u3667
  6156   0019D2  2E2D               	decfsz	??_motor_response^0,f,c
  6157   0019D4  D7FC               	bra	u3667
  6158   0019D6  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6159   0019D8  D7FA               	bra	u3667
  6160   0019DA  D000               	nop2	
  6161   0019DC                     
  6162                           ;color.c: 308:                 norm_stop(mL, mR);
  6163   0019DC  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6164   0019E0  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6165   0019E4  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6166   0019E8  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6167   0019EC  EC26  F01D         	call	_norm_stop	;wreg free
  6168                           
  6169                           ;color.c: 309:                 _delay((unsigned long)((60)*(64000000/4000.0)));
  6170   0019F0  0E05               	movlw	5
  6171   0019F2  6E2E               	movwf	(??_motor_response+1)^0,c
  6172   0019F4  0EDF               	movlw	223
  6173   0019F6  6E2D               	movwf	??_motor_response^0,c
  6174   0019F8  0EBC               	movlw	188
  6175   0019FA                     u3677:
  6176   0019FA  2EE8               	decfsz	wreg,f,c
  6177   0019FC  D7FE               	bra	u3677
  6178   0019FE  2E2D               	decfsz	??_motor_response^0,f,c
  6179   001A00  D7FC               	bra	u3677
  6180   001A02  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6181   001A04  D7FA               	bra	u3677
  6182   001A06                     
  6183                           ;color.c: 310:             }
  6184   001A06  4A2F               	infsnz	motor_response@j^0,f,c
  6185   001A08  2A30               	incf	(motor_response@j+1)^0,f,c
  6186   001A0A  BE30               	btfsc	(motor_response@j+1)^0,7,c
  6187   001A0C  EF11  F00D         	goto	u2971
  6188   001A10  5030               	movf	(motor_response@j+1)^0,w,c
  6189   001A12  E109               	bnz	u2970
  6190   001A14  0E4C               	movlw	76
  6191   001A16  5C2F               	subwf	motor_response@j^0,w,c
  6192   001A18  A0D8               	btfss	status,0,c
  6193   001A1A  EF11  F00D         	goto	u2971
  6194   001A1E  EF13  F00D         	goto	u2970
  6195   001A22                     u2971:
  6196   001A22  EFD8  F00C         	goto	l3604
  6197   001A26                     u2970:
  6198   001A26                     l3612:
  6199                           
  6200                           ;color.c: 311:             turnLeft(mL, mR);
  6201   001A26  C029  F01C         	movff	motor_response@mL,turnLeft@mL
  6202   001A2A  C02A  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  6203   001A2E  C02B  F01E         	movff	motor_response@mR,turnLeft@mR
  6204   001A32  C02C  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  6205   001A36  EC56  F01B         	call	_turnLeft	;wreg free
  6206   001A3A                     
  6207                           ;color.c: 312:             _delay((unsigned long)((385)*(64000000/4000.0)));
  6208   001A3A  0E20               	movlw	32
  6209   001A3C  6E2E               	movwf	(??_motor_response+1)^0,c
  6210   001A3E  0E40               	movlw	64
  6211   001A40  6E2D               	movwf	??_motor_response^0,c
  6212   001A42  0EE9               	movlw	233
  6213   001A44                     u3687:
  6214   001A44  2EE8               	decfsz	wreg,f,c
  6215   001A46  D7FE               	bra	u3687
  6216   001A48  2E2D               	decfsz	??_motor_response^0,f,c
  6217   001A4A  D7FC               	bra	u3687
  6218   001A4C  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6219   001A4E  D7FA               	bra	u3687
  6220   001A50  F000               	nop	
  6221   001A52                     
  6222                           ;color.c: 313:             norm_stop(mL, mR);
  6223   001A52  C029  F01C         	movff	motor_response@mL,norm_stop@mL
  6224   001A56  C02A  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  6225   001A5A  C02B  F01E         	movff	motor_response@mR,norm_stop@mR
  6226   001A5E  C02C  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  6227   001A62  EC26  F01D         	call	_norm_stop	;wreg free
  6228                           
  6229                           ;color.c: 314:             _delay((unsigned long)((1000)*(64000000/4000.0)));
  6230   001A66  0E52               	movlw	82
  6231   001A68  6E2E               	movwf	(??_motor_response+1)^0,c
  6232   001A6A  0E2B               	movlw	43
  6233   001A6C  6E2D               	movwf	??_motor_response^0,c
  6234   001A6E  0E00               	movlw	0
  6235   001A70                     u3697:
  6236   001A70  2EE8               	decfsz	wreg,f,c
  6237   001A72  D7FE               	bra	u3697
  6238   001A74  2E2D               	decfsz	??_motor_response^0,f,c
  6239   001A76  D7FC               	bra	u3697
  6240   001A78  2E2E               	decfsz	(??_motor_response+1)^0,f,c
  6241   001A7A  D7FA               	bra	u3697
  6242   001A7C  D000               	nop2	
  6243   001A7E                     
  6244                           ;color.c: 315:             motor_return = 1;
  6245   001A7E  0E01               	movlw	1
  6246   001A80  0100               	movlb	0	; () banked
  6247   001A82  6FDA               	movwf	_motor_return& (0+255),b
  6248   001A84                     
  6249                           ; BSR set to: 0
  6250                           ;color.c: 316:             buggy_step--;
  6251   001A84  0651               	decf	_buggy_step^0,f,c
  6252   001A86  A0D8               	btfss	status,0,c
  6253   001A88  0652               	decf	(_buggy_step+1)^0,f,c
  6254   001A8A                     
  6255                           ; BSR set to: 0
  6256                           ;color.c: 317:             lost_ctr = 0;
  6257   001A8A  0E00               	movlw	0
  6258   001A8C  6E50               	movwf	(_lost_ctr+1)^0,c
  6259   001A8E  0E00               	movlw	0
  6260   001A90  6E4F               	movwf	_lost_ctr^0,c
  6261   001A92                     
  6262                           ; BSR set to: 0
  6263                           ;color.c: 318:             LATHbits.LATH3 = 0;
  6264   001A92  9680               	bcf	128,3,c	;volatile
  6265   001A94                     
  6266                           ; BSR set to: 0
  6267                           ;color.c: 319:             LATDbits.LATD7 = 1;
  6268   001A94  8E7C               	bsf	124,7,c	;volatile
  6269   001A96                     
  6270                           ; BSR set to: 0
  6271                           ;color.c: 320:             return 9;
  6272   001A96  0E09               	movlw	9
  6273   001A98                     l167:
  6274   001A98  0012               	return		;funcret
  6275   001A9A                     __end_of_motor_response:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function _turnRight *****************
  6279 ;; Defined at:
  6280 ;;		line 157 in file "dc_motor.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6283 ;;		 -> main@mL(9), 
  6284 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6285 ;;		 -> main@mR(9), 
  6286 ;; Auto vars:     Size  Location     Type
  6287 ;;		None
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  1    wreg      void 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6300 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6301 ;;Total ram usage:        4 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; Hardware stack levels required when called: 8
  6304 ;; This function calls:
  6305 ;;		_setMotorPWM
  6306 ;; This function is called by:
  6307 ;;		_motor_response
  6308 ;;		_motor_retrace
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text22
  6313   00363A                     __ptext22:
  6314                           	callstack 0
  6315   00363A                     _turnRight:
  6316                           	callstack 21
  6317   00363A                     
  6318                           ;dc_motor.c: 157: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 158: {;dc_motor
      +                          .c: 159:     mL->power = 60;
  6319   00363A  C01C  FFD9         	movff	turnRight@mL,fsr2l
  6320   00363E  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  6321   003642  0E3C               	movlw	60
  6322   003644  6EDF               	movwf	indf2,c
  6323                           
  6324                           ;dc_motor.c: 160:     mR->power = 60;
  6325   003646  C01E  FFD9         	movff	turnRight@mR,fsr2l
  6326   00364A  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  6327   00364E  0E3C               	movlw	60
  6328   003650  6EDF               	movwf	indf2,c
  6329   003652                     
  6330                           ;dc_motor.c: 161:     mL->brakemode = 1;
  6331   003652  EE20 F002          	lfsr	2,2
  6332   003656  501C               	movf	turnRight@mL^0,w,c
  6333   003658  26D9               	addwf	fsr2l,f,c
  6334   00365A  501D               	movf	(turnRight@mL+1)^0,w,c
  6335   00365C  22DA               	addwfc	fsr2h,f,c
  6336   00365E  0E01               	movlw	1
  6337   003660  6EDF               	movwf	indf2,c
  6338   003662                     
  6339                           ;dc_motor.c: 162:     mR->brakemode = 1;
  6340   003662  EE20 F002          	lfsr	2,2
  6341   003666  501E               	movf	turnRight@mR^0,w,c
  6342   003668  26D9               	addwf	fsr2l,f,c
  6343   00366A  501F               	movf	(turnRight@mR+1)^0,w,c
  6344   00366C  22DA               	addwfc	fsr2h,f,c
  6345   00366E  0E01               	movlw	1
  6346   003670  6EDF               	movwf	indf2,c
  6347   003672                     
  6348                           ;dc_motor.c: 163:     mR->direction = 0;
  6349   003672  EE20 F001          	lfsr	2,1
  6350   003676  501E               	movf	turnRight@mR^0,w,c
  6351   003678  26D9               	addwf	fsr2l,f,c
  6352   00367A  501F               	movf	(turnRight@mR+1)^0,w,c
  6353   00367C  22DA               	addwfc	fsr2h,f,c
  6354   00367E  0E00               	movlw	0
  6355   003680  6EDF               	movwf	indf2,c
  6356   003682                     
  6357                           ;dc_motor.c: 164:     mL->direction = 1;
  6358   003682  EE20 F001          	lfsr	2,1
  6359   003686  501C               	movf	turnRight@mL^0,w,c
  6360   003688  26D9               	addwf	fsr2l,f,c
  6361   00368A  501D               	movf	(turnRight@mL+1)^0,w,c
  6362   00368C  22DA               	addwfc	fsr2h,f,c
  6363   00368E  0E01               	movlw	1
  6364   003690  6EDF               	movwf	indf2,c
  6365   003692                     
  6366                           ;dc_motor.c: 165:     setMotorPWM(mL);
  6367   003692  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  6368   003696  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  6369   00369A  ECA2  F017         	call	_setMotorPWM	;wreg free
  6370   00369E                     
  6371                           ;dc_motor.c: 166:     setMotorPWM(mR);
  6372   00369E  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  6373   0036A2  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  6374   0036A6  ECA2  F017         	call	_setMotorPWM	;wreg free
  6375   0036AA  0012               	return		;funcret
  6376   0036AC                     __end_of_turnRight:
  6377                           	callstack 0
  6378                           
  6379 ;; *************** function _turnPrep *****************
  6380 ;; Defined at:
  6381 ;;		line 277 in file "dc_motor.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  mL              2   32[COMRAM] PTR struct DC_motor
  6384 ;;		 -> main@mL(9), 
  6385 ;;  mR              2   34[COMRAM] PTR struct DC_motor
  6386 ;;		 -> main@mR(9), 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6401 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6402 ;;Total ram usage:        6 bytes
  6403 ;; Hardware stack levels used: 1
  6404 ;; Hardware stack levels required when called: 9
  6405 ;; This function calls:
  6406 ;;		_norm_stop
  6407 ;;		_reverse
  6408 ;; This function is called by:
  6409 ;;		_motor_response
  6410 ;;		_motor_retrace
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text23
  6415   0037F2                     __ptext23:
  6416                           	callstack 0
  6417   0037F2                     _turnPrep:
  6418                           	callstack 20
  6419   0037F2                     
  6420                           ;dc_motor.c: 278:         reverse(mL, mR);
  6421   0037F2  C021  F01C         	movff	turnPrep@mL,reverse@mL
  6422   0037F6  C022  F01D         	movff	turnPrep@mL+1,reverse@mL+1
  6423   0037FA  C023  F01E         	movff	turnPrep@mR,reverse@mR
  6424   0037FE  C024  F01F         	movff	turnPrep@mR+1,reverse@mR+1
  6425   003802  ECDA  F018         	call	_reverse	;wreg free
  6426   003806                     
  6427                           ;dc_motor.c: 279:         _delay((unsigned long)((600)*(64000000/4000.0)));
  6428   003806  0E31               	movlw	49
  6429   003808  6E26               	movwf	(??_turnPrep+1)^0,c
  6430   00380A  0EB4               	movlw	180
  6431   00380C  6E25               	movwf	??_turnPrep^0,c
  6432   00380E  0E66               	movlw	102
  6433   003810                     u3707:
  6434   003810  2EE8               	decfsz	wreg,f,c
  6435   003812  D7FE               	bra	u3707
  6436   003814  2E25               	decfsz	??_turnPrep^0,f,c
  6437   003816  D7FC               	bra	u3707
  6438   003818  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6439   00381A  D7FA               	bra	u3707
  6440   00381C                     
  6441                           ;dc_motor.c: 280:         norm_stop(mL, mR);
  6442   00381C  C021  F01C         	movff	turnPrep@mL,norm_stop@mL
  6443   003820  C022  F01D         	movff	turnPrep@mL+1,norm_stop@mL+1
  6444   003824  C023  F01E         	movff	turnPrep@mR,norm_stop@mR
  6445   003828  C024  F01F         	movff	turnPrep@mR+1,norm_stop@mR+1
  6446   00382C  EC26  F01D         	call	_norm_stop	;wreg free
  6447                           
  6448                           ;dc_motor.c: 281:         _delay((unsigned long)((300)*(64000000/4000.0)));
  6449   003830  0E19               	movlw	25
  6450   003832  6E26               	movwf	(??_turnPrep+1)^0,c
  6451   003834  0E5A               	movlw	90
  6452   003836  6E25               	movwf	??_turnPrep^0,c
  6453   003838  0EB2               	movlw	178
  6454   00383A                     u3717:
  6455   00383A  2EE8               	decfsz	wreg,f,c
  6456   00383C  D7FE               	bra	u3717
  6457   00383E  2E25               	decfsz	??_turnPrep^0,f,c
  6458   003840  D7FC               	bra	u3717
  6459   003842  2E26               	decfsz	(??_turnPrep+1)^0,f,c
  6460   003844  D7FA               	bra	u3717
  6461   003846  0012               	return		;funcret
  6462   003848                     __end_of_turnPrep:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _reverse *****************
  6466 ;; Defined at:
  6467 ;;		line 251 in file "dc_motor.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6470 ;;		 -> main@mL(9), 
  6471 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6472 ;;		 -> main@mR(9), 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;		None
  6475 ;; Return value:  Size  Location     Type
  6476 ;;                  1    wreg      void 
  6477 ;; Registers used:
  6478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6479 ;; Tracked objects:
  6480 ;;		On entry : 0/0
  6481 ;;		On exit  : 0/0
  6482 ;;		Unchanged: 0/0
  6483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6487 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6488 ;;Total ram usage:        5 bytes
  6489 ;; Hardware stack levels used: 1
  6490 ;; Hardware stack levels required when called: 8
  6491 ;; This function calls:
  6492 ;;		_setMotorPWM
  6493 ;; This function is called by:
  6494 ;;		_motor_response
  6495 ;;		_turnPrep
  6496 ;; This function uses a non-reentrant model
  6497 ;;
  6498                           
  6499                           	psect	text24
  6500   0031B4                     __ptext24:
  6501                           	callstack 0
  6502   0031B4                     _reverse:
  6503                           	callstack 20
  6504   0031B4                     
  6505                           ;dc_motor.c: 251: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 252: {;dc_motor.c
      +                          : 253:     mL->power = 5;
  6506   0031B4  C01C  FFD9         	movff	reverse@mL,fsr2l
  6507   0031B8  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6508   0031BC  0E05               	movlw	5
  6509   0031BE  6EDF               	movwf	indf2,c
  6510                           
  6511                           ;dc_motor.c: 254:     mR->power = 5;
  6512   0031C0  C01E  FFD9         	movff	reverse@mR,fsr2l
  6513   0031C4  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6514   0031C8  0E05               	movlw	5
  6515   0031CA  6EDF               	movwf	indf2,c
  6516   0031CC                     
  6517                           ;dc_motor.c: 255:     mR->direction = 0;
  6518   0031CC  EE20 F001          	lfsr	2,1
  6519   0031D0  501E               	movf	reverse@mR^0,w,c
  6520   0031D2  26D9               	addwf	fsr2l,f,c
  6521   0031D4  501F               	movf	(reverse@mR+1)^0,w,c
  6522   0031D6  22DA               	addwfc	fsr2h,f,c
  6523   0031D8  0E00               	movlw	0
  6524   0031DA  6EDF               	movwf	indf2,c
  6525   0031DC                     
  6526                           ;dc_motor.c: 256:     mL->direction = 0;
  6527   0031DC  EE20 F001          	lfsr	2,1
  6528   0031E0  501C               	movf	reverse@mL^0,w,c
  6529   0031E2  26D9               	addwf	fsr2l,f,c
  6530   0031E4  501D               	movf	(reverse@mL+1)^0,w,c
  6531   0031E6  22DA               	addwfc	fsr2h,f,c
  6532   0031E8  0E00               	movlw	0
  6533   0031EA  6EDF               	movwf	indf2,c
  6534   0031EC                     
  6535                           ;dc_motor.c: 257:     mL->brakemode = 1;
  6536   0031EC  EE20 F002          	lfsr	2,2
  6537   0031F0  501C               	movf	reverse@mL^0,w,c
  6538   0031F2  26D9               	addwf	fsr2l,f,c
  6539   0031F4  501D               	movf	(reverse@mL+1)^0,w,c
  6540   0031F6  22DA               	addwfc	fsr2h,f,c
  6541   0031F8  0E01               	movlw	1
  6542   0031FA  6EDF               	movwf	indf2,c
  6543   0031FC                     
  6544                           ;dc_motor.c: 258:     mR->brakemode = 1;
  6545   0031FC  EE20 F002          	lfsr	2,2
  6546   003200  501E               	movf	reverse@mR^0,w,c
  6547   003202  26D9               	addwf	fsr2l,f,c
  6548   003204  501F               	movf	(reverse@mR+1)^0,w,c
  6549   003206  22DA               	addwfc	fsr2h,f,c
  6550   003208  0E01               	movlw	1
  6551   00320A  6EDF               	movwf	indf2,c
  6552                           
  6553                           ;dc_motor.c: 259:     while (mL->power <= 20 && mR->power <=20)
  6554   00320C  EF25  F019         	goto	l696
  6555   003210                     l2830:
  6556                           
  6557                           ;dc_motor.c: 260:     {;dc_motor.c: 261:         mL->power++;
  6558   003210  C01C  FFD9         	movff	reverse@mL,fsr2l
  6559   003214  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6560   003218  2ADF               	incf	indf2,f,c
  6561                           
  6562                           ;dc_motor.c: 262:         mR->power++;
  6563   00321A  C01E  FFD9         	movff	reverse@mR,fsr2l
  6564   00321E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6565   003222  2ADF               	incf	indf2,f,c
  6566   003224                     
  6567                           ;dc_motor.c: 263:         _delay((unsigned long)((10)*(64000000/4000.0)));
  6568   003224  0ED0               	movlw	208
  6569   003226  6E20               	movwf	??_reverse^0,c
  6570   003228  0ECA               	movlw	202
  6571   00322A                     u3727:
  6572   00322A  2EE8               	decfsz	wreg,f,c
  6573   00322C  D7FE               	bra	u3727
  6574   00322E  2E20               	decfsz	??_reverse^0,f,c
  6575   003230  D7FC               	bra	u3727
  6576   003232                     
  6577                           ;dc_motor.c: 264:         setMotorPWM(mL);
  6578   003232  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6579   003236  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6580   00323A  ECA2  F017         	call	_setMotorPWM	;wreg free
  6581   00323E                     
  6582                           ;dc_motor.c: 265:         setMotorPWM(mR);
  6583   00323E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6584   003242  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6585   003246  ECA2  F017         	call	_setMotorPWM	;wreg free
  6586   00324A                     l696:
  6587                           
  6588                           ;dc_motor.c: 259:     while (mL->power <= 20 && mR->power <=20)
  6589   00324A  C01C  FFD9         	movff	reverse@mL,fsr2l
  6590   00324E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6591   003252  0E15               	movlw	21
  6592   003254  60DF               	cpfslt	indf2,c
  6593   003256  EF2F  F019         	goto	u1741
  6594   00325A  EF31  F019         	goto	u1740
  6595   00325E                     u1741:
  6596   00325E  EF3D  F019         	goto	l2840
  6597   003262                     u1740:
  6598   003262  C01E  FFD9         	movff	reverse@mR,fsr2l
  6599   003266  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6600   00326A  0E14               	movlw	20
  6601   00326C  64DF               	cpfsgt	indf2,c
  6602   00326E  EF3B  F019         	goto	u1751
  6603   003272  EF3D  F019         	goto	u1750
  6604   003276                     u1751:
  6605   003276  EF08  F019         	goto	l2830
  6606   00327A                     u1750:
  6607   00327A                     l2840:
  6608                           
  6609                           ;dc_motor.c: 267:     mL->power = 20;
  6610   00327A  C01C  FFD9         	movff	reverse@mL,fsr2l
  6611   00327E  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  6612   003282  0E14               	movlw	20
  6613   003284  6EDF               	movwf	indf2,c
  6614                           
  6615                           ;dc_motor.c: 268:     mR->power = 20;
  6616   003286  C01E  FFD9         	movff	reverse@mR,fsr2l
  6617   00328A  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  6618   00328E  0E14               	movlw	20
  6619   003290  6EDF               	movwf	indf2,c
  6620   003292                     
  6621                           ;dc_motor.c: 269:     setMotorPWM(mL);
  6622   003292  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  6623   003296  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  6624   00329A  ECA2  F017         	call	_setMotorPWM	;wreg free
  6625   00329E                     
  6626                           ;dc_motor.c: 270:     setMotorPWM(mR);
  6627   00329E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  6628   0032A2  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  6629   0032A6  ECA2  F017         	call	_setMotorPWM	;wreg free
  6630   0032AA  0012               	return		;funcret
  6631   0032AC                     __end_of_reverse:
  6632                           	callstack 0
  6633                           
  6634 ;; *************** function _norm_stop *****************
  6635 ;; Defined at:
  6636 ;;		line 131 in file "dc_motor.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6639 ;;		 -> main@mL(9), 
  6640 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6641 ;;		 -> main@mR(9), 
  6642 ;; Auto vars:     Size  Location     Type
  6643 ;;		None
  6644 ;; Return value:  Size  Location     Type
  6645 ;;                  1    wreg      void 
  6646 ;; Registers used:
  6647 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6648 ;; Tracked objects:
  6649 ;;		On entry : 0/0
  6650 ;;		On exit  : 0/0
  6651 ;;		Unchanged: 0/0
  6652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6653 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6657 ;;Total ram usage:        4 bytes
  6658 ;; Hardware stack levels used: 1
  6659 ;; Hardware stack levels required when called: 8
  6660 ;; This function calls:
  6661 ;;		_setMotorPWM
  6662 ;; This function is called by:
  6663 ;;		_rangeCalibrate
  6664 ;;		_motor_response
  6665 ;;		_motor_retrace
  6666 ;;		_main
  6667 ;;		_turnPrep
  6668 ;; This function uses a non-reentrant model
  6669 ;;
  6670                           
  6671                           	psect	text25
  6672   003A4C                     __ptext25:
  6673                           	callstack 0
  6674   003A4C                     _norm_stop:
  6675                           	callstack 21
  6676   003A4C                     
  6677                           ;dc_motor.c: 131: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor
      +                          .c: 133:     mL->power = 0;
  6678   003A4C  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  6679   003A50  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  6680   003A54  0E00               	movlw	0
  6681   003A56  6EDF               	movwf	indf2,c
  6682                           
  6683                           ;dc_motor.c: 134:     mR->power = 0;
  6684   003A58  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  6685   003A5C  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  6686   003A60  0E00               	movlw	0
  6687   003A62  6EDF               	movwf	indf2,c
  6688   003A64                     
  6689                           ;dc_motor.c: 135:     setMotorPWM(mL);
  6690   003A64  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  6691   003A68  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  6692   003A6C  ECA2  F017         	call	_setMotorPWM	;wreg free
  6693   003A70                     
  6694                           ;dc_motor.c: 136:     setMotorPWM(mR);
  6695   003A70  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  6696   003A74  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  6697   003A78  ECA2  F017         	call	_setMotorPWM	;wreg free
  6698   003A7C  0012               	return		;funcret
  6699   003A7E                     __end_of_norm_stop:
  6700                           	callstack 0
  6701                           
  6702 ;; *************** function _turnLeft *****************
  6703 ;; Defined at:
  6704 ;;		line 142 in file "dc_motor.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  6707 ;;		 -> main@mL(9), 
  6708 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  6709 ;;		 -> main@mR(9), 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;		None
  6712 ;; Return value:  Size  Location     Type
  6713 ;;                  1    wreg      void 
  6714 ;; Registers used:
  6715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6716 ;; Tracked objects:
  6717 ;;		On entry : 0/0
  6718 ;;		On exit  : 0/0
  6719 ;;		Unchanged: 0/0
  6720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6721 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6725 ;;Total ram usage:        4 bytes
  6726 ;; Hardware stack levels used: 1
  6727 ;; Hardware stack levels required when called: 8
  6728 ;; This function calls:
  6729 ;;		_setMotorPWM
  6730 ;; This function is called by:
  6731 ;;		_motor_response
  6732 ;;		_motor_retrace
  6733 ;;		_main
  6734 ;; This function uses a non-reentrant model
  6735 ;;
  6736                           
  6737                           	psect	text26
  6738   0036AC                     __ptext26:
  6739                           	callstack 0
  6740   0036AC                     _turnLeft:
  6741                           	callstack 22
  6742   0036AC                     
  6743                           ;dc_motor.c: 142: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 143: {;dc_motor.
      +                          c: 144:     mL->power = 60;
  6744   0036AC  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  6745   0036B0  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  6746   0036B4  0E3C               	movlw	60
  6747   0036B6  6EDF               	movwf	indf2,c
  6748                           
  6749                           ;dc_motor.c: 145:     mR->power = 60;
  6750   0036B8  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  6751   0036BC  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  6752   0036C0  0E3C               	movlw	60
  6753   0036C2  6EDF               	movwf	indf2,c
  6754   0036C4                     
  6755                           ;dc_motor.c: 146:     mL->brakemode = 1;
  6756   0036C4  EE20 F002          	lfsr	2,2
  6757   0036C8  501C               	movf	turnLeft@mL^0,w,c
  6758   0036CA  26D9               	addwf	fsr2l,f,c
  6759   0036CC  501D               	movf	(turnLeft@mL+1)^0,w,c
  6760   0036CE  22DA               	addwfc	fsr2h,f,c
  6761   0036D0  0E01               	movlw	1
  6762   0036D2  6EDF               	movwf	indf2,c
  6763   0036D4                     
  6764                           ;dc_motor.c: 147:     mR->brakemode = 1;
  6765   0036D4  EE20 F002          	lfsr	2,2
  6766   0036D8  501E               	movf	turnLeft@mR^0,w,c
  6767   0036DA  26D9               	addwf	fsr2l,f,c
  6768   0036DC  501F               	movf	(turnLeft@mR+1)^0,w,c
  6769   0036DE  22DA               	addwfc	fsr2h,f,c
  6770   0036E0  0E01               	movlw	1
  6771   0036E2  6EDF               	movwf	indf2,c
  6772   0036E4                     
  6773                           ;dc_motor.c: 148:     mL->direction = 0;
  6774   0036E4  EE20 F001          	lfsr	2,1
  6775   0036E8  501C               	movf	turnLeft@mL^0,w,c
  6776   0036EA  26D9               	addwf	fsr2l,f,c
  6777   0036EC  501D               	movf	(turnLeft@mL+1)^0,w,c
  6778   0036EE  22DA               	addwfc	fsr2h,f,c
  6779   0036F0  0E00               	movlw	0
  6780   0036F2  6EDF               	movwf	indf2,c
  6781   0036F4                     
  6782                           ;dc_motor.c: 149:     mR->direction = 1;
  6783   0036F4  EE20 F001          	lfsr	2,1
  6784   0036F8  501E               	movf	turnLeft@mR^0,w,c
  6785   0036FA  26D9               	addwf	fsr2l,f,c
  6786   0036FC  501F               	movf	(turnLeft@mR+1)^0,w,c
  6787   0036FE  22DA               	addwfc	fsr2h,f,c
  6788   003700  0E01               	movlw	1
  6789   003702  6EDF               	movwf	indf2,c
  6790   003704                     
  6791                           ;dc_motor.c: 150:     setMotorPWM(mL);
  6792   003704  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  6793   003708  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  6794   00370C  ECA2  F017         	call	_setMotorPWM	;wreg free
  6795   003710                     
  6796                           ;dc_motor.c: 151:     setMotorPWM(mR);
  6797   003710  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  6798   003714  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  6799   003718  ECA2  F017         	call	_setMotorPWM	;wreg free
  6800   00371C  0012               	return		;funcret
  6801   00371E                     __end_of_turnLeft:
  6802                           	callstack 0
  6803                           
  6804 ;; *************** function _setMotorPWM *****************
  6805 ;; Defined at:
  6806 ;;		line 60 in file "dc_motor.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  m               2   21[COMRAM] PTR struct DC_motor
  6809 ;;		 -> main@mR(9), main@mL(9), 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  negDuty         1   26[COMRAM] unsigned char 
  6812 ;;  posDuty         1   25[COMRAM] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;                  1    wreg      void 
  6815 ;; Registers used:
  6816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6824 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6826 ;;Total ram usage:        6 bytes
  6827 ;; Hardware stack levels used: 1
  6828 ;; Hardware stack levels required when called: 7
  6829 ;; This function calls:
  6830 ;;		___lwdiv
  6831 ;;		___wmul
  6832 ;; This function is called by:
  6833 ;;		_norm_stop
  6834 ;;		_turnLeft
  6835 ;;		_turnRight
  6836 ;;		_fullSpeedAhead
  6837 ;;		_wallSmash
  6838 ;;		_reverse
  6839 ;;		_decelerate
  6840 ;;		_slowSearch
  6841 ;;		_uturn
  6842 ;; This function uses a non-reentrant model
  6843 ;;
  6844                           
  6845                           	psect	text27
  6846   002F44                     __ptext27:
  6847                           	callstack 0
  6848   002F44                     _setMotorPWM:
  6849                           	callstack 22
  6850   002F44                     
  6851                           ;dc_motor.c: 60: void setMotorPWM(DC_motor *m);dc_motor.c: 61: {;dc_motor.c: 62:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 64:     if(m->brakemode) {
  6852   002F44  EE20 F002          	lfsr	2,2
  6853   002F48  5016               	movf	setMotorPWM@m^0,w,c
  6854   002F4A  26D9               	addwf	fsr2l,f,c
  6855   002F4C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6856   002F4E  22DA               	addwfc	fsr2h,f,c
  6857   002F50  50DF               	movf	indf2,w,c
  6858   002F52  B4D8               	btfsc	status,2,c
  6859   002F54  EFAE  F017         	goto	u1721
  6860   002F58  EFB0  F017         	goto	u1720
  6861   002F5C                     u1721:
  6862   002F5C  EFE4  F017         	goto	l2768
  6863   002F60                     u1720:
  6864   002F60                     
  6865                           ;dc_motor.c: 65:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  6866   002F60  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6867   002F64  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6868   002F68  50DF               	movf	indf2,w,c
  6869   002F6A  6E18               	movwf	??_setMotorPWM^0,c
  6870   002F6C  5018               	movf	??_setMotorPWM^0,w,c
  6871   002F6E  6E09               	movwf	___wmul@multiplier^0,c
  6872   002F70  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6873   002F72  EE20 F003          	lfsr	2,3
  6874   002F76  5016               	movf	setMotorPWM@m^0,w,c
  6875   002F78  26D9               	addwf	fsr2l,f,c
  6876   002F7A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6877   002F7C  22DA               	addwfc	fsr2h,f,c
  6878   002F7E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6879   002F82  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6880   002F86  ECBF  F01D         	call	___wmul	;wreg free
  6881   002F8A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6882   002F8E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6883   002F92  0E00               	movlw	0
  6884   002F94  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6885   002F96  0E64               	movlw	100
  6886   002F98  6E11               	movwf	___lwdiv@divisor^0,c
  6887   002F9A  ECE3  F01A         	call	___lwdiv	;wreg free
  6888   002F9E  EE20 F003          	lfsr	2,3
  6889   002FA2  5016               	movf	setMotorPWM@m^0,w,c
  6890   002FA4  26D9               	addwf	fsr2l,f,c
  6891   002FA6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6892   002FA8  22DA               	addwfc	fsr2h,f,c
  6893   002FAA  50DF               	movf	indf2,w,c
  6894   002FAC  6E19               	movwf	(??_setMotorPWM+1)^0,c
  6895   002FAE  500F               	movf	?___lwdiv^0,w,c
  6896   002FB0  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  6897   002FB2  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6898   002FB4                     
  6899                           ;dc_motor.c: 66:         negDuty=m->PWMperiod;
  6900   002FB4  EE20 F003          	lfsr	2,3
  6901   002FB8  5016               	movf	setMotorPWM@m^0,w,c
  6902   002FBA  26D9               	addwf	fsr2l,f,c
  6903   002FBC  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6904   002FBE  22DA               	addwfc	fsr2h,f,c
  6905   002FC0  50DF               	movf	indf2,w,c
  6906   002FC2  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6907                           
  6908                           ;dc_motor.c: 67:     }
  6909   002FC4  EF07  F018         	goto	l2772
  6910   002FC8                     l2768:
  6911                           
  6912                           ;dc_motor.c: 69:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  6913   002FC8  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  6914   002FCC  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  6915   002FD0  50DF               	movf	indf2,w,c
  6916   002FD2  6E18               	movwf	??_setMotorPWM^0,c
  6917   002FD4  5018               	movf	??_setMotorPWM^0,w,c
  6918   002FD6  6E09               	movwf	___wmul@multiplier^0,c
  6919   002FD8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  6920   002FDA  EE20 F003          	lfsr	2,3
  6921   002FDE  5016               	movf	setMotorPWM@m^0,w,c
  6922   002FE0  26D9               	addwf	fsr2l,f,c
  6923   002FE2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6924   002FE4  22DA               	addwfc	fsr2h,f,c
  6925   002FE6  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  6926   002FEA  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  6927   002FEE  ECBF  F01D         	call	___wmul	;wreg free
  6928   002FF2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  6929   002FF6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  6930   002FFA  0E00               	movlw	0
  6931   002FFC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  6932   002FFE  0E64               	movlw	100
  6933   003000  6E11               	movwf	___lwdiv@divisor^0,c
  6934   003002  ECE3  F01A         	call	___lwdiv	;wreg free
  6935   003006  500F               	movf	?___lwdiv^0,w,c
  6936   003008  6E1A               	movwf	setMotorPWM@posDuty^0,c
  6937   00300A                     
  6938                           ;dc_motor.c: 70:         negDuty=0;
  6939   00300A  0E00               	movlw	0
  6940   00300C  6E1B               	movwf	setMotorPWM@negDuty^0,c
  6941   00300E                     l2772:
  6942                           
  6943                           ;dc_motor.c: 73:     if (m->direction) {
  6944   00300E  EE20 F001          	lfsr	2,1
  6945   003012  5016               	movf	setMotorPWM@m^0,w,c
  6946   003014  26D9               	addwf	fsr2l,f,c
  6947   003016  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6948   003018  22DA               	addwfc	fsr2h,f,c
  6949   00301A  50DF               	movf	indf2,w,c
  6950   00301C  B4D8               	btfsc	status,2,c
  6951   00301E  EF13  F018         	goto	u1731
  6952   003022  EF15  F018         	goto	u1730
  6953   003026                     u1731:
  6954   003026  EF37  F018         	goto	l2776
  6955   00302A                     u1730:
  6956   00302A                     
  6957                           ;dc_motor.c: 74:         *(m->posDutyHighByte)=posDuty;
  6958   00302A  EE20 F005          	lfsr	2,5
  6959   00302E  5016               	movf	setMotorPWM@m^0,w,c
  6960   003030  26D9               	addwf	fsr2l,f,c
  6961   003032  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6962   003034  22DA               	addwfc	fsr2h,f,c
  6963   003036  CFDE F018          	movff	postinc2,??_setMotorPWM
  6964   00303A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6965   00303E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6966   003042  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6967   003046  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  6968                           
  6969                           ;dc_motor.c: 75:         *(m->negDutyHighByte)=negDuty;
  6970   00304A  EE20 F007          	lfsr	2,7
  6971   00304E  5016               	movf	setMotorPWM@m^0,w,c
  6972   003050  26D9               	addwf	fsr2l,f,c
  6973   003052  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6974   003054  22DA               	addwfc	fsr2h,f,c
  6975   003056  CFDE F018          	movff	postinc2,??_setMotorPWM
  6976   00305A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6977   00305E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6978   003062  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6979   003066  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6980                           
  6981                           ;dc_motor.c: 76:     } else {
  6982   00306A  EF57  F018         	goto	l648
  6983   00306E                     l2776:
  6984                           
  6985                           ;dc_motor.c: 77:         *(m->posDutyHighByte)=negDuty;
  6986   00306E  EE20 F005          	lfsr	2,5
  6987   003072  5016               	movf	setMotorPWM@m^0,w,c
  6988   003074  26D9               	addwf	fsr2l,f,c
  6989   003076  5017               	movf	(setMotorPWM@m+1)^0,w,c
  6990   003078  22DA               	addwfc	fsr2h,f,c
  6991   00307A  CFDE F018          	movff	postinc2,??_setMotorPWM
  6992   00307E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  6993   003082  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  6994   003086  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  6995   00308A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  6996                           
  6997                           ;dc_motor.c: 78:         *(m->negDutyHighByte)=posDuty;
  6998   00308E  EE20 F007          	lfsr	2,7
  6999   003092  5016               	movf	setMotorPWM@m^0,w,c
  7000   003094  26D9               	addwf	fsr2l,f,c
  7001   003096  5017               	movf	(setMotorPWM@m+1)^0,w,c
  7002   003098  22DA               	addwfc	fsr2h,f,c
  7003   00309A  CFDE F018          	movff	postinc2,??_setMotorPWM
  7004   00309E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  7005   0030A2  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  7006   0030A6  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  7007   0030AA  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  7008   0030AE                     l648:
  7009   0030AE  0012               	return		;funcret
  7010   0030B0                     __end_of_setMotorPWM:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function ___wmul *****************
  7014 ;; Defined at:
  7015 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  multiplier      2    8[COMRAM] unsigned int 
  7018 ;;  multiplicand    2   10[COMRAM] unsigned int 
  7019 ;; Auto vars:     Size  Location     Type
  7020 ;;  product         2   12[COMRAM] unsigned int 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  2    8[COMRAM] unsigned int 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, prodl, prodh
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7030 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7031 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7033 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7034 ;;Total ram usage:        6 bytes
  7035 ;; Hardware stack levels used: 1
  7036 ;; Hardware stack levels required when called: 6
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_setMotorPWM
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           	psect	text28
  7045   003B7E                     __ptext28:
  7046                           	callstack 0
  7047   003B7E                     ___wmul:
  7048                           	callstack 22
  7049   003B7E  5009               	movf	___wmul@multiplier^0,w,c
  7050   003B80  020B               	mulwf	___wmul@multiplicand^0,c
  7051   003B82  CFF3 F00D          	movff	prodl,___wmul@product
  7052   003B86  CFF4 F00E          	movff	prodh,___wmul@product+1
  7053   003B8A  5009               	movf	___wmul@multiplier^0,w,c
  7054   003B8C  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  7055   003B8E  50F3               	movf	243,w,c
  7056   003B90  260E               	addwf	(___wmul@product+1)^0,f,c
  7057   003B92  500A               	movf	(___wmul@multiplier+1)^0,w,c
  7058   003B94  020B               	mulwf	___wmul@multiplicand^0,c
  7059   003B96  50F3               	movf	243,w,c
  7060   003B98  260E               	addwf	(___wmul@product+1)^0,f,c
  7061   003B9A  C00D  F009         	movff	___wmul@product,?___wmul
  7062   003B9E  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  7063   003BA2  0012               	return		;funcret
  7064   003BA4                     __end_of___wmul:
  7065                           	callstack 0
  7066                           
  7067 ;; *************** function ___lwdiv *****************
  7068 ;; Defined at:
  7069 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  7070 ;; Parameters:    Size  Location     Type
  7071 ;;  dividend        2   14[COMRAM] unsigned int 
  7072 ;;  divisor         2   16[COMRAM] unsigned int 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  quotient        2   18[COMRAM] unsigned int 
  7075 ;;  counter         1   20[COMRAM] unsigned char 
  7076 ;; Return value:  Size  Location     Type
  7077 ;;                  2   14[COMRAM] unsigned int 
  7078 ;; Registers used:
  7079 ;;		wreg, status,2, status,0
  7080 ;; Tracked objects:
  7081 ;;		On entry : 0/0
  7082 ;;		On exit  : 0/0
  7083 ;;		Unchanged: 0/0
  7084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7085 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7086 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7088 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7089 ;;Total ram usage:        7 bytes
  7090 ;; Hardware stack levels used: 1
  7091 ;; Hardware stack levels required when called: 6
  7092 ;; This function calls:
  7093 ;;		Nothing
  7094 ;; This function is called by:
  7095 ;;		_setMotorPWM
  7096 ;; This function uses a non-reentrant model
  7097 ;;
  7098                           
  7099                           	psect	text29
  7100   0035C6                     __ptext29:
  7101                           	callstack 0
  7102   0035C6                     ___lwdiv:
  7103                           	callstack 22
  7104   0035C6  0E00               	movlw	0
  7105   0035C8  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  7106   0035CA  0E00               	movlw	0
  7107   0035CC  6E13               	movwf	___lwdiv@quotient^0,c
  7108   0035CE  5011               	movf	___lwdiv@divisor^0,w,c
  7109   0035D0  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  7110   0035D2  B4D8               	btfsc	status,2,c
  7111   0035D4  EFEE  F01A         	goto	u1651
  7112   0035D8  EFF0  F01A         	goto	u1650
  7113   0035DC                     u1651:
  7114   0035DC  EF18  F01B         	goto	l1201
  7115   0035E0                     u1650:
  7116   0035E0  0E01               	movlw	1
  7117   0035E2  6E15               	movwf	___lwdiv@counter^0,c
  7118   0035E4  EFF8  F01A         	goto	l2714
  7119   0035E8                     l2712:
  7120   0035E8  90D8               	bcf	status,0,c
  7121   0035EA  3611               	rlcf	___lwdiv@divisor^0,f,c
  7122   0035EC  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  7123   0035EE  2A15               	incf	___lwdiv@counter^0,f,c
  7124   0035F0                     l2714:
  7125   0035F0  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  7126   0035F2  EFFD  F01A         	goto	u1661
  7127   0035F6  EFFF  F01A         	goto	u1660
  7128   0035FA                     u1661:
  7129   0035FA  EFF4  F01A         	goto	l2712
  7130   0035FE                     u1660:
  7131   0035FE                     l2716:
  7132   0035FE  90D8               	bcf	status,0,c
  7133   003600  3613               	rlcf	___lwdiv@quotient^0,f,c
  7134   003602  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  7135   003604  5011               	movf	___lwdiv@divisor^0,w,c
  7136   003606  5C0F               	subwf	___lwdiv@dividend^0,w,c
  7137   003608  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7138   00360A  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  7139   00360C  A0D8               	btfss	status,0,c
  7140   00360E  EF0B  F01B         	goto	u1671
  7141   003612  EF0D  F01B         	goto	u1670
  7142   003616                     u1671:
  7143   003616  EF12  F01B         	goto	l2724
  7144   00361A                     u1670:
  7145   00361A  5011               	movf	___lwdiv@divisor^0,w,c
  7146   00361C  5E0F               	subwf	___lwdiv@dividend^0,f,c
  7147   00361E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  7148   003620  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  7149   003622  8013               	bsf	___lwdiv@quotient^0,0,c
  7150   003624                     l2724:
  7151   003624  90D8               	bcf	status,0,c
  7152   003626  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  7153   003628  3211               	rrcf	___lwdiv@divisor^0,f,c
  7154   00362A  2E15               	decfsz	___lwdiv@counter^0,f,c
  7155   00362C  EFFF  F01A         	goto	l2716
  7156   003630                     l1201:
  7157   003630  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  7158   003634  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  7159   003638  0012               	return		;funcret
  7160   00363A                     __end_of___lwdiv:
  7161                           	callstack 0
  7162                           
  7163 ;; *************** function ___flge *****************
  7164 ;; Defined at:
  7165 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  7166 ;; Parameters:    Size  Location     Type
  7167 ;;  ff1             4    8[COMRAM] unsigned int 
  7168 ;;  ff2             4   12[COMRAM] unsigned int 
  7169 ;; Auto vars:     Size  Location     Type
  7170 ;;		None
  7171 ;; Return value:  Size  Location     Type
  7172 ;;		None               void
  7173 ;; Registers used:
  7174 ;;		wreg, status,2, status,0
  7175 ;; Tracked objects:
  7176 ;;		On entry : 0/0
  7177 ;;		On exit  : 0/0
  7178 ;;		Unchanged: 0/0
  7179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7180 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7182 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7183 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7184 ;;Total ram usage:       12 bytes
  7185 ;; Hardware stack levels used: 1
  7186 ;; Hardware stack levels required when called: 6
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_motor_response
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text30
  7195   0030B0                     __ptext30:
  7196                           	callstack 0
  7197   0030B0                     ___flge:
  7198                           	callstack 23
  7199   0030B0  0E00               	movlw	0
  7200   0030B2  1409               	andwf	___flge@ff1^0,w,c
  7201   0030B4  6E11               	movwf	??___flge^0,c
  7202   0030B6  0E00               	movlw	0
  7203   0030B8  140A               	andwf	(___flge@ff1+1)^0,w,c
  7204   0030BA  6E12               	movwf	(??___flge+1)^0,c
  7205   0030BC  0E80               	movlw	128
  7206   0030BE  140B               	andwf	(___flge@ff1+2)^0,w,c
  7207   0030C0  6E13               	movwf	(??___flge+2)^0,c
  7208   0030C2  0E7F               	movlw	127
  7209   0030C4  140C               	andwf	(___flge@ff1+3)^0,w,c
  7210   0030C6  6E14               	movwf	(??___flge+3)^0,c
  7211   0030C8  5011               	movf	??___flge^0,w,c
  7212   0030CA  1012               	iorwf	(??___flge+1)^0,w,c
  7213   0030CC  1013               	iorwf	(??___flge+2)^0,w,c
  7214   0030CE  1014               	iorwf	(??___flge+3)^0,w,c
  7215   0030D0  A4D8               	btfss	status,2,c
  7216   0030D2  EF6D  F018         	goto	u2521
  7217   0030D6  EF6F  F018         	goto	u2520
  7218   0030DA                     u2521:
  7219   0030DA  EF77  F018         	goto	l3356
  7220   0030DE                     u2520:
  7221   0030DE  0E00               	movlw	0
  7222   0030E0  6E09               	movwf	___flge@ff1^0,c
  7223   0030E2  0E00               	movlw	0
  7224   0030E4  6E0A               	movwf	(___flge@ff1+1)^0,c
  7225   0030E6  0E00               	movlw	0
  7226   0030E8  6E0B               	movwf	(___flge@ff1+2)^0,c
  7227   0030EA  0E00               	movlw	0
  7228   0030EC  6E0C               	movwf	(___flge@ff1+3)^0,c
  7229   0030EE                     l3356:
  7230   0030EE  0E00               	movlw	0
  7231   0030F0  140D               	andwf	___flge@ff2^0,w,c
  7232   0030F2  6E11               	movwf	??___flge^0,c
  7233   0030F4  0E00               	movlw	0
  7234   0030F6  140E               	andwf	(___flge@ff2+1)^0,w,c
  7235   0030F8  6E12               	movwf	(??___flge+1)^0,c
  7236   0030FA  0E80               	movlw	128
  7237   0030FC  140F               	andwf	(___flge@ff2+2)^0,w,c
  7238   0030FE  6E13               	movwf	(??___flge+2)^0,c
  7239   003100  0E7F               	movlw	127
  7240   003102  1410               	andwf	(___flge@ff2+3)^0,w,c
  7241   003104  6E14               	movwf	(??___flge+3)^0,c
  7242   003106  5011               	movf	??___flge^0,w,c
  7243   003108  1012               	iorwf	(??___flge+1)^0,w,c
  7244   00310A  1013               	iorwf	(??___flge+2)^0,w,c
  7245   00310C  1014               	iorwf	(??___flge+3)^0,w,c
  7246   00310E  A4D8               	btfss	status,2,c
  7247   003110  EF8C  F018         	goto	u2531
  7248   003114  EF8E  F018         	goto	u2530
  7249   003118                     u2531:
  7250   003118  EF96  F018         	goto	l3360
  7251   00311C                     u2530:
  7252   00311C  0E00               	movlw	0
  7253   00311E  6E0D               	movwf	___flge@ff2^0,c
  7254   003120  0E00               	movlw	0
  7255   003122  6E0E               	movwf	(___flge@ff2+1)^0,c
  7256   003124  0E00               	movlw	0
  7257   003126  6E0F               	movwf	(___flge@ff2+2)^0,c
  7258   003128  0E00               	movlw	0
  7259   00312A  6E10               	movwf	(___flge@ff2+3)^0,c
  7260   00312C                     l3360:
  7261   00312C  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  7262   00312E  EF9B  F018         	goto	u2541
  7263   003132  EF9D  F018         	goto	u2540
  7264   003136                     u2541:
  7265   003136  EFA6  F018         	goto	l3364
  7266   00313A                     u2540:
  7267   00313A  6C09               	negf	___flge@ff1^0,c
  7268   00313C  1E0A               	comf	(___flge@ff1+1)^0,f,c
  7269   00313E  B0D8               	btfsc	status,0,c
  7270   003140  2A0A               	incf	(___flge@ff1+1)^0,f,c
  7271   003142  1E0B               	comf	(___flge@ff1+2)^0,f,c
  7272   003144  B0D8               	btfsc	status,0,c
  7273   003146  2A0B               	incf	(___flge@ff1+2)^0,f,c
  7274   003148  0E80               	movlw	128
  7275   00314A  560C               	subfwb	(___flge@ff1+3)^0,f,c
  7276   00314C                     l3364:
  7277   00314C  AE10               	btfss	(___flge@ff2+3)^0,7,c
  7278   00314E  EFAB  F018         	goto	u2551
  7279   003152  EFAD  F018         	goto	u2550
  7280   003156                     u2551:
  7281   003156  EFB6  F018         	goto	l975
  7282   00315A                     u2550:
  7283   00315A  6C0D               	negf	___flge@ff2^0,c
  7284   00315C  1E0E               	comf	(___flge@ff2+1)^0,f,c
  7285   00315E  B0D8               	btfsc	status,0,c
  7286   003160  2A0E               	incf	(___flge@ff2+1)^0,f,c
  7287   003162  1E0F               	comf	(___flge@ff2+2)^0,f,c
  7288   003164  B0D8               	btfsc	status,0,c
  7289   003166  2A0F               	incf	(___flge@ff2+2)^0,f,c
  7290   003168  0E80               	movlw	128
  7291   00316A  5610               	subfwb	(___flge@ff2+3)^0,f,c
  7292   00316C                     l975:
  7293   00316C  0E00               	movlw	0
  7294   00316E  1A09               	xorwf	___flge@ff1^0,f,c
  7295   003170  0E00               	movlw	0
  7296   003172  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  7297   003174  0E00               	movlw	0
  7298   003176  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  7299   003178  0E80               	movlw	128
  7300   00317A  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  7301   00317C  0E00               	movlw	0
  7302   00317E  1A0D               	xorwf	___flge@ff2^0,f,c
  7303   003180  0E00               	movlw	0
  7304   003182  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  7305   003184  0E00               	movlw	0
  7306   003186  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  7307   003188  0E80               	movlw	128
  7308   00318A  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  7309   00318C  500D               	movf	___flge@ff2^0,w,c
  7310   00318E  5C09               	subwf	___flge@ff1^0,w,c
  7311   003190  500E               	movf	(___flge@ff2+1)^0,w,c
  7312   003192  580A               	subwfb	(___flge@ff1+1)^0,w,c
  7313   003194  500F               	movf	(___flge@ff2+2)^0,w,c
  7314   003196  580B               	subwfb	(___flge@ff1+2)^0,w,c
  7315   003198  5010               	movf	(___flge@ff2+3)^0,w,c
  7316   00319A  580C               	subwfb	(___flge@ff1+3)^0,w,c
  7317   00319C  B0D8               	btfsc	status,0,c
  7318   00319E  EFD3  F018         	goto	u2561
  7319   0031A2  EFD5  F018         	goto	u2560
  7320   0031A6                     u2561:
  7321   0031A6  EFD8  F018         	goto	l3370
  7322   0031AA                     u2560:
  7323   0031AA  90D8               	bcf	status,0,c
  7324   0031AC  EFD9  F018         	goto	l980
  7325   0031B0                     l3370:
  7326   0031B0  80D8               	bsf	status,0,c
  7327   0031B2                     l980:
  7328   0031B2  0012               	return		;funcret
  7329   0031B4                     __end_of___flge:
  7330                           	callstack 0
  7331                           
  7332 ;; *************** function _motorTRIS *****************
  7333 ;; Defined at:
  7334 ;;		line 287 in file "dc_motor.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7337 ;;		 -> main@mL(9), 
  7338 ;;  mR              2   10[COMRAM] PTR struct DC_motor
  7339 ;;		 -> main@mR(9), 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1    wreg      void 
  7344 ;; Registers used:
  7345 ;;		None
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7351 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7355 ;;Total ram usage:        4 bytes
  7356 ;; Hardware stack levels used: 1
  7357 ;; Hardware stack levels required when called: 6
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text31
  7366   003C76                     __ptext31:
  7367                           	callstack 0
  7368   003C76                     _motorTRIS:
  7369                           	callstack 24
  7370   003C76                     
  7371                           ;dc_motor.c: 288:     TRISEbits.TRISE2 = 0;
  7372   003C76  9485               	bcf	133,2,c	;volatile
  7373                           
  7374                           ;dc_motor.c: 289:     TRISEbits.TRISE4 = 0;
  7375   003C78  9885               	bcf	133,4,c	;volatile
  7376                           
  7377                           ;dc_motor.c: 290:     TRISCbits.TRISC7 = 0;
  7378   003C7A  9E83               	bcf	131,7,c	;volatile
  7379                           
  7380                           ;dc_motor.c: 291:     TRISGbits.TRISG6 = 0;
  7381   003C7C  9C87               	bcf	135,6,c	;volatile
  7382   003C7E  0012               	return		;funcret
  7383   003C80                     __end_of_motorTRIS:
  7384                           	callstack 0
  7385                           
  7386 ;; *************** function _motorRinit *****************
  7387 ;; Defined at:
  7388 ;;		line 98 in file "dc_motor.c"
  7389 ;; Parameters:    Size  Location     Type
  7390 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  7391 ;;		 -> main@mR(9), 
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;Total ram usage:        2 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 6
  7410 ;; This function calls:
  7411 ;;		Nothing
  7412 ;; This function is called by:
  7413 ;;		_main
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text32
  7418   00371E                     __ptext32:
  7419                           	callstack 0
  7420   00371E                     _motorRinit:
  7421                           	callstack 24
  7422   00371E                     
  7423                           ;dc_motor.c: 98: void motorRinit(DC_motor *mR);dc_motor.c: 99: {;dc_motor.c: 100:     mR
      +                          ->power = 50;
  7424   00371E  C009  FFD9         	movff	motorRinit@mR,fsr2l
  7425   003722  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  7426   003726  0E32               	movlw	50
  7427   003728  6EDF               	movwf	indf2,c
  7428   00372A                     
  7429                           ;dc_motor.c: 101:     mR->direction = 1;
  7430   00372A  EE20 F001          	lfsr	2,1
  7431   00372E  5009               	movf	motorRinit@mR^0,w,c
  7432   003730  26D9               	addwf	fsr2l,f,c
  7433   003732  500A               	movf	(motorRinit@mR+1)^0,w,c
  7434   003734  22DA               	addwfc	fsr2h,f,c
  7435   003736  0E01               	movlw	1
  7436   003738  6EDF               	movwf	indf2,c
  7437   00373A                     
  7438                           ;dc_motor.c: 102:     mR->brakemode = 1;
  7439   00373A  EE20 F002          	lfsr	2,2
  7440   00373E  5009               	movf	motorRinit@mR^0,w,c
  7441   003740  26D9               	addwf	fsr2l,f,c
  7442   003742  500A               	movf	(motorRinit@mR+1)^0,w,c
  7443   003744  22DA               	addwfc	fsr2h,f,c
  7444   003746  0E01               	movlw	1
  7445   003748  6EDF               	movwf	indf2,c
  7446   00374A                     
  7447                           ;dc_motor.c: 103:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  7448   00374A  EE20 F005          	lfsr	2,5
  7449   00374E  5009               	movf	motorRinit@mR^0,w,c
  7450   003750  26D9               	addwf	fsr2l,f,c
  7451   003752  500A               	movf	(motorRinit@mR+1)^0,w,c
  7452   003754  22DA               	addwfc	fsr2h,f,c
  7453   003756  0E25               	movlw	37
  7454   003758  6EDE               	movwf	postinc2,c
  7455   00375A  0E0F               	movlw	15
  7456   00375C  6EDD               	movwf	postdec2,c
  7457   00375E                     
  7458                           ;dc_motor.c: 104:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  7459   00375E  EE20 F007          	lfsr	2,7
  7460   003762  5009               	movf	motorRinit@mR^0,w,c
  7461   003764  26D9               	addwf	fsr2l,f,c
  7462   003766  500A               	movf	(motorRinit@mR+1)^0,w,c
  7463   003768  22DA               	addwfc	fsr2h,f,c
  7464   00376A  0E21               	movlw	33
  7465   00376C  6EDE               	movwf	postinc2,c
  7466   00376E  0E0F               	movlw	15
  7467   003770  6EDD               	movwf	postdec2,c
  7468   003772                     
  7469                           ;dc_motor.c: 105:     mR->PWMperiod = 200;
  7470   003772  EE20 F003          	lfsr	2,3
  7471   003776  5009               	movf	motorRinit@mR^0,w,c
  7472   003778  26D9               	addwf	fsr2l,f,c
  7473   00377A  500A               	movf	(motorRinit@mR+1)^0,w,c
  7474   00377C  22DA               	addwfc	fsr2h,f,c
  7475   00377E  0EC8               	movlw	200
  7476   003780  6EDE               	movwf	postinc2,c
  7477   003782  0E00               	movlw	0
  7478   003784  6EDD               	movwf	postdec2,c
  7479   003786  0012               	return		;funcret
  7480   003788                     __end_of_motorRinit:
  7481                           	callstack 0
  7482                           
  7483 ;; *************** function _motorLinit *****************
  7484 ;; Defined at:
  7485 ;;		line 85 in file "dc_motor.c"
  7486 ;; Parameters:    Size  Location     Type
  7487 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  7488 ;;		 -> main@mL(9), 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;Total ram usage:        2 bytes
  7505 ;; Hardware stack levels used: 1
  7506 ;; Hardware stack levels required when called: 6
  7507 ;; This function calls:
  7508 ;;		Nothing
  7509 ;; This function is called by:
  7510 ;;		_main
  7511 ;; This function uses a non-reentrant model
  7512 ;;
  7513                           
  7514                           	psect	text33
  7515   003788                     __ptext33:
  7516                           	callstack 0
  7517   003788                     _motorLinit:
  7518                           	callstack 24
  7519   003788                     
  7520                           ;dc_motor.c: 85: void motorLinit(DC_motor *mL);dc_motor.c: 86: {;dc_motor.c: 87:     mL-
      +                          >power = 50;
  7521   003788  C009  FFD9         	movff	motorLinit@mL,fsr2l
  7522   00378C  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  7523   003790  0E32               	movlw	50
  7524   003792  6EDF               	movwf	indf2,c
  7525   003794                     
  7526                           ;dc_motor.c: 88:     mL->direction = 1;
  7527   003794  EE20 F001          	lfsr	2,1
  7528   003798  5009               	movf	motorLinit@mL^0,w,c
  7529   00379A  26D9               	addwf	fsr2l,f,c
  7530   00379C  500A               	movf	(motorLinit@mL+1)^0,w,c
  7531   00379E  22DA               	addwfc	fsr2h,f,c
  7532   0037A0  0E01               	movlw	1
  7533   0037A2  6EDF               	movwf	indf2,c
  7534   0037A4                     
  7535                           ;dc_motor.c: 89:     mL->brakemode = 1;
  7536   0037A4  EE20 F002          	lfsr	2,2
  7537   0037A8  5009               	movf	motorLinit@mL^0,w,c
  7538   0037AA  26D9               	addwf	fsr2l,f,c
  7539   0037AC  500A               	movf	(motorLinit@mL+1)^0,w,c
  7540   0037AE  22DA               	addwfc	fsr2h,f,c
  7541   0037B0  0E01               	movlw	1
  7542   0037B2  6EDF               	movwf	indf2,c
  7543   0037B4                     
  7544                           ;dc_motor.c: 90:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  7545   0037B4  EE20 F005          	lfsr	2,5
  7546   0037B8  5009               	movf	motorLinit@mL^0,w,c
  7547   0037BA  26D9               	addwf	fsr2l,f,c
  7548   0037BC  500A               	movf	(motorLinit@mL+1)^0,w,c
  7549   0037BE  22DA               	addwfc	fsr2h,f,c
  7550   0037C0  0EAA               	movlw	170
  7551   0037C2  6EDE               	movwf	postinc2,c
  7552   0037C4  0E0F               	movlw	15
  7553   0037C6  6EDD               	movwf	postdec2,c
  7554   0037C8                     
  7555                           ;dc_motor.c: 91:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  7556   0037C8  EE20 F007          	lfsr	2,7
  7557   0037CC  5009               	movf	motorLinit@mL^0,w,c
  7558   0037CE  26D9               	addwf	fsr2l,f,c
  7559   0037D0  500A               	movf	(motorLinit@mL+1)^0,w,c
  7560   0037D2  22DA               	addwfc	fsr2h,f,c
  7561   0037D4  0EA6               	movlw	166
  7562   0037D6  6EDE               	movwf	postinc2,c
  7563   0037D8  0E0F               	movlw	15
  7564   0037DA  6EDD               	movwf	postdec2,c
  7565   0037DC                     
  7566                           ;dc_motor.c: 92:     mL->PWMperiod = 200;
  7567   0037DC  EE20 F003          	lfsr	2,3
  7568   0037E0  5009               	movf	motorLinit@mL^0,w,c
  7569   0037E2  26D9               	addwf	fsr2l,f,c
  7570   0037E4  500A               	movf	(motorLinit@mL+1)^0,w,c
  7571   0037E6  22DA               	addwfc	fsr2h,f,c
  7572   0037E8  0EC8               	movlw	200
  7573   0037EA  6EDE               	movwf	postinc2,c
  7574   0037EC  0E00               	movlw	0
  7575   0037EE  6EDD               	movwf	postdec2,c
  7576   0037F0  0012               	return		;funcret
  7577   0037F2                     __end_of_motorLinit:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function _initDCmotorsPWM *****************
  7581 ;; Defined at:
  7582 ;;		line 7 in file "dc_motor.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  7585 ;; Auto vars:     Size  Location     Type
  7586 ;;		None
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  1    wreg      void 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7596 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7599 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7600 ;;Total ram usage:        2 bytes
  7601 ;; Hardware stack levels used: 1
  7602 ;; Hardware stack levels required when called: 6
  7603 ;; This function calls:
  7604 ;;		Nothing
  7605 ;; This function is called by:
  7606 ;;		_main
  7607 ;; This function uses a non-reentrant model
  7608 ;;
  7609                           
  7610                           	psect	text34
  7611   003546                     __ptext34:
  7612                           	callstack 0
  7613   003546                     _initDCmotorsPWM:
  7614                           	callstack 24
  7615   003546                     
  7616                           ;dc_motor.c: 11:     RE2PPS=0x05;
  7617   003546  0E05               	movlw	5
  7618   003548  010E               	movlb	14	; () banked
  7619   00354A  6F74               	movwf	116,b	;volatile
  7620                           
  7621                           ;dc_motor.c: 12:     RE4PPS=0x06;
  7622   00354C  0E06               	movlw	6
  7623   00354E  6F76               	movwf	118,b	;volatile
  7624                           
  7625                           ;dc_motor.c: 13:     RC7PPS=0x07;
  7626   003550  0E07               	movlw	7
  7627   003552  6F69               	movwf	105,b	;volatile
  7628                           
  7629                           ;dc_motor.c: 14:     RG6PPS=0x08;
  7630   003554  0E08               	movlw	8
  7631   003556  6F88               	movwf	136,b	;volatile
  7632                           
  7633                           ;dc_motor.c: 17:     T2CONbits.CKPS=0b0011;
  7634   003558  50BD               	movf	189,w,c	;volatile
  7635   00355A  0B8F               	andlw	-113
  7636   00355C  0930               	iorlw	48
  7637   00355E  6EBD               	movwf	189,c	;volatile
  7638                           
  7639                           ;dc_motor.c: 18:     T2HLTbits.MODE=0b00000;
  7640   003560  0EE0               	movlw	-32
  7641   003562  16BE               	andwf	190,f,c	;volatile
  7642                           
  7643                           ;dc_motor.c: 19:     T2CLKCONbits.CS=0b0001;
  7644   003564  50BF               	movf	191,w,c	;volatile
  7645   003566  0BF0               	andlw	-16
  7646   003568  0901               	iorlw	1
  7647   00356A  6EBF               	movwf	191,c	;volatile
  7648                           
  7649                           ;dc_motor.c: 23:     T2PR=200;
  7650   00356C  0EC8               	movlw	200
  7651   00356E  6EBC               	movwf	188,c	;volatile
  7652   003570                     
  7653                           ; BSR set to: 14
  7654                           ;dc_motor.c: 24:     T2CONbits.ON=1;
  7655   003570  8EBD               	bsf	189,7,c	;volatile
  7656                           
  7657                           ;dc_motor.c: 28:     CCPR1H=0;
  7658   003572  0E00               	movlw	0
  7659   003574  6EAA               	movwf	170,c	;volatile
  7660                           
  7661                           ;dc_motor.c: 29:     CCPR2H=0;
  7662   003576  0E00               	movlw	0
  7663   003578  6EA6               	movwf	166,c	;volatile
  7664                           
  7665                           ;dc_motor.c: 30:     CCPR3H=0;
  7666   00357A  0E00               	movlw	0
  7667   00357C  010F               	movlb	15	; () banked
  7668   00357E  6F25               	movwf	37,b	;volatile
  7669                           
  7670                           ;dc_motor.c: 31:     CCPR4H=0;
  7671   003580  0E00               	movlw	0
  7672   003582  6F21               	movwf	33,b	;volatile
  7673                           
  7674                           ;dc_motor.c: 34:     CCPTMRS0bits.C1TSEL=0;
  7675   003584  0EFC               	movlw	-4
  7676   003586  16AD               	andwf	173,f,c	;volatile
  7677                           
  7678                           ;dc_motor.c: 35:     CCPTMRS0bits.C2TSEL=0;
  7679   003588  0EF3               	movlw	-13
  7680   00358A  16AD               	andwf	173,f,c	;volatile
  7681                           
  7682                           ;dc_motor.c: 36:     CCPTMRS0bits.C3TSEL=0;
  7683   00358C  0ECF               	movlw	-49
  7684   00358E  16AD               	andwf	173,f,c	;volatile
  7685                           
  7686                           ;dc_motor.c: 37:     CCPTMRS0bits.C4TSEL=0;
  7687   003590  0E3F               	movlw	-193
  7688   003592  16AD               	andwf	173,f,c	;volatile
  7689   003594                     
  7690                           ; BSR set to: 15
  7691                           ;dc_motor.c: 40:     CCP1CONbits.FMT=1;
  7692   003594  88AB               	bsf	171,4,c	;volatile
  7693                           
  7694                           ;dc_motor.c: 41:     CCP1CONbits.CCP1MODE=0b1100;
  7695   003596  50AB               	movf	171,w,c	;volatile
  7696   003598  0BF0               	andlw	-16
  7697   00359A  090C               	iorlw	12
  7698   00359C  6EAB               	movwf	171,c	;volatile
  7699   00359E                     
  7700                           ; BSR set to: 15
  7701                           ;dc_motor.c: 42:     CCP1CONbits.EN=1;
  7702   00359E  8EAB               	bsf	171,7,c	;volatile
  7703   0035A0                     
  7704                           ; BSR set to: 15
  7705                           ;dc_motor.c: 44:     CCP2CONbits.FMT=1;
  7706   0035A0  88A7               	bsf	167,4,c	;volatile
  7707                           
  7708                           ;dc_motor.c: 45:     CCP2CONbits.CCP2MODE=0b1100;
  7709   0035A2  50A7               	movf	167,w,c	;volatile
  7710   0035A4  0BF0               	andlw	-16
  7711   0035A6  090C               	iorlw	12
  7712   0035A8  6EA7               	movwf	167,c	;volatile
  7713   0035AA                     
  7714                           ; BSR set to: 15
  7715                           ;dc_motor.c: 46:     CCP2CONbits.EN=1;
  7716   0035AA  8EA7               	bsf	167,7,c	;volatile
  7717   0035AC                     
  7718                           ; BSR set to: 15
  7719                           ;dc_motor.c: 48:     CCP3CONbits.FMT=1;
  7720   0035AC  8926               	bsf	38,4,b	;volatile
  7721                           
  7722                           ;dc_motor.c: 49:     CCP3CONbits.CCP3MODE=0b1100;
  7723   0035AE  5126               	movf	38,w,b	;volatile
  7724   0035B0  0BF0               	andlw	-16
  7725   0035B2  090C               	iorlw	12
  7726   0035B4  6F26               	movwf	38,b	;volatile
  7727   0035B6                     
  7728                           ; BSR set to: 15
  7729                           ;dc_motor.c: 50:     CCP3CONbits.EN=1;
  7730   0035B6  8F26               	bsf	38,7,b	;volatile
  7731   0035B8                     
  7732                           ; BSR set to: 15
  7733                           ;dc_motor.c: 52:     CCP4CONbits.FMT=1;
  7734   0035B8  8922               	bsf	34,4,b	;volatile
  7735                           
  7736                           ;dc_motor.c: 53:     CCP4CONbits.CCP4MODE=0b1100;
  7737   0035BA  5122               	movf	34,w,b	;volatile
  7738   0035BC  0BF0               	andlw	-16
  7739   0035BE  090C               	iorlw	12
  7740   0035C0  6F22               	movwf	34,b	;volatile
  7741   0035C2                     
  7742                           ; BSR set to: 15
  7743                           ;dc_motor.c: 54:     CCP4CONbits.EN=1;
  7744   0035C2  8F22               	bsf	34,7,b	;volatile
  7745   0035C4                     
  7746                           ; BSR set to: 15
  7747   0035C4  0012               	return		;funcret
  7748   0035C6                     __end_of_initDCmotorsPWM:
  7749                           	callstack 0
  7750                           
  7751 ;; *************** function _color_click_init *****************
  7752 ;; Defined at:
  7753 ;;		line 13 in file "color.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;		None
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;		None
  7758 ;; Return value:  Size  Location     Type
  7759 ;;                  1    wreg      void 
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0, cstack
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7771 ;;Total ram usage:        1 bytes
  7772 ;; Hardware stack levels used: 1
  7773 ;; Hardware stack levels required when called: 9
  7774 ;; This function calls:
  7775 ;;		_I2C_2_Master_Init
  7776 ;;		_color_writetoaddr
  7777 ;; This function is called by:
  7778 ;;		_main
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           	psect	text35
  7783   003A18                     __ptext35:
  7784                           	callstack 0
  7785   003A18                     _color_click_init:
  7786                           	callstack 21
  7787   003A18                     
  7788                           ;color.c: 15:     I2C_2_Master_Init();
  7789   003A18  EC58  F01D         	call	_I2C_2_Master_Init	;wreg free
  7790   003A1C                     
  7791                           ;color.c: 18:     color_writetoaddr(0x00, 0x01);
  7792   003A1C  0E01               	movlw	1
  7793   003A1E  6E0B               	movwf	color_writetoaddr@value^0,c
  7794   003A20  0E00               	movlw	0
  7795   003A22  ECD2  F01D         	call	_color_writetoaddr
  7796   003A26                     
  7797                           ;color.c: 19:     _delay((unsigned long)((3)*(64000000/4000.0)));
  7798   003A26  0E3F               	movlw	63
  7799   003A28  6E0D               	movwf	??_color_click_init^0,c
  7800   003A2A  0E55               	movlw	85
  7801   003A2C                     u3737:
  7802   003A2C  2EE8               	decfsz	wreg,f,c
  7803   003A2E  D7FE               	bra	u3737
  7804   003A30  2E0D               	decfsz	??_color_click_init^0,f,c
  7805   003A32  D7FC               	bra	u3737
  7806   003A34  F000               	nop	
  7807   003A36                     
  7808                           ;color.c: 22:     color_writetoaddr(0x00, 0x03);
  7809   003A36  0E03               	movlw	3
  7810   003A38  6E0B               	movwf	color_writetoaddr@value^0,c
  7811   003A3A  0E00               	movlw	0
  7812   003A3C  ECD2  F01D         	call	_color_writetoaddr
  7813   003A40                     
  7814                           ;color.c: 25:     color_writetoaddr(0x01, 0xD5);
  7815   003A40  0ED5               	movlw	213
  7816   003A42  6E0B               	movwf	color_writetoaddr@value^0,c
  7817   003A44  0E01               	movlw	1
  7818   003A46  ECD2  F01D         	call	_color_writetoaddr
  7819   003A4A  0012               	return		;funcret
  7820   003A4C                     __end_of_color_click_init:
  7821                           	callstack 0
  7822                           
  7823 ;; *************** function _I2C_2_Master_Init *****************
  7824 ;; Defined at:
  7825 ;;		line 4 in file "i2c.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;		None
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;		None
  7830 ;; Return value:  Size  Location     Type
  7831 ;;                  1    wreg      void 
  7832 ;; Registers used:
  7833 ;;		wreg, status,2
  7834 ;; Tracked objects:
  7835 ;;		On entry : 0/0
  7836 ;;		On exit  : 0/0
  7837 ;;		Unchanged: 0/0
  7838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7843 ;;Total ram usage:        0 bytes
  7844 ;; Hardware stack levels used: 1
  7845 ;; Hardware stack levels required when called: 6
  7846 ;; This function calls:
  7847 ;;		Nothing
  7848 ;; This function is called by:
  7849 ;;		_color_click_init
  7850 ;; This function uses a non-reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text36
  7854   003AB0                     __ptext36:
  7855                           	callstack 0
  7856   003AB0                     _I2C_2_Master_Init:
  7857                           	callstack 23
  7858   003AB0                     
  7859                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  7860   003AB0  010E               	movlb	14	; () banked
  7861   003AB2  51D9               	movf	217,w,b	;volatile
  7862   003AB4  0BF0               	andlw	-16
  7863   003AB6  0908               	iorlw	8
  7864   003AB8  6FD9               	movwf	217,b	;volatile
  7865   003ABA                     
  7866                           ; BSR set to: 14
  7867                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  7868   003ABA  8BD9               	bsf	217,5,b	;volatile
  7869                           
  7870                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  7871   003ABC  0E9F               	movlw	159
  7872   003ABE  6FD6               	movwf	214,b	;volatile
  7873   003AC0                     
  7874                           ; BSR set to: 14
  7875                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  7876   003AC0  8A84               	bsf	132,5,c	;volatile
  7877   003AC2                     
  7878                           ; BSR set to: 14
  7879                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  7880   003AC2  8C84               	bsf	132,6,c	;volatile
  7881   003AC4                     
  7882                           ; BSR set to: 14
  7883                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  7884   003AC4  9BA7               	bcf	167,5,b	;volatile
  7885   003AC6                     
  7886                           ; BSR set to: 14
  7887                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  7888   003AC6  9DA7               	bcf	167,6,b	;volatile
  7889                           
  7890                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  7891   003AC8  0E1D               	movlw	29
  7892   003ACA  6F1D               	movwf	29,b	;volatile
  7893                           
  7894                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  7895   003ACC  0E1E               	movlw	30
  7896   003ACE  6F1C               	movwf	28,b	;volatile
  7897                           
  7898                           ;i2c.c: 18:   RD5PPS=0x1C;
  7899   003AD0  0E1C               	movlw	28
  7900   003AD2  6F6F               	movwf	111,b	;volatile
  7901                           
  7902                           ;i2c.c: 19:   RD6PPS=0x1B;
  7903   003AD4  0E1B               	movlw	27
  7904   003AD6  6F70               	movwf	112,b	;volatile
  7905   003AD8                     
  7906                           ; BSR set to: 14
  7907   003AD8  0012               	return		;funcret
  7908   003ADA                     __end_of_I2C_2_Master_Init:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _calibSwitchInit *****************
  7912 ;; Defined at:
  7913 ;;		line 384 in file "color.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		None
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; Hardware stack levels required when called: 6
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_main
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text37
  7942   003CA8                     __ptext37:
  7943                           	callstack 0
  7944   003CA8                     _calibSwitchInit:
  7945                           	callstack 24
  7946   003CA8                     
  7947                           ;color.c: 385:     TRISFbits.TRISF2 = 1;
  7948   003CA8  8486               	bsf	134,2,c	;volatile
  7949                           
  7950                           ;color.c: 386:     ANSELFbits.ANSELF2 = 0;
  7951   003CAA  010E               	movlb	14	; () banked
  7952   003CAC  95B4               	bcf	180,2,b	;volatile
  7953   003CAE                     
  7954                           ; BSR set to: 14
  7955   003CAE  0012               	return		;funcret
  7956   003CB0                     __end_of_calibSwitchInit:
  7957                           	callstack 0
  7958                           
  7959 ;; *************** function _Interrupts_init *****************
  7960 ;; Defined at:
  7961 ;;		line 10 in file "interrupts.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;		None
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;		None
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		None
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;Total ram usage:        0 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; Hardware stack levels required when called: 6
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_main
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989                           	psect	text38
  7990   003C18                     __ptext38:
  7991                           	callstack 0
  7992   003C18                     _Interrupts_init:
  7993                           	callstack 24
  7994   003C18                     
  7995                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  7996   003C18  8082               	bsf	130,0,c	;volatile
  7997                           
  7998                           ;interrupts.c: 16:     ANSELBbits.ANSELB0=0;
  7999   003C1A  010E               	movlb	14	; () banked
  8000   003C1C  919A               	bcf	154,0,b	;volatile
  8001                           
  8002                           ;interrupts.c: 17:     PIR0bits.INT0IF = 0;
  8003   003C1E  9133               	bcf	51,0,b	;volatile
  8004                           
  8005                           ;interrupts.c: 18:     PIE0bits.INT0IE = 1;
  8006   003C20  8129               	bsf	41,0,b	;volatile
  8007                           
  8008                           ;interrupts.c: 19:     IPR0bits.INT0IP = 1;
  8009   003C22  811F               	bsf	31,0,b	;volatile
  8010                           
  8011                           ;interrupts.c: 20:     INTCONbits.INT0EDG=0;
  8012   003C24  90F2               	bcf	242,0,c	;volatile
  8013                           
  8014                           ;interrupts.c: 21:     INTCONbits.IPEN=1;
  8015   003C26  8AF2               	bsf	242,5,c	;volatile
  8016                           
  8017                           ;interrupts.c: 22:     INTCONbits.PEIE=1;
  8018   003C28  8CF2               	bsf	242,6,c	;volatile
  8019                           
  8020                           ;interrupts.c: 23:     INTCONbits.GIE=1;
  8021   003C2A  8EF2               	bsf	242,7,c	;volatile
  8022   003C2C                     
  8023                           ; BSR set to: 14
  8024   003C2C  0012               	return		;funcret
  8025   003C2E                     __end_of_Interrupts_init:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function _Color_Interrupts_threshold *****************
  8029 ;; Defined at:
  8030 ;;		line 35 in file "interrupts.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  upperThresho    2   12[COMRAM] unsigned int 
  8033 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;		None
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  1    wreg      void 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0, cstack
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8048 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8049 ;;Total ram usage:        4 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 9
  8052 ;; This function calls:
  8053 ;;		_color_writetoaddr
  8054 ;; This function is called by:
  8055 ;;		_main
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text39
  8060   003ADA                     __ptext39:
  8061                           	callstack 0
  8062   003ADA                     _Color_Interrupts_threshold:
  8063                           	callstack 21
  8064   003ADA                     
  8065                           ;interrupts.c: 35: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 36: {;interrupts.c: 37:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8066   003ADA  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  8067   003ADE  0E04               	movlw	4
  8068   003AE0  ECD2  F01D         	call	_color_writetoaddr
  8069                           
  8070                           ;interrupts.c: 38:     color_writetoaddr(0x05, lowerThreshold>>8);
  8071   003AE4  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8072   003AE6  6E0B               	movwf	color_writetoaddr@value^0,c
  8073   003AE8  0E05               	movlw	5
  8074   003AEA  ECD2  F01D         	call	_color_writetoaddr
  8075                           
  8076                           ;interrupts.c: 39:     color_writetoaddr(0x06, upperThreshold);
  8077   003AEE  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  8078   003AF2  0E06               	movlw	6
  8079   003AF4  ECD2  F01D         	call	_color_writetoaddr
  8080                           
  8081                           ;interrupts.c: 40:     color_writetoaddr(0x07, upperThreshold>>8);
  8082   003AF8  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8083   003AFA  6E0B               	movwf	color_writetoaddr@value^0,c
  8084   003AFC  0E07               	movlw	7
  8085   003AFE  ECD2  F01D         	call	_color_writetoaddr
  8086   003B02  0012               	return		;funcret
  8087   003B04                     __end_of_Color_Interrupts_threshold:
  8088                           	callstack 0
  8089                           
  8090 ;; *************** function _Color_Interrupts_init *****************
  8091 ;; Defined at:
  8092 ;;		line 27 in file "interrupts.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  1    wreg      void 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8108 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8109 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8110 ;;Total ram usage:        1 bytes
  8111 ;; Hardware stack levels used: 1
  8112 ;; Hardware stack levels required when called: 9
  8113 ;; This function calls:
  8114 ;;		_color_writetoaddr
  8115 ;; This function is called by:
  8116 ;;		_main
  8117 ;; This function uses a non-reentrant model
  8118 ;;
  8119                           
  8120                           	psect	text40
  8121   003BE4                     __ptext40:
  8122                           	callstack 0
  8123   003BE4                     _Color_Interrupts_init:
  8124                           	callstack 21
  8125   003BE4                     
  8126                           ;interrupts.c: 30:    color_writetoaddr(0x00, 0b00010011);
  8127   003BE4  0E13               	movlw	19
  8128   003BE6  6E0B               	movwf	color_writetoaddr@value^0,c
  8129   003BE8  0E00               	movlw	0
  8130   003BEA  ECD2  F01D         	call	_color_writetoaddr
  8131   003BEE                     
  8132                           ;interrupts.c: 31:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8133   003BEE  0ED0               	movlw	208
  8134   003BF0  6E0D               	movwf	??_Color_Interrupts_init^0,c
  8135   003BF2  0ECA               	movlw	202
  8136   003BF4                     u3747:
  8137   003BF4  2EE8               	decfsz	wreg,f,c
  8138   003BF6  D7FE               	bra	u3747
  8139   003BF8  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  8140   003BFA  D7FC               	bra	u3747
  8141   003BFC  0012               	return		;funcret
  8142   003BFE                     __end_of_Color_Interrupts_init:
  8143                           	callstack 0
  8144                           
  8145 ;; *************** function _color_writetoaddr *****************
  8146 ;; Defined at:
  8147 ;;		line 34 in file "color.c"
  8148 ;; Parameters:    Size  Location     Type
  8149 ;;  address         1    wreg     unsigned char 
  8150 ;;  value           1   10[COMRAM] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  address         1   11[COMRAM] unsigned char 
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8162 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8163 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8165 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8166 ;;Total ram usage:        2 bytes
  8167 ;; Hardware stack levels used: 1
  8168 ;; Hardware stack levels required when called: 8
  8169 ;; This function calls:
  8170 ;;		_I2C_2_Master_Start
  8171 ;;		_I2C_2_Master_Stop
  8172 ;;		_I2C_2_Master_Write
  8173 ;; This function is called by:
  8174 ;;		_color_click_init
  8175 ;;		_Color_Interrupts_init
  8176 ;;		_Color_Interrupts_threshold
  8177 ;;		_persistence_register
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text41
  8182   003BA4                     __ptext41:
  8183                           	callstack 0
  8184   003BA4                     _color_writetoaddr:
  8185                           	callstack 21
  8186                           
  8187                           ;incstack = 0
  8188                           ;color_writetoaddr@address stored from wreg
  8189   003BA4  6E0C               	movwf	color_writetoaddr@address^0,c
  8190   003BA6                     
  8191                           ;color.c: 35:     I2C_2_Master_Start();
  8192   003BA6  EC45  F01E         	call	_I2C_2_Master_Start	;wreg free
  8193                           
  8194                           ;color.c: 36:     I2C_2_Master_Write(0x52 | 0x00);
  8195   003BAA  0E52               	movlw	82
  8196   003BAC  EC24  F01E         	call	_I2C_2_Master_Write
  8197                           
  8198                           ;color.c: 37:     I2C_2_Master_Write(0x80 | address);
  8199   003BB0  500C               	movf	color_writetoaddr@address^0,w,c
  8200   003BB2  0980               	iorlw	128
  8201   003BB4  EC24  F01E         	call	_I2C_2_Master_Write
  8202                           
  8203                           ;color.c: 38:     I2C_2_Master_Write(value);
  8204   003BB8  500B               	movf	color_writetoaddr@value^0,w,c
  8205   003BBA  EC24  F01E         	call	_I2C_2_Master_Write
  8206                           
  8207                           ;color.c: 39:     I2C_2_Master_Stop();
  8208   003BBE  EC40  F01E         	call	_I2C_2_Master_Stop	;wreg free
  8209   003BC2  0012               	return		;funcret
  8210   003BC4                     __end_of_color_writetoaddr:
  8211                           	callstack 0
  8212                           
  8213 ;; *************** function _I2C_2_Master_Write *****************
  8214 ;; Defined at:
  8215 ;;		line 45 in file "i2c.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  data_byte       1    wreg     unsigned char 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;  data_byte       1    9[COMRAM] unsigned char 
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8233 ;;Total ram usage:        1 bytes
  8234 ;; Hardware stack levels used: 1
  8235 ;; Hardware stack levels required when called: 7
  8236 ;; This function calls:
  8237 ;;		_I2C_2_Master_Idle
  8238 ;; This function is called by:
  8239 ;;		_color_writetoaddr
  8240 ;;		_color_read_Red
  8241 ;;		_color_read_Green
  8242 ;;		_color_read_Blue
  8243 ;;		_color_read_Clear
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text42
  8248   003C48                     __ptext42:
  8249                           	callstack 0
  8250   003C48                     _I2C_2_Master_Write:
  8251                           	callstack 20
  8252                           
  8253                           ;incstack = 0
  8254                           ;I2C_2_Master_Write@data_byte stored from wreg
  8255   003C48  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  8256   003C4A                     
  8257                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8258   003C4A  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8259   003C4E                     
  8260                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8261   003C4E  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  8262   003C52  0012               	return		;funcret
  8263   003C54                     __end_of_I2C_2_Master_Write:
  8264                           	callstack 0
  8265                           
  8266 ;; *************** function _I2C_2_Master_Stop *****************
  8267 ;; Defined at:
  8268 ;;		line 39 in file "i2c.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;		None
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;		None
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  1    wreg      void 
  8275 ;; Registers used:
  8276 ;;		wreg, status,2, status,0, cstack
  8277 ;; Tracked objects:
  8278 ;;		On entry : 0/0
  8279 ;;		On exit  : 0/0
  8280 ;;		Unchanged: 0/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8286 ;;Total ram usage:        0 bytes
  8287 ;; Hardware stack levels used: 1
  8288 ;; Hardware stack levels required when called: 7
  8289 ;; This function calls:
  8290 ;;		_I2C_2_Master_Idle
  8291 ;; This function is called by:
  8292 ;;		_color_writetoaddr
  8293 ;;		_color_read_Red
  8294 ;;		_color_read_Green
  8295 ;;		_color_read_Blue
  8296 ;;		_color_read_Clear
  8297 ;; This function uses a non-reentrant model
  8298 ;;
  8299                           
  8300                           	psect	text43
  8301   003C80                     __ptext43:
  8302                           	callstack 0
  8303   003C80                     _I2C_2_Master_Stop:
  8304                           	callstack 20
  8305   003C80                     
  8306                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8307   003C80  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8308   003C84                     
  8309                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8310   003C84  010E               	movlb	14	; () banked
  8311   003C86  85DA               	bsf	218,2,b	;volatile
  8312   003C88                     
  8313                           ; BSR set to: 14
  8314   003C88  0012               	return		;funcret
  8315   003C8A                     __end_of_I2C_2_Master_Stop:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function _I2C_2_Master_Start *****************
  8319 ;; Defined at:
  8320 ;;		line 27 in file "i2c.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;		None
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;		None
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      void 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8338 ;;Total ram usage:        0 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 7
  8341 ;; This function calls:
  8342 ;;		_I2C_2_Master_Idle
  8343 ;; This function is called by:
  8344 ;;		_color_writetoaddr
  8345 ;;		_color_read_Red
  8346 ;;		_color_read_Green
  8347 ;;		_color_read_Blue
  8348 ;;		_color_read_Clear
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text44
  8353   003C8A                     __ptext44:
  8354                           	callstack 0
  8355   003C8A                     _I2C_2_Master_Start:
  8356                           	callstack 20
  8357   003C8A                     
  8358                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8359   003C8A  EC97  F01D         	call	_I2C_2_Master_Idle	;wreg free
  8360   003C8E                     
  8361                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8362   003C8E  010E               	movlb	14	; () banked
  8363   003C90  81DA               	bsf	218,0,b	;volatile
  8364   003C92                     
  8365                           ; BSR set to: 14
  8366   003C92  0012               	return		;funcret
  8367   003C94                     __end_of_I2C_2_Master_Start:
  8368                           	callstack 0
  8369                           
  8370 ;; *************** function _I2C_2_Master_Idle *****************
  8371 ;; Defined at:
  8372 ;;		line 22 in file "i2c.c"
  8373 ;; Parameters:    Size  Location     Type
  8374 ;;		None
  8375 ;; Auto vars:     Size  Location     Type
  8376 ;;		None
  8377 ;; Return value:  Size  Location     Type
  8378 ;;                  1    wreg      void 
  8379 ;; Registers used:
  8380 ;;		wreg, status,2, status,0
  8381 ;; Tracked objects:
  8382 ;;		On entry : 0/0
  8383 ;;		On exit  : 0/0
  8384 ;;		Unchanged: 0/0
  8385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8390 ;;Total ram usage:        1 bytes
  8391 ;; Hardware stack levels used: 1
  8392 ;; Hardware stack levels required when called: 6
  8393 ;; This function calls:
  8394 ;;		Nothing
  8395 ;; This function is called by:
  8396 ;;		_I2C_2_Master_Start
  8397 ;;		_I2C_2_Master_RepStart
  8398 ;;		_I2C_2_Master_Stop
  8399 ;;		_I2C_2_Master_Write
  8400 ;;		_I2C_2_Master_Read
  8401 ;; This function uses a non-reentrant model
  8402 ;;
  8403                           
  8404                           	psect	text45
  8405   003B2E                     __ptext45:
  8406                           	callstack 0
  8407   003B2E                     _I2C_2_Master_Idle:
  8408                           	callstack 20
  8409   003B2E                     l230:
  8410   003B2E  010E               	movlb	14	; () banked
  8411   003B30  B5D8               	btfsc	216,2,b	;volatile
  8412   003B32  EF9D  F01D         	goto	u1631
  8413   003B36  EF9F  F01D         	goto	u1630
  8414   003B3A                     u1631:
  8415   003B3A  EF97  F01D         	goto	l230
  8416   003B3E                     u1630:
  8417   003B3E                     
  8418                           ; BSR set to: 14
  8419   003B3E  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  8420   003B42  0E1F               	movlw	31
  8421   003B44  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  8422   003B46  A4D8               	btfss	status,2,c
  8423   003B48  EFA8  F01D         	goto	u1641
  8424   003B4C  EFAA  F01D         	goto	u1640
  8425   003B50                     u1641:
  8426   003B50  EF97  F01D         	goto	l230
  8427   003B54                     u1640:
  8428   003B54                     
  8429                           ; BSR set to: 14
  8430   003B54  0012               	return		;funcret
  8431   003B56                     __end_of_I2C_2_Master_Idle:
  8432                           	callstack 0
  8433                           
  8434 ;; *************** function _HighISR *****************
  8435 ;; Defined at:
  8436 ;;		line 64 in file "interrupts.c"
  8437 ;; Parameters:    Size  Location     Type
  8438 ;;		None
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;		None
  8441 ;; Return value:  Size  Location     Type
  8442 ;;                  1    wreg      void 
  8443 ;; Registers used:
  8444 ;;		wreg, status,2, status,0, cstack
  8445 ;; Tracked objects:
  8446 ;;		On entry : 0/0
  8447 ;;		On exit  : 0/0
  8448 ;;		Unchanged: 0/0
  8449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8454 ;;Total ram usage:        0 bytes
  8455 ;; Hardware stack levels used: 1
  8456 ;; Hardware stack levels required when called: 5
  8457 ;; This function calls:
  8458 ;;		_Color_Interrupts_clear
  8459 ;; This function is called by:
  8460 ;;		Interrupt level 2
  8461 ;; This function uses a non-reentrant model
  8462 ;;
  8463                           
  8464                           	psect	intcode
  8465   000008                     __pintcode:
  8466                           	callstack 0
  8467   000008                     _HighISR:
  8468                           	callstack 20
  8469                           
  8470                           ; BSR set to: 14
  8471                           ;incstack = 0
  8472   000008  8257               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8473   00000A                     
  8474                           ;interrupts.c: 66:     if (PIR0bits.INT0IF == 1) {
  8475   00000A  010E               	movlb	14	; () banked
  8476   00000C  A133               	btfss	51,0,b	;volatile
  8477   00000E  EF0B  F000         	goto	i2u316_41
  8478   000012  EF0D  F000         	goto	i2u316_40
  8479   000016                     i2u316_41:
  8480   000016  EF18  F000         	goto	i2l536
  8481   00001A                     i2u316_40:
  8482   00001A                     
  8483                           ; BSR set to: 14
  8484                           ;interrupts.c: 67:         interrupt_flag = 1;
  8485   00001A  0E00               	movlw	0
  8486   00001C  0100               	movlb	0	; () banked
  8487   00001E  6FD9               	movwf	(_interrupt_flag+1)& (0+255),b
  8488   000020  0E01               	movlw	1
  8489   000022  6FD8               	movwf	_interrupt_flag& (0+255),b
  8490   000024                     
  8491                           ; BSR set to: 0
  8492                           ;interrupts.c: 68:         interrupt_ctr++;
  8493   000024  4BD6               	infsnz	_interrupt_ctr& (0+255),f,b
  8494   000026  2BD7               	incf	(_interrupt_ctr+1)& (0+255),f,b
  8495   000028                     
  8496                           ; BSR set to: 0
  8497                           ;interrupts.c: 69:         Color_Interrupts_clear();
  8498   000028  EC3F  F01D         	call	_Color_Interrupts_clear	;wreg free
  8499   00002C                     
  8500                           ;interrupts.c: 70:         PIR0bits.INT0IF = 0;
  8501   00002C  010E               	movlb	14	; () banked
  8502   00002E  9133               	bcf	51,0,b	;volatile
  8503   000030                     i2l536:
  8504                           
  8505                           ; BSR set to: 14
  8506   000030  9257               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8507   000032  0011               	retfie		f
  8508   000034                     __end_of_HighISR:
  8509                           	callstack 0
  8510                           
  8511 ;; *************** function _Color_Interrupts_clear *****************
  8512 ;; Defined at:
  8513 ;;		line 48 in file "interrupts.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      void 
  8520 ;; Registers used:
  8521 ;;		wreg, status,2, status,0, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8531 ;;Total ram usage:        0 bytes
  8532 ;; Hardware stack levels used: 1
  8533 ;; Hardware stack levels required when called: 4
  8534 ;; This function calls:
  8535 ;;		i2_Color_Interrupts_init
  8536 ;;		i2_Color_Interrupts_threshold
  8537 ;;		i2_I2C_2_Master_Start
  8538 ;;		i2_I2C_2_Master_Stop
  8539 ;;		i2_I2C_2_Master_Write
  8540 ;;		i2_persistence_register
  8541 ;; This function is called by:
  8542 ;;		_HighISR
  8543 ;; This function uses a non-reentrant model
  8544 ;;
  8545                           
  8546                           	psect	text47
  8547   003A7E                     __ptext47:
  8548                           	callstack 0
  8549   003A7E                     _Color_Interrupts_clear:
  8550                           	callstack 20
  8551   003A7E                     
  8552                           ;interrupts.c: 50:     I2C_2_Master_Start();
  8553   003A7E  EC4F  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8554                           
  8555                           ;interrupts.c: 51:     I2C_2_Master_Write(0x52 | 0x00);
  8556   003A82  0E52               	movlw	82
  8557   003A84  EC30  F01E         	call	i2_I2C_2_Master_Write
  8558                           
  8559                           ;interrupts.c: 52:     I2C_2_Master_Write(0b11100110);
  8560   003A88  0EE6               	movlw	230
  8561   003A8A  EC30  F01E         	call	i2_I2C_2_Master_Write
  8562                           
  8563                           ;interrupts.c: 53:     I2C_2_Master_Stop();
  8564   003A8E  EC4A  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8565                           
  8566                           ;interrupts.c: 54:     Color_Interrupts_init();
  8567   003A92  ECFF  F01D         	call	i2_Color_Interrupts_init	;wreg free
  8568                           
  8569                           ;interrupts.c: 55:     persistence_register();
  8570   003A96  EC2A  F01E         	call	i2_persistence_register	;wreg free
  8571                           
  8572                           ;interrupts.c: 56:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  8573   003A9A  C0EA  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  8574   003A9E  C0EB  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  8575   003AA2  C0D0  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  8576   003AA6  C0D1  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  8577   003AAA  EC82  F01D         	call	i2_Color_Interrupts_threshold	;wreg free
  8578   003AAE  0012               	return		;funcret
  8579   003AB0                     __end_of_Color_Interrupts_clear:
  8580                           	callstack 0
  8581                           
  8582 ;; *************** function i2_persistence_register *****************
  8583 ;; Defined at:
  8584 ;;		line 43 in file "interrupts.c"
  8585 ;; Parameters:    Size  Location     Type
  8586 ;;		None
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;		None
  8589 ;; Return value:  Size  Location     Type
  8590 ;;                  1    wreg      void 
  8591 ;; Registers used:
  8592 ;;		wreg, status,2, status,0, cstack
  8593 ;; Tracked objects:
  8594 ;;		On entry : 0/0
  8595 ;;		On exit  : 0/0
  8596 ;;		Unchanged: 0/0
  8597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8602 ;;Total ram usage:        0 bytes
  8603 ;; Hardware stack levels used: 1
  8604 ;; Hardware stack levels required when called: 3
  8605 ;; This function calls:
  8606 ;;		i2_color_writetoaddr
  8607 ;; This function is called by:
  8608 ;;		_Color_Interrupts_clear
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	text48
  8613   003C54                     __ptext48:
  8614                           	callstack 0
  8615   003C54                     i2_persistence_register:
  8616                           	callstack 20
  8617   003C54                     
  8618                           ;interrupts.c: 45:  color_writetoaddr(0x0C, 0b010);
  8619   003C54  0E02               	movlw	2
  8620   003C56  6E03               	movwf	i2color_writetoaddr@value^0,c
  8621   003C58  0E0C               	movlw	12
  8622   003C5A  ECE2  F01D         	call	i2_color_writetoaddr
  8623   003C5E  0012               	return		;funcret
  8624   003C60                     __end_ofi2_persistence_register:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function i2_Color_Interrupts_threshold *****************
  8628 ;; Defined at:
  8629 ;;		line 35 in file "interrupts.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  upperThresho    2    4[COMRAM] unsigned int 
  8632 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  8633 ;; Auto vars:     Size  Location     Type
  8634 ;;		None
  8635 ;; Return value:  Size  Location     Type
  8636 ;;                  1    wreg      void 
  8637 ;; Registers used:
  8638 ;;		wreg, status,2, status,0, cstack
  8639 ;; Tracked objects:
  8640 ;;		On entry : 0/0
  8641 ;;		On exit  : 0/0
  8642 ;;		Unchanged: 0/0
  8643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8644 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;Total ram usage:        4 bytes
  8649 ;; Hardware stack levels used: 1
  8650 ;; Hardware stack levels required when called: 3
  8651 ;; This function calls:
  8652 ;;		i2_color_writetoaddr
  8653 ;; This function is called by:
  8654 ;;		_Color_Interrupts_clear
  8655 ;; This function uses a non-reentrant model
  8656 ;;
  8657                           
  8658                           	psect	text49
  8659   003B04                     __ptext49:
  8660                           	callstack 0
  8661   003B04                     i2_Color_Interrupts_threshold:
  8662                           	callstack 20
  8663   003B04                     
  8664                           ;interrupts.c: 35: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 36: {;interrupts.c: 37:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  8665   003B04  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  8666   003B08  0E04               	movlw	4
  8667   003B0A  ECE2  F01D         	call	i2_color_writetoaddr
  8668                           
  8669                           ;interrupts.c: 38:     color_writetoaddr(0x05, lowerThreshold>>8);
  8670   003B0E  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  8671   003B10  6E03               	movwf	i2color_writetoaddr@value^0,c
  8672   003B12  0E05               	movlw	5
  8673   003B14  ECE2  F01D         	call	i2_color_writetoaddr
  8674                           
  8675                           ;interrupts.c: 39:     color_writetoaddr(0x06, upperThreshold);
  8676   003B18  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  8677   003B1C  0E06               	movlw	6
  8678   003B1E  ECE2  F01D         	call	i2_color_writetoaddr
  8679                           
  8680                           ;interrupts.c: 40:     color_writetoaddr(0x07, upperThreshold>>8);
  8681   003B22  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  8682   003B24  6E03               	movwf	i2color_writetoaddr@value^0,c
  8683   003B26  0E07               	movlw	7
  8684   003B28  ECE2  F01D         	call	i2_color_writetoaddr
  8685   003B2C  0012               	return		;funcret
  8686   003B2E                     __end_ofi2_Color_Interrupts_threshold:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function i2_Color_Interrupts_init *****************
  8690 ;; Defined at:
  8691 ;;		line 27 in file "interrupts.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;		None
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;		None
  8696 ;; Return value:  Size  Location     Type
  8697 ;;                  1    wreg      void 
  8698 ;; Registers used:
  8699 ;;		wreg, status,2, status,0, cstack
  8700 ;; Tracked objects:
  8701 ;;		On entry : 0/0
  8702 ;;		On exit  : 0/0
  8703 ;;		Unchanged: 0/0
  8704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8707 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8708 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8709 ;;Total ram usage:        1 bytes
  8710 ;; Hardware stack levels used: 1
  8711 ;; Hardware stack levels required when called: 3
  8712 ;; This function calls:
  8713 ;;		i2_color_writetoaddr
  8714 ;; This function is called by:
  8715 ;;		_Color_Interrupts_clear
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text50
  8720   003BFE                     __ptext50:
  8721                           	callstack 0
  8722   003BFE                     i2_Color_Interrupts_init:
  8723                           	callstack 20
  8724   003BFE                     
  8725                           ;interrupts.c: 30:    color_writetoaddr(0x00, 0b00010011);
  8726   003BFE  0E13               	movlw	19
  8727   003C00  6E03               	movwf	i2color_writetoaddr@value^0,c
  8728   003C02  0E00               	movlw	0
  8729   003C04  ECE2  F01D         	call	i2_color_writetoaddr
  8730   003C08                     
  8731                           ;interrupts.c: 31:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  8732   003C08  0ED0               	movlw	208
  8733   003C0A  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  8734   003C0C  0ECA               	movlw	202
  8735   003C0E                     i2u375_47:
  8736   003C0E  2EE8               	decfsz	wreg,f,c
  8737   003C10  D7FE               	bra	i2u375_47
  8738   003C12  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  8739   003C14  D7FC               	bra	i2u375_47
  8740   003C16  0012               	return		;funcret
  8741   003C18                     __end_ofi2_Color_Interrupts_init:
  8742                           	callstack 0
  8743                           
  8744 ;; *************** function i2_color_writetoaddr *****************
  8745 ;; Defined at:
  8746 ;;		line 34 in file "color.c"
  8747 ;; Parameters:    Size  Location     Type
  8748 ;;  address         1    wreg     unsigned char 
  8749 ;;  value           1    2[COMRAM] unsigned char 
  8750 ;; Auto vars:     Size  Location     Type
  8751 ;;  address         1    3[COMRAM] unsigned char 
  8752 ;; Return value:  Size  Location     Type
  8753 ;;                  1    wreg      void 
  8754 ;; Registers used:
  8755 ;;		wreg, status,2, status,0, cstack
  8756 ;; Tracked objects:
  8757 ;;		On entry : 0/0
  8758 ;;		On exit  : 0/0
  8759 ;;		Unchanged: 0/0
  8760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8761 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8765 ;;Total ram usage:        2 bytes
  8766 ;; Hardware stack levels used: 1
  8767 ;; Hardware stack levels required when called: 2
  8768 ;; This function calls:
  8769 ;;		i2_I2C_2_Master_Start
  8770 ;;		i2_I2C_2_Master_Stop
  8771 ;;		i2_I2C_2_Master_Write
  8772 ;; This function is called by:
  8773 ;;		i2_Color_Interrupts_init
  8774 ;;		i2_Color_Interrupts_threshold
  8775 ;;		i2_persistence_register
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           	psect	text51
  8780   003BC4                     __ptext51:
  8781                           	callstack 0
  8782   003BC4                     i2_color_writetoaddr:
  8783                           	callstack 20
  8784                           
  8785                           ;incstack = 0
  8786                           ;i2color_writetoaddr@address stored from wreg
  8787   003BC4  6E04               	movwf	i2color_writetoaddr@address^0,c
  8788   003BC6                     
  8789                           ;color.c: 35:     I2C_2_Master_Start();
  8790   003BC6  EC4F  F01E         	call	i2_I2C_2_Master_Start	;wreg free
  8791                           
  8792                           ;color.c: 36:     I2C_2_Master_Write(0x52 | 0x00);
  8793   003BCA  0E52               	movlw	82
  8794   003BCC  EC30  F01E         	call	i2_I2C_2_Master_Write
  8795                           
  8796                           ;color.c: 37:     I2C_2_Master_Write(0x80 | address);
  8797   003BD0  5004               	movf	i2color_writetoaddr@address^0,w,c
  8798   003BD2  0980               	iorlw	128
  8799   003BD4  EC30  F01E         	call	i2_I2C_2_Master_Write
  8800                           
  8801                           ;color.c: 38:     I2C_2_Master_Write(value);
  8802   003BD8  5003               	movf	i2color_writetoaddr@value^0,w,c
  8803   003BDA  EC30  F01E         	call	i2_I2C_2_Master_Write
  8804                           
  8805                           ;color.c: 39:     I2C_2_Master_Stop();
  8806   003BDE  EC4A  F01E         	call	i2_I2C_2_Master_Stop	;wreg free
  8807   003BE2  0012               	return		;funcret
  8808   003BE4                     __end_ofi2_color_writetoaddr:
  8809                           	callstack 0
  8810                           
  8811 ;; *************** function i2_I2C_2_Master_Write *****************
  8812 ;; Defined at:
  8813 ;;		line 45 in file "i2c.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  data_byte       1    wreg     unsigned char 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;  data_byte       1    1[COMRAM] unsigned char 
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, status,2, status,0, cstack
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8828 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8830 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;Total ram usage:        1 bytes
  8832 ;; Hardware stack levels used: 1
  8833 ;; Hardware stack levels required when called: 1
  8834 ;; This function calls:
  8835 ;;		i2_I2C_2_Master_Idle
  8836 ;; This function is called by:
  8837 ;;		_Color_Interrupts_clear
  8838 ;;		i2_color_writetoaddr
  8839 ;; This function uses a non-reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text52
  8843   003C60                     __ptext52:
  8844                           	callstack 0
  8845   003C60                     i2_I2C_2_Master_Write:
  8846                           	callstack 20
  8847                           
  8848                           ;incstack = 0
  8849                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  8850   003C60  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  8851   003C62                     
  8852                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  8853   003C62  ECAB  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8854   003C66                     
  8855                           ;i2c.c: 48:   SSP2BUF = data_byte;
  8856   003C66  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  8857   003C6A  0012               	return		;funcret
  8858   003C6C                     __end_ofi2_I2C_2_Master_Write:
  8859                           	callstack 0
  8860                           
  8861 ;; *************** function i2_I2C_2_Master_Stop *****************
  8862 ;; Defined at:
  8863 ;;		line 39 in file "i2c.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;		None
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  1    wreg      void 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0, cstack
  8872 ;; Tracked objects:
  8873 ;;		On entry : 0/0
  8874 ;;		On exit  : 0/0
  8875 ;;		Unchanged: 0/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8881 ;;Total ram usage:        0 bytes
  8882 ;; Hardware stack levels used: 1
  8883 ;; Hardware stack levels required when called: 1
  8884 ;; This function calls:
  8885 ;;		i2_I2C_2_Master_Idle
  8886 ;; This function is called by:
  8887 ;;		_Color_Interrupts_clear
  8888 ;;		i2_color_writetoaddr
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           	psect	text53
  8893   003C94                     __ptext53:
  8894                           	callstack 0
  8895   003C94                     i2_I2C_2_Master_Stop:
  8896                           	callstack 20
  8897   003C94                     
  8898                           ;i2c.c: 41:   I2C_2_Master_Idle();
  8899   003C94  ECAB  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8900   003C98                     
  8901                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  8902   003C98  010E               	movlb	14	; () banked
  8903   003C9A  85DA               	bsf	218,2,b	;volatile
  8904   003C9C                     
  8905                           ; BSR set to: 14
  8906   003C9C  0012               	return		;funcret
  8907   003C9E                     __end_ofi2_I2C_2_Master_Stop:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function i2_I2C_2_Master_Start *****************
  8911 ;; Defined at:
  8912 ;;		line 27 in file "i2c.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;		None
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;		None
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, status,2, status,0, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8930 ;;Total ram usage:        0 bytes
  8931 ;; Hardware stack levels used: 1
  8932 ;; Hardware stack levels required when called: 1
  8933 ;; This function calls:
  8934 ;;		i2_I2C_2_Master_Idle
  8935 ;; This function is called by:
  8936 ;;		_Color_Interrupts_clear
  8937 ;;		i2_color_writetoaddr
  8938 ;; This function uses a non-reentrant model
  8939 ;;
  8940                           
  8941                           	psect	text54
  8942   003C9E                     __ptext54:
  8943                           	callstack 0
  8944   003C9E                     i2_I2C_2_Master_Start:
  8945                           	callstack 20
  8946   003C9E                     
  8947                           ;i2c.c: 29:   I2C_2_Master_Idle();
  8948   003C9E  ECAB  F01D         	call	i2_I2C_2_Master_Idle	;wreg free
  8949   003CA2                     
  8950                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  8951   003CA2  010E               	movlb	14	; () banked
  8952   003CA4  81DA               	bsf	218,0,b	;volatile
  8953   003CA6                     
  8954                           ; BSR set to: 14
  8955   003CA6  0012               	return		;funcret
  8956   003CA8                     __end_ofi2_I2C_2_Master_Start:
  8957                           	callstack 0
  8958                           
  8959 ;; *************** function i2_I2C_2_Master_Idle *****************
  8960 ;; Defined at:
  8961 ;;		line 22 in file "i2c.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;		None
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;		None
  8966 ;; Return value:  Size  Location     Type
  8967 ;;                  1    wreg      void 
  8968 ;; Registers used:
  8969 ;;		wreg, status,2, status,0
  8970 ;; Tracked objects:
  8971 ;;		On entry : 0/0
  8972 ;;		On exit  : 0/0
  8973 ;;		Unchanged: 0/0
  8974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8979 ;;Total ram usage:        1 bytes
  8980 ;; Hardware stack levels used: 1
  8981 ;; This function calls:
  8982 ;;		Nothing
  8983 ;; This function is called by:
  8984 ;;		i2_I2C_2_Master_Start
  8985 ;;		i2_I2C_2_Master_Stop
  8986 ;;		i2_I2C_2_Master_Write
  8987 ;; This function uses a non-reentrant model
  8988 ;;
  8989                           
  8990                           	psect	text55
  8991   003B56                     __ptext55:
  8992                           	callstack 0
  8993   003B56                     i2_I2C_2_Master_Idle:
  8994                           	callstack 20
  8995   003B56                     i2l230:
  8996   003B56  010E               	movlb	14	; () banked
  8997   003B58  B5D8               	btfsc	216,2,b	;volatile
  8998   003B5A  EFB1  F01D         	goto	i2u168_41
  8999   003B5E  EFB3  F01D         	goto	i2u168_40
  9000   003B62                     i2u168_41:
  9001   003B62  EFAB  F01D         	goto	i2l230
  9002   003B66                     i2u168_40:
  9003   003B66                     
  9004                           ; BSR set to: 14
  9005   003B66  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  9006   003B6A  0E1F               	movlw	31
  9007   003B6C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  9008   003B6E  A4D8               	btfss	status,2,c
  9009   003B70  EFBC  F01D         	goto	i2u169_41
  9010   003B74  EFBE  F01D         	goto	i2u169_40
  9011   003B78                     i2u169_41:
  9012   003B78  EFAB  F01D         	goto	i2l230
  9013   003B7C                     i2u169_40:
  9014   003B7C                     
  9015                           ; BSR set to: 14
  9016   003B7C  0012               	return		;funcret
  9017   003B7E                     __end_ofi2_I2C_2_Master_Idle:
  9018                           	callstack 0
  9019                           
  9020                           	psect	rparam
  9021   000000                     
  9022                           	psect	temp
  9023   000057                     btemp:
  9024                           	callstack 0
  9025   000057                     	ds	1
  9026   000000                     int$flags	set	btemp
  9027   000000                     wtemp8	set	btemp+1
  9028   000000                     ttemp5	set	btemp+1
  9029   000000                     ttemp6	set	btemp+4
  9030   000000                     ttemp7	set	btemp+8
  9031                           
  9032                           	psect	idloc
  9033                           
  9034                           ;Config register IDLOC0 @ 0x200000
  9035                           ;	unspecified, using default values
  9036   200000                     	org	2097152
  9037   200000  0FFF               	dw	4095
  9038                           
  9039                           ;Config register IDLOC1 @ 0x200002
  9040                           ;	unspecified, using default values
  9041   200002                     	org	2097154
  9042   200002  0FFF               	dw	4095
  9043                           
  9044                           ;Config register IDLOC2 @ 0x200004
  9045                           ;	unspecified, using default values
  9046   200004                     	org	2097156
  9047   200004  0FFF               	dw	4095
  9048                           
  9049                           ;Config register IDLOC3 @ 0x200006
  9050                           ;	unspecified, using default values
  9051   200006                     	org	2097158
  9052   200006  0FFF               	dw	4095
  9053                           
  9054                           ;Config register IDLOC4 @ 0x200008
  9055                           ;	unspecified, using default values
  9056   200008                     	org	2097160
  9057   200008  0FFF               	dw	4095
  9058                           
  9059                           ;Config register IDLOC5 @ 0x20000A
  9060                           ;	unspecified, using default values
  9061   20000A                     	org	2097162
  9062   20000A  0FFF               	dw	4095
  9063                           
  9064                           ;Config register IDLOC6 @ 0x20000C
  9065                           ;	unspecified, using default values
  9066   20000C                     	org	2097164
  9067   20000C  0FFF               	dw	4095
  9068                           
  9069                           ;Config register IDLOC7 @ 0x20000E
  9070                           ;	unspecified, using default values
  9071   20000E                     	org	2097166
  9072   20000E  0FFF               	dw	4095
  9073                           
  9074                           	psect	config
  9075                           
  9076                           ;Config register CONFIG1L @ 0x300000
  9077                           ;	External Oscillator mode Selection bits
  9078                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  9079                           ;	Power-up default value for COSC bits
  9080                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  9081   300000                     	org	3145728
  9082   300000  AA                 	db	170
  9083                           
  9084                           ;Config register CONFIG1H @ 0x300001
  9085                           ;	unspecified, using default values
  9086                           ;	Clock Out Enable bit
  9087                           ;	CLKOUTEN = 0x1, unprogrammed default
  9088                           ;	Clock Switch Enable bit
  9089                           ;	CSWEN = 0x1, unprogrammed default
  9090                           ;	Fail-Safe Clock Monitor Enable bit
  9091                           ;	FCMEN = 0x1, unprogrammed default
  9092   300001                     	org	3145729
  9093   300001  FF                 	db	255
  9094                           
  9095                           ;Config register CONFIG2L @ 0x300002
  9096                           ;	unspecified, using default values
  9097                           ;	Master Clear Enable bit
  9098                           ;	MCLRE = 0x1, unprogrammed default
  9099                           ;	Power-up Timer Enable bit
  9100                           ;	PWRTE = 0x1, unprogrammed default
  9101                           ;	Low-power BOR enable bit
  9102                           ;	LPBOREN = 0x1, unprogrammed default
  9103                           ;	Brown-out Reset Enable bits
  9104                           ;	BOREN = 0x3, unprogrammed default
  9105   300002                     	org	3145730
  9106   300002  FF                 	db	255
  9107                           
  9108                           ;Config register CONFIG2H @ 0x300003
  9109                           ;	unspecified, using default values
  9110                           ;	Brown Out Reset Voltage selection bits
  9111                           ;	BORV = 0x3, unprogrammed default
  9112                           ;	ZCD Disable bit
  9113                           ;	ZCD = 0x1, unprogrammed default
  9114                           ;	PPSLOCK bit One-Way Set Enable bit
  9115                           ;	PPS1WAY = 0x1, unprogrammed default
  9116                           ;	Stack Full/Underflow Reset Enable bit
  9117                           ;	STVREN = 0x1, unprogrammed default
  9118                           ;	Debugger Enable bit
  9119                           ;	DEBUG = 0x1, unprogrammed default
  9120                           ;	Extended Instruction Set Enable bit
  9121                           ;	XINST = 0x1, unprogrammed default
  9122   300003                     	org	3145731
  9123   300003  FF                 	db	255
  9124                           
  9125                           ;Config register CONFIG3L @ 0x300004
  9126                           ;	WDT Period Select bits
  9127                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  9128                           ;	WDT operating mode
  9129                           ;	WDTE = OFF, WDT Disabled
  9130   300004                     	org	3145732
  9131   300004  9F                 	db	159
  9132                           
  9133                           ;Config register CONFIG3H @ 0x300005
  9134                           ;	unspecified, using default values
  9135                           ;	WDT Window Select bits
  9136                           ;	WDTCWS = 0x7, unprogrammed default
  9137                           ;	WDT input clock selector
  9138                           ;	WDTCCS = 0x7, unprogrammed default
  9139   300005                     	org	3145733
  9140   300005  FF                 	db	255
  9141                           
  9142                           ;Config register CONFIG4L @ 0x300006
  9143                           ;	unspecified, using default values
  9144                           ;	Write Protection Block 0
  9145                           ;	WRT0 = 0x1, unprogrammed default
  9146                           ;	Write Protection Block 1
  9147                           ;	WRT1 = 0x1, unprogrammed default
  9148                           ;	Write Protection Block 2
  9149                           ;	WRT2 = 0x1, unprogrammed default
  9150                           ;	Write Protection Block 3
  9151                           ;	WRT3 = 0x1, unprogrammed default
  9152                           ;	Write Protection Block 3
  9153                           ;	WRT4 = 0x1, unprogrammed default
  9154                           ;	Write Protection Block 3
  9155                           ;	WRT5 = 0x1, unprogrammed default
  9156                           ;	Write Protection Block 3
  9157                           ;	WRT6 = 0x1, unprogrammed default
  9158                           ;	Write Protection Block 3
  9159                           ;	WRT7 = 0x1, unprogrammed default
  9160   300006                     	org	3145734
  9161   300006  FF                 	db	255
  9162                           
  9163                           ;Config register CONFIG4H @ 0x300007
  9164                           ;	unspecified, using default values
  9165                           ;	Configuration Register Write Protection bit
  9166                           ;	WRTC = 0x1, unprogrammed default
  9167                           ;	Boot Block Write Protection bit
  9168                           ;	WRTB = 0x1, unprogrammed default
  9169                           ;	Data EEPROM Write Protection bit
  9170                           ;	WRTD = 0x1, unprogrammed default
  9171                           ;	Scanner Enable bit
  9172                           ;	SCANE = 0x1, unprogrammed default
  9173                           ;	Low Voltage Programming Enable bit
  9174                           ;	LVP = 0x1, unprogrammed default
  9175   300007                     	org	3145735
  9176   300007  FF                 	db	255
  9177                           
  9178                           ;Config register CONFIG5L @ 0x300008
  9179                           ;	unspecified, using default values
  9180                           ;	UserNVM Program Memory Code Protection bit
  9181                           ;	CP = 0x1, unprogrammed default
  9182                           ;	DataNVM Memory Code Protection bit
  9183                           ;	CPD = 0x1, unprogrammed default
  9184   300008                     	org	3145736
  9185   300008  FF                 	db	255
  9186                           
  9187                           ;Config register CONFIG5H @ 0x300009
  9188                           ;	unspecified, using default values
  9189   300009                     	org	3145737
  9190   300009  FF                 	db	255
  9191                           
  9192                           ;Config register CONFIG6L @ 0x30000A
  9193                           ;	unspecified, using default values
  9194                           ;	Table Read Protection Block 0
  9195                           ;	EBTR0 = 0x1, unprogrammed default
  9196                           ;	Table Read Protection Block 1
  9197                           ;	EBTR1 = 0x1, unprogrammed default
  9198                           ;	Table Read Protection Block 2
  9199                           ;	EBTR2 = 0x1, unprogrammed default
  9200                           ;	Table Read Protection Block 3
  9201                           ;	EBTR3 = 0x1, unprogrammed default
  9202                           ;	Table Read Protection Block 4
  9203                           ;	EBTR4 = 0x1, unprogrammed default
  9204                           ;	Table Read Protection Block 5
  9205                           ;	EBTR5 = 0x1, unprogrammed default
  9206                           ;	Table Read Protection Block 6
  9207                           ;	EBTR6 = 0x1, unprogrammed default
  9208                           ;	Table Read Protection Block 7
  9209                           ;	EBTR7 = 0x1, unprogrammed default
  9210   30000A                     	org	3145738
  9211   30000A  FF                 	db	255
  9212                           
  9213                           ;Config register CONFIG6H @ 0x30000B
  9214                           ;	unspecified, using default values
  9215                           ;	Boot Block Table Read Protection bit
  9216                           ;	EBTRB = 0x1, unprogrammed default
  9217   30000B                     	org	3145739
  9218   30000B  FF                 	db	255
  9219                           tosu	equ	0xFFF
  9220                           tosh	equ	0xFFE
  9221                           tosl	equ	0xFFD
  9222                           stkptr	equ	0xFFC
  9223                           pclatu	equ	0xFFB
  9224                           pclath	equ	0xFFA
  9225                           pcl	equ	0xFF9
  9226                           tblptru	equ	0xFF8
  9227                           tblptrh	equ	0xFF7
  9228                           tblptrl	equ	0xFF6
  9229                           tablat	equ	0xFF5
  9230                           prodh	equ	0xFF4
  9231                           prodl	equ	0xFF3
  9232                           indf0	equ	0xFEF
  9233                           postinc0	equ	0xFEE
  9234                           postdec0	equ	0xFED
  9235                           preinc0	equ	0xFEC
  9236                           plusw0	equ	0xFEB
  9237                           fsr0h	equ	0xFEA
  9238                           fsr0l	equ	0xFE9
  9239                           wreg	equ	0xFE8
  9240                           indf1	equ	0xFE7
  9241                           postinc1	equ	0xFE6
  9242                           postdec1	equ	0xFE5
  9243                           preinc1	equ	0xFE4
  9244                           plusw1	equ	0xFE3
  9245                           fsr1h	equ	0xFE2
  9246                           fsr1l	equ	0xFE1
  9247                           bsr	equ	0xFE0
  9248                           indf2	equ	0xFDF
  9249                           postinc2	equ	0xFDE
  9250                           postdec2	equ	0xFDD
  9251                           preinc2	equ	0xFDC
  9252                           plusw2	equ	0xFDB
  9253                           fsr2h	equ	0xFDA
  9254                           fsr2l	equ	0xFD9
  9255                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         138
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     62      86
    BANK0           160     84     140
    BANK1           256      0      60
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    motorTRIS@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorTRIS@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    S2781$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2781$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    turnPrep@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnPrep@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    wallSmash@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    wallSmash@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    wallSmash@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    slowSearch@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    decelerate@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    decelerate@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    decelerate@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    decelerate@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRllllhhhll[1]), CCPR2H(BITBIGSFRhhlllll[1]), 

    S271DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRllllhhhll[1]), CCPR1H(BITBIGSFRhhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    rangeCalibrate@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    rangeCalibrate@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_rangeCalibrate
    _rangeCalibrate->_color_normalise
    _wallSmash->_setMotorPWM
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_normalise->___fldiv
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    ___fldiv->___xxtofl
    _persistence_register->_color_writetoaddr
    _motor_retrace->_turnPrep
    _fullSpeedAhead->_setMotorPWM
    _motor_response->_turnPrep
    _turnRight->_setMotorPWM
    _turnPrep->_reverse
    _reverse->_setMotorPWM
    _norm_stop->_setMotorPWM
    _turnLeft->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_rangeCalibrate

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               152   152      0  110646
                                             32 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                    _calibSwitchInit
                   _color_click_init
                    _color_normalise
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                          _motorTRIS
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                     _rangeCalibrate
                        _tricolorLED
                           _turnLeft
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
                               _bLED
                               _gLED
                               _rLED
 ---------------------------------------------------------------------------------
 (2) _rLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _bLED                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rangeCalibrate                                      34    28      6   17060
                                             60 COMRAM     2     2      0
                                              0 BANK0     32    26      6
                            ___fladd
                    _color_normalise
                    _color_read_RGBC
                          _norm_stop
                          _wallSmash
 ---------------------------------------------------------------------------------
 (1) _wallSmash                                            5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _color_read_RGBC                                      2     0      2    1394
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (3) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _color_normalise                                      2     0      2    2735
                                             58 COMRAM     2     0      2
                            ___fldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     702
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1639
                                             33 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2996
                                              8 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                        9     3      6   30796
                                             38 COMRAM     9     3      6
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4005
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      10     4      6   34986
                                             38 COMRAM    10     4      6
                             ___flge
                          _norm_stop
                            _reverse
                           _turnLeft
                           _turnPrep
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnPrep                                             6     2      4   11178
                                             32 COMRAM     6     2      4
                          _norm_stop
                            _reverse
 ---------------------------------------------------------------------------------
 (3) _reverse                                              5     1      4    3853
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _norm_stop                                            4     0      4    5261
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _turnLeft                                             4     0      4    5045
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3045
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    3416
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorTRIS                                            4     0      4     152
                                              8 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calibSwitchInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (5) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (7) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (8) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (9) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (11) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _calibSwitchInit
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
       ___xxtofl (ARG)
         _color_read_Blue (ARG)
           _I2C_2_Master_Read
             _I2C_2_Master_Idle
           _I2C_2_Master_RepStart
             _I2C_2_Master_Idle
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Clear (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Green (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
         _color_read_Red (ARG)
           _I2C_2_Master_Read
           _I2C_2_Master_RepStart
           _I2C_2_Master_Start
           _I2C_2_Master_Stop
           _I2C_2_Master_Write
     ___xxtofl
   _color_read_RGBC
     ___xxtofl
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motorTRIS
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _reverse
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnPrep
       _norm_stop
       _reverse
     _turnRight
       _setMotorPWM
   _motor_retrace
     _fullSpeedAhead
     _norm_stop
     _turnLeft
     _turnPrep
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _rangeCalibrate
     ___fladd
     _color_normalise
     _color_read_RGBC
     _norm_stop
     _wallSmash
       _setMotorPWM
   _tricolorLED
     _bLED
     _gLED
     _rLED
   _turnLeft
   _wallSmash

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      3C       7       23.4%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     54      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3E      56       1       91.5%
BITBIGSFRllllhh     52      0       0      41        0.0%
BITBIGSFRllllhh     37      0       0      43        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRllllhl     20      0       0      46        0.0%
BITBIGSFRhhlh       1B      0       0      33        0.0%
BITBIGSFRhhllll     17      0       0      38        0.0%
BITBIGSFRhhllh      13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhhlllh      E      0       0      35        0.0%
BITBIGSFRhhh         D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRlllllh      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRllllhh      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRhl          5      0       0      39        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRllllhh      2      0       0      42        0.0%
BITBIGSFRhhllll      2      0       0      37        0.0%
BITBIGSFRlllh        2      0       0      40        0.0%
BITBIGSFRhhlllh      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllhl      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11E      63        0.0%
DATA                 0      0     11E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 15 11:34:31 2022

                            _color_read_Red 3848                                ___fldiv@aexp 003A  
                              ___fldiv@bexp 0039                             _color_read_RGBC 3480  
                              ___fldiv@sign 0032                             _color_read_Blue 3938  
                           ??_motor_retrace 002D                         ___wmul@multiplicand 000B  
                          _color_read_Clear 38E8                            _color_read_Green 3898  
                         ??_Interrupts_init 0009                                         l200 3CAE  
                                       l113 3A4A                                         l122 38E6  
                                       l116 3BC2                                         l125 3986  
                                       l230 3B2E                                         l134 3544  
                                       l119 3896                                         l143 3C3A  
                                       l128 3936                                         l152 3CC0  
                                       l233 3B54                                         l137 2F42  
                                       l242 3C88                                         l162 2C1E  
                                       l146 3CB4                                         l227 3AD8  
                                       l236 3C92                                         l245 3C52  
                                       l149 3CBA                                         l158 29DC  
                                       l167 1A98                                         l191 2320  
                                       l239 3C74                                         l248 3A16  
                                       l521 3BFC                                         l355 287A  
                                       l524 3B02                                         l701 32AA  
                                       l197 2320                                         l518 3C2C  
                                       l710 3BA2                                         l527 3C46  
                                       l704 3846                                         l641 35C4  
                                       l651 37F0                                         l707 3C7E  
                                       l654 3786                                         l671 36AA  
                                       l648 30AE                                         l665 3A7C  
                                       l668 371C                                         l685 347E  
                                       l693 3394                                         l696 324A  
                                       l980 31B2                                         l975 316C  
                          ??_motor_response 002D              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 3C2E                         i2_color_writetoaddr 3BC4  
                                       wreg 000FE8                             _color_normalise 2DD4  
                                      l1201 3630                                        l1303 2560  
                                      l1208 3638                                        l1240 1C3C  
                                      l3000 2CC4                                        l1305 25D8  
                                      l1306 25C6                                        l3010 2D4C  
                                      l3002 2CF6                                        l3100 3704  
                                      l3020 2DA2                                        l3012 2D5A  
                                      l3004 2CF8                                        l3102 3710  
                                      l3110 363A                                        l1238 1C88  
                                      l3022 2DB2                                        l3014 2D78  
                                      l3006 2D04                                        l1255 1DA2  
                                      l1247 1F58                                        l1239 1C76  
                                      l3040 3AC4                                        l3032 3AB0  
                                      l3104 37F2                                        l3120 3692  
                                      l3112 3652                                        l1264 1E72  
                                      l3200 1BA2                                        l3024 2DC0  
                                      l3016 2D7A                                        l3008 2D40  
                                      l4000 26E8                                        l1265 1E60  
                                      l3042 3AC6                                        l3034 3ABA  
                                      l3106 3806                                        l3122 369E  
                                      l3114 3662                                        l3130 33CE  
                                      l3210 1BB6                                        l3202 1BA6  
                                      l3026 2DC2                                        l3018 2D7E  
                                      l3050 2DDC                                        l4010 2704  
                                      l4002 26FC                                        l3044 3BA6  
                                      l3036 3AC0                                        l3108 381C  
                                      l3116 3672                                        l3140 341E  
                                      l3132 33DE                                        l3124 3396  
                                      l3300 1E04                                        l3220 1BCA  
                                      l3212 1BBA                                        l3204 1BAA  
                                      l1292 26BA                                        l1372 2D0E  
                                      l3052 2E30                                        l3060 3CB6  
                                      l4100 2990                                        l4020 2742  
                                      l4012 2708                                        l4004 26FE  
                                      l1365 2C76                                        l3038 3AC2  
                                      l3118 3682                                        l3142 3436  
                                      l3134 33F2                                        l3126 33AE  
                                      l3302 1E0C                                        l3310 1E30  
                                      l3230 1BDE                                        l3222 1BCE  
                                      l3214 1BBE                                        l3206 1BAE  
                                      l3150 1A9A                                        l1294 251A  
                                      l3054 2E88                                        l3046 3480  
                                      l3070 32E4                                        l3062 3CBC  
                                      l4102 29A4                                        l4030 2764  
                                      l4022 2746                                        l4014 2726  
                                      l4006 2700                                        l3144 344E  
                                      l3136 3406                                        l3128 33BE  
                                      l3320 1E82                                        l3312 1E34  
                                      l3304 1E10                                        l3240 1C56  
                                      l3232 1C08                                        l3224 1BD2  
                                      l3216 1BC2                                        l3208 1BB2  
                                      l3160 1AD6                                        l3152 1AA6  
                                      l1368 2DD2                                        l3056 2EE0  
                                      l3048 2DD4                                        l3080 3334  
                                      l3072 32F4                                        l3064 32AC  
                                      l4104 29BE                                        l4040 276E  
                                      l4032 2766                                        l4024 274C  
                                      l4016 272A                                        l4008 2702  
                                      l1297 24DE                                        l3090 36AC  
                                      l3146 3466                                        l3138 3412  
                                      l3330 1EE8                                        l3322 1E8E  
                                      l3314 1E42                                        l3306 1E20  
                                      l3250 1C96                                        l3242 1C5A  
                                      l3234 1C24                                        l3226 1BD6  
                                      l3218 1BC6                                        l3170 1B06  
                                      l3162 1AE6                                        l3154 1AB4  
                                      l3082 334C                                        l3074 3308  
                                      l3066 32C4                                        l3058 3CB0  
                                      l4106 29C0                                        l4050 279C  
                                      l4042 2770                                        l4034 2768  
                                      l4026 2754                                        l4018 272E  
                                      l1379 2D6A                                        l2700 3B7E  
                                      l3092 36C4                                        l3500 140C  
                                      l3148 3472                                        l3340 1F30  
                                      l3332 1EF8                                        l3324 1E9C  
                                      l3316 1E58                                        l3308 1E22  
                                      l3260 1CD8                                        l3252 1CA6  
                                      l3244 1C68                                        l3236 1C34  
                                      l3228 1BDA                                        l3180 1B30  
                                      l3172 1B18                                        l3164 1AE8  
                                      l3156 1AB6                                        l3084 3364  
                                      l3076 331C                                        l3068 32D4  
                                      l4060 27FA                                        l4052 27B8  
                                      l4044 2772                                        l4036 276A  
                                      l4028 275C                                        l2710 35E0  
                                      l2702 3B9A                                        l3094 36D4  
                                      l3510 147C                                        l3502 1420  
                                      l3342 1F32                                        l3334 1F18  
                                      l3326 1ED6                                        l3270 1D06  
                                      l3262 1CE6                                        l3246 1C6A  
                                      l3238 1C4A                                        l3182 1B40  
                                      l3190 1B6A                                        l3174 1B1A  
                                      l3158 1AC6                                        l3166 1AF0  
                                      l3086 337C                                        l3078 3328  
                                      l4070 2842                                        l4062 27FC  
                                      l4054 27CC                                        l4046 2774  
                                      l4038 276C                                        l3360 312C  
                                      l3352 30B0                                        l2720 361A  
                                      l2712 35E8                                        l3096 36E4  
                                      l3600 1990                                        l3512 14BA  
                                      l3504 1438                                        l3440 0F10  
                                      l3432 0E18                                        l3344 1F38  
                                      l3336 1F1C                                        l3328 1ED8  
                                      l3280 1D72                                        l3272 1D10  
                                      l3264 1CF2                                        l3256 1CBA  
                                      l3248 1C74                                        l3192 1B7A  
                                      l3184 1B50                                        l3176 1B20  
                                      l3168 1B00                                        l3088 3388  
                                      l4080 28C6                                        l4072 2872  
                                      l4064 2810                                        l4056 27E6  
                                      l4048 2788                                        l3370 31B0  
                                      l3362 313A                                        l3354 30DE  
                                      l2722 3622                                        l2714 35F0  
                                      l2706 35C6                                        l3098 36F4  
                                      l3610 1A06                                        l3530 15FA  
                                      l3514 14F8                                        l3522 153E  
                                      l3450 0FF6                                        l3442 0F4E  
                                      l3434 0E56                                        l3346 1F46  
                                      l3338 1F2A                                        l3282 1D82  
                                      l3266 1CF6                                        l3258 1CCA  
                                      l3274 1D16                                        l3194 1B8C  
                                      l3186 1B60                                        l3178 1B2E  
                                      l2802 3938                                        l2810 392E  
                                      l4090 2914                                        l4082 28DE  
                                      l4074 287C                                        l4066 282A  
                                      l4058 27E8                                        l2732 3C8A  
                                      l2740 3C80                                        l3700 35AA  
                                      l3364 314C                                        l3356 30EE  
                                      l2724 3624                                        l2716 35FE  
                                      l2708 35CE                                        l2820 31B4  
                                      l3620 1A84                                        l3612 1A26  
                                      l3604 19B0                                        l3540 16BA  
                                      l3524 157C                                        l3516 1520  
                                      l3452 1022                                        l3444 0F8C  
                                      l3460 1054                                        l3436 0E94  
                                      l3508 143E                                        l3348 1F48  
                                      l3292 1DDC                                        l3276 1D3C  
                                      l3284 1D92                                        l3268 1D04  
                                      l3196 1B9A                                        l3188 1B62  
                                      l2900 2444                                        l2804 397E  
                                      l4092 2928                                        l4084 28E4  
                                      l4076 2890                                        l4068 2836  
                                      l2734 3C8E                                        l2742 3C84  
                                      l3390 3A40                                        l3382 3A18  
                                      l3702 35AC                                        l3710 3788  
                                      l3366 315A                                        l3358 311C  
                                      l2726 362A                                        l2718 3604  
                                      l2814 3A4C                                        l2830 3210  
                                      l2822 31CC                                        l3622 1A8A  
                                      l3614 1A3A                                        l3606 19C4  
                                      l3550 17B4                                        l3542 16F8  
                                      l3526 15BA                                        l3534 1600  
                                      l3518 1538                                        l3470 118A  
                                      l3462 1092                                        l3454 1036  
                                      l3446 0FCA                                        l3438 0ED2  
                                      l3294 1DE6                                        l3286 1DB8  
                                      l3278 1D70                                        l3198 1B9E  
                                      l2910 2492                                        l2750 39DC  
                                      l4094 2940                                        l4086 28E6  
                                      l4078 28AA                                        l2736 3C4A  
                                      l3384 3A1C                                        l3704 35B6  
                                      l3720 37DC                                        l3712 3794  
                                      l3368 31AA                                        l2816 3A64  
                                      l2840 327A                                        l2832 3224  
                                      l2824 31DC                                        l3624 1A92  
                                      l3616 1A52                                        l3608 19DC  
                                      l3560 184A                                        l3544 1736  
                                      l3536 163E                                        l3528 15E2  
                                      l3472 11C8                                        l3464 10D0  
                                      l3480 123A                                        l3456 104E  
                                      l3448 0FDE                                        l3640 1FF0  
                                      l3632 1F5A                                        l3296 1DF4  
                                      l3288 1DC8                                        l2920 24DC  
                                      l2912 24A2                                        l2904 2458  
                                      l2752 39E4                                        l2744 3C6C  
                                      l2808 38E8                                        l3392 3C2E  
                                      l4096 2954                                        l4088 28FA  
                                      l2738 3C4E                                        l3386 3A26  
                                      l3706 35B8                                        l3714 37A4  
                                      l3730 375E                                        l3722 371E  
                                      l2770 300A                                        l2762 2F44  
                                      l2818 3A70                                        l2842 3292  
                                      l2834 3232                                        l2826 31EC  
                                      l3626 1A94                                        l3618 1A7E  
                                      l3562 1862                                        l3546 1774  
                                      l3538 167C                                        l3554 17BA  
                                      l3490 1370                                        l3482 1278  
                                      l3474 11F0                                        l3466 110E  
                                      l3650 20A2                                        l3642 2018  
                                      l3634 1F82                                        l3298 1DF6  
                                      l2930 252A                                        l2922 24E8  
                                      l2914 24AA                                        l2906 2472  
                                      l2850 233C                                        l2754 39EC  
                                      l2746 3C70                                        l4098 296E  
                                      l3740 3BEE                                        l3388 3A36  
                                      l3708 35C2                                        l3716 37B4  
                                      l3732 3772                                        l3724 372A  
                                      l2772 300E                                        l2764 2F60  
                                      l2844 329E                                        l2836 323E  
                                      l2828 31FC                                        l3628 1A96  
                                      l3580 191A                                        l3564 188E  
                                      l3572 18C0                                        l3556 17F8  
                                      l3548 179C                                        l3492 13AE  
                                      l3484 12B6                                        l3476 1208  
                                      l3468 114C                                        l3660 214C  
                                      l3652 20CC                                        l3644 2034  
                                      l3636 1FAA                                        l2932 2540  
                                      l2940 2570                                        l2924 2506  
                                      l2916 24BA                                        l2908 2482  
                                      l2860 2370                                        l2852 233E  
                                      l2756 3A12                                        l2748 39D8  
                                      l3742 3ADA                                        l3718 37C8  
                                      l3726 373A                                        l3734 3C76  
                                      l2774 302A                                        l2766 2FB4  
                                      l2838 3262                                        l3582 192E  
                                      l3574 18FE                                        l3566 18A2  
                                      l3558 1836                                        l3494 13CC  
                                      l3486 12F4                                        l3670 21E8  
                                      l3654 20F4                                        l3662 2166  
                                      l3646 205E                                        l3638 1FC6  
                                      l2942 257E                                        l2934 2546  
                                      l2926 2508                                        l2918 24CE  
                                      l2870 23A2                                        l2854 234E  
                                      l2862 2378                                        l2846 2322  
                                      l2758 3A14                                        l2790 3848  
                                      l2696 3B2E                                        l3736 3C18  
                                      l3728 374A                                        l2776 306E  
                                      l2768 2FC8                                        l3584 1946  
                                      l3576 1904                                        l3568 18BA  
                                      l3592 1950                                        l3496 13E0  
                                      l3488 1332                                        l3680 2296  
                                      l3672 21FC                                        l3664 2190  
                                      l3656 210C                                        l3648 2086  
                                      l3744 3C3C                                        l2952 25E8  
                                      l2960 2630                                        l2944 2582  
                                      l2936 2550                                        l2928 2518  
                                      l2880 23D6                                        l2872 23A4  
                                      l2864 2388                                        l2856 235E  
                                      l2848 232E                                        l2792 388E  
                                      l2698 3B3E                                        l3738 3BE4  
                                      l3690 3546                                        l3594 196C  
                                      l3586 1948                                        l3578 1906  
                                      l3498 13F4                                        l3682 22B2  
                                      l3674 2228                                        l3666 21A4  
                                      l3658 2138                                        l2970 269A  
                                      l2962 264A                                        l2954 25F4  
                                      l2946 2590                                        l2938 255E  
                                      l2890 241C                                        l2874 23B4  
                                      l2882 23DE                                        l2866 238E  
                                      l2858 236E                                        l3692 3570  
                                      l3596 1974                                        l3588 194A  
                                      l3684 22DC                                        l3668 21BC  
                                      l3676 2244                                        l2972 26A8  
                                      l2964 2660                                        l2956 2602  
                                      l2948 25BE                                        l2892 2420  
                                      l2884 23EE                                        l2876 23C4  
                                      l2868 2394                                        l2796 3898  
                                      l3694 3594                                        l3598 1988  
                                      l3686 2304                                        l3678 226E  
                                      l2974 26AE                                        l2966 267A  
                                      l2958 262C                                        l2886 2404  
                                      l2878 23D4                                        l2990 2C86  
                                      l2798 38DE                                        l3688 3CA8  
                                      l3696 359E                                        l2976 26B0  
                                      l2968 2696                                        l2888 2414  
                                      l2896 2434                                        l2992 2C9C  
                                      l2984 2C22                                        l3960 29FE  
                                      l3952 29D2                                        l3698 35A0  
                                      l2898 2444                                        l2986 2C32  
                                      l3970 2A44                                        l3962 2A12  
                                      l2996 2CB0                                        l2988 2C40  
                                      l3980 2AC8                                        l3972 2A5C  
                                      l3964 2A2A                                        l2998 2CB8  
                                      l3982 2AE0                                        l3974 2A5E  
                                      l3966 2A2C                                        l3958 29EA  
                                      l3990 26BC                                        l3976 2A9C  
                                      l3968 2A38                                        l3984 2AE6  
                                      l3992 26C0                                        l3986 2B02  
                                      l3978 2AB4                                        l3994 26C4  
                                      l3988 2C06                                        l3996 26D0  
                                      l3998 26DC                                        _CR1L 0047  
                                      _CR2L 003F                                        _CR3L 00C8  
                                      STR_1 0E01                                        _CR2U 0043  
                                      _CR3U 00CC                                        u2000 2C40  
                                      u2001 2C3C                                        u2010 2C9C  
                                      u2011 2C98                                        u2020 2CF2  
                                      u2100 3364                                        u2021 2CEE  
                                      u2101 3360                                        u2110 3436  
                                      u2030 2D3C                                        u2111 3432  
                                      u2031 2D38                                        u2120 344E  
                                      u3000 205E                                        u2200 1B8C  
                                      u2040 2D5A                                        u2121 344A  
                                      u3001 205A                                        u2201 1B88  
                                      u2041 2D56                                        u3010 20CC  
                                      u2210 1B9A                                        u2130 1AB4  
                                      u2050 2D6A                                        u3011 20C8  
                                      u2211 1B96                                        u2131 1AB0  
                                      u2051 2D66                                        u3020 2190  
                                      u2300 1CD8                                        u2220 1C08  
                                      u2140 1AC6                                        u2060 2D78  
                                      u3021 218C                                        u2301 1CD4  
                                      u2221 1C04                                        u2141 1AC2  
                                      u2061 2D74                                        u3030 226E  
                                      u2310 1CE6                                        u2230 1C20  
                                      u2150 1AD6                                        u2070 2DB2  
                                      u3031 226A                                        u2311 1CE2  
                                      u2231 1C1A                                        u2151 1AD2  
                                      u2071 2DAE                                        u3040 22DC  
                                      u2400 1E30                                        u2320 1D04  
                                      u2240 1C22                                        u2160 1B18  
                                      u2080 2DC0                                        u3200 29FE  
                              _BAUD4CONbits 000EE9                                        u3041 22D8  
                                      u2401 1E2C                                        u2321 1D00  
                                      u2161 1B14                                        u2081 2DBC  
                                      u3201 29FA                                        u2410 1E42  
                                      u2330 1D3C                                        u2250 1C4A  
                                      u2170 1B2E                                        u2090 334C  
                                      u3210 2B02                                        u2411 1E3E  
                                      u2331 1D38                                        u2251 1C46  
                                      u2171 1B2A                                        u2091 3348  
                                      u3211 2AFE                                        u2500 1F2A  
                                      u2420 1E58                                        u2340 1D82  
                                      u2260 1C68                                        u2180 1B40  
                                      u1700 3A00                                        u3220 279C  
                                      u2501 1F26                                        u2421 1E54  
                                      u2341 1D7E                                        u2261 1C64  
                                      u2181 1B3C                                        u1701 39F8  
                                      u3221 2798                                        u1630 3B3E  
                                      u2510 1F46                                        u2430 1E6E  
                                      u2350 1DB8                                        u2270 1C88  
                                      u2190 1B50                                        u3230 27B8  
                                      u1631 3B3A                                        u2511 1F42  
                                      u2431 1E6A                                        u2351 1DB4  
                                      u2271 1C84                                        u2191 1B4C  
                                      u3231 27B4                                        u1640 3B54  
                                      u2520 30DE                                        u1720 2F60  
                                      u2600 0E56                                        u2440 1E82  
                                      u2360 1DC8                                        u2280 1C96  
                                      u1800 23B4                                        u3240 27FA  
                                      u1641 3B50                                        u2521 30DA  
                                      u1721 2F5C                                        u2601 0E52  
                                      u2441 1E7E                                        u2361 1DC4  
                                      u2281 1C92                                        u1801 23B0  
                                      u3241 27F6                                        u2530 311C  
                                      u1650 35E0                                        u1730 302A  
                                      u2610 0E94                                        u2450 1E9C  
                                      u2370 1DF4                                        u2290 1CA6  
                                      u1810 23C4                                        u3250 28DE  
                                      _T2PR 000FBC                                        u2531 3118  
                                      u1651 35DC                                        u1731 3026  
                                      u2611 0E90                                        u2451 1E98  
                                      u2371 1DF0                                        u2291 1CA2  
                                      u1811 23C0                                        u3251 28DA  
                                      u3307 289C                                        u2540 313A  
                                      u1660 35FE                                        u1740 3262  
                                      u2700 114C                                        u2620 0ED2  
                                      u2460 1ED6                                        u2380 1E04  
                                      u1900 257E                                        u1820 2404  
                                      u3260 2982                                        u2541 3136  
                                      u1661 35FA                                        u1741 325E  
                                      u2701 1148                                        u2621 0ECE  
                                      u2461 1ED2                                        u2381 1E00  
                                      u1901 257A                                        u1821 2400  
                                      u3261 2978                                        u3317 2906  
                                      u2550 315A                                        u1670 361A  
                                      u1750 327A                                        u2710 118A  
                                      u2630 0F10                                        u2470 1EE8  
                                      u2390 1E20                                        u1910 2590  
                                      u1830 2444                                        u1718 3A02  
                                      u3190 29EA                                        u2551 3156  
                                      u1671 3616                                        u1751 3276  
                                      u2711 1186                                        u2631 0F0C  
                                      u3407 1FB4                                        u2471 1EE4  
                                      u2391 1E1C                                        u1911 258C  
                                      u1831 2440                                        u3191 29E6  
                                      u3327 2934                                        u2560 31AA  
                                      u2720 11C8                                        u2640 0F4E  
                                      u2480 1EF8                                        u1920 25BE  
                                      u1840 24BA                                        u1760 233C  
                                      u2561 31A6                                        u2721 11C4  
                                      u2641 0F4A                                        u3417 2022  
                                      u2481 1EF4                                        u1921 25BA  
                                      u1841 24B6                                        u1761 2338  
                                      u3337 2960                                        u2810 147C  
                                      u2730 1278                                        u2650 0F8C  
                                      u2490 1F18                                        u1930 25D4  
                                      u1850 24DC                                        u1770 234E  
                                      u2811 1478                                        u2731 1274  
                                      u2651 0F88                                        u3507 22A0  
                                      u3427 2090                                        u2491 1F14  
                                      u1931 25D0                                        u1851 24D8  
                                      u1771 234A                                        u3347 29B0  
                                      u2900 1736                                        u2820 14BA  
                                      u2740 12B6                                        u2660 0FCA  
                                      u1940 25E8                                        u1860 2506  
                                      u1780 235E                                        u2901 1732  
                                      u2821 14B6                                        u2741 12B2  
                                      u2661 0FC6                                        u3517 230E  
                                      u3437 20FE                                        u1941 25E4  
                                      u1861 2502                                        u1781 235A  
                                      u3357 2A1C                                        u2910 1774  
                                      u2830 14F8                                        u2750 12F4  
                                      u2670 1092                                        u1950 2602  
                                      u1870 252A                                        u1790 23A2  
                                      u3278 2986                                        u2911 1770  
                                      u3607 15EC                                        u2831 14F4  
                                      u2751 12F0                                        u2671 108E  
                                      u3527 0FE8                                        u3447 212A  
                                      u1951 25FE                                        u1871 2526  
                                      u1791 239E                                        u3367 2A4E  
                                      u3287 27D8                                        u2920 17F8  
                                      u2840 157C                                        u2808 13C2  
                                      u2760 1332                                        u2680 10D0  
                                      u1960 264A                                        u1880 2540  
                                      u2921 17F4                                        u3617 17A6  
                                      u2841 1578                                        u2761 132E  
                                      u2681 10CC                                        u3537 1014  
                                      u3457 2156                                        u1961 2646  
                                      u1881 253C                                        u3377 2AA6  
                                      u3297 281C                                        u2930 1836  
                                      u2850 15BA                                        u2770 1370  
                                      u2690 110E                                        u1970 267A  
                                      u1890 255E                                        u3707 3810  
                                      u3627 1854                                        u2931 1832  
                                      u2851 15B6                                        u2771 136C  
                                      u2691 110A                                        u3547 1040  
                                      u3467 21AE                                        u1971 2676  
                                      u1891 255A                                        u3387 2AD2  
                                      u2940 18FE                                        u2860 163E  
                                      u2780 13AE                                        u1980 26A8  
                                      u3717 383A                                        u2941 18FA  
                                      u3637 1880                                        u2861 163A  
                                      u2781 13AA                                        u3557 11FA  
                                      u3477 21DA                                        u1981 26A4  
                                      u3397 2C10                                        u2950 196C  
                                      u2870 167C                                        u2790 13C0  
                                      u1990 2C32                                        u3727 322A  
                                      u2951 1968                                        u3647 18AC  
                                      u2871 1678                                        u2791 13B8  
                                      u3567 1226                                        u3487 2206  
                                      u1991 2C2E                                        u2960 19AC  
                                      u2880 16BA                                        u3737 3A2C  
                                      u2961 19A8                                        u3657 1938  
                                      u2881 16B6                                        u3577 13FE  
                                      u3497 2232                                        u2970 1A26  
                                      u2890 16F8                                        u3747 3BF4  
                                      u2971 1A22                                        u3667 19CE  
                                      u2891 16F4                                        u3587 142A  
                                      u2980 1F82                                        u3677 19FA  
                                      u3597 152A                                        u2981 1F7E  
                                      u2990 1FF0                                        u3687 1A44  
                                      u2991 1FEC                                        u3697 1A70  
                                      _bLED 3CBC                                        _gLED 3CB6  
                                      _rLED 3CB0                                        _main 26BC  
                                      fsr1h 000FE2                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr1l 000FE1  
                                      fsr2l 000FD9                                        btemp 0057  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0034                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 0033                      __end_of_color_read_Red 3898  
                           __end_of_HighISR 0034                                ___param_bank 000000  
                    rangeCalibrate@calibCtr 007E                      rangeCalibrate@clearArr 0066  
                                     ?_bLED 0001                                       ?_gLED 0001  
                                     ?_rLED 0001                             __end_of___fladd 1F5A  
                                     ?_main 0001                             __end_of___fldiv 26BC  
                           __end_of___lwdiv 363A                                       i2l116 3BE2  
                                     i2l230 3B56                                       i2l233 3B7C  
                                     i2l242 3C9C                                       i2l236 3CA6  
                                     i2l245 3C6A                                       i2l521 3C16  
                                     i2l530 3AAE                                       i2l524 3B2C  
                                     i2l527 3C5E                                       i2l536 0030  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 3C94                  __end_of_I2C_2_Master_Write 3C54  
                                     tablat 000FF5                       _Color_Interrupts_init 3BE4  
                           __end_of_reverse 32AC                                       ttemp5 0058  
                                     ttemp6 005B                                       ttemp7 005F  
                                     status 000FD8                                       wtemp8 0058  
                   __end_of_color_read_RGBC 3546                       ??i2_color_writetoaddr 0004  
                   __end_of_color_read_Blue 3988                       _I2C_2_Master_RepStart 3C6C  
                           ?_color_read_Red 000D                                __end_of_bLED 3CC2  
                              __end_of_gLED 3CBC                             __initialization 3988  
                              __end_of_rLED 3CB6                                __end_of_main 29D2  
                                    ??_bLED 0009                 ?_Color_Interrupts_threshold 000D  
                                    ??_gLED 0009                            ??_rangeCalibrate 003D  
                                    ??_rLED 0009                                      ??_main 0080  
                             __activetblptr 000001                     __end_of_color_normalise 2F44  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l3030 3BC6                                      i2l2730 3B66  
                                    i2l3380 3C54                                      i2l3374 3BFE  
                                    i2l2728 3B56                                      i2l3376 3C08  
                                    i2l3378 3B04                                      i2l2780 3CA2  
                                    i2l2782 3C94                                      i2l2784 3C98  
                                    i2l2778 3C9E                                      i2l2786 3C62  
                                    i2l3754 3A7E                                      i2l3930 0028  
                                    _RG6PPS 000E88                                      i2l2788 3C66  
                                    i2l3932 002C                                      i2l3924 000A  
                                    i2l3926 001A                                      i2l3928 0024  
                                 ??_HighISR 0009                    __end_of_color_click_init 3A4C  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 2DD4    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 3C48  
                              _CCPTMRS0bits 000FAD                                      ___flge 30B0  
                                 ??___fladd 0011                                      ___wmul 3B7E  
                                 ??___fldiv 002A                                   ??___lwdiv 0013  
                                    clear_0 39A6                                      clear_1 39B2  
                                    clear_2 39BE                                      isa$std 000001  
                                    main@mL 00A2                                      main@mR 00AB  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 3A7E  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_reverse 0020    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 371E                            __end_of_turnPrep 3848  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 39C4                    __end_of_color_read_Clear 3938  
                  __end_of_color_read_Green 38E8                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 3C18  
                            __pcstackCOMRAM 0001                                __pidataBANK0 3CC2  
            __end_ofi2_persistence_register 3C60                                ?_tricolorLED 0001  
                          ?_color_normalise 003B                     i2_Color_Interrupts_init 3BFE  
                        rangeCalibrate@RGBC 0060                                  __pbssBANK0 00B4  
                                __pbssBANK1 0100                            rangeCalibrate@mL 0062  
                          rangeCalibrate@mR 0064                           _color_writetoaddr 3BA4  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0029  
                          motor_response@mR 002B                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                         ??_calibSwitchInit 0009                          motor_response@temp 0027  
                     __end_of_motor_retrace 2322                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 3C3C  
                                _buggy_path 00DB                                  _buggy_step 0051  
                   __end_of_Interrupts_init 3C2E                              _lowerThreshold 00D0  
                    color_writetoaddr@value 000B                            ??_color_read_Red 000F  
                                   _HighISR 0008                   __end_of_color_writetoaddr 3BC4  
                        _I2C_2_Master_Start 3C8A                         i2_I2C_2_Master_Idle 3B56  
                        _I2C_2_Master_Write 3C48                                     __Hparam 0000  
                       i2_I2C_2_Master_Stop 3C94                                     __Lparam 0000  
                         color_read_Red@tmp 0012                                     ___fladd 1A9A  
                                   ___fldiv 2322                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 35C6                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 004D  
                                   __pcinit 3988                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                   ?_turnPrep 0021  
                                   __ptext0 26BC                                     __ptext1 3C2E  
                                   __ptext2 3CB0                                     __ptext3 3CB6  
                                   __ptext4 3CBC                                     __ptext5 29D2  
                                   __ptext6 32AC                                     __ptext7 3480  
                                   __ptext8 3848                                     __ptext9 3898  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                                ??___xxtofl 0018                        ?i2_I2C_2_Master_Stop 0001  
                                 _T2HLTbits 000FBE                   ??i2_Color_Interrupts_init 0005  
                            _upperThreshold 00EA                                     _reverse 31B4  
                             _RxBufWriteCnt 0056                                 motorTRIS@mL 0009  
                     ?_persistence_register 0001                                 motorTRIS@mR 000B  
                               wallSmash@mL 001C                                 wallSmash@mR 001E  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 39C4                 __end_ofi2_color_writetoaddr 3BE4  
                         ?_color_click_init 0001                           __end_of_motorTRIS 3C80  
                         __end_of_wallSmash 3396                           __end_of_norm_stop 3A7E  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 3788                                     postinc0 000FEE  
                                   postinc1 000FE6                                     postinc2 000FDE  
                                _motorRinit 371E                               _interrupt_ctr 00D6  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 3546  
                                ??_turnLeft 0020                                  ??_turnPrep 0025  
                                 _PORTFbits 000F8E                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 36AC                       ??i2_I2C_2_Master_Stop 0002  
                               ___fladd@grs 0018                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 0035                                 ___fldiv@rem 002E  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 00B4  
                              _EUSART4TXbuf 0100                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 3AB0  
                            __end_of___flge 31B4                              _fullSpeedAhead 3396  
                            __end_of___wmul 3BA4                         color_read_Clear@tmp 0012  
                       start_initialization 3988                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0054                             _calibSwitchInit 3CA8  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 35C6  
                    __end_of_fullSpeedAhead 3480                                    ??___flge 0011  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009                         color_normalise@RGBC 003B  
                               __pdataBANK0 00EA               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 3CA8                __end_ofi2_I2C_2_Master_Write 3C6C  
                                 ___fladd@a 000D                                   ___fladd@b 0009  
                                 ___fldiv@a 0026                                   ___fldiv@b 0022  
                               __pbssCOMRAM 003F                               __pcstackBANK0 0060  
                            _motor_response 0E18                                    ?_HighISR 0001  
                                 _amb_clear 004B                                   _amb_green 00D4  
                           motor_retrace@mL 0029                             motor_retrace@mR 002B  
                          ___lwdiv@dividend 000F                             motor_response@j 002F  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fladd 0009                                    ?___fldiv 0022  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 3B2E  
                         _I2C_2_Master_Init 3AB0                           _I2C_2_Master_Read 39D6  
                         _I2C_2_Master_Stop 3C80                                _RxBufReadCnt 0055  
                                  ?_reverse 001C                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0013                      __end_of_motor_response 1A9A  
                  initDCmotorsPWM@PWMperiod 0009                     __end_of_calibSwitchInit 3CB0  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u316_40 001A                                    i2u316_41 0016  
                                  _PIR0bits 000E33                                    i2u168_40 3B66  
                                  i2u168_41 3B62                                    i2u169_40 3B7C  
                                  i2u169_41 3B78                                    _PIR4bits 000E37  
                                  i2u375_47 3C0E                                   _motorTRIS 3C76  
                                 _wallSmash 32AC                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 3A4C  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 3B56                   __end_of_I2C_2_Master_Init 3ADA  
                 __end_of_I2C_2_Master_Read 3A18                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 3C8A                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 0053  
                  i2color_writetoaddr@value 0003                                   _turnRight 363A  
                            _rangeCalibrate 29D2               __end_of_Color_Interrupts_init 3BFE  
                           ?_motor_response 0027               __end_of_I2C_2_Master_RepStart 3C76  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 30B0  
                      i2_I2C_2_Master_Start 3C9E                        i2_I2C_2_Master_Write 3C60  
                                  __Hrparam 0000                     motor_retrace@buggy_path 0027  
                         ??_color_normalise 003D                                  ?_motorTRIS 0009  
                                  __Lrparam 0000                                  ?_wallSmash 001C  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 3B2E                i2_Color_Interrupts_threshold 3B04  
               __end_ofi2_I2C_2_Master_Idle 3B7E                 __end_ofi2_I2C_2_Master_Stop 3C9E  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               _motor_retrace 1F5A  
                                _ANSELFbits 000EB4                               ??_tricolorLED 0009  
                                  _amb_blue 00D2                                    ___xxtofl 2C20  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                    __end_of_rangeCalibrate 2C20                             ___lwdiv@divisor 0011  
                           ___lwdiv@counter 0015                                  ?_turnRight 001C  
                                  __ptext10 38E8                                    __ptext11 3938  
                                  __ptext20 3396                                    __ptext12 3C6C  
                                  __ptext21 0E18                                    __ptext13 39D6  
                                  __ptext30 30B0                                    __ptext22 363A  
                                  __ptext14 2DD4                                    __ptext31 3C76  
                                  __ptext23 37F2                                    __ptext15 2C20  
                                  __ptext40 3BE4                                    __ptext32 371E  
                                  __ptext24 31B4                                    __ptext16 2322  
                                  __ptext41 3BA4                                    __ptext33 3788  
                                  __ptext25 3A4C                                    __ptext17 1A9A  
                                  __ptext50 3BFE                                    __ptext42 3C48  
                                  __ptext34 3546                                    __ptext26 36AC  
                                  __ptext18 3C3C                                    __ptext51 3BC4  
                                  __ptext43 3C80                                    __ptext35 3A18  
                                  __ptext27 2F44                                    __ptext19 1F5A  
                                  __ptext52 3C60                                    __ptext44 3C8A  
                                  __ptext36 3AB0                                    __ptext28 3B7E  
                                  __ptext53 3C94                                    __ptext45 3B2E  
                                  __ptext37 3CA8                                    __ptext29 35C6  
                                  __ptext54 3C9E                                    __ptext38 3C18  
                                  __ptext55 3B56                                    __ptext47 3A7E  
                                  __ptext39 3ADA                                    __ptext48 3C54  
                                  __ptext49 3B04                            ?_calibSwitchInit 0001  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                                turnLeft@mL 001C                                  turnLeft@mR 001E  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                 reverse@mL 001C                                   reverse@mR 001E  
                                  _lost_ctr 004F                                  turnPrep@mL 0021  
                                turnPrep@mR 0023                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 0082  
                                  int$flags 0057          __end_of_Color_Interrupts_threshold 3B04  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 3ADA  
                                  _turnLeft 36AC                                    _turnPrep 37F2  
                            ?_motor_retrace 0027                                  _INTCONbits 000FF2  
                           ?_rangeCalibrate 0060                                 _setMotorPWM 2F44  
                              motorLinit@mL 0009                         __end_of_tricolorLED 3C3C  
                                  intlevel2 0000                                _motor_return 00DA  
                        __end_of_motorLinit 37F2                          __end_of_motorRinit 3788  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_motorTRIS 000D                                 ??_wallSmash 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 3C18  
                          _color_click_init 3A18                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 00D8  
                    i2_persistence_register 3C54                                 ??_turnRight 0020  
                             ___fladd@signs 0015                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                                ___fladd@aexp 0016  
                    ??i2_I2C_2_Master_Write 0002                                ___fladd@bexp 0017  
                  ??_Color_Interrupts_clear 0009  
