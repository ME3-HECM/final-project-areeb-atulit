

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 05 15:26:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 06/04/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataBANK1
   100   0020F0                     __pidataBANK1:
   101                           	callstack 0
   102                           
   103                           ;initializer for _interrupt_flag
   104   0020F0  0001               	dw	1
   105   000000                     _TRISBbits	set	3970
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _TRISCbits	set	3971
   110   000000                     _TRISDbits	set	3972
   111   000000                     _TRISEbits	set	3973
   112   000000                     _TRISFbits	set	3974
   113   000000                     _SSP2CON2bits	set	3802
   114   000000                     _RX4PPS	set	3605
   115   000000                     _SSP2CLKPPS	set	3612
   116   000000                     _SSP2DATPPS	set	3613
   117   000000                     _ANSELDbits	set	3751
   118   000000                     _SSP2ADD	set	3798
   119   000000                     _SSP2CON1bits	set	3801
   120   000000                     _LATAbits	set	3961
   121   000000                     _LATGbits	set	3967
   122   000000                     _TRISGbits	set	3975
   123   000000                     _T2PR	set	4028
   124   000000                     _T2CONbits	set	4029
   125   000000                     _TMR0L	set	4051
   126   000000                     _TMR0H	set	4052
   127   000000                     _T0CON0bits	set	4053
   128   000000                     _T0CON1bits	set	4054
   129   000000                     _INTCONbits	set	4082
   130   000000                     _CCPR2H	set	4006
   131   000000                     _CCPR1H	set	4010
   132   000000                     _TRISAbits	set	3969
   133   000000                     _LATEbits	set	3965
   134   000000                     _LATFbits	set	3966
   135   000000                     _RC4REG	set	3811
   136   000000                     _SP4BRGL	set	3813
   137   000000                     _TX4STAbits	set	3816
   138   000000                     _BAUD4CONbits	set	3817
   139   000000                     _SSP2CON2	set	3802
   140   000000                     _SSP2STAT	set	3800
   141   000000                     _SSP2BUF	set	3797
   142   000000                     _IPR0bits	set	3615
   143   000000                     _PIE0bits	set	3625
   144   000000                     _PIE4bits	set	3629
   145   000000                     _RC0PPS	set	3682
   146   000000                     _RD5PPS	set	3695
   147   000000                     _RE2PPS	set	3700
   148   000000                     _ANSELBbits	set	3738
   149   000000                     _RD6PPS	set	3696
   150   000000                     _RC7PPS	set	3689
   151   000000                     _CCPR4H	set	3873
   152   000000                     _CCPR3H	set	3877
   153   000000                     _PIR0bits	set	3635
   154   000000                     _PIR4bits	set	3639
   155   000000                     _RE4PPS	set	3702
   156   000000                     _RG6PPS	set	3720
   157   000000                     _T2CLKCONbits	set	4031
   158   000000                     _T2HLTbits	set	4030
   159   000000                     _CCP1CONbits	set	4011
   160   000000                     _CCPTMRS0bits	set	4013
   161   000000                     _CCP2CONbits	set	4007
   162   000000                     _CCP3CONbits	set	3878
   163   000000                     _CCP4CONbits	set	3874
   164                           
   165                           	psect	smallconst
   166   000E00                     __psmallconst:
   167                           	callstack 0
   168   000E00  00                 	db	0
   169   000E01                     STR_1:
   170                           
   171                           ; BSR set to: 14
   172   000E01  52                 	db	82	;'R'
   173   000E02  47                 	db	71	;'G'
   174   000E03  42                 	db	66	;'B'
   175   000E04  43                 	db	67	;'C'
   176   000E05  3A                 	db	58	;':'
   177   000E06  25                 	db	37
   178   000E07  69                 	db	105	;'i'
   179   000E08  20                 	db	32
   180   000E09  25                 	db	37
   181   000E0A  69                 	db	105	;'i'
   182   000E0B  20                 	db	32
   183   000E0C  25                 	db	37
   184   000E0D  69                 	db	105	;'i'
   185   000E0E  20                 	db	32
   186   000E0F  25                 	db	37
   187   000E10  69                 	db	105	;'i'
   188   000E11  0A                 	db	10
   189   000E12  00                 	db	0
   190   000E13  00                 	db	0	; dummy byte at the end
   191   000000                     
   192                           ; #config settings
   193                           
   194                           	psect	cinit
   195   001DEE                     __pcinit:
   196                           	callstack 0
   197   001DEE                     start_initialization:
   198                           	callstack 0
   199   001DEE                     __initialization:
   200                           	callstack 0
   201                           
   202                           ; Initialize objects allocated to BANK1 (2 bytes)
   203                           ; load TBLPTR registers with __pidataBANK1
   204   001DEE  0EF0               	movlw	low __pidataBANK1
   205   001DF0  6EF6               	movwf	tblptrl,c
   206   001DF2  0E20               	movlw	high __pidataBANK1
   207   001DF4  6EF7               	movwf	tblptrh,c
   208   001DF6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   209   001DF8  6EF8               	movwf	tblptru,c
   210   001DFA  0009               	tblrd		*+	;fetch initializer
   211   001DFC  CFF5 F172          	movff	tablat,__pdataBANK1
   212   001E00  0009               	tblrd		*+	;fetch initializer
   213   001E02  CFF5 F173          	movff	tablat,__pdataBANK1+1
   214                           
   215                           ; Clear objects allocated to BANK1 (114 bytes)
   216   001E06  EE01  F000         	lfsr	0,__pbssBANK1
   217   001E0A  0E72               	movlw	114
   218   001E0C                     clear_0:
   219   001E0C  6AEE               	clrf	postinc0,c
   220   001E0E  06E8               	decf	wreg,f,c
   221   001E10  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (7 bytes)
   224   001E12  EE00  F0F9         	lfsr	0,__pbssBANK0
   225   001E16  0E07               	movlw	7
   226   001E18                     clear_1:
   227   001E18  6AEE               	clrf	postinc0,c
   228   001E1A  06E8               	decf	wreg,f,c
   229   001E1C  E1FD               	bnz	clear_1
   230   001E1E                     end_of_initialization:
   231                           	callstack 0
   232   001E1E                     __end_of__initialization:
   233                           	callstack 0
   234   001E1E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235   001E20  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236   001E22  0E00               	movlw	low (__Lsmallconst shr (0+16))
   237   001E24  6EF8               	movwf	tblptru,c
   238   001E26  0E0E               	movlw	high __Lsmallconst
   239   001E28  6EF7               	movwf	tblptrh,c
   240   001E2A  0100               	movlb	0
   241   001E2C  EF1D  F00B         	goto	_main	;jump to C main() function
   242                           
   243                           	psect	bssBANK0
   244   0000F9                     __pbssBANK0:
   245                           	callstack 0
   246   0000F9                     _prec:
   247                           	callstack 0
   248   0000F9                     	ds	2
   249   0000FB                     _flags:
   250                           	callstack 0
   251   0000FB                     	ds	1
   252   0000FC                     _TxBufReadCnt:
   253                           	callstack 0
   254   0000FC                     	ds	1
   255   0000FD                     _TxBufWriteCnt:
   256                           	callstack 0
   257   0000FD                     	ds	1
   258   0000FE                     _RxBufReadCnt:
   259                           	callstack 0
   260   0000FE                     	ds	1
   261   0000FF                     _RxBufWriteCnt:
   262                           	callstack 0
   263   0000FF                     	ds	1
   264                           
   265                           	psect	bssBANK1
   266   000100                     __pbssBANK1:
   267                           	callstack 0
   268   000100                     _EUSART4TXbuf:
   269                           	callstack 0
   270   000100                     	ds	60
   271   00013C                     _EUSART4RXbuf:
   272                           	callstack 0
   273   00013C                     	ds	20
   274   000150                     _width:
   275                           	callstack 0
   276   000150                     	ds	2
   277   000152                     _dbuf:
   278                           	callstack 0
   279   000152                     	ds	32
   280                           
   281                           	psect	dataBANK1
   282   000172                     __pdataBANK1:
   283                           	callstack 0
   284   000172                     _interrupt_flag:
   285                           	callstack 0
   286   000172                     	ds	2
   287                           
   288                           	psect	cstackBANK0
   289   000060                     __pcstackBANK0:
   290                           	callstack 0
   291   000060                     ?_sprintf:
   292                           	callstack 0
   293   000060                     sprintf@s:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0x0
   297   000060                     	ds	2
   298   000062                     sprintf@fmt:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0x2
   302   000062                     	ds	10
   303   00006C                     sprintf@ap:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xC
   307   00006C                     	ds	2
   308   00006E                     sprintf@f:
   309                           	callstack 0
   310                           
   311                           ; 11 bytes @ 0xE
   312   00006E                     	ds	11
   313   000079                     main@buf:
   314                           	callstack 0
   315                           
   316                           ; 100 bytes @ 0x19
   317   000079                     	ds	100
   318   0000DD                     main@lowerThreshold:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x7D
   322   0000DD                     	ds	2
   323   0000DF                     main@RGBC:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x7F
   327   0000DF                     	ds	8
   328   0000E7                     main@mL:
   329                           	callstack 0
   330                           
   331                           ; 9 bytes @ 0x87
   332   0000E7                     	ds	9
   333   0000F0                     main@mR:
   334                           	callstack 0
   335                           
   336                           ; 9 bytes @ 0x90
   337   0000F0                     	ds	9
   338                           
   339                           	psect	cstackCOMRAM
   340   000001                     __pcstackCOMRAM:
   341                           	callstack 0
   342   000001                     ??_I2C_2_Master_Idle:
   343   000001                     ?___wmul:
   344                           	callstack 0
   345   000001                     ?___aodiv:
   346                           	callstack 0
   347   000001                     ?___aomod:
   348                           	callstack 0
   349   000001                     sendCharSerial4@charToSend:
   350                           	callstack 0
   351   000001                     initDCmotorsPWM@PWMperiod:
   352                           	callstack 0
   353   000001                     motorLinit@mL:
   354                           	callstack 0
   355   000001                     motorRinit@mR:
   356                           	callstack 0
   357   000001                     ___wmul@multiplier:
   358                           	callstack 0
   359   000001                     fputc@c:
   360                           	callstack 0
   361   000001                     ___aodiv@dividend:
   362                           	callstack 0
   363   000001                     ___aomod@dividend:
   364                           	callstack 0
   365                           
   366                           ; 8 bytes @ 0x0
   367   000001                     	ds	1
   368   000002                     ??_I2C_2_Master_Read:
   369   000002                     I2C_2_Master_Write@data_byte:
   370                           	callstack 0
   371   000002                     sendStringSerial4@string:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x1
   375   000002                     	ds	1
   376   000003                     color_writetoaddr@value:
   377                           	callstack 0
   378   000003                     I2C_2_Master_Read@ack:
   379                           	callstack 0
   380   000003                     ___wmul@multiplicand:
   381                           	callstack 0
   382   000003                     fputc@fp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x2
   386   000003                     	ds	1
   387   000004                     color_writetoaddr@address:
   388                           	callstack 0
   389   000004                     I2C_2_Master_Read@tmp:
   390                           	callstack 0
   391   000004                     sendStringSerial4@i:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x3
   395   000004                     	ds	1
   396   000005                     ??_Color_Interrupts_init:
   397   000005                     ??_fputc:
   398   000005                     ??_color_click_init:
   399   000005                     ?_color_read_Red:
   400                           	callstack 0
   401   000005                     ?_color_read_Green:
   402                           	callstack 0
   403   000005                     ?_color_read_Blue:
   404                           	callstack 0
   405   000005                     ?_color_read_Clear:
   406                           	callstack 0
   407   000005                     Color_Interrupts_threshold@upperThreshold:
   408                           	callstack 0
   409   000005                     ___wmul@product:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x4
   413   000005                     	ds	1
   414   000006                     RGBC2Serial@str:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x5
   418   000006                     	ds	1
   419   000007                     ??_color_read_Red:
   420   000007                     ??_color_read_Green:
   421   000007                     ??_color_read_Blue:
   422   000007                     ??_color_read_Clear:
   423   000007                     ?___lwdiv:
   424                           	callstack 0
   425   000007                     Color_Interrupts_threshold@lowerThreshold:
   426                           	callstack 0
   427   000007                     ___lwdiv@dividend:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x6
   431   000007                     	ds	1
   432   000008                     ??_RGBC2Serial:
   433                           
   434                           ; 1 bytes @ 0x7
   435   000008                     	ds	1
   436   000009                     ___lwdiv@divisor:
   437                           	callstack 0
   438   000009                     ___aodiv@divisor:
   439                           	callstack 0
   440   000009                     ___aomod@divisor:
   441                           	callstack 0
   442                           
   443                           ; 8 bytes @ 0x8
   444   000009                     	ds	1
   445   00000A                     color_read_Red@tmp:
   446                           	callstack 0
   447   00000A                     color_read_Green@tmp:
   448                           	callstack 0
   449   00000A                     color_read_Blue@tmp:
   450                           	callstack 0
   451   00000A                     color_read_Clear@tmp:
   452                           	callstack 0
   453   00000A                     fputs@s:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x9
   457   00000A                     	ds	1
   458   00000B                     ___lwdiv@quotient:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0xA
   462   00000B                     	ds	1
   463   00000C                     color_read_RGBC@temp:
   464                           	callstack 0
   465   00000C                     fputs@fp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0xB
   469   00000C                     	ds	1
   470   00000D                     ___lwdiv@counter:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0xC
   474   00000D                     	ds	1
   475   00000E                     fputs@c:
   476                           	callstack 0
   477   00000E                     setMotorPWM@m:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0xD
   481   00000E                     	ds	1
   482   00000F                     fputs@i:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0xE
   486   00000F                     	ds	1
   487   000010                     ??_setMotorPWM:
   488                           
   489                           ; 1 bytes @ 0xF
   490   000010                     	ds	1
   491   000011                     ___aodiv@counter:
   492                           	callstack 0
   493   000011                     ___aomod@counter:
   494                           	callstack 0
   495   000011                     pad@fp:
   496                           	callstack 0
   497                           
   498                           ; 2 bytes @ 0x10
   499   000011                     	ds	1
   500   000012                     setMotorPWM@posDuty:
   501                           	callstack 0
   502   000012                     ___aodiv@sign:
   503                           	callstack 0
   504   000012                     ___aomod@sign:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x11
   508   000012                     	ds	1
   509   000013                     ?_abs:
   510                           	callstack 0
   511   000013                     setMotorPWM@negDuty:
   512                           	callstack 0
   513   000013                     pad@buf:
   514                           	callstack 0
   515   000013                     abs@a:
   516                           	callstack 0
   517   000013                     ___aodiv@quotient:
   518                           	callstack 0
   519                           
   520                           ; 8 bytes @ 0x12
   521   000013                     	ds	1
   522   000014                     norm_stop@mL:
   523                           	callstack 0
   524   000014                     turnRight@mL:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x13
   528   000014                     	ds	1
   529   000015                     ??_abs:
   530   000015                     pad@p:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x14
   534   000015                     	ds	1
   535   000016                     norm_stop@mR:
   536                           	callstack 0
   537   000016                     turnRight@mR:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x15
   541   000016                     	ds	1
   542   000017                     ??_pad:
   543                           
   544                           ; 1 bytes @ 0x16
   545   000017                     	ds	1
   546   000018                     pad@i:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x17
   550   000018                     	ds	2
   551   00001A                     pad@w:
   552                           	callstack 0
   553                           
   554                           ; 2 bytes @ 0x19
   555   00001A                     	ds	2
   556   00001C                     dtoa@fp:
   557                           	callstack 0
   558                           
   559                           ; 2 bytes @ 0x1B
   560   00001C                     	ds	2
   561   00001E                     dtoa@d:
   562                           	callstack 0
   563                           
   564                           ; 8 bytes @ 0x1D
   565   00001E                     	ds	8
   566   000026                     ??_dtoa:
   567                           
   568                           ; 1 bytes @ 0x25
   569   000026                     	ds	8
   570   00002E                     _dtoa$2347:
   571                           	callstack 0
   572                           
   573                           ; 2 bytes @ 0x2D
   574   00002E                     	ds	2
   575   000030                     dtoa@p:
   576                           	callstack 0
   577                           
   578                           ; 2 bytes @ 0x2F
   579   000030                     	ds	2
   580   000032                     dtoa@w:
   581                           	callstack 0
   582                           
   583                           ; 2 bytes @ 0x31
   584   000032                     	ds	2
   585   000034                     dtoa@n:
   586                           	callstack 0
   587                           
   588                           ; 8 bytes @ 0x33
   589   000034                     	ds	8
   590   00003C                     dtoa@i:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x3B
   594   00003C                     	ds	2
   595   00003E                     dtoa@s:
   596                           	callstack 0
   597                           
   598                           ; 1 bytes @ 0x3D
   599   00003E                     	ds	1
   600   00003F                     vfpfcnvrt@fp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x3E
   604   00003F                     	ds	2
   605   000041                     vfpfcnvrt@fmt:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x40
   609   000041                     	ds	2
   610   000043                     vfpfcnvrt@ap:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x42
   614   000043                     	ds	2
   615   000045                     ??_vfpfcnvrt:
   616                           
   617                           ; 1 bytes @ 0x44
   618   000045                     	ds	2
   619   000047                     vfpfcnvrt@convarg:
   620                           	callstack 0
   621                           
   622                           ; 8 bytes @ 0x46
   623   000047                     	ds	8
   624   00004F                     vfpfcnvrt@cp:
   625                           	callstack 0
   626                           
   627                           ; 2 bytes @ 0x4E
   628   00004F                     	ds	2
   629   000051                     ?_vfprintf:
   630                           	callstack 0
   631   000051                     vfprintf@fp:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x50
   635   000051                     	ds	2
   636   000053                     vfprintf@fmt:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x52
   640   000053                     	ds	2
   641   000055                     vfprintf@ap:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x54
   645   000055                     	ds	2
   646   000057                     vfprintf@cfmt:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0x56
   650   000057                     	ds	2
   651   000059                     colorVal2String@buf:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x58
   655   000059                     	ds	2
   656   00005B                     colorVal2String@temp:
   657                           	callstack 0
   658                           
   659                           ; 2 bytes @ 0x5A
   660   00005B                     	ds	2
   661   00005D                     ??_main:
   662                           
   663                           ; 1 bytes @ 0x5C
   664   00005D                     	ds	2
   665                           
   666 ;;
   667 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   668 ;;
   669 ;; *************** function _main *****************
   670 ;; Defined at:
   671 ;;		line 20 in file "main.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  buf           100   25[BANK0 ] unsigned char [100]
   676 ;;  mR              9  144[BANK0 ] struct DC_motor
   677 ;;  mL              9  135[BANK0 ] struct DC_motor
   678 ;;  RGBC            8  127[BANK0 ] struct RGBC_val
   679 ;;  lowerThresho    2  125[BANK0 ] int 
   680 ;;  upperThresho    2    0        int 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   691 ;;      Locals:         0     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   692 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   693 ;;      Totals:         2     128       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   694 ;;Total ram usage:      130 bytes
   695 ;; Hardware stack levels required when called: 10
   696 ;; This function calls:
   697 ;;		_Color_Interrupts_clear
   698 ;;		_Color_Interrupts_init
   699 ;;		_Color_Interrupts_threshold
   700 ;;		_colorVal2String
   701 ;;		_color_click_init
   702 ;;		_color_read_RGBC
   703 ;;		_initDCmotorsPWM
   704 ;;		_initUSART4
   705 ;;		_motorLinit
   706 ;;		_motorRinit
   707 ;;		_norm_stop
   708 ;;		_persistence_register
   709 ;;		_tricolorLED
   710 ;;		_turnRight
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text0
   717   00163A                     __ptext0:
   718                           	callstack 0
   719   00163A                     _main:
   720                           	callstack 21
   721   00163A                     
   722                           ;main.c: 25:     int lowerThreshold = 0;
   723   00163A  0E00               	movlw	0
   724   00163C  0100               	movlb	0	; () banked
   725   00163E  6FDE               	movwf	(main@lowerThreshold+1)& (0+255),b
   726   001640  0E00               	movlw	0
   727   001642  6FDD               	movwf	main@lowerThreshold& (0+255),b
   728   001644                     
   729                           ; BSR set to: 0
   730                           ;main.c: 27:     color_click_init();
   731   001644  EC79  F00F         	call	_color_click_init	;wreg free
   732   001648                     
   733                           ;main.c: 28:     Color_Interrupts_init();
   734   001648  EC39  F010         	call	_Color_Interrupts_init	;wreg free
   735   00164C                     
   736                           ;main.c: 29:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   737   00164C  0E09               	movlw	9
   738   00164E  6E06               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
   739   001650  0EC4               	movlw	196
   740   001652  6E05               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
   741   001654  0E00               	movlw	0
   742   001656  6E08               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
   743   001658  0E00               	movlw	0
   744   00165A  6E07               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
   745   00165C  ECC1  F00F         	call	_Color_Interrupts_threshold	;wreg free
   746   001660                     
   747                           ;main.c: 30:     persistence_register();
   748   001660  EC5D  F010         	call	_persistence_register	;wreg free
   749   001664                     
   750                           ;main.c: 31:     initUSART4();
   751   001664  ECFD  F00F         	call	_initUSART4	;wreg free
   752   001668                     
   753                           ;main.c: 32:     initDCmotorsPWM(200);
   754   001668  0E00               	movlw	0
   755   00166A  6E02               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   756   00166C  0EC8               	movlw	200
   757   00166E  6E01               	movwf	initDCmotorsPWM@PWMperiod^0,c
   758   001670  EC24  F00C         	call	_initDCmotorsPWM	;wreg free
   759   001674                     
   760                           ;main.c: 33:     DC_motor mL, mR;;main.c: 34:     motorLinit(&mL);
   761   001674  0EE7               	movlw	low main@mL
   762   001676  6E01               	movwf	motorLinit@mL^0,c
   763   001678  0E00               	movlw	high main@mL
   764   00167A  6E02               	movwf	(motorLinit@mL+1)^0,c
   765   00167C  EC81  F00D         	call	_motorLinit	;wreg free
   766   001680                     
   767                           ;main.c: 35:     motorRinit(&mR);
   768   001680  0EF0               	movlw	low main@mR
   769   001682  6E01               	movwf	motorRinit@mR^0,c
   770   001684  0E00               	movlw	high main@mR
   771   001686  6E02               	movwf	(motorRinit@mR+1)^0,c
   772   001688  EC4C  F00D         	call	_motorRinit	;wreg free
   773   00168C                     
   774                           ;main.c: 37:     TRISEbits.TRISE2 = 0;
   775   00168C  9485               	bcf	133,2,c	;volatile
   776   00168E                     
   777                           ;main.c: 38:     TRISEbits.TRISE4 = 0;
   778   00168E  9885               	bcf	133,4,c	;volatile
   779   001690                     
   780                           ;main.c: 39:     TRISCbits.TRISC7 = 0;
   781   001690  9E83               	bcf	131,7,c	;volatile
   782   001692                     
   783                           ;main.c: 40:     TRISGbits.TRISG6 = 0;
   784   001692  9C87               	bcf	135,6,c	;volatile
   785   001694                     
   786                           ;main.c: 45:     tricolorLED();
   787   001694  EC52  F010         	call	_tricolorLED	;wreg free
   788   001698                     l2352:
   789                           
   790                           ;main.c: 47:         color_read_RGBC(&RGBC);
   791   001698  0EDF               	movlw	low main@RGBC
   792   00169A  6E0C               	movwf	color_read_RGBC@temp^0,c
   793   00169C  0E00               	movlw	high main@RGBC
   794   00169E  6E0D               	movwf	(color_read_RGBC@temp+1)^0,c
   795   0016A0  ECB6  F00D         	call	_color_read_RGBC	;wreg free
   796   0016A4                     
   797                           ;main.c: 48:         colorVal2String(buf, &RGBC);
   798   0016A4  0E79               	movlw	low main@buf
   799   0016A6  6E59               	movwf	colorVal2String@buf^0,c
   800   0016A8  0E00               	movlw	high main@buf
   801   0016AA  6E5A               	movwf	(colorVal2String@buf+1)^0,c
   802   0016AC  0EDF               	movlw	low main@RGBC
   803   0016AE  6E5B               	movwf	colorVal2String@temp^0,c
   804   0016B0  0E00               	movlw	high main@RGBC
   805   0016B2  6E5C               	movwf	(colorVal2String@temp+1)^0,c
   806   0016B4  EC14  F00D         	call	_colorVal2String	;wreg free
   807   0016B8                     
   808                           ;main.c: 51:         _delay((unsigned long)((2000)*(64000000/4000.0)));
   809   0016B8  0EA3               	movlw	163
   810   0016BA  6E5E               	movwf	(??_main+1)^0,c
   811   0016BC  0E57               	movlw	87
   812   0016BE  6E5D               	movwf	??_main^0,c
   813   0016C0  0E02               	movlw	2
   814   0016C2                     u1267:
   815   0016C2  2EE8               	decfsz	wreg,f,c
   816   0016C4  D7FE               	bra	u1267
   817   0016C6  2E5D               	decfsz	??_main^0,f,c
   818   0016C8  D7FC               	bra	u1267
   819   0016CA  2E5E               	decfsz	(??_main+1)^0,f,c
   820   0016CC  D7FA               	bra	u1267
   821   0016CE  D000               	nop2	
   822   0016D0                     
   823                           ;main.c: 52:         if (interrupt_flag == 0) {
   824   0016D0  0101               	movlb	1	; () banked
   825   0016D2  5172               	movf	_interrupt_flag& (0+255),w,b
   826   0016D4  1173               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   827   0016D6  A4D8               	btfss	status,2,c
   828   0016D8  EF70  F00B         	goto	u1131
   829   0016DC  EF72  F00B         	goto	u1130
   830   0016E0                     u1131:
   831   0016E0  EFA5  F00B         	goto	l2372
   832   0016E4                     u1130:
   833   0016E4                     
   834                           ; BSR set to: 1
   835                           ;main.c: 53:             norm_stop(&mL, &mR);
   836   0016E4  0EE7               	movlw	low main@mL
   837   0016E6  6E14               	movwf	norm_stop@mL^0,c
   838   0016E8  0E00               	movlw	high main@mL
   839   0016EA  6E15               	movwf	(norm_stop@mL+1)^0,c
   840   0016EC  0EF0               	movlw	low main@mR
   841   0016EE  6E16               	movwf	norm_stop@mR^0,c
   842   0016F0  0E00               	movlw	high main@mR
   843   0016F2  6E17               	movwf	(norm_stop@mR+1)^0,c
   844   0016F4  EC93  F00F         	call	_norm_stop	;wreg free
   845   0016F8                     
   846                           ;main.c: 54:             _delay((unsigned long)((2000)*(64000000/4000.0)));
   847   0016F8  0EA3               	movlw	163
   848   0016FA  6E5E               	movwf	(??_main+1)^0,c
   849   0016FC  0E57               	movlw	87
   850   0016FE  6E5D               	movwf	??_main^0,c
   851   001700  0E02               	movlw	2
   852   001702                     u1277:
   853   001702  2EE8               	decfsz	wreg,f,c
   854   001704  D7FE               	bra	u1277
   855   001706  2E5D               	decfsz	??_main^0,f,c
   856   001708  D7FC               	bra	u1277
   857   00170A  2E5E               	decfsz	(??_main+1)^0,f,c
   858   00170C  D7FA               	bra	u1277
   859   00170E  D000               	nop2	
   860   001710                     
   861                           ;main.c: 55:             interrupt_flag = 1;
   862   001710  0E00               	movlw	0
   863   001712  0101               	movlb	1	; () banked
   864   001714  6F73               	movwf	(_interrupt_flag+1)& (0+255),b
   865   001716  0E01               	movlw	1
   866   001718  6F72               	movwf	_interrupt_flag& (0+255),b
   867   00171A                     
   868                           ; BSR set to: 1
   869                           ;main.c: 56:             turnRight(&mL, &mR);
   870   00171A  0EE7               	movlw	low main@mL
   871   00171C  6E14               	movwf	turnRight@mL^0,c
   872   00171E  0E00               	movlw	high main@mL
   873   001720  6E15               	movwf	(turnRight@mL+1)^0,c
   874   001722  0EF0               	movlw	low main@mR
   875   001724  6E16               	movwf	turnRight@mR^0,c
   876   001726  0E00               	movlw	high main@mR
   877   001728  6E17               	movwf	(turnRight@mR+1)^0,c
   878   00172A  ECDB  F00C         	call	_turnRight	;wreg free
   879   00172E                     
   880                           ;main.c: 57:             _delay((unsigned long)((500)*(64000000/4000.0)));
   881   00172E  0E29               	movlw	41
   882   001730  6E5E               	movwf	(??_main+1)^0,c
   883   001732  0E96               	movlw	150
   884   001734  6E5D               	movwf	??_main^0,c
   885   001736  0E7F               	movlw	127
   886   001738                     u1287:
   887   001738  2EE8               	decfsz	wreg,f,c
   888   00173A  D7FE               	bra	u1287
   889   00173C  2E5D               	decfsz	??_main^0,f,c
   890   00173E  D7FC               	bra	u1287
   891   001740  2E5E               	decfsz	(??_main+1)^0,f,c
   892   001742  D7FA               	bra	u1287
   893   001744  F000               	nop	
   894   001746                     
   895                           ;main.c: 58:             Color_Interrupts_clear();
   896   001746  EC2C  F010         	call	_Color_Interrupts_clear	;wreg free
   897   00174A                     l2372:
   898                           
   899                           ;main.c: 60:         norm_stop(&mL, &mR);
   900   00174A  0EE7               	movlw	low main@mL
   901   00174C  6E14               	movwf	norm_stop@mL^0,c
   902   00174E  0E00               	movlw	high main@mL
   903   001750  6E15               	movwf	(norm_stop@mL+1)^0,c
   904   001752  0EF0               	movlw	low main@mR
   905   001754  6E16               	movwf	norm_stop@mR^0,c
   906   001756  0E00               	movlw	high main@mR
   907   001758  6E17               	movwf	(norm_stop@mR+1)^0,c
   908   00175A  EC93  F00F         	call	_norm_stop	;wreg free
   909   00175E                     
   910                           ;main.c: 61:         _delay((unsigned long)((500)*(64000000/4000.0)));
   911   00175E  0E29               	movlw	41
   912   001760  6E5E               	movwf	(??_main+1)^0,c
   913   001762  0E96               	movlw	150
   914   001764  6E5D               	movwf	??_main^0,c
   915   001766  0E7F               	movlw	127
   916   001768                     u1297:
   917   001768  2EE8               	decfsz	wreg,f,c
   918   00176A  D7FE               	bra	u1297
   919   00176C  2E5D               	decfsz	??_main^0,f,c
   920   00176E  D7FC               	bra	u1297
   921   001770  2E5E               	decfsz	(??_main+1)^0,f,c
   922   001772  D7FA               	bra	u1297
   923   001774  F000               	nop	
   924   001776  EF4C  F00B         	goto	l2352
   925   00177A  EF16  F000         	goto	start
   926   00177E                     __end_of_main:
   927                           	callstack 0
   928                           
   929 ;; *************** function _turnRight *****************
   930 ;; Defined at:
   931 ;;		line 144 in file "dc_motor.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  mL              2   19[COMRAM] PTR struct DC_motor
   934 ;;		 -> main@mL(9), 
   935 ;;  mR              2   21[COMRAM] PTR struct DC_motor
   936 ;;		 -> main@mR(9), 
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   948 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   951 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   952 ;;Total ram usage:        4 bytes
   953 ;; Hardware stack levels used: 1
   954 ;; Hardware stack levels required when called: 3
   955 ;; This function calls:
   956 ;;		_setMotorPWM
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text1
   963   0019B6                     __ptext1:
   964                           	callstack 0
   965   0019B6                     _turnRight:
   966                           	callstack 27
   967   0019B6                     
   968                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
   969   0019B6  C014  FFD9         	movff	turnRight@mL,fsr2l
   970   0019BA  C015  FFDA         	movff	turnRight@mL+1,fsr2h
   971   0019BE  0E32               	movlw	50
   972   0019C0  6EDF               	movwf	indf2,c
   973                           
   974                           ;dc_motor.c: 147:     mR->power = 50;
   975   0019C2  C016  FFD9         	movff	turnRight@mR,fsr2l
   976   0019C6  C017  FFDA         	movff	turnRight@mR+1,fsr2h
   977   0019CA  0E32               	movlw	50
   978   0019CC  6EDF               	movwf	indf2,c
   979   0019CE                     
   980                           ;dc_motor.c: 148:     mL->brakemode = 1;
   981   0019CE  EE20 F002          	lfsr	2,2
   982   0019D2  5014               	movf	turnRight@mL^0,w,c
   983   0019D4  26D9               	addwf	fsr2l,f,c
   984   0019D6  5015               	movf	(turnRight@mL+1)^0,w,c
   985   0019D8  22DA               	addwfc	fsr2h,f,c
   986   0019DA  0E01               	movlw	1
   987   0019DC  6EDF               	movwf	indf2,c
   988   0019DE                     
   989                           ;dc_motor.c: 149:     mR->brakemode = 1;
   990   0019DE  EE20 F002          	lfsr	2,2
   991   0019E2  5016               	movf	turnRight@mR^0,w,c
   992   0019E4  26D9               	addwf	fsr2l,f,c
   993   0019E6  5017               	movf	(turnRight@mR+1)^0,w,c
   994   0019E8  22DA               	addwfc	fsr2h,f,c
   995   0019EA  0E01               	movlw	1
   996   0019EC  6EDF               	movwf	indf2,c
   997   0019EE                     
   998                           ;dc_motor.c: 150:     mR->direction = 0;
   999   0019EE  EE20 F001          	lfsr	2,1
  1000   0019F2  5016               	movf	turnRight@mR^0,w,c
  1001   0019F4  26D9               	addwf	fsr2l,f,c
  1002   0019F6  5017               	movf	(turnRight@mR+1)^0,w,c
  1003   0019F8  22DA               	addwfc	fsr2h,f,c
  1004   0019FA  0E00               	movlw	0
  1005   0019FC  6EDF               	movwf	indf2,c
  1006   0019FE                     
  1007                           ;dc_motor.c: 151:     mL->direction = 1;
  1008   0019FE  EE20 F001          	lfsr	2,1
  1009   001A02  5014               	movf	turnRight@mL^0,w,c
  1010   001A04  26D9               	addwf	fsr2l,f,c
  1011   001A06  5015               	movf	(turnRight@mL+1)^0,w,c
  1012   001A08  22DA               	addwfc	fsr2h,f,c
  1013   001A0A  0E01               	movlw	1
  1014   001A0C  6EDF               	movwf	indf2,c
  1015   001A0E                     
  1016                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1017   001A0E  C014  F00E         	movff	turnRight@mL,setMotorPWM@m
  1018   001A12  C015  F00F         	movff	turnRight@mL+1,setMotorPWM@m+1
  1019   001A16  EC0D  F009         	call	_setMotorPWM	;wreg free
  1020   001A1A                     
  1021                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1022   001A1A  C016  F00E         	movff	turnRight@mR,setMotorPWM@m
  1023   001A1E  C017  F00F         	movff	turnRight@mR+1,setMotorPWM@m+1
  1024   001A22  EC0D  F009         	call	_setMotorPWM	;wreg free
  1025   001A26  0012               	return		;funcret
  1026   001A28                     __end_of_turnRight:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _tricolorLED *****************
  1030 ;; Defined at:
  1031 ;;		line 105 in file "color.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		None
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text2
  1060   0020A4                     __ptext2:
  1061                           	callstack 0
  1062   0020A4                     _tricolorLED:
  1063                           	callstack 29
  1064   0020A4                     
  1065                           ;color.c: 107:     TRISGbits.TRISG0 = 0;
  1066   0020A4  9087               	bcf	135,0,c	;volatile
  1067                           
  1068                           ;color.c: 108:     LATGbits.LATG0 = 1;
  1069   0020A6  807F               	bsf	127,0,c	;volatile
  1070                           
  1071                           ;color.c: 109:     TRISAbits.TRISA4 = 0;
  1072   0020A8  9881               	bcf	129,4,c	;volatile
  1073                           
  1074                           ;color.c: 110:     LATAbits.LATA4= 1;
  1075   0020AA  8879               	bsf	121,4,c	;volatile
  1076                           
  1077                           ;color.c: 111:     TRISFbits.TRISF7 = 0;
  1078   0020AC  9E86               	bcf	134,7,c	;volatile
  1079                           
  1080                           ;color.c: 112:     LATFbits.LATF7 = 1;
  1081   0020AE  8E7E               	bsf	126,7,c	;volatile
  1082                           
  1083                           ;color.c: 113:     TRISAbits.TRISA3 = 0;
  1084   0020B0  9681               	bcf	129,3,c	;volatile
  1085                           
  1086                           ;color.c: 114:     LATAbits.LATA3 = 1;
  1087   0020B2  8679               	bsf	121,3,c	;volatile
  1088                           
  1089                           ;color.c: 115:     TRISEbits.TRISE7 = 0;
  1090   0020B4  9E85               	bcf	133,7,c	;volatile
  1091                           
  1092                           ;color.c: 116:     LATEbits.LATE7 = 1;
  1093   0020B6  8E7D               	bsf	125,7,c	;volatile
  1094   0020B8  0012               	return		;funcret
  1095   0020BA                     __end_of_tricolorLED:
  1096                           	callstack 0
  1097                           
  1098 ;; *************** function _persistence_register *****************
  1099 ;; Defined at:
  1100 ;;		line 44 in file "interrupts.c"
  1101 ;; Parameters:    Size  Location     Type
  1102 ;;		None
  1103 ;; Auto vars:     Size  Location     Type
  1104 ;;		None
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      void 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0, cstack
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1118 ;;Total ram usage:        0 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 4
  1121 ;; This function calls:
  1122 ;;		_color_writetoaddr
  1123 ;; This function is called by:
  1124 ;;		_main
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text3
  1129   0020BA                     __ptext3:
  1130                           	callstack 0
  1131   0020BA                     _persistence_register:
  1132                           	callstack 26
  1133   0020BA                     
  1134                           ;interrupts.c: 46:  color_writetoaddr(0x0C, 0b0101);
  1135   0020BA  0E05               	movlw	5
  1136   0020BC  6E03               	movwf	color_writetoaddr@value^0,c
  1137   0020BE  0E0C               	movlw	12
  1138   0020C0  EC0E  F010         	call	_color_writetoaddr
  1139   0020C4  0012               	return		;funcret
  1140   0020C6                     __end_of_persistence_register:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _norm_stop *****************
  1144 ;; Defined at:
  1145 ;;		line 118 in file "dc_motor.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  mL              2   19[COMRAM] PTR struct DC_motor
  1148 ;;		 -> main@mL(9), 
  1149 ;;  mR              2   21[COMRAM] PTR struct DC_motor
  1150 ;;		 -> main@mR(9), 
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      void 
  1155 ;; Registers used:
  1156 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1162 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1165 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1166 ;;Total ram usage:        4 bytes
  1167 ;; Hardware stack levels used: 1
  1168 ;; Hardware stack levels required when called: 3
  1169 ;; This function calls:
  1170 ;;		_setMotorPWM
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           	psect	text4
  1177   001F26                     __ptext4:
  1178                           	callstack 0
  1179   001F26                     _norm_stop:
  1180                           	callstack 27
  1181   001F26                     
  1182                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1183   001F26  C014  FFD9         	movff	norm_stop@mL,fsr2l
  1184   001F2A  C015  FFDA         	movff	norm_stop@mL+1,fsr2h
  1185   001F2E  0E00               	movlw	0
  1186   001F30  6EDF               	movwf	indf2,c
  1187                           
  1188                           ;dc_motor.c: 125:     mR->power = 0;
  1189   001F32  C016  FFD9         	movff	norm_stop@mR,fsr2l
  1190   001F36  C017  FFDA         	movff	norm_stop@mR+1,fsr2h
  1191   001F3A  0E00               	movlw	0
  1192   001F3C  6EDF               	movwf	indf2,c
  1193   001F3E                     
  1194                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1195   001F3E  C014  F00E         	movff	norm_stop@mL,setMotorPWM@m
  1196   001F42  C015  F00F         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1197   001F46  EC0D  F009         	call	_setMotorPWM	;wreg free
  1198   001F4A                     
  1199                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1200   001F4A  C016  F00E         	movff	norm_stop@mR,setMotorPWM@m
  1201   001F4E  C017  F00F         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1202   001F52  EC0D  F009         	call	_setMotorPWM	;wreg free
  1203   001F56  0012               	return		;funcret
  1204   001F58                     __end_of_norm_stop:
  1205                           	callstack 0
  1206                           
  1207 ;; *************** function _setMotorPWM *****************
  1208 ;; Defined at:
  1209 ;;		line 56 in file "dc_motor.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;  m               2   13[COMRAM] PTR struct DC_motor
  1212 ;;		 -> main@mR(9), main@mL(9), 
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;  negDuty         1   18[COMRAM] unsigned char 
  1215 ;;  posDuty         1   17[COMRAM] unsigned char 
  1216 ;; Return value:  Size  Location     Type
  1217 ;;                  1    wreg      void 
  1218 ;; Registers used:
  1219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1220 ;; Tracked objects:
  1221 ;;		On entry : 0/0
  1222 ;;		On exit  : 0/0
  1223 ;;		Unchanged: 0/0
  1224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;Total ram usage:        6 bytes
  1230 ;; Hardware stack levels used: 1
  1231 ;; Hardware stack levels required when called: 2
  1232 ;; This function calls:
  1233 ;;		___lwdiv
  1234 ;;		___wmul
  1235 ;; This function is called by:
  1236 ;;		_norm_stop
  1237 ;;		_turnRight
  1238 ;;		_stop
  1239 ;;		_turnLeft
  1240 ;;		_uturn
  1241 ;;		_fullSpeedAhead
  1242 ;;		_reverse
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text5
  1247   00121A                     __ptext5:
  1248                           	callstack 0
  1249   00121A                     _setMotorPWM:
  1250                           	callstack 27
  1251   00121A                     
  1252                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  1253   00121A  EE20 F002          	lfsr	2,2
  1254   00121E  500E               	movf	setMotorPWM@m^0,w,c
  1255   001220  26D9               	addwf	fsr2l,f,c
  1256   001222  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1257   001224  22DA               	addwfc	fsr2h,f,c
  1258   001226  50DF               	movf	indf2,w,c
  1259   001228  B4D8               	btfsc	status,2,c
  1260   00122A  EF19  F009         	goto	u1081
  1261   00122E  EF1B  F009         	goto	u1080
  1262   001232                     u1081:
  1263   001232  EF4F  F009         	goto	l2196
  1264   001236                     u1080:
  1265   001236                     
  1266                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1267   001236  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1268   00123A  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1269   00123E  50DF               	movf	indf2,w,c
  1270   001240  6E10               	movwf	??_setMotorPWM^0,c
  1271   001242  5010               	movf	??_setMotorPWM^0,w,c
  1272   001244  6E01               	movwf	___wmul@multiplier^0,c
  1273   001246  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1274   001248  EE20 F003          	lfsr	2,3
  1275   00124C  500E               	movf	setMotorPWM@m^0,w,c
  1276   00124E  26D9               	addwf	fsr2l,f,c
  1277   001250  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1278   001252  22DA               	addwfc	fsr2h,f,c
  1279   001254  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1280   001258  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1281   00125C  ECEA  F00F         	call	___wmul	;wreg free
  1282   001260  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1283   001264  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1284   001268  0E00               	movlw	0
  1285   00126A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1286   00126C  0E64               	movlw	100
  1287   00126E  6E09               	movwf	___lwdiv@divisor^0,c
  1288   001270  ECA1  F00C         	call	___lwdiv	;wreg free
  1289   001274  EE20 F003          	lfsr	2,3
  1290   001278  500E               	movf	setMotorPWM@m^0,w,c
  1291   00127A  26D9               	addwf	fsr2l,f,c
  1292   00127C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1293   00127E  22DA               	addwfc	fsr2h,f,c
  1294   001280  50DF               	movf	indf2,w,c
  1295   001282  6E11               	movwf	(??_setMotorPWM+1)^0,c
  1296   001284  5007               	movf	?___lwdiv^0,w,c
  1297   001286  5C11               	subwf	(??_setMotorPWM+1)^0,w,c
  1298   001288  6E12               	movwf	setMotorPWM@posDuty^0,c
  1299   00128A                     
  1300                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  1301   00128A  EE20 F003          	lfsr	2,3
  1302   00128E  500E               	movf	setMotorPWM@m^0,w,c
  1303   001290  26D9               	addwf	fsr2l,f,c
  1304   001292  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1305   001294  22DA               	addwfc	fsr2h,f,c
  1306   001296  50DF               	movf	indf2,w,c
  1307   001298  6E13               	movwf	setMotorPWM@negDuty^0,c
  1308                           
  1309                           ;dc_motor.c: 63:     }
  1310   00129A  EF72  F009         	goto	l2200
  1311   00129E                     l2196:
  1312                           
  1313                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1314   00129E  C00E  FFD9         	movff	setMotorPWM@m,fsr2l
  1315   0012A2  C00F  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1316   0012A6  50DF               	movf	indf2,w,c
  1317   0012A8  6E10               	movwf	??_setMotorPWM^0,c
  1318   0012AA  5010               	movf	??_setMotorPWM^0,w,c
  1319   0012AC  6E01               	movwf	___wmul@multiplier^0,c
  1320   0012AE  6A02               	clrf	(___wmul@multiplier+1)^0,c
  1321   0012B0  EE20 F003          	lfsr	2,3
  1322   0012B4  500E               	movf	setMotorPWM@m^0,w,c
  1323   0012B6  26D9               	addwf	fsr2l,f,c
  1324   0012B8  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1325   0012BA  22DA               	addwfc	fsr2h,f,c
  1326   0012BC  CFDE F003          	movff	postinc2,___wmul@multiplicand
  1327   0012C0  CFDD F004          	movff	postdec2,___wmul@multiplicand+1
  1328   0012C4  ECEA  F00F         	call	___wmul	;wreg free
  1329   0012C8  C001  F007         	movff	?___wmul,___lwdiv@dividend
  1330   0012CC  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  1331   0012D0  0E00               	movlw	0
  1332   0012D2  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  1333   0012D4  0E64               	movlw	100
  1334   0012D6  6E09               	movwf	___lwdiv@divisor^0,c
  1335   0012D8  ECA1  F00C         	call	___lwdiv	;wreg free
  1336   0012DC  5007               	movf	?___lwdiv^0,w,c
  1337   0012DE  6E12               	movwf	setMotorPWM@posDuty^0,c
  1338   0012E0                     
  1339                           ;dc_motor.c: 66:         negDuty=0;
  1340   0012E0  0E00               	movlw	0
  1341   0012E2  6E13               	movwf	setMotorPWM@negDuty^0,c
  1342   0012E4                     l2200:
  1343                           
  1344                           ;dc_motor.c: 69:     if (m->direction) {
  1345   0012E4  EE20 F001          	lfsr	2,1
  1346   0012E8  500E               	movf	setMotorPWM@m^0,w,c
  1347   0012EA  26D9               	addwf	fsr2l,f,c
  1348   0012EC  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1349   0012EE  22DA               	addwfc	fsr2h,f,c
  1350   0012F0  50DF               	movf	indf2,w,c
  1351   0012F2  B4D8               	btfsc	status,2,c
  1352   0012F4  EF7E  F009         	goto	u1091
  1353   0012F8  EF80  F009         	goto	u1090
  1354   0012FC                     u1091:
  1355   0012FC  EFA2  F009         	goto	l2204
  1356   001300                     u1090:
  1357   001300                     
  1358                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  1359   001300  EE20 F005          	lfsr	2,5
  1360   001304  500E               	movf	setMotorPWM@m^0,w,c
  1361   001306  26D9               	addwf	fsr2l,f,c
  1362   001308  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1363   00130A  22DA               	addwfc	fsr2h,f,c
  1364   00130C  CFDE F010          	movff	postinc2,??_setMotorPWM
  1365   001310  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1366   001314  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1367   001318  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1368   00131C  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1369                           
  1370                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  1371   001320  EE20 F007          	lfsr	2,7
  1372   001324  500E               	movf	setMotorPWM@m^0,w,c
  1373   001326  26D9               	addwf	fsr2l,f,c
  1374   001328  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1375   00132A  22DA               	addwfc	fsr2h,f,c
  1376   00132C  CFDE F010          	movff	postinc2,??_setMotorPWM
  1377   001330  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1378   001334  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1379   001338  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1380   00133C  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1381                           
  1382                           ;dc_motor.c: 72:     } else {
  1383   001340  EFC2  F009         	goto	l391
  1384   001344                     l2204:
  1385                           
  1386                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  1387   001344  EE20 F005          	lfsr	2,5
  1388   001348  500E               	movf	setMotorPWM@m^0,w,c
  1389   00134A  26D9               	addwf	fsr2l,f,c
  1390   00134C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1391   00134E  22DA               	addwfc	fsr2h,f,c
  1392   001350  CFDE F010          	movff	postinc2,??_setMotorPWM
  1393   001354  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1394   001358  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1395   00135C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1396   001360  C013  FFDF         	movff	setMotorPWM@negDuty,indf2
  1397                           
  1398                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  1399   001364  EE20 F007          	lfsr	2,7
  1400   001368  500E               	movf	setMotorPWM@m^0,w,c
  1401   00136A  26D9               	addwf	fsr2l,f,c
  1402   00136C  500F               	movf	(setMotorPWM@m+1)^0,w,c
  1403   00136E  22DA               	addwfc	fsr2h,f,c
  1404   001370  CFDE F010          	movff	postinc2,??_setMotorPWM
  1405   001374  CFDD F011          	movff	postdec2,??_setMotorPWM+1
  1406   001378  C010  FFD9         	movff	??_setMotorPWM,fsr2l
  1407   00137C  C011  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1408   001380  C012  FFDF         	movff	setMotorPWM@posDuty,indf2
  1409   001384                     l391:
  1410   001384  0012               	return		;funcret
  1411   001386                     __end_of_setMotorPWM:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function ___wmul *****************
  1415 ;; Defined at:
  1416 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  multiplier      2    0[COMRAM] unsigned int 
  1419 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1420 ;; Auto vars:     Size  Location     Type
  1421 ;;  product         2    4[COMRAM] unsigned int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  2    0[COMRAM] unsigned int 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, prodl, prodh
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1431 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1434 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1435 ;;Total ram usage:        6 bytes
  1436 ;; Hardware stack levels used: 1
  1437 ;; Hardware stack levels required when called: 1
  1438 ;; This function calls:
  1439 ;;		Nothing
  1440 ;; This function is called by:
  1441 ;;		_setMotorPWM
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           	psect	text6
  1446   001FD4                     __ptext6:
  1447                           	callstack 0
  1448   001FD4                     ___wmul:
  1449                           	callstack 27
  1450   001FD4  5001               	movf	___wmul@multiplier^0,w,c
  1451   001FD6  0203               	mulwf	___wmul@multiplicand^0,c
  1452   001FD8  CFF3 F005          	movff	prodl,___wmul@product
  1453   001FDC  CFF4 F006          	movff	prodh,___wmul@product+1
  1454   001FE0  5001               	movf	___wmul@multiplier^0,w,c
  1455   001FE2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1456   001FE4  50F3               	movf	243,w,c
  1457   001FE6  2606               	addwf	(___wmul@product+1)^0,f,c
  1458   001FE8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1459   001FEA  0203               	mulwf	___wmul@multiplicand^0,c
  1460   001FEC  50F3               	movf	243,w,c
  1461   001FEE  2606               	addwf	(___wmul@product+1)^0,f,c
  1462   001FF0  C005  F001         	movff	___wmul@product,?___wmul
  1463   001FF4  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1464   001FF8  0012               	return		;funcret
  1465   001FFA                     __end_of___wmul:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function ___lwdiv *****************
  1469 ;; Defined at:
  1470 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dividend        2    6[COMRAM] unsigned int 
  1473 ;;  divisor         2    8[COMRAM] unsigned int 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  quotient        2   10[COMRAM] unsigned int 
  1476 ;;  counter         1   12[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  2    6[COMRAM] unsigned int 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1487 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1489 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1490 ;;Total ram usage:        7 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_setMotorPWM
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text7
  1501   001942                     __ptext7:
  1502                           	callstack 0
  1503   001942                     ___lwdiv:
  1504                           	callstack 27
  1505   001942  0E00               	movlw	0
  1506   001944  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  1507   001946  0E00               	movlw	0
  1508   001948  6E0B               	movwf	___lwdiv@quotient^0,c
  1509   00194A  5009               	movf	___lwdiv@divisor^0,w,c
  1510   00194C  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1511   00194E  B4D8               	btfsc	status,2,c
  1512   001950  EFAC  F00C         	goto	u1041
  1513   001954  EFAE  F00C         	goto	u1040
  1514   001958                     u1041:
  1515   001958  EFD6  F00C         	goto	l927
  1516   00195C                     u1040:
  1517   00195C  0E01               	movlw	1
  1518   00195E  6E0D               	movwf	___lwdiv@counter^0,c
  1519   001960  EFB6  F00C         	goto	l2110
  1520   001964                     l2108:
  1521   001964  90D8               	bcf	status,0,c
  1522   001966  3609               	rlcf	___lwdiv@divisor^0,f,c
  1523   001968  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1524   00196A  2A0D               	incf	___lwdiv@counter^0,f,c
  1525   00196C                     l2110:
  1526   00196C  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  1527   00196E  EFBB  F00C         	goto	u1051
  1528   001972  EFBD  F00C         	goto	u1050
  1529   001976                     u1051:
  1530   001976  EFB2  F00C         	goto	l2108
  1531   00197A                     u1050:
  1532   00197A                     l2112:
  1533   00197A  90D8               	bcf	status,0,c
  1534   00197C  360B               	rlcf	___lwdiv@quotient^0,f,c
  1535   00197E  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1536   001980  5009               	movf	___lwdiv@divisor^0,w,c
  1537   001982  5C07               	subwf	___lwdiv@dividend^0,w,c
  1538   001984  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1539   001986  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1540   001988  A0D8               	btfss	status,0,c
  1541   00198A  EFC9  F00C         	goto	u1061
  1542   00198E  EFCB  F00C         	goto	u1060
  1543   001992                     u1061:
  1544   001992  EFD0  F00C         	goto	l2120
  1545   001996                     u1060:
  1546   001996  5009               	movf	___lwdiv@divisor^0,w,c
  1547   001998  5E07               	subwf	___lwdiv@dividend^0,f,c
  1548   00199A  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  1549   00199C  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1550   00199E  800B               	bsf	___lwdiv@quotient^0,0,c
  1551   0019A0                     l2120:
  1552   0019A0  90D8               	bcf	status,0,c
  1553   0019A2  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1554   0019A4  3209               	rrcf	___lwdiv@divisor^0,f,c
  1555   0019A6  2E0D               	decfsz	___lwdiv@counter^0,f,c
  1556   0019A8  EFBD  F00C         	goto	l2112
  1557   0019AC                     l927:
  1558   0019AC  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  1559   0019B0  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1560   0019B4  0012               	return		;funcret
  1561   0019B6                     __end_of___lwdiv:
  1562                           	callstack 0
  1563                           
  1564 ;; *************** function _motorRinit *****************
  1565 ;; Defined at:
  1566 ;;		line 88 in file "dc_motor.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;  mR              2    0[COMRAM] PTR struct DC_motor
  1569 ;;		 -> main@mR(9), 
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;		None
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      void 
  1574 ;; Registers used:
  1575 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1584 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1585 ;;Total ram usage:        2 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; Hardware stack levels required when called: 1
  1588 ;; This function calls:
  1589 ;;		Nothing
  1590 ;; This function is called by:
  1591 ;;		_main
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text8
  1596   001A98                     __ptext8:
  1597                           	callstack 0
  1598   001A98                     _motorRinit:
  1599                           	callstack 29
  1600   001A98                     
  1601                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1602   001A98  C001  FFD9         	movff	motorRinit@mR,fsr2l
  1603   001A9C  C002  FFDA         	movff	motorRinit@mR+1,fsr2h
  1604   001AA0  0E32               	movlw	50
  1605   001AA2  6EDF               	movwf	indf2,c
  1606   001AA4                     
  1607                           ;dc_motor.c: 91:     mR->direction = 1;
  1608   001AA4  EE20 F001          	lfsr	2,1
  1609   001AA8  5001               	movf	motorRinit@mR^0,w,c
  1610   001AAA  26D9               	addwf	fsr2l,f,c
  1611   001AAC  5002               	movf	(motorRinit@mR+1)^0,w,c
  1612   001AAE  22DA               	addwfc	fsr2h,f,c
  1613   001AB0  0E01               	movlw	1
  1614   001AB2  6EDF               	movwf	indf2,c
  1615   001AB4                     
  1616                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1617   001AB4  EE20 F002          	lfsr	2,2
  1618   001AB8  5001               	movf	motorRinit@mR^0,w,c
  1619   001ABA  26D9               	addwf	fsr2l,f,c
  1620   001ABC  5002               	movf	(motorRinit@mR+1)^0,w,c
  1621   001ABE  22DA               	addwfc	fsr2h,f,c
  1622   001AC0  0E01               	movlw	1
  1623   001AC2  6EDF               	movwf	indf2,c
  1624   001AC4                     
  1625                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1626   001AC4  EE20 F005          	lfsr	2,5
  1627   001AC8  5001               	movf	motorRinit@mR^0,w,c
  1628   001ACA  26D9               	addwf	fsr2l,f,c
  1629   001ACC  5002               	movf	(motorRinit@mR+1)^0,w,c
  1630   001ACE  22DA               	addwfc	fsr2h,f,c
  1631   001AD0  0E25               	movlw	37
  1632   001AD2  6EDE               	movwf	postinc2,c
  1633   001AD4  0E0F               	movlw	15
  1634   001AD6  6EDD               	movwf	postdec2,c
  1635   001AD8                     
  1636                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1637   001AD8  EE20 F007          	lfsr	2,7
  1638   001ADC  5001               	movf	motorRinit@mR^0,w,c
  1639   001ADE  26D9               	addwf	fsr2l,f,c
  1640   001AE0  5002               	movf	(motorRinit@mR+1)^0,w,c
  1641   001AE2  22DA               	addwfc	fsr2h,f,c
  1642   001AE4  0E21               	movlw	33
  1643   001AE6  6EDE               	movwf	postinc2,c
  1644   001AE8  0E0F               	movlw	15
  1645   001AEA  6EDD               	movwf	postdec2,c
  1646   001AEC                     
  1647                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1648   001AEC  EE20 F003          	lfsr	2,3
  1649   001AF0  5001               	movf	motorRinit@mR^0,w,c
  1650   001AF2  26D9               	addwf	fsr2l,f,c
  1651   001AF4  5002               	movf	(motorRinit@mR+1)^0,w,c
  1652   001AF6  22DA               	addwfc	fsr2h,f,c
  1653   001AF8  0EC8               	movlw	200
  1654   001AFA  6EDE               	movwf	postinc2,c
  1655   001AFC  0E00               	movlw	0
  1656   001AFE  6EDD               	movwf	postdec2,c
  1657   001B00  0012               	return		;funcret
  1658   001B02                     __end_of_motorRinit:
  1659                           	callstack 0
  1660                           
  1661 ;; *************** function _motorLinit *****************
  1662 ;; Defined at:
  1663 ;;		line 78 in file "dc_motor.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  mL              2    0[COMRAM] PTR struct DC_motor
  1666 ;;		 -> main@mL(9), 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; Hardware stack levels required when called: 1
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           	psect	text9
  1693   001B02                     __ptext9:
  1694                           	callstack 0
  1695   001B02                     _motorLinit:
  1696                           	callstack 29
  1697   001B02                     
  1698                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  1699   001B02  C001  FFD9         	movff	motorLinit@mL,fsr2l
  1700   001B06  C002  FFDA         	movff	motorLinit@mL+1,fsr2h
  1701   001B0A  0E32               	movlw	50
  1702   001B0C  6EDF               	movwf	indf2,c
  1703   001B0E                     
  1704                           ;dc_motor.c: 81:     mL->direction = 1;
  1705   001B0E  EE20 F001          	lfsr	2,1
  1706   001B12  5001               	movf	motorLinit@mL^0,w,c
  1707   001B14  26D9               	addwf	fsr2l,f,c
  1708   001B16  5002               	movf	(motorLinit@mL+1)^0,w,c
  1709   001B18  22DA               	addwfc	fsr2h,f,c
  1710   001B1A  0E01               	movlw	1
  1711   001B1C  6EDF               	movwf	indf2,c
  1712   001B1E                     
  1713                           ;dc_motor.c: 82:     mL->brakemode = 1;
  1714   001B1E  EE20 F002          	lfsr	2,2
  1715   001B22  5001               	movf	motorLinit@mL^0,w,c
  1716   001B24  26D9               	addwf	fsr2l,f,c
  1717   001B26  5002               	movf	(motorLinit@mL+1)^0,w,c
  1718   001B28  22DA               	addwfc	fsr2h,f,c
  1719   001B2A  0E01               	movlw	1
  1720   001B2C  6EDF               	movwf	indf2,c
  1721   001B2E                     
  1722                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  1723   001B2E  EE20 F005          	lfsr	2,5
  1724   001B32  5001               	movf	motorLinit@mL^0,w,c
  1725   001B34  26D9               	addwf	fsr2l,f,c
  1726   001B36  5002               	movf	(motorLinit@mL+1)^0,w,c
  1727   001B38  22DA               	addwfc	fsr2h,f,c
  1728   001B3A  0EAA               	movlw	170
  1729   001B3C  6EDE               	movwf	postinc2,c
  1730   001B3E  0E0F               	movlw	15
  1731   001B40  6EDD               	movwf	postdec2,c
  1732   001B42                     
  1733                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  1734   001B42  EE20 F007          	lfsr	2,7
  1735   001B46  5001               	movf	motorLinit@mL^0,w,c
  1736   001B48  26D9               	addwf	fsr2l,f,c
  1737   001B4A  5002               	movf	(motorLinit@mL+1)^0,w,c
  1738   001B4C  22DA               	addwfc	fsr2h,f,c
  1739   001B4E  0EA6               	movlw	166
  1740   001B50  6EDE               	movwf	postinc2,c
  1741   001B52  0E0F               	movlw	15
  1742   001B54  6EDD               	movwf	postdec2,c
  1743   001B56                     
  1744                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  1745   001B56  EE20 F003          	lfsr	2,3
  1746   001B5A  5001               	movf	motorLinit@mL^0,w,c
  1747   001B5C  26D9               	addwf	fsr2l,f,c
  1748   001B5E  5002               	movf	(motorLinit@mL+1)^0,w,c
  1749   001B60  22DA               	addwfc	fsr2h,f,c
  1750   001B62  0EC8               	movlw	200
  1751   001B64  6EDE               	movwf	postinc2,c
  1752   001B66  0E00               	movlw	0
  1753   001B68  6EDD               	movwf	postdec2,c
  1754   001B6A  0012               	return		;funcret
  1755   001B6C                     __end_of_motorLinit:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _initUSART4 *****************
  1759 ;; Defined at:
  1760 ;;		line 4 in file "../lab-5-areeb-atulit.X/serial.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;		None
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;		None
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1778 ;;Total ram usage:        0 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 1
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_main
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           	psect	text10
  1789   001FFA                     __ptext10:
  1790                           	callstack 0
  1791   001FFA                     _initUSART4:
  1792                           	callstack 29
  1793   001FFA                     
  1794                           ;../lab-5-areeb-atulit.X/serial.c: 8:     RC0PPS = 0x12;
  1795   001FFA  0E12               	movlw	18
  1796   001FFC  010E               	movlb	14	; () banked
  1797   001FFE  6F62               	movwf	98,b	;volatile
  1798                           
  1799                           ;../lab-5-areeb-atulit.X/serial.c: 9:     RX4PPS = 0x11;
  1800   002000  0E11               	movlw	17
  1801   002002  6F15               	movwf	21,b	;volatile
  1802   002004                     
  1803                           ; BSR set to: 14
  1804                           ;../lab-5-areeb-atulit.X/serial.c: 10:     BAUD4CONbits.BRG16 = 0;
  1805   002004  97E9               	bcf	233,3,b	;volatile
  1806   002006                     
  1807                           ; BSR set to: 14
  1808                           ;../lab-5-areeb-atulit.X/serial.c: 11:     TX4STAbits.BRGH = 0;
  1809   002006  95E8               	bcf	232,2,b	;volatile
  1810                           
  1811                           ;../lab-5-areeb-atulit.X/serial.c: 12:     SP4BRGL = 103;
  1812   002008  0E67               	movlw	103
  1813   00200A  6FE5               	movwf	229,b	;volatile
  1814                           
  1815                           ;../lab-5-areeb-atulit.X/serial.c: 13:     SP4BRGH = 0;
  1816   00200C  0E00               	movlw	0
  1817   00200E  6FE6               	movwf	230,b	;volatile
  1818   002010                     
  1819                           ; BSR set to: 14
  1820                           ;../lab-5-areeb-atulit.X/serial.c: 15:     RC4STAbits.CREN = 1;
  1821   002010  89E7               	bsf	231,4,b	;volatile
  1822   002012                     
  1823                           ; BSR set to: 14
  1824                           ;../lab-5-areeb-atulit.X/serial.c: 16:     TX4STAbits.TXEN = 1;
  1825   002012  8BE8               	bsf	232,5,b	;volatile
  1826   002014                     
  1827                           ; BSR set to: 14
  1828                           ;../lab-5-areeb-atulit.X/serial.c: 17:     RC4STAbits.SPEN = 1;
  1829   002014  8FE7               	bsf	231,7,b	;volatile
  1830   002016                     
  1831                           ; BSR set to: 14
  1832                           ;../lab-5-areeb-atulit.X/serial.c: 18:     PIE4bits.RC4IE=1;
  1833   002016  872D               	bsf	45,3,b	;volatile
  1834   002018                     
  1835                           ; BSR set to: 14
  1836                           ;../lab-5-areeb-atulit.X/serial.c: 19:     PIE4bits.TX4IE=1;
  1837   002018  852D               	bsf	45,2,b	;volatile
  1838   00201A                     
  1839                           ; BSR set to: 14
  1840   00201A  0012               	return		;funcret
  1841   00201C                     __end_of_initUSART4:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _initDCmotorsPWM *****************
  1845 ;; Defined at:
  1846 ;;		line 5 in file "dc_motor.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  PWMperiod       2    0[COMRAM] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  1    wreg      void 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;Total ram usage:        2 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; Hardware stack levels required when called: 1
  1867 ;; This function calls:
  1868 ;;		Nothing
  1869 ;; This function is called by:
  1870 ;;		_main
  1871 ;; This function uses a non-reentrant model
  1872 ;;
  1873                           
  1874                           	psect	text11
  1875   001848                     __ptext11:
  1876                           	callstack 0
  1877   001848                     _initDCmotorsPWM:
  1878                           	callstack 29
  1879   001848                     
  1880                           ;dc_motor.c: 9:     RE2PPS=0x05;
  1881   001848  0E05               	movlw	5
  1882   00184A  010E               	movlb	14	; () banked
  1883   00184C  6F74               	movwf	116,b	;volatile
  1884                           
  1885                           ;dc_motor.c: 10:     RE4PPS=0x06;
  1886   00184E  0E06               	movlw	6
  1887   001850  6F76               	movwf	118,b	;volatile
  1888                           
  1889                           ;dc_motor.c: 11:     RC7PPS=0x07;
  1890   001852  0E07               	movlw	7
  1891   001854  6F69               	movwf	105,b	;volatile
  1892                           
  1893                           ;dc_motor.c: 12:     RG6PPS=0x08;
  1894   001856  0E08               	movlw	8
  1895   001858  6F88               	movwf	136,b	;volatile
  1896                           
  1897                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  1898   00185A  50BD               	movf	189,w,c	;volatile
  1899   00185C  0B8F               	andlw	-113
  1900   00185E  0930               	iorlw	48
  1901   001860  6EBD               	movwf	189,c	;volatile
  1902                           
  1903                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  1904   001862  0EE0               	movlw	-32
  1905   001864  16BE               	andwf	190,f,c	;volatile
  1906                           
  1907                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  1908   001866  50BF               	movf	191,w,c	;volatile
  1909   001868  0BF0               	andlw	-16
  1910   00186A  0901               	iorlw	1
  1911   00186C  6EBF               	movwf	191,c	;volatile
  1912                           
  1913                           ;dc_motor.c: 21:     T2PR=200;
  1914   00186E  0EC8               	movlw	200
  1915   001870  6EBC               	movwf	188,c	;volatile
  1916   001872                     
  1917                           ; BSR set to: 14
  1918                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  1919   001872  8EBD               	bsf	189,7,c	;volatile
  1920                           
  1921                           ;dc_motor.c: 26:     CCPR1H=0;
  1922   001874  0E00               	movlw	0
  1923   001876  6EAA               	movwf	170,c	;volatile
  1924                           
  1925                           ;dc_motor.c: 27:     CCPR2H=0;
  1926   001878  0E00               	movlw	0
  1927   00187A  6EA6               	movwf	166,c	;volatile
  1928                           
  1929                           ;dc_motor.c: 28:     CCPR3H=0;
  1930   00187C  0E00               	movlw	0
  1931   00187E  010F               	movlb	15	; () banked
  1932   001880  6F25               	movwf	37,b	;volatile
  1933                           
  1934                           ;dc_motor.c: 29:     CCPR4H=0;
  1935   001882  0E00               	movlw	0
  1936   001884  6F21               	movwf	33,b	;volatile
  1937                           
  1938                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  1939   001886  0EFC               	movlw	-4
  1940   001888  16AD               	andwf	173,f,c	;volatile
  1941                           
  1942                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  1943   00188A  0EF3               	movlw	-13
  1944   00188C  16AD               	andwf	173,f,c	;volatile
  1945                           
  1946                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  1947   00188E  0ECF               	movlw	-49
  1948   001890  16AD               	andwf	173,f,c	;volatile
  1949                           
  1950                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  1951   001892  0E3F               	movlw	-193
  1952   001894  16AD               	andwf	173,f,c	;volatile
  1953   001896                     
  1954                           ; BSR set to: 15
  1955                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  1956   001896  88AB               	bsf	171,4,c	;volatile
  1957                           
  1958                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  1959   001898  50AB               	movf	171,w,c	;volatile
  1960   00189A  0BF0               	andlw	-16
  1961   00189C  090C               	iorlw	12
  1962   00189E  6EAB               	movwf	171,c	;volatile
  1963   0018A0                     
  1964                           ; BSR set to: 15
  1965                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  1966   0018A0  8EAB               	bsf	171,7,c	;volatile
  1967   0018A2                     
  1968                           ; BSR set to: 15
  1969                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  1970   0018A2  88A7               	bsf	167,4,c	;volatile
  1971                           
  1972                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  1973   0018A4  50A7               	movf	167,w,c	;volatile
  1974   0018A6  0BF0               	andlw	-16
  1975   0018A8  090C               	iorlw	12
  1976   0018AA  6EA7               	movwf	167,c	;volatile
  1977   0018AC                     
  1978                           ; BSR set to: 15
  1979                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  1980   0018AC  8EA7               	bsf	167,7,c	;volatile
  1981   0018AE                     
  1982                           ; BSR set to: 15
  1983                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  1984   0018AE  8926               	bsf	38,4,b	;volatile
  1985                           
  1986                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  1987   0018B0  5126               	movf	38,w,b	;volatile
  1988   0018B2  0BF0               	andlw	-16
  1989   0018B4  090C               	iorlw	12
  1990   0018B6  6F26               	movwf	38,b	;volatile
  1991   0018B8                     
  1992                           ; BSR set to: 15
  1993                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  1994   0018B8  8F26               	bsf	38,7,b	;volatile
  1995   0018BA                     
  1996                           ; BSR set to: 15
  1997                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  1998   0018BA  8922               	bsf	34,4,b	;volatile
  1999                           
  2000                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  2001   0018BC  5122               	movf	34,w,b	;volatile
  2002   0018BE  0BF0               	andlw	-16
  2003   0018C0  090C               	iorlw	12
  2004   0018C2  6F22               	movwf	34,b	;volatile
  2005   0018C4                     
  2006                           ; BSR set to: 15
  2007                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  2008   0018C4  8F22               	bsf	34,7,b	;volatile
  2009   0018C6                     
  2010                           ; BSR set to: 15
  2011   0018C6  0012               	return		;funcret
  2012   0018C8                     __end_of_initDCmotorsPWM:
  2013                           	callstack 0
  2014                           
  2015 ;; *************** function _color_read_RGBC *****************
  2016 ;; Defined at:
  2017 ;;		line 92 in file "color.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  temp            2   11[COMRAM] PTR struct RGBC_val
  2020 ;;		 -> main@RGBC(8), 
  2021 ;; Auto vars:     Size  Location     Type
  2022 ;;		None
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  1    wreg      void 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:        2 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 4
  2039 ;; This function calls:
  2040 ;;		_color_read_Blue
  2041 ;;		_color_read_Clear
  2042 ;;		_color_read_Green
  2043 ;;		_color_read_Red
  2044 ;; This function is called by:
  2045 ;;		_main
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text12
  2050   001B6C                     __ptext12:
  2051                           	callstack 0
  2052   001B6C                     _color_read_RGBC:
  2053                           	callstack 26
  2054   001B6C                     
  2055                           ;color.c: 93:     temp->R = color_read_Red();
  2056   001B6C  EC0E  F00E         	call	_color_read_Red	;wreg free
  2057   001B70  C00C  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2058   001B74  C00D  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2059   001B78  C005  FFDE         	movff	?_color_read_Red,postinc2
  2060   001B7C  C006  FFDD         	movff	?_color_read_Red+1,postdec2
  2061                           
  2062                           ;color.c: 94:     temp->B = color_read_Blue();
  2063   001B80  EC86  F00E         	call	_color_read_Blue	;wreg free
  2064   001B84  EE20 F004          	lfsr	2,4
  2065   001B88  500C               	movf	color_read_RGBC@temp^0,w,c
  2066   001B8A  26D9               	addwf	fsr2l,f,c
  2067   001B8C  500D               	movf	(color_read_RGBC@temp+1)^0,w,c
  2068   001B8E  22DA               	addwfc	fsr2h,f,c
  2069   001B90  C005  FFDE         	movff	?_color_read_Blue,postinc2
  2070   001B94  C006  FFDD         	movff	?_color_read_Blue+1,postdec2
  2071                           
  2072                           ;color.c: 95:     temp->G = color_read_Green();
  2073   001B98  EC36  F00E         	call	_color_read_Green	;wreg free
  2074   001B9C  EE20 F002          	lfsr	2,2
  2075   001BA0  500C               	movf	color_read_RGBC@temp^0,w,c
  2076   001BA2  26D9               	addwf	fsr2l,f,c
  2077   001BA4  500D               	movf	(color_read_RGBC@temp+1)^0,w,c
  2078   001BA6  22DA               	addwfc	fsr2h,f,c
  2079   001BA8  C005  FFDE         	movff	?_color_read_Green,postinc2
  2080   001BAC  C006  FFDD         	movff	?_color_read_Green+1,postdec2
  2081                           
  2082                           ;color.c: 96:     temp->C = color_read_Clear();
  2083   001BB0  EC5E  F00E         	call	_color_read_Clear	;wreg free
  2084   001BB4  EE20 F006          	lfsr	2,6
  2085   001BB8  500C               	movf	color_read_RGBC@temp^0,w,c
  2086   001BBA  26D9               	addwf	fsr2l,f,c
  2087   001BBC  500D               	movf	(color_read_RGBC@temp+1)^0,w,c
  2088   001BBE  22DA               	addwfc	fsr2h,f,c
  2089   001BC0  C005  FFDE         	movff	?_color_read_Clear,postinc2
  2090   001BC4  C006  FFDD         	movff	?_color_read_Clear+1,postdec2
  2091   001BC8  0012               	return		;funcret
  2092   001BCA                     __end_of_color_read_RGBC:
  2093                           	callstack 0
  2094                           
  2095 ;; *************** function _color_read_Red *****************
  2096 ;; Defined at:
  2097 ;;		line 33 in file "color.c"
  2098 ;; Parameters:    Size  Location     Type
  2099 ;;		None
  2100 ;; Auto vars:     Size  Location     Type
  2101 ;;  tmp             2    9[COMRAM] unsigned int 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  2    4[COMRAM] unsigned int 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0, cstack
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2112 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2113 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2114 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2115 ;;Total ram usage:        7 bytes
  2116 ;; Hardware stack levels used: 1
  2117 ;; Hardware stack levels required when called: 3
  2118 ;; This function calls:
  2119 ;;		_I2C_2_Master_Read
  2120 ;;		_I2C_2_Master_RepStart
  2121 ;;		_I2C_2_Master_Start
  2122 ;;		_I2C_2_Master_Stop
  2123 ;;		_I2C_2_Master_Write
  2124 ;; This function is called by:
  2125 ;;		_color_read_RGBC
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           	psect	text13
  2130   001C1C                     __ptext13:
  2131                           	callstack 0
  2132   001C1C                     _color_read_Red:
  2133                           	callstack 26
  2134   001C1C                     
  2135                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  2136   001C1C  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  2137                           
  2138                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  2139   001C20  0E52               	movlw	82
  2140   001C22  EC63  F010         	call	_I2C_2_Master_Write
  2141                           
  2142                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  2143   001C26  0EB6               	movlw	182
  2144   001C28  EC63  F010         	call	_I2C_2_Master_Write
  2145                           
  2146                           ;color.c: 39:  I2C_2_Master_RepStart();
  2147   001C2C  EC69  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2148                           
  2149                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  2150   001C30  0E53               	movlw	83
  2151   001C32  EC63  F010         	call	_I2C_2_Master_Write
  2152                           
  2153                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  2154   001C36  0E01               	movlw	1
  2155   001C38  EC18  F00F         	call	_I2C_2_Master_Read
  2156   001C3C  6E07               	movwf	??_color_read_Red^0,c
  2157   001C3E  5007               	movf	??_color_read_Red^0,w,c
  2158   001C40  6E0A               	movwf	color_read_Red@tmp^0,c
  2159   001C42  6A0B               	clrf	(color_read_Red@tmp+1)^0,c
  2160                           
  2161                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2162   001C44  0E00               	movlw	0
  2163   001C46  EC18  F00F         	call	_I2C_2_Master_Read
  2164   001C4A  6E07               	movwf	??_color_read_Red^0,c
  2165   001C4C  5007               	movf	??_color_read_Red^0,w,c
  2166   001C4E  6E09               	movwf	(??_color_read_Red+2)^0,c
  2167   001C50  6A08               	clrf	(??_color_read_Red+1)^0,c
  2168   001C52  500A               	movf	color_read_Red@tmp^0,w,c
  2169   001C54  1008               	iorwf	(??_color_read_Red+1)^0,w,c
  2170   001C56  6E0A               	movwf	color_read_Red@tmp^0,c
  2171   001C58  500B               	movf	(color_read_Red@tmp+1)^0,w,c
  2172   001C5A  1009               	iorwf	(??_color_read_Red+2)^0,w,c
  2173   001C5C  6E0B               	movwf	(color_read_Red@tmp+1)^0,c
  2174                           
  2175                           ;color.c: 43:  I2C_2_Master_Stop();
  2176   001C5E  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  2177   001C62                     
  2178                           ;color.c: 44:  return tmp;
  2179   001C62  C00A  F005         	movff	color_read_Red@tmp,?_color_read_Red
  2180   001C66  C00B  F006         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2181   001C6A  0012               	return		;funcret
  2182   001C6C                     __end_of_color_read_Red:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _color_read_Green *****************
  2186 ;; Defined at:
  2187 ;;		line 47 in file "color.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;		None
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  tmp             2    9[COMRAM] unsigned int 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  2    4[COMRAM] unsigned int 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2201 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2203 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2204 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2205 ;;Total ram usage:        7 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 3
  2208 ;; This function calls:
  2209 ;;		_I2C_2_Master_Read
  2210 ;;		_I2C_2_Master_RepStart
  2211 ;;		_I2C_2_Master_Start
  2212 ;;		_I2C_2_Master_Stop
  2213 ;;		_I2C_2_Master_Write
  2214 ;; This function is called by:
  2215 ;;		_color_read_RGBC
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           	psect	text14
  2220   001C6C                     __ptext14:
  2221                           	callstack 0
  2222   001C6C                     _color_read_Green:
  2223                           	callstack 26
  2224   001C6C                     
  2225                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  2226   001C6C  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  2227                           
  2228                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  2229   001C70  0E52               	movlw	82
  2230   001C72  EC63  F010         	call	_I2C_2_Master_Write
  2231                           
  2232                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
  2233   001C76  0EB8               	movlw	184
  2234   001C78  EC63  F010         	call	_I2C_2_Master_Write
  2235                           
  2236                           ;color.c: 53:  I2C_2_Master_RepStart();
  2237   001C7C  EC69  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2238                           
  2239                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  2240   001C80  0E53               	movlw	83
  2241   001C82  EC63  F010         	call	_I2C_2_Master_Write
  2242                           
  2243                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  2244   001C86  0E01               	movlw	1
  2245   001C88  EC18  F00F         	call	_I2C_2_Master_Read
  2246   001C8C  6E07               	movwf	??_color_read_Green^0,c
  2247   001C8E  5007               	movf	??_color_read_Green^0,w,c
  2248   001C90  6E0A               	movwf	color_read_Green@tmp^0,c
  2249   001C92  6A0B               	clrf	(color_read_Green@tmp+1)^0,c
  2250                           
  2251                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2252   001C94  0E00               	movlw	0
  2253   001C96  EC18  F00F         	call	_I2C_2_Master_Read
  2254   001C9A  6E07               	movwf	??_color_read_Green^0,c
  2255   001C9C  5007               	movf	??_color_read_Green^0,w,c
  2256   001C9E  6E09               	movwf	(??_color_read_Green+2)^0,c
  2257   001CA0  6A08               	clrf	(??_color_read_Green+1)^0,c
  2258   001CA2  500A               	movf	color_read_Green@tmp^0,w,c
  2259   001CA4  1008               	iorwf	(??_color_read_Green+1)^0,w,c
  2260   001CA6  6E0A               	movwf	color_read_Green@tmp^0,c
  2261   001CA8  500B               	movf	(color_read_Green@tmp+1)^0,w,c
  2262   001CAA  1009               	iorwf	(??_color_read_Green+2)^0,w,c
  2263   001CAC  6E0B               	movwf	(color_read_Green@tmp+1)^0,c
  2264                           
  2265                           ;color.c: 57:  I2C_2_Master_Stop();
  2266   001CAE  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  2267   001CB2                     
  2268                           ;color.c: 58:  return tmp;
  2269   001CB2  C00A  F005         	movff	color_read_Green@tmp,?_color_read_Green
  2270   001CB6  C00B  F006         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2271   001CBA  0012               	return		;funcret
  2272   001CBC                     __end_of_color_read_Green:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _color_read_Clear *****************
  2276 ;; Defined at:
  2277 ;;		line 75 in file "color.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  tmp             2    9[COMRAM] unsigned int 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  2    4[COMRAM] unsigned int 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2291 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2293 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2294 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2295 ;;Total ram usage:        7 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 3
  2298 ;; This function calls:
  2299 ;;		_I2C_2_Master_Read
  2300 ;;		_I2C_2_Master_RepStart
  2301 ;;		_I2C_2_Master_Start
  2302 ;;		_I2C_2_Master_Stop
  2303 ;;		_I2C_2_Master_Write
  2304 ;; This function is called by:
  2305 ;;		_color_read_RGBC
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text15
  2310   001CBC                     __ptext15:
  2311                           	callstack 0
  2312   001CBC                     _color_read_Clear:
  2313                           	callstack 26
  2314   001CBC                     
  2315                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  2316   001CBC  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  2317                           
  2318                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  2319   001CC0  0E52               	movlw	82
  2320   001CC2  EC63  F010         	call	_I2C_2_Master_Write
  2321                           
  2322                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  2323   001CC6  0EB4               	movlw	180
  2324   001CC8  EC63  F010         	call	_I2C_2_Master_Write
  2325                           
  2326                           ;color.c: 81:  I2C_2_Master_RepStart();
  2327   001CCC  EC69  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2328                           
  2329                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  2330   001CD0  0E53               	movlw	83
  2331   001CD2  EC63  F010         	call	_I2C_2_Master_Write
  2332                           
  2333                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  2334   001CD6  0E01               	movlw	1
  2335   001CD8  EC18  F00F         	call	_I2C_2_Master_Read
  2336   001CDC  6E07               	movwf	??_color_read_Clear^0,c
  2337   001CDE  5007               	movf	??_color_read_Clear^0,w,c
  2338   001CE0  6E0A               	movwf	color_read_Clear@tmp^0,c
  2339   001CE2  6A0B               	clrf	(color_read_Clear@tmp+1)^0,c
  2340                           
  2341                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2342   001CE4  0E00               	movlw	0
  2343   001CE6  EC18  F00F         	call	_I2C_2_Master_Read
  2344   001CEA  6E07               	movwf	??_color_read_Clear^0,c
  2345   001CEC  5007               	movf	??_color_read_Clear^0,w,c
  2346   001CEE  6E09               	movwf	(??_color_read_Clear+2)^0,c
  2347   001CF0  6A08               	clrf	(??_color_read_Clear+1)^0,c
  2348   001CF2  500A               	movf	color_read_Clear@tmp^0,w,c
  2349   001CF4  1008               	iorwf	(??_color_read_Clear+1)^0,w,c
  2350   001CF6  6E0A               	movwf	color_read_Clear@tmp^0,c
  2351   001CF8  500B               	movf	(color_read_Clear@tmp+1)^0,w,c
  2352   001CFA  1009               	iorwf	(??_color_read_Clear+2)^0,w,c
  2353   001CFC  6E0B               	movwf	(color_read_Clear@tmp+1)^0,c
  2354                           
  2355                           ;color.c: 85:  I2C_2_Master_Stop();
  2356   001CFE  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  2357   001D02                     
  2358                           ;color.c: 86:  return tmp;
  2359   001D02  C00A  F005         	movff	color_read_Clear@tmp,?_color_read_Clear
  2360   001D06  C00B  F006         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2361   001D0A  0012               	return		;funcret
  2362   001D0C                     __end_of_color_read_Clear:
  2363                           	callstack 0
  2364                           
  2365 ;; *************** function _color_read_Blue *****************
  2366 ;; Defined at:
  2367 ;;		line 61 in file "color.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;		None
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  tmp             2    9[COMRAM] unsigned int 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  2    4[COMRAM] unsigned int 
  2374 ;; Registers used:
  2375 ;;		wreg, status,2, status,0, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2381 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2383 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2384 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2385 ;;Total ram usage:        7 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 3
  2388 ;; This function calls:
  2389 ;;		_I2C_2_Master_Read
  2390 ;;		_I2C_2_Master_RepStart
  2391 ;;		_I2C_2_Master_Start
  2392 ;;		_I2C_2_Master_Stop
  2393 ;;		_I2C_2_Master_Write
  2394 ;; This function is called by:
  2395 ;;		_color_read_RGBC
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text16
  2400   001D0C                     __ptext16:
  2401                           	callstack 0
  2402   001D0C                     _color_read_Blue:
  2403                           	callstack 26
  2404   001D0C                     
  2405                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  2406   001D0C  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  2407                           
  2408                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  2409   001D10  0E52               	movlw	82
  2410   001D12  EC63  F010         	call	_I2C_2_Master_Write
  2411                           
  2412                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  2413   001D16  0EBA               	movlw	186
  2414   001D18  EC63  F010         	call	_I2C_2_Master_Write
  2415                           
  2416                           ;color.c: 67:  I2C_2_Master_RepStart();
  2417   001D1C  EC69  F010         	call	_I2C_2_Master_RepStart	;wreg free
  2418                           
  2419                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  2420   001D20  0E53               	movlw	83
  2421   001D22  EC63  F010         	call	_I2C_2_Master_Write
  2422                           
  2423                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  2424   001D26  0E01               	movlw	1
  2425   001D28  EC18  F00F         	call	_I2C_2_Master_Read
  2426   001D2C  6E07               	movwf	??_color_read_Blue^0,c
  2427   001D2E  5007               	movf	??_color_read_Blue^0,w,c
  2428   001D30  6E0A               	movwf	color_read_Blue@tmp^0,c
  2429   001D32  6A0B               	clrf	(color_read_Blue@tmp+1)^0,c
  2430                           
  2431                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2432   001D34  0E00               	movlw	0
  2433   001D36  EC18  F00F         	call	_I2C_2_Master_Read
  2434   001D3A  6E07               	movwf	??_color_read_Blue^0,c
  2435   001D3C  5007               	movf	??_color_read_Blue^0,w,c
  2436   001D3E  6E09               	movwf	(??_color_read_Blue+2)^0,c
  2437   001D40  6A08               	clrf	(??_color_read_Blue+1)^0,c
  2438   001D42  500A               	movf	color_read_Blue@tmp^0,w,c
  2439   001D44  1008               	iorwf	(??_color_read_Blue+1)^0,w,c
  2440   001D46  6E0A               	movwf	color_read_Blue@tmp^0,c
  2441   001D48  500B               	movf	(color_read_Blue@tmp+1)^0,w,c
  2442   001D4A  1009               	iorwf	(??_color_read_Blue+2)^0,w,c
  2443   001D4C  6E0B               	movwf	(color_read_Blue@tmp+1)^0,c
  2444                           
  2445                           ;color.c: 71:  I2C_2_Master_Stop();
  2446   001D4E  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  2447   001D52                     
  2448                           ;color.c: 72:  return tmp;
  2449   001D52  C00A  F005         	movff	color_read_Blue@tmp,?_color_read_Blue
  2450   001D56  C00B  F006         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2451   001D5A  0012               	return		;funcret
  2452   001D5C                     __end_of_color_read_Blue:
  2453                           	callstack 0
  2454                           
  2455 ;; *************** function _I2C_2_Master_RepStart *****************
  2456 ;; Defined at:
  2457 ;;		line 33 in file "i2c.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, cstack
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2475 ;;Total ram usage:        0 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; Hardware stack levels required when called: 2
  2478 ;; This function calls:
  2479 ;;		_I2C_2_Master_Idle
  2480 ;; This function is called by:
  2481 ;;		_color_read_Red
  2482 ;;		_color_read_Green
  2483 ;;		_color_read_Blue
  2484 ;;		_color_read_Clear
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text17
  2489   0020D2                     __ptext17:
  2490                           	callstack 0
  2491   0020D2                     _I2C_2_Master_RepStart:
  2492                           	callstack 26
  2493   0020D2                     
  2494                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2495   0020D2  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2496   0020D6                     
  2497                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2498   0020D6  010E               	movlb	14	; () banked
  2499   0020D8  83DA               	bsf	218,1,b	;volatile
  2500   0020DA                     
  2501                           ; BSR set to: 14
  2502   0020DA  0012               	return		;funcret
  2503   0020DC                     __end_of_I2C_2_Master_RepStart:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _I2C_2_Master_Read *****************
  2507 ;; Defined at:
  2508 ;;		line 51 in file "i2c.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  ack             1    wreg     unsigned char 
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  ack             1    2[COMRAM] unsigned char 
  2513 ;;  tmp             1    3[COMRAM] unsigned char 
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      unsigned char 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2, status,0, cstack
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2525 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2526 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2527 ;;Total ram usage:        3 bytes
  2528 ;; Hardware stack levels used: 1
  2529 ;; Hardware stack levels required when called: 2
  2530 ;; This function calls:
  2531 ;;		_I2C_2_Master_Idle
  2532 ;; This function is called by:
  2533 ;;		_color_read_Red
  2534 ;;		_color_read_Green
  2535 ;;		_color_read_Blue
  2536 ;;		_color_read_Clear
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text18
  2541   001E30                     __ptext18:
  2542                           	callstack 0
  2543   001E30                     _I2C_2_Master_Read:
  2544                           	callstack 26
  2545                           
  2546                           ; BSR set to: 14
  2547                           ;incstack = 0
  2548                           ;I2C_2_Master_Read@ack stored from wreg
  2549   001E30  6E03               	movwf	I2C_2_Master_Read@ack^0,c
  2550   001E32                     
  2551                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2552   001E32  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2553   001E36                     
  2554                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2555   001E36  010E               	movlb	14	; () banked
  2556   001E38  87DA               	bsf	218,3,b	;volatile
  2557                           
  2558                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2559   001E3A  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2560   001E3E                     
  2561                           ;i2c.c: 57:   tmp = SSP2BUF;
  2562   001E3E  CED5 F004          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2563                           
  2564                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2565   001E42  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  2566   001E46                     
  2567                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2568   001E46  5003               	movf	I2C_2_Master_Read@ack^0,w,c
  2569   001E48  B4D8               	btfsc	status,2,c
  2570   001E4A  EF29  F00F         	goto	u1011
  2571   001E4E  EF2D  F00F         	goto	u1010
  2572   001E52                     u1011:
  2573   001E52  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2574   001E54  2A02               	incf	??_I2C_2_Master_Read^0,f,c
  2575   001E56  EF2E  F00F         	goto	u1028
  2576   001E5A                     u1010:
  2577   001E5A  6A02               	clrf	??_I2C_2_Master_Read^0,c
  2578   001E5C                     u1028:
  2579   001E5C  3A02               	swapf	??_I2C_2_Master_Read^0,f,c
  2580   001E5E  4602               	rlncf	??_I2C_2_Master_Read^0,f,c
  2581   001E60  010E               	movlb	14	; () banked
  2582   001E62  51DA               	movf	218,w,b	;volatile
  2583   001E64  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2584   001E66  0BDF               	andlw	-33
  2585   001E68  1802               	xorwf	??_I2C_2_Master_Read^0,w,c
  2586   001E6A  6FDA               	movwf	218,b	;volatile
  2587   001E6C                     
  2588                           ; BSR set to: 14
  2589                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2590   001E6C  89DA               	bsf	218,4,b	;volatile
  2591   001E6E                     
  2592                           ; BSR set to: 14
  2593                           ;i2c.c: 61:   return tmp;
  2594   001E6E  5004               	movf	I2C_2_Master_Read@tmp^0,w,c
  2595   001E70                     
  2596                           ; BSR set to: 14
  2597   001E70  0012               	return		;funcret
  2598   001E72                     __end_of_I2C_2_Master_Read:
  2599                           	callstack 0
  2600                           
  2601 ;; *************** function _color_click_init *****************
  2602 ;; Defined at:
  2603 ;;		line 9 in file "color.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;		None
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;		None
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:        1 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 4
  2624 ;; This function calls:
  2625 ;;		_I2C_2_Master_Init
  2626 ;;		_color_writetoaddr
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text19
  2633   001EF2                     __ptext19:
  2634                           	callstack 0
  2635   001EF2                     _color_click_init:
  2636                           	callstack 26
  2637   001EF2                     
  2638                           ;color.c: 12:     I2C_2_Master_Init();
  2639   001EF2  ECAC  F00F         	call	_I2C_2_Master_Init	;wreg free
  2640   001EF6                     
  2641                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  2642   001EF6  0E01               	movlw	1
  2643   001EF8  6E03               	movwf	color_writetoaddr@value^0,c
  2644   001EFA  0E00               	movlw	0
  2645   001EFC  EC0E  F010         	call	_color_writetoaddr
  2646   001F00                     
  2647                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2648   001F00  0E3F               	movlw	63
  2649   001F02  6E05               	movwf	??_color_click_init^0,c
  2650   001F04  0E55               	movlw	85
  2651   001F06                     u1307:
  2652   001F06  2EE8               	decfsz	wreg,f,c
  2653   001F08  D7FE               	bra	u1307
  2654   001F0A  2E05               	decfsz	??_color_click_init^0,f,c
  2655   001F0C  D7FC               	bra	u1307
  2656   001F0E  F000               	nop	
  2657   001F10                     
  2658                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  2659   001F10  0E03               	movlw	3
  2660   001F12  6E03               	movwf	color_writetoaddr@value^0,c
  2661   001F14  0E00               	movlw	0
  2662   001F16  EC0E  F010         	call	_color_writetoaddr
  2663   001F1A                     
  2664                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  2665   001F1A  0ED5               	movlw	213
  2666   001F1C  6E03               	movwf	color_writetoaddr@value^0,c
  2667   001F1E  0E01               	movlw	1
  2668   001F20  EC0E  F010         	call	_color_writetoaddr
  2669   001F24  0012               	return		;funcret
  2670   001F26                     __end_of_color_click_init:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _I2C_2_Master_Init *****************
  2674 ;; Defined at:
  2675 ;;		line 4 in file "i2c.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;		None
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2693 ;;Total ram usage:        0 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_color_click_init
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           	psect	text20
  2704   001F58                     __ptext20:
  2705                           	callstack 0
  2706   001F58                     _I2C_2_Master_Init:
  2707                           	callstack 28
  2708   001F58                     
  2709                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2710   001F58  010E               	movlb	14	; () banked
  2711   001F5A  51D9               	movf	217,w,b	;volatile
  2712   001F5C  0BF0               	andlw	-16
  2713   001F5E  0908               	iorlw	8
  2714   001F60  6FD9               	movwf	217,b	;volatile
  2715   001F62                     
  2716                           ; BSR set to: 14
  2717                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2718   001F62  8BD9               	bsf	217,5,b	;volatile
  2719                           
  2720                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2721   001F64  0E9F               	movlw	159
  2722   001F66  6FD6               	movwf	214,b	;volatile
  2723   001F68                     
  2724                           ; BSR set to: 14
  2725                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2726   001F68  8A84               	bsf	132,5,c	;volatile
  2727   001F6A                     
  2728                           ; BSR set to: 14
  2729                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2730   001F6A  8C84               	bsf	132,6,c	;volatile
  2731   001F6C                     
  2732                           ; BSR set to: 14
  2733                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2734   001F6C  9BA7               	bcf	167,5,b	;volatile
  2735   001F6E                     
  2736                           ; BSR set to: 14
  2737                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2738   001F6E  9DA7               	bcf	167,6,b	;volatile
  2739                           
  2740                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2741   001F70  0E1D               	movlw	29
  2742   001F72  6F1D               	movwf	29,b	;volatile
  2743                           
  2744                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2745   001F74  0E1E               	movlw	30
  2746   001F76  6F1C               	movwf	28,b	;volatile
  2747                           
  2748                           ;i2c.c: 18:   RD5PPS=0x1C;
  2749   001F78  0E1C               	movlw	28
  2750   001F7A  6F6F               	movwf	111,b	;volatile
  2751                           
  2752                           ;i2c.c: 19:   RD6PPS=0x1B;
  2753   001F7C  0E1B               	movlw	27
  2754   001F7E  6F70               	movwf	112,b	;volatile
  2755   001F80                     
  2756                           ; BSR set to: 14
  2757   001F80  0012               	return		;funcret
  2758   001F82                     __end_of_I2C_2_Master_Init:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _colorVal2String *****************
  2762 ;; Defined at:
  2763 ;;		line 98 in file "color.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  buf             2   88[COMRAM] PTR unsigned char 
  2766 ;;		 -> main@buf(100), 
  2767 ;;  temp            2   90[COMRAM] PTR struct RGBC_val
  2768 ;;		 -> main@RGBC(8), 
  2769 ;; Auto vars:     Size  Location     Type
  2770 ;;		None
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  1    wreg      unsigned char 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2784 ;;Total ram usage:        4 bytes
  2785 ;; Hardware stack levels used: 1
  2786 ;; Hardware stack levels required when called: 9
  2787 ;; This function calls:
  2788 ;;		_RGBC2Serial
  2789 ;;		_sprintf
  2790 ;; This function is called by:
  2791 ;;		_main
  2792 ;; This function uses a non-reentrant model
  2793 ;;
  2794                           
  2795                           	psect	text21
  2796   001A28                     __ptext21:
  2797                           	callstack 0
  2798   001A28                     _colorVal2String:
  2799                           	callstack 21
  2800   001A28                     
  2801                           ;color.c: 99:     sprintf(buf,"RGBC:%i %i %i %i\n",temp->R, temp->G, temp->B, temp->C);
  2802   001A28  C059  F060         	movff	colorVal2String@buf,sprintf@s
  2803   001A2C  C05A  F061         	movff	colorVal2String@buf+1,sprintf@s+1
  2804   001A30  0E01               	movlw	low STR_1
  2805   001A32  0100               	movlb	0	; () banked
  2806   001A34  6F62               	movwf	sprintf@fmt& (0+255),b
  2807   001A36  0E0E               	movlw	high STR_1
  2808   001A38  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  2809   001A3A  C05B  FFD9         	movff	colorVal2String@temp,fsr2l
  2810   001A3E  C05C  FFDA         	movff	colorVal2String@temp+1,fsr2h
  2811   001A42  CFDE F064          	movff	postinc2,?_sprintf+4
  2812   001A46  CFDD F065          	movff	postdec2,?_sprintf+5
  2813   001A4A  EE20 F002          	lfsr	2,2
  2814   001A4E  505B               	movf	colorVal2String@temp^0,w,c
  2815   001A50  26D9               	addwf	fsr2l,f,c
  2816   001A52  505C               	movf	(colorVal2String@temp+1)^0,w,c
  2817   001A54  22DA               	addwfc	fsr2h,f,c
  2818   001A56  CFDE F066          	movff	postinc2,?_sprintf+6
  2819   001A5A  CFDD F067          	movff	postdec2,?_sprintf+7
  2820   001A5E  EE20 F004          	lfsr	2,4
  2821   001A62  505B               	movf	colorVal2String@temp^0,w,c
  2822   001A64  26D9               	addwf	fsr2l,f,c
  2823   001A66  505C               	movf	(colorVal2String@temp+1)^0,w,c
  2824   001A68  22DA               	addwfc	fsr2h,f,c
  2825   001A6A  CFDE F068          	movff	postinc2,?_sprintf+8
  2826   001A6E  CFDD F069          	movff	postdec2,?_sprintf+9
  2827   001A72  EE20 F006          	lfsr	2,6
  2828   001A76  505B               	movf	colorVal2String@temp^0,w,c
  2829   001A78  26D9               	addwf	fsr2l,f,c
  2830   001A7A  505C               	movf	(colorVal2String@temp+1)^0,w,c
  2831   001A7C  22DA               	addwfc	fsr2h,f,c
  2832   001A7E  CFDE F06A          	movff	postinc2,?_sprintf+10
  2833   001A82  CFDD F06B          	movff	postdec2,?_sprintf+11
  2834   001A86  ECE5  F00D         	call	_sprintf	;wreg free
  2835   001A8A                     
  2836                           ;color.c: 100:     RGBC2Serial(buf);
  2837   001A8A  C059  F006         	movff	colorVal2String@buf,RGBC2Serial@str
  2838   001A8E  C05A  F007         	movff	colorVal2String@buf+1,RGBC2Serial@str+1
  2839   001A92  EC1E  F010         	call	_RGBC2Serial	;wreg free
  2840   001A96  0012               	return		;funcret
  2841   001A98                     __end_of_colorVal2String:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _sprintf *****************
  2845 ;; Defined at:
  2846 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;  s               2    0[BANK0 ] PTR unsigned char 
  2849 ;;		 -> main@buf(100), 
  2850 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  2851 ;;		 -> STR_1(18), 
  2852 ;; Auto vars:     Size  Location     Type
  2853 ;;  f              11   14[BANK0 ] struct _IO_FILE
  2854 ;;  ap              2   12[BANK0 ] PTR void [1]
  2855 ;;		 -> ?_sprintf(2), 
  2856 ;;  ret             2    0        int 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  2    0[BANK0 ] int 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2866 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2867 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2869 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2870 ;;Total ram usage:       25 bytes
  2871 ;; Hardware stack levels used: 1
  2872 ;; Hardware stack levels required when called: 8
  2873 ;; This function calls:
  2874 ;;		_vfprintf
  2875 ;; This function is called by:
  2876 ;;		_colorVal2String
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text22
  2881   001BCA                     __ptext22:
  2882                           	callstack 0
  2883   001BCA                     _sprintf:
  2884                           	callstack 21
  2885   001BCA  0E64               	movlw	low (?_sprintf+4)
  2886   001BCC  0100               	movlb	0	; () banked
  2887   001BCE  6F6C               	movwf	sprintf@ap& (0+255),b
  2888   001BD0  0E00               	movlw	high (?_sprintf+4)
  2889   001BD2  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  2890   001BD4  C060  F06E         	movff	sprintf@s,sprintf@f
  2891   001BD8  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  2892   001BDC                     
  2893                           ; BSR set to: 0
  2894   001BDC  0E00               	movlw	0
  2895   001BDE  6F72               	movwf	(sprintf@f+4)& (0+255),b
  2896   001BE0  0E00               	movlw	0
  2897   001BE2  6F71               	movwf	(sprintf@f+3)& (0+255),b
  2898   001BE4                     
  2899                           ; BSR set to: 0
  2900   001BE4  0E00               	movlw	0
  2901   001BE6  6F78               	movwf	(sprintf@f+10)& (0+255),b
  2902   001BE8  0E00               	movlw	0
  2903   001BEA  6F77               	movwf	(sprintf@f+9)& (0+255),b
  2904   001BEC                     
  2905                           ; BSR set to: 0
  2906   001BEC  0E6E               	movlw	low sprintf@f
  2907   001BEE  6E51               	movwf	vfprintf@fp^0,c
  2908   001BF0  0E00               	movlw	high sprintf@f
  2909   001BF2  6E52               	movwf	(vfprintf@fp+1)^0,c
  2910   001BF4  C062  F053         	movff	sprintf@fmt,vfprintf@fmt
  2911   001BF8  C063  F054         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2912   001BFC  0E6C               	movlw	low sprintf@ap
  2913   001BFE  6E55               	movwf	vfprintf@ap^0,c
  2914   001C00  0E00               	movlw	high sprintf@ap
  2915   001C02  6E56               	movwf	(vfprintf@ap+1)^0,c
  2916   001C04  ECAE  F00E         	call	_vfprintf	;wreg free
  2917   001C08  0100               	movlb	0	; () banked
  2918   001C0A  5171               	movf	(sprintf@f+3)& (0+255),w,b
  2919   001C0C  2560               	addwf	sprintf@s& (0+255),w,b
  2920   001C0E  6ED9               	movwf	fsr2l,c
  2921   001C10  5172               	movf	(sprintf@f+4)& (0+255),w,b
  2922   001C12  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  2923   001C14  6EDA               	movwf	fsr2h,c
  2924   001C16  0E00               	movlw	0
  2925   001C18  6EDF               	movwf	indf2,c
  2926   001C1A                     
  2927                           ; BSR set to: 0
  2928   001C1A  0012               	return		;funcret
  2929   001C1C                     __end_of_sprintf:
  2930                           	callstack 0
  2931                           
  2932 ;; *************** function _vfprintf *****************
  2933 ;; Defined at:
  2934 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  fp              2   80[COMRAM] PTR struct _IO_FILE
  2937 ;;		 -> sprintf@f(11), 
  2938 ;;  fmt             2   82[COMRAM] PTR const unsigned char 
  2939 ;;		 -> STR_1(18), 
  2940 ;;  ap              2   84[COMRAM] PTR PTR void 
  2941 ;;		 -> sprintf@ap(2), 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  cfmt            2   86[COMRAM] PTR unsigned char 
  2944 ;;		 -> STR_1(18), 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2   80[COMRAM] int 
  2947 ;; Registers used:
  2948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2958 ;;Total ram usage:        8 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; Hardware stack levels required when called: 7
  2961 ;; This function calls:
  2962 ;;		_vfpfcnvrt
  2963 ;; This function is called by:
  2964 ;;		_sprintf
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text23
  2969   001D5C                     __ptext23:
  2970                           	callstack 0
  2971   001D5C                     _vfprintf:
  2972                           	callstack 21
  2973   001D5C                     
  2974                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2975   001D5C  C053  F057         	movff	vfprintf@fmt,vfprintf@cfmt
  2976   001D60  C054  F058         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2977                           
  2978                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2979   001D64  EFC2  F00E         	goto	l2128
  2980   001D68                     l2126:
  2981                           
  2982                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2983   001D68  C051  F03F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2984   001D6C  C052  F040         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2985   001D70  0E57               	movlw	low vfprintf@cfmt
  2986   001D72  6E41               	movwf	vfpfcnvrt@fmt^0,c
  2987   001D74  0E00               	movlw	high vfprintf@cfmt
  2988   001D76  6E42               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2989   001D78  C055  F043         	movff	vfprintf@ap,vfpfcnvrt@ap
  2990   001D7C  C056  F044         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2991   001D80  EC75  F00A         	call	_vfpfcnvrt	;wreg free
  2992   001D84                     l2128:
  2993                           
  2994                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2995   001D84  C057  FFF6         	movff	vfprintf@cfmt,tblptrl
  2996   001D88  C058  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2997   001D8C                     	if	0	;tblptru may be non-zero
  2998   001D8C                     	endif
  2999   001D8C                     	if	0	;tblptru may be non-zero
  3000   001D8C                     	endif
  3001   001D8C  0008               	tblrd		*
  3002   001D8E  50F5               	movf	tablat,w,c
  3003   001D90  0900               	iorlw	0
  3004   001D92  A4D8               	btfss	status,2,c
  3005   001D94  EFCE  F00E         	goto	u1071
  3006   001D98  EFD0  F00E         	goto	u1070
  3007   001D9C                     u1071:
  3008   001D9C  EFB4  F00E         	goto	l2126
  3009   001DA0                     u1070:
  3010   001DA0                     
  3011                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  3012   001DA0  0E00               	movlw	0
  3013   001DA2  6E52               	movwf	(?_vfprintf+1)^0,c
  3014   001DA4  0E00               	movlw	0
  3015   001DA6  6E51               	movwf	?_vfprintf^0,c
  3016   001DA8  0012               	return		;funcret
  3017   001DAA                     __end_of_vfprintf:
  3018                           	callstack 0
  3019                           
  3020 ;; *************** function _vfpfcnvrt *****************
  3021 ;; Defined at:
  3022 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  3025 ;;		 -> sprintf@f(11), 
  3026 ;;  fmt             2   64[COMRAM] PTR PTR unsigned char 
  3027 ;;		 -> vfprintf@cfmt(2), 
  3028 ;;  ap              2   66[COMRAM] PTR PTR void 
  3029 ;;		 -> sprintf@ap(2), 
  3030 ;; Auto vars:     Size  Location     Type
  3031 ;;  convarg         8   70[COMRAM] struct .
  3032 ;;  cp              2   78[COMRAM] PTR unsigned char 
  3033 ;;		 -> STR_1(18), 
  3034 ;;  i               2    0        int 
  3035 ;;  done            2    0        int 
  3036 ;;  c               1    0        unsigned char 
  3037 ;; Return value:  Size  Location     Type
  3038 ;;                  1    wreg      void 
  3039 ;; Registers used:
  3040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3041 ;; Tracked objects:
  3042 ;;		On entry : 0/0
  3043 ;;		On exit  : 0/0
  3044 ;;		Unchanged: 0/0
  3045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3046 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3047 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3048 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3049 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3050 ;;Total ram usage:       18 bytes
  3051 ;; Hardware stack levels used: 1
  3052 ;; Hardware stack levels required when called: 6
  3053 ;; This function calls:
  3054 ;;		_dtoa
  3055 ;;		_fputc
  3056 ;; This function is called by:
  3057 ;;		_vfprintf
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text24
  3062   0014EA                     __ptext24:
  3063                           	callstack 0
  3064   0014EA                     _vfpfcnvrt:
  3065                           	callstack 21
  3066   0014EA                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  3068   0014EA  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3069   0014EE  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3070   0014F2  CFDE FFF6          	movff	postinc2,tblptrl
  3071   0014F6  CFDD FFF7          	movff	postdec2,tblptrh
  3072   0014FA                     	if	0	;tblptru may be non-zero
  3073   0014FA                     	endif
  3074   0014FA                     	if	0	;tblptru may be non-zero
  3075   0014FA                     	endif
  3076   0014FA  0008               	tblrd		*
  3077   0014FC  50F5               	movf	tablat,w,c
  3078   0014FE  0A25               	xorlw	37
  3079   001500  A4D8               	btfss	status,2,c
  3080   001502  EF85  F00A         	goto	u981
  3081   001506  EF87  F00A         	goto	u980
  3082   00150A                     u981:
  3083   00150A  EF08  F00B         	goto	l2062
  3084   00150E                     u980:
  3085   00150E                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  3087   00150E  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3088   001512  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3089   001516  2ADE               	incf	postinc2,f,c
  3090   001518  0E00               	movlw	0
  3091   00151A  22DD               	addwfc	postdec2,f,c
  3092   00151C                     
  3093                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  3094   00151C  0E00               	movlw	0
  3095   00151E  0101               	movlb	1	; () banked
  3096   001520  6F51               	movwf	(_width+1)& (0+255),b
  3097   001522  0E00               	movlw	0
  3098   001524  6F50               	movwf	_width& (0+255),b
  3099   001526  C150  F0FB         	movff	_width,_flags
  3100   00152A                     
  3101                           ; BSR set to: 1
  3102                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  3103   00152A  0100               	movlb	0	; () banked
  3104   00152C  69F9               	setf	_prec& (0+255),b
  3105   00152E  69FA               	setf	(_prec+1)& (0+255),b
  3106   001530                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  3109   001530  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3110   001534  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3111   001538  CFDE F04F          	movff	postinc2,vfpfcnvrt@cp
  3112   00153C  CFDD F050          	movff	postdec2,vfpfcnvrt@cp+1
  3113   001540                     
  3114                           ; BSR set to: 0
  3115                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3116   001540  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3117   001544  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3118   001548                     	if	0	;tblptru may be non-zero
  3119   001548                     	endif
  3120   001548                     	if	0	;tblptru may be non-zero
  3121   001548                     	endif
  3122   001548  0008               	tblrd		*
  3123   00154A  50F5               	movf	tablat,w,c
  3124   00154C  0A64               	xorlw	100
  3125   00154E  B4D8               	btfsc	status,2,c
  3126   001550  EFAC  F00A         	goto	u991
  3127   001554  EFAE  F00A         	goto	u990
  3128   001558                     u991:
  3129   001558  EFBC  F00A         	goto	l2052
  3130   00155C                     u990:
  3131   00155C                     
  3132                           ; BSR set to: 0
  3133   00155C  C04F  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3134   001560  C050  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3135   001564                     	if	0	;tblptru may be non-zero
  3136   001564                     	endif
  3137   001564                     	if	0	;tblptru may be non-zero
  3138   001564                     	endif
  3139   001564  0008               	tblrd		*
  3140   001566  50F5               	movf	tablat,w,c
  3141   001568  0A69               	xorlw	105
  3142   00156A  A4D8               	btfss	status,2,c
  3143   00156C  EFBA  F00A         	goto	u1001
  3144   001570  EFBC  F00A         	goto	u1000
  3145   001574                     u1001:
  3146   001574  EFFF  F00A         	goto	l2058
  3147   001578                     u1000:
  3148   001578                     l2052:
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3152   001578  C043  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3153   00157C  C044  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3154   001580  CFDF F045          	movff	indf2,??_vfpfcnvrt
  3155   001584  0E02               	movlw	2
  3156   001586  26DE               	addwf	postinc2,f,c
  3157   001588  CFDF F046          	movff	indf2,??_vfpfcnvrt+1
  3158   00158C  0E00               	movlw	0
  3159   00158E  22DD               	addwfc	postdec2,f,c
  3160   001590  C045  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3161   001594  C046  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3162   001598  CFDE F047          	movff	postinc2,vfpfcnvrt@convarg
  3163   00159C  CFDD F048          	movff	postdec2,vfpfcnvrt@convarg+1
  3164   0015A0  0E00               	movlw	0
  3165   0015A2  BE48               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3166   0015A4  0EFF               	movlw	-1
  3167   0015A6  6E49               	movwf	(vfpfcnvrt@convarg+2)^0,c
  3168   0015A8  6E4A               	movwf	(vfpfcnvrt@convarg+3)^0,c
  3169   0015AA  6E4B               	movwf	(vfpfcnvrt@convarg+4)^0,c
  3170   0015AC  6E4C               	movwf	(vfpfcnvrt@convarg+5)^0,c
  3171   0015AE  6E4D               	movwf	(vfpfcnvrt@convarg+6)^0,c
  3172   0015B0  6E4E               	movwf	(vfpfcnvrt@convarg+7)^0,c
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  3175   0015B2  0E01               	movlw	1
  3176   0015B4  244F               	addwf	vfpfcnvrt@cp^0,w,c
  3177   0015B6  6E45               	movwf	??_vfpfcnvrt^0,c
  3178   0015B8  0E00               	movlw	0
  3179   0015BA  2050               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3180   0015BC  6E46               	movwf	(??_vfpfcnvrt+1)^0,c
  3181   0015BE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3182   0015C2  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3183   0015C6  C045  FFDE         	movff	??_vfpfcnvrt,postinc2
  3184   0015CA  C046  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3185   0015CE                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  3188   0015CE  C03F  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3189   0015D2  C040  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3190   0015D6  C047  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
  3191   0015DA  C048  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3192   0015DE  C049  F020         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  3193   0015E2  C04A  F021         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  3194   0015E6  C04B  F022         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  3195   0015EA  C04C  F023         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  3196   0015EE  C04D  F024         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  3197   0015F2  C04E  F025         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  3198   0015F6  EC0A  F007         	call	_dtoa	;wreg free
  3199   0015FA  EF1C  F00B         	goto	l1166
  3200   0015FE                     l2058:
  3201                           
  3202                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  3203   0015FE  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3204   001602  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3205   001606  2ADE               	incf	postinc2,f,c
  3206   001608  0E00               	movlw	0
  3207   00160A  22DD               	addwfc	postdec2,f,c
  3208   00160C  EF1C  F00B         	goto	l1166
  3209   001610                     l2062:
  3210                           
  3211                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  3212   001610  C041  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3213   001614  C042  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3214   001618  CFDE FFF6          	movff	postinc2,tblptrl
  3215   00161C  CFDD FFF7          	movff	postdec2,tblptrh
  3216   001620                     	if	0	;tblptru may be non-zero
  3217   001620                     	endif
  3218   001620                     	if	0	;tblptru may be non-zero
  3219   001620                     	endif
  3220   001620  0008               	tblrd		*
  3221   001622  50F5               	movf	tablat,w,c
  3222   001624  6E01               	movwf	fputc@c^0,c
  3223   001626  6A02               	clrf	(fputc@c+1)^0,c
  3224   001628  C03F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3225   00162C  C040  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3226   001630  ECBF  F00B         	call	_fputc	;wreg free
  3227   001634  EFFF  F00A         	goto	l2058
  3228   001638                     l1166:
  3229   001638  0012               	return		;funcret
  3230   00163A                     __end_of_vfpfcnvrt:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _dtoa *****************
  3234 ;; Defined at:
  3235 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3238 ;;		 -> sprintf@f(11), 
  3239 ;;  d               8   29[COMRAM] long long 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;  n               8   51[COMRAM] long long 
  3242 ;;  i               2   59[COMRAM] int 
  3243 ;;  w               2   49[COMRAM] int 
  3244 ;;  p               2   47[COMRAM] int 
  3245 ;;  s               1   61[COMRAM] unsigned char 
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3255 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3256 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3257 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3258 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3259 ;;Total ram usage:       35 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 5
  3262 ;; This function calls:
  3263 ;;		___aodiv
  3264 ;;		___aomod
  3265 ;;		_abs
  3266 ;;		_pad
  3267 ;; This function is called by:
  3268 ;;		_vfpfcnvrt
  3269 ;; This function uses a non-reentrant model
  3270 ;;
  3271                           
  3272                           	psect	text25
  3273   000E14                     __ptext25:
  3274                           	callstack 0
  3275   000E14                     _dtoa:
  3276                           	callstack 21
  3277   000E14                     
  3278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  3279   000E14  C01E  F034         	movff	dtoa@d,dtoa@n
  3280   000E18  C01F  F035         	movff	dtoa@d+1,dtoa@n+1
  3281   000E1C  C020  F036         	movff	dtoa@d+2,dtoa@n+2
  3282   000E20  C021  F037         	movff	dtoa@d+3,dtoa@n+3
  3283   000E24  C022  F038         	movff	dtoa@d+4,dtoa@n+4
  3284   000E28  C023  F039         	movff	dtoa@d+5,dtoa@n+5
  3285   000E2C  C024  F03A         	movff	dtoa@d+6,dtoa@n+6
  3286   000E30  C025  F03B         	movff	dtoa@d+7,dtoa@n+7
  3287   000E34                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  3289   000E34  BE3B               	btfsc	(dtoa@n+7)^0,7,c
  3290   000E36  EF1F  F007         	goto	u871
  3291   000E3A  EF22  F007         	goto	u870
  3292   000E3E                     u871:
  3293   000E3E  0E01               	movlw	1
  3294   000E40  EF23  F007         	goto	u880
  3295   000E44                     u870:
  3296   000E44  0E00               	movlw	0
  3297   000E46                     u880:
  3298   000E46  6E3E               	movwf	dtoa@s^0,c
  3299   000E48                     
  3300                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  3301   000E48  503E               	movf	dtoa@s^0,w,c
  3302   000E4A  B4D8               	btfsc	status,2,c
  3303   000E4C  EF2A  F007         	goto	u891
  3304   000E50  EF2C  F007         	goto	u890
  3305   000E54                     u891:
  3306   000E54  EF3C  F007         	goto	l1978
  3307   000E58                     u890:
  3308   000E58                     
  3309                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  3310   000E58  1E3B               	comf	(dtoa@n+7)^0,f,c
  3311   000E5A  1E3A               	comf	(dtoa@n+6)^0,f,c
  3312   000E5C  1E39               	comf	(dtoa@n+5)^0,f,c
  3313   000E5E  1E38               	comf	(dtoa@n+4)^0,f,c
  3314   000E60  1E37               	comf	(dtoa@n+3)^0,f,c
  3315   000E62  1E36               	comf	(dtoa@n+2)^0,f,c
  3316   000E64  1E35               	comf	(dtoa@n+1)^0,f,c
  3317   000E66  6C34               	negf	dtoa@n^0,c
  3318   000E68  0E00               	movlw	0
  3319   000E6A  2235               	addwfc	(dtoa@n+1)^0,f,c
  3320   000E6C  2236               	addwfc	(dtoa@n+2)^0,f,c
  3321   000E6E  2237               	addwfc	(dtoa@n+3)^0,f,c
  3322   000E70  2238               	addwfc	(dtoa@n+4)^0,f,c
  3323   000E72  2239               	addwfc	(dtoa@n+5)^0,f,c
  3324   000E74  223A               	addwfc	(dtoa@n+6)^0,f,c
  3325   000E76  223B               	addwfc	(dtoa@n+7)^0,f,c
  3326   000E78                     l1978:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  3329   000E78  0100               	movlb	0	; () banked
  3330   000E7A  BFFA               	btfsc	(_prec+1)& (0+255),7,b
  3331   000E7C  EF4A  F007         	goto	u900
  3332   000E80  51FA               	movf	(_prec+1)& (0+255),w,b
  3333   000E82  E106               	bnz	u901
  3334   000E84  05F9               	decf	_prec& (0+255),w,b
  3335   000E86  B0D8               	btfsc	status,0,c
  3336   000E88  EF48  F007         	goto	u901
  3337   000E8C  EF4A  F007         	goto	u900
  3338   000E90                     u901:
  3339   000E90  EF50  F007         	goto	l1145
  3340   000E94                     u900:
  3341   000E94                     
  3342                           ; BSR set to: 0
  3343   000E94  0E00               	movlw	0
  3344   000E96  6E31               	movwf	(dtoa@p+1)^0,c
  3345   000E98  0E01               	movlw	1
  3346   000E9A  6E30               	movwf	dtoa@p^0,c
  3347   000E9C  EF54  F007         	goto	l1147
  3348   000EA0                     l1145:
  3349                           
  3350                           ; BSR set to: 0
  3351   000EA0  C0F9  F030         	movff	_prec,dtoa@p
  3352   000EA4  C0FA  F031         	movff	_prec+1,dtoa@p+1
  3353   000EA8                     l1147:
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  3357   000EA8  C150  F032         	movff	_width,dtoa@w
  3358   000EAC  C151  F033         	movff	_width+1,dtoa@w+1
  3359   000EB0                     
  3360                           ; BSR set to: 0
  3361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  3362   000EB0  503E               	movf	dtoa@s^0,w,c
  3363   000EB2  B4D8               	btfsc	status,2,c
  3364   000EB4  EF5E  F007         	goto	u911
  3365   000EB8  EF60  F007         	goto	u910
  3366   000EBC                     u911:
  3367   000EBC  EF77  F007         	goto	l1148
  3368   000EC0                     u910:
  3369   000EC0                     
  3370                           ; BSR set to: 0
  3371                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  3372   000EC0  0632               	decf	dtoa@w^0,f,c
  3373   000EC2  A0D8               	btfss	status,0,c
  3374   000EC4  0633               	decf	(dtoa@w+1)^0,f,c
  3375   000EC6                     
  3376                           ; BSR set to: 0
  3377                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  3378   000EC6  503E               	movf	dtoa@s^0,w,c
  3379   000EC8  A4D8               	btfss	status,2,c
  3380   000ECA  EF69  F007         	goto	u921
  3381   000ECE  EF6B  F007         	goto	u920
  3382   000ED2                     u921:
  3383   000ED2  EF71  F007         	goto	l1990
  3384   000ED6                     u920:
  3385   000ED6                     
  3386                           ; BSR set to: 0
  3387   000ED6  0E00               	movlw	0
  3388   000ED8  6E2F               	movwf	(_dtoa$2347+1)^0,c
  3389   000EDA  0E2B               	movlw	43
  3390   000EDC  6E2E               	movwf	_dtoa$2347^0,c
  3391   000EDE  EF75  F007         	goto	l1992
  3392   000EE2                     l1990:
  3393                           
  3394                           ; BSR set to: 0
  3395   000EE2  0E00               	movlw	0
  3396   000EE4  6E2F               	movwf	(_dtoa$2347+1)^0,c
  3397   000EE6  0E2D               	movlw	45
  3398   000EE8  6E2E               	movwf	_dtoa$2347^0,c
  3399   000EEA                     l1992:
  3400                           
  3401                           ; BSR set to: 0
  3402   000EEA  C02E  F03E         	movff	_dtoa$2347,dtoa@s
  3403   000EEE                     l1148:
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  3407   000EEE  0E00               	movlw	0
  3408   000EF0  6E3D               	movwf	(dtoa@i+1)^0,c
  3409   000EF2  0E1F               	movlw	31
  3410   000EF4  6E3C               	movwf	dtoa@i^0,c
  3411   000EF6                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  3414   000EF6  0E00               	movlw	0
  3415   000EF8  0101               	movlb	1	; () banked
  3416   000EFA  6F71               	movwf	(_dbuf+31)& (0+255),b
  3417                           
  3418                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3419   000EFC  EFFC  F007         	goto	l2006
  3420   000F00                     l1996:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  3423   000F00  063C               	decf	dtoa@i^0,f,c
  3424   000F02  A0D8               	btfss	status,0,c
  3425   000F04  063D               	decf	(dtoa@i+1)^0,f,c
  3426   000F06                     
  3427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  3428   000F06  0E52               	movlw	low _dbuf
  3429   000F08  243C               	addwf	dtoa@i^0,w,c
  3430   000F0A  6ED9               	movwf	fsr2l,c
  3431   000F0C  0E01               	movlw	high _dbuf
  3432   000F0E  203D               	addwfc	(dtoa@i+1)^0,w,c
  3433   000F10  6EDA               	movwf	fsr2h,c
  3434   000F12  C034  F001         	movff	dtoa@n,___aomod@dividend
  3435   000F16  C035  F002         	movff	dtoa@n+1,___aomod@dividend+1
  3436   000F1A  C036  F003         	movff	dtoa@n+2,___aomod@dividend+2
  3437   000F1E  C037  F004         	movff	dtoa@n+3,___aomod@dividend+3
  3438   000F22  C038  F005         	movff	dtoa@n+4,___aomod@dividend+4
  3439   000F26  C039  F006         	movff	dtoa@n+5,___aomod@dividend+5
  3440   000F2A  C03A  F007         	movff	dtoa@n+6,___aomod@dividend+6
  3441   000F2E  C03B  F008         	movff	dtoa@n+7,___aomod@dividend+7
  3442   000F32  0E0A               	movlw	10
  3443   000F34  6E09               	movwf	___aomod@divisor^0,c
  3444   000F36  0E00               	movlw	0
  3445   000F38  6E0A               	movwf	(___aomod@divisor+1)^0,c
  3446   000F3A  0E00               	movlw	0
  3447   000F3C  6E0B               	movwf	(___aomod@divisor+2)^0,c
  3448   000F3E  0E00               	movlw	0
  3449   000F40  6E0C               	movwf	(___aomod@divisor+3)^0,c
  3450   000F42  0E00               	movlw	0
  3451   000F44  6E0D               	movwf	(___aomod@divisor+4)^0,c
  3452   000F46  0E00               	movlw	0
  3453   000F48  6E0E               	movwf	(___aomod@divisor+5)^0,c
  3454   000F4A  0E00               	movlw	0
  3455   000F4C  6E0F               	movwf	(___aomod@divisor+6)^0,c
  3456   000F4E  0E00               	movlw	0
  3457   000F50  6E10               	movwf	(___aomod@divisor+7)^0,c
  3458   000F52  ECC3  F009         	call	___aomod	;wreg free
  3459   000F56  C001  F026         	movff	?___aomod,??_dtoa
  3460   000F5A  C002  F027         	movff	?___aomod+1,??_dtoa+1
  3461   000F5E  C003  F028         	movff	?___aomod+2,??_dtoa+2
  3462   000F62  C004  F029         	movff	?___aomod+3,??_dtoa+3
  3463   000F66  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  3464   000F6A  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  3465   000F6E  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  3466   000F72  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  3467   000F76  C026  F013         	movff	??_dtoa,abs@a
  3468   000F7A  C027  F014         	movff	??_dtoa+1,abs@a+1
  3469   000F7E  EC39  F00F         	call	_abs	;wreg free
  3470   000F82  5013               	movf	?_abs^0,w,c
  3471   000F84  0F30               	addlw	48
  3472   000F86  6EDF               	movwf	indf2,c
  3473   000F88                     
  3474                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  3475   000F88  0630               	decf	dtoa@p^0,f,c
  3476   000F8A  A0D8               	btfss	status,0,c
  3477   000F8C  0631               	decf	(dtoa@p+1)^0,f,c
  3478   000F8E                     
  3479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  3480   000F8E  0632               	decf	dtoa@w^0,f,c
  3481   000F90  A0D8               	btfss	status,0,c
  3482   000F92  0633               	decf	(dtoa@w+1)^0,f,c
  3483   000F94                     
  3484                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  3485   000F94  C034  F001         	movff	dtoa@n,___aodiv@dividend
  3486   000F98  C035  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  3487   000F9C  C036  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  3488   000FA0  C037  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  3489   000FA4  C038  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  3490   000FA8  C039  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  3491   000FAC  C03A  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  3492   000FB0  C03B  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  3493   000FB4  0E0A               	movlw	10
  3494   000FB6  6E09               	movwf	___aodiv@divisor^0,c
  3495   000FB8  0E00               	movlw	0
  3496   000FBA  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  3497   000FBC  0E00               	movlw	0
  3498   000FBE  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  3499   000FC0  0E00               	movlw	0
  3500   000FC2  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  3501   000FC4  0E00               	movlw	0
  3502   000FC6  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  3503   000FC8  0E00               	movlw	0
  3504   000FCA  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  3505   000FCC  0E00               	movlw	0
  3506   000FCE  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  3507   000FD0  0E00               	movlw	0
  3508   000FD2  6E10               	movwf	(___aodiv@divisor+7)^0,c
  3509   000FD4  EC49  F008         	call	___aodiv	;wreg free
  3510   000FD8  C001  F034         	movff	?___aodiv,dtoa@n
  3511   000FDC  C002  F035         	movff	?___aodiv+1,dtoa@n+1
  3512   000FE0  C003  F036         	movff	?___aodiv+2,dtoa@n+2
  3513   000FE4  C004  F037         	movff	?___aodiv+3,dtoa@n+3
  3514   000FE8  C005  F038         	movff	?___aodiv+4,dtoa@n+4
  3515   000FEC  C006  F039         	movff	?___aodiv+5,dtoa@n+5
  3516   000FF0  C007  F03A         	movff	?___aodiv+6,dtoa@n+6
  3517   000FF4  C008  F03B         	movff	?___aodiv+7,dtoa@n+7
  3518   000FF8                     l2006:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  3521   000FF8  BE3D               	btfsc	(dtoa@i+1)^0,7,c
  3522   000FFA  EF07  F008         	goto	u931
  3523   000FFE  503D               	movf	(dtoa@i+1)^0,w,c
  3524   001000  E108               	bnz	u930
  3525   001002  043C               	decf	dtoa@i^0,w,c
  3526   001004  A0D8               	btfss	status,0,c
  3527   001006  EF07  F008         	goto	u931
  3528   00100A  EF09  F008         	goto	u930
  3529   00100E                     u931:
  3530   00100E  EF25  F008         	goto	l2012
  3531   001012                     u930:
  3532   001012  5034               	movf	dtoa@n^0,w,c
  3533   001014  1035               	iorwf	(dtoa@n+1)^0,w,c
  3534   001016  1036               	iorwf	(dtoa@n+2)^0,w,c
  3535   001018  1037               	iorwf	(dtoa@n+3)^0,w,c
  3536   00101A  1038               	iorwf	(dtoa@n+4)^0,w,c
  3537   00101C  1039               	iorwf	(dtoa@n+5)^0,w,c
  3538   00101E  103A               	iorwf	(dtoa@n+6)^0,w,c
  3539   001020  103B               	iorwf	(dtoa@n+7)^0,w,c
  3540   001022  A4D8               	btfss	status,2,c
  3541   001024  EF16  F008         	goto	u941
  3542   001028  EF18  F008         	goto	u940
  3543   00102C                     u941:
  3544   00102C  EF80  F007         	goto	l1996
  3545   001030                     u940:
  3546   001030  BE31               	btfsc	(dtoa@p+1)^0,7,c
  3547   001032  EF25  F008         	goto	u950
  3548   001036  5031               	movf	(dtoa@p+1)^0,w,c
  3549   001038  E106               	bnz	u951
  3550   00103A  0430               	decf	dtoa@p^0,w,c
  3551   00103C  B0D8               	btfsc	status,0,c
  3552   00103E  EF23  F008         	goto	u951
  3553   001042  EF25  F008         	goto	u950
  3554   001046                     u951:
  3555   001046  EF80  F007         	goto	l1996
  3556   00104A                     u950:
  3557   00104A                     l2012:
  3558                           
  3559                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  3560   00104A  503E               	movf	dtoa@s^0,w,c
  3561   00104C  B4D8               	btfsc	status,2,c
  3562   00104E  EF2B  F008         	goto	u961
  3563   001052  EF2D  F008         	goto	u960
  3564   001056                     u961:
  3565   001056  EF38  F008         	goto	l2018
  3566   00105A                     u960:
  3567   00105A                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  3569   00105A  063C               	decf	dtoa@i^0,f,c
  3570   00105C  A0D8               	btfss	status,0,c
  3571   00105E  063D               	decf	(dtoa@i+1)^0,f,c
  3572   001060                     
  3573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  3574   001060  0E52               	movlw	low _dbuf
  3575   001062  243C               	addwf	dtoa@i^0,w,c
  3576   001064  6ED9               	movwf	fsr2l,c
  3577   001066  0E01               	movlw	high _dbuf
  3578   001068  203D               	addwfc	(dtoa@i+1)^0,w,c
  3579   00106A  6EDA               	movwf	fsr2h,c
  3580   00106C  C03E  FFDF         	movff	dtoa@s,indf2
  3581   001070                     l2018:
  3582                           
  3583                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  3584   001070  C01C  F011         	movff	dtoa@fp,pad@fp
  3585   001074  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  3586   001078  0E52               	movlw	low _dbuf
  3587   00107A  243C               	addwf	dtoa@i^0,w,c
  3588   00107C  6E13               	movwf	pad@buf^0,c
  3589   00107E  0E01               	movlw	high _dbuf
  3590   001080  203D               	addwfc	(dtoa@i+1)^0,w,c
  3591   001082  6E14               	movwf	(pad@buf+1)^0,c
  3592   001084  C032  F015         	movff	dtoa@w,pad@p
  3593   001088  C033  F016         	movff	dtoa@w+1,pad@p+1
  3594   00108C  EC64  F00C         	call	_pad	;wreg free
  3595   001090  0012               	return		;funcret
  3596   001092                     __end_of_dtoa:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _pad *****************
  3600 ;; Defined at:
  3601 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  3604 ;;		 -> sprintf@f(11), 
  3605 ;;  buf             2   18[COMRAM] PTR unsigned char 
  3606 ;;		 -> dbuf(32), 
  3607 ;;  p               2   20[COMRAM] int 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  w               2   25[COMRAM] int 
  3610 ;;  i               2   23[COMRAM] int 
  3611 ;; Return value:  Size  Location     Type
  3612 ;;                  1    wreg      void 
  3613 ;; Registers used:
  3614 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3620 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;Total ram usage:       11 bytes
  3625 ;; Hardware stack levels used: 1
  3626 ;; Hardware stack levels required when called: 4
  3627 ;; This function calls:
  3628 ;;		_fputc
  3629 ;;		_fputs
  3630 ;; This function is called by:
  3631 ;;		_dtoa
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text26
  3636   0018C8                     __ptext26:
  3637                           	callstack 0
  3638   0018C8                     _pad:
  3639                           	callstack 21
  3640   0018C8                     
  3641                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  3642   0018C8  BE16               	btfsc	(pad@p+1)^0,7,c
  3643   0018CA  EF69  F00C         	goto	u821
  3644   0018CE  EF6B  F00C         	goto	u820
  3645   0018D2                     u821:
  3646   0018D2  EF71  F00C         	goto	l1952
  3647   0018D6                     u820:
  3648   0018D6  C015  F01A         	movff	pad@p,pad@w
  3649   0018DA  C016  F01B         	movff	pad@p+1,pad@w+1
  3650   0018DE  EF75  F00C         	goto	l1136
  3651   0018E2                     l1952:
  3652   0018E2  0E00               	movlw	0
  3653   0018E4  6E1B               	movwf	(pad@w+1)^0,c
  3654   0018E6  0E00               	movlw	0
  3655   0018E8  6E1A               	movwf	pad@w^0,c
  3656   0018EA                     l1136:
  3657                           
  3658                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  3659   0018EA  0E00               	movlw	0
  3660   0018EC  6E19               	movwf	(pad@i+1)^0,c
  3661   0018EE  0E00               	movlw	0
  3662   0018F0  6E18               	movwf	pad@i^0,c
  3663                           
  3664                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3665   0018F2  EF87  F00C         	goto	l1958
  3666   0018F6                     l1954:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  3669   0018F6  0E00               	movlw	0
  3670   0018F8  6E02               	movwf	(fputc@c+1)^0,c
  3671   0018FA  0E20               	movlw	32
  3672   0018FC  6E01               	movwf	fputc@c^0,c
  3673   0018FE  C011  F003         	movff	pad@fp,fputc@fp
  3674   001902  C012  F004         	movff	pad@fp+1,fputc@fp+1
  3675   001906  ECBF  F00B         	call	_fputc	;wreg free
  3676   00190A                     
  3677                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  3678   00190A  4A18               	infsnz	pad@i^0,f,c
  3679   00190C  2A19               	incf	(pad@i+1)^0,f,c
  3680   00190E                     l1958:
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  3683   00190E  501A               	movf	pad@w^0,w,c
  3684   001910  5C18               	subwf	pad@i^0,w,c
  3685   001912  5019               	movf	(pad@i+1)^0,w,c
  3686   001914  0A80               	xorlw	128
  3687   001916  6E17               	movwf	??_pad^0,c
  3688   001918  501B               	movf	(pad@w+1)^0,w,c
  3689   00191A  0A80               	xorlw	128
  3690   00191C  5817               	subwfb	??_pad^0,w,c
  3691   00191E  A0D8               	btfss	status,0,c
  3692   001920  EF94  F00C         	goto	u831
  3693   001924  EF96  F00C         	goto	u830
  3694   001928                     u831:
  3695   001928  EF7B  F00C         	goto	l1954
  3696   00192C                     u830:
  3697   00192C                     
  3698                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  3699   00192C  C013  F00A         	movff	pad@buf,fputs@s
  3700   001930  C014  F00B         	movff	pad@buf+1,fputs@s+1
  3701   001934  C011  F00C         	movff	pad@fp,fputs@fp
  3702   001938  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  3703   00193C  ECD5  F00E         	call	_fputs	;wreg free
  3704   001940  0012               	return		;funcret
  3705   001942                     __end_of_pad:
  3706                           	callstack 0
  3707                           
  3708 ;; *************** function _fputs *****************
  3709 ;; Defined at:
  3710 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  3711 ;; Parameters:    Size  Location     Type
  3712 ;;  s               2    9[COMRAM] PTR const unsigned char 
  3713 ;;		 -> dbuf(32), 
  3714 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3715 ;;		 -> sprintf@f(11), 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  i               2   14[COMRAM] int 
  3718 ;;  c               1   13[COMRAM] unsigned char 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  2    9[COMRAM] int 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3729 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3731 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3732 ;;Total ram usage:        7 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 3
  3735 ;; This function calls:
  3736 ;;		_fputc
  3737 ;; This function is called by:
  3738 ;;		_pad
  3739 ;; This function uses a non-reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text27
  3743   001DAA                     __ptext27:
  3744                           	callstack 0
  3745   001DAA                     _fputs:
  3746                           	callstack 21
  3747   001DAA  0E00               	movlw	0
  3748   001DAC  6E10               	movwf	(fputs@i+1)^0,c
  3749   001DAE  0E00               	movlw	0
  3750   001DB0  6E0F               	movwf	fputs@i^0,c
  3751   001DB2  EFE6  F00E         	goto	l1866
  3752   001DB6                     l1862:
  3753   001DB6  C00E  F001         	movff	fputs@c,fputc@c
  3754   001DBA  6A02               	clrf	(fputc@c+1)^0,c
  3755   001DBC  C00C  F003         	movff	fputs@fp,fputc@fp
  3756   001DC0  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  3757   001DC4  ECBF  F00B         	call	_fputc	;wreg free
  3758   001DC8  4A0F               	infsnz	fputs@i^0,f,c
  3759   001DCA  2A10               	incf	(fputs@i+1)^0,f,c
  3760   001DCC                     l1866:
  3761   001DCC  500F               	movf	fputs@i^0,w,c
  3762   001DCE  240A               	addwf	fputs@s^0,w,c
  3763   001DD0  6ED9               	movwf	fsr2l,c
  3764   001DD2  5010               	movf	(fputs@i+1)^0,w,c
  3765   001DD4  200B               	addwfc	(fputs@s+1)^0,w,c
  3766   001DD6  6EDA               	movwf	fsr2h,c
  3767   001DD8  50DF               	movf	indf2,w,c
  3768   001DDA  6E0E               	movwf	fputs@c^0,c
  3769   001DDC  500E               	movf	fputs@c^0,w,c
  3770   001DDE  A4D8               	btfss	status,2,c
  3771   001DE0  EFF4  F00E         	goto	u681
  3772   001DE4  EFF6  F00E         	goto	u680
  3773   001DE8                     u681:
  3774   001DE8  EFDB  F00E         	goto	l1862
  3775   001DEC                     u680:
  3776   001DEC  0012               	return		;funcret
  3777   001DEE                     __end_of_fputs:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _fputc *****************
  3781 ;; Defined at:
  3782 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  c               2    0[COMRAM] int 
  3785 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  3786 ;;		 -> sprintf@f(11), 
  3787 ;; Auto vars:     Size  Location     Type
  3788 ;;		None
  3789 ;; Return value:  Size  Location     Type
  3790 ;;                  2    0[COMRAM] int 
  3791 ;; Registers used:
  3792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3793 ;; Tracked objects:
  3794 ;;		On entry : 0/0
  3795 ;;		On exit  : 0/0
  3796 ;;		Unchanged: 0/0
  3797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3800 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3801 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3802 ;;Total ram usage:        9 bytes
  3803 ;; Hardware stack levels used: 1
  3804 ;; Hardware stack levels required when called: 2
  3805 ;; This function calls:
  3806 ;;		_putch
  3807 ;; This function is called by:
  3808 ;;		_pad
  3809 ;;		_vfpfcnvrt
  3810 ;;		_fputs
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text28
  3815   00177E                     __ptext28:
  3816                           	callstack 0
  3817   00177E                     _fputc:
  3818                           	callstack 24
  3819   00177E  5003               	movf	fputc@fp^0,w,c
  3820   001780  1004               	iorwf	(fputc@fp+1)^0,w,c
  3821   001782  B4D8               	btfsc	status,2,c
  3822   001784  EFC6  F00B         	goto	u641
  3823   001788  EFC8  F00B         	goto	u640
  3824   00178C                     u641:
  3825   00178C  EFD1  F00B         	goto	l1850
  3826   001790                     u640:
  3827   001790  5003               	movf	fputc@fp^0,w,c
  3828   001792  1004               	iorwf	(fputc@fp+1)^0,w,c
  3829   001794  A4D8               	btfss	status,2,c
  3830   001796  EFCF  F00B         	goto	u651
  3831   00179A  EFD1  F00B         	goto	u650
  3832   00179E                     u651:
  3833   00179E  EFD6  F00B         	goto	l1852
  3834   0017A2                     u650:
  3835   0017A2                     l1850:
  3836   0017A2  5001               	movf	fputc@c^0,w,c
  3837   0017A4  EC79  F010         	call	_putch
  3838   0017A8  EF23  F00C         	goto	l1191
  3839   0017AC                     l1852:
  3840   0017AC  EE20 F009          	lfsr	2,9
  3841   0017B0  5003               	movf	fputc@fp^0,w,c
  3842   0017B2  26D9               	addwf	fsr2l,f,c
  3843   0017B4  5004               	movf	(fputc@fp+1)^0,w,c
  3844   0017B6  22DA               	addwfc	fsr2h,f,c
  3845   0017B8  50DE               	movf	postinc2,w,c
  3846   0017BA  10DE               	iorwf	postinc2,w,c
  3847   0017BC  B4D8               	btfsc	status,2,c
  3848   0017BE  EFE3  F00B         	goto	u661
  3849   0017C2  EFE5  F00B         	goto	u660
  3850   0017C6                     u661:
  3851   0017C6  EF00  F00C         	goto	l1856
  3852   0017CA                     u660:
  3853   0017CA  EE20 F009          	lfsr	2,9
  3854   0017CE  5003               	movf	fputc@fp^0,w,c
  3855   0017D0  26D9               	addwf	fsr2l,f,c
  3856   0017D2  5004               	movf	(fputc@fp+1)^0,w,c
  3857   0017D4  22DA               	addwfc	fsr2h,f,c
  3858   0017D6  EE10 F003          	lfsr	1,3
  3859   0017DA  5003               	movf	fputc@fp^0,w,c
  3860   0017DC  26E1               	addwf	fsr1l,f,c
  3861   0017DE  5004               	movf	(fputc@fp+1)^0,w,c
  3862   0017E0  22E2               	addwfc	fsr1h,f,c
  3863   0017E2  50DE               	movf	postinc2,w,c
  3864   0017E4  5CE6               	subwf	postinc1,w,c
  3865   0017E6  50E6               	movf	postinc1,w,c
  3866   0017E8  0A80               	xorlw	128
  3867   0017EA  6E09               	movwf	(??_fputc+4)^0,c
  3868   0017EC  50DE               	movf	postinc2,w,c
  3869   0017EE  0A80               	xorlw	128
  3870   0017F0  5809               	subwfb	(??_fputc+4)^0,w,c
  3871   0017F2  B0D8               	btfsc	status,0,c
  3872   0017F4  EFFE  F00B         	goto	u671
  3873   0017F8  EF00  F00C         	goto	u670
  3874   0017FC                     u671:
  3875   0017FC  EF23  F00C         	goto	l1191
  3876   001800                     u670:
  3877   001800                     l1856:
  3878   001800  EE20 F003          	lfsr	2,3
  3879   001804  5003               	movf	fputc@fp^0,w,c
  3880   001806  26D9               	addwf	fsr2l,f,c
  3881   001808  5004               	movf	(fputc@fp+1)^0,w,c
  3882   00180A  22DA               	addwfc	fsr2h,f,c
  3883   00180C  CFDE F005          	movff	postinc2,??_fputc
  3884   001810  CFDD F006          	movff	postdec2,??_fputc+1
  3885   001814  C003  FFD9         	movff	fputc@fp,fsr2l
  3886   001818  C004  FFDA         	movff	fputc@fp+1,fsr2h
  3887   00181C  CFDE F007          	movff	postinc2,??_fputc+2
  3888   001820  CFDD F008          	movff	postdec2,??_fputc+3
  3889   001824  5005               	movf	??_fputc^0,w,c
  3890   001826  2407               	addwf	(??_fputc+2)^0,w,c
  3891   001828  6ED9               	movwf	fsr2l,c
  3892   00182A  5006               	movf	(??_fputc+1)^0,w,c
  3893   00182C  2008               	addwfc	(??_fputc+3)^0,w,c
  3894   00182E  6EDA               	movwf	fsr2h,c
  3895   001830  C001  FFDF         	movff	fputc@c,indf2
  3896   001834  EE20 F003          	lfsr	2,3
  3897   001838  5003               	movf	fputc@fp^0,w,c
  3898   00183A  26D9               	addwf	fsr2l,f,c
  3899   00183C  5004               	movf	(fputc@fp+1)^0,w,c
  3900   00183E  22DA               	addwfc	fsr2h,f,c
  3901   001840  2ADE               	incf	postinc2,f,c
  3902   001842  0E00               	movlw	0
  3903   001844  22DD               	addwfc	postdec2,f,c
  3904   001846                     l1191:
  3905   001846  0012               	return		;funcret
  3906   001848                     __end_of_fputc:
  3907                           	callstack 0
  3908                           
  3909 ;; *************** function _putch *****************
  3910 ;; Defined at:
  3911 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;  c               1    wreg     unsigned char 
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;  c               1    0[COMRAM] unsigned char 
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used: 1
  3931 ;; Hardware stack levels required when called: 1
  3932 ;; This function calls:
  3933 ;;		Nothing
  3934 ;; This function is called by:
  3935 ;;		_fputc
  3936 ;; This function uses a non-reentrant model
  3937 ;;
  3938                           
  3939                           	psect	text29
  3940   0020F2                     __ptext29:
  3941                           	callstack 0
  3942   0020F2                     _putch:
  3943                           	callstack 24
  3944   0020F2  0012               	return		;funcret
  3945   0020F4                     __end_of_putch:
  3946                           	callstack 0
  3947                           
  3948 ;; *************** function _abs *****************
  3949 ;; Defined at:
  3950 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  a               2   18[COMRAM] int 
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  2   18[COMRAM] int 
  3957 ;; Registers used:
  3958 ;;		wreg, status,2, status,0
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;Total ram usage:        4 bytes
  3969 ;; Hardware stack levels used: 1
  3970 ;; Hardware stack levels required when called: 1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_dtoa
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text30
  3979   001E72                     __ptext30:
  3980                           	callstack 0
  3981   001E72                     _abs:
  3982                           	callstack 24
  3983   001E72  BE14               	btfsc	(abs@a+1)^0,7,c
  3984   001E74  EF46  F00F         	goto	u840
  3985   001E78  5014               	movf	(abs@a+1)^0,w,c
  3986   001E7A  E106               	bnz	u841
  3987   001E7C  0413               	decf	abs@a^0,w,c
  3988   001E7E  B0D8               	btfsc	status,0,c
  3989   001E80  EF44  F00F         	goto	u841
  3990   001E84  EF46  F00F         	goto	u840
  3991   001E88                     u841:
  3992   001E88  EF54  F00F         	goto	l1176
  3993   001E8C                     u840:
  3994   001E8C  C013  F015         	movff	abs@a,??_abs
  3995   001E90  C014  F016         	movff	abs@a+1,??_abs+1
  3996   001E94  1E15               	comf	??_abs^0,f,c
  3997   001E96  1E16               	comf	(??_abs+1)^0,f,c
  3998   001E98  4A15               	infsnz	??_abs^0,f,c
  3999   001E9A  2A16               	incf	(??_abs+1)^0,f,c
  4000   001E9C  C015  F013         	movff	??_abs,?_abs
  4001   001EA0  C016  F014         	movff	??_abs+1,?_abs+1
  4002   001EA4  EF58  F00F         	goto	l1179
  4003   001EA8                     l1176:
  4004   001EA8  C013  F013         	movff	abs@a,?_abs
  4005   001EAC  C014  F014         	movff	abs@a+1,?_abs+1
  4006   001EB0                     l1179:
  4007   001EB0  0012               	return		;funcret
  4008   001EB2                     __end_of_abs:
  4009                           	callstack 0
  4010                           
  4011 ;; *************** function ___aomod *****************
  4012 ;; Defined at:
  4013 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;  dividend        8    0[COMRAM] long long 
  4016 ;;  divisor         8    8[COMRAM] long long 
  4017 ;; Auto vars:     Size  Location     Type
  4018 ;;  sign            1   17[COMRAM] unsigned char 
  4019 ;;  counter         1   16[COMRAM] unsigned char 
  4020 ;; Return value:  Size  Location     Type
  4021 ;;                  8    0[COMRAM] long long 
  4022 ;; Registers used:
  4023 ;;		wreg, status,2, status,0
  4024 ;; Tracked objects:
  4025 ;;		On entry : 0/0
  4026 ;;		On exit  : 0/0
  4027 ;;		Unchanged: 0/0
  4028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4029 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4032 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4033 ;;Total ram usage:       18 bytes
  4034 ;; Hardware stack levels used: 1
  4035 ;; Hardware stack levels required when called: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		_dtoa
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text31
  4044   001386                     __ptext31:
  4045                           	callstack 0
  4046   001386                     ___aomod:
  4047                           	callstack 24
  4048   001386  0E00               	movlw	0
  4049   001388  6E12               	movwf	___aomod@sign^0,c
  4050   00138A  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4051   00138C  EFCC  F009         	goto	u760
  4052   001390  EFCA  F009         	goto	u761
  4053   001394                     u761:
  4054   001394  EFDE  F009         	goto	l1920
  4055   001398                     u760:
  4056   001398  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4057   00139A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4058   00139C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4059   00139E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4060   0013A0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4061   0013A2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4062   0013A4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4063   0013A6  6C01               	negf	___aomod@dividend^0,c
  4064   0013A8  0E00               	movlw	0
  4065   0013AA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4066   0013AC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4067   0013AE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4068   0013B0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4069   0013B2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4070   0013B4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4071   0013B6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4072   0013B8  0E01               	movlw	1
  4073   0013BA  6E12               	movwf	___aomod@sign^0,c
  4074   0013BC                     l1920:
  4075   0013BC  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4076   0013BE  EFE5  F009         	goto	u770
  4077   0013C2  EFE3  F009         	goto	u771
  4078   0013C6                     u771:
  4079   0013C6  EFF5  F009         	goto	l1924
  4080   0013CA                     u770:
  4081   0013CA  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4082   0013CC  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4083   0013CE  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4084   0013D0  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4085   0013D2  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4086   0013D4  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4087   0013D6  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4088   0013D8  6C09               	negf	___aomod@divisor^0,c
  4089   0013DA  0E00               	movlw	0
  4090   0013DC  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4091   0013DE  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4092   0013E0  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4093   0013E2  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4094   0013E4  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4095   0013E6  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4096   0013E8  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4097   0013EA                     l1924:
  4098   0013EA  5009               	movf	___aomod@divisor^0,w,c
  4099   0013EC  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4100   0013EE  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4101   0013F0  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4102   0013F2  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4103   0013F4  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4104   0013F6  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4105   0013F8  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4106   0013FA  B4D8               	btfsc	status,2,c
  4107   0013FC  EF02  F00A         	goto	u781
  4108   001400  EF04  F00A         	goto	u780
  4109   001404                     u781:
  4110   001404  EF4C  F00A         	goto	l1940
  4111   001408                     u780:
  4112   001408  0E01               	movlw	1
  4113   00140A  6E11               	movwf	___aomod@counter^0,c
  4114   00140C  EF12  F00A         	goto	l1930
  4115   001410                     l1928:
  4116   001410  90D8               	bcf	status,0,c
  4117   001412  3609               	rlcf	___aomod@divisor^0,f,c
  4118   001414  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4119   001416  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4120   001418  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4121   00141A  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4122   00141C  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4123   00141E  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4124   001420  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4125   001422  2A11               	incf	___aomod@counter^0,f,c
  4126   001424                     l1930:
  4127   001424  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4128   001426  EF17  F00A         	goto	u791
  4129   00142A  EF19  F00A         	goto	u790
  4130   00142E                     u791:
  4131   00142E  EF08  F00A         	goto	l1928
  4132   001432                     u790:
  4133   001432                     l1932:
  4134   001432  5009               	movf	___aomod@divisor^0,w,c
  4135   001434  5C01               	subwf	___aomod@dividend^0,w,c
  4136   001436  500A               	movf	(___aomod@divisor+1)^0,w,c
  4137   001438  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4138   00143A  500B               	movf	(___aomod@divisor+2)^0,w,c
  4139   00143C  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4140   00143E  500C               	movf	(___aomod@divisor+3)^0,w,c
  4141   001440  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4142   001442  500D               	movf	(___aomod@divisor+4)^0,w,c
  4143   001444  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4144   001446  500E               	movf	(___aomod@divisor+5)^0,w,c
  4145   001448  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4146   00144A  500F               	movf	(___aomod@divisor+6)^0,w,c
  4147   00144C  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4148   00144E  5010               	movf	(___aomod@divisor+7)^0,w,c
  4149   001450  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4150   001452  A0D8               	btfss	status,0,c
  4151   001454  EF2E  F00A         	goto	u801
  4152   001458  EF30  F00A         	goto	u800
  4153   00145C                     u801:
  4154   00145C  EF40  F00A         	goto	l1936
  4155   001460                     u800:
  4156   001460  5009               	movf	___aomod@divisor^0,w,c
  4157   001462  5E01               	subwf	___aomod@dividend^0,f,c
  4158   001464  500A               	movf	(___aomod@divisor+1)^0,w,c
  4159   001466  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4160   001468  500B               	movf	(___aomod@divisor+2)^0,w,c
  4161   00146A  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4162   00146C  500C               	movf	(___aomod@divisor+3)^0,w,c
  4163   00146E  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4164   001470  500D               	movf	(___aomod@divisor+4)^0,w,c
  4165   001472  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4166   001474  500E               	movf	(___aomod@divisor+5)^0,w,c
  4167   001476  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4168   001478  500F               	movf	(___aomod@divisor+6)^0,w,c
  4169   00147A  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4170   00147C  5010               	movf	(___aomod@divisor+7)^0,w,c
  4171   00147E  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4172   001480                     l1936:
  4173   001480  90D8               	bcf	status,0,c
  4174   001482  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4175   001484  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4176   001486  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4177   001488  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4178   00148A  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4179   00148C  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4180   00148E  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4181   001490  3209               	rrcf	___aomod@divisor^0,f,c
  4182   001492  2E11               	decfsz	___aomod@counter^0,f,c
  4183   001494  EF19  F00A         	goto	l1932
  4184   001498                     l1940:
  4185   001498  5012               	movf	___aomod@sign^0,w,c
  4186   00149A  B4D8               	btfsc	status,2,c
  4187   00149C  EF52  F00A         	goto	u811
  4188   0014A0  EF54  F00A         	goto	u810
  4189   0014A4                     u811:
  4190   0014A4  EF64  F00A         	goto	l1944
  4191   0014A8                     u810:
  4192   0014A8  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4193   0014AA  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4194   0014AC  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4195   0014AE  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4196   0014B0  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4197   0014B2  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4198   0014B4  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4199   0014B6  6C01               	negf	___aomod@dividend^0,c
  4200   0014B8  0E00               	movlw	0
  4201   0014BA  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4202   0014BC  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4203   0014BE  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4204   0014C0  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4205   0014C2  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4206   0014C4  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4207   0014C6  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4208   0014C8                     l1944:
  4209   0014C8  C001  F001         	movff	___aomod@dividend,?___aomod
  4210   0014CC  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4211   0014D0  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4212   0014D4  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4213   0014D8  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4214   0014DC  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4215   0014E0  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4216   0014E4  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  4217   0014E8  0012               	return		;funcret
  4218   0014EA                     __end_of___aomod:
  4219                           	callstack 0
  4220                           
  4221 ;; *************** function ___aodiv *****************
  4222 ;; Defined at:
  4223 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  dividend        8    0[COMRAM] long long 
  4226 ;;  divisor         8    8[COMRAM] long long 
  4227 ;; Auto vars:     Size  Location     Type
  4228 ;;  quotient        8   18[COMRAM] long long 
  4229 ;;  sign            1   17[COMRAM] unsigned char 
  4230 ;;  counter         1   16[COMRAM] unsigned char 
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  8    0[COMRAM] long long 
  4233 ;; Registers used:
  4234 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 0/0
  4237 ;;		On exit  : 0/0
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4240 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4241 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4243 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4244 ;;Total ram usage:       26 bytes
  4245 ;; Hardware stack levels used: 1
  4246 ;; Hardware stack levels required when called: 1
  4247 ;; This function calls:
  4248 ;;		Nothing
  4249 ;; This function is called by:
  4250 ;;		_dtoa
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text32
  4255   001092                     __ptext32:
  4256                           	callstack 0
  4257   001092                     ___aodiv:
  4258                           	callstack 24
  4259   001092  0E00               	movlw	0
  4260   001094  6E12               	movwf	___aodiv@sign^0,c
  4261   001096  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  4262   001098  EF52  F008         	goto	u690
  4263   00109C  EF50  F008         	goto	u691
  4264   0010A0                     u691:
  4265   0010A0  EF64  F008         	goto	l1876
  4266   0010A4                     u690:
  4267   0010A4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  4268   0010A6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  4269   0010A8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  4270   0010AA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  4271   0010AC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  4272   0010AE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  4273   0010B0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  4274   0010B2  6C09               	negf	___aodiv@divisor^0,c
  4275   0010B4  0E00               	movlw	0
  4276   0010B6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  4277   0010B8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  4278   0010BA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  4279   0010BC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  4280   0010BE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  4281   0010C0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  4282   0010C2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  4283   0010C4  0E01               	movlw	1
  4284   0010C6  6E12               	movwf	___aodiv@sign^0,c
  4285   0010C8                     l1876:
  4286   0010C8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  4287   0010CA  EF6B  F008         	goto	u700
  4288   0010CE  EF69  F008         	goto	u701
  4289   0010D2                     u701:
  4290   0010D2  EF7D  F008         	goto	l1882
  4291   0010D6                     u700:
  4292   0010D6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  4293   0010D8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  4294   0010DA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  4295   0010DC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  4296   0010DE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  4297   0010E0  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  4298   0010E2  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  4299   0010E4  6C01               	negf	___aodiv@dividend^0,c
  4300   0010E6  0E00               	movlw	0
  4301   0010E8  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  4302   0010EA  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  4303   0010EC  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  4304   0010EE  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  4305   0010F0  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  4306   0010F2  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  4307   0010F4  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  4308   0010F6  0E01               	movlw	1
  4309   0010F8  1A12               	xorwf	___aodiv@sign^0,f,c
  4310   0010FA                     l1882:
  4311   0010FA  EE20  F013         	lfsr	2,___aodiv@quotient
  4312   0010FE  0E07               	movlw	7
  4313   001100                     u711:
  4314   001100  6ADE               	clrf	postinc2,c
  4315   001102  06E8               	decf	wreg,f,c
  4316   001104  E2FD               	bc	u711
  4317   001106  5009               	movf	___aodiv@divisor^0,w,c
  4318   001108  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  4319   00110A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  4320   00110C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  4321   00110E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  4322   001110  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  4323   001112  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  4324   001114  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  4325   001116  B4D8               	btfsc	status,2,c
  4326   001118  EF90  F008         	goto	u721
  4327   00111C  EF92  F008         	goto	u720
  4328   001120                     u721:
  4329   001120  EFE4  F008         	goto	l1904
  4330   001124                     u720:
  4331   001124  0E01               	movlw	1
  4332   001126  6E11               	movwf	___aodiv@counter^0,c
  4333   001128  EFA0  F008         	goto	l1890
  4334   00112C                     l1888:
  4335   00112C  90D8               	bcf	status,0,c
  4336   00112E  3609               	rlcf	___aodiv@divisor^0,f,c
  4337   001130  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  4338   001132  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  4339   001134  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  4340   001136  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  4341   001138  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  4342   00113A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  4343   00113C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  4344   00113E  2A11               	incf	___aodiv@counter^0,f,c
  4345   001140                     l1890:
  4346   001140  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  4347   001142  EFA5  F008         	goto	u731
  4348   001146  EFA7  F008         	goto	u730
  4349   00114A                     u731:
  4350   00114A  EF96  F008         	goto	l1888
  4351   00114E                     u730:
  4352   00114E                     l1892:
  4353   00114E  90D8               	bcf	status,0,c
  4354   001150  3613               	rlcf	___aodiv@quotient^0,f,c
  4355   001152  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  4356   001154  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  4357   001156  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  4358   001158  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  4359   00115A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  4360   00115C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  4361   00115E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  4362   001160  5009               	movf	___aodiv@divisor^0,w,c
  4363   001162  5C01               	subwf	___aodiv@dividend^0,w,c
  4364   001164  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4365   001166  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  4366   001168  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4367   00116A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  4368   00116C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4369   00116E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  4370   001170  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4371   001172  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  4372   001174  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4373   001176  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  4374   001178  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4375   00117A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  4376   00117C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4377   00117E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  4378   001180  A0D8               	btfss	status,0,c
  4379   001182  EFC5  F008         	goto	u741
  4380   001186  EFC7  F008         	goto	u740
  4381   00118A                     u741:
  4382   00118A  EFD8  F008         	goto	l1900
  4383   00118E                     u740:
  4384   00118E  5009               	movf	___aodiv@divisor^0,w,c
  4385   001190  5E01               	subwf	___aodiv@dividend^0,f,c
  4386   001192  500A               	movf	(___aodiv@divisor+1)^0,w,c
  4387   001194  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  4388   001196  500B               	movf	(___aodiv@divisor+2)^0,w,c
  4389   001198  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  4390   00119A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  4391   00119C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  4392   00119E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  4393   0011A0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  4394   0011A2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  4395   0011A4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  4396   0011A6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  4397   0011A8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  4398   0011AA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  4399   0011AC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  4400   0011AE  8013               	bsf	___aodiv@quotient^0,0,c
  4401   0011B0                     l1900:
  4402   0011B0  90D8               	bcf	status,0,c
  4403   0011B2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  4404   0011B4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  4405   0011B6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  4406   0011B8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  4407   0011BA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  4408   0011BC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  4409   0011BE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  4410   0011C0  3209               	rrcf	___aodiv@divisor^0,f,c
  4411   0011C2  2E11               	decfsz	___aodiv@counter^0,f,c
  4412   0011C4  EFA7  F008         	goto	l1892
  4413   0011C8                     l1904:
  4414   0011C8  5012               	movf	___aodiv@sign^0,w,c
  4415   0011CA  B4D8               	btfsc	status,2,c
  4416   0011CC  EFEA  F008         	goto	u751
  4417   0011D0  EFEC  F008         	goto	u750
  4418   0011D4                     u751:
  4419   0011D4  EFFC  F008         	goto	l1908
  4420   0011D8                     u750:
  4421   0011D8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  4422   0011DA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  4423   0011DC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  4424   0011DE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  4425   0011E0  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  4426   0011E2  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  4427   0011E4  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  4428   0011E6  6C13               	negf	___aodiv@quotient^0,c
  4429   0011E8  0E00               	movlw	0
  4430   0011EA  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  4431   0011EC  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  4432   0011EE  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  4433   0011F0  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  4434   0011F2  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  4435   0011F4  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  4436   0011F6  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  4437   0011F8                     l1908:
  4438   0011F8  C013  F001         	movff	___aodiv@quotient,?___aodiv
  4439   0011FC  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  4440   001200  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  4441   001204  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  4442   001208  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  4443   00120C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  4444   001210  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  4445   001214  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  4446   001218  0012               	return		;funcret
  4447   00121A                     __end_of___aodiv:
  4448                           	callstack 0
  4449                           
  4450 ;; *************** function _RGBC2Serial *****************
  4451 ;; Defined at:
  4452 ;;		line 88 in file "color.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  str             2    5[COMRAM] PTR unsigned char 
  4455 ;;		 -> main@buf(100), 
  4456 ;; Auto vars:     Size  Location     Type
  4457 ;;		None
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      void 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4467 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4470 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4471 ;;Total ram usage:        3 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 3
  4474 ;; This function calls:
  4475 ;;		_sendStringSerial4
  4476 ;; This function is called by:
  4477 ;;		_colorVal2String
  4478 ;; This function uses a non-reentrant model
  4479 ;;
  4480                           
  4481                           	psect	text33
  4482   00203C                     __ptext33:
  4483                           	callstack 0
  4484   00203C                     _RGBC2Serial:
  4485                           	callstack 26
  4486   00203C                     
  4487                           ;color.c: 89:     _delay((unsigned long)((10)*(64000000/4000.0)));
  4488   00203C  0ED0               	movlw	208
  4489   00203E  6E08               	movwf	??_RGBC2Serial^0,c
  4490   002040  0ECA               	movlw	202
  4491   002042                     u1317:
  4492   002042  2EE8               	decfsz	wreg,f,c
  4493   002044  D7FE               	bra	u1317
  4494   002046  2E08               	decfsz	??_RGBC2Serial^0,f,c
  4495   002048  D7FC               	bra	u1317
  4496   00204A                     
  4497                           ;color.c: 90:     sendStringSerial4(str);
  4498   00204A  C006  F002         	movff	RGBC2Serial@str,sendStringSerial4@string
  4499   00204E  C007  F003         	movff	RGBC2Serial@str+1,sendStringSerial4@string+1
  4500   002052  EC59  F00F         	call	_sendStringSerial4	;wreg free
  4501   002056  0012               	return		;funcret
  4502   002058                     __end_of_RGBC2Serial:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _sendStringSerial4 *****************
  4506 ;; Defined at:
  4507 ;;		line 37 in file "../lab-5-areeb-atulit.X/serial.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  string          2    1[COMRAM] PTR unsigned char 
  4510 ;;		 -> main@buf(100), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  i               2    3[COMRAM] int 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4522 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4523 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4525 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4526 ;;Total ram usage:        4 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; Hardware stack levels required when called: 2
  4529 ;; This function calls:
  4530 ;;		_sendCharSerial4
  4531 ;; This function is called by:
  4532 ;;		_RGBC2Serial
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text34
  4537   001EB2                     __ptext34:
  4538                           	callstack 0
  4539   001EB2                     _sendStringSerial4:
  4540                           	callstack 26
  4541   001EB2                     
  4542                           ;../lab-5-areeb-atulit.X/serial.c: 39:     int i=0;
  4543   001EB2  0E00               	movlw	0
  4544   001EB4  6E05               	movwf	(sendStringSerial4@i+1)^0,c
  4545   001EB6  0E00               	movlw	0
  4546   001EB8  6E04               	movwf	sendStringSerial4@i^0,c
  4547                           
  4548                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  4549   001EBA  EF6A  F00F         	goto	l2094
  4550   001EBE                     l2090:
  4551                           
  4552                           ;../lab-5-areeb-atulit.X/serial.c: 41:         sendCharSerial4(string[i]);
  4553   001EBE  5004               	movf	sendStringSerial4@i^0,w,c
  4554   001EC0  2402               	addwf	sendStringSerial4@string^0,w,c
  4555   001EC2  6ED9               	movwf	fsr2l,c
  4556   001EC4  5005               	movf	(sendStringSerial4@i+1)^0,w,c
  4557   001EC6  2003               	addwfc	(sendStringSerial4@string+1)^0,w,c
  4558   001EC8  6EDA               	movwf	fsr2h,c
  4559   001ECA  50DF               	movf	indf2,w,c
  4560   001ECC  EC46  F010         	call	_sendCharSerial4
  4561   001ED0                     
  4562                           ;../lab-5-areeb-atulit.X/serial.c: 42:         i++;
  4563   001ED0  4A04               	infsnz	sendStringSerial4@i^0,f,c
  4564   001ED2  2A05               	incf	(sendStringSerial4@i+1)^0,f,c
  4565   001ED4                     l2094:
  4566                           
  4567                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  4568   001ED4  5004               	movf	sendStringSerial4@i^0,w,c
  4569   001ED6  2402               	addwf	sendStringSerial4@string^0,w,c
  4570   001ED8  6ED9               	movwf	fsr2l,c
  4571   001EDA  5005               	movf	(sendStringSerial4@i+1)^0,w,c
  4572   001EDC  2003               	addwfc	(sendStringSerial4@string+1)^0,w,c
  4573   001EDE  6EDA               	movwf	fsr2h,c
  4574   001EE0  50DF               	movf	indf2,w,c
  4575   001EE2  A4D8               	btfss	status,2,c
  4576   001EE4  EF76  F00F         	goto	u1031
  4577   001EE8  EF78  F00F         	goto	u1030
  4578   001EEC                     u1031:
  4579   001EEC  EF5F  F00F         	goto	l2090
  4580   001EF0                     u1030:
  4581   001EF0  0012               	return		;funcret
  4582   001EF2                     __end_of_sendStringSerial4:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _sendCharSerial4 *****************
  4586 ;; Defined at:
  4587 ;;		line 30 in file "../lab-5-areeb-atulit.X/serial.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  charToSend      1    wreg     unsigned char 
  4590 ;; Auto vars:     Size  Location     Type
  4591 ;;  charToSend      1    0[COMRAM] unsigned char 
  4592 ;; Return value:  Size  Location     Type
  4593 ;;                  1    wreg      void 
  4594 ;; Registers used:
  4595 ;;		wreg
  4596 ;; Tracked objects:
  4597 ;;		On entry : 0/0
  4598 ;;		On exit  : 0/0
  4599 ;;		Unchanged: 0/0
  4600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4602 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4605 ;;Total ram usage:        1 bytes
  4606 ;; Hardware stack levels used: 1
  4607 ;; Hardware stack levels required when called: 1
  4608 ;; This function calls:
  4609 ;;		Nothing
  4610 ;; This function is called by:
  4611 ;;		_sendStringSerial4
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           	psect	text35
  4616   00208C                     __ptext35:
  4617                           	callstack 0
  4618   00208C                     _sendCharSerial4:
  4619                           	callstack 26
  4620                           
  4621                           ;incstack = 0
  4622                           ;sendCharSerial4@charToSend stored from wreg
  4623   00208C  6E01               	movwf	sendCharSerial4@charToSend^0,c
  4624   00208E                     l233:
  4625   00208E  010E               	movlb	14	; () banked
  4626   002090  A537               	btfss	55,2,b	;volatile
  4627   002092  EF4D  F010         	goto	u971
  4628   002096  EF4F  F010         	goto	u970
  4629   00209A                     u971:
  4630   00209A  EF47  F010         	goto	l233
  4631   00209E                     u970:
  4632   00209E                     
  4633                           ; BSR set to: 14
  4634                           ;../lab-5-areeb-atulit.X/serial.c: 32:     TX4REG = charToSend;
  4635   00209E  C001  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  4636   0020A2                     
  4637                           ; BSR set to: 14
  4638   0020A2  0012               	return		;funcret
  4639   0020A4                     __end_of_sendCharSerial4:
  4640                           	callstack 0
  4641                           
  4642 ;; *************** function _Color_Interrupts_threshold *****************
  4643 ;; Defined at:
  4644 ;;		line 36 in file "interrupts.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  upperThresho    2    4[COMRAM] int 
  4647 ;;  lowerThresho    2    6[COMRAM] int 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4659 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4662 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 4
  4666 ;; This function calls:
  4667 ;;		_color_writetoaddr
  4668 ;; This function is called by:
  4669 ;;		_main
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text36
  4674   001F82                     __ptext36:
  4675                           	callstack 0
  4676   001F82                     _Color_Interrupts_threshold:
  4677                           	callstack 26
  4678   001F82                     
  4679                           ;interrupts.c: 36: void Color_Interrupts_threshold(int upperThreshold, int lowerThreshol
      +                          d);interrupts.c: 37: {;interrupts.c: 38:  color_writetoaddr(0x04, lowerThreshold);
  4680   001F82  C007  F003         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  4681   001F86  0E04               	movlw	4
  4682   001F88  EC0E  F010         	call	_color_writetoaddr
  4683                           
  4684                           ;interrupts.c: 39:     color_writetoaddr(0x05, lowerThreshold>>8);
  4685   001F8C  5008               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  4686   001F8E  6E03               	movwf	color_writetoaddr@value^0,c
  4687   001F90  0E05               	movlw	5
  4688   001F92  EC0E  F010         	call	_color_writetoaddr
  4689                           
  4690                           ;interrupts.c: 40:     color_writetoaddr(0x06, upperThreshold);
  4691   001F96  C005  F003         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  4692   001F9A  0E06               	movlw	6
  4693   001F9C  EC0E  F010         	call	_color_writetoaddr
  4694                           
  4695                           ;interrupts.c: 41:     color_writetoaddr(0x07, upperThreshold>>8);
  4696   001FA0  5006               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  4697   001FA2  6E03               	movwf	color_writetoaddr@value^0,c
  4698   001FA4  0E07               	movlw	7
  4699   001FA6  EC0E  F010         	call	_color_writetoaddr
  4700   001FAA  0012               	return		;funcret
  4701   001FAC                     __end_of_Color_Interrupts_threshold:
  4702                           	callstack 0
  4703                           
  4704 ;; *************** function _Color_Interrupts_clear *****************
  4705 ;; Defined at:
  4706 ;;		line 49 in file "interrupts.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;		None
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      void 
  4713 ;; Registers used:
  4714 ;;		wreg, status,2, status,0, cstack
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4724 ;;Total ram usage:        0 bytes
  4725 ;; Hardware stack levels used: 1
  4726 ;; Hardware stack levels required when called: 5
  4727 ;; This function calls:
  4728 ;;		_Color_Interrupts_init
  4729 ;;		_I2C_2_Master_Start
  4730 ;;		_I2C_2_Master_Stop
  4731 ;;		_I2C_2_Master_Write
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text37
  4738   002058                     __ptext37:
  4739                           	callstack 0
  4740   002058                     _Color_Interrupts_clear:
  4741                           	callstack 25
  4742   002058                     
  4743                           ;interrupts.c: 53:     I2C_2_Master_Start();
  4744   002058  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  4745                           
  4746                           ;interrupts.c: 54:     I2C_2_Master_Write(0x52 | 0x00);
  4747   00205C  0E52               	movlw	82
  4748   00205E  EC63  F010         	call	_I2C_2_Master_Write
  4749                           
  4750                           ;interrupts.c: 55:     I2C_2_Master_Write(0b11100110);
  4751   002062  0EE6               	movlw	230
  4752   002064  EC63  F010         	call	_I2C_2_Master_Write
  4753                           
  4754                           ;interrupts.c: 56:     I2C_2_Master_Stop();
  4755   002068  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  4756                           
  4757                           ;interrupts.c: 58:    Color_Interrupts_init();
  4758   00206C  EC39  F010         	call	_Color_Interrupts_init	;wreg free
  4759   002070  0012               	return		;funcret
  4760   002072                     __end_of_Color_Interrupts_clear:
  4761                           	callstack 0
  4762                           
  4763 ;; *************** function _Color_Interrupts_init *****************
  4764 ;; Defined at:
  4765 ;;		line 28 in file "interrupts.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;		None
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;		None
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4783 ;;Total ram usage:        1 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 4
  4786 ;; This function calls:
  4787 ;;		_color_writetoaddr
  4788 ;; This function is called by:
  4789 ;;		_main
  4790 ;;		_Color_Interrupts_clear
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text38
  4795   002072                     __ptext38:
  4796                           	callstack 0
  4797   002072                     _Color_Interrupts_init:
  4798                           	callstack 26
  4799   002072                     
  4800                           ;interrupts.c: 32:    color_writetoaddr(0x00, 0b00010011);
  4801   002072  0E13               	movlw	19
  4802   002074  6E03               	movwf	color_writetoaddr@value^0,c
  4803   002076  0E00               	movlw	0
  4804   002078  EC0E  F010         	call	_color_writetoaddr
  4805   00207C                     
  4806                           ;interrupts.c: 33:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  4807   00207C  0ED0               	movlw	208
  4808   00207E  6E05               	movwf	??_Color_Interrupts_init^0,c
  4809   002080  0ECA               	movlw	202
  4810   002082                     u1327:
  4811   002082  2EE8               	decfsz	wreg,f,c
  4812   002084  D7FE               	bra	u1327
  4813   002086  2E05               	decfsz	??_Color_Interrupts_init^0,f,c
  4814   002088  D7FC               	bra	u1327
  4815   00208A  0012               	return		;funcret
  4816   00208C                     __end_of_Color_Interrupts_init:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _color_writetoaddr *****************
  4820 ;; Defined at:
  4821 ;;		line 25 in file "color.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  address         1    wreg     unsigned char 
  4824 ;;  value           1    2[COMRAM] unsigned char 
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;  address         1    3[COMRAM] unsigned char 
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0, cstack
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4836 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;Total ram usage:        2 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 3
  4843 ;; This function calls:
  4844 ;;		_I2C_2_Master_Start
  4845 ;;		_I2C_2_Master_Stop
  4846 ;;		_I2C_2_Master_Write
  4847 ;; This function is called by:
  4848 ;;		_color_click_init
  4849 ;;		_Color_Interrupts_init
  4850 ;;		_Color_Interrupts_threshold
  4851 ;;		_persistence_register
  4852 ;; This function uses a non-reentrant model
  4853 ;;
  4854                           
  4855                           	psect	text39
  4856   00201C                     __ptext39:
  4857                           	callstack 0
  4858   00201C                     _color_writetoaddr:
  4859                           	callstack 26
  4860                           
  4861                           ;incstack = 0
  4862                           ;color_writetoaddr@address stored from wreg
  4863   00201C  6E04               	movwf	color_writetoaddr@address^0,c
  4864   00201E                     
  4865                           ;color.c: 26:     I2C_2_Master_Start();
  4866   00201E  EC73  F010         	call	_I2C_2_Master_Start	;wreg free
  4867                           
  4868                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  4869   002022  0E52               	movlw	82
  4870   002024  EC63  F010         	call	_I2C_2_Master_Write
  4871                           
  4872                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  4873   002028  5004               	movf	color_writetoaddr@address^0,w,c
  4874   00202A  0980               	iorlw	128
  4875   00202C  EC63  F010         	call	_I2C_2_Master_Write
  4876                           
  4877                           ;color.c: 29:     I2C_2_Master_Write(value);
  4878   002030  5003               	movf	color_writetoaddr@value^0,w,c
  4879   002032  EC63  F010         	call	_I2C_2_Master_Write
  4880                           
  4881                           ;color.c: 30:     I2C_2_Master_Stop();
  4882   002036  EC6E  F010         	call	_I2C_2_Master_Stop	;wreg free
  4883   00203A  0012               	return		;funcret
  4884   00203C                     __end_of_color_writetoaddr:
  4885                           	callstack 0
  4886                           
  4887 ;; *************** function _I2C_2_Master_Write *****************
  4888 ;; Defined at:
  4889 ;;		line 45 in file "i2c.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;  data_byte       1    wreg     unsigned char 
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;  data_byte       1    1[COMRAM] unsigned char 
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4906 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4907 ;;Total ram usage:        1 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; Hardware stack levels required when called: 2
  4910 ;; This function calls:
  4911 ;;		_I2C_2_Master_Idle
  4912 ;; This function is called by:
  4913 ;;		_color_writetoaddr
  4914 ;;		_color_read_Red
  4915 ;;		_color_read_Green
  4916 ;;		_color_read_Blue
  4917 ;;		_color_read_Clear
  4918 ;;		_Color_Interrupts_clear
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text40
  4923   0020C6                     __ptext40:
  4924                           	callstack 0
  4925   0020C6                     _I2C_2_Master_Write:
  4926                           	callstack 26
  4927                           
  4928                           ;incstack = 0
  4929                           ;I2C_2_Master_Write@data_byte stored from wreg
  4930   0020C6  6E02               	movwf	I2C_2_Master_Write@data_byte^0,c
  4931   0020C8                     
  4932                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4933   0020C8  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4934   0020CC                     
  4935                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4936   0020CC  C002  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4937   0020D0  0012               	return		;funcret
  4938   0020D2                     __end_of_I2C_2_Master_Write:
  4939                           	callstack 0
  4940                           
  4941 ;; *************** function _I2C_2_Master_Stop *****************
  4942 ;; Defined at:
  4943 ;;		line 39 in file "i2c.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1    wreg      void 
  4950 ;; Registers used:
  4951 ;;		wreg, status,2, status,0, cstack
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/0
  4954 ;;		On exit  : 0/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used: 1
  4963 ;; Hardware stack levels required when called: 2
  4964 ;; This function calls:
  4965 ;;		_I2C_2_Master_Idle
  4966 ;; This function is called by:
  4967 ;;		_color_writetoaddr
  4968 ;;		_color_read_Red
  4969 ;;		_color_read_Green
  4970 ;;		_color_read_Blue
  4971 ;;		_color_read_Clear
  4972 ;;		_Color_Interrupts_clear
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text41
  4977   0020DC                     __ptext41:
  4978                           	callstack 0
  4979   0020DC                     _I2C_2_Master_Stop:
  4980                           	callstack 26
  4981   0020DC                     
  4982                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4983   0020DC  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  4984   0020E0                     
  4985                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4986   0020E0  010E               	movlb	14	; () banked
  4987   0020E2  85DA               	bsf	218,2,b	;volatile
  4988   0020E4                     
  4989                           ; BSR set to: 14
  4990   0020E4  0012               	return		;funcret
  4991   0020E6                     __end_of_I2C_2_Master_Stop:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _I2C_2_Master_Start *****************
  4995 ;; Defined at:
  4996 ;;		line 27 in file "i2c.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;		None
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;		None
  5001 ;; Return value:  Size  Location     Type
  5002 ;;                  1    wreg      void 
  5003 ;; Registers used:
  5004 ;;		wreg, status,2, status,0, cstack
  5005 ;; Tracked objects:
  5006 ;;		On entry : 0/0
  5007 ;;		On exit  : 0/0
  5008 ;;		Unchanged: 0/0
  5009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5014 ;;Total ram usage:        0 bytes
  5015 ;; Hardware stack levels used: 1
  5016 ;; Hardware stack levels required when called: 2
  5017 ;; This function calls:
  5018 ;;		_I2C_2_Master_Idle
  5019 ;; This function is called by:
  5020 ;;		_color_writetoaddr
  5021 ;;		_color_read_Red
  5022 ;;		_color_read_Green
  5023 ;;		_color_read_Blue
  5024 ;;		_color_read_Clear
  5025 ;;		_Color_Interrupts_clear
  5026 ;; This function uses a non-reentrant model
  5027 ;;
  5028                           
  5029                           	psect	text42
  5030   0020E6                     __ptext42:
  5031                           	callstack 0
  5032   0020E6                     _I2C_2_Master_Start:
  5033                           	callstack 26
  5034   0020E6                     
  5035                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5036   0020E6  ECD6  F00F         	call	_I2C_2_Master_Idle	;wreg free
  5037   0020EA                     
  5038                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5039   0020EA  010E               	movlb	14	; () banked
  5040   0020EC  81DA               	bsf	218,0,b	;volatile
  5041   0020EE                     
  5042                           ; BSR set to: 14
  5043   0020EE  0012               	return		;funcret
  5044   0020F0                     __end_of_I2C_2_Master_Start:
  5045                           	callstack 0
  5046                           
  5047 ;; *************** function _I2C_2_Master_Idle *****************
  5048 ;; Defined at:
  5049 ;;		line 22 in file "i2c.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, status,2, status,0
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5065 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5067 ;;Total ram usage:        1 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_I2C_2_Master_Start
  5074 ;;		_I2C_2_Master_RepStart
  5075 ;;		_I2C_2_Master_Stop
  5076 ;;		_I2C_2_Master_Write
  5077 ;;		_I2C_2_Master_Read
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text43
  5082   001FAC                     __ptext43:
  5083                           	callstack 0
  5084   001FAC                     _I2C_2_Master_Idle:
  5085                           	callstack 26
  5086   001FAC                     l110:
  5087   001FAC  010E               	movlb	14	; () banked
  5088   001FAE  B5D8               	btfsc	216,2,b	;volatile
  5089   001FB0  EFDC  F00F         	goto	u851
  5090   001FB4  EFDE  F00F         	goto	u850
  5091   001FB8                     u851:
  5092   001FB8  EFD6  F00F         	goto	l110
  5093   001FBC                     u850:
  5094   001FBC                     
  5095                           ; BSR set to: 14
  5096   001FBC  CEDA F001          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5097   001FC0  0E1F               	movlw	31
  5098   001FC2  1601               	andwf	??_I2C_2_Master_Idle^0,f,c
  5099   001FC4  A4D8               	btfss	status,2,c
  5100   001FC6  EFE7  F00F         	goto	u861
  5101   001FCA  EFE9  F00F         	goto	u860
  5102   001FCE                     u861:
  5103   001FCE  EFD6  F00F         	goto	l110
  5104   001FD2                     u860:
  5105   001FD2                     
  5106                           ; BSR set to: 14
  5107   001FD2  0012               	return		;funcret
  5108   001FD4                     __end_of_I2C_2_Master_Idle:
  5109                           	callstack 0
  5110                           
  5111 ;; *************** function _HighISR *****************
  5112 ;; Defined at:
  5113 ;;		line 65 in file "interrupts.c"
  5114 ;; Parameters:    Size  Location     Type
  5115 ;;		None
  5116 ;; Auto vars:     Size  Location     Type
  5117 ;;		None
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  1    wreg      void 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;Total ram usage:        0 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		Interrupt level 2
  5137 ;; This function uses a non-reentrant model
  5138 ;;
  5139                           
  5140                           	psect	intcode
  5141   000008                     __pintcode:
  5142                           	callstack 0
  5143   000008                     _HighISR:
  5144                           	callstack 21
  5145                           
  5146                           ; BSR set to: 14
  5147                           ;incstack = 0
  5148   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5149   00000A                     
  5150                           ;interrupts.c: 68:     if(!PIR0bits.INT1IF){
  5151   00000A  010E               	movlb	14	; () banked
  5152   00000C  B333               	btfsc	51,1,b	;volatile
  5153   00000E  EF0B  F000         	goto	i2u119_41
  5154   000012  EF0D  F000         	goto	i2u119_40
  5155   000016                     i2u119_41:
  5156   000016  EF14  F000         	goto	i2l331
  5157   00001A                     i2u119_40:
  5158   00001A                     
  5159                           ; BSR set to: 14
  5160                           ;interrupts.c: 69:         interrupt_flag = 0;
  5161   00001A  0E00               	movlw	0
  5162   00001C  0101               	movlb	1	; () banked
  5163   00001E  6F73               	movwf	(_interrupt_flag+1)& (0+255),b
  5164   000020  0E00               	movlw	0
  5165   000022  6F72               	movwf	_interrupt_flag& (0+255),b
  5166   000024                     
  5167                           ; BSR set to: 1
  5168                           ;interrupts.c: 72:         PIR0bits.INT1IF = 1;
  5169   000024  010E               	movlb	14	; () banked
  5170   000026  8333               	bsf	51,1,b	;volatile
  5171   000028                     i2l331:
  5172                           
  5173                           ; BSR set to: 14
  5174   000028  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5175   00002A  0011               	retfie		f
  5176   00002C                     __end_of_HighISR:
  5177                           	callstack 0
  5178                           
  5179                           	psect	rparam
  5180   000000                     
  5181                           	psect	temp
  5182   00005F                     btemp:
  5183                           	callstack 0
  5184   00005F                     	ds	1
  5185   000000                     int$flags	set	btemp
  5186   000000                     wtemp8	set	btemp+1
  5187   000000                     ttemp5	set	btemp+1
  5188   000000                     ttemp6	set	btemp+4
  5189   000000                     ttemp7	set	btemp+8
  5190                           
  5191                           	psect	idloc
  5192                           
  5193                           ;Config register IDLOC0 @ 0x200000
  5194                           ;	unspecified, using default values
  5195   200000                     	org	2097152
  5196   200000  0FFF               	dw	4095
  5197                           
  5198                           ;Config register IDLOC1 @ 0x200002
  5199                           ;	unspecified, using default values
  5200   200002                     	org	2097154
  5201   200002  0FFF               	dw	4095
  5202                           
  5203                           ;Config register IDLOC2 @ 0x200004
  5204                           ;	unspecified, using default values
  5205   200004                     	org	2097156
  5206   200004  0FFF               	dw	4095
  5207                           
  5208                           ;Config register IDLOC3 @ 0x200006
  5209                           ;	unspecified, using default values
  5210   200006                     	org	2097158
  5211   200006  0FFF               	dw	4095
  5212                           
  5213                           ;Config register IDLOC4 @ 0x200008
  5214                           ;	unspecified, using default values
  5215   200008                     	org	2097160
  5216   200008  0FFF               	dw	4095
  5217                           
  5218                           ;Config register IDLOC5 @ 0x20000A
  5219                           ;	unspecified, using default values
  5220   20000A                     	org	2097162
  5221   20000A  0FFF               	dw	4095
  5222                           
  5223                           ;Config register IDLOC6 @ 0x20000C
  5224                           ;	unspecified, using default values
  5225   20000C                     	org	2097164
  5226   20000C  0FFF               	dw	4095
  5227                           
  5228                           ;Config register IDLOC7 @ 0x20000E
  5229                           ;	unspecified, using default values
  5230   20000E                     	org	2097166
  5231   20000E  0FFF               	dw	4095
  5232                           
  5233                           	psect	config
  5234                           
  5235                           ;Config register CONFIG1L @ 0x300000
  5236                           ;	External Oscillator mode Selection bits
  5237                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5238                           ;	Power-up default value for COSC bits
  5239                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5240   300000                     	org	3145728
  5241   300000  AA                 	db	170
  5242                           
  5243                           ;Config register CONFIG1H @ 0x300001
  5244                           ;	unspecified, using default values
  5245                           ;	Clock Out Enable bit
  5246                           ;	CLKOUTEN = 0x1, unprogrammed default
  5247                           ;	Clock Switch Enable bit
  5248                           ;	CSWEN = 0x1, unprogrammed default
  5249                           ;	Fail-Safe Clock Monitor Enable bit
  5250                           ;	FCMEN = 0x1, unprogrammed default
  5251   300001                     	org	3145729
  5252   300001  FF                 	db	255
  5253                           
  5254                           ;Config register CONFIG2L @ 0x300002
  5255                           ;	unspecified, using default values
  5256                           ;	Master Clear Enable bit
  5257                           ;	MCLRE = 0x1, unprogrammed default
  5258                           ;	Power-up Timer Enable bit
  5259                           ;	PWRTE = 0x1, unprogrammed default
  5260                           ;	Low-power BOR enable bit
  5261                           ;	LPBOREN = 0x1, unprogrammed default
  5262                           ;	Brown-out Reset Enable bits
  5263                           ;	BOREN = 0x3, unprogrammed default
  5264   300002                     	org	3145730
  5265   300002  FF                 	db	255
  5266                           
  5267                           ;Config register CONFIG2H @ 0x300003
  5268                           ;	unspecified, using default values
  5269                           ;	Brown Out Reset Voltage selection bits
  5270                           ;	BORV = 0x3, unprogrammed default
  5271                           ;	ZCD Disable bit
  5272                           ;	ZCD = 0x1, unprogrammed default
  5273                           ;	PPSLOCK bit One-Way Set Enable bit
  5274                           ;	PPS1WAY = 0x1, unprogrammed default
  5275                           ;	Stack Full/Underflow Reset Enable bit
  5276                           ;	STVREN = 0x1, unprogrammed default
  5277                           ;	Debugger Enable bit
  5278                           ;	DEBUG = 0x1, unprogrammed default
  5279                           ;	Extended Instruction Set Enable bit
  5280                           ;	XINST = 0x1, unprogrammed default
  5281   300003                     	org	3145731
  5282   300003  FF                 	db	255
  5283                           
  5284                           ;Config register CONFIG3L @ 0x300004
  5285                           ;	WDT Period Select bits
  5286                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5287                           ;	WDT operating mode
  5288                           ;	WDTE = OFF, WDT Disabled
  5289   300004                     	org	3145732
  5290   300004  9F                 	db	159
  5291                           
  5292                           ;Config register CONFIG3H @ 0x300005
  5293                           ;	unspecified, using default values
  5294                           ;	WDT Window Select bits
  5295                           ;	WDTCWS = 0x7, unprogrammed default
  5296                           ;	WDT input clock selector
  5297                           ;	WDTCCS = 0x7, unprogrammed default
  5298   300005                     	org	3145733
  5299   300005  FF                 	db	255
  5300                           
  5301                           ;Config register CONFIG4L @ 0x300006
  5302                           ;	unspecified, using default values
  5303                           ;	Write Protection Block 0
  5304                           ;	WRT0 = 0x1, unprogrammed default
  5305                           ;	Write Protection Block 1
  5306                           ;	WRT1 = 0x1, unprogrammed default
  5307                           ;	Write Protection Block 2
  5308                           ;	WRT2 = 0x1, unprogrammed default
  5309                           ;	Write Protection Block 3
  5310                           ;	WRT3 = 0x1, unprogrammed default
  5311                           ;	Write Protection Block 3
  5312                           ;	WRT4 = 0x1, unprogrammed default
  5313                           ;	Write Protection Block 3
  5314                           ;	WRT5 = 0x1, unprogrammed default
  5315                           ;	Write Protection Block 3
  5316                           ;	WRT6 = 0x1, unprogrammed default
  5317                           ;	Write Protection Block 3
  5318                           ;	WRT7 = 0x1, unprogrammed default
  5319   300006                     	org	3145734
  5320   300006  FF                 	db	255
  5321                           
  5322                           ;Config register CONFIG4H @ 0x300007
  5323                           ;	unspecified, using default values
  5324                           ;	Configuration Register Write Protection bit
  5325                           ;	WRTC = 0x1, unprogrammed default
  5326                           ;	Boot Block Write Protection bit
  5327                           ;	WRTB = 0x1, unprogrammed default
  5328                           ;	Data EEPROM Write Protection bit
  5329                           ;	WRTD = 0x1, unprogrammed default
  5330                           ;	Scanner Enable bit
  5331                           ;	SCANE = 0x1, unprogrammed default
  5332                           ;	Low Voltage Programming Enable bit
  5333                           ;	LVP = 0x1, unprogrammed default
  5334   300007                     	org	3145735
  5335   300007  FF                 	db	255
  5336                           
  5337                           ;Config register CONFIG5L @ 0x300008
  5338                           ;	unspecified, using default values
  5339                           ;	UserNVM Program Memory Code Protection bit
  5340                           ;	CP = 0x1, unprogrammed default
  5341                           ;	DataNVM Memory Code Protection bit
  5342                           ;	CPD = 0x1, unprogrammed default
  5343   300008                     	org	3145736
  5344   300008  FF                 	db	255
  5345                           
  5346                           ;Config register CONFIG5H @ 0x300009
  5347                           ;	unspecified, using default values
  5348   300009                     	org	3145737
  5349   300009  FF                 	db	255
  5350                           
  5351                           ;Config register CONFIG6L @ 0x30000A
  5352                           ;	unspecified, using default values
  5353                           ;	Table Read Protection Block 0
  5354                           ;	EBTR0 = 0x1, unprogrammed default
  5355                           ;	Table Read Protection Block 1
  5356                           ;	EBTR1 = 0x1, unprogrammed default
  5357                           ;	Table Read Protection Block 2
  5358                           ;	EBTR2 = 0x1, unprogrammed default
  5359                           ;	Table Read Protection Block 3
  5360                           ;	EBTR3 = 0x1, unprogrammed default
  5361                           ;	Table Read Protection Block 4
  5362                           ;	EBTR4 = 0x1, unprogrammed default
  5363                           ;	Table Read Protection Block 5
  5364                           ;	EBTR5 = 0x1, unprogrammed default
  5365                           ;	Table Read Protection Block 6
  5366                           ;	EBTR6 = 0x1, unprogrammed default
  5367                           ;	Table Read Protection Block 7
  5368                           ;	EBTR7 = 0x1, unprogrammed default
  5369   30000A                     	org	3145738
  5370   30000A  FF                 	db	255
  5371                           
  5372                           ;Config register CONFIG6H @ 0x30000B
  5373                           ;	unspecified, using default values
  5374                           ;	Boot Block Table Read Protection bit
  5375                           ;	EBTRB = 0x1, unprogrammed default
  5376   30000B                     	org	3145739
  5377   30000B  FF                 	db	255
  5378                           tosu	equ	0xFFF
  5379                           tosh	equ	0xFFE
  5380                           tosl	equ	0xFFD
  5381                           stkptr	equ	0xFFC
  5382                           pclatu	equ	0xFFB
  5383                           pclath	equ	0xFFA
  5384                           pcl	equ	0xFF9
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           indf0	equ	0xFEF
  5392                           postinc0	equ	0xFEE
  5393                           postdec0	equ	0xFED
  5394                           preinc0	equ	0xFEC
  5395                           plusw0	equ	0xFEB
  5396                           fsr0h	equ	0xFEA
  5397                           fsr0l	equ	0xFE9
  5398                           wreg	equ	0xFE8
  5399                           indf1	equ	0xFE7
  5400                           postinc1	equ	0xFE6
  5401                           postdec1	equ	0xFE5
  5402                           preinc1	equ	0xFE4
  5403                           plusw1	equ	0xFE3
  5404                           fsr1h	equ	0xFE2
  5405                           fsr1l	equ	0xFE1
  5406                           bsr	equ	0xFE0
  5407                           indf2	equ	0xFDF
  5408                           postinc2	equ	0xFDE
  5409                           postdec2	equ	0xFDD
  5410                           preinc2	equ	0xFDC
  5411                           plusw2	equ	0xFDB
  5412                           fsr2h	equ	0xFDA
  5413                           fsr2l	equ	0xFD9
  5414                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        2
    BSS         121
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    153     160
    BANK1           256      0     116
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2319$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2266$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2266$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S662DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S662DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    colorVal2String@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    colorVal2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    RGBC2Serial@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 


Critical Paths under _main in COMRAM

    _main->_colorVal2String
    _turnRight->_setMotorPWM
    _persistence_register->_color_writetoaddr
    _norm_stop->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RGBC2Serial->_sendStringSerial4
    _sendStringSerial4->_sendCharSerial4
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_clear->_Color_Interrupts_init
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _colorVal2String->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   17534
                                             92 COMRAM     2     2      0
                                             25 BANK0    128   128      0
             _Color_Interrupts_clear
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _colorVal2String
                   _color_click_init
                    _color_read_RGBC
                    _initDCmotorsPWM
                         _initUSART4
                         _motorLinit
                         _motorRinit
                          _norm_stop
               _persistence_register
                        _tricolorLED
                          _turnRight
 ---------------------------------------------------------------------------------
 (1) _turnRight                                            4     0      4    2917
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    2981
                                             19 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             13 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     616
                                             11 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              4 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              1 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              4 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorVal2String                                      4     0      4    6146
                                             88 COMRAM     4     0      4
                        _RGBC2Serial
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             80 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             62 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             27 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _RGBC2Serial                                          3     1      2     286
                                              5 COMRAM     3     1      2
                  _sendStringSerial4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    4     2      2     188
                                              1 COMRAM     4     2      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4     990
                                              4 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_clear                               0     0      0     772
              _Color_Interrupts_init
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                              4 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              2 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              1 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_clear
     _Color_Interrupts_init
       _color_writetoaddr
         _I2C_2_Master_Start
           _I2C_2_Master_Idle
         _I2C_2_Master_Stop
           _I2C_2_Master_Idle
         _I2C_2_Master_Write
           _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _Color_Interrupts_init
   _Color_Interrupts_threshold
     _color_writetoaddr
   _colorVal2String
     _RGBC2Serial
       _sendStringSerial4
         _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initDCmotorsPWM
   _initUSART4
   _motorLinit
   _motorRinit
   _norm_stop
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _persistence_register
     _color_writetoaddr
   _tricolorLED
   _turnRight
     _setMotorPWM

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      74       7       45.3%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhl     37      0       0      43        0.0%
BITBIGSFRlllllh     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRhlllll     1E      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRlllhll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRllh         3      0       0      40        0.0%
BITBIGSFRlllhhl      2      0       0      42        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      59        0.0%
BITBIGSFRllllh       1      0       0      45        0.0%
BITBIGSFRlhl         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     172      62        0.0%
DATA                 0      0     172       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 05 15:26:54 2022

                          _color_read_Red 1C1C                           _color_read_RGBC 1B6C  
                         _color_read_Blue 1D0C                                        l53 1F24  
                                      l62 1CBA                                        l71 2056  
                                      l56 203A                                        l80 20B8  
                                      l65 1D5A                                        l74 1BC8  
                                      l59 1C6A                                        l68 1D0A  
                                      l77 1A96                       ___wmul@multiplicand 0003  
                        _color_read_Clear 1CBC                          _color_read_Green 1C6C  
                                     l110 1FAC                                       l113 1FD2  
                                     l122 20E4                                       l107 1F80  
                                     l116 20EE                                       l125 20D0  
                                     l119 20DA                                       l128 1E70  
                                     l224 201A                                       l233 208E  
                                     l242 1EF0                                       l322 20C4  
                                     l316 208A                                       l236 20A2  
                                     l325 2070                                       l414 1A26  
                                     l319 1FAA                                       l408 1F56  
                                     l436 1FF8                                       l550 1218  
                                     l391 1384                                       l384 18C6  
                                     l394 1B6A                                       l563 14E8  
                                     l397 1B00                                       l934 19B4  
                                     l927 19AC                                       u700 10D6  
                                     u701 10D2                                       u711 1100  
                                     u720 1124                                       u800 1460  
                                     u640 1790                                       u721 1120  
                                     u801 145C                                       u641 178C  
                                     u730 114E                                       u810 14A8  
                                     u650 17A2                                       u731 114A  
                                     u811 14A4                                       u651 179E  
                                     u740 118E                                       u660 17CA  
                                     u820 18D6                                       u900 0E94  
                                     u741 118A                                       u661 17C6  
                                     u821 18D2                                       u901 0E90  
                                     u750 11D8                                       u670 1800  
                                     u830 192C                                       u910 0EC0  
                                     u751 11D4                                       u671 17FC  
                                     u831 1928                                       u911 0EBC  
                                     u760 1398                                       u840 1E8C  
                                     u680 1DEC                                       u920 0ED6  
                                     u761 1394                                       u841 1E88  
                                     u681 1DE8                                       u921 0ED2  
                                     u850 1FBC                                       u690 10A4  
                                     u770 13CA                                       u930 1012  
                                     u851 1FB8                                       u691 10A0  
                                     u771 13C6                                       u931 100E  
                                     u860 1FD2                                       u780 1408  
                                     u940 1030                                       u861 1FCE  
                                     u781 1404                                       u941 102C  
                                     u790 1432                                       u950 104A  
                                     u870 0E44                                       u791 142E  
                                     u951 1046                                       u871 0E3E  
                                     u960 105A                                       u880 0E46  
                                     u961 1056                                       u970 209E  
                                     u890 0E58                                       u971 209A  
                                     u891 0E54                                       u980 150E  
                                     u981 150A                                       u990 155C  
                                     u991 1558                                       _abs 1E72  
                                     _pad 18C8                               _tricolorLED 20A4  
                                     wreg 000FE8                                      l2000 0F88  
                                    l1202 20F2                                      l2010 1030  
                                    l2002 0F8E                                      l1114 1C1A  
                                    ?_abs 0013                                      l1140 1940  
                                    l2012 104A                                      l2004 0F94  
                                    l2022 20E6                                      l2030 20DC  
                                    l2014 105A                                      l2006 0FF8  
                                    l2110 196C                                      l2102 1942  
                                    l2024 20EA                                      l2032 20E0  
                                    l1136 18EA                                      l2016 1060  
                                    l2008 1012                                      l2040 150E  
                                    l2120 19A0                                      l2112 197A  
                                    l2104 194A                                      l2200 12E4  
                                    l1145 0EA0                                      l2026 20C8  
                                    l2034 208E                                      l2018 1070  
                                    l2050 155C                                      l2042 151C  
                                    l2130 1DA0                                      l2210 1F00  
                                    l2122 19A6                                      l2114 1980  
                                    l2106 195C                                      l2202 1300  
                                    l1147 0EA8                                      l2028 20CC  
                                    l2036 209E                                      l1148 0EEE  
                                    l2052 1578                                      l2044 152A  
                                    l1172 1DA8                                      l2124 1D5C  
                                    l2220 1A8A                                      l2140 1F6A  
                                    l2212 1F10                                      l2116 1996  
                                    l2108 1964                                      l2204 1344  
                                    l2300 19DE                                      l2310 2058  
                                    l1166 1638                                      l2054 15CE  
                                    l2046 1530                                      l2062 1610  
                                    l2038 14EA                                      l2126 1D68  
                                    l2142 1F6C                                      l2134 1F58  
                                    l2214 1F1A                                      l2206 1EF2  
                                    l2070 20D2                                      l2230 1FFA  
                                    l2118 199E                                      l2302 19EE  
                                    l1191 1846                                      l1159 1090  
                                    l1176 1EA8                                      l2048 1540  
                                    l2128 1D84                                      l2144 1F6E  
                                    l2136 1F62                                      l2208 1EF6  
                                    l2080 1E46                                      l2072 20D6  
                                    l2160 1D52                                      l2152 1C6C  
                                    l2216 1B6C                                      l2240 2014  
                                    l2232 2004                                      l2224 20A4  
                                    l2304 19FE                                      l2226 1F82  
                                    l2090 1EBE                                      l2170 203C  
                                    l2058 15FE                                      l2218 1A28  
                                    l2138 1F68                                      l2082 1E6C  
                                    l2074 1E32                                      l2154 1CB2  
                                    l2146 1C1C                                      l2250 1896  
                                    l2242 2016                                      l2234 2006  
                                    l2306 1A0E                                      l2330 164C  
                                    l1179 1EB0                                      l2068 201E  
                                    l2092 1ED0                                      l2172 204A  
                                    l2180 1BEC                                      l2084 1E6E  
                                    l2076 1E36                                      l2164 1CBC  
                                    l2148 1C62                                      l2260 18B8  
                                    l2252 18A0                                      l2244 2018  
                                    l2236 2010                                      l2228 20BA  
                                    l2308 1A1A                                      l2340 1680  
                                    l2332 1660                                      l2324 163A  
                                    l2094 1ED4                                      l2182 1C08  
                                    l2174 1BCA                                      l2078 1E3E  
                                    l2158 1D0C                                      l2166 1D02  
                                    l2262 18BA                                      l2254 18A2  
                                    l2246 1848                                      l2238 2012  
                                    l2270 1B1E                                      l2190 121A  
                                    l2350 1694                                      l2342 168C  
                                    l2334 1664                                      l2326 1644  
                                    l1199 1DEC                                      l2088 1EB2  
                                    l2176 1BDC                                      l2264 18C4  
                                    l2256 18AC                                      l2248 1872  
                                    l2272 1B2E                                      l2280 1AA4  
                                    l2096 1FD4                                      l2192 1236  
                                    l2360 16E4                                      l2352 1698  
                                    l2344 168E                                      l2336 1668  
                                    l2328 1648                                      l2186 2072  
                                    l2178 1BE4                                      l2258 18AE  
                                    l2274 1B42                                      l2266 1B02  
                                    l2282 1AB4                                      l2098 1FF0  
                                    l2194 128A                                      l2290 1F26  
                                    l2370 1746                                      l2362 16F8  
                                    l2354 16A4                                      l2346 1690  
                                    l2338 1674                                      l2188 207C  
                                    l1900 11B0                                      l2276 1B56  
                                    l2268 1B0E                                      l2284 1AC4  
                                    l2196 129E                                      l2292 1F3E  
                                    l2364 1710                                      l2372 174A  
                                    l2356 16B8                                      l2348 1692  
                                    l1902 11C2                                      l2286 1AD8  
                                    l2278 1A98                                      l2198 12E0  
                                    l2294 1F4A                                      l2374 175E  
                                    l2366 171A                                      l2358 16D0  
                                    l1904 11C8                                      l1920 13BC  
                                    l1912 1386                                      l2288 1AEC  
                                    l2296 19B6                                      l2368 172E  
                                    l1906 11D8                                      l1930 1424  
                                    l1922 13CA                                      l1914 138A  
                                    l1850 17A2                                      l2298 19CE  
                                    l1908 11F8                                      l1932 1432  
                                    l1940 1498                                      l1924 13EA  
                                    l1916 1398                                      l1852 17AC  
                                    l1860 1DAA                                      l1870 1096  
                                    l1942 14A8                                      l1934 1460  
                                    l1926 1408                                      l1918 13B8  
                                    l1854 17CA                                      l1846 177E  
                                    l1862 1DB6                                      l1950 18D6  
                                    l1880 10F6                                      l1872 10A4  
                                    l1944 14C8                                      l1936 1480  
                                    l1928 1410                                      l1856 1800  
                                    l1848 1790                                      l1864 1DC8  
                                    l1960 192C                                      l1952 18E2  
                                    l1890 1140                                      l1882 10FA  
                                    l1874 10C4                                      l1938 1492  
                                    l1962 1E72                                      l1866 1DCC  
                                    l1954 18F6                                      l1970 0E14  
                                    l1892 114E                                      l1884 1106  
                                    l1876 10C8                                      l1868 1092  
                                    l1964 1E8C                                      l1956 190A  
                                    l1948 18C8                                      l1980 0E94  
                                    l1972 0E34                                      l1966 1FAC  
                                    l1894 1160                                      l1886 1124  
                                    l1878 10D6                                      l1958 190E  
                                    l1990 0EE2                                      l1982 0EB0  
                                    l1974 0E48                                      ?_pad 0011  
                                    l1968 1FBC                                      l1896 118E  
                                    l1888 112C                                      l1992 0EEA  
                                    l1984 0EC0                                      l1976 0E58  
                                    l1898 11AE                                      l1994 0EF6  
                                    l1986 0EC6                                      l1978 0E78  
                                    l1996 0F00                                      l1988 0ED6  
                                    l1998 0F06                                      STR_1 0E01  
                            ?_RGBC2Serial 0006                                      u1000 1578  
                                    u1001 1574                                      u1010 1E5A  
                                    u1011 1E52                                      u1030 1EF0  
                                    u1031 1EEC                                      u1040 195C  
                                    u1041 1958                                      u1050 197A  
                                    u1130 16E4                                      u1051 1976  
                                    u1131 16E0                                      u1028 1E5C  
                                    u1060 1996                                      u1061 1992  
                                    u1070 1DA0                                      u1071 1D9C  
                                    u1080 1236                                      u1081 1232  
                                    u1090 1300                                      u1307 1F06  
                                    u1091 12FC                                      u1317 2042  
                                    u1327 2082                              _BAUD4CONbits 000EE9  
                                    u1267 16C2                                      u1277 1702  
                                    u1287 1738                                      u1297 1768  
                                    _T2PR 000FBC                                      abs@a 0013  
                                    _dbuf 0152                                      _main 163A  
                                    _dtoa 0E14                                      _prec 00F9  
                                    pad@i 0018                                      pad@p 0015  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 001A                                      fsr2l 000FD9  
                                    btemp 005F                                      prodh 000FF4  
                                    prodl 000FF3                                      start 002C  
                  __end_of_color_read_Red 1C6C                           __end_of_HighISR 002C  
                            ___param_bank 000000                                     ??_abs 0015  
                                   ??_pad 0017                          ?_colorVal2String 0059  
                         __end_of___aodiv 121A                                     ?_main 0001  
                                   ?_dtoa 001C                           __end_of___aomod 14EA  
                         __end_of___lwdiv 19B6                                     i2l331 0028  
                            vfpfcnvrt@fmt 0041                                     _TMR0H 000FD4  
                                   _TMR0L 000FD3                   __end_of_sendCharSerial4 20A4  
              __end_of_I2C_2_Master_Start 20F0                __end_of_I2C_2_Master_Write 20D2  
                                   _flags 00FB                                     _fputc 177E  
                                   _fputs 1DAA                                     pad@fp 0011  
                                   _width 0150                                     _putch 20F2  
                                   dtoa@d 001E                                     dtoa@i 003C  
                                   dtoa@n 0034                                     dtoa@p 0030  
                                   dtoa@s 003E                                     dtoa@w 0032  
                                   tablat 000FF5                     _Color_Interrupts_init 2072  
                                   ttemp5 0060                                     ttemp6 0063  
                                   ttemp7 0067                                     status 000FD8  
                                   wtemp8 0060                           __end_of_sprintf 1C1C  
                 __end_of_color_read_RGBC 1BCA                   __end_of_color_read_Blue 1D5C  
                   _I2C_2_Master_RepStart 20D2                           ?_color_read_Red 0005  
                         __initialization 1DEE                              __end_of_main 177E  
                            __end_of_dtoa 1092               ?_Color_Interrupts_threshold 0005  
                                  ??_main 005D                                    ??_dtoa 0026  
                           __activetblptr 000001                              ?_setMotorPWM 000E  
                                  ?_fputc 0001                                    ?_fputs 000A  
                                  _CCPR1H 000FAA                                    _CCPR2H 000FA6  
                                  _CCPR3H 000F25                                    _CCPR4H 000F21  
                                  ?_putch 0001                                    _RC0PPS 000E62  
                                  _RC4REG 000EE3                                    _RE2PPS 000E74  
                                  _RC7PPS 000E69                                    _RD5PPS 000E6F  
                                  _RE4PPS 000E76                                    _RD6PPS 000E70  
                                  i2l2420 0024                                    i2l2416 000A  
                                  i2l2418 001A                                    _RG6PPS 000E88  
                               ??_HighISR 0001                  __end_of_color_click_init 1F26  
                                  _RX4PPS 000E15                                    _TX4REG 000EE4  
Color_Interrupts_threshold@lowerThreshold 0007              __end_of_persistence_register 20C6  
                            _CCPTMRS0bits 000FAD                              vfprintf@cfmt 0057  
                               ??___aodiv 0011                                 ??___aomod 0011  
                                  ___wmul 1FD4                                 ??___lwdiv 000B  
                                  clear_0 1E0C                                    clear_1 1E18  
                                  isa$std 000001                                    pad@buf 0013  
                                  main@mL 00E7                                    main@mR 00F0  
                                  dtoa@fp 001C                                    fputc@c 0001  
                  _Color_Interrupts_clear 2058                                    fputs@c 000E  
                                  fputs@i 000F                                    fputs@s 000A  
                            __mediumconst 0000                                    tblptrh 000FF7  
                                  tblptrl 000FF6                                    tblptru 000FF8  
                        ?_sendCharSerial4 0001                                    putch@c 0001  
                        __end_of_vfprintf 1DAA  Color_Interrupts_threshold@upperThreshold 0005  
                       ??_initDCmotorsPWM 0003                                 ??_sprintf 0059  
                  ?_Color_Interrupts_init 0001                                __accesstop 0060  
                 __end_of__initialization 1E1E                  __end_of_color_read_Clear 1D0C  
                __end_of_color_read_Green 1CBC                    ?_I2C_2_Master_RepStart 0001  
                           ___rparam_used 000001                          ?_color_read_RGBC 000C  
                        ?_color_read_Blue 0005                            __pcstackCOMRAM 0001  
                            __pidataBANK1 20F0                             __end_of_fputc 1848  
                           __end_of_fputs 1DEE                             __end_of_putch 20F4  
                            ?_tricolorLED 0001                                   ??_fputc 0005  
                                 ??_fputs 000E                                   ??_putch 0001  
                              __pbssBANK0 00F9                                __pbssBANK1 0100  
                       _color_writetoaddr 201C                              _T2CLKCONbits 000FBF  
                      ?_color_writetoaddr 0003                                   ?___wmul 0001  
                     ??_color_writetoaddr 0004                                   _SP4BRGH 000EE6  
                                 _SP4BRGL 000EE5                                   _SSP2ADD 000ED6  
                                 _SSP2BUF 000ED5                      _persistence_register 20BA  
                  color_writetoaddr@value 0003                          ??_color_read_Red 0007  
                                 _HighISR 0008                 __end_of_color_writetoaddr 203C  
                      _I2C_2_Master_Start 20E6                                _initUSART4 1FFA  
                      _I2C_2_Master_Write 20C6                                   __Hparam 0000  
                                 __Lparam 0000                         color_read_Red@tmp 000A  
                 sendStringSerial4@string 0002                                   ___aodiv 1092  
                                 ___aomod 1386                       ?_I2C_2_Master_Start 0001  
                                 ___lwdiv 1942                       ?_I2C_2_Master_Write 0001  
                               ?_vfprintf 0051                              __psmallconst 0E00  
                                 __pcinit 1DEE                                   __ramtop 0E00  
                                 __ptext0 163A                                   __ptext1 19B6  
                                 __ptext2 20A4                                   __ptext3 20BA  
                                 __ptext4 1F26                                   __ptext5 121A  
                                 __ptext6 1FD4                                   __ptext7 1942  
                                 __ptext8 1A98                                   __ptext9 1B02  
                               _T2CONbits 000FBD                                 _T2HLTbits 000FBE  
                           _RxBufWriteCnt 00FF                     ?_persistence_register 0001  
                                 main@buf 0079                                   _sprintf 1BCA  
                    ??_I2C_2_Master_Start 0002                      ??_I2C_2_Master_Write 0002  
                    end_of_initialization 1E1E                                   fputc@fp 0003  
                                 fputs@fp 000C                         ?_color_click_init 0001  
                       __end_of_norm_stop 1F58                        ??_color_click_init 0005  
                             norm_stop@mL 0014                         __end_of_vfpfcnvrt 163A  
                             norm_stop@mR 0016                                   postdec2 000FDD  
                              _motorLinit 1B02                                   postinc0 000FEE  
                                 postinc1 000FE6                                   postinc2 000FDE  
                              _motorRinit 1A98                          vfpfcnvrt@convarg 0047  
                              ??_vfprintf 0057                   ?_Color_Interrupts_clear 0001  
                         _initDCmotorsPWM 1848                       color_read_RGBC@temp 000C  
                      setMotorPWM@negDuty 0013                         __end_of_turnRight 1A28  
                 ??_Color_Interrupts_init 0005                                 _TRISAbits 000F81  
                      setMotorPWM@posDuty 0012                                 _TRISBbits 000F82  
                               _TRISCbits 000F83                                 _TRISDbits 000F84  
                               _TRISEbits 000F85                                 _TRISFbits 000F86  
                               _TRISGbits 000F87                  color_writetoaddr@address 0004  
                 ??_I2C_2_Master_RepStart 0002                        sendStringSerial4@i 0004  
                             _CCP1CONbits 000FAB                         ?_color_read_Clear 0005  
                            _EUSART4RXbuf 013C                              _EUSART4TXbuf 0100  
                             _CCP2CONbits 000FA7                         ?_color_read_Green 0005  
                             _CCP3CONbits 000F26                               ?_initUSART4 0001  
                             _CCP4CONbits 000F22                 sendCharSerial4@charToSend 0001  
                      ??_color_read_Clear 0007                        ??_color_read_Green 0007  
          __end_of_Color_Interrupts_clear 2072                               vfpfcnvrt@ap 0043  
                             vfpfcnvrt@cp 004F                               vfpfcnvrt@fp 003F  
                          __end_of___wmul 1FFA                       color_read_Clear@tmp 000A  
                     start_initialization 1DEE                    ??_persistence_register 0005  
                             __end_of_abs 1EB2                               __end_of_pad 1942  
                           _TxBufWriteCnt 00FD                             ??_RGBC2Serial 0008  
                       ??_colorVal2String 005D                       color_read_Green@tmp 000A  
                 __end_of_initDCmotorsPWM 18C8                               vfprintf@fmt 0053  
                             ?_motorLinit 0001                                  ??___wmul 0005  
                             ?_motorRinit 0001                               __pdataBANK1 0172  
                           __pcstackBANK0 0060                          ___aodiv@dividend 0001  
                                ?_HighISR 0001                       __end_of_RGBC2Serial 2058  
                        ___lwdiv@dividend 0007                                 _dtoa$2347 002E  
                               __pintcode 0008                                  ?___aodiv 0001  
                                ?___aomod 0001                          ___aodiv@quotient 0013  
                                ?___lwdiv 0007              ??_Color_Interrupts_threshold 0009  
                    I2C_2_Master_Read@ack 0003                      I2C_2_Master_Read@tmp 0004  
                             __smallconst 0E00                         _I2C_2_Master_Idle 1FAC  
                       _I2C_2_Master_Init 1F58                         _I2C_2_Master_Read 1E30  
                       _I2C_2_Master_Stop 20DC                              _RxBufReadCnt 00FE  
                      ?_I2C_2_Master_Idle 0001                        ?_I2C_2_Master_Init 0001  
                      ?_I2C_2_Master_Read 0001                             ??_setMotorPWM 0010  
                      ?_I2C_2_Master_Stop 0001                          ___lwdiv@quotient 000B  
                initDCmotorsPWM@PWMperiod 0001                                  ?_sprintf 0060  
                       _sendStringSerial4 1EB2                       ??_I2C_2_Master_Idle 0001  
                     ??_I2C_2_Master_Init 0001                       ??_I2C_2_Master_Read 0002  
                          ___wmul@product 0005                                  _LATAbits 000F79  
                     ??_I2C_2_Master_Stop 0002                                  _LATEbits 000F7D  
                                _LATFbits 000F7E                                  _LATGbits 000F7F  
                                _IPR0bits 000E1F                                  _PIE0bits 000E29  
                      ?_sendStringSerial4 0002                                  _PIE4bits 000E2D  
                             turnRight@mL 0014                                  i2u119_40 001A  
                                i2u119_41 0016                               turnRight@mR 0016  
                                _PIR0bits 000E33                                  _PIR4bits 000E37  
                        ?_initDCmotorsPWM 0001                         ??_sendCharSerial4 0001  
                               _norm_stop 1F26                                  _SSP2CON2 000EDA  
                     ??_sendStringSerial4 0004                                  _SSP2STAT 000ED8  
                               _vfpfcnvrt 14EA                 __end_of_I2C_2_Master_Idle 1FD4  
               __end_of_I2C_2_Master_Init 1F82                 __end_of_I2C_2_Master_Read 1E72  
                       ___wmul@multiplier 0001                 __end_of_I2C_2_Master_Stop 20E6  
                            setMotorPWM@m 000E               I2C_2_Master_Write@data_byte 0002  
                       ??_color_read_RGBC 000E                         ??_color_read_Blue 0007  
                            _TxBufReadCnt 00FC                                 _turnRight 19B6  
           __end_of_Color_Interrupts_init 208C                 __end_of_sendStringSerial4 1EF2  
                             _RGBC2Serial 203C             __end_of_I2C_2_Master_RepStart 20DC  
                      color_read_Blue@tmp 000A                       __end_of_setMotorPWM 1386  
                            ??_initUSART4 0001                       colorVal2String@temp 005B  
                                __Hrparam 0000                                vfprintf@ap 0055  
                                __Lrparam 0000                                vfprintf@fp 0051  
                            __Lsmallconst 0E00                                ?_norm_stop 0014  
                              ?_vfpfcnvrt 003F                           ___aodiv@divisor 0009  
                         ___aodiv@counter 0011                                _ANSELBbits 000E9A  
                              _ANSELDbits 000EA7                             ??_tricolorLED 0001  
                              sprintf@fmt 0062                           _colorVal2String 1A28  
                              _T0CON0bits 000FD5                                _T0CON1bits 000FD6  
                         ___lwdiv@divisor 0009                        __end_of_initUSART4 201C  
                         ___lwdiv@counter 000D                                ?_turnRight 0014  
                                __ptext10 1FFA                                  __ptext11 1848  
                                __ptext20 1F58                                  __ptext12 1B6C  
                                __ptext21 1A28                                  __ptext13 1C1C  
                                __ptext30 1E72                                  __ptext22 1BCA  
                                __ptext14 1C6C                                  __ptext31 1386  
                                __ptext23 1D5C                                  __ptext15 1CBC  
                                __ptext40 20C6                                  __ptext32 1092  
                                __ptext24 14EA                                  __ptext16 1D0C  
                                __ptext41 20DC                                  __ptext33 203C  
                                __ptext25 0E14                                  __ptext17 20D2  
                                __ptext42 20E6                                  __ptext34 1EB2  
                                __ptext26 18C8                                  __ptext18 1E30  
                                __ptext43 1FAC                                  __ptext35 208C  
                                __ptext27 1DAA                                  __ptext19 1EF2  
                                __ptext36 1F82                                  __ptext28 177E  
                                __ptext37 2058                                  __ptext29 20F2  
                                __ptext38 2072                                  __ptext39 201C  
                            _SSP2CON1bits 000ED9                              _SSP2CON2bits 000EDA  
                      main@lowerThreshold 00DD                                  isa$xinst 000000  
                            ??_motorLinit 0003                              ??_motorRinit 0003  
                              _RC4STAbits 000EE7                                  main@RGBC 00DF  
                                int$flags 005F                                  _vfprintf 1D5C  
      __end_of_Color_Interrupts_threshold 1FAC                _Color_Interrupts_threshold 1F82  
                        ___aomod@dividend 0001                                _INTCONbits 000FF2  
                      colorVal2String@buf 0059                               _setMotorPWM 121A  
                            motorLinit@mL 0001                       __end_of_tricolorLED 20BA  
                                intlevel2 0000                                 sprintf@ap 006C  
                      __end_of_motorLinit 1B6C                        __end_of_motorRinit 1B02  
                            motorRinit@mR 0001                               ??_norm_stop 0018  
                         ___aomod@divisor 0009                   __end_of_colorVal2String 1A98  
                             ??_vfpfcnvrt 0045                           ___aomod@counter 0011  
                        _color_click_init 1EF2                                  sprintf@f 006E  
                                sprintf@s 0060                                _SSP2DATPPS 000E1D  
                              _SSP2CLKPPS 000E1C                            _interrupt_flag 0172  
                             ??_turnRight 0018                                _TX4STAbits 000EE8  
                            ___aodiv@sign 0012                           _sendCharSerial4 208C  
                ??_Color_Interrupts_clear 0006                            RGBC2Serial@str 0006  
                            ___aomod@sign 0012  
