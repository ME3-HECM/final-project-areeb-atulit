

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Dec 08 11:49:34 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 06/04/2022 GMT
    57                           ; 
    58                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F67K40 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     _TRISBbits	set	3970
    91   000000                     _TX4REG	set	3812
    92   000000                     _RC4STAbits	set	3815
    93   000000                     _SP4BRGH	set	3814
    94   000000                     _LATHbits	set	3968
    95   000000                     _TRISCbits	set	3971
    96   000000                     _TRISDbits	set	3972
    97   000000                     _TRISEbits	set	3973
    98   000000                     _TRISFbits	set	3974
    99   000000                     _TRISAbits	set	3969
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _RX4PPS	set	3605
   102   000000                     _SSP2CLKPPS	set	3612
   103   000000                     _SSP2DATPPS	set	3613
   104   000000                     _ANSELDbits	set	3751
   105   000000                     _SSP2ADD	set	3798
   106   000000                     _SSP2CON1bits	set	3801
   107   000000                     _LATAbits	set	3961
   108   000000                     _LATGbits	set	3967
   109   000000                     _TRISGbits	set	3975
   110   000000                     _T2PR	set	4028
   111   000000                     _T2CONbits	set	4029
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _T0CON0bits	set	4053
   115   000000                     _T0CON1bits	set	4054
   116   000000                     _INTCONbits	set	4082
   117   000000                     _TRISHbits	set	3976
   118   000000                     _CCPR2H	set	4006
   119   000000                     _CCPR1H	set	4010
   120   000000                     _LATDbits	set	3964
   121   000000                     _LATEbits	set	3965
   122   000000                     _LATFbits	set	3966
   123   000000                     _RC4REG	set	3811
   124   000000                     _SP4BRGL	set	3813
   125   000000                     _TX4STAbits	set	3816
   126   000000                     _BAUD4CONbits	set	3817
   127   000000                     _SSP2CON2	set	3802
   128   000000                     _SSP2STAT	set	3800
   129   000000                     _SSP2BUF	set	3797
   130   000000                     _IPR0bits	set	3615
   131   000000                     _PIE0bits	set	3625
   132   000000                     _PIE4bits	set	3629
   133   000000                     _RC0PPS	set	3682
   134   000000                     _RD5PPS	set	3695
   135   000000                     _RE2PPS	set	3700
   136   000000                     _ANSELBbits	set	3738
   137   000000                     _RD6PPS	set	3696
   138   000000                     _RC7PPS	set	3689
   139   000000                     _CCPR4H	set	3873
   140   000000                     _CCPR3H	set	3877
   141   000000                     _PIR0bits	set	3635
   142   000000                     _PIR4bits	set	3639
   143   000000                     _RE4PPS	set	3702
   144   000000                     _RG6PPS	set	3720
   145   000000                     _T2CLKCONbits	set	4031
   146   000000                     _T2HLTbits	set	4030
   147   000000                     _CCP1CONbits	set	4011
   148   000000                     _CCPTMRS0bits	set	4013
   149   000000                     _CCP2CONbits	set	4007
   150   000000                     _CCP3CONbits	set	3878
   151   000000                     _CCP4CONbits	set	3874
   152                           
   153                           	psect	smallconst
   154   000E00                     __psmallconst:
   155                           	callstack 0
   156   000E00  00                 	db	0
   157   000E01                     
   158                           ; BSR set to: 14
   159   000E01  52                 	db	82	;'R'
   160   000E02  47                 	db	71	;'G'
   161   000E03  42                 	db	66	;'B'
   162   000E04  43                 	db	67	;'C'
   163   000E05  3A                 	db	58	;':'
   164   000E06  25                 	db	37
   165   000E07  69                 	db	105	;'i'
   166   000E08  20                 	db	32
   167   000E09  25                 	db	37
   168   000E0A  69                 	db	105	;'i'
   169   000E0B  20                 	db	32
   170   000E0C  25                 	db	37
   171   000E0D  69                 	db	105	;'i'
   172   000E0E  20                 	db	32
   173   000E0F  25                 	db	37
   174   000E10  69                 	db	105	;'i'
   175   000E11  0A                 	db	10
   176   000E12  00                 	db	0
   177   000E13  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   0016B0                     __pcinit:
   183                           	callstack 0
   184   0016B0                     start_initialization:
   185                           	callstack 0
   186   0016B0                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Clear objects allocated to BANK0 (80 bytes)
   190   0016B0  EE00  F060         	lfsr	0,__pbssBANK0
   191   0016B4  0E50               	movlw	80
   192   0016B6                     clear_0:
   193   0016B6  6AEE               	clrf	postinc0,c
   194   0016B8  06E8               	decf	wreg,f,c
   195   0016BA  E1FD               	bnz	clear_0
   196                           
   197                           ; Clear objects allocated to COMRAM (8 bytes)
   198   0016BC  EE00  F044         	lfsr	0,__pbssCOMRAM
   199   0016C0  0E08               	movlw	8
   200   0016C2                     clear_1:
   201   0016C2  6AEE               	clrf	postinc0,c
   202   0016C4  06E8               	decf	wreg,f,c
   203   0016C6  E1FD               	bnz	clear_1
   204   0016C8                     end_of_initialization:
   205                           	callstack 0
   206   0016C8                     __end_of__initialization:
   207                           	callstack 0
   208   0016C8  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   209   0016CA  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   210   0016CC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   211   0016CE  6EF8               	movwf	tblptru,c
   212   0016D0  0E0E               	movlw	high __Lsmallconst
   213   0016D2  6EF7               	movwf	tblptrh,c
   214   0016D4  0100               	movlb	0
   215   0016D6  EFC0  F007         	goto	_main	;jump to C main() function
   216                           
   217                           	psect	bssCOMRAM
   218   000044                     __pbssCOMRAM:
   219                           	callstack 0
   220   000044                     _interrupt_ctr:
   221                           	callstack 0
   222   000044                     	ds	2
   223   000046                     _interrupt_flag:
   224                           	callstack 0
   225   000046                     	ds	2
   226   000048                     _TxBufReadCnt:
   227                           	callstack 0
   228   000048                     	ds	1
   229   000049                     _TxBufWriteCnt:
   230                           	callstack 0
   231   000049                     	ds	1
   232   00004A                     _RxBufReadCnt:
   233                           	callstack 0
   234   00004A                     	ds	1
   235   00004B                     _RxBufWriteCnt:
   236                           	callstack 0
   237   00004B                     	ds	1
   238                           
   239                           	psect	bssBANK0
   240   000060                     __pbssBANK0:
   241                           	callstack 0
   242   000060                     _EUSART4TXbuf:
   243                           	callstack 0
   244   000060                     	ds	60
   245   00009C                     _EUSART4RXbuf:
   246                           	callstack 0
   247   00009C                     	ds	20
   248                           
   249                           	psect	cstackCOMRAM
   250   000001                     __pcstackCOMRAM:
   251                           	callstack 0
   252   000001                     ??i2_I2C_2_Master_Idle:
   253   000001                     
   254                           ; 1 bytes @ 0x0
   255   000001                     	ds	1
   256   000002                     i2I2C_2_Master_Write@data_byte:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x1
   260   000002                     	ds	1
   261   000003                     i2color_writetoaddr@value:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x2
   265   000003                     	ds	1
   266   000004                     i2color_writetoaddr@address:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x3
   270   000004                     	ds	1
   271   000005                     ??i2_Color_Interrupts_init:
   272   000005                     i2Color_Interrupts_threshold@upperThreshold:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x4
   276   000005                     	ds	2
   277   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   278                           	callstack 0
   279                           
   280                           ; 2 bytes @ 0x6
   281   000007                     	ds	2
   282   000009                     ??_I2C_2_Master_Idle:
   283   000009                     ?___wmul:
   284                           	callstack 0
   285   000009                     initDCmotorsPWM@PWMperiod:
   286                           	callstack 0
   287   000009                     motorLinit@mL:
   288                           	callstack 0
   289   000009                     motorRinit@mR:
   290                           	callstack 0
   291   000009                     ___wmul@multiplier:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x8
   295   000009                     	ds	1
   296   00000A                     ??_I2C_2_Master_Read:
   297   00000A                     I2C_2_Master_Write@data_byte:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x9
   301   00000A                     	ds	1
   302   00000B                     color_writetoaddr@value:
   303                           	callstack 0
   304   00000B                     I2C_2_Master_Read@ack:
   305                           	callstack 0
   306   00000B                     ___wmul@multiplicand:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xA
   310   00000B                     	ds	1
   311   00000C                     color_writetoaddr@address:
   312                           	callstack 0
   313   00000C                     I2C_2_Master_Read@tmp:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0xB
   317   00000C                     	ds	1
   318   00000D                     ??_Color_Interrupts_init:
   319   00000D                     ??_color_click_init:
   320   00000D                     ?_color_read_Red:
   321                           	callstack 0
   322   00000D                     ?_color_read_Green:
   323                           	callstack 0
   324   00000D                     ?_color_read_Blue:
   325                           	callstack 0
   326   00000D                     ?_color_read_Clear:
   327                           	callstack 0
   328   00000D                     Color_Interrupts_threshold@upperThreshold:
   329                           	callstack 0
   330   00000D                     ___wmul@product:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xC
   334   00000D                     	ds	2
   335   00000F                     ??_color_read_Red:
   336   00000F                     ??_color_read_Green:
   337   00000F                     ??_color_read_Blue:
   338   00000F                     ??_color_read_Clear:
   339   00000F                     ?___lwdiv:
   340                           	callstack 0
   341   00000F                     Color_Interrupts_threshold@lowerThreshold:
   342                           	callstack 0
   343   00000F                     ___lwdiv@dividend:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xE
   347   00000F                     	ds	2
   348   000011                     ___lwdiv@divisor:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x10
   352   000011                     	ds	1
   353   000012                     color_read_Red@tmp:
   354                           	callstack 0
   355   000012                     color_read_Green@tmp:
   356                           	callstack 0
   357   000012                     color_read_Blue@tmp:
   358                           	callstack 0
   359   000012                     color_read_Clear@tmp:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x11
   363   000012                     	ds	1
   364   000013                     ___lwdiv@quotient:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x12
   368   000013                     	ds	1
   369   000014                     color_read_RGBC@temp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x13
   373   000014                     	ds	1
   374   000015                     ___lwdiv@counter:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x14
   378   000015                     	ds	1
   379   000016                     setMotorPWM@m:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x15
   383   000016                     	ds	2
   384   000018                     ??_setMotorPWM:
   385                           
   386                           ; 1 bytes @ 0x17
   387   000018                     	ds	2
   388   00001A                     setMotorPWM@posDuty:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x19
   392   00001A                     	ds	1
   393   00001B                     setMotorPWM@negDuty:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x1A
   397   00001B                     	ds	1
   398   00001C                     norm_stop@mL:
   399                           	callstack 0
   400   00001C                     turnRight@mL:
   401                           	callstack 0
   402   00001C                     fullSpeedAhead@mL:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x1B
   406   00001C                     	ds	2
   407   00001E                     norm_stop@mR:
   408                           	callstack 0
   409   00001E                     turnRight@mR:
   410                           	callstack 0
   411   00001E                     fullSpeedAhead@mR:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x1D
   415   00001E                     	ds	2
   416   000020                     motor_response@temp:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x1F
   420   000020                     	ds	2
   421   000022                     motor_response@L:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x21
   425   000022                     	ds	2
   426   000024                     motor_response@R:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x23
   430   000024                     	ds	2
   431   000026                     ??_motor_response:
   432                           
   433                           ; 1 bytes @ 0x25
   434   000026                     	ds	2
   435   000028                     ??_main:
   436                           
   437                           ; 1 bytes @ 0x27
   438   000028                     	ds	2
   439   00002A                     main@RGBC:
   440                           	callstack 0
   441                           
   442                           ; 8 bytes @ 0x29
   443   00002A                     	ds	8
   444   000032                     main@mL:
   445                           	callstack 0
   446                           
   447                           ; 9 bytes @ 0x31
   448   000032                     	ds	9
   449   00003B                     main@mR:
   450                           	callstack 0
   451                           
   452                           ; 9 bytes @ 0x3A
   453   00003B                     	ds	9
   454                           
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 21 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;  buf           100    0        unsigned char [100]
   465 ;;  mR              9   58[COMRAM] struct DC_motor
   466 ;;  mL              9   49[COMRAM] struct DC_motor
   467 ;;  RGBC            8   41[COMRAM] struct RGBC_val
   468 ;;  lowerThresho    2    0        int 
   469 ;;  upperThresho    2    0        int 
   470 ;; Return value:  Size  Location     Type
   471 ;;                  1    wreg      void 
   472 ;; Registers used:
   473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   474 ;; Tracked objects:
   475 ;;		On entry : 0/0
   476 ;;		On exit  : 0/0
   477 ;;		Unchanged: 0/0
   478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   480 ;;      Locals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   481 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   482 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   483 ;;Total ram usage:       28 bytes
   484 ;; Hardware stack levels required when called: 10
   485 ;; This function calls:
   486 ;;		_Color_Interrupts_init
   487 ;;		_Color_Interrupts_threshold
   488 ;;		_Interrupts_init
   489 ;;		_color_click_init
   490 ;;		_color_read_RGBC
   491 ;;		_fullSpeedAhead
   492 ;;		_initDCmotorsPWM
   493 ;;		_motorLinit
   494 ;;		_motorRinit
   495 ;;		_motor_response
   496 ;;		_norm_stop
   497 ;;		_persistence_register
   498 ;;		_tricolorLED
   499 ;; This function is called by:
   500 ;;		Startup code after reset
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text0
   505   000F80                     __ptext0:
   506                           	callstack 0
   507   000F80                     _main:
   508                           	callstack 21
   509   000F80                     
   510                           ;main.c: 23:     tricolorLED();
   511   000F80  EC21  F00C         	call	_tricolorLED	;wreg free
   512   000F84                     
   513                           ;main.c: 29:     color_click_init();
   514   000F84  EC0C  F00B         	call	_color_click_init	;wreg free
   515   000F88                     
   516                           ;main.c: 31:     Interrupts_init();
   517   000F88  EC2C  F00C         	call	_Interrupts_init	;wreg free
   518                           
   519                           ;main.c: 32:     Color_Interrupts_init();
   520   000F8C  EC07  F00C         	call	_Color_Interrupts_init	;wreg free
   521                           
   522                           ;main.c: 33:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   523   000F90  0E13               	movlw	19
   524   000F92  6E0E               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
   525   000F94  0E88               	movlw	136
   526   000F96  6E0D               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
   527   000F98  0E00               	movlw	0
   528   000F9A  6E10               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
   529   000F9C  0E00               	movlw	0
   530   000F9E  6E0F               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
   531   000FA0  EC82  F00B         	call	_Color_Interrupts_threshold	;wreg free
   532                           
   533                           ;main.c: 34:     persistence_register();
   534   000FA4  EC37  F00C         	call	_persistence_register	;wreg free
   535   000FA8                     
   536                           ;main.c: 36:     initDCmotorsPWM(200);
   537   000FA8  0E00               	movlw	0
   538   000FAA  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   539   000FAC  0EC8               	movlw	200
   540   000FAE  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   541   000FB0  ECFF  F008         	call	_initDCmotorsPWM	;wreg free
   542   000FB4                     
   543                           ;main.c: 37:     DC_motor mL, mR;;main.c: 38:     motorLinit(&mL);
   544   000FB4  0E32               	movlw	low main@mL
   545   000FB6  6E09               	movwf	motorLinit@mL^0,c
   546   000FB8  0E00               	movlw	high main@mL
   547   000FBA  6E0A               	movwf	(motorLinit@mL+1)^0,c
   548   000FBC  ECE7  F009         	call	_motorLinit	;wreg free
   549   000FC0                     
   550                           ;main.c: 39:     motorRinit(&mR);
   551   000FC0  0E3B               	movlw	low main@mR
   552   000FC2  6E09               	movwf	motorRinit@mR^0,c
   553   000FC4  0E00               	movlw	high main@mR
   554   000FC6  6E0A               	movwf	(motorRinit@mR+1)^0,c
   555   000FC8  ECB2  F009         	call	_motorRinit	;wreg free
   556   000FCC                     
   557                           ;main.c: 41:     TRISEbits.TRISE2 = 0;
   558   000FCC  9485               	bcf	133,2,c	;volatile
   559   000FCE                     
   560                           ;main.c: 42:     TRISEbits.TRISE4 = 0;
   561   000FCE  9885               	bcf	133,4,c	;volatile
   562   000FD0                     
   563                           ;main.c: 43:     TRISCbits.TRISC7 = 0;
   564   000FD0  9E83               	bcf	131,7,c	;volatile
   565   000FD2                     
   566                           ;main.c: 44:     TRISGbits.TRISG6 = 0;
   567   000FD2  9C87               	bcf	135,6,c	;volatile
   568   000FD4                     
   569                           ;main.c: 45:     TRISDbits.TRISD7 = 0;
   570   000FD4  9E84               	bcf	132,7,c	;volatile
   571   000FD6                     
   572                           ;main.c: 46:     LATDbits.LATD7 = 0;
   573   000FD6  9E7C               	bcf	124,7,c	;volatile
   574   000FD8                     
   575                           ;main.c: 47:     TRISHbits.TRISH3 = 0;
   576   000FD8  9688               	bcf	136,3,c	;volatile
   577   000FDA                     
   578                           ;main.c: 48:     LATHbits.LATH3 = 0;
   579   000FDA  9680               	bcf	128,3,c	;volatile
   580   000FDC                     l1884:
   581                           
   582                           ;main.c: 51:         fullSpeedAhead(&mL, &mR);
   583   000FDC  0E32               	movlw	low main@mL
   584   000FDE  6E1C               	movwf	fullSpeedAhead@mL^0,c
   585   000FE0  0E00               	movlw	high main@mL
   586   000FE2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   587   000FE4  0E3B               	movlw	low main@mR
   588   000FE6  6E1E               	movwf	fullSpeedAhead@mR^0,c
   589   000FE8  0E00               	movlw	high main@mR
   590   000FEA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   591   000FEC  EC36  F008         	call	_fullSpeedAhead	;wreg free
   592   000FF0                     
   593                           ;main.c: 53:         LATHbits.LATH3 = 1;
   594   000FF0  8680               	bsf	128,3,c	;volatile
   595   000FF2                     
   596                           ;main.c: 54:         if (interrupt_flag == 1 ) {
   597   000FF2  0446               	decf	_interrupt_flag^0,w,c
   598   000FF4  1047               	iorwf	(_interrupt_flag+1)^0,w,c
   599   000FF6  A4D8               	btfss	status,2,c
   600   000FF8  EF00  F008         	goto	u431
   601   000FFC  EF02  F008         	goto	u430
   602   001000                     u431:
   603   001000  EFEE  F007         	goto	l1884
   604   001004                     u430:
   605   001004                     
   606                           ;main.c: 56:             norm_stop(&mL, &mR);
   607   001004  0E32               	movlw	low main@mL
   608   001006  6E1C               	movwf	norm_stop@mL^0,c
   609   001008  0E00               	movlw	high main@mL
   610   00100A  6E1D               	movwf	(norm_stop@mL+1)^0,c
   611   00100C  0E3B               	movlw	low main@mR
   612   00100E  6E1E               	movwf	norm_stop@mR^0,c
   613   001010  0E00               	movlw	high main@mR
   614   001012  6E1F               	movwf	(norm_stop@mR+1)^0,c
   615   001014  EC26  F00B         	call	_norm_stop	;wreg free
   616   001018                     
   617                           ;main.c: 57:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   618   001018  0E52               	movlw	82
   619   00101A  6E29               	movwf	(??_main+1)^0,c
   620   00101C  0E2B               	movlw	43
   621   00101E  6E28               	movwf	??_main^0,c
   622   001020  0E00               	movlw	0
   623   001022                     u537:
   624   001022  2EE8               	decfsz	wreg,f,c
   625   001024  D7FE               	bra	u537
   626   001026  2E28               	decfsz	??_main^0,f,c
   627   001028  D7FC               	bra	u537
   628   00102A  2E29               	decfsz	(??_main+1)^0,f,c
   629   00102C  D7FA               	bra	u537
   630   00102E  D000               	nop2	
   631   001030                     
   632                           ;main.c: 58:             LATDbits.LATD7 = 0;
   633   001030  9E7C               	bcf	124,7,c	;volatile
   634   001032                     
   635                           ;main.c: 59:             color_read_RGBC(&RGBC);
   636   001032  0E2A               	movlw	low main@RGBC
   637   001034  6E14               	movwf	color_read_RGBC@temp^0,c
   638   001036  0E00               	movlw	high main@RGBC
   639   001038  6E15               	movwf	(color_read_RGBC@temp+1)^0,c
   640   00103A  EC1C  F00A         	call	_color_read_RGBC	;wreg free
   641   00103E                     
   642                           ;main.c: 60:             motor_response(&RGBC,&mL,&mR);
   643   00103E  0E2A               	movlw	low main@RGBC
   644   001040  6E20               	movwf	motor_response@temp^0,c
   645   001042  0E00               	movlw	high main@RGBC
   646   001044  6E21               	movwf	(motor_response@temp+1)^0,c
   647   001046  0E32               	movlw	low main@mL
   648   001048  6E22               	movwf	motor_response@L^0,c
   649   00104A  0E00               	movlw	high main@mL
   650   00104C  6E23               	movwf	(motor_response@L+1)^0,c
   651   00104E  0E3B               	movlw	low main@mR
   652   001050  6E24               	movwf	motor_response@R^0,c
   653   001052  0E00               	movlw	high main@mR
   654   001054  6E25               	movwf	(motor_response@R+1)^0,c
   655   001056  ECAB  F008         	call	_motor_response	;wreg free
   656   00105A                     
   657                           ;main.c: 61:             LATHbits.LATH3 = 0;
   658   00105A  9680               	bcf	128,3,c	;volatile
   659   00105C                     
   660                           ;main.c: 62:             interrupt_flag = 0;
   661   00105C  0E00               	movlw	0
   662   00105E  6E47               	movwf	(_interrupt_flag+1)^0,c
   663   001060  0E00               	movlw	0
   664   001062  6E46               	movwf	_interrupt_flag^0,c
   665   001064  EFEE  F007         	goto	l1884
   666   001068  EF18  F000         	goto	start
   667   00106C                     __end_of_main:
   668                           	callstack 0
   669                           
   670 ;; *************** function _tricolorLED *****************
   671 ;; Defined at:
   672 ;;		line 104 in file "color.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;		None
   675 ;; Auto vars:     Size  Location     Type
   676 ;;		None
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      void 
   679 ;; Registers used:
   680 ;;		None
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   690 ;;Total ram usage:        0 bytes
   691 ;; Hardware stack levels used: 1
   692 ;; Hardware stack levels required when called: 6
   693 ;; This function calls:
   694 ;;		Nothing
   695 ;; This function is called by:
   696 ;;		_main
   697 ;; This function uses a non-reentrant model
   698 ;;
   699                           
   700                           	psect	text1
   701   001842                     __ptext1:
   702                           	callstack 0
   703   001842                     _tricolorLED:
   704                           	callstack 24
   705   001842                     
   706                           ;color.c: 106:     TRISGbits.TRISG0 = 0;
   707   001842  9087               	bcf	135,0,c	;volatile
   708                           
   709                           ;color.c: 107:     LATGbits.LATG0 = 1;
   710   001844  807F               	bsf	127,0,c	;volatile
   711                           
   712                           ;color.c: 108:     TRISAbits.TRISA4 = 0;
   713   001846  9881               	bcf	129,4,c	;volatile
   714                           
   715                           ;color.c: 109:     LATAbits.LATA4= 1;
   716   001848  8879               	bsf	121,4,c	;volatile
   717                           
   718                           ;color.c: 110:     TRISFbits.TRISF7 = 0;
   719   00184A  9E86               	bcf	134,7,c	;volatile
   720                           
   721                           ;color.c: 111:     LATFbits.LATF7 = 1;
   722   00184C  8E7E               	bsf	126,7,c	;volatile
   723                           
   724                           ;color.c: 112:     TRISAbits.TRISA3 = 0;
   725   00184E  9681               	bcf	129,3,c	;volatile
   726                           
   727                           ;color.c: 113:     LATAbits.LATA3 = 1;
   728   001850  8679               	bsf	121,3,c	;volatile
   729                           
   730                           ;color.c: 114:     TRISEbits.TRISE7 = 0;
   731   001852  9E85               	bcf	133,7,c	;volatile
   732                           
   733                           ;color.c: 115:     LATEbits.LATE7 = 1;
   734   001854  8E7D               	bsf	125,7,c	;volatile
   735   001856  0012               	return		;funcret
   736   001858                     __end_of_tricolorLED:
   737                           	callstack 0
   738                           
   739 ;; *************** function _persistence_register *****************
   740 ;; Defined at:
   741 ;;		line 46 in file "interrupts.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 9
   762 ;; This function calls:
   763 ;;		_color_writetoaddr
   764 ;; This function is called by:
   765 ;;		_main
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text2
   770   00186E                     __ptext2:
   771                           	callstack 0
   772   00186E                     _persistence_register:
   773                           	callstack 21
   774   00186E                     
   775                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   776   00186E  0E02               	movlw	2
   777   001870  6E0B               	movwf	color_writetoaddr@value^0,c
   778   001872  0E0C               	movlw	12
   779   001874  ECE7  F00B         	call	_color_writetoaddr
   780   001878  0012               	return		;funcret
   781   00187A                     __end_of_persistence_register:
   782                           	callstack 0
   783                           
   784 ;; *************** function _motor_response *****************
   785 ;; Defined at:
   786 ;;		line 118 in file "color.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  temp            2   31[COMRAM] PTR struct RGBC_val
   789 ;;		 -> main@RGBC(8), 
   790 ;;  L               2   33[COMRAM] PTR struct DC_motor
   791 ;;		 -> main@mL(9), 
   792 ;;  R               2   35[COMRAM] PTR struct DC_motor
   793 ;;		 -> main@mR(9), 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   807 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   808 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   809 ;;Total ram usage:        8 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 9
   812 ;; This function calls:
   813 ;;		_norm_stop
   814 ;;		_turnRight
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text3
   821   001156                     __ptext3:
   822                           	callstack 0
   823   001156                     _motor_response:
   824                           	callstack 21
   825   001156                     
   826                           ;color.c: 119:     if (temp->C > 2000) {
   827   001156  EE20 F006          	lfsr	2,6
   828   00115A  5020               	movf	motor_response@temp^0,w,c
   829   00115C  26D9               	addwf	fsr2l,f,c
   830   00115E  5021               	movf	(motor_response@temp+1)^0,w,c
   831   001160  22DA               	addwfc	fsr2h,f,c
   832   001162  0ED1               	movlw	209
   833   001164  5CDE               	subwf	postinc2,w,c
   834   001166  0E07               	movlw	7
   835   001168  58DE               	subwfb	postinc2,w,c
   836   00116A  A0D8               	btfss	status,0,c
   837   00116C  EFBA  F008         	goto	u391
   838   001170  EFBC  F008         	goto	u390
   839   001174                     u391:
   840   001174  EFFE  F008         	goto	l90
   841   001178                     u390:
   842   001178                     
   843                           ;color.c: 122:         norm_stop(L,R);
   844   001178  C022  F01C         	movff	motor_response@L,norm_stop@mL
   845   00117C  C023  F01D         	movff	motor_response@L+1,norm_stop@mL+1
   846   001180  C024  F01E         	movff	motor_response@R,norm_stop@mR
   847   001184  C025  F01F         	movff	motor_response@R+1,norm_stop@mR+1
   848   001188  EC26  F00B         	call	_norm_stop	;wreg free
   849   00118C                     
   850                           ;color.c: 123:         _delay((unsigned long)((100)*(64000000/4000.0)));
   851   00118C  0E09               	movlw	9
   852   00118E  6E27               	movwf	(??_motor_response+1)^0,c
   853   001190  0E1E               	movlw	30
   854   001192  6E26               	movwf	??_motor_response^0,c
   855   001194  0EE4               	movlw	228
   856   001196                     u547:
   857   001196  2EE8               	decfsz	wreg,f,c
   858   001198  D7FE               	bra	u547
   859   00119A  2E26               	decfsz	??_motor_response^0,f,c
   860   00119C  D7FC               	bra	u547
   861   00119E  2E27               	decfsz	(??_motor_response+1)^0,f,c
   862   0011A0  D7FA               	bra	u547
   863   0011A2  D000               	nop2	
   864   0011A4                     
   865                           ;color.c: 124:         turnRight(L,R);
   866   0011A4  C022  F01C         	movff	motor_response@L,turnRight@mL
   867   0011A8  C023  F01D         	movff	motor_response@L+1,turnRight@mL+1
   868   0011AC  C024  F01E         	movff	motor_response@R,turnRight@mR
   869   0011B0  C025  F01F         	movff	motor_response@R+1,turnRight@mR+1
   870   0011B4  EC79  F009         	call	_turnRight	;wreg free
   871                           
   872                           ;color.c: 125:         _delay((unsigned long)((210)*(64000000/4000.0)));
   873   0011B8  0E12               	movlw	18
   874   0011BA  6E27               	movwf	(??_motor_response+1)^0,c
   875   0011BC  0E0C               	movlw	12
   876   0011BE  6E26               	movwf	??_motor_response^0,c
   877   0011C0  0E95               	movlw	149
   878   0011C2                     u557:
   879   0011C2  2EE8               	decfsz	wreg,f,c
   880   0011C4  D7FE               	bra	u557
   881   0011C6  2E26               	decfsz	??_motor_response^0,f,c
   882   0011C8  D7FC               	bra	u557
   883   0011CA  2E27               	decfsz	(??_motor_response+1)^0,f,c
   884   0011CC  D7FA               	bra	u557
   885   0011CE  F000               	nop	
   886   0011D0                     
   887                           ;color.c: 126:         norm_stop(L,R);
   888   0011D0  C022  F01C         	movff	motor_response@L,norm_stop@mL
   889   0011D4  C023  F01D         	movff	motor_response@L+1,norm_stop@mL+1
   890   0011D8  C024  F01E         	movff	motor_response@R,norm_stop@mR
   891   0011DC  C025  F01F         	movff	motor_response@R+1,norm_stop@mR+1
   892   0011E0  EC26  F00B         	call	_norm_stop	;wreg free
   893   0011E4                     
   894                           ;color.c: 127:         _delay((unsigned long)((100)*(64000000/4000.0)));
   895   0011E4  0E09               	movlw	9
   896   0011E6  6E27               	movwf	(??_motor_response+1)^0,c
   897   0011E8  0E1E               	movlw	30
   898   0011EA  6E26               	movwf	??_motor_response^0,c
   899   0011EC  0EE4               	movlw	228
   900   0011EE                     u567:
   901   0011EE  2EE8               	decfsz	wreg,f,c
   902   0011F0  D7FE               	bra	u567
   903   0011F2  2E26               	decfsz	??_motor_response^0,f,c
   904   0011F4  D7FC               	bra	u567
   905   0011F6  2E27               	decfsz	(??_motor_response+1)^0,f,c
   906   0011F8  D7FA               	bra	u567
   907   0011FA  D000               	nop2	
   908   0011FC                     l90:
   909   0011FC  0012               	return		;funcret
   910   0011FE                     __end_of_motor_response:
   911                           	callstack 0
   912                           
   913 ;; *************** function _turnRight *****************
   914 ;; Defined at:
   915 ;;		line 144 in file "dc_motor.c"
   916 ;; Parameters:    Size  Location     Type
   917 ;;  mL              2   27[COMRAM] PTR struct DC_motor
   918 ;;		 -> main@mL(9), 
   919 ;;  mR              2   29[COMRAM] PTR struct DC_motor
   920 ;;		 -> main@mR(9), 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   932 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   935 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   936 ;;Total ram usage:        4 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 8
   939 ;; This function calls:
   940 ;;		_setMotorPWM
   941 ;; This function is called by:
   942 ;;		_motor_response
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           
   946                           	psect	text4
   947   0012F2                     __ptext4:
   948                           	callstack 0
   949   0012F2                     _turnRight:
   950                           	callstack 21
   951   0012F2                     
   952                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
   953   0012F2  C01C  FFD9         	movff	turnRight@mL,fsr2l
   954   0012F6  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
   955   0012FA  0E32               	movlw	50
   956   0012FC  6EDF               	movwf	indf2,c
   957                           
   958                           ;dc_motor.c: 147:     mR->power = 50;
   959   0012FE  C01E  FFD9         	movff	turnRight@mR,fsr2l
   960   001302  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
   961   001306  0E32               	movlw	50
   962   001308  6EDF               	movwf	indf2,c
   963   00130A                     
   964                           ;dc_motor.c: 148:     mL->brakemode = 1;
   965   00130A  EE20 F002          	lfsr	2,2
   966   00130E  501C               	movf	turnRight@mL^0,w,c
   967   001310  26D9               	addwf	fsr2l,f,c
   968   001312  501D               	movf	(turnRight@mL+1)^0,w,c
   969   001314  22DA               	addwfc	fsr2h,f,c
   970   001316  0E01               	movlw	1
   971   001318  6EDF               	movwf	indf2,c
   972   00131A                     
   973                           ;dc_motor.c: 149:     mR->brakemode = 1;
   974   00131A  EE20 F002          	lfsr	2,2
   975   00131E  501E               	movf	turnRight@mR^0,w,c
   976   001320  26D9               	addwf	fsr2l,f,c
   977   001322  501F               	movf	(turnRight@mR+1)^0,w,c
   978   001324  22DA               	addwfc	fsr2h,f,c
   979   001326  0E01               	movlw	1
   980   001328  6EDF               	movwf	indf2,c
   981   00132A                     
   982                           ;dc_motor.c: 150:     mR->direction = 0;
   983   00132A  EE20 F001          	lfsr	2,1
   984   00132E  501E               	movf	turnRight@mR^0,w,c
   985   001330  26D9               	addwf	fsr2l,f,c
   986   001332  501F               	movf	(turnRight@mR+1)^0,w,c
   987   001334  22DA               	addwfc	fsr2h,f,c
   988   001336  0E00               	movlw	0
   989   001338  6EDF               	movwf	indf2,c
   990   00133A                     
   991                           ;dc_motor.c: 151:     mL->direction = 1;
   992   00133A  EE20 F001          	lfsr	2,1
   993   00133E  501C               	movf	turnRight@mL^0,w,c
   994   001340  26D9               	addwf	fsr2l,f,c
   995   001342  501D               	movf	(turnRight@mL+1)^0,w,c
   996   001344  22DA               	addwfc	fsr2h,f,c
   997   001346  0E01               	movlw	1
   998   001348  6EDF               	movwf	indf2,c
   999   00134A                     
  1000                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1001   00134A  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  1002   00134E  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  1003   001352  EC0A  F007         	call	_setMotorPWM	;wreg free
  1004   001356                     
  1005                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1006   001356  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  1007   00135A  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  1008   00135E  EC0A  F007         	call	_setMotorPWM	;wreg free
  1009   001362  0012               	return		;funcret
  1010   001364                     __end_of_turnRight:
  1011                           	callstack 0
  1012                           
  1013 ;; *************** function _norm_stop *****************
  1014 ;; Defined at:
  1015 ;;		line 118 in file "dc_motor.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1018 ;;		 -> main@mL(9), 
  1019 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1020 ;;		 -> main@mR(9), 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1035 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1036 ;;Total ram usage:        4 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 8
  1039 ;; This function calls:
  1040 ;;		_setMotorPWM
  1041 ;; This function is called by:
  1042 ;;		_motor_response
  1043 ;;		_main
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text5
  1048   00164C                     __ptext5:
  1049                           	callstack 0
  1050   00164C                     _norm_stop:
  1051                           	callstack 22
  1052   00164C                     
  1053                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1054   00164C  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  1055   001650  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  1056   001654  0E00               	movlw	0
  1057   001656  6EDF               	movwf	indf2,c
  1058                           
  1059                           ;dc_motor.c: 125:     mR->power = 0;
  1060   001658  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  1061   00165C  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  1062   001660  0E00               	movlw	0
  1063   001662  6EDF               	movwf	indf2,c
  1064   001664                     
  1065                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1066   001664  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  1067   001668  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1068   00166C  EC0A  F007         	call	_setMotorPWM	;wreg free
  1069   001670                     
  1070                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1071   001670  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  1072   001674  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1073   001678  EC0A  F007         	call	_setMotorPWM	;wreg free
  1074   00167C  0012               	return		;funcret
  1075   00167E                     __end_of_norm_stop:
  1076                           	callstack 0
  1077                           
  1078 ;; *************** function _motorRinit *****************
  1079 ;; Defined at:
  1080 ;;		line 88 in file "dc_motor.c"
  1081 ;; Parameters:    Size  Location     Type
  1082 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  1083 ;;		 -> main@mR(9), 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;		None
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1099 ;;Total ram usage:        2 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 6
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_main
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text6
  1110   001364                     __ptext6:
  1111                           	callstack 0
  1112   001364                     _motorRinit:
  1113                           	callstack 24
  1114   001364                     
  1115                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1116   001364  C009  FFD9         	movff	motorRinit@mR,fsr2l
  1117   001368  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  1118   00136C  0E32               	movlw	50
  1119   00136E  6EDF               	movwf	indf2,c
  1120   001370                     
  1121                           ;dc_motor.c: 91:     mR->direction = 1;
  1122   001370  EE20 F001          	lfsr	2,1
  1123   001374  5009               	movf	motorRinit@mR^0,w,c
  1124   001376  26D9               	addwf	fsr2l,f,c
  1125   001378  500A               	movf	(motorRinit@mR+1)^0,w,c
  1126   00137A  22DA               	addwfc	fsr2h,f,c
  1127   00137C  0E01               	movlw	1
  1128   00137E  6EDF               	movwf	indf2,c
  1129   001380                     
  1130                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1131   001380  EE20 F002          	lfsr	2,2
  1132   001384  5009               	movf	motorRinit@mR^0,w,c
  1133   001386  26D9               	addwf	fsr2l,f,c
  1134   001388  500A               	movf	(motorRinit@mR+1)^0,w,c
  1135   00138A  22DA               	addwfc	fsr2h,f,c
  1136   00138C  0E01               	movlw	1
  1137   00138E  6EDF               	movwf	indf2,c
  1138   001390                     
  1139                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1140   001390  EE20 F005          	lfsr	2,5
  1141   001394  5009               	movf	motorRinit@mR^0,w,c
  1142   001396  26D9               	addwf	fsr2l,f,c
  1143   001398  500A               	movf	(motorRinit@mR+1)^0,w,c
  1144   00139A  22DA               	addwfc	fsr2h,f,c
  1145   00139C  0E25               	movlw	37
  1146   00139E  6EDE               	movwf	postinc2,c
  1147   0013A0  0E0F               	movlw	15
  1148   0013A2  6EDD               	movwf	postdec2,c
  1149   0013A4                     
  1150                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1151   0013A4  EE20 F007          	lfsr	2,7
  1152   0013A8  5009               	movf	motorRinit@mR^0,w,c
  1153   0013AA  26D9               	addwf	fsr2l,f,c
  1154   0013AC  500A               	movf	(motorRinit@mR+1)^0,w,c
  1155   0013AE  22DA               	addwfc	fsr2h,f,c
  1156   0013B0  0E21               	movlw	33
  1157   0013B2  6EDE               	movwf	postinc2,c
  1158   0013B4  0E0F               	movlw	15
  1159   0013B6  6EDD               	movwf	postdec2,c
  1160   0013B8                     
  1161                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1162   0013B8  EE20 F003          	lfsr	2,3
  1163   0013BC  5009               	movf	motorRinit@mR^0,w,c
  1164   0013BE  26D9               	addwf	fsr2l,f,c
  1165   0013C0  500A               	movf	(motorRinit@mR+1)^0,w,c
  1166   0013C2  22DA               	addwfc	fsr2h,f,c
  1167   0013C4  0EC8               	movlw	200
  1168   0013C6  6EDE               	movwf	postinc2,c
  1169   0013C8  0E00               	movlw	0
  1170   0013CA  6EDD               	movwf	postdec2,c
  1171   0013CC  0012               	return		;funcret
  1172   0013CE                     __end_of_motorRinit:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _motorLinit *****************
  1176 ;; Defined at:
  1177 ;;		line 78 in file "dc_motor.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  1180 ;;		 -> main@mL(9), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;		None
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  1    wreg      void 
  1185 ;; Registers used:
  1186 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1196 ;;Total ram usage:        2 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 6
  1199 ;; This function calls:
  1200 ;;		Nothing
  1201 ;; This function is called by:
  1202 ;;		_main
  1203 ;; This function uses a non-reentrant model
  1204 ;;
  1205                           
  1206                           	psect	text7
  1207   0013CE                     __ptext7:
  1208                           	callstack 0
  1209   0013CE                     _motorLinit:
  1210                           	callstack 24
  1211   0013CE                     
  1212                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  1213   0013CE  C009  FFD9         	movff	motorLinit@mL,fsr2l
  1214   0013D2  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  1215   0013D6  0E32               	movlw	50
  1216   0013D8  6EDF               	movwf	indf2,c
  1217   0013DA                     
  1218                           ;dc_motor.c: 81:     mL->direction = 1;
  1219   0013DA  EE20 F001          	lfsr	2,1
  1220   0013DE  5009               	movf	motorLinit@mL^0,w,c
  1221   0013E0  26D9               	addwf	fsr2l,f,c
  1222   0013E2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1223   0013E4  22DA               	addwfc	fsr2h,f,c
  1224   0013E6  0E01               	movlw	1
  1225   0013E8  6EDF               	movwf	indf2,c
  1226   0013EA                     
  1227                           ;dc_motor.c: 82:     mL->brakemode = 1;
  1228   0013EA  EE20 F002          	lfsr	2,2
  1229   0013EE  5009               	movf	motorLinit@mL^0,w,c
  1230   0013F0  26D9               	addwf	fsr2l,f,c
  1231   0013F2  500A               	movf	(motorLinit@mL+1)^0,w,c
  1232   0013F4  22DA               	addwfc	fsr2h,f,c
  1233   0013F6  0E01               	movlw	1
  1234   0013F8  6EDF               	movwf	indf2,c
  1235   0013FA                     
  1236                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  1237   0013FA  EE20 F005          	lfsr	2,5
  1238   0013FE  5009               	movf	motorLinit@mL^0,w,c
  1239   001400  26D9               	addwf	fsr2l,f,c
  1240   001402  500A               	movf	(motorLinit@mL+1)^0,w,c
  1241   001404  22DA               	addwfc	fsr2h,f,c
  1242   001406  0EAA               	movlw	170
  1243   001408  6EDE               	movwf	postinc2,c
  1244   00140A  0E0F               	movlw	15
  1245   00140C  6EDD               	movwf	postdec2,c
  1246   00140E                     
  1247                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  1248   00140E  EE20 F007          	lfsr	2,7
  1249   001412  5009               	movf	motorLinit@mL^0,w,c
  1250   001414  26D9               	addwf	fsr2l,f,c
  1251   001416  500A               	movf	(motorLinit@mL+1)^0,w,c
  1252   001418  22DA               	addwfc	fsr2h,f,c
  1253   00141A  0EA6               	movlw	166
  1254   00141C  6EDE               	movwf	postinc2,c
  1255   00141E  0E0F               	movlw	15
  1256   001420  6EDD               	movwf	postdec2,c
  1257   001422                     
  1258                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  1259   001422  EE20 F003          	lfsr	2,3
  1260   001426  5009               	movf	motorLinit@mL^0,w,c
  1261   001428  26D9               	addwf	fsr2l,f,c
  1262   00142A  500A               	movf	(motorLinit@mL+1)^0,w,c
  1263   00142C  22DA               	addwfc	fsr2h,f,c
  1264   00142E  0EC8               	movlw	200
  1265   001430  6EDE               	movwf	postinc2,c
  1266   001432  0E00               	movlw	0
  1267   001434  6EDD               	movwf	postdec2,c
  1268   001436  0012               	return		;funcret
  1269   001438                     __end_of_motorLinit:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _initDCmotorsPWM *****************
  1273 ;; Defined at:
  1274 ;;		line 5 in file "dc_motor.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, status,2
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1292 ;;Total ram usage:        2 bytes
  1293 ;; Hardware stack levels used: 1
  1294 ;; Hardware stack levels required when called: 6
  1295 ;; This function calls:
  1296 ;;		Nothing
  1297 ;; This function is called by:
  1298 ;;		_main
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text8
  1303   0011FE                     __ptext8:
  1304                           	callstack 0
  1305   0011FE                     _initDCmotorsPWM:
  1306                           	callstack 24
  1307   0011FE                     
  1308                           ;dc_motor.c: 9:     RE2PPS=0x05;
  1309   0011FE  0E05               	movlw	5
  1310   001200  010E               	movlb	14	; () banked
  1311   001202  6F74               	movwf	116,b	;volatile
  1312                           
  1313                           ;dc_motor.c: 10:     RE4PPS=0x06;
  1314   001204  0E06               	movlw	6
  1315   001206  6F76               	movwf	118,b	;volatile
  1316                           
  1317                           ;dc_motor.c: 11:     RC7PPS=0x07;
  1318   001208  0E07               	movlw	7
  1319   00120A  6F69               	movwf	105,b	;volatile
  1320                           
  1321                           ;dc_motor.c: 12:     RG6PPS=0x08;
  1322   00120C  0E08               	movlw	8
  1323   00120E  6F88               	movwf	136,b	;volatile
  1324                           
  1325                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  1326   001210  50BD               	movf	189,w,c	;volatile
  1327   001212  0B8F               	andlw	-113
  1328   001214  0930               	iorlw	48
  1329   001216  6EBD               	movwf	189,c	;volatile
  1330                           
  1331                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  1332   001218  0EE0               	movlw	-32
  1333   00121A  16BE               	andwf	190,f,c	;volatile
  1334                           
  1335                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  1336   00121C  50BF               	movf	191,w,c	;volatile
  1337   00121E  0BF0               	andlw	-16
  1338   001220  0901               	iorlw	1
  1339   001222  6EBF               	movwf	191,c	;volatile
  1340                           
  1341                           ;dc_motor.c: 21:     T2PR=200;
  1342   001224  0EC8               	movlw	200
  1343   001226  6EBC               	movwf	188,c	;volatile
  1344   001228                     
  1345                           ; BSR set to: 14
  1346                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  1347   001228  8EBD               	bsf	189,7,c	;volatile
  1348                           
  1349                           ;dc_motor.c: 26:     CCPR1H=0;
  1350   00122A  0E00               	movlw	0
  1351   00122C  6EAA               	movwf	170,c	;volatile
  1352                           
  1353                           ;dc_motor.c: 27:     CCPR2H=0;
  1354   00122E  0E00               	movlw	0
  1355   001230  6EA6               	movwf	166,c	;volatile
  1356                           
  1357                           ;dc_motor.c: 28:     CCPR3H=0;
  1358   001232  0E00               	movlw	0
  1359   001234  010F               	movlb	15	; () banked
  1360   001236  6F25               	movwf	37,b	;volatile
  1361                           
  1362                           ;dc_motor.c: 29:     CCPR4H=0;
  1363   001238  0E00               	movlw	0
  1364   00123A  6F21               	movwf	33,b	;volatile
  1365                           
  1366                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  1367   00123C  0EFC               	movlw	-4
  1368   00123E  16AD               	andwf	173,f,c	;volatile
  1369                           
  1370                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  1371   001240  0EF3               	movlw	-13
  1372   001242  16AD               	andwf	173,f,c	;volatile
  1373                           
  1374                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  1375   001244  0ECF               	movlw	-49
  1376   001246  16AD               	andwf	173,f,c	;volatile
  1377                           
  1378                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  1379   001248  0E3F               	movlw	-193
  1380   00124A  16AD               	andwf	173,f,c	;volatile
  1381   00124C                     
  1382                           ; BSR set to: 15
  1383                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  1384   00124C  88AB               	bsf	171,4,c	;volatile
  1385                           
  1386                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  1387   00124E  50AB               	movf	171,w,c	;volatile
  1388   001250  0BF0               	andlw	-16
  1389   001252  090C               	iorlw	12
  1390   001254  6EAB               	movwf	171,c	;volatile
  1391   001256                     
  1392                           ; BSR set to: 15
  1393                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  1394   001256  8EAB               	bsf	171,7,c	;volatile
  1395   001258                     
  1396                           ; BSR set to: 15
  1397                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  1398   001258  88A7               	bsf	167,4,c	;volatile
  1399                           
  1400                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  1401   00125A  50A7               	movf	167,w,c	;volatile
  1402   00125C  0BF0               	andlw	-16
  1403   00125E  090C               	iorlw	12
  1404   001260  6EA7               	movwf	167,c	;volatile
  1405   001262                     
  1406                           ; BSR set to: 15
  1407                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  1408   001262  8EA7               	bsf	167,7,c	;volatile
  1409   001264                     
  1410                           ; BSR set to: 15
  1411                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  1412   001264  8926               	bsf	38,4,b	;volatile
  1413                           
  1414                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  1415   001266  5126               	movf	38,w,b	;volatile
  1416   001268  0BF0               	andlw	-16
  1417   00126A  090C               	iorlw	12
  1418   00126C  6F26               	movwf	38,b	;volatile
  1419   00126E                     
  1420                           ; BSR set to: 15
  1421                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  1422   00126E  8F26               	bsf	38,7,b	;volatile
  1423   001270                     
  1424                           ; BSR set to: 15
  1425                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  1426   001270  8922               	bsf	34,4,b	;volatile
  1427                           
  1428                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  1429   001272  5122               	movf	34,w,b	;volatile
  1430   001274  0BF0               	andlw	-16
  1431   001276  090C               	iorlw	12
  1432   001278  6F22               	movwf	34,b	;volatile
  1433   00127A                     
  1434                           ; BSR set to: 15
  1435                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  1436   00127A  8F22               	bsf	34,7,b	;volatile
  1437   00127C                     
  1438                           ; BSR set to: 15
  1439   00127C  0012               	return		;funcret
  1440   00127E                     __end_of_initDCmotorsPWM:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _fullSpeedAhead *****************
  1444 ;; Defined at:
  1445 ;;		line 167 in file "dc_motor.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1448 ;;		 -> main@mL(9), 
  1449 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1450 ;;		 -> main@mR(9), 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;Total ram usage:        5 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 8
  1469 ;; This function calls:
  1470 ;;		_setMotorPWM
  1471 ;; This function is called by:
  1472 ;;		_main
  1473 ;; This function uses a non-reentrant model
  1474 ;;
  1475                           
  1476                           	psect	text9
  1477   00106C                     __ptext9:
  1478                           	callstack 0
  1479   00106C                     _fullSpeedAhead:
  1480                           	callstack 22
  1481   00106C                     
  1482                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  1483   00106C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1484   001070  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1485   001074  0E05               	movlw	5
  1486   001076  6EDF               	movwf	indf2,c
  1487                           
  1488                           ;dc_motor.c: 170:     mR->power = 5;
  1489   001078  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1490   00107C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1491   001080  0E05               	movlw	5
  1492   001082  6EDF               	movwf	indf2,c
  1493   001084                     
  1494                           ;dc_motor.c: 171:     mR->direction = 1;
  1495   001084  EE20 F001          	lfsr	2,1
  1496   001088  501E               	movf	fullSpeedAhead@mR^0,w,c
  1497   00108A  26D9               	addwf	fsr2l,f,c
  1498   00108C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1499   00108E  22DA               	addwfc	fsr2h,f,c
  1500   001090  0E01               	movlw	1
  1501   001092  6EDF               	movwf	indf2,c
  1502   001094                     
  1503                           ;dc_motor.c: 172:     mL->direction = 1;
  1504   001094  EE20 F001          	lfsr	2,1
  1505   001098  501C               	movf	fullSpeedAhead@mL^0,w,c
  1506   00109A  26D9               	addwf	fsr2l,f,c
  1507   00109C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1508   00109E  22DA               	addwfc	fsr2h,f,c
  1509   0010A0  0E01               	movlw	1
  1510   0010A2  6EDF               	movwf	indf2,c
  1511   0010A4                     
  1512                           ;dc_motor.c: 173:     mL->brakemode = 1;
  1513   0010A4  EE20 F002          	lfsr	2,2
  1514   0010A8  501C               	movf	fullSpeedAhead@mL^0,w,c
  1515   0010AA  26D9               	addwf	fsr2l,f,c
  1516   0010AC  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  1517   0010AE  22DA               	addwfc	fsr2h,f,c
  1518   0010B0  0E01               	movlw	1
  1519   0010B2  6EDF               	movwf	indf2,c
  1520   0010B4                     
  1521                           ;dc_motor.c: 174:     mR->brakemode = 1;
  1522   0010B4  EE20 F002          	lfsr	2,2
  1523   0010B8  501E               	movf	fullSpeedAhead@mR^0,w,c
  1524   0010BA  26D9               	addwf	fsr2l,f,c
  1525   0010BC  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  1526   0010BE  22DA               	addwfc	fsr2h,f,c
  1527   0010C0  0E01               	movlw	1
  1528   0010C2  6EDF               	movwf	indf2,c
  1529                           
  1530                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1531   0010C4  EF7A  F008         	goto	l1832
  1532   0010C8                     l1826:
  1533                           
  1534                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  1535   0010C8  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1536   0010CC  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1537   0010D0  2ADF               	incf	indf2,f,c
  1538                           
  1539                           ;dc_motor.c: 178:         mR->power++;
  1540   0010D2  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1541   0010D6  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1542   0010DA  2ADF               	incf	indf2,f,c
  1543   0010DC                     
  1544                           ;dc_motor.c: 180:         setMotorPWM(mL);
  1545   0010DC  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1546   0010E0  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1547   0010E4  EC0A  F007         	call	_setMotorPWM	;wreg free
  1548   0010E8                     
  1549                           ;dc_motor.c: 181:         setMotorPWM(mR);
  1550   0010E8  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1551   0010EC  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1552   0010F0  EC0A  F007         	call	_setMotorPWM	;wreg free
  1553   0010F4                     l1832:
  1554                           
  1555                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  1556   0010F4  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1557   0010F8  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1558   0010FC  0E15               	movlw	21
  1559   0010FE  60DF               	cpfslt	indf2,c
  1560   001100  EF84  F008         	goto	u401
  1561   001104  EF86  F008         	goto	u400
  1562   001108                     u401:
  1563   001108  EF92  F008         	goto	l1836
  1564   00110C                     u400:
  1565   00110C  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1566   001110  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1567   001114  0E14               	movlw	20
  1568   001116  64DF               	cpfsgt	indf2,c
  1569   001118  EF90  F008         	goto	u411
  1570   00111C  EF92  F008         	goto	u410
  1571   001120                     u411:
  1572   001120  EF64  F008         	goto	l1826
  1573   001124                     u410:
  1574   001124                     l1836:
  1575                           
  1576                           ;dc_motor.c: 183:     mL->power = 20;
  1577   001124  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  1578   001128  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  1579   00112C  0E14               	movlw	20
  1580   00112E  6EDF               	movwf	indf2,c
  1581                           
  1582                           ;dc_motor.c: 184:     mR->power = 20;
  1583   001130  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  1584   001134  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  1585   001138  0E14               	movlw	20
  1586   00113A  6EDF               	movwf	indf2,c
  1587   00113C                     
  1588                           ;dc_motor.c: 185:     setMotorPWM(mL);
  1589   00113C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  1590   001140  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  1591   001144  EC0A  F007         	call	_setMotorPWM	;wreg free
  1592   001148                     
  1593                           ;dc_motor.c: 186:     setMotorPWM(mR);
  1594   001148  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  1595   00114C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  1596   001150  EC0A  F007         	call	_setMotorPWM	;wreg free
  1597   001154  0012               	return		;funcret
  1598   001156                     __end_of_fullSpeedAhead:
  1599                           	callstack 0
  1600                           
  1601 ;; *************** function _setMotorPWM *****************
  1602 ;; Defined at:
  1603 ;;		line 56 in file "dc_motor.c"
  1604 ;; Parameters:    Size  Location     Type
  1605 ;;  m               2   21[COMRAM] PTR struct DC_motor
  1606 ;;		 -> main@mR(9), main@mL(9), 
  1607 ;; Auto vars:     Size  Location     Type
  1608 ;;  negDuty         1   26[COMRAM] unsigned char 
  1609 ;;  posDuty         1   25[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1620 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1622 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1623 ;;Total ram usage:        6 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 7
  1626 ;; This function calls:
  1627 ;;		___lwdiv
  1628 ;;		___wmul
  1629 ;; This function is called by:
  1630 ;;		_norm_stop
  1631 ;;		_turnRight
  1632 ;;		_fullSpeedAhead
  1633 ;;		_stop
  1634 ;;		_turnLeft
  1635 ;;		_uturn
  1636 ;;		_reverse
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text10
  1641   000E14                     __ptext10:
  1642                           	callstack 0
  1643   000E14                     _setMotorPWM:
  1644                           	callstack 22
  1645   000E14                     
  1646                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  1647   000E14  EE20 F002          	lfsr	2,2
  1648   000E18  5016               	movf	setMotorPWM@m^0,w,c
  1649   000E1A  26D9               	addwf	fsr2l,f,c
  1650   000E1C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1651   000E1E  22DA               	addwfc	fsr2h,f,c
  1652   000E20  50DF               	movf	indf2,w,c
  1653   000E22  B4D8               	btfsc	status,2,c
  1654   000E24  EF16  F007         	goto	u371
  1655   000E28  EF18  F007         	goto	u370
  1656   000E2C                     u371:
  1657   000E2C  EF4C  F007         	goto	l1674
  1658   000E30                     u370:
  1659   000E30                     
  1660                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  1661   000E30  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1662   000E34  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1663   000E38  50DF               	movf	indf2,w,c
  1664   000E3A  6E18               	movwf	??_setMotorPWM^0,c
  1665   000E3C  5018               	movf	??_setMotorPWM^0,w,c
  1666   000E3E  6E09               	movwf	___wmul@multiplier^0,c
  1667   000E40  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1668   000E42  EE20 F003          	lfsr	2,3
  1669   000E46  5016               	movf	setMotorPWM@m^0,w,c
  1670   000E48  26D9               	addwf	fsr2l,f,c
  1671   000E4A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1672   000E4C  22DA               	addwfc	fsr2h,f,c
  1673   000E4E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1674   000E52  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1675   000E56  ECD4  F00B         	call	___wmul	;wreg free
  1676   000E5A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1677   000E5E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1678   000E62  0E00               	movlw	0
  1679   000E64  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1680   000E66  0E64               	movlw	100
  1681   000E68  6E11               	movwf	___lwdiv@divisor^0,c
  1682   000E6A  EC3F  F009         	call	___lwdiv	;wreg free
  1683   000E6E  EE20 F003          	lfsr	2,3
  1684   000E72  5016               	movf	setMotorPWM@m^0,w,c
  1685   000E74  26D9               	addwf	fsr2l,f,c
  1686   000E76  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1687   000E78  22DA               	addwfc	fsr2h,f,c
  1688   000E7A  50DF               	movf	indf2,w,c
  1689   000E7C  6E19               	movwf	(??_setMotorPWM+1)^0,c
  1690   000E7E  500F               	movf	?___lwdiv^0,w,c
  1691   000E80  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  1692   000E82  6E1A               	movwf	setMotorPWM@posDuty^0,c
  1693   000E84                     
  1694                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  1695   000E84  EE20 F003          	lfsr	2,3
  1696   000E88  5016               	movf	setMotorPWM@m^0,w,c
  1697   000E8A  26D9               	addwf	fsr2l,f,c
  1698   000E8C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1699   000E8E  22DA               	addwfc	fsr2h,f,c
  1700   000E90  50DF               	movf	indf2,w,c
  1701   000E92  6E1B               	movwf	setMotorPWM@negDuty^0,c
  1702                           
  1703                           ;dc_motor.c: 63:     }
  1704   000E94  EF6F  F007         	goto	l1678
  1705   000E98                     l1674:
  1706                           
  1707                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  1708   000E98  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  1709   000E9C  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  1710   000EA0  50DF               	movf	indf2,w,c
  1711   000EA2  6E18               	movwf	??_setMotorPWM^0,c
  1712   000EA4  5018               	movf	??_setMotorPWM^0,w,c
  1713   000EA6  6E09               	movwf	___wmul@multiplier^0,c
  1714   000EA8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  1715   000EAA  EE20 F003          	lfsr	2,3
  1716   000EAE  5016               	movf	setMotorPWM@m^0,w,c
  1717   000EB0  26D9               	addwf	fsr2l,f,c
  1718   000EB2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1719   000EB4  22DA               	addwfc	fsr2h,f,c
  1720   000EB6  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  1721   000EBA  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  1722   000EBE  ECD4  F00B         	call	___wmul	;wreg free
  1723   000EC2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  1724   000EC6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  1725   000ECA  0E00               	movlw	0
  1726   000ECC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  1727   000ECE  0E64               	movlw	100
  1728   000ED0  6E11               	movwf	___lwdiv@divisor^0,c
  1729   000ED2  EC3F  F009         	call	___lwdiv	;wreg free
  1730   000ED6  500F               	movf	?___lwdiv^0,w,c
  1731   000ED8  6E1A               	movwf	setMotorPWM@posDuty^0,c
  1732   000EDA                     
  1733                           ;dc_motor.c: 66:         negDuty=0;
  1734   000EDA  0E00               	movlw	0
  1735   000EDC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  1736   000EDE                     l1678:
  1737                           
  1738                           ;dc_motor.c: 69:     if (m->direction) {
  1739   000EDE  EE20 F001          	lfsr	2,1
  1740   000EE2  5016               	movf	setMotorPWM@m^0,w,c
  1741   000EE4  26D9               	addwf	fsr2l,f,c
  1742   000EE6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1743   000EE8  22DA               	addwfc	fsr2h,f,c
  1744   000EEA  50DF               	movf	indf2,w,c
  1745   000EEC  B4D8               	btfsc	status,2,c
  1746   000EEE  EF7B  F007         	goto	u381
  1747   000EF2  EF7D  F007         	goto	u380
  1748   000EF6                     u381:
  1749   000EF6  EF9F  F007         	goto	l1682
  1750   000EFA                     u380:
  1751   000EFA                     
  1752                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  1753   000EFA  EE20 F005          	lfsr	2,5
  1754   000EFE  5016               	movf	setMotorPWM@m^0,w,c
  1755   000F00  26D9               	addwf	fsr2l,f,c
  1756   000F02  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1757   000F04  22DA               	addwfc	fsr2h,f,c
  1758   000F06  CFDE F018          	movff	postinc2,??_setMotorPWM
  1759   000F0A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1760   000F0E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1761   000F12  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1762   000F16  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1763                           
  1764                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  1765   000F1A  EE20 F007          	lfsr	2,7
  1766   000F1E  5016               	movf	setMotorPWM@m^0,w,c
  1767   000F20  26D9               	addwf	fsr2l,f,c
  1768   000F22  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1769   000F24  22DA               	addwfc	fsr2h,f,c
  1770   000F26  CFDE F018          	movff	postinc2,??_setMotorPWM
  1771   000F2A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1772   000F2E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1773   000F32  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1774   000F36  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1775                           
  1776                           ;dc_motor.c: 72:     } else {
  1777   000F3A  EFBF  F007         	goto	l429
  1778   000F3E                     l1682:
  1779                           
  1780                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  1781   000F3E  EE20 F005          	lfsr	2,5
  1782   000F42  5016               	movf	setMotorPWM@m^0,w,c
  1783   000F44  26D9               	addwf	fsr2l,f,c
  1784   000F46  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1785   000F48  22DA               	addwfc	fsr2h,f,c
  1786   000F4A  CFDE F018          	movff	postinc2,??_setMotorPWM
  1787   000F4E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1788   000F52  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1789   000F56  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1790   000F5A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  1791                           
  1792                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  1793   000F5E  EE20 F007          	lfsr	2,7
  1794   000F62  5016               	movf	setMotorPWM@m^0,w,c
  1795   000F64  26D9               	addwf	fsr2l,f,c
  1796   000F66  5017               	movf	(setMotorPWM@m+1)^0,w,c
  1797   000F68  22DA               	addwfc	fsr2h,f,c
  1798   000F6A  CFDE F018          	movff	postinc2,??_setMotorPWM
  1799   000F6E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  1800   000F72  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  1801   000F76  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  1802   000F7A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  1803   000F7E                     l429:
  1804   000F7E  0012               	return		;funcret
  1805   000F80                     __end_of_setMotorPWM:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function ___wmul *****************
  1809 ;; Defined at:
  1810 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  multiplier      2    8[COMRAM] unsigned int 
  1813 ;;  multiplicand    2   10[COMRAM] unsigned int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  product         2   12[COMRAM] unsigned int 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    8[COMRAM] unsigned int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, prodl, prodh
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1825 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1828 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1829 ;;Total ram usage:        6 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 6
  1832 ;; This function calls:
  1833 ;;		Nothing
  1834 ;; This function is called by:
  1835 ;;		_setMotorPWM
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           	psect	text11
  1840   0017A8                     __ptext11:
  1841                           	callstack 0
  1842   0017A8                     ___wmul:
  1843                           	callstack 22
  1844   0017A8  5009               	movf	___wmul@multiplier^0,w,c
  1845   0017AA  020B               	mulwf	___wmul@multiplicand^0,c
  1846   0017AC  CFF3 F00D          	movff	prodl,___wmul@product
  1847   0017B0  CFF4 F00E          	movff	prodh,___wmul@product+1
  1848   0017B4  5009               	movf	___wmul@multiplier^0,w,c
  1849   0017B6  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  1850   0017B8  50F3               	movf	243,w,c
  1851   0017BA  260E               	addwf	(___wmul@product+1)^0,f,c
  1852   0017BC  500A               	movf	(___wmul@multiplier+1)^0,w,c
  1853   0017BE  020B               	mulwf	___wmul@multiplicand^0,c
  1854   0017C0  50F3               	movf	243,w,c
  1855   0017C2  260E               	addwf	(___wmul@product+1)^0,f,c
  1856   0017C4  C00D  F009         	movff	___wmul@product,?___wmul
  1857   0017C8  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  1858   0017CC  0012               	return		;funcret
  1859   0017CE                     __end_of___wmul:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function ___lwdiv *****************
  1863 ;; Defined at:
  1864 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  dividend        2   14[COMRAM] unsigned int 
  1867 ;;  divisor         2   16[COMRAM] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  quotient        2   18[COMRAM] unsigned int 
  1870 ;;  counter         1   20[COMRAM] unsigned char 
  1871 ;; Return value:  Size  Location     Type
  1872 ;;                  2   14[COMRAM] unsigned int 
  1873 ;; Registers used:
  1874 ;;		wreg, status,2, status,0
  1875 ;; Tracked objects:
  1876 ;;		On entry : 0/0
  1877 ;;		On exit  : 0/0
  1878 ;;		Unchanged: 0/0
  1879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1881 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1883 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;Total ram usage:        7 bytes
  1885 ;; Hardware stack levels used: 1
  1886 ;; Hardware stack levels required when called: 6
  1887 ;; This function calls:
  1888 ;;		Nothing
  1889 ;; This function is called by:
  1890 ;;		_setMotorPWM
  1891 ;; This function uses a non-reentrant model
  1892 ;;
  1893                           
  1894                           	psect	text12
  1895   00127E                     __ptext12:
  1896                           	callstack 0
  1897   00127E                     ___lwdiv:
  1898                           	callstack 22
  1899   00127E  0E00               	movlw	0
  1900   001280  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  1901   001282  0E00               	movlw	0
  1902   001284  6E13               	movwf	___lwdiv@quotient^0,c
  1903   001286  5011               	movf	___lwdiv@divisor^0,w,c
  1904   001288  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1905   00128A  B4D8               	btfsc	status,2,c
  1906   00128C  EF4A  F009         	goto	u341
  1907   001290  EF4C  F009         	goto	u340
  1908   001294                     u341:
  1909   001294  EF74  F009         	goto	l965
  1910   001298                     u340:
  1911   001298  0E01               	movlw	1
  1912   00129A  6E15               	movwf	___lwdiv@counter^0,c
  1913   00129C  EF54  F009         	goto	l1642
  1914   0012A0                     l1640:
  1915   0012A0  90D8               	bcf	status,0,c
  1916   0012A2  3611               	rlcf	___lwdiv@divisor^0,f,c
  1917   0012A4  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1918   0012A6  2A15               	incf	___lwdiv@counter^0,f,c
  1919   0012A8                     l1642:
  1920   0012A8  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  1921   0012AA  EF59  F009         	goto	u351
  1922   0012AE  EF5B  F009         	goto	u350
  1923   0012B2                     u351:
  1924   0012B2  EF50  F009         	goto	l1640
  1925   0012B6                     u350:
  1926   0012B6                     l1644:
  1927   0012B6  90D8               	bcf	status,0,c
  1928   0012B8  3613               	rlcf	___lwdiv@quotient^0,f,c
  1929   0012BA  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1930   0012BC  5011               	movf	___lwdiv@divisor^0,w,c
  1931   0012BE  5C0F               	subwf	___lwdiv@dividend^0,w,c
  1932   0012C0  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  1933   0012C2  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1934   0012C4  A0D8               	btfss	status,0,c
  1935   0012C6  EF67  F009         	goto	u361
  1936   0012CA  EF69  F009         	goto	u360
  1937   0012CE                     u361:
  1938   0012CE  EF6E  F009         	goto	l1652
  1939   0012D2                     u360:
  1940   0012D2  5011               	movf	___lwdiv@divisor^0,w,c
  1941   0012D4  5E0F               	subwf	___lwdiv@dividend^0,f,c
  1942   0012D6  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  1943   0012D8  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1944   0012DA  8013               	bsf	___lwdiv@quotient^0,0,c
  1945   0012DC                     l1652:
  1946   0012DC  90D8               	bcf	status,0,c
  1947   0012DE  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1948   0012E0  3211               	rrcf	___lwdiv@divisor^0,f,c
  1949   0012E2  2E15               	decfsz	___lwdiv@counter^0,f,c
  1950   0012E4  EF5B  F009         	goto	l1644
  1951   0012E8                     l965:
  1952   0012E8  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  1953   0012EC  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1954   0012F0  0012               	return		;funcret
  1955   0012F2                     __end_of___lwdiv:
  1956                           	callstack 0
  1957                           
  1958 ;; *************** function _color_read_RGBC *****************
  1959 ;; Defined at:
  1960 ;;		line 92 in file "color.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  temp            2   19[COMRAM] PTR struct RGBC_val
  1963 ;;		 -> main@RGBC(8), 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1979 ;;Total ram usage:        2 bytes
  1980 ;; Hardware stack levels used: 1
  1981 ;; Hardware stack levels required when called: 9
  1982 ;; This function calls:
  1983 ;;		_color_read_Blue
  1984 ;;		_color_read_Clear
  1985 ;;		_color_read_Green
  1986 ;;		_color_read_Red
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text13
  1993   001438                     __ptext13:
  1994                           	callstack 0
  1995   001438                     _color_read_RGBC:
  1996                           	callstack 21
  1997   001438                     
  1998                           ;color.c: 93:     temp->R = color_read_Red();
  1999   001438  EC4B  F00A         	call	_color_read_Red	;wreg free
  2000   00143C  C014  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2001   001440  C015  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2002   001444  C00D  FFDE         	movff	?_color_read_Red,postinc2
  2003   001448  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
  2004                           
  2005                           ;color.c: 94:     temp->B = color_read_Blue();
  2006   00144C  ECC3  F00A         	call	_color_read_Blue	;wreg free
  2007   001450  EE20 F004          	lfsr	2,4
  2008   001454  5014               	movf	color_read_RGBC@temp^0,w,c
  2009   001456  26D9               	addwf	fsr2l,f,c
  2010   001458  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2011   00145A  22DA               	addwfc	fsr2h,f,c
  2012   00145C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
  2013   001460  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
  2014                           
  2015                           ;color.c: 95:     temp->G = color_read_Green();
  2016   001464  EC73  F00A         	call	_color_read_Green	;wreg free
  2017   001468  EE20 F002          	lfsr	2,2
  2018   00146C  5014               	movf	color_read_RGBC@temp^0,w,c
  2019   00146E  26D9               	addwf	fsr2l,f,c
  2020   001470  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2021   001472  22DA               	addwfc	fsr2h,f,c
  2022   001474  C00D  FFDE         	movff	?_color_read_Green,postinc2
  2023   001478  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
  2024                           
  2025                           ;color.c: 96:     temp->C = color_read_Clear();
  2026   00147C  EC9B  F00A         	call	_color_read_Clear	;wreg free
  2027   001480  EE20 F006          	lfsr	2,6
  2028   001484  5014               	movf	color_read_RGBC@temp^0,w,c
  2029   001486  26D9               	addwf	fsr2l,f,c
  2030   001488  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
  2031   00148A  22DA               	addwfc	fsr2h,f,c
  2032   00148C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
  2033   001490  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
  2034   001494  0012               	return		;funcret
  2035   001496                     __end_of_color_read_RGBC:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _color_read_Red *****************
  2039 ;; Defined at:
  2040 ;;		line 33 in file "color.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;  tmp             2   17[COMRAM] unsigned int 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  2   12[COMRAM] unsigned int 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2055 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2056 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2057 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2058 ;;Total ram usage:        7 bytes
  2059 ;; Hardware stack levels used: 1
  2060 ;; Hardware stack levels required when called: 8
  2061 ;; This function calls:
  2062 ;;		_I2C_2_Master_Read
  2063 ;;		_I2C_2_Master_RepStart
  2064 ;;		_I2C_2_Master_Start
  2065 ;;		_I2C_2_Master_Stop
  2066 ;;		_I2C_2_Master_Write
  2067 ;; This function is called by:
  2068 ;;		_color_read_RGBC
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           	psect	text14
  2073   001496                     __ptext14:
  2074                           	callstack 0
  2075   001496                     _color_read_Red:
  2076                           	callstack 21
  2077   001496                     
  2078                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  2079   001496  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2080                           
  2081                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  2082   00149A  0E52               	movlw	82
  2083   00149C  EC3D  F00C         	call	_I2C_2_Master_Write
  2084                           
  2085                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  2086   0014A0  0EB6               	movlw	182
  2087   0014A2  EC3D  F00C         	call	_I2C_2_Master_Write
  2088                           
  2089                           ;color.c: 39:  I2C_2_Master_RepStart();
  2090   0014A6  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2091                           
  2092                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  2093   0014AA  0E53               	movlw	83
  2094   0014AC  EC3D  F00C         	call	_I2C_2_Master_Write
  2095                           
  2096                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  2097   0014B0  0E01               	movlw	1
  2098   0014B2  ECEB  F00A         	call	_I2C_2_Master_Read
  2099   0014B6  6E0F               	movwf	??_color_read_Red^0,c
  2100   0014B8  500F               	movf	??_color_read_Red^0,w,c
  2101   0014BA  6E12               	movwf	color_read_Red@tmp^0,c
  2102   0014BC  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2103                           
  2104                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2105   0014BE  0E00               	movlw	0
  2106   0014C0  ECEB  F00A         	call	_I2C_2_Master_Read
  2107   0014C4  6E0F               	movwf	??_color_read_Red^0,c
  2108   0014C6  500F               	movf	??_color_read_Red^0,w,c
  2109   0014C8  6E11               	movwf	(??_color_read_Red+2)^0,c
  2110   0014CA  6A10               	clrf	(??_color_read_Red+1)^0,c
  2111   0014CC  5012               	movf	color_read_Red@tmp^0,w,c
  2112   0014CE  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2113   0014D0  6E12               	movwf	color_read_Red@tmp^0,c
  2114   0014D2  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2115   0014D4  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2116   0014D6  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2117                           
  2118                           ;color.c: 43:  I2C_2_Master_Stop();
  2119   0014D8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2120   0014DC                     
  2121                           ;color.c: 44:  return tmp;
  2122   0014DC  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2123   0014E0  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2124   0014E4  0012               	return		;funcret
  2125   0014E6                     __end_of_color_read_Red:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _color_read_Green *****************
  2129 ;; Defined at:
  2130 ;;		line 47 in file "color.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;		None
  2133 ;; Auto vars:     Size  Location     Type
  2134 ;;  tmp             2   17[COMRAM] unsigned int 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  2   12[COMRAM] unsigned int 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0, cstack
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2144 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2145 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2146 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2147 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2148 ;;Total ram usage:        7 bytes
  2149 ;; Hardware stack levels used: 1
  2150 ;; Hardware stack levels required when called: 8
  2151 ;; This function calls:
  2152 ;;		_I2C_2_Master_Read
  2153 ;;		_I2C_2_Master_RepStart
  2154 ;;		_I2C_2_Master_Start
  2155 ;;		_I2C_2_Master_Stop
  2156 ;;		_I2C_2_Master_Write
  2157 ;; This function is called by:
  2158 ;;		_color_read_RGBC
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           	psect	text15
  2163   0014E6                     __ptext15:
  2164                           	callstack 0
  2165   0014E6                     _color_read_Green:
  2166                           	callstack 21
  2167   0014E6                     
  2168                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  2169   0014E6  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2170                           
  2171                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  2172   0014EA  0E52               	movlw	82
  2173   0014EC  EC3D  F00C         	call	_I2C_2_Master_Write
  2174                           
  2175                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
  2176   0014F0  0EB8               	movlw	184
  2177   0014F2  EC3D  F00C         	call	_I2C_2_Master_Write
  2178                           
  2179                           ;color.c: 53:  I2C_2_Master_RepStart();
  2180   0014F6  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2181                           
  2182                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  2183   0014FA  0E53               	movlw	83
  2184   0014FC  EC3D  F00C         	call	_I2C_2_Master_Write
  2185                           
  2186                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  2187   001500  0E01               	movlw	1
  2188   001502  ECEB  F00A         	call	_I2C_2_Master_Read
  2189   001506  6E0F               	movwf	??_color_read_Green^0,c
  2190   001508  500F               	movf	??_color_read_Green^0,w,c
  2191   00150A  6E12               	movwf	color_read_Green@tmp^0,c
  2192   00150C  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  2193                           
  2194                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2195   00150E  0E00               	movlw	0
  2196   001510  ECEB  F00A         	call	_I2C_2_Master_Read
  2197   001514  6E0F               	movwf	??_color_read_Green^0,c
  2198   001516  500F               	movf	??_color_read_Green^0,w,c
  2199   001518  6E11               	movwf	(??_color_read_Green+2)^0,c
  2200   00151A  6A10               	clrf	(??_color_read_Green+1)^0,c
  2201   00151C  5012               	movf	color_read_Green@tmp^0,w,c
  2202   00151E  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  2203   001520  6E12               	movwf	color_read_Green@tmp^0,c
  2204   001522  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  2205   001524  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  2206   001526  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  2207                           
  2208                           ;color.c: 57:  I2C_2_Master_Stop();
  2209   001528  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2210   00152C                     
  2211                           ;color.c: 58:  return tmp;
  2212   00152C  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  2213   001530  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  2214   001534  0012               	return		;funcret
  2215   001536                     __end_of_color_read_Green:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _color_read_Clear *****************
  2219 ;; Defined at:
  2220 ;;		line 75 in file "color.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;		None
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  tmp             2   17[COMRAM] unsigned int 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  2   12[COMRAM] unsigned int 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0, cstack
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2234 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2235 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2236 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2237 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2238 ;;Total ram usage:        7 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 8
  2241 ;; This function calls:
  2242 ;;		_I2C_2_Master_Read
  2243 ;;		_I2C_2_Master_RepStart
  2244 ;;		_I2C_2_Master_Start
  2245 ;;		_I2C_2_Master_Stop
  2246 ;;		_I2C_2_Master_Write
  2247 ;; This function is called by:
  2248 ;;		_color_read_RGBC
  2249 ;; This function uses a non-reentrant model
  2250 ;;
  2251                           
  2252                           	psect	text16
  2253   001536                     __ptext16:
  2254                           	callstack 0
  2255   001536                     _color_read_Clear:
  2256                           	callstack 21
  2257   001536                     
  2258                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  2259   001536  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2260                           
  2261                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  2262   00153A  0E52               	movlw	82
  2263   00153C  EC3D  F00C         	call	_I2C_2_Master_Write
  2264                           
  2265                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  2266   001540  0EB4               	movlw	180
  2267   001542  EC3D  F00C         	call	_I2C_2_Master_Write
  2268                           
  2269                           ;color.c: 81:  I2C_2_Master_RepStart();
  2270   001546  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2271                           
  2272                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  2273   00154A  0E53               	movlw	83
  2274   00154C  EC3D  F00C         	call	_I2C_2_Master_Write
  2275                           
  2276                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  2277   001550  0E01               	movlw	1
  2278   001552  ECEB  F00A         	call	_I2C_2_Master_Read
  2279   001556  6E0F               	movwf	??_color_read_Clear^0,c
  2280   001558  500F               	movf	??_color_read_Clear^0,w,c
  2281   00155A  6E12               	movwf	color_read_Clear@tmp^0,c
  2282   00155C  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  2283                           
  2284                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2285   00155E  0E00               	movlw	0
  2286   001560  ECEB  F00A         	call	_I2C_2_Master_Read
  2287   001564  6E0F               	movwf	??_color_read_Clear^0,c
  2288   001566  500F               	movf	??_color_read_Clear^0,w,c
  2289   001568  6E11               	movwf	(??_color_read_Clear+2)^0,c
  2290   00156A  6A10               	clrf	(??_color_read_Clear+1)^0,c
  2291   00156C  5012               	movf	color_read_Clear@tmp^0,w,c
  2292   00156E  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  2293   001570  6E12               	movwf	color_read_Clear@tmp^0,c
  2294   001572  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  2295   001574  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  2296   001576  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  2297                           
  2298                           ;color.c: 85:  I2C_2_Master_Stop();
  2299   001578  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2300   00157C                     
  2301                           ;color.c: 86:  return tmp;
  2302   00157C  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  2303   001580  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  2304   001584  0012               	return		;funcret
  2305   001586                     __end_of_color_read_Clear:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _color_read_Blue *****************
  2309 ;; Defined at:
  2310 ;;		line 61 in file "color.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  tmp             2   17[COMRAM] unsigned int 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  2   12[COMRAM] unsigned int 
  2317 ;; Registers used:
  2318 ;;		wreg, status,2, status,0, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2325 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2326 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2327 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2328 ;;Total ram usage:        7 bytes
  2329 ;; Hardware stack levels used: 1
  2330 ;; Hardware stack levels required when called: 8
  2331 ;; This function calls:
  2332 ;;		_I2C_2_Master_Read
  2333 ;;		_I2C_2_Master_RepStart
  2334 ;;		_I2C_2_Master_Start
  2335 ;;		_I2C_2_Master_Stop
  2336 ;;		_I2C_2_Master_Write
  2337 ;; This function is called by:
  2338 ;;		_color_read_RGBC
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text17
  2343   001586                     __ptext17:
  2344                           	callstack 0
  2345   001586                     _color_read_Blue:
  2346                           	callstack 21
  2347   001586                     
  2348                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  2349   001586  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2350                           
  2351                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  2352   00158A  0E52               	movlw	82
  2353   00158C  EC3D  F00C         	call	_I2C_2_Master_Write
  2354                           
  2355                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  2356   001590  0EBA               	movlw	186
  2357   001592  EC3D  F00C         	call	_I2C_2_Master_Write
  2358                           
  2359                           ;color.c: 67:  I2C_2_Master_RepStart();
  2360   001596  EC4F  F00C         	call	_I2C_2_Master_RepStart	;wreg free
  2361                           
  2362                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  2363   00159A  0E53               	movlw	83
  2364   00159C  EC3D  F00C         	call	_I2C_2_Master_Write
  2365                           
  2366                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  2367   0015A0  0E01               	movlw	1
  2368   0015A2  ECEB  F00A         	call	_I2C_2_Master_Read
  2369   0015A6  6E0F               	movwf	??_color_read_Blue^0,c
  2370   0015A8  500F               	movf	??_color_read_Blue^0,w,c
  2371   0015AA  6E12               	movwf	color_read_Blue@tmp^0,c
  2372   0015AC  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  2373                           
  2374                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2375   0015AE  0E00               	movlw	0
  2376   0015B0  ECEB  F00A         	call	_I2C_2_Master_Read
  2377   0015B4  6E0F               	movwf	??_color_read_Blue^0,c
  2378   0015B6  500F               	movf	??_color_read_Blue^0,w,c
  2379   0015B8  6E11               	movwf	(??_color_read_Blue+2)^0,c
  2380   0015BA  6A10               	clrf	(??_color_read_Blue+1)^0,c
  2381   0015BC  5012               	movf	color_read_Blue@tmp^0,w,c
  2382   0015BE  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  2383   0015C0  6E12               	movwf	color_read_Blue@tmp^0,c
  2384   0015C2  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  2385   0015C4  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  2386   0015C6  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  2387                           
  2388                           ;color.c: 71:  I2C_2_Master_Stop();
  2389   0015C8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2390   0015CC                     
  2391                           ;color.c: 72:  return tmp;
  2392   0015CC  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  2393   0015D0  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  2394   0015D4  0012               	return		;funcret
  2395   0015D6                     __end_of_color_read_Blue:
  2396                           	callstack 0
  2397                           
  2398 ;; *************** function _I2C_2_Master_RepStart *****************
  2399 ;; Defined at:
  2400 ;;		line 33 in file "i2c.c"
  2401 ;; Parameters:    Size  Location     Type
  2402 ;;		None
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;		None
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  1    wreg      void 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0, cstack
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2418 ;;Total ram usage:        0 bytes
  2419 ;; Hardware stack levels used: 1
  2420 ;; Hardware stack levels required when called: 7
  2421 ;; This function calls:
  2422 ;;		_I2C_2_Master_Idle
  2423 ;; This function is called by:
  2424 ;;		_color_read_Red
  2425 ;;		_color_read_Green
  2426 ;;		_color_read_Blue
  2427 ;;		_color_read_Clear
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text18
  2432   00189E                     __ptext18:
  2433                           	callstack 0
  2434   00189E                     _I2C_2_Master_RepStart:
  2435                           	callstack 21
  2436   00189E                     
  2437                           ;i2c.c: 35:   I2C_2_Master_Idle();
  2438   00189E  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2439   0018A2                     
  2440                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  2441   0018A2  010E               	movlb	14	; () banked
  2442   0018A4  83DA               	bsf	218,1,b	;volatile
  2443   0018A6                     
  2444                           ; BSR set to: 14
  2445   0018A6  0012               	return		;funcret
  2446   0018A8                     __end_of_I2C_2_Master_RepStart:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _I2C_2_Master_Read *****************
  2450 ;; Defined at:
  2451 ;;		line 51 in file "i2c.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  ack             1    wreg     unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  ack             1   10[COMRAM] unsigned char 
  2456 ;;  tmp             1   11[COMRAM] unsigned char 
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      unsigned char 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0, cstack
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2470 ;;Total ram usage:        3 bytes
  2471 ;; Hardware stack levels used: 1
  2472 ;; Hardware stack levels required when called: 7
  2473 ;; This function calls:
  2474 ;;		_I2C_2_Master_Idle
  2475 ;; This function is called by:
  2476 ;;		_color_read_Red
  2477 ;;		_color_read_Green
  2478 ;;		_color_read_Blue
  2479 ;;		_color_read_Clear
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text19
  2484   0015D6                     __ptext19:
  2485                           	callstack 0
  2486   0015D6                     _I2C_2_Master_Read:
  2487                           	callstack 21
  2488                           
  2489                           ; BSR set to: 14
  2490                           ;incstack = 0
  2491                           ;I2C_2_Master_Read@ack stored from wreg
  2492   0015D6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  2493   0015D8                     
  2494                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  2495   0015D8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2496   0015DC                     
  2497                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  2498   0015DC  010E               	movlb	14	; () banked
  2499   0015DE  87DA               	bsf	218,3,b	;volatile
  2500                           
  2501                           ;i2c.c: 56:   I2C_2_Master_Idle();
  2502   0015E0  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2503   0015E4                     
  2504                           ;i2c.c: 57:   tmp = SSP2BUF;
  2505   0015E4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  2506                           
  2507                           ;i2c.c: 58:   I2C_2_Master_Idle();
  2508   0015E8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  2509   0015EC                     
  2510                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  2511   0015EC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  2512   0015EE  B4D8               	btfsc	status,2,c
  2513   0015F0  EFFC  F00A         	goto	u81
  2514   0015F4  EF00  F00B         	goto	u80
  2515   0015F8                     u81:
  2516   0015F8  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2517   0015FA  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  2518   0015FC  EF01  F00B         	goto	u98
  2519   001600                     u80:
  2520   001600  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  2521   001602                     u98:
  2522   001602  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  2523   001604  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  2524   001606  010E               	movlb	14	; () banked
  2525   001608  51DA               	movf	218,w,b	;volatile
  2526   00160A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2527   00160C  0BDF               	andlw	-33
  2528   00160E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  2529   001610  6FDA               	movwf	218,b	;volatile
  2530   001612                     
  2531                           ; BSR set to: 14
  2532                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  2533   001612  89DA               	bsf	218,4,b	;volatile
  2534   001614                     
  2535                           ; BSR set to: 14
  2536                           ;i2c.c: 61:   return tmp;
  2537   001614  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  2538   001616                     
  2539                           ; BSR set to: 14
  2540   001616  0012               	return		;funcret
  2541   001618                     __end_of_I2C_2_Master_Read:
  2542                           	callstack 0
  2543                           
  2544 ;; *************** function _color_click_init *****************
  2545 ;; Defined at:
  2546 ;;		line 9 in file "color.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;		None
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, status,2, status,0, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2562 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2564 ;;Total ram usage:        1 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 9
  2567 ;; This function calls:
  2568 ;;		_I2C_2_Master_Init
  2569 ;;		_color_writetoaddr
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text20
  2576   001618                     __ptext20:
  2577                           	callstack 0
  2578   001618                     _color_click_init:
  2579                           	callstack 21
  2580   001618                     
  2581                           ;color.c: 12:     I2C_2_Master_Init();
  2582   001618  EC6D  F00B         	call	_I2C_2_Master_Init	;wreg free
  2583   00161C                     
  2584                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  2585   00161C  0E01               	movlw	1
  2586   00161E  6E0B               	movwf	color_writetoaddr@value^0,c
  2587   001620  0E00               	movlw	0
  2588   001622  ECE7  F00B         	call	_color_writetoaddr
  2589   001626                     
  2590                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  2591   001626  0E3F               	movlw	63
  2592   001628  6E0D               	movwf	??_color_click_init^0,c
  2593   00162A  0E55               	movlw	85
  2594   00162C                     u577:
  2595   00162C  2EE8               	decfsz	wreg,f,c
  2596   00162E  D7FE               	bra	u577
  2597   001630  2E0D               	decfsz	??_color_click_init^0,f,c
  2598   001632  D7FC               	bra	u577
  2599   001634  F000               	nop	
  2600   001636                     
  2601                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  2602   001636  0E03               	movlw	3
  2603   001638  6E0B               	movwf	color_writetoaddr@value^0,c
  2604   00163A  0E00               	movlw	0
  2605   00163C  ECE7  F00B         	call	_color_writetoaddr
  2606   001640                     
  2607                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  2608   001640  0ED5               	movlw	213
  2609   001642  6E0B               	movwf	color_writetoaddr@value^0,c
  2610   001644  0E01               	movlw	1
  2611   001646  ECE7  F00B         	call	_color_writetoaddr
  2612   00164A  0012               	return		;funcret
  2613   00164C                     __end_of_color_click_init:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _I2C_2_Master_Init *****************
  2617 ;; Defined at:
  2618 ;;		line 4 in file "i2c.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used: 1
  2638 ;; Hardware stack levels required when called: 6
  2639 ;; This function calls:
  2640 ;;		Nothing
  2641 ;; This function is called by:
  2642 ;;		_color_click_init
  2643 ;; This function uses a non-reentrant model
  2644 ;;
  2645                           
  2646                           	psect	text21
  2647   0016DA                     __ptext21:
  2648                           	callstack 0
  2649   0016DA                     _I2C_2_Master_Init:
  2650                           	callstack 23
  2651   0016DA                     
  2652                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  2653   0016DA  010E               	movlb	14	; () banked
  2654   0016DC  51D9               	movf	217,w,b	;volatile
  2655   0016DE  0BF0               	andlw	-16
  2656   0016E0  0908               	iorlw	8
  2657   0016E2  6FD9               	movwf	217,b	;volatile
  2658   0016E4                     
  2659                           ; BSR set to: 14
  2660                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  2661   0016E4  8BD9               	bsf	217,5,b	;volatile
  2662                           
  2663                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  2664   0016E6  0E9F               	movlw	159
  2665   0016E8  6FD6               	movwf	214,b	;volatile
  2666   0016EA                     
  2667                           ; BSR set to: 14
  2668                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  2669   0016EA  8A84               	bsf	132,5,c	;volatile
  2670   0016EC                     
  2671                           ; BSR set to: 14
  2672                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  2673   0016EC  8C84               	bsf	132,6,c	;volatile
  2674   0016EE                     
  2675                           ; BSR set to: 14
  2676                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  2677   0016EE  9BA7               	bcf	167,5,b	;volatile
  2678   0016F0                     
  2679                           ; BSR set to: 14
  2680                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  2681   0016F0  9DA7               	bcf	167,6,b	;volatile
  2682                           
  2683                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  2684   0016F2  0E1D               	movlw	29
  2685   0016F4  6F1D               	movwf	29,b	;volatile
  2686                           
  2687                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  2688   0016F6  0E1E               	movlw	30
  2689   0016F8  6F1C               	movwf	28,b	;volatile
  2690                           
  2691                           ;i2c.c: 18:   RD5PPS=0x1C;
  2692   0016FA  0E1C               	movlw	28
  2693   0016FC  6F6F               	movwf	111,b	;volatile
  2694                           
  2695                           ;i2c.c: 19:   RD6PPS=0x1B;
  2696   0016FE  0E1B               	movlw	27
  2697   001700  6F70               	movwf	112,b	;volatile
  2698   001702                     
  2699                           ; BSR set to: 14
  2700   001702  0012               	return		;funcret
  2701   001704                     __end_of_I2C_2_Master_Init:
  2702                           	callstack 0
  2703                           
  2704 ;; *************** function _Interrupts_init *****************
  2705 ;; Defined at:
  2706 ;;		line 10 in file "interrupts.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		None
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2720 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2723 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used: 1
  2726 ;; Hardware stack levels required when called: 6
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_main
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text22
  2735   001858                     __ptext22:
  2736                           	callstack 0
  2737   001858                     _Interrupts_init:
  2738                           	callstack 24
  2739   001858                     
  2740                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  2741   001858  8082               	bsf	130,0,c	;volatile
  2742                           
  2743                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  2744   00185A  010E               	movlb	14	; () banked
  2745   00185C  919A               	bcf	154,0,b	;volatile
  2746                           
  2747                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  2748   00185E  9133               	bcf	51,0,b	;volatile
  2749                           
  2750                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  2751   001860  8129               	bsf	41,0,b	;volatile
  2752                           
  2753                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  2754   001862  811F               	bsf	31,0,b	;volatile
  2755                           
  2756                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  2757   001864  90F2               	bcf	242,0,c	;volatile
  2758                           
  2759                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  2760   001866  8AF2               	bsf	242,5,c	;volatile
  2761                           
  2762                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  2763   001868  8CF2               	bsf	242,6,c	;volatile
  2764                           
  2765                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  2766   00186A  8EF2               	bsf	242,7,c	;volatile
  2767   00186C                     
  2768                           ; BSR set to: 14
  2769   00186C  0012               	return		;funcret
  2770   00186E                     __end_of_Interrupts_init:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _Color_Interrupts_threshold *****************
  2774 ;; Defined at:
  2775 ;;		line 38 in file "interrupts.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  upperThresho    2   12[COMRAM] unsigned int 
  2778 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  2779 ;; Auto vars:     Size  Location     Type
  2780 ;;		None
  2781 ;; Return value:  Size  Location     Type
  2782 ;;                  1    wreg      void 
  2783 ;; Registers used:
  2784 ;;		wreg, status,2, status,0, cstack
  2785 ;; Tracked objects:
  2786 ;;		On entry : 0/0
  2787 ;;		On exit  : 0/0
  2788 ;;		Unchanged: 0/0
  2789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2793 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2794 ;;Total ram usage:        4 bytes
  2795 ;; Hardware stack levels used: 1
  2796 ;; Hardware stack levels required when called: 9
  2797 ;; This function calls:
  2798 ;;		_color_writetoaddr
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text23
  2805   001704                     __ptext23:
  2806                           	callstack 0
  2807   001704                     _Color_Interrupts_threshold:
  2808                           	callstack 21
  2809   001704                     
  2810                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  2811   001704  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  2812   001708  0E04               	movlw	4
  2813   00170A  ECE7  F00B         	call	_color_writetoaddr
  2814                           
  2815                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  2816   00170E  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  2817   001710  6E0B               	movwf	color_writetoaddr@value^0,c
  2818   001712  0E05               	movlw	5
  2819   001714  ECE7  F00B         	call	_color_writetoaddr
  2820                           
  2821                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  2822   001718  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  2823   00171C  0E06               	movlw	6
  2824   00171E  ECE7  F00B         	call	_color_writetoaddr
  2825                           
  2826                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  2827   001722  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  2828   001724  6E0B               	movwf	color_writetoaddr@value^0,c
  2829   001726  0E07               	movlw	7
  2830   001728  ECE7  F00B         	call	_color_writetoaddr
  2831   00172C  0012               	return		;funcret
  2832   00172E                     __end_of_Color_Interrupts_threshold:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _Color_Interrupts_init *****************
  2836 ;; Defined at:
  2837 ;;		line 29 in file "interrupts.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;		None
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 9
  2858 ;; This function calls:
  2859 ;;		_color_writetoaddr
  2860 ;; This function is called by:
  2861 ;;		_main
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           	psect	text24
  2866   00180E                     __ptext24:
  2867                           	callstack 0
  2868   00180E                     _Color_Interrupts_init:
  2869                           	callstack 21
  2870   00180E                     
  2871                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  2872   00180E  0E13               	movlw	19
  2873   001810  6E0B               	movwf	color_writetoaddr@value^0,c
  2874   001812  0E00               	movlw	0
  2875   001814  ECE7  F00B         	call	_color_writetoaddr
  2876   001818                     
  2877                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  2878   001818  0ED0               	movlw	208
  2879   00181A  6E0D               	movwf	??_Color_Interrupts_init^0,c
  2880   00181C  0ECA               	movlw	202
  2881   00181E                     u587:
  2882   00181E  2EE8               	decfsz	wreg,f,c
  2883   001820  D7FE               	bra	u587
  2884   001822  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  2885   001824  D7FC               	bra	u587
  2886   001826  0012               	return		;funcret
  2887   001828                     __end_of_Color_Interrupts_init:
  2888                           	callstack 0
  2889                           
  2890 ;; *************** function _color_writetoaddr *****************
  2891 ;; Defined at:
  2892 ;;		line 25 in file "color.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  address         1    wreg     unsigned char 
  2895 ;;  value           1   10[COMRAM] unsigned char 
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;  address         1   11[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2908 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2911 ;;Total ram usage:        2 bytes
  2912 ;; Hardware stack levels used: 1
  2913 ;; Hardware stack levels required when called: 8
  2914 ;; This function calls:
  2915 ;;		_I2C_2_Master_Start
  2916 ;;		_I2C_2_Master_Stop
  2917 ;;		_I2C_2_Master_Write
  2918 ;; This function is called by:
  2919 ;;		_color_click_init
  2920 ;;		_Color_Interrupts_init
  2921 ;;		_Color_Interrupts_threshold
  2922 ;;		_persistence_register
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           	psect	text25
  2927   0017CE                     __ptext25:
  2928                           	callstack 0
  2929   0017CE                     _color_writetoaddr:
  2930                           	callstack 21
  2931                           
  2932                           ;incstack = 0
  2933                           ;color_writetoaddr@address stored from wreg
  2934   0017CE  6E0C               	movwf	color_writetoaddr@address^0,c
  2935   0017D0                     
  2936                           ;color.c: 26:     I2C_2_Master_Start();
  2937   0017D0  EC59  F00C         	call	_I2C_2_Master_Start	;wreg free
  2938                           
  2939                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  2940   0017D4  0E52               	movlw	82
  2941   0017D6  EC3D  F00C         	call	_I2C_2_Master_Write
  2942                           
  2943                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  2944   0017DA  500C               	movf	color_writetoaddr@address^0,w,c
  2945   0017DC  0980               	iorlw	128
  2946   0017DE  EC3D  F00C         	call	_I2C_2_Master_Write
  2947                           
  2948                           ;color.c: 29:     I2C_2_Master_Write(value);
  2949   0017E2  500B               	movf	color_writetoaddr@value^0,w,c
  2950   0017E4  EC3D  F00C         	call	_I2C_2_Master_Write
  2951                           
  2952                           ;color.c: 30:     I2C_2_Master_Stop();
  2953   0017E8  EC54  F00C         	call	_I2C_2_Master_Stop	;wreg free
  2954   0017EC  0012               	return		;funcret
  2955   0017EE                     __end_of_color_writetoaddr:
  2956                           	callstack 0
  2957                           
  2958 ;; *************** function _I2C_2_Master_Write *****************
  2959 ;; Defined at:
  2960 ;;		line 45 in file "i2c.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  data_byte       1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  data_byte       1    9[COMRAM] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2975 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2977 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2978 ;;Total ram usage:        1 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 7
  2981 ;; This function calls:
  2982 ;;		_I2C_2_Master_Idle
  2983 ;; This function is called by:
  2984 ;;		_color_writetoaddr
  2985 ;;		_color_read_Red
  2986 ;;		_color_read_Green
  2987 ;;		_color_read_Blue
  2988 ;;		_color_read_Clear
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text26
  2993   00187A                     __ptext26:
  2994                           	callstack 0
  2995   00187A                     _I2C_2_Master_Write:
  2996                           	callstack 21
  2997                           
  2998                           ;incstack = 0
  2999                           ;I2C_2_Master_Write@data_byte stored from wreg
  3000   00187A  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  3001   00187C                     
  3002                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3003   00187C  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3004   001880                     
  3005                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3006   001880  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  3007   001884  0012               	return		;funcret
  3008   001886                     __end_of_I2C_2_Master_Write:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _I2C_2_Master_Stop *****************
  3012 ;; Defined at:
  3013 ;;		line 39 in file "i2c.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3031 ;;Total ram usage:        0 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; Hardware stack levels required when called: 7
  3034 ;; This function calls:
  3035 ;;		_I2C_2_Master_Idle
  3036 ;; This function is called by:
  3037 ;;		_color_writetoaddr
  3038 ;;		_color_read_Red
  3039 ;;		_color_read_Green
  3040 ;;		_color_read_Blue
  3041 ;;		_color_read_Clear
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	text27
  3046   0018A8                     __ptext27:
  3047                           	callstack 0
  3048   0018A8                     _I2C_2_Master_Stop:
  3049                           	callstack 21
  3050   0018A8                     
  3051                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3052   0018A8  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3053   0018AC                     
  3054                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3055   0018AC  010E               	movlb	14	; () banked
  3056   0018AE  85DA               	bsf	218,2,b	;volatile
  3057   0018B0                     
  3058                           ; BSR set to: 14
  3059   0018B0  0012               	return		;funcret
  3060   0018B2                     __end_of_I2C_2_Master_Stop:
  3061                           	callstack 0
  3062                           
  3063 ;; *************** function _I2C_2_Master_Start *****************
  3064 ;; Defined at:
  3065 ;;		line 27 in file "i2c.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, status,2, status,0, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3083 ;;Total ram usage:        0 bytes
  3084 ;; Hardware stack levels used: 1
  3085 ;; Hardware stack levels required when called: 7
  3086 ;; This function calls:
  3087 ;;		_I2C_2_Master_Idle
  3088 ;; This function is called by:
  3089 ;;		_color_writetoaddr
  3090 ;;		_color_read_Red
  3091 ;;		_color_read_Green
  3092 ;;		_color_read_Blue
  3093 ;;		_color_read_Clear
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           	psect	text28
  3098   0018B2                     __ptext28:
  3099                           	callstack 0
  3100   0018B2                     _I2C_2_Master_Start:
  3101                           	callstack 21
  3102   0018B2                     
  3103                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3104   0018B2  ECAC  F00B         	call	_I2C_2_Master_Idle	;wreg free
  3105   0018B6                     
  3106                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3107   0018B6  010E               	movlb	14	; () banked
  3108   0018B8  81DA               	bsf	218,0,b	;volatile
  3109   0018BA                     
  3110                           ; BSR set to: 14
  3111   0018BA  0012               	return		;funcret
  3112   0018BC                     __end_of_I2C_2_Master_Start:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _I2C_2_Master_Idle *****************
  3116 ;; Defined at:
  3117 ;;		line 22 in file "i2c.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;		None
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;		None
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  1    wreg      void 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3133 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3135 ;;Total ram usage:        1 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; Hardware stack levels required when called: 6
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		_I2C_2_Master_Start
  3142 ;;		_I2C_2_Master_RepStart
  3143 ;;		_I2C_2_Master_Stop
  3144 ;;		_I2C_2_Master_Write
  3145 ;;		_I2C_2_Master_Read
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           
  3149                           	psect	text29
  3150   001758                     __ptext29:
  3151                           	callstack 0
  3152   001758                     _I2C_2_Master_Idle:
  3153                           	callstack 21
  3154   001758                     l120:
  3155   001758  010E               	movlb	14	; () banked
  3156   00175A  B5D8               	btfsc	216,2,b	;volatile
  3157   00175C  EFB2  F00B         	goto	u31
  3158   001760  EFB4  F00B         	goto	u30
  3159   001764                     u31:
  3160   001764  EFAC  F00B         	goto	l120
  3161   001768                     u30:
  3162   001768                     
  3163                           ; BSR set to: 14
  3164   001768  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  3165   00176C  0E1F               	movlw	31
  3166   00176E  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  3167   001770  A4D8               	btfss	status,2,c
  3168   001772  EFBD  F00B         	goto	u41
  3169   001776  EFBF  F00B         	goto	u40
  3170   00177A                     u41:
  3171   00177A  EFAC  F00B         	goto	l120
  3172   00177E                     u40:
  3173   00177E                     
  3174                           ; BSR set to: 14
  3175   00177E  0012               	return		;funcret
  3176   001780                     __end_of_I2C_2_Master_Idle:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _HighISR *****************
  3180 ;; Defined at:
  3181 ;;		line 71 in file "interrupts.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;		None
  3184 ;; Auto vars:     Size  Location     Type
  3185 ;;		None
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  1    wreg      void 
  3188 ;; Registers used:
  3189 ;;		wreg, status,2, status,0, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3199 ;;Total ram usage:        0 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 5
  3202 ;; This function calls:
  3203 ;;		_Color_Interrupts_clear
  3204 ;; This function is called by:
  3205 ;;		Interrupt level 2
  3206 ;; This function uses a non-reentrant model
  3207 ;;
  3208                           
  3209                           	psect	intcode
  3210   000008                     __pintcode:
  3211                           	callstack 0
  3212   000008                     _HighISR:
  3213                           	callstack 21
  3214                           
  3215                           ; BSR set to: 14
  3216                           ;incstack = 0
  3217   000008  824C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3218   00000A                     
  3219                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  3220   00000A  010E               	movlb	14	; () banked
  3221   00000C  A133               	btfss	51,0,b	;volatile
  3222   00000E  EF0B  F000         	goto	i2u48_41
  3223   000012  EF0D  F000         	goto	i2u48_40
  3224   000016                     i2u48_41:
  3225   000016  EF16  F000         	goto	i2l353
  3226   00001A                     i2u48_40:
  3227   00001A                     
  3228                           ; BSR set to: 14
  3229                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  3230   00001A  8E7C               	bsf	124,7,c	;volatile
  3231   00001C                     
  3232                           ; BSR set to: 14
  3233                           ;interrupts.c: 76:         interrupt_flag = 1;
  3234   00001C  0E00               	movlw	0
  3235   00001E  6E47               	movwf	(_interrupt_flag+1)^0,c
  3236   000020  0E01               	movlw	1
  3237   000022  6E46               	movwf	_interrupt_flag^0,c
  3238   000024                     
  3239                           ; BSR set to: 14
  3240                           ;interrupts.c: 78:         Color_Interrupts_clear();
  3241   000024  EC3F  F00B         	call	_Color_Interrupts_clear	;wreg free
  3242   000028                     
  3243                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  3244   000028  010E               	movlb	14	; () banked
  3245   00002A  9133               	bcf	51,0,b	;volatile
  3246   00002C                     i2l353:
  3247                           
  3248                           ; BSR set to: 14
  3249   00002C  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3250   00002E  0011               	retfie		f
  3251   000030                     __end_of_HighISR:
  3252                           	callstack 0
  3253                           
  3254 ;; *************** function _Color_Interrupts_clear *****************
  3255 ;; Defined at:
  3256 ;;		line 51 in file "interrupts.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;		None
  3259 ;; Auto vars:     Size  Location     Type
  3260 ;;		None
  3261 ;; Return value:  Size  Location     Type
  3262 ;;                  1    wreg      void 
  3263 ;; Registers used:
  3264 ;;		wreg, status,2, status,0, cstack
  3265 ;; Tracked objects:
  3266 ;;		On entry : 0/0
  3267 ;;		On exit  : 0/0
  3268 ;;		Unchanged: 0/0
  3269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3274 ;;Total ram usage:        0 bytes
  3275 ;; Hardware stack levels used: 1
  3276 ;; Hardware stack levels required when called: 4
  3277 ;; This function calls:
  3278 ;;		i2_Color_Interrupts_init
  3279 ;;		i2_Color_Interrupts_threshold
  3280 ;;		i2_I2C_2_Master_Start
  3281 ;;		i2_I2C_2_Master_Stop
  3282 ;;		i2_I2C_2_Master_Write
  3283 ;;		i2_persistence_register
  3284 ;; This function is called by:
  3285 ;;		_HighISR
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text31
  3290   00167E                     __ptext31:
  3291                           	callstack 0
  3292   00167E                     _Color_Interrupts_clear:
  3293                           	callstack 21
  3294   00167E                     
  3295                           ;interrupts.c: 55:     I2C_2_Master_Start();
  3296   00167E  EC63  F00C         	call	i2_I2C_2_Master_Start	;wreg free
  3297                           
  3298                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  3299   001682  0E52               	movlw	82
  3300   001684  EC49  F00C         	call	i2_I2C_2_Master_Write
  3301                           
  3302                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  3303   001688  0EE6               	movlw	230
  3304   00168A  EC49  F00C         	call	i2_I2C_2_Master_Write
  3305                           
  3306                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  3307   00168E  EC5E  F00C         	call	i2_I2C_2_Master_Stop	;wreg free
  3308                           
  3309                           ;interrupts.c: 61:     Color_Interrupts_init();
  3310   001692  EC14  F00C         	call	i2_Color_Interrupts_init	;wreg free
  3311                           
  3312                           ;interrupts.c: 62:     persistence_register();
  3313   001696  EC43  F00C         	call	i2_persistence_register	;wreg free
  3314                           
  3315                           ;interrupts.c: 63:     Color_Interrupts_threshold(5000, 0);
  3316   00169A  0E13               	movlw	19
  3317   00169C  6E06               	movwf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,c
  3318   00169E  0E88               	movlw	136
  3319   0016A0  6E05               	movwf	i2Color_Interrupts_threshold@upperThreshold^0,c
  3320   0016A2  0E00               	movlw	0
  3321   0016A4  6E08               	movwf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,c
  3322   0016A6  0E00               	movlw	0
  3323   0016A8  6E07               	movwf	i2Color_Interrupts_threshold@lowerThreshold^0,c
  3324   0016AA  EC97  F00B         	call	i2_Color_Interrupts_threshold	;wreg free
  3325   0016AE  0012               	return		;funcret
  3326   0016B0                     __end_of_Color_Interrupts_clear:
  3327                           	callstack 0
  3328                           
  3329 ;; *************** function i2_persistence_register *****************
  3330 ;; Defined at:
  3331 ;;		line 46 in file "interrupts.c"
  3332 ;; Parameters:    Size  Location     Type
  3333 ;;		None
  3334 ;; Auto vars:     Size  Location     Type
  3335 ;;		None
  3336 ;; Return value:  Size  Location     Type
  3337 ;;                  1    wreg      void 
  3338 ;; Registers used:
  3339 ;;		wreg, status,2, status,0, cstack
  3340 ;; Tracked objects:
  3341 ;;		On entry : 0/0
  3342 ;;		On exit  : 0/0
  3343 ;;		Unchanged: 0/0
  3344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3349 ;;Total ram usage:        0 bytes
  3350 ;; Hardware stack levels used: 1
  3351 ;; Hardware stack levels required when called: 3
  3352 ;; This function calls:
  3353 ;;		i2_color_writetoaddr
  3354 ;; This function is called by:
  3355 ;;		_Color_Interrupts_clear
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text32
  3360   001886                     __ptext32:
  3361                           	callstack 0
  3362   001886                     i2_persistence_register:
  3363                           	callstack 21
  3364   001886                     
  3365                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3366   001886  0E02               	movlw	2
  3367   001888  6E03               	movwf	i2color_writetoaddr@value^0,c
  3368   00188A  0E0C               	movlw	12
  3369   00188C  ECF7  F00B         	call	i2_color_writetoaddr
  3370   001890  0012               	return		;funcret
  3371   001892                     __end_ofi2_persistence_register:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function i2_Color_Interrupts_threshold *****************
  3375 ;; Defined at:
  3376 ;;		line 38 in file "interrupts.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  upperThresho    2    4[COMRAM] unsigned int 
  3379 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;		None
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  1    wreg      void 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;Total ram usage:        4 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 3
  3398 ;; This function calls:
  3399 ;;		i2_color_writetoaddr
  3400 ;; This function is called by:
  3401 ;;		_Color_Interrupts_clear
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text33
  3406   00172E                     __ptext33:
  3407                           	callstack 0
  3408   00172E                     i2_Color_Interrupts_threshold:
  3409                           	callstack 21
  3410   00172E                     
  3411                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  3412   00172E  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  3413   001732  0E04               	movlw	4
  3414   001734  ECF7  F00B         	call	i2_color_writetoaddr
  3415                           
  3416                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  3417   001738  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  3418   00173A  6E03               	movwf	i2color_writetoaddr@value^0,c
  3419   00173C  0E05               	movlw	5
  3420   00173E  ECF7  F00B         	call	i2_color_writetoaddr
  3421                           
  3422                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  3423   001742  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  3424   001746  0E06               	movlw	6
  3425   001748  ECF7  F00B         	call	i2_color_writetoaddr
  3426                           
  3427                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  3428   00174C  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  3429   00174E  6E03               	movwf	i2color_writetoaddr@value^0,c
  3430   001750  0E07               	movlw	7
  3431   001752  ECF7  F00B         	call	i2_color_writetoaddr
  3432   001756  0012               	return		;funcret
  3433   001758                     __end_ofi2_Color_Interrupts_threshold:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function i2_Color_Interrupts_init *****************
  3437 ;; Defined at:
  3438 ;;		line 29 in file "interrupts.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;		None
  3441 ;; Auto vars:     Size  Location     Type
  3442 ;;		None
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  1    wreg      void 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0, cstack
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3454 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3455 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3456 ;;Total ram usage:        1 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; Hardware stack levels required when called: 3
  3459 ;; This function calls:
  3460 ;;		i2_color_writetoaddr
  3461 ;; This function is called by:
  3462 ;;		_Color_Interrupts_clear
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text34
  3467   001828                     __ptext34:
  3468                           	callstack 0
  3469   001828                     i2_Color_Interrupts_init:
  3470                           	callstack 21
  3471   001828                     
  3472                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  3473   001828  0E13               	movlw	19
  3474   00182A  6E03               	movwf	i2color_writetoaddr@value^0,c
  3475   00182C  0E00               	movlw	0
  3476   00182E  ECF7  F00B         	call	i2_color_writetoaddr
  3477   001832                     
  3478                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  3479   001832  0ED0               	movlw	208
  3480   001834  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  3481   001836  0ECA               	movlw	202
  3482   001838                     i2u59_47:
  3483   001838  2EE8               	decfsz	wreg,f,c
  3484   00183A  D7FE               	bra	i2u59_47
  3485   00183C  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  3486   00183E  D7FC               	bra	i2u59_47
  3487   001840  0012               	return		;funcret
  3488   001842                     __end_ofi2_Color_Interrupts_init:
  3489                           	callstack 0
  3490                           
  3491 ;; *************** function i2_color_writetoaddr *****************
  3492 ;; Defined at:
  3493 ;;		line 25 in file "color.c"
  3494 ;; Parameters:    Size  Location     Type
  3495 ;;  address         1    wreg     unsigned char 
  3496 ;;  value           1    2[COMRAM] unsigned char 
  3497 ;; Auto vars:     Size  Location     Type
  3498 ;;  address         1    3[COMRAM] unsigned char 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, status,2, status,0, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3508 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;Total ram usage:        2 bytes
  3513 ;; Hardware stack levels used: 1
  3514 ;; Hardware stack levels required when called: 2
  3515 ;; This function calls:
  3516 ;;		i2_I2C_2_Master_Start
  3517 ;;		i2_I2C_2_Master_Stop
  3518 ;;		i2_I2C_2_Master_Write
  3519 ;; This function is called by:
  3520 ;;		i2_Color_Interrupts_init
  3521 ;;		i2_Color_Interrupts_threshold
  3522 ;;		i2_persistence_register
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text35
  3527   0017EE                     __ptext35:
  3528                           	callstack 0
  3529   0017EE                     i2_color_writetoaddr:
  3530                           	callstack 21
  3531                           
  3532                           ;incstack = 0
  3533                           ;i2color_writetoaddr@address stored from wreg
  3534   0017EE  6E04               	movwf	i2color_writetoaddr@address^0,c
  3535   0017F0                     
  3536                           ;color.c: 26:     I2C_2_Master_Start();
  3537   0017F0  EC63  F00C         	call	i2_I2C_2_Master_Start	;wreg free
  3538                           
  3539                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  3540   0017F4  0E52               	movlw	82
  3541   0017F6  EC49  F00C         	call	i2_I2C_2_Master_Write
  3542                           
  3543                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  3544   0017FA  5004               	movf	i2color_writetoaddr@address^0,w,c
  3545   0017FC  0980               	iorlw	128
  3546   0017FE  EC49  F00C         	call	i2_I2C_2_Master_Write
  3547                           
  3548                           ;color.c: 29:     I2C_2_Master_Write(value);
  3549   001802  5003               	movf	i2color_writetoaddr@value^0,w,c
  3550   001804  EC49  F00C         	call	i2_I2C_2_Master_Write
  3551                           
  3552                           ;color.c: 30:     I2C_2_Master_Stop();
  3553   001808  EC5E  F00C         	call	i2_I2C_2_Master_Stop	;wreg free
  3554   00180C  0012               	return		;funcret
  3555   00180E                     __end_ofi2_color_writetoaddr:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function i2_I2C_2_Master_Write *****************
  3559 ;; Defined at:
  3560 ;;		line 45 in file "i2c.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  data_byte       1    wreg     unsigned char 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  data_byte       1    1[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      void 
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3577 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3578 ;;Total ram usage:        1 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; Hardware stack levels required when called: 1
  3581 ;; This function calls:
  3582 ;;		i2_I2C_2_Master_Idle
  3583 ;; This function is called by:
  3584 ;;		_Color_Interrupts_clear
  3585 ;;		i2_color_writetoaddr
  3586 ;; This function uses a non-reentrant model
  3587 ;;
  3588                           
  3589                           	psect	text36
  3590   001892                     __ptext36:
  3591                           	callstack 0
  3592   001892                     i2_I2C_2_Master_Write:
  3593                           	callstack 21
  3594                           
  3595                           ;incstack = 0
  3596                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  3597   001892  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  3598   001894                     
  3599                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  3600   001894  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3601   001898                     
  3602                           ;i2c.c: 48:   SSP2BUF = data_byte;
  3603   001898  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  3604   00189C  0012               	return		;funcret
  3605   00189E                     __end_ofi2_I2C_2_Master_Write:
  3606                           	callstack 0
  3607                           
  3608 ;; *************** function i2_I2C_2_Master_Stop *****************
  3609 ;; Defined at:
  3610 ;;		line 39 in file "i2c.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;		None
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0, cstack
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3628 ;;Total ram usage:        0 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 1
  3631 ;; This function calls:
  3632 ;;		i2_I2C_2_Master_Idle
  3633 ;; This function is called by:
  3634 ;;		_Color_Interrupts_clear
  3635 ;;		i2_color_writetoaddr
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text37
  3640   0018BC                     __ptext37:
  3641                           	callstack 0
  3642   0018BC                     i2_I2C_2_Master_Stop:
  3643                           	callstack 21
  3644   0018BC                     
  3645                           ;i2c.c: 41:   I2C_2_Master_Idle();
  3646   0018BC  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3647   0018C0                     
  3648                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  3649   0018C0  010E               	movlb	14	; () banked
  3650   0018C2  85DA               	bsf	218,2,b	;volatile
  3651   0018C4                     
  3652                           ; BSR set to: 14
  3653   0018C4  0012               	return		;funcret
  3654   0018C6                     __end_ofi2_I2C_2_Master_Stop:
  3655                           	callstack 0
  3656                           
  3657 ;; *************** function i2_I2C_2_Master_Start *****************
  3658 ;; Defined at:
  3659 ;;		line 27 in file "i2c.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, status,2, status,0, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;Total ram usage:        0 bytes
  3678 ;; Hardware stack levels used: 1
  3679 ;; Hardware stack levels required when called: 1
  3680 ;; This function calls:
  3681 ;;		i2_I2C_2_Master_Idle
  3682 ;; This function is called by:
  3683 ;;		_Color_Interrupts_clear
  3684 ;;		i2_color_writetoaddr
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text38
  3689   0018C6                     __ptext38:
  3690                           	callstack 0
  3691   0018C6                     i2_I2C_2_Master_Start:
  3692                           	callstack 21
  3693   0018C6                     
  3694                           ;i2c.c: 29:   I2C_2_Master_Idle();
  3695   0018C6  ECC0  F00B         	call	i2_I2C_2_Master_Idle	;wreg free
  3696   0018CA                     
  3697                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  3698   0018CA  010E               	movlb	14	; () banked
  3699   0018CC  81DA               	bsf	218,0,b	;volatile
  3700   0018CE                     
  3701                           ; BSR set to: 14
  3702   0018CE  0012               	return		;funcret
  3703   0018D0                     __end_ofi2_I2C_2_Master_Start:
  3704                           	callstack 0
  3705                           
  3706 ;; *************** function i2_I2C_2_Master_Idle *****************
  3707 ;; Defined at:
  3708 ;;		line 22 in file "i2c.c"
  3709 ;; Parameters:    Size  Location     Type
  3710 ;;		None
  3711 ;; Auto vars:     Size  Location     Type
  3712 ;;		None
  3713 ;; Return value:  Size  Location     Type
  3714 ;;                  1    wreg      void 
  3715 ;; Registers used:
  3716 ;;		wreg, status,2, status,0
  3717 ;; Tracked objects:
  3718 ;;		On entry : 0/0
  3719 ;;		On exit  : 0/0
  3720 ;;		Unchanged: 0/0
  3721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3724 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3725 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3726 ;;Total ram usage:        1 bytes
  3727 ;; Hardware stack levels used: 1
  3728 ;; This function calls:
  3729 ;;		Nothing
  3730 ;; This function is called by:
  3731 ;;		i2_I2C_2_Master_Start
  3732 ;;		i2_I2C_2_Master_Stop
  3733 ;;		i2_I2C_2_Master_Write
  3734 ;; This function uses a non-reentrant model
  3735 ;;
  3736                           
  3737                           	psect	text39
  3738   001780                     __ptext39:
  3739                           	callstack 0
  3740   001780                     i2_I2C_2_Master_Idle:
  3741                           	callstack 21
  3742   001780                     i2l120:
  3743   001780  010E               	movlb	14	; () banked
  3744   001782  B5D8               	btfsc	216,2,b	;volatile
  3745   001784  EFC6  F00B         	goto	i2u32_41
  3746   001788  EFC8  F00B         	goto	i2u32_40
  3747   00178C                     i2u32_41:
  3748   00178C  EFC0  F00B         	goto	i2l120
  3749   001790                     i2u32_40:
  3750   001790                     
  3751                           ; BSR set to: 14
  3752   001790  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  3753   001794  0E1F               	movlw	31
  3754   001796  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  3755   001798  A4D8               	btfss	status,2,c
  3756   00179A  EFD1  F00B         	goto	i2u33_41
  3757   00179E  EFD3  F00B         	goto	i2u33_40
  3758   0017A2                     i2u33_41:
  3759   0017A2  EFC0  F00B         	goto	i2l120
  3760   0017A6                     i2u33_40:
  3761   0017A6                     
  3762                           ; BSR set to: 14
  3763   0017A6  0012               	return		;funcret
  3764   0017A8                     __end_ofi2_I2C_2_Master_Idle:
  3765                           	callstack 0
  3766                           
  3767                           	psect	rparam
  3768   000000                     
  3769                           	psect	temp
  3770   00004C                     btemp:
  3771                           	callstack 0
  3772   00004C                     	ds	1
  3773   000000                     int$flags	set	btemp
  3774   000000                     wtemp8	set	btemp+1
  3775   000000                     ttemp5	set	btemp+1
  3776   000000                     ttemp6	set	btemp+4
  3777   000000                     ttemp7	set	btemp+8
  3778                           
  3779                           	psect	idloc
  3780                           
  3781                           ;Config register IDLOC0 @ 0x200000
  3782                           ;	unspecified, using default values
  3783   200000                     	org	2097152
  3784   200000  0FFF               	dw	4095
  3785                           
  3786                           ;Config register IDLOC1 @ 0x200002
  3787                           ;	unspecified, using default values
  3788   200002                     	org	2097154
  3789   200002  0FFF               	dw	4095
  3790                           
  3791                           ;Config register IDLOC2 @ 0x200004
  3792                           ;	unspecified, using default values
  3793   200004                     	org	2097156
  3794   200004  0FFF               	dw	4095
  3795                           
  3796                           ;Config register IDLOC3 @ 0x200006
  3797                           ;	unspecified, using default values
  3798   200006                     	org	2097158
  3799   200006  0FFF               	dw	4095
  3800                           
  3801                           ;Config register IDLOC4 @ 0x200008
  3802                           ;	unspecified, using default values
  3803   200008                     	org	2097160
  3804   200008  0FFF               	dw	4095
  3805                           
  3806                           ;Config register IDLOC5 @ 0x20000A
  3807                           ;	unspecified, using default values
  3808   20000A                     	org	2097162
  3809   20000A  0FFF               	dw	4095
  3810                           
  3811                           ;Config register IDLOC6 @ 0x20000C
  3812                           ;	unspecified, using default values
  3813   20000C                     	org	2097164
  3814   20000C  0FFF               	dw	4095
  3815                           
  3816                           ;Config register IDLOC7 @ 0x20000E
  3817                           ;	unspecified, using default values
  3818   20000E                     	org	2097166
  3819   20000E  0FFF               	dw	4095
  3820                           
  3821                           	psect	config
  3822                           
  3823                           ;Config register CONFIG1L @ 0x300000
  3824                           ;	External Oscillator mode Selection bits
  3825                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3826                           ;	Power-up default value for COSC bits
  3827                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3828   300000                     	org	3145728
  3829   300000  AA                 	db	170
  3830                           
  3831                           ;Config register CONFIG1H @ 0x300001
  3832                           ;	unspecified, using default values
  3833                           ;	Clock Out Enable bit
  3834                           ;	CLKOUTEN = 0x1, unprogrammed default
  3835                           ;	Clock Switch Enable bit
  3836                           ;	CSWEN = 0x1, unprogrammed default
  3837                           ;	Fail-Safe Clock Monitor Enable bit
  3838                           ;	FCMEN = 0x1, unprogrammed default
  3839   300001                     	org	3145729
  3840   300001  FF                 	db	255
  3841                           
  3842                           ;Config register CONFIG2L @ 0x300002
  3843                           ;	unspecified, using default values
  3844                           ;	Master Clear Enable bit
  3845                           ;	MCLRE = 0x1, unprogrammed default
  3846                           ;	Power-up Timer Enable bit
  3847                           ;	PWRTE = 0x1, unprogrammed default
  3848                           ;	Low-power BOR enable bit
  3849                           ;	LPBOREN = 0x1, unprogrammed default
  3850                           ;	Brown-out Reset Enable bits
  3851                           ;	BOREN = 0x3, unprogrammed default
  3852   300002                     	org	3145730
  3853   300002  FF                 	db	255
  3854                           
  3855                           ;Config register CONFIG2H @ 0x300003
  3856                           ;	unspecified, using default values
  3857                           ;	Brown Out Reset Voltage selection bits
  3858                           ;	BORV = 0x3, unprogrammed default
  3859                           ;	ZCD Disable bit
  3860                           ;	ZCD = 0x1, unprogrammed default
  3861                           ;	PPSLOCK bit One-Way Set Enable bit
  3862                           ;	PPS1WAY = 0x1, unprogrammed default
  3863                           ;	Stack Full/Underflow Reset Enable bit
  3864                           ;	STVREN = 0x1, unprogrammed default
  3865                           ;	Debugger Enable bit
  3866                           ;	DEBUG = 0x1, unprogrammed default
  3867                           ;	Extended Instruction Set Enable bit
  3868                           ;	XINST = 0x1, unprogrammed default
  3869   300003                     	org	3145731
  3870   300003  FF                 	db	255
  3871                           
  3872                           ;Config register CONFIG3L @ 0x300004
  3873                           ;	WDT Period Select bits
  3874                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3875                           ;	WDT operating mode
  3876                           ;	WDTE = OFF, WDT Disabled
  3877   300004                     	org	3145732
  3878   300004  9F                 	db	159
  3879                           
  3880                           ;Config register CONFIG3H @ 0x300005
  3881                           ;	unspecified, using default values
  3882                           ;	WDT Window Select bits
  3883                           ;	WDTCWS = 0x7, unprogrammed default
  3884                           ;	WDT input clock selector
  3885                           ;	WDTCCS = 0x7, unprogrammed default
  3886   300005                     	org	3145733
  3887   300005  FF                 	db	255
  3888                           
  3889                           ;Config register CONFIG4L @ 0x300006
  3890                           ;	unspecified, using default values
  3891                           ;	Write Protection Block 0
  3892                           ;	WRT0 = 0x1, unprogrammed default
  3893                           ;	Write Protection Block 1
  3894                           ;	WRT1 = 0x1, unprogrammed default
  3895                           ;	Write Protection Block 2
  3896                           ;	WRT2 = 0x1, unprogrammed default
  3897                           ;	Write Protection Block 3
  3898                           ;	WRT3 = 0x1, unprogrammed default
  3899                           ;	Write Protection Block 3
  3900                           ;	WRT4 = 0x1, unprogrammed default
  3901                           ;	Write Protection Block 3
  3902                           ;	WRT5 = 0x1, unprogrammed default
  3903                           ;	Write Protection Block 3
  3904                           ;	WRT6 = 0x1, unprogrammed default
  3905                           ;	Write Protection Block 3
  3906                           ;	WRT7 = 0x1, unprogrammed default
  3907   300006                     	org	3145734
  3908   300006  FF                 	db	255
  3909                           
  3910                           ;Config register CONFIG4H @ 0x300007
  3911                           ;	unspecified, using default values
  3912                           ;	Configuration Register Write Protection bit
  3913                           ;	WRTC = 0x1, unprogrammed default
  3914                           ;	Boot Block Write Protection bit
  3915                           ;	WRTB = 0x1, unprogrammed default
  3916                           ;	Data EEPROM Write Protection bit
  3917                           ;	WRTD = 0x1, unprogrammed default
  3918                           ;	Scanner Enable bit
  3919                           ;	SCANE = 0x1, unprogrammed default
  3920                           ;	Low Voltage Programming Enable bit
  3921                           ;	LVP = 0x1, unprogrammed default
  3922   300007                     	org	3145735
  3923   300007  FF                 	db	255
  3924                           
  3925                           ;Config register CONFIG5L @ 0x300008
  3926                           ;	unspecified, using default values
  3927                           ;	UserNVM Program Memory Code Protection bit
  3928                           ;	CP = 0x1, unprogrammed default
  3929                           ;	DataNVM Memory Code Protection bit
  3930                           ;	CPD = 0x1, unprogrammed default
  3931   300008                     	org	3145736
  3932   300008  FF                 	db	255
  3933                           
  3934                           ;Config register CONFIG5H @ 0x300009
  3935                           ;	unspecified, using default values
  3936   300009                     	org	3145737
  3937   300009  FF                 	db	255
  3938                           
  3939                           ;Config register CONFIG6L @ 0x30000A
  3940                           ;	unspecified, using default values
  3941                           ;	Table Read Protection Block 0
  3942                           ;	EBTR0 = 0x1, unprogrammed default
  3943                           ;	Table Read Protection Block 1
  3944                           ;	EBTR1 = 0x1, unprogrammed default
  3945                           ;	Table Read Protection Block 2
  3946                           ;	EBTR2 = 0x1, unprogrammed default
  3947                           ;	Table Read Protection Block 3
  3948                           ;	EBTR3 = 0x1, unprogrammed default
  3949                           ;	Table Read Protection Block 4
  3950                           ;	EBTR4 = 0x1, unprogrammed default
  3951                           ;	Table Read Protection Block 5
  3952                           ;	EBTR5 = 0x1, unprogrammed default
  3953                           ;	Table Read Protection Block 6
  3954                           ;	EBTR6 = 0x1, unprogrammed default
  3955                           ;	Table Read Protection Block 7
  3956                           ;	EBTR7 = 0x1, unprogrammed default
  3957   30000A                     	org	3145738
  3958   30000A  FF                 	db	255
  3959                           
  3960                           ;Config register CONFIG6H @ 0x30000B
  3961                           ;	unspecified, using default values
  3962                           ;	Boot Block Table Read Protection bit
  3963                           ;	EBTRB = 0x1, unprogrammed default
  3964   30000B                     	org	3145739
  3965   30000B  FF                 	db	255
  3966                           tosu	equ	0xFFF
  3967                           tosh	equ	0xFFE
  3968                           tosl	equ	0xFFD
  3969                           stkptr	equ	0xFFC
  3970                           pclatu	equ	0xFFB
  3971                           pclath	equ	0xFFA
  3972                           pcl	equ	0xFF9
  3973                           tblptru	equ	0xFF8
  3974                           tblptrh	equ	0xFF7
  3975                           tblptrl	equ	0xFF6
  3976                           tablat	equ	0xFF5
  3977                           prodh	equ	0xFF4
  3978                           prodl	equ	0xFF3
  3979                           indf0	equ	0xFEF
  3980                           postinc0	equ	0xFEE
  3981                           postdec0	equ	0xFED
  3982                           preinc0	equ	0xFEC
  3983                           plusw0	equ	0xFEB
  3984                           fsr0h	equ	0xFEA
  3985                           fsr0l	equ	0xFE9
  3986                           wreg	equ	0xFE8
  3987                           indf1	equ	0xFE7
  3988                           postinc1	equ	0xFE6
  3989                           postdec1	equ	0xFE5
  3990                           preinc1	equ	0xFE4
  3991                           plusw1	equ	0xFE3
  3992                           fsr1h	equ	0xFE2
  3993                           fsr1l	equ	0xFE1
  3994                           bsr	equ	0xFE0
  3995                           indf2	equ	0xFDF
  3996                           postinc2	equ	0xFDE
  3997                           postdec2	equ	0xFDD
  3998                           preinc2	equ	0xFDC
  3999                           plusw2	equ	0xFDB
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      75
    BANK0           160      0      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2451$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2451$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), main@mL(COMRAM[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S316DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S316DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@R	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(COMRAM[9]), 

    motor_response@L	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(COMRAM[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(COMRAM[8]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_response->_norm_stop
    _motor_response->_turnRight
    _turnRight->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               132   132      0   17351
                                             39 COMRAM    28    28      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_read_RGBC
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     743
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_response                                       8     2      6    6432
                                             31 COMRAM     8     2      6
                          _norm_stop
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    2917
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    3133
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3093
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     528
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2      91
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      30
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     743
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1083
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     743
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     743
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      15
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     _norm_stop
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      50       5       50.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      4B       1       79.8%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9B      61        0.0%
DATA                 0      0      9B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Dec 08 11:49:34 2022

                            _color_read_Red 1496                             _color_read_RGBC 1438  
                           _color_read_Blue 1586                                          l62 17EC  
                                        l71 15D4                                          l80 1494  
                                        l65 14E4                                          l74 1584  
                                        l90 11FC                                          l59 164A  
                                        l68 1534                                          l86 1856  
                                        u30 1768                                          u31 1764  
                                        u40 177E                                          u41 177A  
                                        u80 1600                                          u81 15F8  
                                        u98 1602                         ___wmul@multiplicand 000B  
                          _color_read_Clear 1536                            _color_read_Green 14E6  
                         ??_Interrupts_init 0009                                         l120 1758  
                                       l123 177E                                         l132 18B0  
                                       l117 1702                                         l126 18BA  
                                       l135 1884                                         l129 18A6  
                                       l138 1616                                         l341 172C  
                                       l422 127C                                         l335 186C  
                                       l432 1436                                         l344 1878  
                                       l338 1826                                         l435 13CC  
                                       l452 1362                                         l429 0F7E  
                                       l446 167C                                         l463 1154  
                                       l474 17CC                                         l972 12F0  
                                       l965 12E8                                         u400 110C  
                                       u401 1108                                         u410 1124  
                                       u411 1120                                         u340 1298  
                                       u341 1294                                         u350 12B6  
                                       u430 1004                                         u351 12B2  
                                       u431 1000                                         u360 12D2  
                                       u361 12CE                                         u370 0E30  
                                       u371 0E2C                                         u380 0EFA  
                                       u381 0EF6                                         u390 1178  
                                       u391 1174                                         u537 1022  
                                       u547 1196                                         u557 11C2  
                                       u567 11EE                                         u577 162C  
                                       u587 181E                            ??_motor_response 0026  
            ??i2_Color_Interrupts_threshold 0009                                 _tricolorLED 1842  
                       i2_color_writetoaddr 17EE                                         wreg 000FE8  
                                      l1202 18B2                                        l1210 18A8  
                                      l1204 18B6                                        l1212 18AC  
                                      l1220 15DC                                        l1206 187C  
                                      l1222 15E4                                        l1214 189E  
                                      l1160 1768                                        l1208 1880  
                                      l1224 15EC                                        l1216 18A2  
                                      l1250 16DA                                        l1226 1612  
                                      l1218 15D8                                        l1260 16F0  
                                      l1252 16E4                                        l1228 1614  
                                      l1158 1758                                        l1342 1858  
                                      l1254 16EA                                        l1256 16EC  
                                      l1328 1842                                        l1258 16EE  
                                      l1700 1586                                        l1702 15CC  
                                      l1630 17C4                                        l1640 12A0  
                                      l1800 140E                                        l1712 164C  
                                      l1720 130A                                        l1706 1536  
                                      l1650 12DA                                        l1642 12A8  
                                      l1634 127E                                        l1802 1422  
                                      l1810 1390                                        l1714 1664  
                                      l1730 1356                                        l1722 131A  
                                      l1740 1618                                        l1708 157C  
                                      l1652 12DC                                        l1644 12B6  
                                      l1636 1286                                        l1628 17A8  
                                      l1820 1094                                        l1812 13A4  
                                      l1804 1364                                        l1716 1670  
                                      l1724 132A                                        l1900 105A  
                                      l1742 161C                                        l1750 1438  
                                      l1654 12E2                                        l1646 12BC  
                                      l1638 1298                                        l1670 0E30  
                                      l1830 10E8                                        l1822 10A4  
                                      l1814 13B8                                        l1806 1370  
                                      l1726 133A                                        l1718 12F2  
                                      l1902 105C                                        l1744 1626  
                                      l1648 12D2                                        l1680 0EFA  
                                      l1672 0E84                                        l1840 1148  
                                      l1832 10F4                                        l1824 10B4  
                                      l1816 106C                                        l1808 1380  
                                      l1728 134A                                        l1760 11D0  
                                      l1752 1156                                        l1746 1636  
                                      l1690 14DC                                        l1682 0F3E  
                                      l1674 0E98                                        l1834 110C  
                                      l1826 10C8                                        l1818 1084  
                                      l1762 11E4                                        l1754 1178  
                                      l1770 186E                                        l1764 180E  
                                      l1748 1640                                        l1676 0EDA  
                                      l1668 0E14                                        l1836 1124  
                                      l1828 10DC                                        l1780 1258  
                                      l1772 11FE                                        l1756 118C  
                                      l1860 0F88                                        l1852 0F80  
                                      l1686 17D0                                        l1766 1818  
                                      l1694 14E6                                        l1678 0EDE  
                                      l1838 113C                                        l1790 127A  
                                      l1782 1262                                        l1774 1228  
                                      l1758 11A4                                        l1870 0FCE  
                                      l1862 0FA8                                        l1854 0F84  
                                      l1768 1704                                        l1696 152C  
                                      l1688 1496                                        l1784 1264  
                                      l1776 124C                                        l1792 13CE  
                                      l1880 0FD8                                        l1872 0FD0  
                                      l1864 0FB4                                        l1856 0F84  
                                      l1786 126E                                        l1778 1256  
                                      l1794 13DA                                        l1890 1004  
                                      l1882 0FDA                                        l1874 0FD2  
                                      l1866 0FC0                                        l1858 0F84  
                                      l1788 1270                                        l1796 13EA  
                                      l1892 1018                                        l1884 0FDC  
                                      l1876 0FD4                                        l1868 0FCC  
                                      l1798 13FA                                        l1894 1030  
                                      l1886 0FF0                                        l1878 0FD6  
                                      l1896 1032                                        l1888 0FF2  
                                      l1898 103E                                        STR_1 0E01  
                              _BAUD4CONbits 000EE9                                        _T2PR 000FBC  
                                      i2l62 180C                                        _main 0F80  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 004C  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0030                        ?i2_color_writetoaddr 0003  
                    __end_of_color_read_Red 14E6                             __end_of_HighISR 0030  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___lwdiv 12F2                                       i2l120 1780  
                                     i2l123 17A6                                       i2l132 18C4  
                                     i2l126 18CE                                       i2l135 189C  
                                     i2l341 1756                                       i2l344 1890  
                                     i2l353 002C                                       i2l338 1840  
                                     i2l347 16AE                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 18BC  
                __end_of_I2C_2_Master_Write 1886                       _Color_Interrupts_init 180E  
                                     ttemp5 004D                                       ttemp6 0050  
                                     ttemp7 0054                                       status 000FD8  
                                     wtemp8 004D                     __end_of_color_read_RGBC 1496  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 15D6  
                     _I2C_2_Master_RepStart 189E                             ?_color_read_Red 000D  
                           __initialization 16B0                                __end_of_main 106C  
               ?_Color_Interrupts_threshold 000D                                      ??_main 0028  
                             __activetblptr 000001                                ?_setMotorPWM 0016  
                                    _CCPR1H 000FAA                                      _CCPR2H 000FA6  
                                    _CCPR3H 000F25                                      _CCPR4H 000F21  
                                    _RC0PPS 000E62                                      _RC4REG 000EE3  
                                    _RE2PPS 000E74                                      _RC7PPS 000E69  
                                    _RD5PPS 000E6F                                      _RE4PPS 000E76  
                                    _RD6PPS 000E70                                      i2l1624 1780  
                                    i2l1626 1790                                      i2l1660 18BC  
                                    i2l1732 1828                                      i2l1662 18C0  
                                    i2l1734 1832                                      i2l1656 18C6  
                                    i2l1664 1894                                      i2l1736 172E  
                                    i2l1658 18CA                                      i2l1666 1898  
                                    i2l1738 1886                                      i2l1850 167E  
                                    i2l1684 17F0                                      i2l1940 000A  
                                    i2l1942 001A                                      i2l1944 001C  
                                    i2l1946 0024                                      i2l1948 0028  
                                    _RG6PPS 000E88                                   ??_HighISR 0009  
                  __end_of_color_click_init 164C                                      _RX4PPS 000E15  
                                    _TX4REG 000EE4    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 187A  
                              _CCPTMRS0bits 000FAD                                      ___wmul 17A8  
                                 ??___lwdiv 0013                                      clear_0 16B6  
                                    clear_1 16C2                                      isa$std 000001  
                                    main@mL 0032                                      main@mR 003B  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 167E  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptru 000FF8    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                                __accesstop 0060                     __end_of__initialization 16C8  
                  __end_of_color_read_Clear 1586                    __end_of_color_read_Green 1536  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0014                            ?_color_read_Blue 000D  
                           _Interrupts_init 1858                              __pcstackCOMRAM 0001  
            __end_ofi2_persistence_register 1892                                ?_tricolorLED 0001  
                   i2_Color_Interrupts_init 1828                                  __pbssBANK0 0060  
                         _color_writetoaddr 17CE                                _T2CLKCONbits 000FBF  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0020                         ??_color_writetoaddr 000C  
                                   _SP4BRGH 000EE6                                     _SP4BRGL 000EE5  
                                   i2u32_40 1790                                     i2u32_41 178C  
                                   i2u33_40 17A6                                     i2u33_41 17A2  
                                   i2u48_40 001A                                     i2u48_41 0016  
                                   i2u59_47 1838                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 186E  
                   __end_of_Interrupts_init 186E                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 17EE                          _I2C_2_Master_Start 18B2  
                       i2_I2C_2_Master_Idle 1780                          _I2C_2_Master_Write 187A  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 18BC  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                       ?_I2C_2_Master_Start 0001                                     ___lwdiv 127E  
                       ?_I2C_2_Master_Write 0001                                __psmallconst 0E00  
                                   __pcinit 16B0                                     __ramtop 0E00  
                                   __ptext0 0F80                                     __ptext1 1842  
                                   __ptext2 186E                                     __ptext3 1156  
                                   __ptext4 12F2                                     __ptext5 164C  
                                   __ptext6 1364                                     __ptext7 13CE  
                                   __ptext8 11FE                                     __ptext9 106C  
                      ?i2_I2C_2_Master_Idle 0001                                   _T2CONbits 000FBD  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                               _RxBufWriteCnt 004B  
                     ?_persistence_register 0001                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 16C8  
               __end_ofi2_color_writetoaddr 180E                           ?_color_click_init 0001  
                         __end_of_norm_stop 167E                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 13CE  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 1364                               _interrupt_ctr 0044  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 11FE  
                       color_read_RGBC@temp 0014                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 1364  
                     ??i2_I2C_2_Master_Stop 0002                     ??_Color_Interrupts_init 000D  
                                 _TRISAbits 000F81                          setMotorPWM@posDuty 001A  
                                 _TRISBbits 000F82                                   _TRISCbits 000F83  
                                 _TRISDbits 000F84                                   _TRISEbits 000F85  
                                 _TRISFbits 000F86                                   _TRISGbits 000F87  
                                 _TRISHbits 000F88                            fullSpeedAhead@mL 001C  
                          fullSpeedAhead@mR 001E                    color_writetoaddr@address 000C  
                   ??_I2C_2_Master_RepStart 000A                            ?_Interrupts_init 0001  
                               _CCP1CONbits 000FAB                           ?_color_read_Clear 000D  
                              _EUSART4RXbuf 009C                                _EUSART4TXbuf 0060  
                               _CCP2CONbits 000FA7                           ?_color_read_Green 000D  
                               _CCP3CONbits 000F26                                 _CCP4CONbits 000F22  
                        ??_color_read_Clear 000F                          ??_color_read_Green 000F  
            __end_of_Color_Interrupts_clear 16B0                              _fullSpeedAhead 106C  
                            __end_of___wmul 17CE                         color_read_Clear@tmp 0012  
                       start_initialization 16B0                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0049                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 127E                      __end_of_fullSpeedAhead 1156  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 18D0                __end_ofi2_I2C_2_Master_Write 189E  
                               __pbssCOMRAM 0044                              _motor_response 1156  
                                  ?_HighISR 0001                            ___lwdiv@dividend 000F  
                           motor_response@L 0022                             motor_response@R 0024  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 1758  
                         _I2C_2_Master_Init 16DA                           _I2C_2_Master_Read 15D6  
                         _I2C_2_Master_Stop 18A8                                _RxBufReadCnt 004A  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 11FE                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  _PIR0bits 000E33                                    _PIR4bits 000E37  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 164C                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 1780  
                 __end_of_I2C_2_Master_Init 1704                   __end_of_I2C_2_Master_Read 1618  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 18B2  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0016                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 0048                    i2color_writetoaddr@value 0003  
                                 _turnRight 12F2               __end_of_Color_Interrupts_init 1828  
                           ?_motor_response 0020               __end_of_I2C_2_Master_RepStart 18A8  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 0F80  
                      i2_I2C_2_Master_Start 18C6                        i2_I2C_2_Master_Write 1892  
                                  __Hrparam 0000                                    __Lrparam 0000  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 1758                i2_Color_Interrupts_threshold 172E  
               __end_ofi2_I2C_2_Master_Idle 17A8                 __end_ofi2_I2C_2_Master_Stop 18C6  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               ??_tricolorLED 0009  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 0E14  
                                  __ptext11 17A8                                    __ptext20 1618  
                                  __ptext12 127E                                    __ptext21 16DA  
                                  __ptext13 1438                                    __ptext22 1858  
                                  __ptext14 1496                                    __ptext31 167E  
                                  __ptext23 1704                                    __ptext15 14E6  
                                  __ptext32 1886                                    __ptext24 180E  
                                  __ptext16 1536                                    __ptext33 172E  
                                  __ptext25 17CE                                    __ptext17 1586  
                                  __ptext34 1828                                    __ptext26 187A  
                                  __ptext18 189E                                    __ptext35 17EE  
                                  __ptext27 18A8                                    __ptext19 15D6  
                                  __ptext36 1892                                    __ptext28 18B2  
                                  __ptext37 18BC                                    __ptext29 1758  
                                  __ptext38 18C6                                    __ptext39 1780  
                              _SSP2CON1bits 000ED9                                _SSP2CON2bits 000EDA  
                     ?i2_I2C_2_Master_Start 0001                       ?i2_I2C_2_Master_Write 0001  
                                  isa$xinst 000000                                ??_motorLinit 000B  
                              ??_motorRinit 000B                                  _RC4STAbits 000EE7  
                                  main@RGBC 002A                                    int$flags 004C  
        __end_of_Color_Interrupts_threshold 172E               ?i2_Color_Interrupts_threshold 0005  
                _Color_Interrupts_threshold 1704                                  _INTCONbits 000FF2  
                               _setMotorPWM 0E14                                motorLinit@mL 0009  
                       __end_of_tricolorLED 1858                                    intlevel2 0000  
                        __end_of_motorLinit 1438                          __end_of_motorRinit 13CE  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 1842  
                          _color_click_init 1618                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 0046  
                    i2_persistence_register 1886                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
