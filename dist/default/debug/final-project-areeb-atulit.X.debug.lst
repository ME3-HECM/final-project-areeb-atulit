

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Dec 12 14:05:23 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 06/04/2022 GMT
    67                           ; 
    68                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F67K40 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101                           	psect	idataBANK0
   102   002BBA                     __pidataBANK0:
   103                           	callstack 0
   104                           
   105                           ;initializer for _upperThreshold
   106   002BBA  0BB8               	dw	3000
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TX4REG	set	3812
   109   000000                     _RC4STAbits	set	3815
   110   000000                     _SP4BRGH	set	3814
   111   000000                     _LATHbits	set	3968
   112   000000                     _TRISCbits	set	3971
   113   000000                     _TRISDbits	set	3972
   114   000000                     _TRISEbits	set	3973
   115   000000                     _TRISFbits	set	3974
   116   000000                     _TRISAbits	set	3969
   117   000000                     _SSP2CON2bits	set	3802
   118   000000                     _RX4PPS	set	3605
   119   000000                     _SSP2CLKPPS	set	3612
   120   000000                     _SSP2DATPPS	set	3613
   121   000000                     _ANSELDbits	set	3751
   122   000000                     _SSP2ADD	set	3798
   123   000000                     _SSP2CON1bits	set	3801
   124   000000                     _LATAbits	set	3961
   125   000000                     _LATGbits	set	3967
   126   000000                     _TRISGbits	set	3975
   127   000000                     _T2PR	set	4028
   128   000000                     _T2CONbits	set	4029
   129   000000                     _TMR0L	set	4051
   130   000000                     _TMR0H	set	4052
   131   000000                     _T0CON0bits	set	4053
   132   000000                     _T0CON1bits	set	4054
   133   000000                     _INTCONbits	set	4082
   134   000000                     _TRISHbits	set	3976
   135   000000                     _CCPR2H	set	4006
   136   000000                     _CCPR1H	set	4010
   137   000000                     _LATDbits	set	3964
   138   000000                     _LATEbits	set	3965
   139   000000                     _LATFbits	set	3966
   140   000000                     _RC4REG	set	3811
   141   000000                     _SP4BRGL	set	3813
   142   000000                     _TX4STAbits	set	3816
   143   000000                     _BAUD4CONbits	set	3817
   144   000000                     _SSP2CON2	set	3802
   145   000000                     _SSP2STAT	set	3800
   146   000000                     _SSP2BUF	set	3797
   147   000000                     _IPR0bits	set	3615
   148   000000                     _PIE0bits	set	3625
   149   000000                     _PIE4bits	set	3629
   150   000000                     _RC0PPS	set	3682
   151   000000                     _RD5PPS	set	3695
   152   000000                     _RE2PPS	set	3700
   153   000000                     _ANSELBbits	set	3738
   154   000000                     _RD6PPS	set	3696
   155   000000                     _RC7PPS	set	3689
   156   000000                     _CCPR4H	set	3873
   157   000000                     _CCPR3H	set	3877
   158   000000                     _PIR0bits	set	3635
   159   000000                     _PIR4bits	set	3639
   160   000000                     _RE4PPS	set	3702
   161   000000                     _RG6PPS	set	3720
   162   000000                     _T2CLKCONbits	set	4031
   163   000000                     _T2HLTbits	set	4030
   164   000000                     _CCP1CONbits	set	4011
   165   000000                     _CCPTMRS0bits	set	4013
   166   000000                     _CCP2CONbits	set	4007
   167   000000                     _CCP3CONbits	set	3878
   168   000000                     _CCP4CONbits	set	3874
   169                           
   170                           	psect	smallconst
   171   000E00                     __psmallconst:
   172                           	callstack 0
   173   000E00  00                 	db	0
   174   000E01                     
   175                           ; BSR set to: 14
   176   000E01  52                 	db	82	;'R'
   177   000E02  47                 	db	71	;'G'
   178   000E03  42                 	db	66	;'B'
   179   000E04  43                 	db	67	;'C'
   180   000E05  3A                 	db	58	;':'
   181   000E06  25                 	db	37
   182   000E07  69                 	db	105	;'i'
   183   000E08  20                 	db	32
   184   000E09  25                 	db	37
   185   000E0A  69                 	db	105	;'i'
   186   000E0B  20                 	db	32
   187   000E0C  25                 	db	37
   188   000E0D  69                 	db	105	;'i'
   189   000E0E  20                 	db	32
   190   000E0F  25                 	db	37
   191   000E10  69                 	db	105	;'i'
   192   000E11  20                 	db	32
   193   000E12  25                 	db	37
   194   000E13  69                 	db	105	;'i'
   195   000E14  0A                 	db	10
   196   000E15  00                 	db	0
   197   000E16  00                 	db	0	; dummy byte at the end
   198   000000                     
   199                           ; #config settings
   200                           
   201                           	psect	cinit
   202   0028A8                     __pcinit:
   203                           	callstack 0
   204   0028A8                     start_initialization:
   205                           	callstack 0
   206   0028A8                     __initialization:
   207                           	callstack 0
   208                           
   209                           ; Initialize objects allocated to BANK0 (2 bytes)
   210                           ; load TBLPTR registers with __pidataBANK0
   211   0028A8  0EBA               	movlw	low __pidataBANK0
   212   0028AA  6EF6               	movwf	tblptrl,c
   213   0028AC  0E2B               	movlw	high __pidataBANK0
   214   0028AE  6EF7               	movwf	tblptrh,c
   215   0028B0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   216   0028B2  6EF8               	movwf	tblptru,c
   217   0028B4  0009               	tblrd		*+	;fetch initializer
   218   0028B6  CFF5 F0F1          	movff	tablat,__pdataBANK0
   219   0028BA  0009               	tblrd		*+	;fetch initializer
   220   0028BC  CFF5 F0F2          	movff	tablat,__pdataBANK0+1
   221                           
   222                           ; Clear objects allocated to BANK0 (79 bytes)
   223   0028C0  EE00  F060         	lfsr	0,__pbssBANK0
   224   0028C4  0E4F               	movlw	79
   225   0028C6                     clear_0:
   226   0028C6  6AEE               	clrf	postinc0,c
   227   0028C8  06E8               	decf	wreg,f,c
   228   0028CA  E1FD               	bnz	clear_0
   229                           
   230                           ; Clear objects allocated to COMRAM (37 bytes)
   231   0028CC  EE00  F031         	lfsr	0,__pbssCOMRAM
   232   0028D0  0E25               	movlw	37
   233   0028D2                     clear_1:
   234   0028D2  6AEE               	clrf	postinc0,c
   235   0028D4  06E8               	decf	wreg,f,c
   236   0028D6  E1FD               	bnz	clear_1
   237   0028D8                     end_of_initialization:
   238                           	callstack 0
   239   0028D8                     __end_of__initialization:
   240                           	callstack 0
   241   0028D8  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   0028DA  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   0028DC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   244   0028DE  6EF8               	movwf	tblptru,c
   245   0028E0  0E0E               	movlw	high __Lsmallconst
   246   0028E2  6EF7               	movwf	tblptrh,c
   247   0028E4  0100               	movlb	0
   248   0028E6  EFFF  F00F         	goto	_main	;jump to C main() function
   249                           
   250                           	psect	bssCOMRAM
   251   000031                     __pbssCOMRAM:
   252                           	callstack 0
   253   000031                     _EUSART4RXbuf:
   254                           	callstack 0
   255   000031                     	ds	20
   256   000045                     _amb_clear:
   257                           	callstack 0
   258   000045                     	ds	2
   259   000047                     _amb_blue:
   260                           	callstack 0
   261   000047                     	ds	2
   262   000049                     _amb_green:
   263                           	callstack 0
   264   000049                     	ds	2
   265   00004B                     _amb_red:
   266                           	callstack 0
   267   00004B                     	ds	2
   268   00004D                     _ctr:
   269                           	callstack 0
   270   00004D                     	ds	2
   271   00004F                     _interrupt_ctr:
   272                           	callstack 0
   273   00004F                     	ds	2
   274   000051                     _motor_return:
   275                           	callstack 0
   276   000051                     	ds	1
   277   000052                     _TxBufReadCnt:
   278                           	callstack 0
   279   000052                     	ds	1
   280   000053                     _TxBufWriteCnt:
   281                           	callstack 0
   282   000053                     	ds	1
   283   000054                     _RxBufReadCnt:
   284                           	callstack 0
   285   000054                     	ds	1
   286   000055                     _RxBufWriteCnt:
   287                           	callstack 0
   288   000055                     	ds	1
   289                           
   290                           	psect	bssBANK0
   291   000060                     __pbssBANK0:
   292                           	callstack 0
   293   000060                     _EUSART4TXbuf:
   294                           	callstack 0
   295   000060                     	ds	60
   296   00009C                     _lowerThreshold:
   297                           	callstack 0
   298   00009C                     	ds	2
   299   00009E                     _interrupt_flag:
   300                           	callstack 0
   301   00009E                     	ds	2
   302   0000A0                     _buggy_path:
   303                           	callstack 0
   304   0000A0                     	ds	15
   305                           
   306                           	psect	dataBANK0
   307   0000F1                     __pdataBANK0:
   308                           	callstack 0
   309   0000F1                     _upperThreshold:
   310                           	callstack 0
   311   0000F1                     	ds	2
   312                           
   313                           	psect	cstackBANK0
   314   0000AF                     __pcstackBANK0:
   315                           	callstack 0
   316   0000AF                     motor_retrace@j:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0x0
   320   0000AF                     	ds	2
   321   0000B1                     motor_retrace@j_510:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x2
   325   0000B1                     	ds	2
   326   0000B3                     motor_retrace@j_511:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x4
   330   0000B3                     	ds	2
   331   0000B5                     motor_retrace@j_512:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x6
   335   0000B5                     	ds	2
   336   0000B7                     motor_retrace@j_513:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x8
   340   0000B7                     	ds	2
   341   0000B9                     motor_retrace@j_514:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xA
   345   0000B9                     	ds	2
   346   0000BB                     motor_retrace@j_515:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0xC
   350   0000BB                     	ds	2
   351   0000BD                     ??_main:
   352                           
   353                           ; 1 bytes @ 0xE
   354   0000BD                     	ds	2
   355   0000BF                     main@RGBC:
   356                           	callstack 0
   357                           
   358                           ; 32 bytes @ 0x10
   359   0000BF                     	ds	32
   360   0000DF                     main@mL:
   361                           	callstack 0
   362                           
   363                           ; 9 bytes @ 0x30
   364   0000DF                     	ds	9
   365   0000E8                     main@mR:
   366                           	callstack 0
   367                           
   368                           ; 9 bytes @ 0x39
   369   0000E8                     	ds	9
   370                           
   371                           	psect	cstackCOMRAM
   372   000001                     __pcstackCOMRAM:
   373                           	callstack 0
   374   000001                     ??i2_I2C_2_Master_Idle:
   375   000001                     
   376                           ; 1 bytes @ 0x0
   377   000001                     	ds	1
   378   000002                     i2I2C_2_Master_Write@data_byte:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x1
   382   000002                     	ds	1
   383   000003                     i2color_writetoaddr@value:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x2
   387   000003                     	ds	1
   388   000004                     i2color_writetoaddr@address:
   389                           	callstack 0
   390                           
   391                           ; 1 bytes @ 0x3
   392   000004                     	ds	1
   393   000005                     ??i2_Color_Interrupts_init:
   394   000005                     i2Color_Interrupts_threshold@upperThreshold:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x4
   398   000005                     	ds	2
   399   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x6
   403   000007                     	ds	2
   404   000009                     ??_I2C_2_Master_Idle:
   405   000009                     ?___wmul:
   406                           	callstack 0
   407   000009                     ?___fldiv:
   408                           	callstack 0
   409   000009                     initDCmotorsPWM@PWMperiod:
   410                           	callstack 0
   411   000009                     motorLinit@mL:
   412                           	callstack 0
   413   000009                     motorRinit@mR:
   414                           	callstack 0
   415   000009                     ___wmul@multiplier:
   416                           	callstack 0
   417   000009                     ___flge@ff1:
   418                           	callstack 0
   419   000009                     ___fldiv@b:
   420                           	callstack 0
   421                           
   422                           ; 4 bytes @ 0x8
   423   000009                     	ds	1
   424   00000A                     ??_I2C_2_Master_Read:
   425   00000A                     I2C_2_Master_Write@data_byte:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x9
   429   00000A                     	ds	1
   430   00000B                     color_writetoaddr@value:
   431                           	callstack 0
   432   00000B                     I2C_2_Master_Read@ack:
   433                           	callstack 0
   434   00000B                     ___wmul@multiplicand:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xA
   438   00000B                     	ds	1
   439   00000C                     color_writetoaddr@address:
   440                           	callstack 0
   441   00000C                     I2C_2_Master_Read@tmp:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0xB
   445   00000C                     	ds	1
   446   00000D                     ??_Color_Interrupts_init:
   447   00000D                     ??_color_click_init:
   448   00000D                     ?_color_read_Red:
   449                           	callstack 0
   450   00000D                     ?_color_read_Green:
   451                           	callstack 0
   452   00000D                     ?_color_read_Blue:
   453                           	callstack 0
   454   00000D                     ?_color_read_Clear:
   455                           	callstack 0
   456   00000D                     Color_Interrupts_threshold@upperThreshold:
   457                           	callstack 0
   458   00000D                     ___wmul@product:
   459                           	callstack 0
   460   00000D                     ___flge@ff2:
   461                           	callstack 0
   462   00000D                     ___fldiv@a:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0xC
   466   00000D                     	ds	2
   467   00000F                     ??_color_read_Red:
   468   00000F                     ??_color_read_Green:
   469   00000F                     ??_color_read_Blue:
   470   00000F                     ??_color_read_Clear:
   471   00000F                     ?___lwdiv:
   472                           	callstack 0
   473   00000F                     Color_Interrupts_threshold@lowerThreshold:
   474                           	callstack 0
   475   00000F                     ___lwdiv@dividend:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0xE
   479   00000F                     	ds	2
   480   000011                     ??___fldiv:
   481   000011                     ??___flge:
   482   000011                     ___lwdiv@divisor:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x10
   486   000011                     	ds	1
   487   000012                     color_read_Red@tmp:
   488                           	callstack 0
   489   000012                     color_read_Green@tmp:
   490                           	callstack 0
   491   000012                     color_read_Blue@tmp:
   492                           	callstack 0
   493   000012                     color_read_Clear@tmp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x11
   497   000012                     	ds	1
   498   000013                     ___lwdiv@counter:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x12
   502   000013                     	ds	1
   503   000014                     ?___xxtofl:
   504                           	callstack 0
   505   000014                     ___lwdiv@quotient:
   506                           	callstack 0
   507   000014                     ___xxtofl@val:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x13
   511   000014                     	ds	1
   512   000015                     ___fldiv@rem:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x14
   516   000015                     	ds	1
   517   000016                     setMotorPWM@m:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x15
   521   000016                     	ds	2
   522   000018                     ??_setMotorPWM:
   523   000018                     ??___xxtofl:
   524                           
   525                           ; 1 bytes @ 0x17
   526   000018                     	ds	1
   527   000019                     ___fldiv@sign:
   528                           	callstack 0
   529                           
   530                           ; 1 bytes @ 0x18
   531   000019                     	ds	1
   532   00001A                     setMotorPWM@posDuty:
   533                           	callstack 0
   534   00001A                     ___fldiv@new_exp:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x19
   538   00001A                     	ds	1
   539   00001B                     setMotorPWM@negDuty:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x1A
   543   00001B                     	ds	1
   544   00001C                     ___xxtofl@sign:
   545                           	callstack 0
   546   00001C                     norm_stop@mL:
   547                           	callstack 0
   548   00001C                     turnLeft@mL:
   549                           	callstack 0
   550   00001C                     turnRight@mL:
   551                           	callstack 0
   552   00001C                     fullSpeedAhead@mL:
   553                           	callstack 0
   554   00001C                     reverse@mL:
   555                           	callstack 0
   556   00001C                     ___fldiv@grs:
   557                           	callstack 0
   558                           
   559                           ; 4 bytes @ 0x1B
   560   00001C                     	ds	1
   561   00001D                     ___xxtofl@exp:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x1C
   565   00001D                     	ds	1
   566   00001E                     norm_stop@mR:
   567                           	callstack 0
   568   00001E                     turnLeft@mR:
   569                           	callstack 0
   570   00001E                     turnRight@mR:
   571                           	callstack 0
   572   00001E                     fullSpeedAhead@mR:
   573                           	callstack 0
   574   00001E                     reverse@mR:
   575                           	callstack 0
   576   00001E                     ___xxtofl@arg:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x1D
   580   00001E                     	ds	2
   581   000020                     ??_reverse:
   582   000020                     ___fldiv@bexp:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x1F
   586   000020                     	ds	1
   587   000021                     ___fldiv@aexp:
   588                           	callstack 0
   589   000021                     motor_response@temp:
   590                           	callstack 0
   591   000021                     motor_retrace@buggy_path:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x20
   595   000021                     	ds	1
   596   000022                     color_read_RGBC@temp:
   597                           	callstack 0
   598   000022                     color_normalise@RGBC:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x21
   602   000022                     	ds	1
   603   000023                     motor_response@mL:
   604                           	callstack 0
   605   000023                     motor_retrace@mL:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x22
   609   000023                     	ds	1
   610   000024                     
   611                           ; 1 bytes @ 0x23
   612   000024                     	ds	1
   613   000025                     motor_response@mR:
   614                           	callstack 0
   615   000025                     motor_retrace@mR:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x24
   619   000025                     	ds	2
   620   000027                     ??_motor_response:
   621   000027                     ??_motor_retrace:
   622                           
   623                           ; 1 bytes @ 0x26
   624   000027                     	ds	2
   625   000029                     motor_response@j:
   626                           	callstack 0
   627                           
   628                           ; 2 bytes @ 0x28
   629   000029                     	ds	2
   630   00002B                     motor_response@j_502:
   631                           	callstack 0
   632                           
   633                           ; 2 bytes @ 0x2A
   634   00002B                     	ds	2
   635   00002D                     motor_response@j_503:
   636                           	callstack 0
   637                           
   638                           ; 2 bytes @ 0x2C
   639   00002D                     	ds	2
   640   00002F                     motor_response@j_504:
   641                           	callstack 0
   642                           
   643                           ; 2 bytes @ 0x2E
   644   00002F                     	ds	2
   645                           
   646 ;;
   647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   648 ;;
   649 ;; *************** function _main *****************
   650 ;; Defined at:
   651 ;;		line 22 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;		None
   654 ;; Auto vars:     Size  Location     Type
   655 ;;  buf           100    0        unsigned char [100]
   656 ;;  RGBC           32   16[BANK0 ] struct RGBC_val
   657 ;;  mR              9   57[BANK0 ] struct DC_motor
   658 ;;  mL              9   48[BANK0 ] struct DC_motor
   659 ;;  amb_clear       2    0        int 
   660 ;;  amb_blue        2    0        int 
   661 ;;  amb_green       2    0        int 
   662 ;;  amb_red         2    0        int 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   673 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   674 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   675 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   676 ;;Total ram usage:       52 bytes
   677 ;; Hardware stack levels required when called: 10
   678 ;; This function calls:
   679 ;;		_Color_Interrupts_init
   680 ;;		_Color_Interrupts_threshold
   681 ;;		_Interrupts_init
   682 ;;		_color_click_init
   683 ;;		_color_normalise
   684 ;;		_color_read_Blue
   685 ;;		_color_read_Clear
   686 ;;		_color_read_Green
   687 ;;		_color_read_RGBC
   688 ;;		_color_read_Red
   689 ;;		_fullSpeedAhead
   690 ;;		_initDCmotorsPWM
   691 ;;		_motorLinit
   692 ;;		_motorRinit
   693 ;;		_motor_response
   694 ;;		_motor_retrace
   695 ;;		_norm_stop
   696 ;;		_persistence_register
   697 ;;		_tricolorLED
   698 ;; This function is called by:
   699 ;;		Startup code after reset
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text0
   704   001FFE                     __ptext0:
   705                           	callstack 0
   706   001FFE                     _main:
   707                           	callstack 21
   708   001FFE                     
   709                           ;main.c: 24:     tricolorLED();
   710   001FFE  EC96  F015         	call	_tricolorLED	;wreg free
   711   002002                     
   712                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   713   002002  EC96  F014         	call	_color_click_init	;wreg free
   714   002006                     
   715                           ;main.c: 30:     Interrupts_init();
   716   002006  ECA1  F015         	call	_Interrupts_init	;wreg free
   717                           
   718                           ;main.c: 31:     Color_Interrupts_init();
   719   00200A  EC7C  F015         	call	_Color_Interrupts_init	;wreg free
   720                           
   721                           ;main.c: 32:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   722   00200E  C0F1  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   723   002012  C0F2  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   724   002016  C09C  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   725   00201A  C09D  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   726   00201E  ECF7  F014         	call	_Color_Interrupts_threshold	;wreg free
   727                           
   728                           ;main.c: 33:     persistence_register();
   729   002022  ECAC  F015         	call	_persistence_register	;wreg free
   730   002026                     
   731                           ;main.c: 35:     initDCmotorsPWM(200);
   732   002026  0E00               	movlw	0
   733   002028  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   734   00202A  0EC8               	movlw	200
   735   00202C  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   736   00202E  EC5E  F012         	call	_initDCmotorsPWM	;wreg free
   737   002032                     
   738                           ;main.c: 36:     DC_motor mL, mR;;main.c: 37:     motorLinit(&mL);
   739   002032  0EDF               	movlw	low main@mL
   740   002034  6E09               	movwf	motorLinit@mL^0,c
   741   002036  0E00               	movlw	high main@mL
   742   002038  6E0A               	movwf	(motorLinit@mL+1)^0,c
   743   00203A  EC7F  F013         	call	_motorLinit	;wreg free
   744   00203E                     
   745                           ;main.c: 38:     motorRinit(&mR);
   746   00203E  0EE8               	movlw	low main@mR
   747   002040  6E09               	movwf	motorRinit@mR^0,c
   748   002042  0E00               	movlw	high main@mR
   749   002044  6E0A               	movwf	(motorRinit@mR+1)^0,c
   750   002046  EC4A  F013         	call	_motorRinit	;wreg free
   751   00204A                     
   752                           ;main.c: 40:     TRISEbits.TRISE2 = 0;
   753   00204A  9485               	bcf	133,2,c	;volatile
   754   00204C                     
   755                           ;main.c: 41:     TRISEbits.TRISE4 = 0;
   756   00204C  9885               	bcf	133,4,c	;volatile
   757   00204E                     
   758                           ;main.c: 42:     TRISCbits.TRISC7 = 0;
   759   00204E  9E83               	bcf	131,7,c	;volatile
   760   002050                     
   761                           ;main.c: 43:     TRISGbits.TRISG6 = 0;
   762   002050  9C87               	bcf	135,6,c	;volatile
   763   002052                     
   764                           ;main.c: 44:     TRISDbits.TRISD7 = 0;
   765   002052  9E84               	bcf	132,7,c	;volatile
   766   002054                     
   767                           ;main.c: 45:     LATDbits.LATD7 = 0;
   768   002054  9E7C               	bcf	124,7,c	;volatile
   769   002056                     
   770                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
   771   002056  9688               	bcf	136,3,c	;volatile
   772   002058                     
   773                           ;main.c: 47:     LATHbits.LATH3 = 0;
   774   002058  9680               	bcf	128,3,c	;volatile
   775   00205A  ECB4  F013         	call	_color_read_Red	;wreg free
   776   00205E  EC2C  F014         	call	_color_read_Blue	;wreg free
   777   002062  ECDC  F013         	call	_color_read_Green	;wreg free
   778   002066  EC04  F014         	call	_color_read_Clear	;wreg free
   779   00206A                     l3462:
   780                           
   781                           ;main.c: 56:         fullSpeedAhead(&mL, &mR);
   782   00206A  0EDF               	movlw	low main@mL
   783   00206C  6E1C               	movwf	fullSpeedAhead@mL^0,c
   784   00206E  0E00               	movlw	high main@mL
   785   002070  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   786   002072  0EE8               	movlw	low main@mR
   787   002074  6E1E               	movwf	fullSpeedAhead@mR^0,c
   788   002076  0E00               	movlw	high main@mR
   789   002078  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   790   00207A  EC86  F011         	call	_fullSpeedAhead	;wreg free
   791   00207E                     
   792                           ;main.c: 58:         LATHbits.LATH3 = 1;
   793   00207E  8680               	bsf	128,3,c	;volatile
   794   002080                     
   795                           ;main.c: 59:         if (interrupt_flag == 1 ) {
   796   002080  0100               	movlb	0	; () banked
   797   002082  059E               	decf	_interrupt_flag& (0+255),w,b
   798   002084  119F               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   799   002086  A4D8               	btfss	status,2,c
   800   002088  EF48  F010         	goto	u2251
   801   00208C  EF4A  F010         	goto	u2250
   802   002090                     u2251:
   803   002090  EF35  F010         	goto	l3462
   804   002094                     u2250:
   805   002094                     
   806                           ; BSR set to: 0
   807                           ;main.c: 61:             norm_stop(&mL, &mR);
   808   002094  0EDF               	movlw	low main@mL
   809   002096  6E1C               	movwf	norm_stop@mL^0,c
   810   002098  0E00               	movlw	high main@mL
   811   00209A  6E1D               	movwf	(norm_stop@mL+1)^0,c
   812   00209C  0EE8               	movlw	low main@mR
   813   00209E  6E1E               	movwf	norm_stop@mR^0,c
   814   0020A0  0E00               	movlw	high main@mR
   815   0020A2  6E1F               	movwf	(norm_stop@mR+1)^0,c
   816   0020A4  ECB0  F014         	call	_norm_stop	;wreg free
   817   0020A8                     
   818                           ;main.c: 62:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   819   0020A8  0E52               	movlw	82
   820   0020AA  0100               	movlb	0	; () banked
   821   0020AC  6FBE               	movwf	(??_main+1)& (0+255),b
   822   0020AE  0E2B               	movlw	43
   823   0020B0  6FBD               	movwf	??_main& (0+255),b
   824   0020B2  0E00               	movlw	0
   825   0020B4                     u2287:
   826   0020B4  2EE8               	decfsz	wreg,f,c
   827   0020B6  D7FE               	bra	u2287
   828   0020B8  2FBD               	decfsz	??_main& (0+255),f,b
   829   0020BA  D7FC               	bra	u2287
   830   0020BC  2FBE               	decfsz	(??_main+1)& (0+255),f,b
   831   0020BE  D7FA               	bra	u2287
   832   0020C0  F000               	nop	
   833   0020C2                     
   834                           ;main.c: 63:             LATDbits.LATD7 = 0;
   835   0020C2  9E7C               	bcf	124,7,c	;volatile
   836   0020C4                     
   837                           ;main.c: 64:             color_read_RGBC(&RGBC);
   838   0020C4  0EBF               	movlw	low main@RGBC
   839   0020C6  6E22               	movwf	color_read_RGBC@temp^0,c
   840   0020C8  0E00               	movlw	high main@RGBC
   841   0020CA  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   842   0020CC  ECFB  F011         	call	_color_read_RGBC	;wreg free
   843   0020D0                     
   844                           ;main.c: 65:             color_normalise(&RGBC);
   845   0020D0  0EBF               	movlw	low main@RGBC
   846   0020D2  6E22               	movwf	color_normalise@RGBC^0,c
   847   0020D4  0E00               	movlw	high main@RGBC
   848   0020D6  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   849   0020D8  EC56  F00F         	call	_color_normalise	;wreg free
   850   0020DC                     
   851                           ;main.c: 68:             if(motor_return=0){
   852   0020DC  0E00               	movlw	0
   853   0020DE  6E51               	movwf	_motor_return^0,c
   854   0020E0                     
   855                           ;main.c: 73:                 motor_retrace(&buggy_path, &mL, &mR);
   856   0020E0  0EA0               	movlw	low _buggy_path
   857   0020E2  6E21               	movwf	motor_retrace@buggy_path^0,c
   858   0020E4  0E00               	movlw	high _buggy_path
   859   0020E6  6E22               	movwf	(motor_retrace@buggy_path+1)^0,c
   860   0020E8  0EDF               	movlw	low main@mL
   861   0020EA  6E23               	movwf	motor_retrace@mL^0,c
   862   0020EC  0E00               	movlw	high main@mL
   863   0020EE  6E24               	movwf	(motor_retrace@mL+1)^0,c
   864   0020F0  0EE8               	movlw	low main@mR
   865   0020F2  6E25               	movwf	motor_retrace@mR^0,c
   866   0020F4  0E00               	movlw	high main@mR
   867   0020F6  6E26               	movwf	(motor_retrace@mR+1)^0,c
   868   0020F8  EC0C  F007         	call	_motor_retrace	;wreg free
   869   0020FC                     
   870                           ;main.c: 76:             LATHbits.LATH3 = 0;
   871   0020FC  9680               	bcf	128,3,c	;volatile
   872   0020FE                     
   873                           ;main.c: 77:             interrupt_flag = 0;
   874   0020FE  0E00               	movlw	0
   875   002100  0100               	movlb	0	; () banked
   876   002102  6F9F               	movwf	(_interrupt_flag+1)& (0+255),b
   877   002104  0E00               	movlw	0
   878   002106  6F9E               	movwf	_interrupt_flag& (0+255),b
   879   002108  EF35  F010         	goto	l3462
   880   00210C  EF19  F000         	goto	start
   881   002110                     __end_of_main:
   882                           	callstack 0
   883                           
   884 ;; *************** function _tricolorLED *****************
   885 ;; Defined at:
   886 ;;		line 113 in file "color.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		None
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 6
   907 ;; This function calls:
   908 ;;		Nothing
   909 ;; This function is called by:
   910 ;;		_main
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text1
   915   002B2C                     __ptext1:
   916                           	callstack 0
   917   002B2C                     _tricolorLED:
   918                           	callstack 24
   919   002B2C                     
   920                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
   921   002B2C  9087               	bcf	135,0,c	;volatile
   922                           
   923                           ;color.c: 116:     LATGbits.LATG0 = 1;
   924   002B2E  807F               	bsf	127,0,c	;volatile
   925                           
   926                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
   927   002B30  9881               	bcf	129,4,c	;volatile
   928                           
   929                           ;color.c: 118:     LATAbits.LATA4 = 1;
   930   002B32  8879               	bsf	121,4,c	;volatile
   931                           
   932                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
   933   002B34  9E86               	bcf	134,7,c	;volatile
   934                           
   935                           ;color.c: 120:     LATFbits.LATF7 = 1;
   936   002B36  8E7E               	bsf	126,7,c	;volatile
   937                           
   938                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
   939   002B38  9681               	bcf	129,3,c	;volatile
   940                           
   941                           ;color.c: 122:     LATAbits.LATA3 = 1;
   942   002B3A  8679               	bsf	121,3,c	;volatile
   943                           
   944                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
   945   002B3C  9E85               	bcf	133,7,c	;volatile
   946                           
   947                           ;color.c: 124:     LATEbits.LATE7 = 1;
   948   002B3E  8E7D               	bsf	125,7,c	;volatile
   949   002B40  0012               	return		;funcret
   950   002B42                     __end_of_tricolorLED:
   951                           	callstack 0
   952                           
   953 ;; *************** function _persistence_register *****************
   954 ;; Defined at:
   955 ;;		line 46 in file "interrupts.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, status,2, status,0, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 9
   976 ;; This function calls:
   977 ;;		_color_writetoaddr
   978 ;; This function is called by:
   979 ;;		_main
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text2
   984   002B58                     __ptext2:
   985                           	callstack 0
   986   002B58                     _persistence_register:
   987                           	callstack 21
   988   002B58                     
   989                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   990   002B58  0E02               	movlw	2
   991   002B5A  6E0B               	movwf	color_writetoaddr@value^0,c
   992   002B5C  0E0C               	movlw	12
   993   002B5E  EC5C  F015         	call	_color_writetoaddr
   994   002B62  0012               	return		;funcret
   995   002B64                     __end_of_persistence_register:
   996                           	callstack 0
   997                           
   998 ;; *************** function _motor_retrace *****************
   999 ;; Defined at:
  1000 ;;		line 222 in file "color.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  buggy_path      2   32[COMRAM] PTR unsigned char 
  1003 ;;		 -> buggy_path(15), 
  1004 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1005 ;;		 -> main@mL(9), 
  1006 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1007 ;;		 -> main@mR(9), 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  j               2   12[BANK0 ] int 
  1010 ;;  j               2   10[BANK0 ] int 
  1011 ;;  j               2    8[BANK0 ] int 
  1012 ;;  j               2    6[BANK0 ] int 
  1013 ;;  j               2    4[BANK0 ] int 
  1014 ;;  j               2    2[BANK0 ] int 
  1015 ;;  j               2    0[BANK0 ] int 
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1025 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1026 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1027 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1028 ;;      Totals:         8      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1029 ;;Total ram usage:       22 bytes
  1030 ;; Hardware stack levels used: 1
  1031 ;; Hardware stack levels required when called: 9
  1032 ;; This function calls:
  1033 ;;		_norm_stop
  1034 ;;		_reverse
  1035 ;;		_turnLeft
  1036 ;;		_turnRight
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text3
  1043   000E18                     __ptext3:
  1044                           	callstack 0
  1045   000E18                     _motor_retrace:
  1046                           	callstack 21
  1047   000E18                     
  1048                           ;color.c: 223:     if (buggy_path[ctr]==1) {
  1049   000E18  504D               	movf	_ctr^0,w,c
  1050   000E1A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1051   000E1C  6ED9               	movwf	fsr2l,c
  1052   000E1E  504E               	movf	(_ctr+1)^0,w,c
  1053   000E20  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1054   000E22  6EDA               	movwf	fsr2h,c
  1055   000E24  04DE               	decf	postinc2,w,c
  1056   000E26  A4D8               	btfss	status,2,c
  1057   000E28  EF18  F007         	goto	u2101
  1058   000E2C  EF1A  F007         	goto	u2100
  1059   000E30                     u2101:
  1060   000E30  EF5E  F007         	goto	l3312
  1061   000E34                     u2100:
  1062   000E34                     
  1063                           ;color.c: 224:      for (int j = 0; j <= 15; j++) {
  1064   000E34  0E00               	movlw	0
  1065   000E36  0100               	movlb	0	; () banked
  1066   000E38  6FB0               	movwf	(motor_retrace@j+1)& (0+255),b
  1067   000E3A  0E00               	movlw	0
  1068   000E3C  6FAF               	movwf	motor_retrace@j& (0+255),b
  1069   000E3E                     l3304:
  1070                           
  1071                           ; BSR set to: 0
  1072                           ;color.c: 225:          turnLeft(mL, mR);
  1073   000E3E  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1074   000E42  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1075   000E46  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1076   000E4A  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1077   000E4E  EC11  F013         	call	_turnLeft	;wreg free
  1078   000E52                     
  1079                           ;color.c: 226:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1080   000E52  0E03               	movlw	3
  1081   000E54  6E28               	movwf	(??_motor_retrace+1)^0,c
  1082   000E56  0E70               	movlw	112
  1083   000E58  6E27               	movwf	??_motor_retrace^0,c
  1084   000E5A  0E5C               	movlw	92
  1085   000E5C                     u2297:
  1086   000E5C  2EE8               	decfsz	wreg,f,c
  1087   000E5E  D7FE               	bra	u2297
  1088   000E60  2E27               	decfsz	??_motor_retrace^0,f,c
  1089   000E62  D7FC               	bra	u2297
  1090   000E64  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1091   000E66  D7FA               	bra	u2297
  1092   000E68  D000               	nop2	
  1093   000E6A                     
  1094                           ;color.c: 227:          norm_stop(mL, mR);
  1095   000E6A  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1096   000E6E  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1097   000E72  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1098   000E76  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1099   000E7A  ECB0  F014         	call	_norm_stop	;wreg free
  1100                           
  1101                           ;color.c: 228:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1102   000E7E  0E03               	movlw	3
  1103   000E80  6E28               	movwf	(??_motor_retrace+1)^0,c
  1104   000E82  0E70               	movlw	112
  1105   000E84  6E27               	movwf	??_motor_retrace^0,c
  1106   000E86  0E5C               	movlw	92
  1107   000E88                     u2307:
  1108   000E88  2EE8               	decfsz	wreg,f,c
  1109   000E8A  D7FE               	bra	u2307
  1110   000E8C  2E27               	decfsz	??_motor_retrace^0,f,c
  1111   000E8E  D7FC               	bra	u2307
  1112   000E90  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1113   000E92  D7FA               	bra	u2307
  1114   000E94  D000               	nop2	
  1115   000E96                     
  1116                           ;color.c: 229:      }
  1117   000E96  0100               	movlb	0	; () banked
  1118   000E98  4BAF               	infsnz	motor_retrace@j& (0+255),f,b
  1119   000E9A  2BB0               	incf	(motor_retrace@j+1)& (0+255),f,b
  1120   000E9C  BFB0               	btfsc	(motor_retrace@j+1)& (0+255),7,b
  1121   000E9E  EF5A  F007         	goto	u2111
  1122   000EA2  51B0               	movf	(motor_retrace@j+1)& (0+255),w,b
  1123   000EA4  E109               	bnz	u2110
  1124   000EA6  0E10               	movlw	16
  1125   000EA8  5DAF               	subwf	motor_retrace@j& (0+255),w,b
  1126   000EAA  A0D8               	btfss	status,0,c
  1127   000EAC  EF5A  F007         	goto	u2111
  1128   000EB0  EF5C  F007         	goto	u2110
  1129   000EB4                     u2111:
  1130   000EB4  EF1F  F007         	goto	l3304
  1131   000EB8                     u2110:
  1132   000EB8  EF9B  F009         	goto	l3420
  1133   000EBC                     l3312:
  1134   000EBC  504D               	movf	_ctr^0,w,c
  1135   000EBE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1136   000EC0  6ED9               	movwf	fsr2l,c
  1137   000EC2  504E               	movf	(_ctr+1)^0,w,c
  1138   000EC4  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1139   000EC6  6EDA               	movwf	fsr2h,c
  1140   000EC8  0E02               	movlw	2
  1141   000ECA  18DE               	xorwf	postinc2,w,c
  1142   000ECC  A4D8               	btfss	status,2,c
  1143   000ECE  EF6B  F007         	goto	u2121
  1144   000ED2  EF6D  F007         	goto	u2120
  1145   000ED6                     u2121:
  1146   000ED6  EFB1  F007         	goto	l3328
  1147   000EDA                     u2120:
  1148   000EDA                     
  1149                           ;color.c: 232:     for (int j = 0; j <= 15; j++) {
  1150   000EDA  0E00               	movlw	0
  1151   000EDC  0100               	movlb	0	; () banked
  1152   000EDE  6FB2               	movwf	(motor_retrace@j_510+1)& (0+255),b
  1153   000EE0  0E00               	movlw	0
  1154   000EE2  6FB1               	movwf	motor_retrace@j_510& (0+255),b
  1155   000EE4                     l3320:
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;color.c: 233:         turnRight(mL, mR);
  1159   000EE4  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1160   000EE8  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1161   000EEC  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1162   000EF0  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1163   000EF4  ECD8  F012         	call	_turnRight	;wreg free
  1164   000EF8                     
  1165                           ;color.c: 234:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1166   000EF8  0E03               	movlw	3
  1167   000EFA  6E28               	movwf	(??_motor_retrace+1)^0,c
  1168   000EFC  0E70               	movlw	112
  1169   000EFE  6E27               	movwf	??_motor_retrace^0,c
  1170   000F00  0E5C               	movlw	92
  1171   000F02                     u2317:
  1172   000F02  2EE8               	decfsz	wreg,f,c
  1173   000F04  D7FE               	bra	u2317
  1174   000F06  2E27               	decfsz	??_motor_retrace^0,f,c
  1175   000F08  D7FC               	bra	u2317
  1176   000F0A  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1177   000F0C  D7FA               	bra	u2317
  1178   000F0E  D000               	nop2	
  1179   000F10                     
  1180                           ;color.c: 235:         norm_stop(mL, mR);
  1181   000F10  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1182   000F14  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1183   000F18  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1184   000F1C  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1185   000F20  ECB0  F014         	call	_norm_stop	;wreg free
  1186                           
  1187                           ;color.c: 236:         _delay((unsigned long)((30)*(64000000/4000.0)));
  1188   000F24  0E03               	movlw	3
  1189   000F26  6E28               	movwf	(??_motor_retrace+1)^0,c
  1190   000F28  0E70               	movlw	112
  1191   000F2A  6E27               	movwf	??_motor_retrace^0,c
  1192   000F2C  0E5C               	movlw	92
  1193   000F2E                     u2327:
  1194   000F2E  2EE8               	decfsz	wreg,f,c
  1195   000F30  D7FE               	bra	u2327
  1196   000F32  2E27               	decfsz	??_motor_retrace^0,f,c
  1197   000F34  D7FC               	bra	u2327
  1198   000F36  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1199   000F38  D7FA               	bra	u2327
  1200   000F3A  D000               	nop2	
  1201   000F3C                     
  1202                           ;color.c: 237:     }
  1203   000F3C  0100               	movlb	0	; () banked
  1204   000F3E  4BB1               	infsnz	motor_retrace@j_510& (0+255),f,b
  1205   000F40  2BB2               	incf	(motor_retrace@j_510+1)& (0+255),f,b
  1206   000F42  BFB2               	btfsc	(motor_retrace@j_510+1)& (0+255),7,b
  1207   000F44  EFAD  F007         	goto	u2131
  1208   000F48  51B2               	movf	(motor_retrace@j_510+1)& (0+255),w,b
  1209   000F4A  E109               	bnz	u2130
  1210   000F4C  0E10               	movlw	16
  1211   000F4E  5DB1               	subwf	motor_retrace@j_510& (0+255),w,b
  1212   000F50  A0D8               	btfss	status,0,c
  1213   000F52  EFAD  F007         	goto	u2131
  1214   000F56  EFAF  F007         	goto	u2130
  1215   000F5A                     u2131:
  1216   000F5A  EF72  F007         	goto	l3320
  1217   000F5E                     u2130:
  1218   000F5E  EF9B  F009         	goto	l3420
  1219   000F62                     l3328:
  1220   000F62  504D               	movf	_ctr^0,w,c
  1221   000F64  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1222   000F66  6ED9               	movwf	fsr2l,c
  1223   000F68  504E               	movf	(_ctr+1)^0,w,c
  1224   000F6A  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1225   000F6C  6EDA               	movwf	fsr2h,c
  1226   000F6E  0E03               	movlw	3
  1227   000F70  18DE               	xorwf	postinc2,w,c
  1228   000F72  A4D8               	btfss	status,2,c
  1229   000F74  EFBE  F007         	goto	u2141
  1230   000F78  EFC0  F007         	goto	u2140
  1231   000F7C                     u2141:
  1232   000F7C  EF04  F008         	goto	l3344
  1233   000F80                     u2140:
  1234   000F80                     
  1235                           ;color.c: 240:      for (int j = 0; j <= 29; j++) {
  1236   000F80  0E00               	movlw	0
  1237   000F82  0100               	movlb	0	; () banked
  1238   000F84  6FB4               	movwf	(motor_retrace@j_511+1)& (0+255),b
  1239   000F86  0E00               	movlw	0
  1240   000F88  6FB3               	movwf	motor_retrace@j_511& (0+255),b
  1241   000F8A                     l3336:
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;color.c: 241:          turnRight(mL, mR);
  1245   000F8A  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1246   000F8E  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1247   000F92  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1248   000F96  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1249   000F9A  ECD8  F012         	call	_turnRight	;wreg free
  1250   000F9E                     
  1251                           ;color.c: 242:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1252   000F9E  0E03               	movlw	3
  1253   000FA0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1254   000FA2  0E70               	movlw	112
  1255   000FA4  6E27               	movwf	??_motor_retrace^0,c
  1256   000FA6  0E5C               	movlw	92
  1257   000FA8                     u2337:
  1258   000FA8  2EE8               	decfsz	wreg,f,c
  1259   000FAA  D7FE               	bra	u2337
  1260   000FAC  2E27               	decfsz	??_motor_retrace^0,f,c
  1261   000FAE  D7FC               	bra	u2337
  1262   000FB0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1263   000FB2  D7FA               	bra	u2337
  1264   000FB4  D000               	nop2	
  1265   000FB6                     
  1266                           ;color.c: 243:          norm_stop(mL, mR);
  1267   000FB6  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1268   000FBA  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1269   000FBE  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1270   000FC2  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1271   000FC6  ECB0  F014         	call	_norm_stop	;wreg free
  1272                           
  1273                           ;color.c: 244:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1274   000FCA  0E03               	movlw	3
  1275   000FCC  6E28               	movwf	(??_motor_retrace+1)^0,c
  1276   000FCE  0E70               	movlw	112
  1277   000FD0  6E27               	movwf	??_motor_retrace^0,c
  1278   000FD2  0E5C               	movlw	92
  1279   000FD4                     u2347:
  1280   000FD4  2EE8               	decfsz	wreg,f,c
  1281   000FD6  D7FE               	bra	u2347
  1282   000FD8  2E27               	decfsz	??_motor_retrace^0,f,c
  1283   000FDA  D7FC               	bra	u2347
  1284   000FDC  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1285   000FDE  D7FA               	bra	u2347
  1286   000FE0  D000               	nop2	
  1287   000FE2                     
  1288                           ;color.c: 245:      }
  1289   000FE2  0100               	movlb	0	; () banked
  1290   000FE4  4BB3               	infsnz	motor_retrace@j_511& (0+255),f,b
  1291   000FE6  2BB4               	incf	(motor_retrace@j_511+1)& (0+255),f,b
  1292   000FE8  BFB4               	btfsc	(motor_retrace@j_511+1)& (0+255),7,b
  1293   000FEA  EF00  F008         	goto	u2151
  1294   000FEE  51B4               	movf	(motor_retrace@j_511+1)& (0+255),w,b
  1295   000FF0  E109               	bnz	u2150
  1296   000FF2  0E1E               	movlw	30
  1297   000FF4  5DB3               	subwf	motor_retrace@j_511& (0+255),w,b
  1298   000FF6  A0D8               	btfss	status,0,c
  1299   000FF8  EF00  F008         	goto	u2151
  1300   000FFC  EF02  F008         	goto	u2150
  1301   001000                     u2151:
  1302   001000  EFC5  F007         	goto	l3336
  1303   001004                     u2150:
  1304   001004  EF9B  F009         	goto	l3420
  1305   001008                     l3344:
  1306   001008  504D               	movf	_ctr^0,w,c
  1307   00100A  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1308   00100C  6ED9               	movwf	fsr2l,c
  1309   00100E  504E               	movf	(_ctr+1)^0,w,c
  1310   001010  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1311   001012  6EDA               	movwf	fsr2h,c
  1312   001014  0E04               	movlw	4
  1313   001016  18DE               	xorwf	postinc2,w,c
  1314   001018  A4D8               	btfss	status,2,c
  1315   00101A  EF11  F008         	goto	u2161
  1316   00101E  EF13  F008         	goto	u2160
  1317   001022                     u2161:
  1318   001022  EF7E  F008         	goto	l3366
  1319   001026                     u2160:
  1320   001026                     
  1321                           ;color.c: 249:      reverse(mL, mR);
  1322   001026  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1323   00102A  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1324   00102E  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1325   001032  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1326   001036  EC0A  F011         	call	_reverse	;wreg free
  1327   00103A                     
  1328                           ;color.c: 250:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1329   00103A  0ED0               	movlw	208
  1330   00103C  6E27               	movwf	??_motor_retrace^0,c
  1331   00103E  0ECA               	movlw	202
  1332   001040                     u2357:
  1333   001040  2EE8               	decfsz	wreg,f,c
  1334   001042  D7FE               	bra	u2357
  1335   001044  2E27               	decfsz	??_motor_retrace^0,f,c
  1336   001046  D7FC               	bra	u2357
  1337   001048                     
  1338                           ;color.c: 251:      norm_stop(mL, mR);
  1339   001048  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1340   00104C  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1341   001050  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1342   001054  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1343   001058  ECB0  F014         	call	_norm_stop	;wreg free
  1344                           
  1345                           ;color.c: 252:      _delay((unsigned long)((100)*(64000000/4000.0)));
  1346   00105C  0E09               	movlw	9
  1347   00105E  6E28               	movwf	(??_motor_retrace+1)^0,c
  1348   001060  0E1E               	movlw	30
  1349   001062  6E27               	movwf	??_motor_retrace^0,c
  1350   001064  0EE4               	movlw	228
  1351   001066                     u2367:
  1352   001066  2EE8               	decfsz	wreg,f,c
  1353   001068  D7FE               	bra	u2367
  1354   00106A  2E27               	decfsz	??_motor_retrace^0,f,c
  1355   00106C  D7FC               	bra	u2367
  1356   00106E  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1357   001070  D7FA               	bra	u2367
  1358   001072  D000               	nop2	
  1359   001074                     
  1360                           ;color.c: 253:      for (int j = 0; j <= 16; j++) {
  1361   001074  0E00               	movlw	0
  1362   001076  0100               	movlb	0	; () banked
  1363   001078  6FB6               	movwf	(motor_retrace@j_512+1)& (0+255),b
  1364   00107A  0E00               	movlw	0
  1365   00107C  6FB5               	movwf	motor_retrace@j_512& (0+255),b
  1366   00107E                     l3358:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;color.c: 254:          turnLeft(mL, mR);
  1370   00107E  C023  F01C         	movff	motor_retrace@mL,turnLeft@mL
  1371   001082  C024  F01D         	movff	motor_retrace@mL+1,turnLeft@mL+1
  1372   001086  C025  F01E         	movff	motor_retrace@mR,turnLeft@mR
  1373   00108A  C026  F01F         	movff	motor_retrace@mR+1,turnLeft@mR+1
  1374   00108E  EC11  F013         	call	_turnLeft	;wreg free
  1375   001092                     
  1376                           ;color.c: 255:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1377   001092  0E03               	movlw	3
  1378   001094  6E28               	movwf	(??_motor_retrace+1)^0,c
  1379   001096  0E70               	movlw	112
  1380   001098  6E27               	movwf	??_motor_retrace^0,c
  1381   00109A  0E5C               	movlw	92
  1382   00109C                     u2377:
  1383   00109C  2EE8               	decfsz	wreg,f,c
  1384   00109E  D7FE               	bra	u2377
  1385   0010A0  2E27               	decfsz	??_motor_retrace^0,f,c
  1386   0010A2  D7FC               	bra	u2377
  1387   0010A4  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1388   0010A6  D7FA               	bra	u2377
  1389   0010A8  D000               	nop2	
  1390   0010AA                     
  1391                           ;color.c: 256:          norm_stop(mL, mR);
  1392   0010AA  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1393   0010AE  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1394   0010B2  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1395   0010B6  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1396   0010BA  ECB0  F014         	call	_norm_stop	;wreg free
  1397                           
  1398                           ;color.c: 257:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1399   0010BE  0E03               	movlw	3
  1400   0010C0  6E28               	movwf	(??_motor_retrace+1)^0,c
  1401   0010C2  0E70               	movlw	112
  1402   0010C4  6E27               	movwf	??_motor_retrace^0,c
  1403   0010C6  0E5C               	movlw	92
  1404   0010C8                     u2387:
  1405   0010C8  2EE8               	decfsz	wreg,f,c
  1406   0010CA  D7FE               	bra	u2387
  1407   0010CC  2E27               	decfsz	??_motor_retrace^0,f,c
  1408   0010CE  D7FC               	bra	u2387
  1409   0010D0  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1410   0010D2  D7FA               	bra	u2387
  1411   0010D4  D000               	nop2	
  1412   0010D6                     
  1413                           ;color.c: 258:      }
  1414   0010D6  0100               	movlb	0	; () banked
  1415   0010D8  4BB5               	infsnz	motor_retrace@j_512& (0+255),f,b
  1416   0010DA  2BB6               	incf	(motor_retrace@j_512+1)& (0+255),f,b
  1417   0010DC  BFB6               	btfsc	(motor_retrace@j_512+1)& (0+255),7,b
  1418   0010DE  EF7A  F008         	goto	u2171
  1419   0010E2  51B6               	movf	(motor_retrace@j_512+1)& (0+255),w,b
  1420   0010E4  E109               	bnz	u2170
  1421   0010E6  0E11               	movlw	17
  1422   0010E8  5DB5               	subwf	motor_retrace@j_512& (0+255),w,b
  1423   0010EA  A0D8               	btfss	status,0,c
  1424   0010EC  EF7A  F008         	goto	u2171
  1425   0010F0  EF7C  F008         	goto	u2170
  1426   0010F4                     u2171:
  1427   0010F4  EF3F  F008         	goto	l3358
  1428   0010F8                     u2170:
  1429   0010F8  EF9B  F009         	goto	l3420
  1430   0010FC                     l3366:
  1431   0010FC  504D               	movf	_ctr^0,w,c
  1432   0010FE  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1433   001100  6ED9               	movwf	fsr2l,c
  1434   001102  504E               	movf	(_ctr+1)^0,w,c
  1435   001104  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1436   001106  6EDA               	movwf	fsr2h,c
  1437   001108  0E05               	movlw	5
  1438   00110A  18DE               	xorwf	postinc2,w,c
  1439   00110C  A4D8               	btfss	status,2,c
  1440   00110E  EF8B  F008         	goto	u2181
  1441   001112  EF8D  F008         	goto	u2180
  1442   001116                     u2181:
  1443   001116  EFF7  F008         	goto	l3388
  1444   00111A                     u2180:
  1445   00111A                     
  1446                           ;color.c: 261:      reverse(mL, mR);
  1447   00111A  C023  F01C         	movff	motor_retrace@mL,reverse@mL
  1448   00111E  C024  F01D         	movff	motor_retrace@mL+1,reverse@mL+1
  1449   001122  C025  F01E         	movff	motor_retrace@mR,reverse@mR
  1450   001126  C026  F01F         	movff	motor_retrace@mR+1,reverse@mR+1
  1451   00112A  EC0A  F011         	call	_reverse	;wreg free
  1452   00112E                     
  1453                           ;color.c: 262:      _delay((unsigned long)((10)*(64000000/4000.0)));
  1454   00112E  0ED0               	movlw	208
  1455   001130  6E27               	movwf	??_motor_retrace^0,c
  1456   001132  0ECA               	movlw	202
  1457   001134                     u2397:
  1458   001134  2EE8               	decfsz	wreg,f,c
  1459   001136  D7FE               	bra	u2397
  1460   001138  2E27               	decfsz	??_motor_retrace^0,f,c
  1461   00113A  D7FC               	bra	u2397
  1462   00113C                     
  1463                           ;color.c: 263:      norm_stop(mL, mR);
  1464   00113C  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1465   001140  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1466   001144  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1467   001148  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1468   00114C  ECB0  F014         	call	_norm_stop	;wreg free
  1469                           
  1470                           ;color.c: 264:      _delay((unsigned long)((300)*(64000000/4000.0)));
  1471   001150  0E19               	movlw	25
  1472   001152  6E28               	movwf	(??_motor_retrace+1)^0,c
  1473   001154  0E5A               	movlw	90
  1474   001156  6E27               	movwf	??_motor_retrace^0,c
  1475   001158  0EB2               	movlw	178
  1476   00115A                     u2407:
  1477   00115A  2EE8               	decfsz	wreg,f,c
  1478   00115C  D7FE               	bra	u2407
  1479   00115E  2E27               	decfsz	??_motor_retrace^0,f,c
  1480   001160  D7FC               	bra	u2407
  1481   001162  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1482   001164  D7FA               	bra	u2407
  1483   001166                     
  1484                           ;color.c: 265:      for (int j = 0; j <= 12; j++) {
  1485   001166  0E00               	movlw	0
  1486   001168  0100               	movlb	0	; () banked
  1487   00116A  6FB8               	movwf	(motor_retrace@j_513+1)& (0+255),b
  1488   00116C  0E00               	movlw	0
  1489   00116E  6FB7               	movwf	motor_retrace@j_513& (0+255),b
  1490   001170                     l3380:
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;color.c: 266:          turnRight(mL, mR);
  1494   001170  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1495   001174  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1496   001178  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1497   00117C  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1498   001180  ECD8  F012         	call	_turnRight	;wreg free
  1499   001184                     
  1500                           ;color.c: 267:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1501   001184  0E03               	movlw	3
  1502   001186  6E28               	movwf	(??_motor_retrace+1)^0,c
  1503   001188  0E70               	movlw	112
  1504   00118A  6E27               	movwf	??_motor_retrace^0,c
  1505   00118C  0E5C               	movlw	92
  1506   00118E                     u2417:
  1507   00118E  2EE8               	decfsz	wreg,f,c
  1508   001190  D7FE               	bra	u2417
  1509   001192  2E27               	decfsz	??_motor_retrace^0,f,c
  1510   001194  D7FC               	bra	u2417
  1511   001196  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1512   001198  D7FA               	bra	u2417
  1513   00119A  D000               	nop2	
  1514   00119C                     
  1515                           ;color.c: 268:          norm_stop(mL, mR);
  1516   00119C  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1517   0011A0  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1518   0011A4  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1519   0011A8  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1520   0011AC  ECB0  F014         	call	_norm_stop	;wreg free
  1521                           
  1522                           ;color.c: 269:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1523   0011B0  0E03               	movlw	3
  1524   0011B2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1525   0011B4  0E70               	movlw	112
  1526   0011B6  6E27               	movwf	??_motor_retrace^0,c
  1527   0011B8  0E5C               	movlw	92
  1528   0011BA                     u2427:
  1529   0011BA  2EE8               	decfsz	wreg,f,c
  1530   0011BC  D7FE               	bra	u2427
  1531   0011BE  2E27               	decfsz	??_motor_retrace^0,f,c
  1532   0011C0  D7FC               	bra	u2427
  1533   0011C2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1534   0011C4  D7FA               	bra	u2427
  1535   0011C6  D000               	nop2	
  1536   0011C8                     
  1537                           ;color.c: 270:      }
  1538   0011C8  0100               	movlb	0	; () banked
  1539   0011CA  4BB7               	infsnz	motor_retrace@j_513& (0+255),f,b
  1540   0011CC  2BB8               	incf	(motor_retrace@j_513+1)& (0+255),f,b
  1541   0011CE  BFB8               	btfsc	(motor_retrace@j_513+1)& (0+255),7,b
  1542   0011D0  EFF3  F008         	goto	u2191
  1543   0011D4  51B8               	movf	(motor_retrace@j_513+1)& (0+255),w,b
  1544   0011D6  E109               	bnz	u2190
  1545   0011D8  0E0D               	movlw	13
  1546   0011DA  5DB7               	subwf	motor_retrace@j_513& (0+255),w,b
  1547   0011DC  A0D8               	btfss	status,0,c
  1548   0011DE  EFF3  F008         	goto	u2191
  1549   0011E2  EFF5  F008         	goto	u2190
  1550   0011E6                     u2191:
  1551   0011E6  EFB8  F008         	goto	l3380
  1552   0011EA                     u2190:
  1553   0011EA  EF9B  F009         	goto	l3420
  1554   0011EE                     l3388:
  1555   0011EE  504D               	movf	_ctr^0,w,c
  1556   0011F0  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1557   0011F2  6ED9               	movwf	fsr2l,c
  1558   0011F4  504E               	movf	(_ctr+1)^0,w,c
  1559   0011F6  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1560   0011F8  6EDA               	movwf	fsr2h,c
  1561   0011FA  0E06               	movlw	6
  1562   0011FC  18DE               	xorwf	postinc2,w,c
  1563   0011FE  A4D8               	btfss	status,2,c
  1564   001200  EF04  F009         	goto	u2201
  1565   001204  EF06  F009         	goto	u2200
  1566   001208                     u2201:
  1567   001208  EF4A  F009         	goto	l3404
  1568   00120C                     u2200:
  1569   00120C                     
  1570                           ;color.c: 273:      for (int j = 0; j <= 23; j++) {
  1571   00120C  0E00               	movlw	0
  1572   00120E  0100               	movlb	0	; () banked
  1573   001210  6FBA               	movwf	(motor_retrace@j_514+1)& (0+255),b
  1574   001212  0E00               	movlw	0
  1575   001214  6FB9               	movwf	motor_retrace@j_514& (0+255),b
  1576   001216                     l3396:
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;color.c: 274:          turnRight(mL, mR);
  1580   001216  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1581   00121A  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1582   00121E  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1583   001222  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1584   001226  ECD8  F012         	call	_turnRight	;wreg free
  1585   00122A                     
  1586                           ;color.c: 275:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1587   00122A  0E03               	movlw	3
  1588   00122C  6E28               	movwf	(??_motor_retrace+1)^0,c
  1589   00122E  0E70               	movlw	112
  1590   001230  6E27               	movwf	??_motor_retrace^0,c
  1591   001232  0E5C               	movlw	92
  1592   001234                     u2437:
  1593   001234  2EE8               	decfsz	wreg,f,c
  1594   001236  D7FE               	bra	u2437
  1595   001238  2E27               	decfsz	??_motor_retrace^0,f,c
  1596   00123A  D7FC               	bra	u2437
  1597   00123C  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1598   00123E  D7FA               	bra	u2437
  1599   001240  D000               	nop2	
  1600   001242                     
  1601                           ;color.c: 276:          norm_stop(mL, mR);
  1602   001242  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1603   001246  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1604   00124A  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1605   00124E  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1606   001252  ECB0  F014         	call	_norm_stop	;wreg free
  1607                           
  1608                           ;color.c: 277:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1609   001256  0E03               	movlw	3
  1610   001258  6E28               	movwf	(??_motor_retrace+1)^0,c
  1611   00125A  0E70               	movlw	112
  1612   00125C  6E27               	movwf	??_motor_retrace^0,c
  1613   00125E  0E5C               	movlw	92
  1614   001260                     u2447:
  1615   001260  2EE8               	decfsz	wreg,f,c
  1616   001262  D7FE               	bra	u2447
  1617   001264  2E27               	decfsz	??_motor_retrace^0,f,c
  1618   001266  D7FC               	bra	u2447
  1619   001268  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1620   00126A  D7FA               	bra	u2447
  1621   00126C  D000               	nop2	
  1622   00126E                     
  1623                           ;color.c: 278:      }
  1624   00126E  0100               	movlb	0	; () banked
  1625   001270  4BB9               	infsnz	motor_retrace@j_514& (0+255),f,b
  1626   001272  2BBA               	incf	(motor_retrace@j_514+1)& (0+255),f,b
  1627   001274  BFBA               	btfsc	(motor_retrace@j_514+1)& (0+255),7,b
  1628   001276  EF46  F009         	goto	u2211
  1629   00127A  51BA               	movf	(motor_retrace@j_514+1)& (0+255),w,b
  1630   00127C  E109               	bnz	u2210
  1631   00127E  0E18               	movlw	24
  1632   001280  5DB9               	subwf	motor_retrace@j_514& (0+255),w,b
  1633   001282  A0D8               	btfss	status,0,c
  1634   001284  EF46  F009         	goto	u2211
  1635   001288  EF48  F009         	goto	u2210
  1636   00128C                     u2211:
  1637   00128C  EF0B  F009         	goto	l3396
  1638   001290                     u2210:
  1639   001290  EF9B  F009         	goto	l3420
  1640   001294                     l3404:
  1641   001294  504D               	movf	_ctr^0,w,c
  1642   001296  2421               	addwf	motor_retrace@buggy_path^0,w,c
  1643   001298  6ED9               	movwf	fsr2l,c
  1644   00129A  504E               	movf	(_ctr+1)^0,w,c
  1645   00129C  2022               	addwfc	(motor_retrace@buggy_path+1)^0,w,c
  1646   00129E  6EDA               	movwf	fsr2h,c
  1647   0012A0  0E07               	movlw	7
  1648   0012A2  18DE               	xorwf	postinc2,w,c
  1649   0012A4  A4D8               	btfss	status,2,c
  1650   0012A6  EF57  F009         	goto	u2221
  1651   0012AA  EF59  F009         	goto	u2220
  1652   0012AE                     u2221:
  1653   0012AE  EF9B  F009         	goto	l3420
  1654   0012B2                     u2220:
  1655   0012B2                     
  1656                           ;color.c: 281:          for (int j = 0; j <= 20; j++) {
  1657   0012B2  0E00               	movlw	0
  1658   0012B4  0100               	movlb	0	; () banked
  1659   0012B6  6FBC               	movwf	(motor_retrace@j_515+1)& (0+255),b
  1660   0012B8  0E00               	movlw	0
  1661   0012BA  6FBB               	movwf	motor_retrace@j_515& (0+255),b
  1662   0012BC                     l3412:
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;color.c: 282:          turnRight(mL, mR);
  1666   0012BC  C023  F01C         	movff	motor_retrace@mL,turnRight@mL
  1667   0012C0  C024  F01D         	movff	motor_retrace@mL+1,turnRight@mL+1
  1668   0012C4  C025  F01E         	movff	motor_retrace@mR,turnRight@mR
  1669   0012C8  C026  F01F         	movff	motor_retrace@mR+1,turnRight@mR+1
  1670   0012CC  ECD8  F012         	call	_turnRight	;wreg free
  1671   0012D0                     
  1672                           ;color.c: 283:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1673   0012D0  0E03               	movlw	3
  1674   0012D2  6E28               	movwf	(??_motor_retrace+1)^0,c
  1675   0012D4  0E70               	movlw	112
  1676   0012D6  6E27               	movwf	??_motor_retrace^0,c
  1677   0012D8  0E5C               	movlw	92
  1678   0012DA                     u2457:
  1679   0012DA  2EE8               	decfsz	wreg,f,c
  1680   0012DC  D7FE               	bra	u2457
  1681   0012DE  2E27               	decfsz	??_motor_retrace^0,f,c
  1682   0012E0  D7FC               	bra	u2457
  1683   0012E2  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1684   0012E4  D7FA               	bra	u2457
  1685   0012E6  D000               	nop2	
  1686   0012E8                     
  1687                           ;color.c: 284:          norm_stop(mL, mR);
  1688   0012E8  C023  F01C         	movff	motor_retrace@mL,norm_stop@mL
  1689   0012EC  C024  F01D         	movff	motor_retrace@mL+1,norm_stop@mL+1
  1690   0012F0  C025  F01E         	movff	motor_retrace@mR,norm_stop@mR
  1691   0012F4  C026  F01F         	movff	motor_retrace@mR+1,norm_stop@mR+1
  1692   0012F8  ECB0  F014         	call	_norm_stop	;wreg free
  1693                           
  1694                           ;color.c: 285:          _delay((unsigned long)((30)*(64000000/4000.0)));
  1695   0012FC  0E03               	movlw	3
  1696   0012FE  6E28               	movwf	(??_motor_retrace+1)^0,c
  1697   001300  0E70               	movlw	112
  1698   001302  6E27               	movwf	??_motor_retrace^0,c
  1699   001304  0E5C               	movlw	92
  1700   001306                     u2467:
  1701   001306  2EE8               	decfsz	wreg,f,c
  1702   001308  D7FE               	bra	u2467
  1703   00130A  2E27               	decfsz	??_motor_retrace^0,f,c
  1704   00130C  D7FC               	bra	u2467
  1705   00130E  2E28               	decfsz	(??_motor_retrace+1)^0,f,c
  1706   001310  D7FA               	bra	u2467
  1707   001312  D000               	nop2	
  1708   001314                     
  1709                           ;color.c: 286:      }
  1710   001314  0100               	movlb	0	; () banked
  1711   001316  4BBB               	infsnz	motor_retrace@j_515& (0+255),f,b
  1712   001318  2BBC               	incf	(motor_retrace@j_515+1)& (0+255),f,b
  1713   00131A  BFBC               	btfsc	(motor_retrace@j_515+1)& (0+255),7,b
  1714   00131C  EF99  F009         	goto	u2231
  1715   001320  51BC               	movf	(motor_retrace@j_515+1)& (0+255),w,b
  1716   001322  E109               	bnz	u2230
  1717   001324  0E15               	movlw	21
  1718   001326  5DBB               	subwf	motor_retrace@j_515& (0+255),w,b
  1719   001328  A0D8               	btfss	status,0,c
  1720   00132A  EF99  F009         	goto	u2231
  1721   00132E  EF9B  F009         	goto	u2230
  1722   001332                     u2231:
  1723   001332  EF5E  F009         	goto	l3412
  1724   001336                     u2230:
  1725   001336                     l3420:
  1726                           
  1727                           ;color.c: 289:     ctr--;
  1728   001336  064D               	decf	_ctr^0,f,c
  1729   001338  A0D8               	btfss	status,0,c
  1730   00133A  064E               	decf	(_ctr+1)^0,f,c
  1731   00133C                     
  1732                           ;color.c: 290:     if (ctr == -1) {
  1733   00133C  284D               	incf	_ctr^0,w,c
  1734   00133E  E106               	bnz	u2241
  1735   001340  284E               	incf	(_ctr+1)^0,w,c
  1736   001342  A4D8               	btfss	status,2,c
  1737   001344  EFA6  F009         	goto	u2241
  1738   001348  EFA8  F009         	goto	u2240
  1739   00134C                     u2241:
  1740   00134C  EFAA  F009         	goto	l162
  1741   001350                     u2240:
  1742   001350                     
  1743                           ;color.c: 291:            motor_return = 0;
  1744   001350  0E00               	movlw	0
  1745   001352  6E51               	movwf	_motor_return^0,c
  1746   001354                     l162:
  1747   001354  0012               	return		;funcret
  1748   001356                     __end_of_motor_retrace:
  1749                           	callstack 0
  1750                           
  1751 ;; *************** function _reverse *****************
  1752 ;; Defined at:
  1753 ;;		line 189 in file "dc_motor.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1756 ;;		 -> main@mL(9), 
  1757 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1758 ;;		 -> main@mR(9), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;		None
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1770 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1772 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1773 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1774 ;;Total ram usage:        5 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 8
  1777 ;; This function calls:
  1778 ;;		_setMotorPWM
  1779 ;; This function is called by:
  1780 ;;		_motor_retrace
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text4
  1785   002214                     __ptext4:
  1786                           	callstack 0
  1787   002214                     _reverse:
  1788                           	callstack 21
  1789   002214                     
  1790                           ;dc_motor.c: 189: void reverse(DC_motor *mL, DC_motor *mR);dc_motor.c: 190: {;dc_motor.c
      +                          : 191:     mL->power = 5;
  1791   002214  C01C  FFD9         	movff	reverse@mL,fsr2l
  1792   002218  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1793   00221C  0E05               	movlw	5
  1794   00221E  6EDF               	movwf	indf2,c
  1795                           
  1796                           ;dc_motor.c: 192:     mR->power = 5;
  1797   002220  C01E  FFD9         	movff	reverse@mR,fsr2l
  1798   002224  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1799   002228  0E05               	movlw	5
  1800   00222A  6EDF               	movwf	indf2,c
  1801   00222C                     
  1802                           ;dc_motor.c: 193:     mR->direction = 0;
  1803   00222C  EE20 F001          	lfsr	2,1
  1804   002230  501E               	movf	reverse@mR^0,w,c
  1805   002232  26D9               	addwf	fsr2l,f,c
  1806   002234  501F               	movf	(reverse@mR+1)^0,w,c
  1807   002236  22DA               	addwfc	fsr2h,f,c
  1808   002238  0E00               	movlw	0
  1809   00223A  6EDF               	movwf	indf2,c
  1810   00223C                     
  1811                           ;dc_motor.c: 194:     mL->direction = 0;
  1812   00223C  EE20 F001          	lfsr	2,1
  1813   002240  501C               	movf	reverse@mL^0,w,c
  1814   002242  26D9               	addwf	fsr2l,f,c
  1815   002244  501D               	movf	(reverse@mL+1)^0,w,c
  1816   002246  22DA               	addwfc	fsr2h,f,c
  1817   002248  0E00               	movlw	0
  1818   00224A  6EDF               	movwf	indf2,c
  1819   00224C                     
  1820                           ;dc_motor.c: 195:     mL->brakemode = 1;
  1821   00224C  EE20 F002          	lfsr	2,2
  1822   002250  501C               	movf	reverse@mL^0,w,c
  1823   002252  26D9               	addwf	fsr2l,f,c
  1824   002254  501D               	movf	(reverse@mL+1)^0,w,c
  1825   002256  22DA               	addwfc	fsr2h,f,c
  1826   002258  0E01               	movlw	1
  1827   00225A  6EDF               	movwf	indf2,c
  1828   00225C                     
  1829                           ;dc_motor.c: 196:     mR->brakemode = 1;
  1830   00225C  EE20 F002          	lfsr	2,2
  1831   002260  501E               	movf	reverse@mR^0,w,c
  1832   002262  26D9               	addwf	fsr2l,f,c
  1833   002264  501F               	movf	(reverse@mR+1)^0,w,c
  1834   002266  22DA               	addwfc	fsr2h,f,c
  1835   002268  0E01               	movlw	1
  1836   00226A  6EDF               	movwf	indf2,c
  1837                           
  1838                           ;dc_motor.c: 197:     while (mL->power <= 100 && mR->power <=100)
  1839   00226C  EF55  F011         	goto	l606
  1840   002270                     l3184:
  1841                           
  1842                           ;dc_motor.c: 198:     {;dc_motor.c: 199:         mL->power++;
  1843   002270  C01C  FFD9         	movff	reverse@mL,fsr2l
  1844   002274  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1845   002278  2ADF               	incf	indf2,f,c
  1846                           
  1847                           ;dc_motor.c: 200:         mR->power++;
  1848   00227A  C01E  FFD9         	movff	reverse@mR,fsr2l
  1849   00227E  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1850   002282  2ADF               	incf	indf2,f,c
  1851   002284                     
  1852                           ;dc_motor.c: 201:         _delay((unsigned long)((10)*(64000000/4000.0)));
  1853   002284  0ED0               	movlw	208
  1854   002286  6E20               	movwf	??_reverse^0,c
  1855   002288  0ECA               	movlw	202
  1856   00228A                     u2477:
  1857   00228A  2EE8               	decfsz	wreg,f,c
  1858   00228C  D7FE               	bra	u2477
  1859   00228E  2E20               	decfsz	??_reverse^0,f,c
  1860   002290  D7FC               	bra	u2477
  1861   002292                     
  1862                           ;dc_motor.c: 202:         setMotorPWM(mL);
  1863   002292  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  1864   002296  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  1865   00229A  ECA0  F00E         	call	_setMotorPWM	;wreg free
  1866   00229E                     
  1867                           ;dc_motor.c: 203:         setMotorPWM(mR);
  1868   00229E  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  1869   0022A2  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  1870   0022A6  ECA0  F00E         	call	_setMotorPWM	;wreg free
  1871   0022AA                     l606:
  1872                           
  1873                           ;dc_motor.c: 197:     while (mL->power <= 100 && mR->power <=100)
  1874   0022AA  C01C  FFD9         	movff	reverse@mL,fsr2l
  1875   0022AE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1876   0022B2  0E65               	movlw	101
  1877   0022B4  60DF               	cpfslt	indf2,c
  1878   0022B6  EF5F  F011         	goto	u1941
  1879   0022BA  EF61  F011         	goto	u1940
  1880   0022BE                     u1941:
  1881   0022BE  EF6D  F011         	goto	l3194
  1882   0022C2                     u1940:
  1883   0022C2  C01E  FFD9         	movff	reverse@mR,fsr2l
  1884   0022C6  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1885   0022CA  0E64               	movlw	100
  1886   0022CC  64DF               	cpfsgt	indf2,c
  1887   0022CE  EF6B  F011         	goto	u1951
  1888   0022D2  EF6D  F011         	goto	u1950
  1889   0022D6                     u1951:
  1890   0022D6  EF38  F011         	goto	l3184
  1891   0022DA                     u1950:
  1892   0022DA                     l3194:
  1893                           
  1894                           ;dc_motor.c: 205:     mL->power = 100;
  1895   0022DA  C01C  FFD9         	movff	reverse@mL,fsr2l
  1896   0022DE  C01D  FFDA         	movff	reverse@mL+1,fsr2h
  1897   0022E2  0E64               	movlw	100
  1898   0022E4  6EDF               	movwf	indf2,c
  1899                           
  1900                           ;dc_motor.c: 206:     mR->power = 100;
  1901   0022E6  C01E  FFD9         	movff	reverse@mR,fsr2l
  1902   0022EA  C01F  FFDA         	movff	reverse@mR+1,fsr2h
  1903   0022EE  0E64               	movlw	100
  1904   0022F0  6EDF               	movwf	indf2,c
  1905   0022F2                     
  1906                           ;dc_motor.c: 207:     setMotorPWM(mL);
  1907   0022F2  C01C  F016         	movff	reverse@mL,setMotorPWM@m
  1908   0022F6  C01D  F017         	movff	reverse@mL+1,setMotorPWM@m+1
  1909   0022FA  ECA0  F00E         	call	_setMotorPWM	;wreg free
  1910   0022FE                     
  1911                           ;dc_motor.c: 208:     setMotorPWM(mR);
  1912   0022FE  C01E  F016         	movff	reverse@mR,setMotorPWM@m
  1913   002302  C01F  F017         	movff	reverse@mR+1,setMotorPWM@m+1
  1914   002306  ECA0  F00E         	call	_setMotorPWM	;wreg free
  1915   00230A  0012               	return		;funcret
  1916   00230C                     __end_of_reverse:
  1917                           	callstack 0
  1918                           
  1919 ;; *************** function _motor_response *****************
  1920 ;; Defined at:
  1921 ;;		line 127 in file "color.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  temp            2   32[COMRAM] PTR struct RGBC_val
  1924 ;;		 -> main@RGBC(32), 
  1925 ;;  mL              2   34[COMRAM] PTR struct DC_motor
  1926 ;;		 -> main@mR(9), main@mL(9), 
  1927 ;;  mR              2   36[COMRAM] PTR struct DC_motor
  1928 ;;		 -> main@mR(9), main@mL(9), 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  j               2   46[COMRAM] int 
  1931 ;;  j               2   44[COMRAM] int 
  1932 ;;  j               2   42[COMRAM] int 
  1933 ;;  j               2   40[COMRAM] int 
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      unsigned char 
  1936 ;; Registers used:
  1937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1943 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1944 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1945 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1946 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1947 ;;Total ram usage:       16 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; Hardware stack levels required when called: 9
  1950 ;; This function calls:
  1951 ;;		___flge
  1952 ;;		_fullSpeedAhead
  1953 ;;		_norm_stop
  1954 ;;		_turnLeft
  1955 ;;		_turnRight
  1956 ;; This function is called by:
  1957 ;;		_main
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text5
  1962   001356                     __ptext5:
  1963                           	callstack 0
  1964   001356                     _motor_response:
  1965                           	callstack 21
  1966   001356                     
  1967                           ;color.c: 129:     if (temp->norm_G >8) {
  1968   001356  0E00               	movlw	0
  1969   001358  6E09               	movwf	___flge@ff1^0,c
  1970   00135A  0E00               	movlw	0
  1971   00135C  6E0A               	movwf	(___flge@ff1+1)^0,c
  1972   00135E  0E00               	movlw	0
  1973   001360  6E0B               	movwf	(___flge@ff1+2)^0,c
  1974   001362  0E41               	movlw	65
  1975   001364  6E0C               	movwf	(___flge@ff1+3)^0,c
  1976   001366  EE20 F014          	lfsr	2,20
  1977   00136A  5021               	movf	motor_response@temp^0,w,c
  1978   00136C  26D9               	addwf	fsr2l,f,c
  1979   00136E  5022               	movf	(motor_response@temp+1)^0,w,c
  1980   001370  22DA               	addwfc	fsr2h,f,c
  1981   001372  CFDE F00D          	movff	postinc2,___flge@ff2
  1982   001376  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1983   00137A  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1984   00137E  CFDE F010          	movff	postinc2,___flge@ff2+3
  1985   001382  EC88  F010         	call	___flge	;wreg free
  1986   001386  B0D8               	btfsc	status,0,c
  1987   001388  EFC8  F009         	goto	u1961
  1988   00138C  EFCA  F009         	goto	u1960
  1989   001390                     u1961:
  1990   001390  EF0F  F00A         	goto	l3222
  1991   001394                     u1960:
  1992   001394                     
  1993                           ;color.c: 130:         for (int j = 0; j <= 15; j++) {
  1994   001394  0E00               	movlw	0
  1995   001396  6E2A               	movwf	(motor_response@j+1)^0,c
  1996   001398  0E00               	movlw	0
  1997   00139A  6E29               	movwf	motor_response@j^0,c
  1998   00139C                     l3208:
  1999                           
  2000                           ;color.c: 131:             turnRight(mL, mR);
  2001   00139C  C023  F01C         	movff	motor_response@mL,turnRight@mL
  2002   0013A0  C024  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  2003   0013A4  C025  F01E         	movff	motor_response@mR,turnRight@mR
  2004   0013A8  C026  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  2005   0013AC  ECD8  F012         	call	_turnRight	;wreg free
  2006   0013B0                     
  2007                           ;color.c: 132:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2008   0013B0  0E03               	movlw	3
  2009   0013B2  6E28               	movwf	(??_motor_response+1)^0,c
  2010   0013B4  0E70               	movlw	112
  2011   0013B6  6E27               	movwf	??_motor_response^0,c
  2012   0013B8  0E5C               	movlw	92
  2013   0013BA                     u2487:
  2014   0013BA  2EE8               	decfsz	wreg,f,c
  2015   0013BC  D7FE               	bra	u2487
  2016   0013BE  2E27               	decfsz	??_motor_response^0,f,c
  2017   0013C0  D7FC               	bra	u2487
  2018   0013C2  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2019   0013C4  D7FA               	bra	u2487
  2020   0013C6  D000               	nop2	
  2021   0013C8                     
  2022                           ;color.c: 133:             norm_stop(mL, mR);
  2023   0013C8  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2024   0013CC  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2025   0013D0  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2026   0013D4  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2027   0013D8  ECB0  F014         	call	_norm_stop	;wreg free
  2028                           
  2029                           ;color.c: 134:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2030   0013DC  0E03               	movlw	3
  2031   0013DE  6E28               	movwf	(??_motor_response+1)^0,c
  2032   0013E0  0E70               	movlw	112
  2033   0013E2  6E27               	movwf	??_motor_response^0,c
  2034   0013E4  0E5C               	movlw	92
  2035   0013E6                     u2497:
  2036   0013E6  2EE8               	decfsz	wreg,f,c
  2037   0013E8  D7FE               	bra	u2497
  2038   0013EA  2E27               	decfsz	??_motor_response^0,f,c
  2039   0013EC  D7FC               	bra	u2497
  2040   0013EE  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2041   0013F0  D7FA               	bra	u2497
  2042   0013F2  D000               	nop2	
  2043   0013F4                     
  2044                           ;color.c: 135:         }
  2045   0013F4  4A29               	infsnz	motor_response@j^0,f,c
  2046   0013F6  2A2A               	incf	(motor_response@j+1)^0,f,c
  2047   0013F8  BE2A               	btfsc	(motor_response@j+1)^0,7,c
  2048   0013FA  EF08  F00A         	goto	u1971
  2049   0013FE  502A               	movf	(motor_response@j+1)^0,w,c
  2050   001400  E109               	bnz	u1970
  2051   001402  0E10               	movlw	16
  2052   001404  5C29               	subwf	motor_response@j^0,w,c
  2053   001406  A0D8               	btfss	status,0,c
  2054   001408  EF08  F00A         	goto	u1971
  2055   00140C  EF0A  F00A         	goto	u1970
  2056   001410                     u1971:
  2057   001410  EFCE  F009         	goto	l3208
  2058   001414                     u1970:
  2059   001414                     
  2060                           ;color.c: 136:         return 1;
  2061   001414  0E01               	movlw	1
  2062   001416  EFF8  F00B         	goto	l119
  2063   00141A                     l3218:
  2064   00141A  EFF8  F00B         	goto	l119
  2065   00141E                     l3222:
  2066   00141E  0E00               	movlw	0
  2067   001420  6E09               	movwf	___flge@ff1^0,c
  2068   001422  0E00               	movlw	0
  2069   001424  6E0A               	movwf	(___flge@ff1+1)^0,c
  2070   001426  0E90               	movlw	144
  2071   001428  6E0B               	movwf	(___flge@ff1+2)^0,c
  2072   00142A  0E40               	movlw	64
  2073   00142C  6E0C               	movwf	(___flge@ff1+3)^0,c
  2074   00142E  EE20 F018          	lfsr	2,24
  2075   001432  5021               	movf	motor_response@temp^0,w,c
  2076   001434  26D9               	addwf	fsr2l,f,c
  2077   001436  5022               	movf	(motor_response@temp+1)^0,w,c
  2078   001438  22DA               	addwfc	fsr2h,f,c
  2079   00143A  CFDE F00D          	movff	postinc2,___flge@ff2
  2080   00143E  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2081   001442  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2082   001446  CFDE F010          	movff	postinc2,___flge@ff2+3
  2083   00144A  EC88  F010         	call	___flge	;wreg free
  2084   00144E  B0D8               	btfsc	status,0,c
  2085   001450  EF2C  F00A         	goto	u1981
  2086   001454  EF2E  F00A         	goto	u1980
  2087   001458                     u1981:
  2088   001458  EF90  F00A         	goto	l3246
  2089   00145C                     u1980:
  2090   00145C  EE20 F018          	lfsr	2,24
  2091   001460  5021               	movf	motor_response@temp^0,w,c
  2092   001462  26D9               	addwf	fsr2l,f,c
  2093   001464  5022               	movf	(motor_response@temp+1)^0,w,c
  2094   001466  22DA               	addwfc	fsr2h,f,c
  2095   001468  CFDE F009          	movff	postinc2,___flge@ff1
  2096   00146C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2097   001470  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2098   001474  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2099   001478  0E66               	movlw	102
  2100   00147A  6E0D               	movwf	___flge@ff2^0,c
  2101   00147C  0E66               	movlw	102
  2102   00147E  6E0E               	movwf	(___flge@ff2+1)^0,c
  2103   001480  0EA6               	movlw	166
  2104   001482  6E0F               	movwf	(___flge@ff2+2)^0,c
  2105   001484  0E40               	movlw	64
  2106   001486  6E10               	movwf	(___flge@ff2+3)^0,c
  2107   001488  EC88  F010         	call	___flge	;wreg free
  2108   00148C  B0D8               	btfsc	status,0,c
  2109   00148E  EF4B  F00A         	goto	u1991
  2110   001492  EF4D  F00A         	goto	u1990
  2111   001496                     u1991:
  2112   001496  EF90  F00A         	goto	l3246
  2113   00149A                     u1990:
  2114   00149A                     
  2115                           ;color.c: 139:         for (int j = 0; j <= 15; j++) {
  2116   00149A  0E00               	movlw	0
  2117   00149C  6E2C               	movwf	(motor_response@j_502+1)^0,c
  2118   00149E  0E00               	movlw	0
  2119   0014A0  6E2B               	movwf	motor_response@j_502^0,c
  2120   0014A2                     l3232:
  2121                           
  2122                           ;color.c: 140:             turnLeft(mL, mR);
  2123   0014A2  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2124   0014A6  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2125   0014AA  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2126   0014AE  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2127   0014B2  EC11  F013         	call	_turnLeft	;wreg free
  2128   0014B6                     
  2129                           ;color.c: 141:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2130   0014B6  0E03               	movlw	3
  2131   0014B8  6E28               	movwf	(??_motor_response+1)^0,c
  2132   0014BA  0E70               	movlw	112
  2133   0014BC  6E27               	movwf	??_motor_response^0,c
  2134   0014BE  0E5C               	movlw	92
  2135   0014C0                     u2507:
  2136   0014C0  2EE8               	decfsz	wreg,f,c
  2137   0014C2  D7FE               	bra	u2507
  2138   0014C4  2E27               	decfsz	??_motor_response^0,f,c
  2139   0014C6  D7FC               	bra	u2507
  2140   0014C8  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2141   0014CA  D7FA               	bra	u2507
  2142   0014CC  D000               	nop2	
  2143   0014CE                     
  2144                           ;color.c: 142:             norm_stop(mL, mR);
  2145   0014CE  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2146   0014D2  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2147   0014D6  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2148   0014DA  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2149   0014DE  ECB0  F014         	call	_norm_stop	;wreg free
  2150                           
  2151                           ;color.c: 143:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2152   0014E2  0E03               	movlw	3
  2153   0014E4  6E28               	movwf	(??_motor_response+1)^0,c
  2154   0014E6  0E70               	movlw	112
  2155   0014E8  6E27               	movwf	??_motor_response^0,c
  2156   0014EA  0E5C               	movlw	92
  2157   0014EC                     u2517:
  2158   0014EC  2EE8               	decfsz	wreg,f,c
  2159   0014EE  D7FE               	bra	u2517
  2160   0014F0  2E27               	decfsz	??_motor_response^0,f,c
  2161   0014F2  D7FC               	bra	u2517
  2162   0014F4  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2163   0014F6  D7FA               	bra	u2517
  2164   0014F8  D000               	nop2	
  2165   0014FA                     
  2166                           ;color.c: 144:         }
  2167   0014FA  4A2B               	infsnz	motor_response@j_502^0,f,c
  2168   0014FC  2A2C               	incf	(motor_response@j_502+1)^0,f,c
  2169   0014FE  BE2C               	btfsc	(motor_response@j_502+1)^0,7,c
  2170   001500  EF8B  F00A         	goto	u2001
  2171   001504  502C               	movf	(motor_response@j_502+1)^0,w,c
  2172   001506  E109               	bnz	u2000
  2173   001508  0E10               	movlw	16
  2174   00150A  5C2B               	subwf	motor_response@j_502^0,w,c
  2175   00150C  A0D8               	btfss	status,0,c
  2176   00150E  EF8B  F00A         	goto	u2001
  2177   001512  EF8D  F00A         	goto	u2000
  2178   001516                     u2001:
  2179   001516  EF51  F00A         	goto	l3232
  2180   00151A                     u2000:
  2181   00151A                     
  2182                           ;color.c: 145:         return 2;
  2183   00151A  0E02               	movlw	2
  2184   00151C  EFF8  F00B         	goto	l119
  2185   001520                     l3246:
  2186   001520  0E33               	movlw	51
  2187   001522  6E09               	movwf	___flge@ff1^0,c
  2188   001524  0E33               	movlw	51
  2189   001526  6E0A               	movwf	(___flge@ff1+1)^0,c
  2190   001528  0E33               	movlw	51
  2191   00152A  6E0B               	movwf	(___flge@ff1+2)^0,c
  2192   00152C  0E40               	movlw	64
  2193   00152E  6E0C               	movwf	(___flge@ff1+3)^0,c
  2194   001530  EE20 F018          	lfsr	2,24
  2195   001534  5021               	movf	motor_response@temp^0,w,c
  2196   001536  26D9               	addwf	fsr2l,f,c
  2197   001538  5022               	movf	(motor_response@temp+1)^0,w,c
  2198   00153A  22DA               	addwfc	fsr2h,f,c
  2199   00153C  CFDE F00D          	movff	postinc2,___flge@ff2
  2200   001540  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2201   001544  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2202   001548  CFDE F010          	movff	postinc2,___flge@ff2+3
  2203   00154C  EC88  F010         	call	___flge	;wreg free
  2204   001550  B0D8               	btfsc	status,0,c
  2205   001552  EFAD  F00A         	goto	u2011
  2206   001556  EFAF  F00A         	goto	u2010
  2207   00155A                     u2011:
  2208   00155A  EF8D  F00B         	goto	l3278
  2209   00155E                     u2010:
  2210   00155E  EE20 F018          	lfsr	2,24
  2211   001562  5021               	movf	motor_response@temp^0,w,c
  2212   001564  26D9               	addwf	fsr2l,f,c
  2213   001566  5022               	movf	(motor_response@temp+1)^0,w,c
  2214   001568  22DA               	addwfc	fsr2h,f,c
  2215   00156A  CFDE F009          	movff	postinc2,___flge@ff1
  2216   00156E  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2217   001572  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2218   001576  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2219   00157A  0ECD               	movlw	205
  2220   00157C  6E0D               	movwf	___flge@ff2^0,c
  2221   00157E  0ECC               	movlw	204
  2222   001580  6E0E               	movwf	(___flge@ff2+1)^0,c
  2223   001582  0E4C               	movlw	76
  2224   001584  6E0F               	movwf	(___flge@ff2+2)^0,c
  2225   001586  0E40               	movlw	64
  2226   001588  6E10               	movwf	(___flge@ff2+3)^0,c
  2227   00158A  EC88  F010         	call	___flge	;wreg free
  2228   00158E  B0D8               	btfsc	status,0,c
  2229   001590  EFCC  F00A         	goto	u2021
  2230   001594  EFCE  F00A         	goto	u2020
  2231   001598                     u2021:
  2232   001598  EF8D  F00B         	goto	l3278
  2233   00159C                     u2020:
  2234   00159C  0E33               	movlw	51
  2235   00159E  6E09               	movwf	___flge@ff1^0,c
  2236   0015A0  0E33               	movlw	51
  2237   0015A2  6E0A               	movwf	(___flge@ff1+1)^0,c
  2238   0015A4  0E33               	movlw	51
  2239   0015A6  6E0B               	movwf	(___flge@ff1+2)^0,c
  2240   0015A8  0E40               	movlw	64
  2241   0015AA  6E0C               	movwf	(___flge@ff1+3)^0,c
  2242   0015AC  EE20 F010          	lfsr	2,16
  2243   0015B0  5021               	movf	motor_response@temp^0,w,c
  2244   0015B2  26D9               	addwf	fsr2l,f,c
  2245   0015B4  5022               	movf	(motor_response@temp+1)^0,w,c
  2246   0015B6  22DA               	addwfc	fsr2h,f,c
  2247   0015B8  CFDE F00D          	movff	postinc2,___flge@ff2
  2248   0015BC  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2249   0015C0  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2250   0015C4  CFDE F010          	movff	postinc2,___flge@ff2+3
  2251   0015C8  EC88  F010         	call	___flge	;wreg free
  2252   0015CC  B0D8               	btfsc	status,0,c
  2253   0015CE  EFEB  F00A         	goto	u2031
  2254   0015D2  EFED  F00A         	goto	u2030
  2255   0015D6                     u2031:
  2256   0015D6  EF8D  F00B         	goto	l3278
  2257   0015DA                     u2030:
  2258   0015DA  EE20 F010          	lfsr	2,16
  2259   0015DE  5021               	movf	motor_response@temp^0,w,c
  2260   0015E0  26D9               	addwf	fsr2l,f,c
  2261   0015E2  5022               	movf	(motor_response@temp+1)^0,w,c
  2262   0015E4  22DA               	addwfc	fsr2h,f,c
  2263   0015E6  CFDE F009          	movff	postinc2,___flge@ff1
  2264   0015EA  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2265   0015EE  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2266   0015F2  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2267   0015F6  0ECD               	movlw	205
  2268   0015F8  6E0D               	movwf	___flge@ff2^0,c
  2269   0015FA  0ECC               	movlw	204
  2270   0015FC  6E0E               	movwf	(___flge@ff2+1)^0,c
  2271   0015FE  0E4C               	movlw	76
  2272   001600  6E0F               	movwf	(___flge@ff2+2)^0,c
  2273   001602  0E40               	movlw	64
  2274   001604  6E10               	movwf	(___flge@ff2+3)^0,c
  2275   001606  EC88  F010         	call	___flge	;wreg free
  2276   00160A  B0D8               	btfsc	status,0,c
  2277   00160C  EF0A  F00B         	goto	u2041
  2278   001610  EF0C  F00B         	goto	u2040
  2279   001614                     u2041:
  2280   001614  EF8D  F00B         	goto	l3278
  2281   001618                     u2040:
  2282   001618  0E33               	movlw	51
  2283   00161A  6E09               	movwf	___flge@ff1^0,c
  2284   00161C  0E33               	movlw	51
  2285   00161E  6E0A               	movwf	(___flge@ff1+1)^0,c
  2286   001620  0E33               	movlw	51
  2287   001622  6E0B               	movwf	(___flge@ff1+2)^0,c
  2288   001624  0E40               	movlw	64
  2289   001626  6E0C               	movwf	(___flge@ff1+3)^0,c
  2290   001628  EE20 F014          	lfsr	2,20
  2291   00162C  5021               	movf	motor_response@temp^0,w,c
  2292   00162E  26D9               	addwf	fsr2l,f,c
  2293   001630  5022               	movf	(motor_response@temp+1)^0,w,c
  2294   001632  22DA               	addwfc	fsr2h,f,c
  2295   001634  CFDE F00D          	movff	postinc2,___flge@ff2
  2296   001638  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2297   00163C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2298   001640  CFDE F010          	movff	postinc2,___flge@ff2+3
  2299   001644  EC88  F010         	call	___flge	;wreg free
  2300   001648  B0D8               	btfsc	status,0,c
  2301   00164A  EF29  F00B         	goto	u2051
  2302   00164E  EF2B  F00B         	goto	u2050
  2303   001652                     u2051:
  2304   001652  EF8D  F00B         	goto	l3278
  2305   001656                     u2050:
  2306   001656  EE20 F014          	lfsr	2,20
  2307   00165A  5021               	movf	motor_response@temp^0,w,c
  2308   00165C  26D9               	addwf	fsr2l,f,c
  2309   00165E  5022               	movf	(motor_response@temp+1)^0,w,c
  2310   001660  22DA               	addwfc	fsr2h,f,c
  2311   001662  CFDE F009          	movff	postinc2,___flge@ff1
  2312   001666  CFDE F00A          	movff	postinc2,___flge@ff1+1
  2313   00166A  CFDE F00B          	movff	postinc2,___flge@ff1+2
  2314   00166E  CFDE F00C          	movff	postinc2,___flge@ff1+3
  2315   001672  0ECD               	movlw	205
  2316   001674  6E0D               	movwf	___flge@ff2^0,c
  2317   001676  0ECC               	movlw	204
  2318   001678  6E0E               	movwf	(___flge@ff2+1)^0,c
  2319   00167A  0E4C               	movlw	76
  2320   00167C  6E0F               	movwf	(___flge@ff2+2)^0,c
  2321   00167E  0E40               	movlw	64
  2322   001680  6E10               	movwf	(___flge@ff2+3)^0,c
  2323   001682  EC88  F010         	call	___flge	;wreg free
  2324   001686  B0D8               	btfsc	status,0,c
  2325   001688  EF48  F00B         	goto	u2061
  2326   00168C  EF4A  F00B         	goto	u2060
  2327   001690                     u2061:
  2328   001690  EF8D  F00B         	goto	l3278
  2329   001694                     u2060:
  2330   001694                     
  2331                           ;color.c: 148:         for (int j = 0; j <= 29; j++) {
  2332   001694  0E00               	movlw	0
  2333   001696  6E2E               	movwf	(motor_response@j_503+1)^0,c
  2334   001698  0E00               	movlw	0
  2335   00169A  6E2D               	movwf	motor_response@j_503^0,c
  2336   00169C                     l3264:
  2337                           
  2338                           ;color.c: 149:             turnLeft(mL, mR);
  2339   00169C  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2340   0016A0  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2341   0016A4  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2342   0016A8  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2343   0016AC  EC11  F013         	call	_turnLeft	;wreg free
  2344   0016B0                     
  2345                           ;color.c: 150:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2346   0016B0  0E03               	movlw	3
  2347   0016B2  6E28               	movwf	(??_motor_response+1)^0,c
  2348   0016B4  0E70               	movlw	112
  2349   0016B6  6E27               	movwf	??_motor_response^0,c
  2350   0016B8  0E5C               	movlw	92
  2351   0016BA                     u2527:
  2352   0016BA  2EE8               	decfsz	wreg,f,c
  2353   0016BC  D7FE               	bra	u2527
  2354   0016BE  2E27               	decfsz	??_motor_response^0,f,c
  2355   0016C0  D7FC               	bra	u2527
  2356   0016C2  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2357   0016C4  D7FA               	bra	u2527
  2358   0016C6  D000               	nop2	
  2359   0016C8                     
  2360                           ;color.c: 151:             norm_stop(mL, mR);
  2361   0016C8  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2362   0016CC  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2363   0016D0  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2364   0016D4  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2365   0016D8  ECB0  F014         	call	_norm_stop	;wreg free
  2366                           
  2367                           ;color.c: 152:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2368   0016DC  0E03               	movlw	3
  2369   0016DE  6E28               	movwf	(??_motor_response+1)^0,c
  2370   0016E0  0E70               	movlw	112
  2371   0016E2  6E27               	movwf	??_motor_response^0,c
  2372   0016E4  0E5C               	movlw	92
  2373   0016E6                     u2537:
  2374   0016E6  2EE8               	decfsz	wreg,f,c
  2375   0016E8  D7FE               	bra	u2537
  2376   0016EA  2E27               	decfsz	??_motor_response^0,f,c
  2377   0016EC  D7FC               	bra	u2537
  2378   0016EE  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2379   0016F0  D7FA               	bra	u2537
  2380   0016F2  D000               	nop2	
  2381   0016F4                     
  2382                           ;color.c: 153:         }
  2383   0016F4  4A2D               	infsnz	motor_response@j_503^0,f,c
  2384   0016F6  2A2E               	incf	(motor_response@j_503+1)^0,f,c
  2385   0016F8  BE2E               	btfsc	(motor_response@j_503+1)^0,7,c
  2386   0016FA  EF88  F00B         	goto	u2071
  2387   0016FE  502E               	movf	(motor_response@j_503+1)^0,w,c
  2388   001700  E109               	bnz	u2070
  2389   001702  0E1E               	movlw	30
  2390   001704  5C2D               	subwf	motor_response@j_503^0,w,c
  2391   001706  A0D8               	btfss	status,0,c
  2392   001708  EF88  F00B         	goto	u2071
  2393   00170C  EF8A  F00B         	goto	u2070
  2394   001710                     u2071:
  2395   001710  EF4E  F00B         	goto	l3264
  2396   001714                     u2070:
  2397   001714                     
  2398                           ;color.c: 154:         return 3;
  2399   001714  0E03               	movlw	3
  2400   001716  EFF8  F00B         	goto	l119
  2401   00171A                     l3278:
  2402   00171A  0E00               	movlw	0
  2403   00171C  6E09               	movwf	___flge@ff1^0,c
  2404   00171E  0E00               	movlw	0
  2405   001720  6E0A               	movwf	(___flge@ff1+1)^0,c
  2406   001722  0E40               	movlw	64
  2407   001724  6E0B               	movwf	(___flge@ff1+2)^0,c
  2408   001726  0E41               	movlw	65
  2409   001728  6E0C               	movwf	(___flge@ff1+3)^0,c
  2410   00172A  EE20 F01C          	lfsr	2,28
  2411   00172E  5021               	movf	motor_response@temp^0,w,c
  2412   001730  26D9               	addwf	fsr2l,f,c
  2413   001732  5022               	movf	(motor_response@temp+1)^0,w,c
  2414   001734  22DA               	addwfc	fsr2h,f,c
  2415   001736  CFDE F00D          	movff	postinc2,___flge@ff2
  2416   00173A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  2417   00173E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  2418   001742  CFDE F010          	movff	postinc2,___flge@ff2+3
  2419   001746  EC88  F010         	call	___flge	;wreg free
  2420   00174A  B0D8               	btfsc	status,0,c
  2421   00174C  EFAA  F00B         	goto	u2081
  2422   001750  EFAC  F00B         	goto	u2080
  2423   001754                     u2081:
  2424   001754  EF0D  F00A         	goto	l3218
  2425   001758                     u2080:
  2426   001758                     
  2427                           ;color.c: 210:         motor_return = 1;
  2428   001758  0E01               	movlw	1
  2429   00175A  6E51               	movwf	_motor_return^0,c
  2430                           
  2431                           ;color.c: 211:         for (int j = 0; j <= 40; j++) {
  2432   00175C  0E00               	movlw	0
  2433   00175E  6E30               	movwf	(motor_response@j_504+1)^0,c
  2434   001760  0E00               	movlw	0
  2435   001762  6E2F               	movwf	motor_response@j_504^0,c
  2436   001764                     l3286:
  2437                           
  2438                           ;color.c: 212:             turnLeft(mL, mR);
  2439   001764  C023  F01C         	movff	motor_response@mL,turnLeft@mL
  2440   001768  C024  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  2441   00176C  C025  F01E         	movff	motor_response@mR,turnLeft@mR
  2442   001770  C026  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  2443   001774  EC11  F013         	call	_turnLeft	;wreg free
  2444   001778                     
  2445                           ;color.c: 213:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2446   001778  0E03               	movlw	3
  2447   00177A  6E28               	movwf	(??_motor_response+1)^0,c
  2448   00177C  0E70               	movlw	112
  2449   00177E  6E27               	movwf	??_motor_response^0,c
  2450   001780  0E5C               	movlw	92
  2451   001782                     u2547:
  2452   001782  2EE8               	decfsz	wreg,f,c
  2453   001784  D7FE               	bra	u2547
  2454   001786  2E27               	decfsz	??_motor_response^0,f,c
  2455   001788  D7FC               	bra	u2547
  2456   00178A  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2457   00178C  D7FA               	bra	u2547
  2458   00178E  D000               	nop2	
  2459   001790                     
  2460                           ;color.c: 214:             norm_stop(mL, mR);
  2461   001790  C023  F01C         	movff	motor_response@mL,norm_stop@mL
  2462   001794  C024  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  2463   001798  C025  F01E         	movff	motor_response@mR,norm_stop@mR
  2464   00179C  C026  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  2465   0017A0  ECB0  F014         	call	_norm_stop	;wreg free
  2466                           
  2467                           ;color.c: 215:             _delay((unsigned long)((30)*(64000000/4000.0)));
  2468   0017A4  0E03               	movlw	3
  2469   0017A6  6E28               	movwf	(??_motor_response+1)^0,c
  2470   0017A8  0E70               	movlw	112
  2471   0017AA  6E27               	movwf	??_motor_response^0,c
  2472   0017AC  0E5C               	movlw	92
  2473   0017AE                     u2557:
  2474   0017AE  2EE8               	decfsz	wreg,f,c
  2475   0017B0  D7FE               	bra	u2557
  2476   0017B2  2E27               	decfsz	??_motor_response^0,f,c
  2477   0017B4  D7FC               	bra	u2557
  2478   0017B6  2E28               	decfsz	(??_motor_response+1)^0,f,c
  2479   0017B8  D7FA               	bra	u2557
  2480   0017BA  D000               	nop2	
  2481   0017BC                     
  2482                           ;color.c: 216:         }
  2483   0017BC  4A2F               	infsnz	motor_response@j_504^0,f,c
  2484   0017BE  2A30               	incf	(motor_response@j_504+1)^0,f,c
  2485   0017C0  BE30               	btfsc	(motor_response@j_504+1)^0,7,c
  2486   0017C2  EFEC  F00B         	goto	u2091
  2487   0017C6  5030               	movf	(motor_response@j_504+1)^0,w,c
  2488   0017C8  E109               	bnz	u2090
  2489   0017CA  0E29               	movlw	41
  2490   0017CC  5C2F               	subwf	motor_response@j_504^0,w,c
  2491   0017CE  A0D8               	btfss	status,0,c
  2492   0017D0  EFEC  F00B         	goto	u2091
  2493   0017D4  EFEE  F00B         	goto	u2090
  2494   0017D8                     u2091:
  2495   0017D8  EFB2  F00B         	goto	l3286
  2496   0017DC                     u2090:
  2497   0017DC                     
  2498                           ;color.c: 217:         fullSpeedAhead(&mL, &mR);
  2499   0017DC  0E23               	movlw	low motor_response@mL
  2500   0017DE  6E1C               	movwf	fullSpeedAhead@mL^0,c
  2501   0017E0  0E00               	movlw	high motor_response@mL
  2502   0017E2  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
  2503   0017E4  0E25               	movlw	low motor_response@mR
  2504   0017E6  6E1E               	movwf	fullSpeedAhead@mR^0,c
  2505   0017E8  0E00               	movlw	high motor_response@mR
  2506   0017EA  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
  2507   0017EC  EC86  F011         	call	_fullSpeedAhead	;wreg free
  2508   0017F0                     l119:
  2509   0017F0  0012               	return		;funcret
  2510   0017F2                     __end_of_motor_response:
  2511                           	callstack 0
  2512                           
  2513 ;; *************** function _turnRight *****************
  2514 ;; Defined at:
  2515 ;;		line 144 in file "dc_motor.c"
  2516 ;; Parameters:    Size  Location     Type
  2517 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2518 ;;		 -> main@mR(9), main@mL(9), 
  2519 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2520 ;;		 -> main@mR(9), main@mL(9), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      void 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2535 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2536 ;;Total ram usage:        4 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 8
  2539 ;; This function calls:
  2540 ;;		_setMotorPWM
  2541 ;; This function is called by:
  2542 ;;		_motor_response
  2543 ;;		_motor_retrace
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text6
  2548   0025B0                     __ptext6:
  2549                           	callstack 0
  2550   0025B0                     _turnRight:
  2551                           	callstack 21
  2552   0025B0                     
  2553                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
  2554   0025B0  C01C  FFD9         	movff	turnRight@mL,fsr2l
  2555   0025B4  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  2556   0025B8  0E32               	movlw	50
  2557   0025BA  6EDF               	movwf	indf2,c
  2558                           
  2559                           ;dc_motor.c: 147:     mR->power = 50;
  2560   0025BC  C01E  FFD9         	movff	turnRight@mR,fsr2l
  2561   0025C0  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  2562   0025C4  0E32               	movlw	50
  2563   0025C6  6EDF               	movwf	indf2,c
  2564   0025C8                     
  2565                           ;dc_motor.c: 148:     mL->brakemode = 1;
  2566   0025C8  EE20 F002          	lfsr	2,2
  2567   0025CC  501C               	movf	turnRight@mL^0,w,c
  2568   0025CE  26D9               	addwf	fsr2l,f,c
  2569   0025D0  501D               	movf	(turnRight@mL+1)^0,w,c
  2570   0025D2  22DA               	addwfc	fsr2h,f,c
  2571   0025D4  0E01               	movlw	1
  2572   0025D6  6EDF               	movwf	indf2,c
  2573   0025D8                     
  2574                           ;dc_motor.c: 149:     mR->brakemode = 1;
  2575   0025D8  EE20 F002          	lfsr	2,2
  2576   0025DC  501E               	movf	turnRight@mR^0,w,c
  2577   0025DE  26D9               	addwf	fsr2l,f,c
  2578   0025E0  501F               	movf	(turnRight@mR+1)^0,w,c
  2579   0025E2  22DA               	addwfc	fsr2h,f,c
  2580   0025E4  0E01               	movlw	1
  2581   0025E6  6EDF               	movwf	indf2,c
  2582   0025E8                     
  2583                           ;dc_motor.c: 150:     mR->direction = 0;
  2584   0025E8  EE20 F001          	lfsr	2,1
  2585   0025EC  501E               	movf	turnRight@mR^0,w,c
  2586   0025EE  26D9               	addwf	fsr2l,f,c
  2587   0025F0  501F               	movf	(turnRight@mR+1)^0,w,c
  2588   0025F2  22DA               	addwfc	fsr2h,f,c
  2589   0025F4  0E00               	movlw	0
  2590   0025F6  6EDF               	movwf	indf2,c
  2591   0025F8                     
  2592                           ;dc_motor.c: 151:     mL->direction = 1;
  2593   0025F8  EE20 F001          	lfsr	2,1
  2594   0025FC  501C               	movf	turnRight@mL^0,w,c
  2595   0025FE  26D9               	addwf	fsr2l,f,c
  2596   002600  501D               	movf	(turnRight@mL+1)^0,w,c
  2597   002602  22DA               	addwfc	fsr2h,f,c
  2598   002604  0E01               	movlw	1
  2599   002606  6EDF               	movwf	indf2,c
  2600   002608                     
  2601                           ;dc_motor.c: 152:     setMotorPWM(mL);
  2602   002608  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  2603   00260C  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  2604   002610  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2605   002614                     
  2606                           ;dc_motor.c: 153:     setMotorPWM(mR);
  2607   002614  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  2608   002618  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  2609   00261C  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2610   002620  0012               	return		;funcret
  2611   002622                     __end_of_turnRight:
  2612                           	callstack 0
  2613                           
  2614 ;; *************** function _turnLeft *****************
  2615 ;; Defined at:
  2616 ;;		line 131 in file "dc_motor.c"
  2617 ;; Parameters:    Size  Location     Type
  2618 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2619 ;;		 -> main@mR(9), main@mL(9), 
  2620 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2621 ;;		 -> main@mR(9), main@mL(9), 
  2622 ;; Auto vars:     Size  Location     Type
  2623 ;;		None
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  1    wreg      void 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2637 ;;Total ram usage:        4 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 8
  2640 ;; This function calls:
  2641 ;;		_setMotorPWM
  2642 ;; This function is called by:
  2643 ;;		_motor_response
  2644 ;;		_motor_retrace
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text7
  2649   002622                     __ptext7:
  2650                           	callstack 0
  2651   002622                     _turnLeft:
  2652                           	callstack 21
  2653   002622                     
  2654                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 50;
  2655   002622  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  2656   002626  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  2657   00262A  0E32               	movlw	50
  2658   00262C  6EDF               	movwf	indf2,c
  2659                           
  2660                           ;dc_motor.c: 134:     mR->power = 50;
  2661   00262E  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  2662   002632  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  2663   002636  0E32               	movlw	50
  2664   002638  6EDF               	movwf	indf2,c
  2665   00263A                     
  2666                           ;dc_motor.c: 135:     mL->brakemode = 1;
  2667   00263A  EE20 F002          	lfsr	2,2
  2668   00263E  501C               	movf	turnLeft@mL^0,w,c
  2669   002640  26D9               	addwf	fsr2l,f,c
  2670   002642  501D               	movf	(turnLeft@mL+1)^0,w,c
  2671   002644  22DA               	addwfc	fsr2h,f,c
  2672   002646  0E01               	movlw	1
  2673   002648  6EDF               	movwf	indf2,c
  2674   00264A                     
  2675                           ;dc_motor.c: 136:     mR->brakemode = 1;
  2676   00264A  EE20 F002          	lfsr	2,2
  2677   00264E  501E               	movf	turnLeft@mR^0,w,c
  2678   002650  26D9               	addwf	fsr2l,f,c
  2679   002652  501F               	movf	(turnLeft@mR+1)^0,w,c
  2680   002654  22DA               	addwfc	fsr2h,f,c
  2681   002656  0E01               	movlw	1
  2682   002658  6EDF               	movwf	indf2,c
  2683   00265A                     
  2684                           ;dc_motor.c: 137:     mL->direction = 0;
  2685   00265A  EE20 F001          	lfsr	2,1
  2686   00265E  501C               	movf	turnLeft@mL^0,w,c
  2687   002660  26D9               	addwf	fsr2l,f,c
  2688   002662  501D               	movf	(turnLeft@mL+1)^0,w,c
  2689   002664  22DA               	addwfc	fsr2h,f,c
  2690   002666  0E00               	movlw	0
  2691   002668  6EDF               	movwf	indf2,c
  2692   00266A                     
  2693                           ;dc_motor.c: 138:     mR->direction = 1;
  2694   00266A  EE20 F001          	lfsr	2,1
  2695   00266E  501E               	movf	turnLeft@mR^0,w,c
  2696   002670  26D9               	addwf	fsr2l,f,c
  2697   002672  501F               	movf	(turnLeft@mR+1)^0,w,c
  2698   002674  22DA               	addwfc	fsr2h,f,c
  2699   002676  0E01               	movlw	1
  2700   002678  6EDF               	movwf	indf2,c
  2701   00267A                     
  2702                           ;dc_motor.c: 139:     setMotorPWM(mL);
  2703   00267A  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  2704   00267E  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  2705   002682  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2706   002686                     
  2707                           ;dc_motor.c: 140:     setMotorPWM(mR);
  2708   002686  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  2709   00268A  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  2710   00268E  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2711   002692  0012               	return		;funcret
  2712   002694                     __end_of_turnLeft:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _norm_stop *****************
  2716 ;; Defined at:
  2717 ;;		line 118 in file "dc_motor.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2720 ;;		 -> main@mR(9), main@mL(9), 
  2721 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2722 ;;		 -> main@mR(9), main@mL(9), 
  2723 ;; Auto vars:     Size  Location     Type
  2724 ;;		None
  2725 ;; Return value:  Size  Location     Type
  2726 ;;                  1    wreg      void 
  2727 ;; Registers used:
  2728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2729 ;; Tracked objects:
  2730 ;;		On entry : 0/0
  2731 ;;		On exit  : 0/0
  2732 ;;		Unchanged: 0/0
  2733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2737 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2738 ;;Total ram usage:        4 bytes
  2739 ;; Hardware stack levels used: 1
  2740 ;; Hardware stack levels required when called: 8
  2741 ;; This function calls:
  2742 ;;		_setMotorPWM
  2743 ;; This function is called by:
  2744 ;;		_motor_response
  2745 ;;		_motor_retrace
  2746 ;;		_main
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text8
  2751   002960                     __ptext8:
  2752                           	callstack 0
  2753   002960                     _norm_stop:
  2754                           	callstack 22
  2755   002960                     
  2756                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  2757   002960  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  2758   002964  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  2759   002968  0E00               	movlw	0
  2760   00296A  6EDF               	movwf	indf2,c
  2761                           
  2762                           ;dc_motor.c: 125:     mR->power = 0;
  2763   00296C  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  2764   002970  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  2765   002974  0E00               	movlw	0
  2766   002976  6EDF               	movwf	indf2,c
  2767   002978                     
  2768                           ;dc_motor.c: 126:     setMotorPWM(mL);
  2769   002978  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  2770   00297C  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  2771   002980  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2772   002984                     
  2773                           ;dc_motor.c: 127:     setMotorPWM(mR);
  2774   002984  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  2775   002988  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  2776   00298C  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2777   002990  0012               	return		;funcret
  2778   002992                     __end_of_norm_stop:
  2779                           	callstack 0
  2780                           
  2781 ;; *************** function _fullSpeedAhead *****************
  2782 ;; Defined at:
  2783 ;;		line 167 in file "dc_motor.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2786 ;;		 -> main@mL(9), motor_response@mL(2), 
  2787 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2788 ;;		 -> main@mR(9), motor_response@mR(2), 
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;                  1    wreg      void 
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2800 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2802 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2803 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2804 ;;Total ram usage:        5 bytes
  2805 ;; Hardware stack levels used: 1
  2806 ;; Hardware stack levels required when called: 8
  2807 ;; This function calls:
  2808 ;;		_setMotorPWM
  2809 ;; This function is called by:
  2810 ;;		_motor_response
  2811 ;;		_main
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text9
  2816   00230C                     __ptext9:
  2817                           	callstack 0
  2818   00230C                     _fullSpeedAhead:
  2819                           	callstack 21
  2820   00230C                     
  2821                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  2822   00230C  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2823   002310  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2824   002314  0E05               	movlw	5
  2825   002316  6EDF               	movwf	indf2,c
  2826                           
  2827                           ;dc_motor.c: 170:     mR->power = 5;
  2828   002318  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2829   00231C  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2830   002320  0E05               	movlw	5
  2831   002322  6EDF               	movwf	indf2,c
  2832   002324                     
  2833                           ;dc_motor.c: 171:     mR->direction = 1;
  2834   002324  EE20 F001          	lfsr	2,1
  2835   002328  501E               	movf	fullSpeedAhead@mR^0,w,c
  2836   00232A  26D9               	addwf	fsr2l,f,c
  2837   00232C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2838   00232E  22DA               	addwfc	fsr2h,f,c
  2839   002330  0E01               	movlw	1
  2840   002332  6EDF               	movwf	indf2,c
  2841   002334                     
  2842                           ;dc_motor.c: 172:     mL->direction = 1;
  2843   002334  EE20 F001          	lfsr	2,1
  2844   002338  501C               	movf	fullSpeedAhead@mL^0,w,c
  2845   00233A  26D9               	addwf	fsr2l,f,c
  2846   00233C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2847   00233E  22DA               	addwfc	fsr2h,f,c
  2848   002340  0E01               	movlw	1
  2849   002342  6EDF               	movwf	indf2,c
  2850   002344                     
  2851                           ;dc_motor.c: 173:     mL->brakemode = 1;
  2852   002344  EE20 F002          	lfsr	2,2
  2853   002348  501C               	movf	fullSpeedAhead@mL^0,w,c
  2854   00234A  26D9               	addwf	fsr2l,f,c
  2855   00234C  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2856   00234E  22DA               	addwfc	fsr2h,f,c
  2857   002350  0E01               	movlw	1
  2858   002352  6EDF               	movwf	indf2,c
  2859   002354                     
  2860                           ;dc_motor.c: 174:     mR->brakemode = 1;
  2861   002354  EE20 F002          	lfsr	2,2
  2862   002358  501E               	movf	fullSpeedAhead@mR^0,w,c
  2863   00235A  26D9               	addwf	fsr2l,f,c
  2864   00235C  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2865   00235E  22DA               	addwfc	fsr2h,f,c
  2866   002360  0E01               	movlw	1
  2867   002362  6EDF               	movwf	indf2,c
  2868                           
  2869                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2870   002364  EFCA  F011         	goto	l3164
  2871   002368                     l3158:
  2872                           
  2873                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  2874   002368  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2875   00236C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2876   002370  2ADF               	incf	indf2,f,c
  2877                           
  2878                           ;dc_motor.c: 178:         mR->power++;
  2879   002372  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2880   002376  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2881   00237A  2ADF               	incf	indf2,f,c
  2882   00237C                     
  2883                           ;dc_motor.c: 180:         setMotorPWM(mL);
  2884   00237C  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2885   002380  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2886   002384  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2887   002388                     
  2888                           ;dc_motor.c: 181:         setMotorPWM(mR);
  2889   002388  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2890   00238C  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2891   002390  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2892   002394                     l3164:
  2893                           
  2894                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2895   002394  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2896   002398  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2897   00239C  0E15               	movlw	21
  2898   00239E  60DF               	cpfslt	indf2,c
  2899   0023A0  EFD4  F011         	goto	u1921
  2900   0023A4  EFD6  F011         	goto	u1920
  2901   0023A8                     u1921:
  2902   0023A8  EFE2  F011         	goto	l3168
  2903   0023AC                     u1920:
  2904   0023AC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2905   0023B0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2906   0023B4  0E14               	movlw	20
  2907   0023B6  64DF               	cpfsgt	indf2,c
  2908   0023B8  EFE0  F011         	goto	u1931
  2909   0023BC  EFE2  F011         	goto	u1930
  2910   0023C0                     u1931:
  2911   0023C0  EFB4  F011         	goto	l3158
  2912   0023C4                     u1930:
  2913   0023C4                     l3168:
  2914                           
  2915                           ;dc_motor.c: 183:     mL->power = 20;
  2916   0023C4  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2917   0023C8  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2918   0023CC  0E14               	movlw	20
  2919   0023CE  6EDF               	movwf	indf2,c
  2920                           
  2921                           ;dc_motor.c: 184:     mR->power = 20;
  2922   0023D0  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2923   0023D4  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2924   0023D8  0E14               	movlw	20
  2925   0023DA  6EDF               	movwf	indf2,c
  2926   0023DC                     
  2927                           ;dc_motor.c: 185:     setMotorPWM(mL);
  2928   0023DC  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2929   0023E0  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2930   0023E4  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2931   0023E8                     
  2932                           ;dc_motor.c: 186:     setMotorPWM(mR);
  2933   0023E8  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2934   0023EC  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2935   0023F0  ECA0  F00E         	call	_setMotorPWM	;wreg free
  2936   0023F4  0012               	return		;funcret
  2937   0023F6                     __end_of_fullSpeedAhead:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function _setMotorPWM *****************
  2941 ;; Defined at:
  2942 ;;		line 56 in file "dc_motor.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  m               2   21[COMRAM] PTR struct DC_motor
  2945 ;;		 -> main@mR(9), main@mL(9), motor_response@mR(2), motor_response@mL(2), 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  negDuty         1   26[COMRAM] unsigned char 
  2948 ;;  posDuty         1   25[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2961 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;Total ram usage:        6 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; Hardware stack levels required when called: 7
  2965 ;; This function calls:
  2966 ;;		___lwdiv
  2967 ;;		___wmul
  2968 ;; This function is called by:
  2969 ;;		_norm_stop
  2970 ;;		_turnLeft
  2971 ;;		_turnRight
  2972 ;;		_fullSpeedAhead
  2973 ;;		_reverse
  2974 ;;		_stop
  2975 ;;		_uturn
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text10
  2980   001D40                     __ptext10:
  2981                           	callstack 0
  2982   001D40                     _setMotorPWM:
  2983                           	callstack 22
  2984   001D40                     
  2985                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  2986   001D40  EE20 F002          	lfsr	2,2
  2987   001D44  5016               	movf	setMotorPWM@m^0,w,c
  2988   001D46  26D9               	addwf	fsr2l,f,c
  2989   001D48  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2990   001D4A  22DA               	addwfc	fsr2h,f,c
  2991   001D4C  50DF               	movf	indf2,w,c
  2992   001D4E  B4D8               	btfsc	status,2,c
  2993   001D50  EFAC  F00E         	goto	u1901
  2994   001D54  EFAE  F00E         	goto	u1900
  2995   001D58                     u1901:
  2996   001D58  EFE2  F00E         	goto	l3104
  2997   001D5C                     u1900:
  2998   001D5C                     
  2999                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  3000   001D5C  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3001   001D60  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3002   001D64  50DF               	movf	indf2,w,c
  3003   001D66  6E18               	movwf	??_setMotorPWM^0,c
  3004   001D68  5018               	movf	??_setMotorPWM^0,w,c
  3005   001D6A  6E09               	movwf	___wmul@multiplier^0,c
  3006   001D6C  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3007   001D6E  EE20 F003          	lfsr	2,3
  3008   001D72  5016               	movf	setMotorPWM@m^0,w,c
  3009   001D74  26D9               	addwf	fsr2l,f,c
  3010   001D76  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3011   001D78  22DA               	addwfc	fsr2h,f,c
  3012   001D7A  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3013   001D7E  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3014   001D82  EC49  F015         	call	___wmul	;wreg free
  3015   001D86  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3016   001D8A  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3017   001D8E  0E00               	movlw	0
  3018   001D90  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3019   001D92  0E64               	movlw	100
  3020   001D94  6E11               	movwf	___lwdiv@divisor^0,c
  3021   001D96  EC9E  F012         	call	___lwdiv	;wreg free
  3022   001D9A  EE20 F003          	lfsr	2,3
  3023   001D9E  5016               	movf	setMotorPWM@m^0,w,c
  3024   001DA0  26D9               	addwf	fsr2l,f,c
  3025   001DA2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3026   001DA4  22DA               	addwfc	fsr2h,f,c
  3027   001DA6  50DF               	movf	indf2,w,c
  3028   001DA8  6E19               	movwf	(??_setMotorPWM+1)^0,c
  3029   001DAA  500F               	movf	?___lwdiv^0,w,c
  3030   001DAC  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  3031   001DAE  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3032   001DB0                     
  3033                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  3034   001DB0  EE20 F003          	lfsr	2,3
  3035   001DB4  5016               	movf	setMotorPWM@m^0,w,c
  3036   001DB6  26D9               	addwf	fsr2l,f,c
  3037   001DB8  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3038   001DBA  22DA               	addwfc	fsr2h,f,c
  3039   001DBC  50DF               	movf	indf2,w,c
  3040   001DBE  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3041                           
  3042                           ;dc_motor.c: 63:     }
  3043   001DC0  EF05  F00F         	goto	l3108
  3044   001DC4                     l3104:
  3045                           
  3046                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  3047   001DC4  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  3048   001DC8  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  3049   001DCC  50DF               	movf	indf2,w,c
  3050   001DCE  6E18               	movwf	??_setMotorPWM^0,c
  3051   001DD0  5018               	movf	??_setMotorPWM^0,w,c
  3052   001DD2  6E09               	movwf	___wmul@multiplier^0,c
  3053   001DD4  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  3054   001DD6  EE20 F003          	lfsr	2,3
  3055   001DDA  5016               	movf	setMotorPWM@m^0,w,c
  3056   001DDC  26D9               	addwf	fsr2l,f,c
  3057   001DDE  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3058   001DE0  22DA               	addwfc	fsr2h,f,c
  3059   001DE2  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  3060   001DE6  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  3061   001DEA  EC49  F015         	call	___wmul	;wreg free
  3062   001DEE  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  3063   001DF2  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  3064   001DF6  0E00               	movlw	0
  3065   001DF8  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  3066   001DFA  0E64               	movlw	100
  3067   001DFC  6E11               	movwf	___lwdiv@divisor^0,c
  3068   001DFE  EC9E  F012         	call	___lwdiv	;wreg free
  3069   001E02  500F               	movf	?___lwdiv^0,w,c
  3070   001E04  6E1A               	movwf	setMotorPWM@posDuty^0,c
  3071   001E06                     
  3072                           ;dc_motor.c: 66:         negDuty=0;
  3073   001E06  0E00               	movlw	0
  3074   001E08  6E1B               	movwf	setMotorPWM@negDuty^0,c
  3075   001E0A                     l3108:
  3076                           
  3077                           ;dc_motor.c: 69:     if (m->direction) {
  3078   001E0A  EE20 F001          	lfsr	2,1
  3079   001E0E  5016               	movf	setMotorPWM@m^0,w,c
  3080   001E10  26D9               	addwf	fsr2l,f,c
  3081   001E12  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3082   001E14  22DA               	addwfc	fsr2h,f,c
  3083   001E16  50DF               	movf	indf2,w,c
  3084   001E18  B4D8               	btfsc	status,2,c
  3085   001E1A  EF11  F00F         	goto	u1911
  3086   001E1E  EF13  F00F         	goto	u1910
  3087   001E22                     u1911:
  3088   001E22  EF35  F00F         	goto	l3112
  3089   001E26                     u1910:
  3090   001E26                     
  3091                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  3092   001E26  EE20 F005          	lfsr	2,5
  3093   001E2A  5016               	movf	setMotorPWM@m^0,w,c
  3094   001E2C  26D9               	addwf	fsr2l,f,c
  3095   001E2E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3096   001E30  22DA               	addwfc	fsr2h,f,c
  3097   001E32  CFDE F018          	movff	postinc2,??_setMotorPWM
  3098   001E36  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3099   001E3A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3100   001E3E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3101   001E42  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3102                           
  3103                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  3104   001E46  EE20 F007          	lfsr	2,7
  3105   001E4A  5016               	movf	setMotorPWM@m^0,w,c
  3106   001E4C  26D9               	addwf	fsr2l,f,c
  3107   001E4E  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3108   001E50  22DA               	addwfc	fsr2h,f,c
  3109   001E52  CFDE F018          	movff	postinc2,??_setMotorPWM
  3110   001E56  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3111   001E5A  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3112   001E5E  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3113   001E62  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3114                           
  3115                           ;dc_motor.c: 72:     } else {
  3116   001E66  EF55  F00F         	goto	l569
  3117   001E6A                     l3112:
  3118                           
  3119                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  3120   001E6A  EE20 F005          	lfsr	2,5
  3121   001E6E  5016               	movf	setMotorPWM@m^0,w,c
  3122   001E70  26D9               	addwf	fsr2l,f,c
  3123   001E72  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3124   001E74  22DA               	addwfc	fsr2h,f,c
  3125   001E76  CFDE F018          	movff	postinc2,??_setMotorPWM
  3126   001E7A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3127   001E7E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3128   001E82  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3129   001E86  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  3130                           
  3131                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  3132   001E8A  EE20 F007          	lfsr	2,7
  3133   001E8E  5016               	movf	setMotorPWM@m^0,w,c
  3134   001E90  26D9               	addwf	fsr2l,f,c
  3135   001E92  5017               	movf	(setMotorPWM@m+1)^0,w,c
  3136   001E94  22DA               	addwfc	fsr2h,f,c
  3137   001E96  CFDE F018          	movff	postinc2,??_setMotorPWM
  3138   001E9A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  3139   001E9E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  3140   001EA2  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  3141   001EA6  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  3142   001EAA                     l569:
  3143   001EAA  0012               	return		;funcret
  3144   001EAC                     __end_of_setMotorPWM:
  3145                           	callstack 0
  3146                           
  3147 ;; *************** function ___wmul *****************
  3148 ;; Defined at:
  3149 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;  multiplier      2    8[COMRAM] unsigned int 
  3152 ;;  multiplicand    2   10[COMRAM] unsigned int 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  product         2   12[COMRAM] unsigned int 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  2    8[COMRAM] unsigned int 
  3157 ;; Registers used:
  3158 ;;		wreg, status,2, status,0, prodl, prodh
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3164 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3167 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3168 ;;Total ram usage:        6 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; Hardware stack levels required when called: 6
  3171 ;; This function calls:
  3172 ;;		Nothing
  3173 ;; This function is called by:
  3174 ;;		_setMotorPWM
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text11
  3179   002A92                     __ptext11:
  3180                           	callstack 0
  3181   002A92                     ___wmul:
  3182                           	callstack 22
  3183   002A92  5009               	movf	___wmul@multiplier^0,w,c
  3184   002A94  020B               	mulwf	___wmul@multiplicand^0,c
  3185   002A96  CFF3 F00D          	movff	prodl,___wmul@product
  3186   002A9A  CFF4 F00E          	movff	prodh,___wmul@product+1
  3187   002A9E  5009               	movf	___wmul@multiplier^0,w,c
  3188   002AA0  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  3189   002AA2  50F3               	movf	243,w,c
  3190   002AA4  260E               	addwf	(___wmul@product+1)^0,f,c
  3191   002AA6  500A               	movf	(___wmul@multiplier+1)^0,w,c
  3192   002AA8  020B               	mulwf	___wmul@multiplicand^0,c
  3193   002AAA  50F3               	movf	243,w,c
  3194   002AAC  260E               	addwf	(___wmul@product+1)^0,f,c
  3195   002AAE  C00D  F009         	movff	___wmul@product,?___wmul
  3196   002AB2  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  3197   002AB6  0012               	return		;funcret
  3198   002AB8                     __end_of___wmul:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function ___lwdiv *****************
  3202 ;; Defined at:
  3203 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  dividend        2   14[COMRAM] unsigned int 
  3206 ;;  divisor         2   16[COMRAM] unsigned int 
  3207 ;; Auto vars:     Size  Location     Type
  3208 ;;  quotient        2   19[COMRAM] unsigned int 
  3209 ;;  counter         1   18[COMRAM] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2   14[COMRAM] unsigned int 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3220 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3222 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3223 ;;Total ram usage:        7 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 6
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_setMotorPWM
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text12
  3234   00253C                     __ptext12:
  3235                           	callstack 0
  3236   00253C                     ___lwdiv:
  3237                           	callstack 22
  3238   00253C  0E00               	movlw	0
  3239   00253E  6E15               	movwf	(___lwdiv@quotient+1)^0,c
  3240   002540  0E00               	movlw	0
  3241   002542  6E14               	movwf	___lwdiv@quotient^0,c
  3242   002544  5011               	movf	___lwdiv@divisor^0,w,c
  3243   002546  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3244   002548  B4D8               	btfsc	status,2,c
  3245   00254A  EFA9  F012         	goto	u1871
  3246   00254E  EFAB  F012         	goto	u1870
  3247   002552                     u1871:
  3248   002552  EFD3  F012         	goto	l1105
  3249   002556                     u1870:
  3250   002556  0E01               	movlw	1
  3251   002558  6E13               	movwf	___lwdiv@counter^0,c
  3252   00255A  EFB3  F012         	goto	l3084
  3253   00255E                     l3082:
  3254   00255E  90D8               	bcf	status,0,c
  3255   002560  3611               	rlcf	___lwdiv@divisor^0,f,c
  3256   002562  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3257   002564  2A13               	incf	___lwdiv@counter^0,f,c
  3258   002566                     l3084:
  3259   002566  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  3260   002568  EFB8  F012         	goto	u1881
  3261   00256C  EFBA  F012         	goto	u1880
  3262   002570                     u1881:
  3263   002570  EFAF  F012         	goto	l3082
  3264   002574                     u1880:
  3265   002574                     l3086:
  3266   002574  90D8               	bcf	status,0,c
  3267   002576  3614               	rlcf	___lwdiv@quotient^0,f,c
  3268   002578  3615               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3269   00257A  5011               	movf	___lwdiv@divisor^0,w,c
  3270   00257C  5C0F               	subwf	___lwdiv@dividend^0,w,c
  3271   00257E  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  3272   002580  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3273   002582  A0D8               	btfss	status,0,c
  3274   002584  EFC6  F012         	goto	u1891
  3275   002588  EFC8  F012         	goto	u1890
  3276   00258C                     u1891:
  3277   00258C  EFCD  F012         	goto	l3094
  3278   002590                     u1890:
  3279   002590  5011               	movf	___lwdiv@divisor^0,w,c
  3280   002592  5E0F               	subwf	___lwdiv@dividend^0,f,c
  3281   002594  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  3282   002596  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3283   002598  8014               	bsf	___lwdiv@quotient^0,0,c
  3284   00259A                     l3094:
  3285   00259A  90D8               	bcf	status,0,c
  3286   00259C  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3287   00259E  3211               	rrcf	___lwdiv@divisor^0,f,c
  3288   0025A0  2E13               	decfsz	___lwdiv@counter^0,f,c
  3289   0025A2  EFBA  F012         	goto	l3086
  3290   0025A6                     l1105:
  3291   0025A6  C014  F00F         	movff	___lwdiv@quotient,?___lwdiv
  3292   0025AA  C015  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3293   0025AE  0012               	return		;funcret
  3294   0025B0                     __end_of___lwdiv:
  3295                           	callstack 0
  3296                           
  3297 ;; *************** function ___flge *****************
  3298 ;; Defined at:
  3299 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  ff1             4    8[COMRAM] unsigned int 
  3302 ;;  ff2             4   12[COMRAM] unsigned int 
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;		None
  3305 ;; Return value:  Size  Location     Type
  3306 ;;		None               void
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3314 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3316 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3317 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3318 ;;Total ram usage:       12 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 6
  3321 ;; This function calls:
  3322 ;;		Nothing
  3323 ;; This function is called by:
  3324 ;;		_motor_response
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text13
  3329   002110                     __ptext13:
  3330                           	callstack 0
  3331   002110                     ___flge:
  3332                           	callstack 23
  3333   002110  0E00               	movlw	0
  3334   002112  1409               	andwf	___flge@ff1^0,w,c
  3335   002114  6E11               	movwf	??___flge^0,c
  3336   002116  0E00               	movlw	0
  3337   002118  140A               	andwf	(___flge@ff1+1)^0,w,c
  3338   00211A  6E12               	movwf	(??___flge+1)^0,c
  3339   00211C  0E80               	movlw	128
  3340   00211E  140B               	andwf	(___flge@ff1+2)^0,w,c
  3341   002120  6E13               	movwf	(??___flge+2)^0,c
  3342   002122  0E7F               	movlw	127
  3343   002124  140C               	andwf	(___flge@ff1+3)^0,w,c
  3344   002126  6E14               	movwf	(??___flge+3)^0,c
  3345   002128  5011               	movf	??___flge^0,w,c
  3346   00212A  1012               	iorwf	(??___flge+1)^0,w,c
  3347   00212C  1013               	iorwf	(??___flge+2)^0,w,c
  3348   00212E  1014               	iorwf	(??___flge+3)^0,w,c
  3349   002130  A4D8               	btfss	status,2,c
  3350   002132  EF9D  F010         	goto	u1361
  3351   002136  EF9F  F010         	goto	u1360
  3352   00213A                     u1361:
  3353   00213A  EFA7  F010         	goto	l2584
  3354   00213E                     u1360:
  3355   00213E  0E00               	movlw	0
  3356   002140  6E09               	movwf	___flge@ff1^0,c
  3357   002142  0E00               	movlw	0
  3358   002144  6E0A               	movwf	(___flge@ff1+1)^0,c
  3359   002146  0E00               	movlw	0
  3360   002148  6E0B               	movwf	(___flge@ff1+2)^0,c
  3361   00214A  0E00               	movlw	0
  3362   00214C  6E0C               	movwf	(___flge@ff1+3)^0,c
  3363   00214E                     l2584:
  3364   00214E  0E00               	movlw	0
  3365   002150  140D               	andwf	___flge@ff2^0,w,c
  3366   002152  6E11               	movwf	??___flge^0,c
  3367   002154  0E00               	movlw	0
  3368   002156  140E               	andwf	(___flge@ff2+1)^0,w,c
  3369   002158  6E12               	movwf	(??___flge+1)^0,c
  3370   00215A  0E80               	movlw	128
  3371   00215C  140F               	andwf	(___flge@ff2+2)^0,w,c
  3372   00215E  6E13               	movwf	(??___flge+2)^0,c
  3373   002160  0E7F               	movlw	127
  3374   002162  1410               	andwf	(___flge@ff2+3)^0,w,c
  3375   002164  6E14               	movwf	(??___flge+3)^0,c
  3376   002166  5011               	movf	??___flge^0,w,c
  3377   002168  1012               	iorwf	(??___flge+1)^0,w,c
  3378   00216A  1013               	iorwf	(??___flge+2)^0,w,c
  3379   00216C  1014               	iorwf	(??___flge+3)^0,w,c
  3380   00216E  A4D8               	btfss	status,2,c
  3381   002170  EFBC  F010         	goto	u1371
  3382   002174  EFBE  F010         	goto	u1370
  3383   002178                     u1371:
  3384   002178  EFC6  F010         	goto	l2588
  3385   00217C                     u1370:
  3386   00217C  0E00               	movlw	0
  3387   00217E  6E0D               	movwf	___flge@ff2^0,c
  3388   002180  0E00               	movlw	0
  3389   002182  6E0E               	movwf	(___flge@ff2+1)^0,c
  3390   002184  0E00               	movlw	0
  3391   002186  6E0F               	movwf	(___flge@ff2+2)^0,c
  3392   002188  0E00               	movlw	0
  3393   00218A  6E10               	movwf	(___flge@ff2+3)^0,c
  3394   00218C                     l2588:
  3395   00218C  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  3396   00218E  EFCB  F010         	goto	u1381
  3397   002192  EFCD  F010         	goto	u1380
  3398   002196                     u1381:
  3399   002196  EFD6  F010         	goto	l2592
  3400   00219A                     u1380:
  3401   00219A  6C09               	negf	___flge@ff1^0,c
  3402   00219C  1E0A               	comf	(___flge@ff1+1)^0,f,c
  3403   00219E  B0D8               	btfsc	status,0,c
  3404   0021A0  2A0A               	incf	(___flge@ff1+1)^0,f,c
  3405   0021A2  1E0B               	comf	(___flge@ff1+2)^0,f,c
  3406   0021A4  B0D8               	btfsc	status,0,c
  3407   0021A6  2A0B               	incf	(___flge@ff1+2)^0,f,c
  3408   0021A8  0E80               	movlw	128
  3409   0021AA  560C               	subfwb	(___flge@ff1+3)^0,f,c
  3410   0021AC                     l2592:
  3411   0021AC  AE10               	btfss	(___flge@ff2+3)^0,7,c
  3412   0021AE  EFDB  F010         	goto	u1391
  3413   0021B2  EFDD  F010         	goto	u1390
  3414   0021B6                     u1391:
  3415   0021B6  EFE6  F010         	goto	l879
  3416   0021BA                     u1390:
  3417   0021BA  6C0D               	negf	___flge@ff2^0,c
  3418   0021BC  1E0E               	comf	(___flge@ff2+1)^0,f,c
  3419   0021BE  B0D8               	btfsc	status,0,c
  3420   0021C0  2A0E               	incf	(___flge@ff2+1)^0,f,c
  3421   0021C2  1E0F               	comf	(___flge@ff2+2)^0,f,c
  3422   0021C4  B0D8               	btfsc	status,0,c
  3423   0021C6  2A0F               	incf	(___flge@ff2+2)^0,f,c
  3424   0021C8  0E80               	movlw	128
  3425   0021CA  5610               	subfwb	(___flge@ff2+3)^0,f,c
  3426   0021CC                     l879:
  3427   0021CC  0E00               	movlw	0
  3428   0021CE  1A09               	xorwf	___flge@ff1^0,f,c
  3429   0021D0  0E00               	movlw	0
  3430   0021D2  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  3431   0021D4  0E00               	movlw	0
  3432   0021D6  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  3433   0021D8  0E80               	movlw	128
  3434   0021DA  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  3435   0021DC  0E00               	movlw	0
  3436   0021DE  1A0D               	xorwf	___flge@ff2^0,f,c
  3437   0021E0  0E00               	movlw	0
  3438   0021E2  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  3439   0021E4  0E00               	movlw	0
  3440   0021E6  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  3441   0021E8  0E80               	movlw	128
  3442   0021EA  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  3443   0021EC  500D               	movf	___flge@ff2^0,w,c
  3444   0021EE  5C09               	subwf	___flge@ff1^0,w,c
  3445   0021F0  500E               	movf	(___flge@ff2+1)^0,w,c
  3446   0021F2  580A               	subwfb	(___flge@ff1+1)^0,w,c
  3447   0021F4  500F               	movf	(___flge@ff2+2)^0,w,c
  3448   0021F6  580B               	subwfb	(___flge@ff1+2)^0,w,c
  3449   0021F8  5010               	movf	(___flge@ff2+3)^0,w,c
  3450   0021FA  580C               	subwfb	(___flge@ff1+3)^0,w,c
  3451   0021FC  B0D8               	btfsc	status,0,c
  3452   0021FE  EF03  F011         	goto	u1401
  3453   002202  EF05  F011         	goto	u1400
  3454   002206                     u1401:
  3455   002206  EF08  F011         	goto	l2598
  3456   00220A                     u1400:
  3457   00220A  90D8               	bcf	status,0,c
  3458   00220C  EF09  F011         	goto	l884
  3459   002210                     l2598:
  3460   002210  80D8               	bsf	status,0,c
  3461   002212                     l884:
  3462   002212  0012               	return		;funcret
  3463   002214                     __end_of___flge:
  3464                           	callstack 0
  3465                           
  3466 ;; *************** function _motorRinit *****************
  3467 ;; Defined at:
  3468 ;;		line 88 in file "dc_motor.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  3471 ;;		 -> main@mR(9), 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3483 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3486 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3487 ;;Total ram usage:        2 bytes
  3488 ;; Hardware stack levels used: 1
  3489 ;; Hardware stack levels required when called: 6
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text14
  3498   002694                     __ptext14:
  3499                           	callstack 0
  3500   002694                     _motorRinit:
  3501                           	callstack 24
  3502   002694                     
  3503                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  3504   002694  C009  FFD9         	movff	motorRinit@mR,fsr2l
  3505   002698  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  3506   00269C  0E32               	movlw	50
  3507   00269E  6EDF               	movwf	indf2,c
  3508   0026A0                     
  3509                           ;dc_motor.c: 91:     mR->direction = 1;
  3510   0026A0  EE20 F001          	lfsr	2,1
  3511   0026A4  5009               	movf	motorRinit@mR^0,w,c
  3512   0026A6  26D9               	addwf	fsr2l,f,c
  3513   0026A8  500A               	movf	(motorRinit@mR+1)^0,w,c
  3514   0026AA  22DA               	addwfc	fsr2h,f,c
  3515   0026AC  0E01               	movlw	1
  3516   0026AE  6EDF               	movwf	indf2,c
  3517   0026B0                     
  3518                           ;dc_motor.c: 92:     mR->brakemode = 1;
  3519   0026B0  EE20 F002          	lfsr	2,2
  3520   0026B4  5009               	movf	motorRinit@mR^0,w,c
  3521   0026B6  26D9               	addwf	fsr2l,f,c
  3522   0026B8  500A               	movf	(motorRinit@mR+1)^0,w,c
  3523   0026BA  22DA               	addwfc	fsr2h,f,c
  3524   0026BC  0E01               	movlw	1
  3525   0026BE  6EDF               	movwf	indf2,c
  3526   0026C0                     
  3527                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  3528   0026C0  EE20 F005          	lfsr	2,5
  3529   0026C4  5009               	movf	motorRinit@mR^0,w,c
  3530   0026C6  26D9               	addwf	fsr2l,f,c
  3531   0026C8  500A               	movf	(motorRinit@mR+1)^0,w,c
  3532   0026CA  22DA               	addwfc	fsr2h,f,c
  3533   0026CC  0E25               	movlw	37
  3534   0026CE  6EDE               	movwf	postinc2,c
  3535   0026D0  0E0F               	movlw	15
  3536   0026D2  6EDD               	movwf	postdec2,c
  3537   0026D4                     
  3538                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  3539   0026D4  EE20 F007          	lfsr	2,7
  3540   0026D8  5009               	movf	motorRinit@mR^0,w,c
  3541   0026DA  26D9               	addwf	fsr2l,f,c
  3542   0026DC  500A               	movf	(motorRinit@mR+1)^0,w,c
  3543   0026DE  22DA               	addwfc	fsr2h,f,c
  3544   0026E0  0E21               	movlw	33
  3545   0026E2  6EDE               	movwf	postinc2,c
  3546   0026E4  0E0F               	movlw	15
  3547   0026E6  6EDD               	movwf	postdec2,c
  3548   0026E8                     
  3549                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  3550   0026E8  EE20 F003          	lfsr	2,3
  3551   0026EC  5009               	movf	motorRinit@mR^0,w,c
  3552   0026EE  26D9               	addwf	fsr2l,f,c
  3553   0026F0  500A               	movf	(motorRinit@mR+1)^0,w,c
  3554   0026F2  22DA               	addwfc	fsr2h,f,c
  3555   0026F4  0EC8               	movlw	200
  3556   0026F6  6EDE               	movwf	postinc2,c
  3557   0026F8  0E00               	movlw	0
  3558   0026FA  6EDD               	movwf	postdec2,c
  3559   0026FC  0012               	return		;funcret
  3560   0026FE                     __end_of_motorRinit:
  3561                           	callstack 0
  3562                           
  3563 ;; *************** function _motorLinit *****************
  3564 ;; Defined at:
  3565 ;;		line 78 in file "dc_motor.c"
  3566 ;; Parameters:    Size  Location     Type
  3567 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  3568 ;;		 -> main@mL(9), 
  3569 ;; Auto vars:     Size  Location     Type
  3570 ;;		None
  3571 ;; Return value:  Size  Location     Type
  3572 ;;                  1    wreg      void 
  3573 ;; Registers used:
  3574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3575 ;; Tracked objects:
  3576 ;;		On entry : 0/0
  3577 ;;		On exit  : 0/0
  3578 ;;		Unchanged: 0/0
  3579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3583 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3584 ;;Total ram usage:        2 bytes
  3585 ;; Hardware stack levels used: 1
  3586 ;; Hardware stack levels required when called: 6
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_main
  3591 ;; This function uses a non-reentrant model
  3592 ;;
  3593                           
  3594                           	psect	text15
  3595   0026FE                     __ptext15:
  3596                           	callstack 0
  3597   0026FE                     _motorLinit:
  3598                           	callstack 24
  3599   0026FE                     
  3600                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  3601   0026FE  C009  FFD9         	movff	motorLinit@mL,fsr2l
  3602   002702  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  3603   002706  0E32               	movlw	50
  3604   002708  6EDF               	movwf	indf2,c
  3605   00270A                     
  3606                           ;dc_motor.c: 81:     mL->direction = 1;
  3607   00270A  EE20 F001          	lfsr	2,1
  3608   00270E  5009               	movf	motorLinit@mL^0,w,c
  3609   002710  26D9               	addwf	fsr2l,f,c
  3610   002712  500A               	movf	(motorLinit@mL+1)^0,w,c
  3611   002714  22DA               	addwfc	fsr2h,f,c
  3612   002716  0E01               	movlw	1
  3613   002718  6EDF               	movwf	indf2,c
  3614   00271A                     
  3615                           ;dc_motor.c: 82:     mL->brakemode = 1;
  3616   00271A  EE20 F002          	lfsr	2,2
  3617   00271E  5009               	movf	motorLinit@mL^0,w,c
  3618   002720  26D9               	addwf	fsr2l,f,c
  3619   002722  500A               	movf	(motorLinit@mL+1)^0,w,c
  3620   002724  22DA               	addwfc	fsr2h,f,c
  3621   002726  0E01               	movlw	1
  3622   002728  6EDF               	movwf	indf2,c
  3623   00272A                     
  3624                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  3625   00272A  EE20 F005          	lfsr	2,5
  3626   00272E  5009               	movf	motorLinit@mL^0,w,c
  3627   002730  26D9               	addwf	fsr2l,f,c
  3628   002732  500A               	movf	(motorLinit@mL+1)^0,w,c
  3629   002734  22DA               	addwfc	fsr2h,f,c
  3630   002736  0EAA               	movlw	170
  3631   002738  6EDE               	movwf	postinc2,c
  3632   00273A  0E0F               	movlw	15
  3633   00273C  6EDD               	movwf	postdec2,c
  3634   00273E                     
  3635                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  3636   00273E  EE20 F007          	lfsr	2,7
  3637   002742  5009               	movf	motorLinit@mL^0,w,c
  3638   002744  26D9               	addwf	fsr2l,f,c
  3639   002746  500A               	movf	(motorLinit@mL+1)^0,w,c
  3640   002748  22DA               	addwfc	fsr2h,f,c
  3641   00274A  0EA6               	movlw	166
  3642   00274C  6EDE               	movwf	postinc2,c
  3643   00274E  0E0F               	movlw	15
  3644   002750  6EDD               	movwf	postdec2,c
  3645   002752                     
  3646                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  3647   002752  EE20 F003          	lfsr	2,3
  3648   002756  5009               	movf	motorLinit@mL^0,w,c
  3649   002758  26D9               	addwf	fsr2l,f,c
  3650   00275A  500A               	movf	(motorLinit@mL+1)^0,w,c
  3651   00275C  22DA               	addwfc	fsr2h,f,c
  3652   00275E  0EC8               	movlw	200
  3653   002760  6EDE               	movwf	postinc2,c
  3654   002762  0E00               	movlw	0
  3655   002764  6EDD               	movwf	postdec2,c
  3656   002766  0012               	return		;funcret
  3657   002768                     __end_of_motorLinit:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _initDCmotorsPWM *****************
  3661 ;; Defined at:
  3662 ;;		line 5 in file "dc_motor.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3676 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;Total ram usage:        2 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 6
  3683 ;; This function calls:
  3684 ;;		Nothing
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text16
  3691   0024BC                     __ptext16:
  3692                           	callstack 0
  3693   0024BC                     _initDCmotorsPWM:
  3694                           	callstack 24
  3695   0024BC                     
  3696                           ;dc_motor.c: 9:     RE2PPS=0x05;
  3697   0024BC  0E05               	movlw	5
  3698   0024BE  010E               	movlb	14	; () banked
  3699   0024C0  6F74               	movwf	116,b	;volatile
  3700                           
  3701                           ;dc_motor.c: 10:     RE4PPS=0x06;
  3702   0024C2  0E06               	movlw	6
  3703   0024C4  6F76               	movwf	118,b	;volatile
  3704                           
  3705                           ;dc_motor.c: 11:     RC7PPS=0x07;
  3706   0024C6  0E07               	movlw	7
  3707   0024C8  6F69               	movwf	105,b	;volatile
  3708                           
  3709                           ;dc_motor.c: 12:     RG6PPS=0x08;
  3710   0024CA  0E08               	movlw	8
  3711   0024CC  6F88               	movwf	136,b	;volatile
  3712                           
  3713                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  3714   0024CE  50BD               	movf	189,w,c	;volatile
  3715   0024D0  0B8F               	andlw	-113
  3716   0024D2  0930               	iorlw	48
  3717   0024D4  6EBD               	movwf	189,c	;volatile
  3718                           
  3719                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  3720   0024D6  0EE0               	movlw	-32
  3721   0024D8  16BE               	andwf	190,f,c	;volatile
  3722                           
  3723                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  3724   0024DA  50BF               	movf	191,w,c	;volatile
  3725   0024DC  0BF0               	andlw	-16
  3726   0024DE  0901               	iorlw	1
  3727   0024E0  6EBF               	movwf	191,c	;volatile
  3728                           
  3729                           ;dc_motor.c: 21:     T2PR=200;
  3730   0024E2  0EC8               	movlw	200
  3731   0024E4  6EBC               	movwf	188,c	;volatile
  3732   0024E6                     
  3733                           ; BSR set to: 14
  3734                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  3735   0024E6  8EBD               	bsf	189,7,c	;volatile
  3736                           
  3737                           ;dc_motor.c: 26:     CCPR1H=0;
  3738   0024E8  0E00               	movlw	0
  3739   0024EA  6EAA               	movwf	170,c	;volatile
  3740                           
  3741                           ;dc_motor.c: 27:     CCPR2H=0;
  3742   0024EC  0E00               	movlw	0
  3743   0024EE  6EA6               	movwf	166,c	;volatile
  3744                           
  3745                           ;dc_motor.c: 28:     CCPR3H=0;
  3746   0024F0  0E00               	movlw	0
  3747   0024F2  010F               	movlb	15	; () banked
  3748   0024F4  6F25               	movwf	37,b	;volatile
  3749                           
  3750                           ;dc_motor.c: 29:     CCPR4H=0;
  3751   0024F6  0E00               	movlw	0
  3752   0024F8  6F21               	movwf	33,b	;volatile
  3753                           
  3754                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  3755   0024FA  0EFC               	movlw	-4
  3756   0024FC  16AD               	andwf	173,f,c	;volatile
  3757                           
  3758                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  3759   0024FE  0EF3               	movlw	-13
  3760   002500  16AD               	andwf	173,f,c	;volatile
  3761                           
  3762                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  3763   002502  0ECF               	movlw	-49
  3764   002504  16AD               	andwf	173,f,c	;volatile
  3765                           
  3766                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  3767   002506  0E3F               	movlw	-193
  3768   002508  16AD               	andwf	173,f,c	;volatile
  3769   00250A                     
  3770                           ; BSR set to: 15
  3771                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  3772   00250A  88AB               	bsf	171,4,c	;volatile
  3773                           
  3774                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  3775   00250C  50AB               	movf	171,w,c	;volatile
  3776   00250E  0BF0               	andlw	-16
  3777   002510  090C               	iorlw	12
  3778   002512  6EAB               	movwf	171,c	;volatile
  3779   002514                     
  3780                           ; BSR set to: 15
  3781                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  3782   002514  8EAB               	bsf	171,7,c	;volatile
  3783   002516                     
  3784                           ; BSR set to: 15
  3785                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  3786   002516  88A7               	bsf	167,4,c	;volatile
  3787                           
  3788                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  3789   002518  50A7               	movf	167,w,c	;volatile
  3790   00251A  0BF0               	andlw	-16
  3791   00251C  090C               	iorlw	12
  3792   00251E  6EA7               	movwf	167,c	;volatile
  3793   002520                     
  3794                           ; BSR set to: 15
  3795                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  3796   002520  8EA7               	bsf	167,7,c	;volatile
  3797   002522                     
  3798                           ; BSR set to: 15
  3799                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  3800   002522  8926               	bsf	38,4,b	;volatile
  3801                           
  3802                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  3803   002524  5126               	movf	38,w,b	;volatile
  3804   002526  0BF0               	andlw	-16
  3805   002528  090C               	iorlw	12
  3806   00252A  6F26               	movwf	38,b	;volatile
  3807   00252C                     
  3808                           ; BSR set to: 15
  3809                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  3810   00252C  8F26               	bsf	38,7,b	;volatile
  3811   00252E                     
  3812                           ; BSR set to: 15
  3813                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  3814   00252E  8922               	bsf	34,4,b	;volatile
  3815                           
  3816                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  3817   002530  5122               	movf	34,w,b	;volatile
  3818   002532  0BF0               	andlw	-16
  3819   002534  090C               	iorlw	12
  3820   002536  6F22               	movwf	34,b	;volatile
  3821   002538                     
  3822                           ; BSR set to: 15
  3823                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  3824   002538  8F22               	bsf	34,7,b	;volatile
  3825   00253A                     
  3826                           ; BSR set to: 15
  3827   00253A  0012               	return		;funcret
  3828   00253C                     __end_of_initDCmotorsPWM:
  3829                           	callstack 0
  3830                           
  3831 ;; *************** function _color_read_RGBC *****************
  3832 ;; Defined at:
  3833 ;;		line 94 in file "color.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  3836 ;;		 -> main@RGBC(32), 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;		None
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  1    wreg      void 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3852 ;;Total ram usage:        2 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; Hardware stack levels required when called: 9
  3855 ;; This function calls:
  3856 ;;		___xxtofl
  3857 ;;		_color_read_Blue
  3858 ;;		_color_read_Clear
  3859 ;;		_color_read_Green
  3860 ;;		_color_read_Red
  3861 ;; This function is called by:
  3862 ;;		_main
  3863 ;; This function uses a non-reentrant model
  3864 ;;
  3865                           
  3866                           	psect	text17
  3867   0023F6                     __ptext17:
  3868                           	callstack 0
  3869   0023F6                     _color_read_RGBC:
  3870                           	callstack 21
  3871   0023F6                     
  3872                           ;color.c: 95:     temp->R = color_read_Red();
  3873   0023F6  ECB4  F013         	call	_color_read_Red	;wreg free
  3874   0023FA  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  3875   0023FE  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  3876   002402  6A16               	clrf	(___xxtofl@val+2)^0,c
  3877   002404  6A17               	clrf	(___xxtofl@val+3)^0,c
  3878   002406  0E00               	movlw	0
  3879   002408  ECC6  F00D         	call	___xxtofl
  3880   00240C  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  3881   002410  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  3882   002414  C014  FFDE         	movff	?___xxtofl,postinc2
  3883   002418  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3884   00241C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3885   002420  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3886                           
  3887                           ;color.c: 96:     temp->B = color_read_Blue();
  3888   002424  EC2C  F014         	call	_color_read_Blue	;wreg free
  3889   002428  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  3890   00242C  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  3891   002430  6A16               	clrf	(___xxtofl@val+2)^0,c
  3892   002432  6A17               	clrf	(___xxtofl@val+3)^0,c
  3893   002434  0E00               	movlw	0
  3894   002436  ECC6  F00D         	call	___xxtofl
  3895   00243A  EE20 F008          	lfsr	2,8
  3896   00243E  5022               	movf	color_read_RGBC@temp^0,w,c
  3897   002440  26D9               	addwf	fsr2l,f,c
  3898   002442  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3899   002444  22DA               	addwfc	fsr2h,f,c
  3900   002446  C014  FFDE         	movff	?___xxtofl,postinc2
  3901   00244A  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3902   00244E  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3903   002452  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3904                           
  3905                           ;color.c: 97:     temp->G = color_read_Green();
  3906   002456  ECDC  F013         	call	_color_read_Green	;wreg free
  3907   00245A  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  3908   00245E  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  3909   002462  6A16               	clrf	(___xxtofl@val+2)^0,c
  3910   002464  6A17               	clrf	(___xxtofl@val+3)^0,c
  3911   002466  0E00               	movlw	0
  3912   002468  ECC6  F00D         	call	___xxtofl
  3913   00246C  EE20 F004          	lfsr	2,4
  3914   002470  5022               	movf	color_read_RGBC@temp^0,w,c
  3915   002472  26D9               	addwf	fsr2l,f,c
  3916   002474  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3917   002476  22DA               	addwfc	fsr2h,f,c
  3918   002478  C014  FFDE         	movff	?___xxtofl,postinc2
  3919   00247C  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3920   002480  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3921   002484  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3922                           
  3923                           ;color.c: 98:     temp->C = color_read_Clear();
  3924   002488  EC04  F014         	call	_color_read_Clear	;wreg free
  3925   00248C  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  3926   002490  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  3927   002494  6A16               	clrf	(___xxtofl@val+2)^0,c
  3928   002496  6A17               	clrf	(___xxtofl@val+3)^0,c
  3929   002498  0E00               	movlw	0
  3930   00249A  ECC6  F00D         	call	___xxtofl
  3931   00249E  EE20 F00C          	lfsr	2,12
  3932   0024A2  5022               	movf	color_read_RGBC@temp^0,w,c
  3933   0024A4  26D9               	addwf	fsr2l,f,c
  3934   0024A6  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  3935   0024A8  22DA               	addwfc	fsr2h,f,c
  3936   0024AA  C014  FFDE         	movff	?___xxtofl,postinc2
  3937   0024AE  C015  FFDE         	movff	?___xxtofl+1,postinc2
  3938   0024B2  C016  FFDE         	movff	?___xxtofl+2,postinc2
  3939   0024B6  C017  FFDE         	movff	?___xxtofl+3,postinc2
  3940   0024BA  0012               	return		;funcret
  3941   0024BC                     __end_of_color_read_RGBC:
  3942                           	callstack 0
  3943                           
  3944 ;; *************** function _color_read_Red *****************
  3945 ;; Defined at:
  3946 ;;		line 35 in file "color.c"
  3947 ;; Parameters:    Size  Location     Type
  3948 ;;		None
  3949 ;; Auto vars:     Size  Location     Type
  3950 ;;  tmp             2   17[COMRAM] unsigned int 
  3951 ;; Return value:  Size  Location     Type
  3952 ;;                  2   12[COMRAM] unsigned int 
  3953 ;; Registers used:
  3954 ;;		wreg, status,2, status,0, cstack
  3955 ;; Tracked objects:
  3956 ;;		On entry : 0/0
  3957 ;;		On exit  : 0/0
  3958 ;;		Unchanged: 0/0
  3959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3962 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3963 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3964 ;;Total ram usage:        7 bytes
  3965 ;; Hardware stack levels used: 1
  3966 ;; Hardware stack levels required when called: 8
  3967 ;; This function calls:
  3968 ;;		_I2C_2_Master_Read
  3969 ;;		_I2C_2_Master_RepStart
  3970 ;;		_I2C_2_Master_Start
  3971 ;;		_I2C_2_Master_Stop
  3972 ;;		_I2C_2_Master_Write
  3973 ;; This function is called by:
  3974 ;;		_color_read_RGBC
  3975 ;;		_main
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text18
  3980   002768                     __ptext18:
  3981                           	callstack 0
  3982   002768                     _color_read_Red:
  3983                           	callstack 22
  3984   002768                     
  3985                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  3986   002768  ECCE  F015         	call	_I2C_2_Master_Start	;wreg free
  3987                           
  3988                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  3989   00276C  0E52               	movlw	82
  3990   00276E  ECB2  F015         	call	_I2C_2_Master_Write
  3991                           
  3992                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  3993   002772  0EB6               	movlw	182
  3994   002774  ECB2  F015         	call	_I2C_2_Master_Write
  3995                           
  3996                           ;color.c: 41:  I2C_2_Master_RepStart();
  3997   002778  ECC4  F015         	call	_I2C_2_Master_RepStart	;wreg free
  3998                           
  3999                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  4000   00277C  0E53               	movlw	83
  4001   00277E  ECB2  F015         	call	_I2C_2_Master_Write
  4002                           
  4003                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  4004   002782  0E01               	movlw	1
  4005   002784  EC75  F014         	call	_I2C_2_Master_Read
  4006   002788  6E0F               	movwf	??_color_read_Red^0,c
  4007   00278A  500F               	movf	??_color_read_Red^0,w,c
  4008   00278C  6E12               	movwf	color_read_Red@tmp^0,c
  4009   00278E  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  4010                           
  4011                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4012   002790  0E00               	movlw	0
  4013   002792  EC75  F014         	call	_I2C_2_Master_Read
  4014   002796  6E0F               	movwf	??_color_read_Red^0,c
  4015   002798  500F               	movf	??_color_read_Red^0,w,c
  4016   00279A  6E11               	movwf	(??_color_read_Red+2)^0,c
  4017   00279C  6A10               	clrf	(??_color_read_Red+1)^0,c
  4018   00279E  5012               	movf	color_read_Red@tmp^0,w,c
  4019   0027A0  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  4020   0027A2  6E12               	movwf	color_read_Red@tmp^0,c
  4021   0027A4  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  4022   0027A6  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  4023   0027A8  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  4024                           
  4025                           ;color.c: 45:  I2C_2_Master_Stop();
  4026   0027AA  ECC9  F015         	call	_I2C_2_Master_Stop	;wreg free
  4027   0027AE                     
  4028                           ;color.c: 46:  return tmp;
  4029   0027AE  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  4030   0027B2  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  4031   0027B6  0012               	return		;funcret
  4032   0027B8                     __end_of_color_read_Red:
  4033                           	callstack 0
  4034                           
  4035 ;; *************** function _color_read_Green *****************
  4036 ;; Defined at:
  4037 ;;		line 49 in file "color.c"
  4038 ;; Parameters:    Size  Location     Type
  4039 ;;		None
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  tmp             2   17[COMRAM] unsigned int 
  4042 ;; Return value:  Size  Location     Type
  4043 ;;                  2   12[COMRAM] unsigned int 
  4044 ;; Registers used:
  4045 ;;		wreg, status,2, status,0, cstack
  4046 ;; Tracked objects:
  4047 ;;		On entry : 0/0
  4048 ;;		On exit  : 0/0
  4049 ;;		Unchanged: 0/0
  4050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4051 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4052 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4053 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4054 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4055 ;;Total ram usage:        7 bytes
  4056 ;; Hardware stack levels used: 1
  4057 ;; Hardware stack levels required when called: 8
  4058 ;; This function calls:
  4059 ;;		_I2C_2_Master_Read
  4060 ;;		_I2C_2_Master_RepStart
  4061 ;;		_I2C_2_Master_Start
  4062 ;;		_I2C_2_Master_Stop
  4063 ;;		_I2C_2_Master_Write
  4064 ;; This function is called by:
  4065 ;;		_color_read_RGBC
  4066 ;;		_main
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text19
  4071   0027B8                     __ptext19:
  4072                           	callstack 0
  4073   0027B8                     _color_read_Green:
  4074                           	callstack 21
  4075   0027B8                     
  4076                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  4077   0027B8  ECCE  F015         	call	_I2C_2_Master_Start	;wreg free
  4078                           
  4079                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  4080   0027BC  0E52               	movlw	82
  4081   0027BE  ECB2  F015         	call	_I2C_2_Master_Write
  4082                           
  4083                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  4084   0027C2  0EB8               	movlw	184
  4085   0027C4  ECB2  F015         	call	_I2C_2_Master_Write
  4086                           
  4087                           ;color.c: 55:  I2C_2_Master_RepStart();
  4088   0027C8  ECC4  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4089                           
  4090                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  4091   0027CC  0E53               	movlw	83
  4092   0027CE  ECB2  F015         	call	_I2C_2_Master_Write
  4093                           
  4094                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  4095   0027D2  0E01               	movlw	1
  4096   0027D4  EC75  F014         	call	_I2C_2_Master_Read
  4097   0027D8  6E0F               	movwf	??_color_read_Green^0,c
  4098   0027DA  500F               	movf	??_color_read_Green^0,w,c
  4099   0027DC  6E12               	movwf	color_read_Green@tmp^0,c
  4100   0027DE  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  4101                           
  4102                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4103   0027E0  0E00               	movlw	0
  4104   0027E2  EC75  F014         	call	_I2C_2_Master_Read
  4105   0027E6  6E0F               	movwf	??_color_read_Green^0,c
  4106   0027E8  500F               	movf	??_color_read_Green^0,w,c
  4107   0027EA  6E11               	movwf	(??_color_read_Green+2)^0,c
  4108   0027EC  6A10               	clrf	(??_color_read_Green+1)^0,c
  4109   0027EE  5012               	movf	color_read_Green@tmp^0,w,c
  4110   0027F0  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  4111   0027F2  6E12               	movwf	color_read_Green@tmp^0,c
  4112   0027F4  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  4113   0027F6  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  4114   0027F8  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  4115                           
  4116                           ;color.c: 59:  I2C_2_Master_Stop();
  4117   0027FA  ECC9  F015         	call	_I2C_2_Master_Stop	;wreg free
  4118   0027FE                     
  4119                           ;color.c: 60:  return tmp;
  4120   0027FE  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  4121   002802  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  4122   002806  0012               	return		;funcret
  4123   002808                     __end_of_color_read_Green:
  4124                           	callstack 0
  4125                           
  4126 ;; *************** function _color_read_Clear *****************
  4127 ;; Defined at:
  4128 ;;		line 77 in file "color.c"
  4129 ;; Parameters:    Size  Location     Type
  4130 ;;		None
  4131 ;; Auto vars:     Size  Location     Type
  4132 ;;  tmp             2   17[COMRAM] unsigned int 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2   12[COMRAM] unsigned int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0, cstack
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4144 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4145 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4146 ;;Total ram usage:        7 bytes
  4147 ;; Hardware stack levels used: 1
  4148 ;; Hardware stack levels required when called: 8
  4149 ;; This function calls:
  4150 ;;		_I2C_2_Master_Read
  4151 ;;		_I2C_2_Master_RepStart
  4152 ;;		_I2C_2_Master_Start
  4153 ;;		_I2C_2_Master_Stop
  4154 ;;		_I2C_2_Master_Write
  4155 ;; This function is called by:
  4156 ;;		_color_read_RGBC
  4157 ;;		_main
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text20
  4162   002808                     __ptext20:
  4163                           	callstack 0
  4164   002808                     _color_read_Clear:
  4165                           	callstack 21
  4166   002808                     
  4167                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  4168   002808  ECCE  F015         	call	_I2C_2_Master_Start	;wreg free
  4169                           
  4170                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  4171   00280C  0E52               	movlw	82
  4172   00280E  ECB2  F015         	call	_I2C_2_Master_Write
  4173                           
  4174                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  4175   002812  0EB4               	movlw	180
  4176   002814  ECB2  F015         	call	_I2C_2_Master_Write
  4177                           
  4178                           ;color.c: 83:  I2C_2_Master_RepStart();
  4179   002818  ECC4  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4180                           
  4181                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  4182   00281C  0E53               	movlw	83
  4183   00281E  ECB2  F015         	call	_I2C_2_Master_Write
  4184                           
  4185                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  4186   002822  0E01               	movlw	1
  4187   002824  EC75  F014         	call	_I2C_2_Master_Read
  4188   002828  6E0F               	movwf	??_color_read_Clear^0,c
  4189   00282A  500F               	movf	??_color_read_Clear^0,w,c
  4190   00282C  6E12               	movwf	color_read_Clear@tmp^0,c
  4191   00282E  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  4192                           
  4193                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4194   002830  0E00               	movlw	0
  4195   002832  EC75  F014         	call	_I2C_2_Master_Read
  4196   002836  6E0F               	movwf	??_color_read_Clear^0,c
  4197   002838  500F               	movf	??_color_read_Clear^0,w,c
  4198   00283A  6E11               	movwf	(??_color_read_Clear+2)^0,c
  4199   00283C  6A10               	clrf	(??_color_read_Clear+1)^0,c
  4200   00283E  5012               	movf	color_read_Clear@tmp^0,w,c
  4201   002840  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  4202   002842  6E12               	movwf	color_read_Clear@tmp^0,c
  4203   002844  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  4204   002846  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  4205   002848  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  4206                           
  4207                           ;color.c: 87:  I2C_2_Master_Stop();
  4208   00284A  ECC9  F015         	call	_I2C_2_Master_Stop	;wreg free
  4209   00284E                     
  4210                           ;color.c: 88:  return tmp;
  4211   00284E  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  4212   002852  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  4213   002856  0012               	return		;funcret
  4214   002858                     __end_of_color_read_Clear:
  4215                           	callstack 0
  4216                           
  4217 ;; *************** function _color_read_Blue *****************
  4218 ;; Defined at:
  4219 ;;		line 63 in file "color.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;		None
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  tmp             2   17[COMRAM] unsigned int 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  2   12[COMRAM] unsigned int 
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;Total ram usage:        7 bytes
  4238 ;; Hardware stack levels used: 1
  4239 ;; Hardware stack levels required when called: 8
  4240 ;; This function calls:
  4241 ;;		_I2C_2_Master_Read
  4242 ;;		_I2C_2_Master_RepStart
  4243 ;;		_I2C_2_Master_Start
  4244 ;;		_I2C_2_Master_Stop
  4245 ;;		_I2C_2_Master_Write
  4246 ;; This function is called by:
  4247 ;;		_color_read_RGBC
  4248 ;;		_main
  4249 ;; This function uses a non-reentrant model
  4250 ;;
  4251                           
  4252                           	psect	text21
  4253   002858                     __ptext21:
  4254                           	callstack 0
  4255   002858                     _color_read_Blue:
  4256                           	callstack 21
  4257   002858                     
  4258                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  4259   002858  ECCE  F015         	call	_I2C_2_Master_Start	;wreg free
  4260                           
  4261                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  4262   00285C  0E52               	movlw	82
  4263   00285E  ECB2  F015         	call	_I2C_2_Master_Write
  4264                           
  4265                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  4266   002862  0EBA               	movlw	186
  4267   002864  ECB2  F015         	call	_I2C_2_Master_Write
  4268                           
  4269                           ;color.c: 69:  I2C_2_Master_RepStart();
  4270   002868  ECC4  F015         	call	_I2C_2_Master_RepStart	;wreg free
  4271                           
  4272                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  4273   00286C  0E53               	movlw	83
  4274   00286E  ECB2  F015         	call	_I2C_2_Master_Write
  4275                           
  4276                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  4277   002872  0E01               	movlw	1
  4278   002874  EC75  F014         	call	_I2C_2_Master_Read
  4279   002878  6E0F               	movwf	??_color_read_Blue^0,c
  4280   00287A  500F               	movf	??_color_read_Blue^0,w,c
  4281   00287C  6E12               	movwf	color_read_Blue@tmp^0,c
  4282   00287E  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  4283                           
  4284                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  4285   002880  0E00               	movlw	0
  4286   002882  EC75  F014         	call	_I2C_2_Master_Read
  4287   002886  6E0F               	movwf	??_color_read_Blue^0,c
  4288   002888  500F               	movf	??_color_read_Blue^0,w,c
  4289   00288A  6E11               	movwf	(??_color_read_Blue+2)^0,c
  4290   00288C  6A10               	clrf	(??_color_read_Blue+1)^0,c
  4291   00288E  5012               	movf	color_read_Blue@tmp^0,w,c
  4292   002890  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  4293   002892  6E12               	movwf	color_read_Blue@tmp^0,c
  4294   002894  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  4295   002896  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  4296   002898  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  4297                           
  4298                           ;color.c: 73:  I2C_2_Master_Stop();
  4299   00289A  ECC9  F015         	call	_I2C_2_Master_Stop	;wreg free
  4300   00289E                     
  4301                           ;color.c: 74:  return tmp;
  4302   00289E  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  4303   0028A2  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  4304   0028A6  0012               	return		;funcret
  4305   0028A8                     __end_of_color_read_Blue:
  4306                           	callstack 0
  4307                           
  4308 ;; *************** function _I2C_2_Master_RepStart *****************
  4309 ;; Defined at:
  4310 ;;		line 33 in file "i2c.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;		None
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg, status,2, status,0, cstack
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4328 ;;Total ram usage:        0 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 7
  4331 ;; This function calls:
  4332 ;;		_I2C_2_Master_Idle
  4333 ;; This function is called by:
  4334 ;;		_color_read_Red
  4335 ;;		_color_read_Green
  4336 ;;		_color_read_Blue
  4337 ;;		_color_read_Clear
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text22
  4342   002B88                     __ptext22:
  4343                           	callstack 0
  4344   002B88                     _I2C_2_Master_RepStart:
  4345                           	callstack 22
  4346   002B88                     
  4347                           ;i2c.c: 35:   I2C_2_Master_Idle();
  4348   002B88  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  4349   002B8C                     
  4350                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  4351   002B8C  010E               	movlb	14	; () banked
  4352   002B8E  83DA               	bsf	218,1,b	;volatile
  4353   002B90                     
  4354                           ; BSR set to: 14
  4355   002B90  0012               	return		;funcret
  4356   002B92                     __end_of_I2C_2_Master_RepStart:
  4357                           	callstack 0
  4358                           
  4359 ;; *************** function _I2C_2_Master_Read *****************
  4360 ;; Defined at:
  4361 ;;		line 51 in file "i2c.c"
  4362 ;; Parameters:    Size  Location     Type
  4363 ;;  ack             1    wreg     unsigned char 
  4364 ;; Auto vars:     Size  Location     Type
  4365 ;;  ack             1   10[COMRAM] unsigned char 
  4366 ;;  tmp             1   11[COMRAM] unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      unsigned char 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4378 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4379 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4380 ;;Total ram usage:        3 bytes
  4381 ;; Hardware stack levels used: 1
  4382 ;; Hardware stack levels required when called: 7
  4383 ;; This function calls:
  4384 ;;		_I2C_2_Master_Idle
  4385 ;; This function is called by:
  4386 ;;		_color_read_Red
  4387 ;;		_color_read_Green
  4388 ;;		_color_read_Blue
  4389 ;;		_color_read_Clear
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text23
  4394   0028EA                     __ptext23:
  4395                           	callstack 0
  4396   0028EA                     _I2C_2_Master_Read:
  4397                           	callstack 22
  4398                           
  4399                           ; BSR set to: 14
  4400                           ;incstack = 0
  4401                           ;I2C_2_Master_Read@ack stored from wreg
  4402   0028EA  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  4403   0028EC                     
  4404                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  4405   0028EC  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  4406   0028F0                     
  4407                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  4408   0028F0  010E               	movlb	14	; () banked
  4409   0028F2  87DA               	bsf	218,3,b	;volatile
  4410                           
  4411                           ;i2c.c: 56:   I2C_2_Master_Idle();
  4412   0028F4  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  4413   0028F8                     
  4414                           ;i2c.c: 57:   tmp = SSP2BUF;
  4415   0028F8  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  4416                           
  4417                           ;i2c.c: 58:   I2C_2_Master_Idle();
  4418   0028FC  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  4419   002900                     
  4420                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  4421   002900  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  4422   002902  B4D8               	btfsc	status,2,c
  4423   002904  EF86  F014         	goto	u1051
  4424   002908  EF8A  F014         	goto	u1050
  4425   00290C                     u1051:
  4426   00290C  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4427   00290E  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  4428   002910  EF8B  F014         	goto	u1068
  4429   002914                     u1050:
  4430   002914  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  4431   002916                     u1068:
  4432   002916  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  4433   002918  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  4434   00291A  010E               	movlb	14	; () banked
  4435   00291C  51DA               	movf	218,w,b	;volatile
  4436   00291E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4437   002920  0BDF               	andlw	-33
  4438   002922  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  4439   002924  6FDA               	movwf	218,b	;volatile
  4440   002926                     
  4441                           ; BSR set to: 14
  4442                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  4443   002926  89DA               	bsf	218,4,b	;volatile
  4444   002928                     
  4445                           ; BSR set to: 14
  4446                           ;i2c.c: 61:   return tmp;
  4447   002928  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  4448   00292A                     
  4449                           ; BSR set to: 14
  4450   00292A  0012               	return		;funcret
  4451   00292C                     __end_of_I2C_2_Master_Read:
  4452                           	callstack 0
  4453                           
  4454 ;; *************** function ___xxtofl *****************
  4455 ;; Defined at:
  4456 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  4457 ;; Parameters:    Size  Location     Type
  4458 ;;  sign            1    wreg     unsigned char 
  4459 ;;  val             4   19[COMRAM] long 
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;  sign            1   27[COMRAM] unsigned char 
  4462 ;;  arg             4   29[COMRAM] unsigned long 
  4463 ;;  exp             1   28[COMRAM] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  4   19[COMRAM] unsigned char 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4473 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4474 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4476 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4477 ;;Total ram usage:       14 bytes
  4478 ;; Hardware stack levels used: 1
  4479 ;; Hardware stack levels required when called: 6
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_color_read_RGBC
  4484 ;;		_color_normalise
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text24
  4489   001B8C                     __ptext24:
  4490                           	callstack 0
  4491   001B8C                     ___xxtofl:
  4492                           	callstack 23
  4493                           
  4494                           ; BSR set to: 14
  4495                           ;incstack = 0
  4496                           ;___xxtofl@sign stored from wreg
  4497   001B8C  6E1C               	movwf	___xxtofl@sign^0,c
  4498   001B8E  501C               	movf	___xxtofl@sign^0,w,c
  4499   001B90  B4D8               	btfsc	status,2,c
  4500   001B92  EFCD  F00D         	goto	u1411
  4501   001B96  EFCF  F00D         	goto	u1410
  4502   001B9A                     u1411:
  4503   001B9A  EFF1  F00D         	goto	l1269
  4504   001B9E                     u1410:
  4505   001B9E  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4506   001BA0  EFD6  F00D         	goto	u1420
  4507   001BA4  EFD4  F00D         	goto	u1421
  4508   001BA8                     u1421:
  4509   001BA8  EFF1  F00D         	goto	l1269
  4510   001BAC                     u1420:
  4511   001BAC  C014  F018         	movff	___xxtofl@val,??___xxtofl
  4512   001BB0  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  4513   001BB4  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  4514   001BB8  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  4515   001BBC  1E18               	comf	??___xxtofl^0,f,c
  4516   001BBE  1E19               	comf	(??___xxtofl+1)^0,f,c
  4517   001BC0  1E1A               	comf	(??___xxtofl+2)^0,f,c
  4518   001BC2  1E1B               	comf	(??___xxtofl+3)^0,f,c
  4519   001BC4  2A18               	incf	??___xxtofl^0,f,c
  4520   001BC6  0E00               	movlw	0
  4521   001BC8  2219               	addwfc	(??___xxtofl+1)^0,f,c
  4522   001BCA  221A               	addwfc	(??___xxtofl+2)^0,f,c
  4523   001BCC  221B               	addwfc	(??___xxtofl+3)^0,f,c
  4524   001BCE  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  4525   001BD2  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  4526   001BD6  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  4527   001BDA  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  4528   001BDE  EFF9  F00D         	goto	l2608
  4529   001BE2                     l1269:
  4530   001BE2  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  4531   001BE6  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4532   001BEA  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4533   001BEE  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4534   001BF2                     l2608:
  4535   001BF2  5014               	movf	___xxtofl@val^0,w,c
  4536   001BF4  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  4537   001BF6  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  4538   001BF8  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  4539   001BFA  A4D8               	btfss	status,2,c
  4540   001BFC  EF02  F00E         	goto	u1431
  4541   001C00  EF04  F00E         	goto	u1430
  4542   001C04                     u1431:
  4543   001C04  EF0E  F00E         	goto	l2614
  4544   001C08                     u1430:
  4545   001C08  0E00               	movlw	0
  4546   001C0A  6E14               	movwf	?___xxtofl^0,c
  4547   001C0C  0E00               	movlw	0
  4548   001C0E  6E15               	movwf	(?___xxtofl+1)^0,c
  4549   001C10  0E00               	movlw	0
  4550   001C12  6E16               	movwf	(?___xxtofl+2)^0,c
  4551   001C14  0E00               	movlw	0
  4552   001C16  6E17               	movwf	(?___xxtofl+3)^0,c
  4553   001C18  EF9F  F00E         	goto	l1272
  4554   001C1C                     l2614:
  4555   001C1C  0E96               	movlw	150
  4556   001C1E  6E1D               	movwf	___xxtofl@exp^0,c
  4557   001C20  EF18  F00E         	goto	l2618
  4558   001C24                     l2616:
  4559   001C24  2A1D               	incf	___xxtofl@exp^0,f,c
  4560   001C26  90D8               	bcf	status,0,c
  4561   001C28  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4562   001C2A  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4563   001C2C  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4564   001C2E  321E               	rrcf	___xxtofl@arg^0,f,c
  4565   001C30                     l2618:
  4566   001C30  0E00               	movlw	0
  4567   001C32  141E               	andwf	___xxtofl@arg^0,w,c
  4568   001C34  6E18               	movwf	??___xxtofl^0,c
  4569   001C36  0E00               	movlw	0
  4570   001C38  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4571   001C3A  6E19               	movwf	(??___xxtofl+1)^0,c
  4572   001C3C  0E00               	movlw	0
  4573   001C3E  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4574   001C40  6E1A               	movwf	(??___xxtofl+2)^0,c
  4575   001C42  0EFE               	movlw	254
  4576   001C44  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4577   001C46  6E1B               	movwf	(??___xxtofl+3)^0,c
  4578   001C48  5018               	movf	??___xxtofl^0,w,c
  4579   001C4A  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4580   001C4C  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4581   001C4E  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4582   001C50  A4D8               	btfss	status,2,c
  4583   001C52  EF2D  F00E         	goto	u1441
  4584   001C56  EF2F  F00E         	goto	u1440
  4585   001C5A                     u1441:
  4586   001C5A  EF12  F00E         	goto	l2616
  4587   001C5E                     u1440:
  4588   001C5E  EF3D  F00E         	goto	l1276
  4589   001C62                     l2620:
  4590   001C62  2A1D               	incf	___xxtofl@exp^0,f,c
  4591   001C64  0E01               	movlw	1
  4592   001C66  261E               	addwf	___xxtofl@arg^0,f,c
  4593   001C68  0E00               	movlw	0
  4594   001C6A  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  4595   001C6C  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  4596   001C6E  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  4597   001C70  90D8               	bcf	status,0,c
  4598   001C72  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  4599   001C74  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  4600   001C76  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  4601   001C78  321E               	rrcf	___xxtofl@arg^0,f,c
  4602   001C7A                     l1276:
  4603   001C7A  0E00               	movlw	0
  4604   001C7C  141E               	andwf	___xxtofl@arg^0,w,c
  4605   001C7E  6E18               	movwf	??___xxtofl^0,c
  4606   001C80  0E00               	movlw	0
  4607   001C82  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  4608   001C84  6E19               	movwf	(??___xxtofl+1)^0,c
  4609   001C86  0E00               	movlw	0
  4610   001C88  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  4611   001C8A  6E1A               	movwf	(??___xxtofl+2)^0,c
  4612   001C8C  0EFF               	movlw	255
  4613   001C8E  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  4614   001C90  6E1B               	movwf	(??___xxtofl+3)^0,c
  4615   001C92  5018               	movf	??___xxtofl^0,w,c
  4616   001C94  1019               	iorwf	(??___xxtofl+1)^0,w,c
  4617   001C96  101A               	iorwf	(??___xxtofl+2)^0,w,c
  4618   001C98  101B               	iorwf	(??___xxtofl+3)^0,w,c
  4619   001C9A  A4D8               	btfss	status,2,c
  4620   001C9C  EF52  F00E         	goto	u1451
  4621   001CA0  EF54  F00E         	goto	u1450
  4622   001CA4                     u1451:
  4623   001CA4  EF31  F00E         	goto	l2620
  4624   001CA8                     u1450:
  4625   001CA8  EF5C  F00E         	goto	l2628
  4626   001CAC                     l2626:
  4627   001CAC  061D               	decf	___xxtofl@exp^0,f,c
  4628   001CAE  90D8               	bcf	status,0,c
  4629   001CB0  361E               	rlcf	___xxtofl@arg^0,f,c
  4630   001CB2  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  4631   001CB4  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  4632   001CB6  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  4633   001CB8                     l2628:
  4634   001CB8  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  4635   001CBA  EF61  F00E         	goto	u1461
  4636   001CBE  EF63  F00E         	goto	u1460
  4637   001CC2                     u1461:
  4638   001CC2  EF6B  F00E         	goto	l1283
  4639   001CC6                     u1460:
  4640   001CC6  0E02               	movlw	2
  4641   001CC8  601D               	cpfslt	___xxtofl@exp^0,c
  4642   001CCA  EF69  F00E         	goto	u1471
  4643   001CCE  EF6B  F00E         	goto	u1470
  4644   001CD2                     u1471:
  4645   001CD2  EF56  F00E         	goto	l2626
  4646   001CD6                     u1470:
  4647   001CD6                     l1283:
  4648   001CD6  B01D               	btfsc	___xxtofl@exp^0,0,c
  4649   001CD8  EF70  F00E         	goto	u1481
  4650   001CDC  EF72  F00E         	goto	u1480
  4651   001CE0                     u1481:
  4652   001CE0  EF73  F00E         	goto	l2634
  4653   001CE4                     u1480:
  4654   001CE4  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  4655   001CE6                     l2634:
  4656   001CE6  90D8               	bcf	status,0,c
  4657   001CE8  321D               	rrcf	___xxtofl@exp^0,f,c
  4658   001CEA  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  4659   001CEE  6A19               	clrf	(??___xxtofl+1)^0,c
  4660   001CF0  6A1A               	clrf	(??___xxtofl+2)^0,c
  4661   001CF2  6A1B               	clrf	(??___xxtofl+3)^0,c
  4662   001CF4  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  4663   001CF8  6A1A               	clrf	(??___xxtofl+2)^0,c
  4664   001CFA  6A19               	clrf	(??___xxtofl+1)^0,c
  4665   001CFC  6A18               	clrf	??___xxtofl^0,c
  4666   001CFE  5018               	movf	??___xxtofl^0,w,c
  4667   001D00  121E               	iorwf	___xxtofl@arg^0,f,c
  4668   001D02  5019               	movf	(??___xxtofl+1)^0,w,c
  4669   001D04  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  4670   001D06  501A               	movf	(??___xxtofl+2)^0,w,c
  4671   001D08  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  4672   001D0A  501B               	movf	(??___xxtofl+3)^0,w,c
  4673   001D0C  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  4674   001D0E  501C               	movf	___xxtofl@sign^0,w,c
  4675   001D10  B4D8               	btfsc	status,2,c
  4676   001D12  EF8D  F00E         	goto	u1491
  4677   001D16  EF8F  F00E         	goto	u1490
  4678   001D1A                     u1491:
  4679   001D1A  EF97  F00E         	goto	l2644
  4680   001D1E                     u1490:
  4681   001D1E  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  4682   001D20  EF96  F00E         	goto	u1500
  4683   001D24  EF94  F00E         	goto	u1501
  4684   001D28                     u1501:
  4685   001D28  EF97  F00E         	goto	l2644
  4686   001D2C                     u1500:
  4687   001D2C  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  4688   001D2E                     l2644:
  4689   001D2E  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  4690   001D32  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  4691   001D36  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  4692   001D3A  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  4693   001D3E                     l1272:
  4694   001D3E  0012               	return		;funcret
  4695   001D40                     __end_of___xxtofl:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _color_normalise *****************
  4699 ;; Defined at:
  4700 ;;		line 100 in file "color.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  4703 ;;		 -> main@RGBC(32), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;		None
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  1    wreg      void 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4715 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4718 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4719 ;;Total ram usage:        2 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 7
  4722 ;; This function calls:
  4723 ;;		___fldiv
  4724 ;; This function is called by:
  4725 ;;		_main
  4726 ;; This function uses a non-reentrant model
  4727 ;;
  4728                           
  4729                           	psect	text25
  4730   001EAC                     __ptext25:
  4731                           	callstack 0
  4732   001EAC                     _color_normalise:
  4733                           	callstack 23
  4734   001EAC                     
  4735                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  4736   001EAC  EE20 F00C          	lfsr	2,12
  4737   001EB0  5022               	movf	color_normalise@RGBC^0,w,c
  4738   001EB2  26D9               	addwf	fsr2l,f,c
  4739   001EB4  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4740   001EB6  22DA               	addwfc	fsr2h,f,c
  4741   001EB8  CFDE F009          	movff	postinc2,___fldiv@b
  4742   001EBC  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4743   001EC0  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4744   001EC4  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4745   001EC8  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  4746   001ECC  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  4747   001ED0  CFDE F00D          	movff	postinc2,___fldiv@a
  4748   001ED4  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4749   001ED8  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4750   001EDC  CFDE F010          	movff	postinc2,___fldiv@a+3
  4751   001EE0  ECF9  F00B         	call	___fldiv	;wreg free
  4752   001EE4  EE20 F010          	lfsr	2,16
  4753   001EE8  5022               	movf	color_normalise@RGBC^0,w,c
  4754   001EEA  26D9               	addwf	fsr2l,f,c
  4755   001EEC  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4756   001EEE  22DA               	addwfc	fsr2h,f,c
  4757   001EF0  C009  FFDE         	movff	?___fldiv,postinc2
  4758   001EF4  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4759   001EF8  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4760   001EFC  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4761                           
  4762                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  4763   001F00  EE20 F00C          	lfsr	2,12
  4764   001F04  5022               	movf	color_normalise@RGBC^0,w,c
  4765   001F06  26D9               	addwf	fsr2l,f,c
  4766   001F08  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4767   001F0A  22DA               	addwfc	fsr2h,f,c
  4768   001F0C  CFDE F009          	movff	postinc2,___fldiv@b
  4769   001F10  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4770   001F14  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4771   001F18  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4772   001F1C  EE20 F004          	lfsr	2,4
  4773   001F20  5022               	movf	color_normalise@RGBC^0,w,c
  4774   001F22  26D9               	addwf	fsr2l,f,c
  4775   001F24  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4776   001F26  22DA               	addwfc	fsr2h,f,c
  4777   001F28  CFDE F00D          	movff	postinc2,___fldiv@a
  4778   001F2C  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4779   001F30  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4780   001F34  CFDE F010          	movff	postinc2,___fldiv@a+3
  4781   001F38  ECF9  F00B         	call	___fldiv	;wreg free
  4782   001F3C  EE20 F014          	lfsr	2,20
  4783   001F40  5022               	movf	color_normalise@RGBC^0,w,c
  4784   001F42  26D9               	addwf	fsr2l,f,c
  4785   001F44  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4786   001F46  22DA               	addwfc	fsr2h,f,c
  4787   001F48  C009  FFDE         	movff	?___fldiv,postinc2
  4788   001F4C  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4789   001F50  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4790   001F54  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4791                           
  4792                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  4793   001F58  EE20 F00C          	lfsr	2,12
  4794   001F5C  5022               	movf	color_normalise@RGBC^0,w,c
  4795   001F5E  26D9               	addwf	fsr2l,f,c
  4796   001F60  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4797   001F62  22DA               	addwfc	fsr2h,f,c
  4798   001F64  CFDE F009          	movff	postinc2,___fldiv@b
  4799   001F68  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4800   001F6C  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4801   001F70  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4802   001F74  EE20 F008          	lfsr	2,8
  4803   001F78  5022               	movf	color_normalise@RGBC^0,w,c
  4804   001F7A  26D9               	addwf	fsr2l,f,c
  4805   001F7C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4806   001F7E  22DA               	addwfc	fsr2h,f,c
  4807   001F80  CFDE F00D          	movff	postinc2,___fldiv@a
  4808   001F84  CFDE F00E          	movff	postinc2,___fldiv@a+1
  4809   001F88  CFDE F00F          	movff	postinc2,___fldiv@a+2
  4810   001F8C  CFDE F010          	movff	postinc2,___fldiv@a+3
  4811   001F90  ECF9  F00B         	call	___fldiv	;wreg free
  4812   001F94  EE20 F018          	lfsr	2,24
  4813   001F98  5022               	movf	color_normalise@RGBC^0,w,c
  4814   001F9A  26D9               	addwf	fsr2l,f,c
  4815   001F9C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4816   001F9E  22DA               	addwfc	fsr2h,f,c
  4817   001FA0  C009  FFDE         	movff	?___fldiv,postinc2
  4818   001FA4  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4819   001FA8  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4820   001FAC  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4821                           
  4822                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  4823   001FB0  EE20 F00C          	lfsr	2,12
  4824   001FB4  5022               	movf	color_normalise@RGBC^0,w,c
  4825   001FB6  26D9               	addwf	fsr2l,f,c
  4826   001FB8  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4827   001FBA  22DA               	addwfc	fsr2h,f,c
  4828   001FBC  CFDE F009          	movff	postinc2,___fldiv@b
  4829   001FC0  CFDE F00A          	movff	postinc2,___fldiv@b+1
  4830   001FC4  CFDE F00B          	movff	postinc2,___fldiv@b+2
  4831   001FC8  CFDE F00C          	movff	postinc2,___fldiv@b+3
  4832   001FCC  0E00               	movlw	0
  4833   001FCE  6E0D               	movwf	___fldiv@a^0,c
  4834   001FD0  0E00               	movlw	0
  4835   001FD2  6E0E               	movwf	(___fldiv@a+1)^0,c
  4836   001FD4  0E00               	movlw	0
  4837   001FD6  6E0F               	movwf	(___fldiv@a+2)^0,c
  4838   001FD8  0E00               	movlw	0
  4839   001FDA  6E10               	movwf	(___fldiv@a+3)^0,c
  4840   001FDC  ECF9  F00B         	call	___fldiv	;wreg free
  4841   001FE0  EE20 F01C          	lfsr	2,28
  4842   001FE4  5022               	movf	color_normalise@RGBC^0,w,c
  4843   001FE6  26D9               	addwf	fsr2l,f,c
  4844   001FE8  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  4845   001FEA  22DA               	addwfc	fsr2h,f,c
  4846   001FEC  C009  FFDE         	movff	?___fldiv,postinc2
  4847   001FF0  C00A  FFDE         	movff	?___fldiv+1,postinc2
  4848   001FF4  C00B  FFDE         	movff	?___fldiv+2,postinc2
  4849   001FF8  C00C  FFDE         	movff	?___fldiv+3,postinc2
  4850   001FFC  0012               	return		;funcret
  4851   001FFE                     __end_of_color_normalise:
  4852                           	callstack 0
  4853                           
  4854 ;; *************** function ___fldiv *****************
  4855 ;; Defined at:
  4856 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  4857 ;; Parameters:    Size  Location     Type
  4858 ;;  b               4    8[COMRAM] void 
  4859 ;;  a               4   12[COMRAM] void 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  grs             4   27[COMRAM] unsigned long 
  4862 ;;  rem             4   20[COMRAM] unsigned long 
  4863 ;;  new_exp         2   25[COMRAM] short 
  4864 ;;  aexp            1   32[COMRAM] unsigned char 
  4865 ;;  bexp            1   31[COMRAM] unsigned char 
  4866 ;;  sign            1   24[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  4    8[COMRAM] unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4876 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4877 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4878 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4879 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4880 ;;Total ram usage:       25 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 6
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_color_normalise
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text26
  4891   0017F2                     __ptext26:
  4892                           	callstack 0
  4893   0017F2                     ___fldiv:
  4894                           	callstack 23
  4895   0017F2  500C               	movf	(___fldiv@b+3)^0,w,c
  4896   0017F4  0B80               	andlw	128
  4897   0017F6  6E19               	movwf	___fldiv@sign^0,c
  4898   0017F8  500C               	movf	(___fldiv@b+3)^0,w,c
  4899   0017FA  240C               	addwf	(___fldiv@b+3)^0,w,c
  4900   0017FC  6E20               	movwf	___fldiv@bexp^0,c
  4901   0017FE  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  4902   001800  EF04  F00C         	goto	u1131
  4903   001804  EF06  F00C         	goto	u1130
  4904   001808                     u1131:
  4905   001808  EF07  F00C         	goto	l2448
  4906   00180C                     u1130:
  4907   00180C  8020               	bsf	___fldiv@bexp^0,0,c
  4908   00180E                     l2448:
  4909   00180E  5020               	movf	___fldiv@bexp^0,w,c
  4910   001810  B4D8               	btfsc	status,2,c
  4911   001812  EF0D  F00C         	goto	u1141
  4912   001816  EF0F  F00C         	goto	u1140
  4913   00181A                     u1141:
  4914   00181A  EF24  F00C         	goto	l2458
  4915   00181E                     u1140:
  4916   00181E  2820               	incf	___fldiv@bexp^0,w,c
  4917   001820  A4D8               	btfss	status,2,c
  4918   001822  EF15  F00C         	goto	u1151
  4919   001826  EF17  F00C         	goto	u1150
  4920   00182A                     u1151:
  4921   00182A  EF1F  F00C         	goto	l2454
  4922   00182E                     u1150:
  4923   00182E  0E00               	movlw	0
  4924   001830  6E09               	movwf	___fldiv@b^0,c
  4925   001832  0E00               	movlw	0
  4926   001834  6E0A               	movwf	(___fldiv@b+1)^0,c
  4927   001836  0E00               	movlw	0
  4928   001838  6E0B               	movwf	(___fldiv@b+2)^0,c
  4929   00183A  0E00               	movlw	0
  4930   00183C  6E0C               	movwf	(___fldiv@b+3)^0,c
  4931   00183E                     l2454:
  4932   00183E  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  4933   001840  0E00               	movlw	0
  4934   001842  6E0C               	movwf	(___fldiv@b+3)^0,c
  4935   001844  EF2C  F00C         	goto	l2460
  4936   001848                     l2458:
  4937   001848  0E00               	movlw	0
  4938   00184A  6E09               	movwf	___fldiv@b^0,c
  4939   00184C  0E00               	movlw	0
  4940   00184E  6E0A               	movwf	(___fldiv@b+1)^0,c
  4941   001850  0E00               	movlw	0
  4942   001852  6E0B               	movwf	(___fldiv@b+2)^0,c
  4943   001854  0E00               	movlw	0
  4944   001856  6E0C               	movwf	(___fldiv@b+3)^0,c
  4945   001858                     l2460:
  4946   001858  5010               	movf	(___fldiv@a+3)^0,w,c
  4947   00185A  0B80               	andlw	128
  4948   00185C  1A19               	xorwf	___fldiv@sign^0,f,c
  4949   00185E  5010               	movf	(___fldiv@a+3)^0,w,c
  4950   001860  2410               	addwf	(___fldiv@a+3)^0,w,c
  4951   001862  6E21               	movwf	___fldiv@aexp^0,c
  4952   001864  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  4953   001866  EF37  F00C         	goto	u1161
  4954   00186A  EF39  F00C         	goto	u1160
  4955   00186E                     u1161:
  4956   00186E  EF3A  F00C         	goto	l2468
  4957   001872                     u1160:
  4958   001872  8021               	bsf	___fldiv@aexp^0,0,c
  4959   001874                     l2468:
  4960   001874  5021               	movf	___fldiv@aexp^0,w,c
  4961   001876  B4D8               	btfsc	status,2,c
  4962   001878  EF40  F00C         	goto	u1171
  4963   00187C  EF42  F00C         	goto	u1170
  4964   001880                     u1171:
  4965   001880  EF57  F00C         	goto	l2478
  4966   001884                     u1170:
  4967   001884  2821               	incf	___fldiv@aexp^0,w,c
  4968   001886  A4D8               	btfss	status,2,c
  4969   001888  EF48  F00C         	goto	u1181
  4970   00188C  EF4A  F00C         	goto	u1180
  4971   001890                     u1181:
  4972   001890  EF52  F00C         	goto	l2474
  4973   001894                     u1180:
  4974   001894  0E00               	movlw	0
  4975   001896  6E0D               	movwf	___fldiv@a^0,c
  4976   001898  0E00               	movlw	0
  4977   00189A  6E0E               	movwf	(___fldiv@a+1)^0,c
  4978   00189C  0E00               	movlw	0
  4979   00189E  6E0F               	movwf	(___fldiv@a+2)^0,c
  4980   0018A0  0E00               	movlw	0
  4981   0018A2  6E10               	movwf	(___fldiv@a+3)^0,c
  4982   0018A4                     l2474:
  4983   0018A4  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  4984   0018A6  0E00               	movlw	0
  4985   0018A8  6E10               	movwf	(___fldiv@a+3)^0,c
  4986   0018AA  EF5F  F00C         	goto	l2480
  4987   0018AE                     l2478:
  4988   0018AE  0E00               	movlw	0
  4989   0018B0  6E0D               	movwf	___fldiv@a^0,c
  4990   0018B2  0E00               	movlw	0
  4991   0018B4  6E0E               	movwf	(___fldiv@a+1)^0,c
  4992   0018B6  0E00               	movlw	0
  4993   0018B8  6E0F               	movwf	(___fldiv@a+2)^0,c
  4994   0018BA  0E00               	movlw	0
  4995   0018BC  6E10               	movwf	(___fldiv@a+3)^0,c
  4996   0018BE                     l2480:
  4997   0018BE  500D               	movf	___fldiv@a^0,w,c
  4998   0018C0  100E               	iorwf	(___fldiv@a+1)^0,w,c
  4999   0018C2  100F               	iorwf	(___fldiv@a+2)^0,w,c
  5000   0018C4  1010               	iorwf	(___fldiv@a+3)^0,w,c
  5001   0018C6  A4D8               	btfss	status,2,c
  5002   0018C8  EF68  F00C         	goto	u1191
  5003   0018CC  EF6A  F00C         	goto	u1190
  5004   0018D0                     u1191:
  5005   0018D0  EF82  F00C         	goto	l2492
  5006   0018D4                     u1190:
  5007   0018D4  0E00               	movlw	0
  5008   0018D6  6E09               	movwf	___fldiv@b^0,c
  5009   0018D8  0E00               	movlw	0
  5010   0018DA  6E0A               	movwf	(___fldiv@b+1)^0,c
  5011   0018DC  0E00               	movlw	0
  5012   0018DE  6E0B               	movwf	(___fldiv@b+2)^0,c
  5013   0018E0  0E00               	movlw	0
  5014   0018E2  6E0C               	movwf	(___fldiv@b+3)^0,c
  5015   0018E4  0E80               	movlw	128
  5016   0018E6  120B               	iorwf	(___fldiv@b+2)^0,f,c
  5017   0018E8  0E7F               	movlw	127
  5018   0018EA  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5019   0018EC                     l2486:
  5020   0018EC  5019               	movf	___fldiv@sign^0,w,c
  5021   0018EE  120C               	iorwf	(___fldiv@b+3)^0,f,c
  5022   0018F0  C009  F009         	movff	___fldiv@b,?___fldiv
  5023   0018F4  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  5024   0018F8  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  5025   0018FC  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  5026   001900  EFC5  F00D         	goto	l1196
  5027   001904                     l2492:
  5028   001904  5020               	movf	___fldiv@bexp^0,w,c
  5029   001906  A4D8               	btfss	status,2,c
  5030   001908  EF88  F00C         	goto	u1201
  5031   00190C  EF8A  F00C         	goto	u1200
  5032   001910                     u1201:
  5033   001910  EF94  F00C         	goto	l2500
  5034   001914                     u1200:
  5035   001914  0E00               	movlw	0
  5036   001916  6E09               	movwf	?___fldiv^0,c
  5037   001918  0E00               	movlw	0
  5038   00191A  6E0A               	movwf	(?___fldiv+1)^0,c
  5039   00191C  0E00               	movlw	0
  5040   00191E  6E0B               	movwf	(?___fldiv+2)^0,c
  5041   001920  0E00               	movlw	0
  5042   001922  6E0C               	movwf	(?___fldiv+3)^0,c
  5043   001924  EFC5  F00D         	goto	l1196
  5044   001928                     l2500:
  5045   001928  5021               	movf	___fldiv@aexp^0,w,c
  5046   00192A  C020  F011         	movff	___fldiv@bexp,??___fldiv
  5047   00192E  6A12               	clrf	(??___fldiv+1)^0,c
  5048   001930  5E11               	subwf	??___fldiv^0,f,c
  5049   001932  0E00               	movlw	0
  5050   001934  5A12               	subwfb	(??___fldiv+1)^0,f,c
  5051   001936  0E7F               	movlw	127
  5052   001938  2411               	addwf	??___fldiv^0,w,c
  5053   00193A  6E1A               	movwf	___fldiv@new_exp^0,c
  5054   00193C  0E00               	movlw	0
  5055   00193E  2012               	addwfc	(??___fldiv+1)^0,w,c
  5056   001940  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5057   001942  C009  F015         	movff	___fldiv@b,___fldiv@rem
  5058   001946  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  5059   00194A  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  5060   00194E  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  5061   001952  0E00               	movlw	0
  5062   001954  6E09               	movwf	___fldiv@b^0,c
  5063   001956  0E00               	movlw	0
  5064   001958  6E0A               	movwf	(___fldiv@b+1)^0,c
  5065   00195A  0E00               	movlw	0
  5066   00195C  6E0B               	movwf	(___fldiv@b+2)^0,c
  5067   00195E  0E00               	movlw	0
  5068   001960  6E0C               	movwf	(___fldiv@b+3)^0,c
  5069   001962  0E00               	movlw	0
  5070   001964  6E1C               	movwf	___fldiv@grs^0,c
  5071   001966  0E00               	movlw	0
  5072   001968  6E1D               	movwf	(___fldiv@grs+1)^0,c
  5073   00196A  0E00               	movlw	0
  5074   00196C  6E1E               	movwf	(___fldiv@grs+2)^0,c
  5075   00196E  0E00               	movlw	0
  5076   001970  6E1F               	movwf	(___fldiv@grs+3)^0,c
  5077   001972  0E00               	movlw	0
  5078   001974  6E21               	movwf	___fldiv@aexp^0,c
  5079   001976  EFF5  F00C         	goto	l1198
  5080   00197A                     l2510:
  5081   00197A  5021               	movf	___fldiv@aexp^0,w,c
  5082   00197C  B4D8               	btfsc	status,2,c
  5083   00197E  EFC3  F00C         	goto	u1211
  5084   001982  EFC5  F00C         	goto	u1210
  5085   001986                     u1211:
  5086   001986  EFDC  F00C         	goto	l2518
  5087   00198A                     u1210:
  5088   00198A  90D8               	bcf	status,0,c
  5089   00198C  3615               	rlcf	___fldiv@rem^0,f,c
  5090   00198E  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  5091   001990  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  5092   001992  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  5093   001994  90D8               	bcf	status,0,c
  5094   001996  3609               	rlcf	___fldiv@b^0,f,c
  5095   001998  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5096   00199A  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5097   00199C  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5098   00199E  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5099   0019A0  EFD4  F00C         	goto	u1221
  5100   0019A4  EFD6  F00C         	goto	u1220
  5101   0019A8                     u1221:
  5102   0019A8  EFD7  F00C         	goto	l1201
  5103   0019AC                     u1220:
  5104   0019AC  8009               	bsf	___fldiv@b^0,0,c
  5105   0019AE                     l1201:
  5106   0019AE  90D8               	bcf	status,0,c
  5107   0019B0  361C               	rlcf	___fldiv@grs^0,f,c
  5108   0019B2  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5109   0019B4  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5110   0019B6  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5111   0019B8                     l2518:
  5112   0019B8  500D               	movf	___fldiv@a^0,w,c
  5113   0019BA  5C15               	subwf	___fldiv@rem^0,w,c
  5114   0019BC  500E               	movf	(___fldiv@a+1)^0,w,c
  5115   0019BE  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  5116   0019C0  500F               	movf	(___fldiv@a+2)^0,w,c
  5117   0019C2  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  5118   0019C4  5010               	movf	(___fldiv@a+3)^0,w,c
  5119   0019C6  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  5120   0019C8  A0D8               	btfss	status,0,c
  5121   0019CA  EFE9  F00C         	goto	u1231
  5122   0019CE  EFEB  F00C         	goto	u1230
  5123   0019D2                     u1231:
  5124   0019D2  EFF4  F00C         	goto	l2524
  5125   0019D6                     u1230:
  5126   0019D6  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  5127   0019D8  500D               	movf	___fldiv@a^0,w,c
  5128   0019DA  5E15               	subwf	___fldiv@rem^0,f,c
  5129   0019DC  500E               	movf	(___fldiv@a+1)^0,w,c
  5130   0019DE  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  5131   0019E0  500F               	movf	(___fldiv@a+2)^0,w,c
  5132   0019E2  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  5133   0019E4  5010               	movf	(___fldiv@a+3)^0,w,c
  5134   0019E6  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  5135   0019E8                     l2524:
  5136   0019E8  2A21               	incf	___fldiv@aexp^0,f,c
  5137   0019EA                     l1198:
  5138   0019EA  0E19               	movlw	25
  5139   0019EC  6421               	cpfsgt	___fldiv@aexp^0,c
  5140   0019EE  EFFB  F00C         	goto	u1241
  5141   0019F2  EFFD  F00C         	goto	u1240
  5142   0019F6                     u1241:
  5143   0019F6  EFBD  F00C         	goto	l2510
  5144   0019FA                     u1240:
  5145   0019FA  5015               	movf	___fldiv@rem^0,w,c
  5146   0019FC  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  5147   0019FE  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  5148   001A00  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  5149   001A02  B4D8               	btfsc	status,2,c
  5150   001A04  EF06  F00D         	goto	u1251
  5151   001A08  EF08  F00D         	goto	u1250
  5152   001A0C                     u1251:
  5153   001A0C  EF20  F00D         	goto	l2536
  5154   001A10                     u1250:
  5155   001A10  801C               	bsf	___fldiv@grs^0,0,c
  5156   001A12  EF20  F00D         	goto	l2536
  5157   001A16                     l2530:
  5158   001A16  90D8               	bcf	status,0,c
  5159   001A18  3609               	rlcf	___fldiv@b^0,f,c
  5160   001A1A  360A               	rlcf	(___fldiv@b+1)^0,f,c
  5161   001A1C  360B               	rlcf	(___fldiv@b+2)^0,f,c
  5162   001A1E  360C               	rlcf	(___fldiv@b+3)^0,f,c
  5163   001A20  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5164   001A22  EF15  F00D         	goto	u1261
  5165   001A26  EF17  F00D         	goto	u1260
  5166   001A2A                     u1261:
  5167   001A2A  EF18  F00D         	goto	l1207
  5168   001A2E                     u1260:
  5169   001A2E  8009               	bsf	___fldiv@b^0,0,c
  5170   001A30                     l1207:
  5171   001A30  90D8               	bcf	status,0,c
  5172   001A32  361C               	rlcf	___fldiv@grs^0,f,c
  5173   001A34  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  5174   001A36  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  5175   001A38  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  5176   001A3A  061A               	decf	___fldiv@new_exp^0,f,c
  5177   001A3C  A0D8               	btfss	status,0,c
  5178   001A3E  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  5179   001A40                     l2536:
  5180   001A40  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  5181   001A42  EF25  F00D         	goto	u1271
  5182   001A46  EF27  F00D         	goto	u1270
  5183   001A4A                     u1271:
  5184   001A4A  EF0B  F00D         	goto	l2530
  5185   001A4E                     u1270:
  5186   001A4E  0E00               	movlw	0
  5187   001A50  6E21               	movwf	___fldiv@aexp^0,c
  5188   001A52  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  5189   001A54  EF2E  F00D         	goto	u1281
  5190   001A58  EF30  F00D         	goto	u1280
  5191   001A5C                     u1281:
  5192   001A5C  EF54  F00D         	goto	l1209
  5193   001A60                     u1280:
  5194   001A60  0EFF               	movlw	255
  5195   001A62  141C               	andwf	___fldiv@grs^0,w,c
  5196   001A64  6E11               	movwf	??___fldiv^0,c
  5197   001A66  0EFF               	movlw	255
  5198   001A68  141D               	andwf	(___fldiv@grs+1)^0,w,c
  5199   001A6A  6E12               	movwf	(??___fldiv+1)^0,c
  5200   001A6C  0EFF               	movlw	255
  5201   001A6E  141E               	andwf	(___fldiv@grs+2)^0,w,c
  5202   001A70  6E13               	movwf	(??___fldiv+2)^0,c
  5203   001A72  0E7F               	movlw	127
  5204   001A74  141F               	andwf	(___fldiv@grs+3)^0,w,c
  5205   001A76  6E14               	movwf	(??___fldiv+3)^0,c
  5206   001A78  5011               	movf	??___fldiv^0,w,c
  5207   001A7A  1012               	iorwf	(??___fldiv+1)^0,w,c
  5208   001A7C  1013               	iorwf	(??___fldiv+2)^0,w,c
  5209   001A7E  1014               	iorwf	(??___fldiv+3)^0,w,c
  5210   001A80  B4D8               	btfsc	status,2,c
  5211   001A82  EF45  F00D         	goto	u1291
  5212   001A86  EF47  F00D         	goto	u1290
  5213   001A8A                     u1291:
  5214   001A8A  EF4B  F00D         	goto	l1210
  5215   001A8E                     u1290:
  5216   001A8E                     l2544:
  5217   001A8E  0E01               	movlw	1
  5218   001A90  6E21               	movwf	___fldiv@aexp^0,c
  5219   001A92  EF54  F00D         	goto	l1209
  5220   001A96                     l1210:
  5221   001A96  A009               	btfss	___fldiv@b^0,0,c
  5222   001A98  EF50  F00D         	goto	u1301
  5223   001A9C  EF52  F00D         	goto	u1300
  5224   001AA0                     u1301:
  5225   001AA0  EF54  F00D         	goto	l1209
  5226   001AA4                     u1300:
  5227   001AA4  EF47  F00D         	goto	l2544
  5228   001AA8                     l1209:
  5229   001AA8  5021               	movf	___fldiv@aexp^0,w,c
  5230   001AAA  B4D8               	btfsc	status,2,c
  5231   001AAC  EF5A  F00D         	goto	u1311
  5232   001AB0  EF5C  F00D         	goto	u1310
  5233   001AB4                     u1311:
  5234   001AB4  EF80  F00D         	goto	l2556
  5235   001AB8                     u1310:
  5236   001AB8  0E01               	movlw	1
  5237   001ABA  2609               	addwf	___fldiv@b^0,f,c
  5238   001ABC  0E00               	movlw	0
  5239   001ABE  220A               	addwfc	(___fldiv@b+1)^0,f,c
  5240   001AC0  220B               	addwfc	(___fldiv@b+2)^0,f,c
  5241   001AC2  220C               	addwfc	(___fldiv@b+3)^0,f,c
  5242   001AC4  A00C               	btfss	(___fldiv@b+3)^0,0,c
  5243   001AC6  EF67  F00D         	goto	u1321
  5244   001ACA  EF69  F00D         	goto	u1320
  5245   001ACE                     u1321:
  5246   001ACE  EF80  F00D         	goto	l2556
  5247   001AD2                     u1320:
  5248   001AD2  C009  F011         	movff	___fldiv@b,??___fldiv
  5249   001AD6  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  5250   001ADA  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  5251   001ADE  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  5252   001AE2  3414               	rlcf	(??___fldiv+3)^0,w,c
  5253   001AE4  3214               	rrcf	(??___fldiv+3)^0,f,c
  5254   001AE6  3213               	rrcf	(??___fldiv+2)^0,f,c
  5255   001AE8  3212               	rrcf	(??___fldiv+1)^0,f,c
  5256   001AEA  3211               	rrcf	??___fldiv^0,f,c
  5257   001AEC  C011  F009         	movff	??___fldiv,___fldiv@b
  5258   001AF0  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  5259   001AF4  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  5260   001AF8  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  5261   001AFC  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  5262   001AFE  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  5263   001B00                     l2556:
  5264   001B00  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5265   001B02  EF8B  F00D         	goto	u1331
  5266   001B06  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5267   001B08  E108               	bnz	u1330
  5268   001B0A  281A               	incf	___fldiv@new_exp^0,w,c
  5269   001B0C  A0D8               	btfss	status,0,c
  5270   001B0E  EF8B  F00D         	goto	u1331
  5271   001B12  EF8D  F00D         	goto	u1330
  5272   001B16                     u1331:
  5273   001B16  EF98  F00D         	goto	l2560
  5274   001B1A                     u1330:
  5275   001B1A  0E00               	movlw	0
  5276   001B1C  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5277   001B1E  681A               	setf	___fldiv@new_exp^0,c
  5278   001B20  0E00               	movlw	0
  5279   001B22  6E09               	movwf	___fldiv@b^0,c
  5280   001B24  0E00               	movlw	0
  5281   001B26  6E0A               	movwf	(___fldiv@b+1)^0,c
  5282   001B28  0E00               	movlw	0
  5283   001B2A  6E0B               	movwf	(___fldiv@b+2)^0,c
  5284   001B2C  0E00               	movlw	0
  5285   001B2E  6E0C               	movwf	(___fldiv@b+3)^0,c
  5286   001B30                     l2560:
  5287   001B30  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  5288   001B32  EFA5  F00D         	goto	u1340
  5289   001B36  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  5290   001B38  E106               	bnz	u1341
  5291   001B3A  041A               	decf	___fldiv@new_exp^0,w,c
  5292   001B3C  B0D8               	btfsc	status,0,c
  5293   001B3E  EFA3  F00D         	goto	u1341
  5294   001B42  EFA5  F00D         	goto	u1340
  5295   001B46                     u1341:
  5296   001B46  EFB3  F00D         	goto	l2564
  5297   001B4A                     u1340:
  5298   001B4A  0E00               	movlw	0
  5299   001B4C  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  5300   001B4E  0E00               	movlw	0
  5301   001B50  6E1A               	movwf	___fldiv@new_exp^0,c
  5302   001B52  0E00               	movlw	0
  5303   001B54  6E09               	movwf	___fldiv@b^0,c
  5304   001B56  0E00               	movlw	0
  5305   001B58  6E0A               	movwf	(___fldiv@b+1)^0,c
  5306   001B5A  0E00               	movlw	0
  5307   001B5C  6E0B               	movwf	(___fldiv@b+2)^0,c
  5308   001B5E  0E00               	movlw	0
  5309   001B60  6E0C               	movwf	(___fldiv@b+3)^0,c
  5310   001B62  0E00               	movlw	0
  5311   001B64  6E19               	movwf	___fldiv@sign^0,c
  5312   001B66                     l2564:
  5313   001B66  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  5314   001B6A  A020               	btfss	___fldiv@bexp^0,0,c
  5315   001B6C  EFBA  F00D         	goto	u1351
  5316   001B70  EFBC  F00D         	goto	u1350
  5317   001B74                     u1351:
  5318   001B74  EFBF  F00D         	goto	l2570
  5319   001B78                     u1350:
  5320   001B78  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  5321   001B7A  EFC0  F00D         	goto	l2572
  5322   001B7E                     l2570:
  5323   001B7E  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  5324   001B80                     l2572:
  5325   001B80  90D8               	bcf	status,0,c
  5326   001B82  3020               	rrcf	___fldiv@bexp^0,w,c
  5327   001B84  6E0C               	movwf	(___fldiv@b+3)^0,c
  5328   001B86  EF76  F00C         	goto	l2486
  5329   001B8A                     l1196:
  5330   001B8A  0012               	return		;funcret
  5331   001B8C                     __end_of___fldiv:
  5332                           	callstack 0
  5333                           
  5334 ;; *************** function _color_click_init *****************
  5335 ;; Defined at:
  5336 ;;		line 11 in file "color.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5354 ;;Total ram usage:        1 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 9
  5357 ;; This function calls:
  5358 ;;		_I2C_2_Master_Init
  5359 ;;		_color_writetoaddr
  5360 ;; This function is called by:
  5361 ;;		_main
  5362 ;; This function uses a non-reentrant model
  5363 ;;
  5364                           
  5365                           	psect	text27
  5366   00292C                     __ptext27:
  5367                           	callstack 0
  5368   00292C                     _color_click_init:
  5369                           	callstack 21
  5370   00292C                     
  5371                           ;color.c: 14:     I2C_2_Master_Init();
  5372   00292C  ECE2  F014         	call	_I2C_2_Master_Init	;wreg free
  5373   002930                     
  5374                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  5375   002930  0E01               	movlw	1
  5376   002932  6E0B               	movwf	color_writetoaddr@value^0,c
  5377   002934  0E00               	movlw	0
  5378   002936  EC5C  F015         	call	_color_writetoaddr
  5379   00293A                     
  5380                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  5381   00293A  0E3F               	movlw	63
  5382   00293C  6E0D               	movwf	??_color_click_init^0,c
  5383   00293E  0E55               	movlw	85
  5384   002940                     u2567:
  5385   002940  2EE8               	decfsz	wreg,f,c
  5386   002942  D7FE               	bra	u2567
  5387   002944  2E0D               	decfsz	??_color_click_init^0,f,c
  5388   002946  D7FC               	bra	u2567
  5389   002948  F000               	nop	
  5390   00294A                     
  5391                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  5392   00294A  0E03               	movlw	3
  5393   00294C  6E0B               	movwf	color_writetoaddr@value^0,c
  5394   00294E  0E00               	movlw	0
  5395   002950  EC5C  F015         	call	_color_writetoaddr
  5396   002954                     
  5397                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  5398   002954  0ED5               	movlw	213
  5399   002956  6E0B               	movwf	color_writetoaddr@value^0,c
  5400   002958  0E01               	movlw	1
  5401   00295A  EC5C  F015         	call	_color_writetoaddr
  5402   00295E  0012               	return		;funcret
  5403   002960                     __end_of_color_click_init:
  5404                           	callstack 0
  5405                           
  5406 ;; *************** function _I2C_2_Master_Init *****************
  5407 ;; Defined at:
  5408 ;;		line 4 in file "i2c.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, status,2
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;Total ram usage:        0 bytes
  5427 ;; Hardware stack levels used: 1
  5428 ;; Hardware stack levels required when called: 6
  5429 ;; This function calls:
  5430 ;;		Nothing
  5431 ;; This function is called by:
  5432 ;;		_color_click_init
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text28
  5437   0029C4                     __ptext28:
  5438                           	callstack 0
  5439   0029C4                     _I2C_2_Master_Init:
  5440                           	callstack 23
  5441   0029C4                     
  5442                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  5443   0029C4  010E               	movlb	14	; () banked
  5444   0029C6  51D9               	movf	217,w,b	;volatile
  5445   0029C8  0BF0               	andlw	-16
  5446   0029CA  0908               	iorlw	8
  5447   0029CC  6FD9               	movwf	217,b	;volatile
  5448   0029CE                     
  5449                           ; BSR set to: 14
  5450                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  5451   0029CE  8BD9               	bsf	217,5,b	;volatile
  5452                           
  5453                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  5454   0029D0  0E9F               	movlw	159
  5455   0029D2  6FD6               	movwf	214,b	;volatile
  5456   0029D4                     
  5457                           ; BSR set to: 14
  5458                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  5459   0029D4  8A84               	bsf	132,5,c	;volatile
  5460   0029D6                     
  5461                           ; BSR set to: 14
  5462                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  5463   0029D6  8C84               	bsf	132,6,c	;volatile
  5464   0029D8                     
  5465                           ; BSR set to: 14
  5466                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  5467   0029D8  9BA7               	bcf	167,5,b	;volatile
  5468   0029DA                     
  5469                           ; BSR set to: 14
  5470                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  5471   0029DA  9DA7               	bcf	167,6,b	;volatile
  5472                           
  5473                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  5474   0029DC  0E1D               	movlw	29
  5475   0029DE  6F1D               	movwf	29,b	;volatile
  5476                           
  5477                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  5478   0029E0  0E1E               	movlw	30
  5479   0029E2  6F1C               	movwf	28,b	;volatile
  5480                           
  5481                           ;i2c.c: 18:   RD5PPS=0x1C;
  5482   0029E4  0E1C               	movlw	28
  5483   0029E6  6F6F               	movwf	111,b	;volatile
  5484                           
  5485                           ;i2c.c: 19:   RD6PPS=0x1B;
  5486   0029E8  0E1B               	movlw	27
  5487   0029EA  6F70               	movwf	112,b	;volatile
  5488   0029EC                     
  5489                           ; BSR set to: 14
  5490   0029EC  0012               	return		;funcret
  5491   0029EE                     __end_of_I2C_2_Master_Init:
  5492                           	callstack 0
  5493                           
  5494 ;; *************** function _Interrupts_init *****************
  5495 ;; Defined at:
  5496 ;;		line 10 in file "interrupts.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;		None
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;		None
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		None
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;Total ram usage:        0 bytes
  5515 ;; Hardware stack levels used: 1
  5516 ;; Hardware stack levels required when called: 6
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_main
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           
  5524                           	psect	text29
  5525   002B42                     __ptext29:
  5526                           	callstack 0
  5527   002B42                     _Interrupts_init:
  5528                           	callstack 24
  5529   002B42                     
  5530                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  5531   002B42  8082               	bsf	130,0,c	;volatile
  5532                           
  5533                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  5534   002B44  010E               	movlb	14	; () banked
  5535   002B46  919A               	bcf	154,0,b	;volatile
  5536                           
  5537                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  5538   002B48  9133               	bcf	51,0,b	;volatile
  5539                           
  5540                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  5541   002B4A  8129               	bsf	41,0,b	;volatile
  5542                           
  5543                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  5544   002B4C  811F               	bsf	31,0,b	;volatile
  5545                           
  5546                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  5547   002B4E  90F2               	bcf	242,0,c	;volatile
  5548                           
  5549                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  5550   002B50  8AF2               	bsf	242,5,c	;volatile
  5551                           
  5552                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  5553   002B52  8CF2               	bsf	242,6,c	;volatile
  5554                           
  5555                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  5556   002B54  8EF2               	bsf	242,7,c	;volatile
  5557   002B56                     
  5558                           ; BSR set to: 14
  5559   002B56  0012               	return		;funcret
  5560   002B58                     __end_of_Interrupts_init:
  5561                           	callstack 0
  5562                           
  5563 ;; *************** function _Color_Interrupts_threshold *****************
  5564 ;; Defined at:
  5565 ;;		line 38 in file "interrupts.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  upperThresho    2   12[COMRAM] unsigned int 
  5568 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, status,2, status,0, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5583 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5584 ;;Total ram usage:        4 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 9
  5587 ;; This function calls:
  5588 ;;		_color_writetoaddr
  5589 ;; This function is called by:
  5590 ;;		_main
  5591 ;; This function uses a non-reentrant model
  5592 ;;
  5593                           
  5594                           	psect	text30
  5595   0029EE                     __ptext30:
  5596                           	callstack 0
  5597   0029EE                     _Color_Interrupts_threshold:
  5598                           	callstack 21
  5599   0029EE                     
  5600                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  5601   0029EE  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  5602   0029F2  0E04               	movlw	4
  5603   0029F4  EC5C  F015         	call	_color_writetoaddr
  5604                           
  5605                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  5606   0029F8  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  5607   0029FA  6E0B               	movwf	color_writetoaddr@value^0,c
  5608   0029FC  0E05               	movlw	5
  5609   0029FE  EC5C  F015         	call	_color_writetoaddr
  5610                           
  5611                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  5612   002A02  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  5613   002A06  0E06               	movlw	6
  5614   002A08  EC5C  F015         	call	_color_writetoaddr
  5615                           
  5616                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  5617   002A0C  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  5618   002A0E  6E0B               	movwf	color_writetoaddr@value^0,c
  5619   002A10  0E07               	movlw	7
  5620   002A12  EC5C  F015         	call	_color_writetoaddr
  5621   002A16  0012               	return		;funcret
  5622   002A18                     __end_of_Color_Interrupts_threshold:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _Color_Interrupts_init *****************
  5626 ;; Defined at:
  5627 ;;		line 29 in file "interrupts.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;		None
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;		None
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  1    wreg      void 
  5634 ;; Registers used:
  5635 ;;		wreg, status,2, status,0, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;Total ram usage:        1 bytes
  5646 ;; Hardware stack levels used: 1
  5647 ;; Hardware stack levels required when called: 9
  5648 ;; This function calls:
  5649 ;;		_color_writetoaddr
  5650 ;; This function is called by:
  5651 ;;		_main
  5652 ;; This function uses a non-reentrant model
  5653 ;;
  5654                           
  5655                           	psect	text31
  5656   002AF8                     __ptext31:
  5657                           	callstack 0
  5658   002AF8                     _Color_Interrupts_init:
  5659                           	callstack 21
  5660   002AF8                     
  5661                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  5662   002AF8  0E13               	movlw	19
  5663   002AFA  6E0B               	movwf	color_writetoaddr@value^0,c
  5664   002AFC  0E00               	movlw	0
  5665   002AFE  EC5C  F015         	call	_color_writetoaddr
  5666   002B02                     
  5667                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  5668   002B02  0ED0               	movlw	208
  5669   002B04  6E0D               	movwf	??_Color_Interrupts_init^0,c
  5670   002B06  0ECA               	movlw	202
  5671   002B08                     u2577:
  5672   002B08  2EE8               	decfsz	wreg,f,c
  5673   002B0A  D7FE               	bra	u2577
  5674   002B0C  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  5675   002B0E  D7FC               	bra	u2577
  5676   002B10  0012               	return		;funcret
  5677   002B12                     __end_of_Color_Interrupts_init:
  5678                           	callstack 0
  5679                           
  5680 ;; *************** function _color_writetoaddr *****************
  5681 ;; Defined at:
  5682 ;;		line 27 in file "color.c"
  5683 ;; Parameters:    Size  Location     Type
  5684 ;;  address         1    wreg     unsigned char 
  5685 ;;  value           1   10[COMRAM] unsigned char 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;  address         1   11[COMRAM] unsigned char 
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  1    wreg      void 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0, cstack
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5697 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5698 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5700 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5701 ;;Total ram usage:        2 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; Hardware stack levels required when called: 8
  5704 ;; This function calls:
  5705 ;;		_I2C_2_Master_Start
  5706 ;;		_I2C_2_Master_Stop
  5707 ;;		_I2C_2_Master_Write
  5708 ;; This function is called by:
  5709 ;;		_color_click_init
  5710 ;;		_Color_Interrupts_init
  5711 ;;		_Color_Interrupts_threshold
  5712 ;;		_persistence_register
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           	psect	text32
  5717   002AB8                     __ptext32:
  5718                           	callstack 0
  5719   002AB8                     _color_writetoaddr:
  5720                           	callstack 21
  5721                           
  5722                           ;incstack = 0
  5723                           ;color_writetoaddr@address stored from wreg
  5724   002AB8  6E0C               	movwf	color_writetoaddr@address^0,c
  5725   002ABA                     
  5726                           ;color.c: 28:     I2C_2_Master_Start();
  5727   002ABA  ECCE  F015         	call	_I2C_2_Master_Start	;wreg free
  5728                           
  5729                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  5730   002ABE  0E52               	movlw	82
  5731   002AC0  ECB2  F015         	call	_I2C_2_Master_Write
  5732                           
  5733                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  5734   002AC4  500C               	movf	color_writetoaddr@address^0,w,c
  5735   002AC6  0980               	iorlw	128
  5736   002AC8  ECB2  F015         	call	_I2C_2_Master_Write
  5737                           
  5738                           ;color.c: 31:     I2C_2_Master_Write(value);
  5739   002ACC  500B               	movf	color_writetoaddr@value^0,w,c
  5740   002ACE  ECB2  F015         	call	_I2C_2_Master_Write
  5741                           
  5742                           ;color.c: 32:     I2C_2_Master_Stop();
  5743   002AD2  ECC9  F015         	call	_I2C_2_Master_Stop	;wreg free
  5744   002AD6  0012               	return		;funcret
  5745   002AD8                     __end_of_color_writetoaddr:
  5746                           	callstack 0
  5747                           
  5748 ;; *************** function _I2C_2_Master_Write *****************
  5749 ;; Defined at:
  5750 ;;		line 45 in file "i2c.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;  data_byte       1    wreg     unsigned char 
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  data_byte       1    9[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      void 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5767 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5768 ;;Total ram usage:        1 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; Hardware stack levels required when called: 7
  5771 ;; This function calls:
  5772 ;;		_I2C_2_Master_Idle
  5773 ;; This function is called by:
  5774 ;;		_color_writetoaddr
  5775 ;;		_color_read_Red
  5776 ;;		_color_read_Green
  5777 ;;		_color_read_Blue
  5778 ;;		_color_read_Clear
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           	psect	text33
  5783   002B64                     __ptext33:
  5784                           	callstack 0
  5785   002B64                     _I2C_2_Master_Write:
  5786                           	callstack 21
  5787                           
  5788                           ;incstack = 0
  5789                           ;I2C_2_Master_Write@data_byte stored from wreg
  5790   002B64  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  5791   002B66                     
  5792                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5793   002B66  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  5794   002B6A                     
  5795                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5796   002B6A  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  5797   002B6E  0012               	return		;funcret
  5798   002B70                     __end_of_I2C_2_Master_Write:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function _I2C_2_Master_Stop *****************
  5802 ;; Defined at:
  5803 ;;		line 39 in file "i2c.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      void 
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 7
  5824 ;; This function calls:
  5825 ;;		_I2C_2_Master_Idle
  5826 ;; This function is called by:
  5827 ;;		_color_writetoaddr
  5828 ;;		_color_read_Red
  5829 ;;		_color_read_Green
  5830 ;;		_color_read_Blue
  5831 ;;		_color_read_Clear
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text34
  5836   002B92                     __ptext34:
  5837                           	callstack 0
  5838   002B92                     _I2C_2_Master_Stop:
  5839                           	callstack 21
  5840   002B92                     
  5841                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5842   002B92  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  5843   002B96                     
  5844                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5845   002B96  010E               	movlb	14	; () banked
  5846   002B98  85DA               	bsf	218,2,b	;volatile
  5847   002B9A                     
  5848                           ; BSR set to: 14
  5849   002B9A  0012               	return		;funcret
  5850   002B9C                     __end_of_I2C_2_Master_Stop:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function _I2C_2_Master_Start *****************
  5854 ;; Defined at:
  5855 ;;		line 27 in file "i2c.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;		None
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      void 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;Total ram usage:        0 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 7
  5876 ;; This function calls:
  5877 ;;		_I2C_2_Master_Idle
  5878 ;; This function is called by:
  5879 ;;		_color_writetoaddr
  5880 ;;		_color_read_Red
  5881 ;;		_color_read_Green
  5882 ;;		_color_read_Blue
  5883 ;;		_color_read_Clear
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text35
  5888   002B9C                     __ptext35:
  5889                           	callstack 0
  5890   002B9C                     _I2C_2_Master_Start:
  5891                           	callstack 21
  5892   002B9C                     
  5893                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5894   002B9C  EC21  F015         	call	_I2C_2_Master_Idle	;wreg free
  5895   002BA0                     
  5896                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5897   002BA0  010E               	movlb	14	; () banked
  5898   002BA2  81DA               	bsf	218,0,b	;volatile
  5899   002BA4                     
  5900                           ; BSR set to: 14
  5901   002BA4  0012               	return		;funcret
  5902   002BA6                     __end_of_I2C_2_Master_Start:
  5903                           	callstack 0
  5904                           
  5905 ;; *************** function _I2C_2_Master_Idle *****************
  5906 ;; Defined at:
  5907 ;;		line 22 in file "i2c.c"
  5908 ;; Parameters:    Size  Location     Type
  5909 ;;		None
  5910 ;; Auto vars:     Size  Location     Type
  5911 ;;		None
  5912 ;; Return value:  Size  Location     Type
  5913 ;;                  1    wreg      void 
  5914 ;; Registers used:
  5915 ;;		wreg, status,2, status,0
  5916 ;; Tracked objects:
  5917 ;;		On entry : 0/0
  5918 ;;		On exit  : 0/0
  5919 ;;		Unchanged: 0/0
  5920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5924 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5925 ;;Total ram usage:        1 bytes
  5926 ;; Hardware stack levels used: 1
  5927 ;; Hardware stack levels required when called: 6
  5928 ;; This function calls:
  5929 ;;		Nothing
  5930 ;; This function is called by:
  5931 ;;		_I2C_2_Master_Start
  5932 ;;		_I2C_2_Master_RepStart
  5933 ;;		_I2C_2_Master_Stop
  5934 ;;		_I2C_2_Master_Write
  5935 ;;		_I2C_2_Master_Read
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text36
  5940   002A42                     __ptext36:
  5941                           	callstack 0
  5942   002A42                     _I2C_2_Master_Idle:
  5943                           	callstack 21
  5944   002A42                     l192:
  5945   002A42  010E               	movlb	14	; () banked
  5946   002A44  B5D8               	btfsc	216,2,b	;volatile
  5947   002A46  EF27  F015         	goto	u1001
  5948   002A4A  EF29  F015         	goto	u1000
  5949   002A4E                     u1001:
  5950   002A4E  EF21  F015         	goto	l192
  5951   002A52                     u1000:
  5952   002A52                     
  5953                           ; BSR set to: 14
  5954   002A52  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  5955   002A56  0E1F               	movlw	31
  5956   002A58  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  5957   002A5A  A4D8               	btfss	status,2,c
  5958   002A5C  EF32  F015         	goto	u1011
  5959   002A60  EF34  F015         	goto	u1010
  5960   002A64                     u1011:
  5961   002A64  EF21  F015         	goto	l192
  5962   002A68                     u1010:
  5963   002A68                     
  5964                           ; BSR set to: 14
  5965   002A68  0012               	return		;funcret
  5966   002A6A                     __end_of_I2C_2_Master_Idle:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _HighISR *****************
  5970 ;; Defined at:
  5971 ;;		line 71 in file "interrupts.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;Total ram usage:        0 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; Hardware stack levels required when called: 5
  5992 ;; This function calls:
  5993 ;;		_Color_Interrupts_clear
  5994 ;; This function is called by:
  5995 ;;		Interrupt level 2
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	intcode
  6000   000008                     __pintcode:
  6001                           	callstack 0
  6002   000008                     _HighISR:
  6003                           	callstack 21
  6004                           
  6005                           ; BSR set to: 14
  6006                           ;incstack = 0
  6007   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6008   00000A                     
  6009                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  6010   00000A  010E               	movlb	14	; () banked
  6011   00000C  A133               	btfss	51,0,b	;volatile
  6012   00000E  EF0B  F000         	goto	i2u184_41
  6013   000012  EF0D  F000         	goto	i2u184_40
  6014   000016                     i2u184_41:
  6015   000016  EF17  F000         	goto	i2l475
  6016   00001A                     i2u184_40:
  6017   00001A                     
  6018                           ; BSR set to: 14
  6019                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  6020   00001A  8E7C               	bsf	124,7,c	;volatile
  6021   00001C                     
  6022                           ; BSR set to: 14
  6023                           ;interrupts.c: 76:         interrupt_flag = 1;
  6024   00001C  0E00               	movlw	0
  6025   00001E  0100               	movlb	0	; () banked
  6026   000020  6F9F               	movwf	(_interrupt_flag+1)& (0+255),b
  6027   000022  0E01               	movlw	1
  6028   000024  6F9E               	movwf	_interrupt_flag& (0+255),b
  6029   000026                     
  6030                           ; BSR set to: 0
  6031                           ;interrupts.c: 78:         Color_Interrupts_clear();
  6032   000026  ECC9  F014         	call	_Color_Interrupts_clear	;wreg free
  6033   00002A                     
  6034                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  6035   00002A  010E               	movlb	14	; () banked
  6036   00002C  9133               	bcf	51,0,b	;volatile
  6037   00002E                     i2l475:
  6038                           
  6039                           ; BSR set to: 14
  6040   00002E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6041   000030  0011               	retfie		f
  6042   000032                     __end_of_HighISR:
  6043                           	callstack 0
  6044                           
  6045 ;; *************** function _Color_Interrupts_clear *****************
  6046 ;; Defined at:
  6047 ;;		line 51 in file "interrupts.c"
  6048 ;; Parameters:    Size  Location     Type
  6049 ;;		None
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;		None
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  1    wreg      void 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0, cstack
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6065 ;;Total ram usage:        0 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 4
  6068 ;; This function calls:
  6069 ;;		i2_Color_Interrupts_init
  6070 ;;		i2_Color_Interrupts_threshold
  6071 ;;		i2_I2C_2_Master_Start
  6072 ;;		i2_I2C_2_Master_Stop
  6073 ;;		i2_I2C_2_Master_Write
  6074 ;;		i2_persistence_register
  6075 ;; This function is called by:
  6076 ;;		_HighISR
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text38
  6081   002992                     __ptext38:
  6082                           	callstack 0
  6083   002992                     _Color_Interrupts_clear:
  6084                           	callstack 21
  6085   002992                     
  6086                           ;interrupts.c: 55:     I2C_2_Master_Start();
  6087   002992  ECD8  F015         	call	i2_I2C_2_Master_Start	;wreg free
  6088                           
  6089                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  6090   002996  0E52               	movlw	82
  6091   002998  ECBE  F015         	call	i2_I2C_2_Master_Write
  6092                           
  6093                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  6094   00299C  0EE6               	movlw	230
  6095   00299E  ECBE  F015         	call	i2_I2C_2_Master_Write
  6096                           
  6097                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  6098   0029A2  ECD3  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  6099                           
  6100                           ;interrupts.c: 61:     Color_Interrupts_init();
  6101   0029A6  EC89  F015         	call	i2_Color_Interrupts_init	;wreg free
  6102                           
  6103                           ;interrupts.c: 62:     persistence_register();
  6104   0029AA  ECB8  F015         	call	i2_persistence_register	;wreg free
  6105                           
  6106                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  6107   0029AE  C0F1  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  6108   0029B2  C0F2  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  6109   0029B6  C09C  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  6110   0029BA  C09D  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  6111   0029BE  EC0C  F015         	call	i2_Color_Interrupts_threshold	;wreg free
  6112   0029C2  0012               	return		;funcret
  6113   0029C4                     __end_of_Color_Interrupts_clear:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function i2_persistence_register *****************
  6117 ;; Defined at:
  6118 ;;		line 46 in file "interrupts.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		wreg, status,2, status,0, cstack
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 3
  6139 ;; This function calls:
  6140 ;;		i2_color_writetoaddr
  6141 ;; This function is called by:
  6142 ;;		_Color_Interrupts_clear
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text39
  6147   002B70                     __ptext39:
  6148                           	callstack 0
  6149   002B70                     i2_persistence_register:
  6150                           	callstack 21
  6151   002B70                     
  6152                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  6153   002B70  0E02               	movlw	2
  6154   002B72  6E03               	movwf	i2color_writetoaddr@value^0,c
  6155   002B74  0E0C               	movlw	12
  6156   002B76  EC6C  F015         	call	i2_color_writetoaddr
  6157   002B7A  0012               	return		;funcret
  6158   002B7C                     __end_ofi2_persistence_register:
  6159                           	callstack 0
  6160                           
  6161 ;; *************** function i2_Color_Interrupts_threshold *****************
  6162 ;; Defined at:
  6163 ;;		line 38 in file "interrupts.c"
  6164 ;; Parameters:    Size  Location     Type
  6165 ;;  upperThresho    2    4[COMRAM] unsigned int 
  6166 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6178 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6182 ;;Total ram usage:        4 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 3
  6185 ;; This function calls:
  6186 ;;		i2_color_writetoaddr
  6187 ;; This function is called by:
  6188 ;;		_Color_Interrupts_clear
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text40
  6193   002A18                     __ptext40:
  6194                           	callstack 0
  6195   002A18                     i2_Color_Interrupts_threshold:
  6196                           	callstack 21
  6197   002A18                     
  6198                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  6199   002A18  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  6200   002A1C  0E04               	movlw	4
  6201   002A1E  EC6C  F015         	call	i2_color_writetoaddr
  6202                           
  6203                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  6204   002A22  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  6205   002A24  6E03               	movwf	i2color_writetoaddr@value^0,c
  6206   002A26  0E05               	movlw	5
  6207   002A28  EC6C  F015         	call	i2_color_writetoaddr
  6208                           
  6209                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  6210   002A2C  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  6211   002A30  0E06               	movlw	6
  6212   002A32  EC6C  F015         	call	i2_color_writetoaddr
  6213                           
  6214                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  6215   002A36  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  6216   002A38  6E03               	movwf	i2color_writetoaddr@value^0,c
  6217   002A3A  0E07               	movlw	7
  6218   002A3C  EC6C  F015         	call	i2_color_writetoaddr
  6219   002A40  0012               	return		;funcret
  6220   002A42                     __end_ofi2_Color_Interrupts_threshold:
  6221                           	callstack 0
  6222                           
  6223 ;; *************** function i2_Color_Interrupts_init *****************
  6224 ;; Defined at:
  6225 ;;		line 29 in file "interrupts.c"
  6226 ;; Parameters:    Size  Location     Type
  6227 ;;		None
  6228 ;; Auto vars:     Size  Location     Type
  6229 ;;		None
  6230 ;; Return value:  Size  Location     Type
  6231 ;;                  1    wreg      void 
  6232 ;; Registers used:
  6233 ;;		wreg, status,2, status,0, cstack
  6234 ;; Tracked objects:
  6235 ;;		On entry : 0/0
  6236 ;;		On exit  : 0/0
  6237 ;;		Unchanged: 0/0
  6238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;Total ram usage:        1 bytes
  6244 ;; Hardware stack levels used: 1
  6245 ;; Hardware stack levels required when called: 3
  6246 ;; This function calls:
  6247 ;;		i2_color_writetoaddr
  6248 ;; This function is called by:
  6249 ;;		_Color_Interrupts_clear
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text41
  6254   002B12                     __ptext41:
  6255                           	callstack 0
  6256   002B12                     i2_Color_Interrupts_init:
  6257                           	callstack 21
  6258   002B12                     
  6259                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  6260   002B12  0E13               	movlw	19
  6261   002B14  6E03               	movwf	i2color_writetoaddr@value^0,c
  6262   002B16  0E00               	movlw	0
  6263   002B18  EC6C  F015         	call	i2_color_writetoaddr
  6264   002B1C                     
  6265                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  6266   002B1C  0ED0               	movlw	208
  6267   002B1E  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  6268   002B20  0ECA               	movlw	202
  6269   002B22                     i2u258_47:
  6270   002B22  2EE8               	decfsz	wreg,f,c
  6271   002B24  D7FE               	bra	i2u258_47
  6272   002B26  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  6273   002B28  D7FC               	bra	i2u258_47
  6274   002B2A  0012               	return		;funcret
  6275   002B2C                     __end_ofi2_Color_Interrupts_init:
  6276                           	callstack 0
  6277                           
  6278 ;; *************** function i2_color_writetoaddr *****************
  6279 ;; Defined at:
  6280 ;;		line 27 in file "color.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  address         1    wreg     unsigned char 
  6283 ;;  value           1    2[COMRAM] unsigned char 
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  address         1    3[COMRAM] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6295 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6298 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6299 ;;Total ram usage:        2 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 2
  6302 ;; This function calls:
  6303 ;;		i2_I2C_2_Master_Start
  6304 ;;		i2_I2C_2_Master_Stop
  6305 ;;		i2_I2C_2_Master_Write
  6306 ;; This function is called by:
  6307 ;;		i2_Color_Interrupts_init
  6308 ;;		i2_Color_Interrupts_threshold
  6309 ;;		i2_persistence_register
  6310 ;; This function uses a non-reentrant model
  6311 ;;
  6312                           
  6313                           	psect	text42
  6314   002AD8                     __ptext42:
  6315                           	callstack 0
  6316   002AD8                     i2_color_writetoaddr:
  6317                           	callstack 21
  6318                           
  6319                           ;incstack = 0
  6320                           ;i2color_writetoaddr@address stored from wreg
  6321   002AD8  6E04               	movwf	i2color_writetoaddr@address^0,c
  6322   002ADA                     
  6323                           ;color.c: 28:     I2C_2_Master_Start();
  6324   002ADA  ECD8  F015         	call	i2_I2C_2_Master_Start	;wreg free
  6325                           
  6326                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  6327   002ADE  0E52               	movlw	82
  6328   002AE0  ECBE  F015         	call	i2_I2C_2_Master_Write
  6329                           
  6330                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  6331   002AE4  5004               	movf	i2color_writetoaddr@address^0,w,c
  6332   002AE6  0980               	iorlw	128
  6333   002AE8  ECBE  F015         	call	i2_I2C_2_Master_Write
  6334                           
  6335                           ;color.c: 31:     I2C_2_Master_Write(value);
  6336   002AEC  5003               	movf	i2color_writetoaddr@value^0,w,c
  6337   002AEE  ECBE  F015         	call	i2_I2C_2_Master_Write
  6338                           
  6339                           ;color.c: 32:     I2C_2_Master_Stop();
  6340   002AF2  ECD3  F015         	call	i2_I2C_2_Master_Stop	;wreg free
  6341   002AF6  0012               	return		;funcret
  6342   002AF8                     __end_ofi2_color_writetoaddr:
  6343                           	callstack 0
  6344                           
  6345 ;; *************** function i2_I2C_2_Master_Write *****************
  6346 ;; Defined at:
  6347 ;;		line 45 in file "i2c.c"
  6348 ;; Parameters:    Size  Location     Type
  6349 ;;  data_byte       1    wreg     unsigned char 
  6350 ;; Auto vars:     Size  Location     Type
  6351 ;;  data_byte       1    1[COMRAM] unsigned char 
  6352 ;; Return value:  Size  Location     Type
  6353 ;;                  1    wreg      void 
  6354 ;; Registers used:
  6355 ;;		wreg, status,2, status,0, cstack
  6356 ;; Tracked objects:
  6357 ;;		On entry : 0/0
  6358 ;;		On exit  : 0/0
  6359 ;;		Unchanged: 0/0
  6360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6362 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6364 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6365 ;;Total ram usage:        1 bytes
  6366 ;; Hardware stack levels used: 1
  6367 ;; Hardware stack levels required when called: 1
  6368 ;; This function calls:
  6369 ;;		i2_I2C_2_Master_Idle
  6370 ;; This function is called by:
  6371 ;;		_Color_Interrupts_clear
  6372 ;;		i2_color_writetoaddr
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text43
  6377   002B7C                     __ptext43:
  6378                           	callstack 0
  6379   002B7C                     i2_I2C_2_Master_Write:
  6380                           	callstack 21
  6381                           
  6382                           ;incstack = 0
  6383                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  6384   002B7C  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  6385   002B7E                     
  6386                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  6387   002B7E  EC35  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6388   002B82                     
  6389                           ;i2c.c: 48:   SSP2BUF = data_byte;
  6390   002B82  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  6391   002B86  0012               	return		;funcret
  6392   002B88                     __end_ofi2_I2C_2_Master_Write:
  6393                           	callstack 0
  6394                           
  6395 ;; *************** function i2_I2C_2_Master_Stop *****************
  6396 ;; Defined at:
  6397 ;;		line 39 in file "i2c.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;		None
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  1    wreg      void 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6415 ;;Total ram usage:        0 bytes
  6416 ;; Hardware stack levels used: 1
  6417 ;; Hardware stack levels required when called: 1
  6418 ;; This function calls:
  6419 ;;		i2_I2C_2_Master_Idle
  6420 ;; This function is called by:
  6421 ;;		_Color_Interrupts_clear
  6422 ;;		i2_color_writetoaddr
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text44
  6427   002BA6                     __ptext44:
  6428                           	callstack 0
  6429   002BA6                     i2_I2C_2_Master_Stop:
  6430                           	callstack 21
  6431   002BA6                     
  6432                           ;i2c.c: 41:   I2C_2_Master_Idle();
  6433   002BA6  EC35  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6434   002BAA                     
  6435                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  6436   002BAA  010E               	movlb	14	; () banked
  6437   002BAC  85DA               	bsf	218,2,b	;volatile
  6438   002BAE                     
  6439                           ; BSR set to: 14
  6440   002BAE  0012               	return		;funcret
  6441   002BB0                     __end_ofi2_I2C_2_Master_Stop:
  6442                           	callstack 0
  6443                           
  6444 ;; *************** function i2_I2C_2_Master_Start *****************
  6445 ;; Defined at:
  6446 ;;		line 27 in file "i2c.c"
  6447 ;; Parameters:    Size  Location     Type
  6448 ;;		None
  6449 ;; Auto vars:     Size  Location     Type
  6450 ;;		None
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  1    wreg      void 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0, cstack
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6464 ;;Total ram usage:        0 bytes
  6465 ;; Hardware stack levels used: 1
  6466 ;; Hardware stack levels required when called: 1
  6467 ;; This function calls:
  6468 ;;		i2_I2C_2_Master_Idle
  6469 ;; This function is called by:
  6470 ;;		_Color_Interrupts_clear
  6471 ;;		i2_color_writetoaddr
  6472 ;; This function uses a non-reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text45
  6476   002BB0                     __ptext45:
  6477                           	callstack 0
  6478   002BB0                     i2_I2C_2_Master_Start:
  6479                           	callstack 21
  6480   002BB0                     
  6481                           ;i2c.c: 29:   I2C_2_Master_Idle();
  6482   002BB0  EC35  F015         	call	i2_I2C_2_Master_Idle	;wreg free
  6483   002BB4                     
  6484                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  6485   002BB4  010E               	movlb	14	; () banked
  6486   002BB6  81DA               	bsf	218,0,b	;volatile
  6487   002BB8                     
  6488                           ; BSR set to: 14
  6489   002BB8  0012               	return		;funcret
  6490   002BBA                     __end_ofi2_I2C_2_Master_Start:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function i2_I2C_2_Master_Idle *****************
  6494 ;; Defined at:
  6495 ;;		line 22 in file "i2c.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;		None
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6511 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6513 ;;Total ram usage:        1 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		i2_I2C_2_Master_Start
  6519 ;;		i2_I2C_2_Master_Stop
  6520 ;;		i2_I2C_2_Master_Write
  6521 ;; This function uses a non-reentrant model
  6522 ;;
  6523                           
  6524                           	psect	text46
  6525   002A6A                     __ptext46:
  6526                           	callstack 0
  6527   002A6A                     i2_I2C_2_Master_Idle:
  6528                           	callstack 21
  6529   002A6A                     i2l192:
  6530   002A6A  010E               	movlb	14	; () banked
  6531   002A6C  B5D8               	btfsc	216,2,b	;volatile
  6532   002A6E  EF3B  F015         	goto	i2u98_41
  6533   002A72  EF3D  F015         	goto	i2u98_40
  6534   002A76                     i2u98_41:
  6535   002A76  EF35  F015         	goto	i2l192
  6536   002A7A                     i2u98_40:
  6537   002A7A                     
  6538                           ; BSR set to: 14
  6539   002A7A  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  6540   002A7E  0E1F               	movlw	31
  6541   002A80  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  6542   002A82  A4D8               	btfss	status,2,c
  6543   002A84  EF46  F015         	goto	i2u99_41
  6544   002A88  EF48  F015         	goto	i2u99_40
  6545   002A8C                     i2u99_41:
  6546   002A8C  EF35  F015         	goto	i2l192
  6547   002A90                     i2u99_40:
  6548   002A90                     
  6549                           ; BSR set to: 14
  6550   002A90  0012               	return		;funcret
  6551   002A92                     __end_ofi2_I2C_2_Master_Idle:
  6552                           	callstack 0
  6553                           
  6554                           	psect	rparam
  6555   000000                     
  6556                           	psect	temp
  6557   000056                     btemp:
  6558                           	callstack 0
  6559   000056                     	ds	1
  6560   000000                     int$flags	set	btemp
  6561   000000                     wtemp8	set	btemp+1
  6562   000000                     ttemp5	set	btemp+1
  6563   000000                     ttemp6	set	btemp+4
  6564   000000                     ttemp7	set	btemp+8
  6565                           
  6566                           	psect	idloc
  6567                           
  6568                           ;Config register IDLOC0 @ 0x200000
  6569                           ;	unspecified, using default values
  6570   200000                     	org	2097152
  6571   200000  0FFF               	dw	4095
  6572                           
  6573                           ;Config register IDLOC1 @ 0x200002
  6574                           ;	unspecified, using default values
  6575   200002                     	org	2097154
  6576   200002  0FFF               	dw	4095
  6577                           
  6578                           ;Config register IDLOC2 @ 0x200004
  6579                           ;	unspecified, using default values
  6580   200004                     	org	2097156
  6581   200004  0FFF               	dw	4095
  6582                           
  6583                           ;Config register IDLOC3 @ 0x200006
  6584                           ;	unspecified, using default values
  6585   200006                     	org	2097158
  6586   200006  0FFF               	dw	4095
  6587                           
  6588                           ;Config register IDLOC4 @ 0x200008
  6589                           ;	unspecified, using default values
  6590   200008                     	org	2097160
  6591   200008  0FFF               	dw	4095
  6592                           
  6593                           ;Config register IDLOC5 @ 0x20000A
  6594                           ;	unspecified, using default values
  6595   20000A                     	org	2097162
  6596   20000A  0FFF               	dw	4095
  6597                           
  6598                           ;Config register IDLOC6 @ 0x20000C
  6599                           ;	unspecified, using default values
  6600   20000C                     	org	2097164
  6601   20000C  0FFF               	dw	4095
  6602                           
  6603                           ;Config register IDLOC7 @ 0x20000E
  6604                           ;	unspecified, using default values
  6605   20000E                     	org	2097166
  6606   20000E  0FFF               	dw	4095
  6607                           
  6608                           	psect	config
  6609                           
  6610                           ;Config register CONFIG1L @ 0x300000
  6611                           ;	External Oscillator mode Selection bits
  6612                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  6613                           ;	Power-up default value for COSC bits
  6614                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  6615   300000                     	org	3145728
  6616   300000  AA                 	db	170
  6617                           
  6618                           ;Config register CONFIG1H @ 0x300001
  6619                           ;	unspecified, using default values
  6620                           ;	Clock Out Enable bit
  6621                           ;	CLKOUTEN = 0x1, unprogrammed default
  6622                           ;	Clock Switch Enable bit
  6623                           ;	CSWEN = 0x1, unprogrammed default
  6624                           ;	Fail-Safe Clock Monitor Enable bit
  6625                           ;	FCMEN = 0x1, unprogrammed default
  6626   300001                     	org	3145729
  6627   300001  FF                 	db	255
  6628                           
  6629                           ;Config register CONFIG2L @ 0x300002
  6630                           ;	unspecified, using default values
  6631                           ;	Master Clear Enable bit
  6632                           ;	MCLRE = 0x1, unprogrammed default
  6633                           ;	Power-up Timer Enable bit
  6634                           ;	PWRTE = 0x1, unprogrammed default
  6635                           ;	Low-power BOR enable bit
  6636                           ;	LPBOREN = 0x1, unprogrammed default
  6637                           ;	Brown-out Reset Enable bits
  6638                           ;	BOREN = 0x3, unprogrammed default
  6639   300002                     	org	3145730
  6640   300002  FF                 	db	255
  6641                           
  6642                           ;Config register CONFIG2H @ 0x300003
  6643                           ;	unspecified, using default values
  6644                           ;	Brown Out Reset Voltage selection bits
  6645                           ;	BORV = 0x3, unprogrammed default
  6646                           ;	ZCD Disable bit
  6647                           ;	ZCD = 0x1, unprogrammed default
  6648                           ;	PPSLOCK bit One-Way Set Enable bit
  6649                           ;	PPS1WAY = 0x1, unprogrammed default
  6650                           ;	Stack Full/Underflow Reset Enable bit
  6651                           ;	STVREN = 0x1, unprogrammed default
  6652                           ;	Debugger Enable bit
  6653                           ;	DEBUG = 0x1, unprogrammed default
  6654                           ;	Extended Instruction Set Enable bit
  6655                           ;	XINST = 0x1, unprogrammed default
  6656   300003                     	org	3145731
  6657   300003  FF                 	db	255
  6658                           
  6659                           ;Config register CONFIG3L @ 0x300004
  6660                           ;	WDT Period Select bits
  6661                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  6662                           ;	WDT operating mode
  6663                           ;	WDTE = OFF, WDT Disabled
  6664   300004                     	org	3145732
  6665   300004  9F                 	db	159
  6666                           
  6667                           ;Config register CONFIG3H @ 0x300005
  6668                           ;	unspecified, using default values
  6669                           ;	WDT Window Select bits
  6670                           ;	WDTCWS = 0x7, unprogrammed default
  6671                           ;	WDT input clock selector
  6672                           ;	WDTCCS = 0x7, unprogrammed default
  6673   300005                     	org	3145733
  6674   300005  FF                 	db	255
  6675                           
  6676                           ;Config register CONFIG4L @ 0x300006
  6677                           ;	unspecified, using default values
  6678                           ;	Write Protection Block 0
  6679                           ;	WRT0 = 0x1, unprogrammed default
  6680                           ;	Write Protection Block 1
  6681                           ;	WRT1 = 0x1, unprogrammed default
  6682                           ;	Write Protection Block 2
  6683                           ;	WRT2 = 0x1, unprogrammed default
  6684                           ;	Write Protection Block 3
  6685                           ;	WRT3 = 0x1, unprogrammed default
  6686                           ;	Write Protection Block 3
  6687                           ;	WRT4 = 0x1, unprogrammed default
  6688                           ;	Write Protection Block 3
  6689                           ;	WRT5 = 0x1, unprogrammed default
  6690                           ;	Write Protection Block 3
  6691                           ;	WRT6 = 0x1, unprogrammed default
  6692                           ;	Write Protection Block 3
  6693                           ;	WRT7 = 0x1, unprogrammed default
  6694   300006                     	org	3145734
  6695   300006  FF                 	db	255
  6696                           
  6697                           ;Config register CONFIG4H @ 0x300007
  6698                           ;	unspecified, using default values
  6699                           ;	Configuration Register Write Protection bit
  6700                           ;	WRTC = 0x1, unprogrammed default
  6701                           ;	Boot Block Write Protection bit
  6702                           ;	WRTB = 0x1, unprogrammed default
  6703                           ;	Data EEPROM Write Protection bit
  6704                           ;	WRTD = 0x1, unprogrammed default
  6705                           ;	Scanner Enable bit
  6706                           ;	SCANE = 0x1, unprogrammed default
  6707                           ;	Low Voltage Programming Enable bit
  6708                           ;	LVP = 0x1, unprogrammed default
  6709   300007                     	org	3145735
  6710   300007  FF                 	db	255
  6711                           
  6712                           ;Config register CONFIG5L @ 0x300008
  6713                           ;	unspecified, using default values
  6714                           ;	UserNVM Program Memory Code Protection bit
  6715                           ;	CP = 0x1, unprogrammed default
  6716                           ;	DataNVM Memory Code Protection bit
  6717                           ;	CPD = 0x1, unprogrammed default
  6718   300008                     	org	3145736
  6719   300008  FF                 	db	255
  6720                           
  6721                           ;Config register CONFIG5H @ 0x300009
  6722                           ;	unspecified, using default values
  6723   300009                     	org	3145737
  6724   300009  FF                 	db	255
  6725                           
  6726                           ;Config register CONFIG6L @ 0x30000A
  6727                           ;	unspecified, using default values
  6728                           ;	Table Read Protection Block 0
  6729                           ;	EBTR0 = 0x1, unprogrammed default
  6730                           ;	Table Read Protection Block 1
  6731                           ;	EBTR1 = 0x1, unprogrammed default
  6732                           ;	Table Read Protection Block 2
  6733                           ;	EBTR2 = 0x1, unprogrammed default
  6734                           ;	Table Read Protection Block 3
  6735                           ;	EBTR3 = 0x1, unprogrammed default
  6736                           ;	Table Read Protection Block 4
  6737                           ;	EBTR4 = 0x1, unprogrammed default
  6738                           ;	Table Read Protection Block 5
  6739                           ;	EBTR5 = 0x1, unprogrammed default
  6740                           ;	Table Read Protection Block 6
  6741                           ;	EBTR6 = 0x1, unprogrammed default
  6742                           ;	Table Read Protection Block 7
  6743                           ;	EBTR7 = 0x1, unprogrammed default
  6744   30000A                     	org	3145738
  6745   30000A  FF                 	db	255
  6746                           
  6747                           ;Config register CONFIG6H @ 0x30000B
  6748                           ;	unspecified, using default values
  6749                           ;	Boot Block Table Read Protection bit
  6750                           ;	EBTRB = 0x1, unprogrammed default
  6751   30000B                     	org	3145739
  6752   30000B  FF                 	db	255
  6753                           tosu	equ	0xFFF
  6754                           tosh	equ	0xFFE
  6755                           tosl	equ	0xFFD
  6756                           stkptr	equ	0xFFC
  6757                           pclatu	equ	0xFFB
  6758                           pclath	equ	0xFFA
  6759                           pcl	equ	0xFF9
  6760                           tblptru	equ	0xFF8
  6761                           tblptrh	equ	0xFF7
  6762                           tblptrl	equ	0xFF6
  6763                           tablat	equ	0xFF5
  6764                           prodh	equ	0xFF4
  6765                           prodl	equ	0xFF3
  6766                           indf0	equ	0xFEF
  6767                           postinc0	equ	0xFEE
  6768                           postdec0	equ	0xFED
  6769                           preinc0	equ	0xFEC
  6770                           plusw0	equ	0xFEB
  6771                           fsr0h	equ	0xFEA
  6772                           fsr0l	equ	0xFE9
  6773                           wreg	equ	0xFE8
  6774                           indf1	equ	0xFE7
  6775                           postinc1	equ	0xFE6
  6776                           postdec1	equ	0xFE5
  6777                           preinc1	equ	0xFE4
  6778                           plusw1	equ	0xFE3
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           bsr	equ	0xFE0
  6782                           indf2	equ	0xFDF
  6783                           postinc2	equ	0xFDE
  6784                           postdec2	equ	0xFDD
  6785                           preinc2	equ	0xFDC
  6786                           plusw2	equ	0xFDB
  6787                           fsr2h	equ	0xFDA
  6788                           fsr2l	equ	0xFD9
  6789                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     48      85
    BANK0           160     66     147
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    motor_response@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motor_response@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 0
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2560$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2560$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), motor_response@mR(COMRAM[2]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), motor_response@mL(COMRAM[2]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), motor_response@mR(COMRAM[2]), motor_response@mL(COMRAM[2]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_retrace@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_retrace@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_retrace@buggy_path	PTR unsigned char  size(2) Largest target is 15
		 -> buggy_path(BANK0[15]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_retrace->_reverse
    _reverse->_setMotorPWM
    _motor_response->_fullSpeedAhead
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_motor_retrace

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               160   160      0   61360
                                             14 BANK0     52    52      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                      _motor_retrace
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_retrace                                       22    16      6   21099
                                             32 COMRAM     8     2      6
                                              0 BANK0     14    14      0
                          _norm_stop
                            _reverse
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _reverse                                              5     1      4    4117
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      16    10      6   21730
                                             32 COMRAM    16    10      6
                             ___flge
                     _fullSpeedAhead
                          _norm_stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    4589
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             4     0      4    4409
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    5905
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _fullSpeedAhead                                       5     1      4    4117
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    3261
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     472
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     481
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1162
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _fullSpeedAhead
     _norm_stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _motor_retrace
     _norm_stop
     _reverse
       _setMotorPWM
     _turnLeft
     _turnRight
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     42      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     30      55       1       90.4%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E8      61        0.0%
DATA                 0      0      E8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Dec 12 14:05:23 2022

                            _color_read_Red 2768                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 23F6  
                              ___fldiv@sign 0019                             _color_read_Blue 2858  
                                        l83 295E                                          l92 2806  
                                        l86 2AD6                                          l95 28A6  
                                        l89 27B6                                          l98 2856  
                           ??_motor_retrace 0027                         ___wmul@multiplicand 000B  
                          _color_read_Clear 2808                            _color_read_Green 27B8  
                         ??_Interrupts_init 0009                                         l104 24BA  
                                       l201 2B90                                         l113 2B40  
                                       l210 292A                                         l107 1FFC  
                                       l204 2B9A                                         l207 2B6E  
                                       l119 17F0                                         l162 1354  
                                       l192 2A42                                         l195 2A68  
                                       l603 23F4                                         l611 230A  
                                       l460 2B10                                         l189 29EC  
                                       l198 2BA4                                         l614 2AB6  
                                       l606 22AA                                         l463 2A16  
                                       l457 2B56                                         l562 253A  
                                       l466 2B62                                         l572 2766  
                                       l575 26FC                                         l592 2620  
                                       l569 1EAA                                         l586 2990  
                                       l589 2692                                         l884 2212  
                                       l879 21CC                            ??_motor_response 0027  
                                       _ctr 004D              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 2B2C                         i2_color_writetoaddr 2AD8  
                                       wreg 000FE8                             _color_normalise 1EAC  
                                      l1112 25AE                                        l1201 19AE  
                                      l1105 25A6                                        l1210 1A96  
                                      l1207 1A30                                        l1209 1AA8  
                                      l3100 1D5C                                        l3110 1E26  
                                      l3102 1DB0                                        l2320 29CE  
                                      l1272 1D3E                                        l3112 1E6A  
                                      l3104 1DC4                                        l3120 25E8  
                                      l3200 1356                                        l2226 2A42  
                                      l2330 2ABA                                        l2322 29D4  
                                      l3106 1E06                                        l3130 2978  
                                      l3122 25F8                                        l3114 25B0  
                                      l3210 13B0                                        l3202 1394  
                                      l1283 1CD6                                        l2228 2A52  
                                      l2324 29D6                                        l2500 1928  
                                      l1196 1B8A                                        l1276 1C7A  
                                      l2340 27FE                                        l2332 2768  
                                      l3108 1E0A                                        l3132 2984  
                                      l3140 265A                                        l3124 2608  
                                      l3116 25C8                                        l3212 13C8  
                                      l1269 1BE2                                        l2270 2B9C  
                                      l2326 29D8                                        l2318 29C4  
                                      l2510 197A                                        l1198 19EA  
                                      l2502 1942                                        l2350 2808  
                                      l2334 27AE                                        l3070 2A92  
                                      l3150 2324                                        l3142 266A  
                                      l3134 2622                                        l3126 2614  
                                      l3118 25D8                                        l3214 13F4  
                                      l3222 141E                                        l3310 0E96  
                                      l2272 2BA0                                        l2280 2B96  
                                      l2328 29DA                                        l2520 19D6  
                                      l2512 198A                                        l2504 1952  
                                      l2344 2858                                        l2352 284E  
                                      l3080 2556                                        l3072 2AAE  
                                      l3160 237C                                        l3152 2334  
                                      l3128 2960                                        l3144 267A  
                                      l3136 263A                                        l3240 151A  
                                      l3232 14A2                                        l3224 145C  
                                      l3216 1414                                        l3208 139C  
                                      l3400 1242                                        l3320 0EE4  
                                      l3304 0E3E                                        l3312 0EBC  
                                      l2274 2B66                                        l2530 1A16  
                                      l2522 19D8                                        l2514 199E  
                                      l2506 1962                                        l2450 181E  
                                      l2442 17F2                                        l2610 1C08  
                                      l2602 1B8E                                        l2290 28F8  
                                      l2282 2B88                                        l2346 289E  
                                      l2338 27B8                                        l3090 2590  
                                      l3082 255E                                        l3170 23DC  
                                      l3162 2388                                        l3154 2344  
                                      l3146 2686                                        l3138 264A  
                                      l3250 159C                                        l3234 14B6  
                                      l3226 149A                                        l3218 141A  
                                      l3402 126E                                        l3330 0F80  
                                      l3322 0EF8                                        l3314 0EDA  
                                      l3306 0E52                                        l2276 2B6A  
                                      l2540 1A52                                        l2532 1A20  
                                      l2524 19E8                                        l2516 19AC  
                                      l2508 1972                                        l2460 1858  
                                      l2452 182E                                        l2444 17FE  
                                      l2620 1C62                                        l2604 1B9E  
                                      l2292 2900                                        l2284 2B8C  
                                      l3092 2598                                        l3084 2566  
                                      l3076 253C                                        l3172 23E8  
                                      l3164 2394                                        l3156 2354  
                                      l3148 230C                                        l3252 15DA  
                                      l3236 14CE                                        l3180 224C  
                                      l3412 12BC                                        l3404 1294  
                                      l3340 0FB6                                        l3324 0F10  
                                      l3420 1336                                        l3308 0E6A  
                                      l2278 2B92                                        l2550 1AC4  
                                      l2542 1A60                                        l2534 1A2E  
                                      l2526 19FA                                        l2518 19B8  
                                      l2470 1884                                        l2462 185E  
                                      l2454 183E                                        l2446 180C  
                                      l2630 1CC6                                        l2622 1C64  
                                      l2614 1C1C                                        l2606 1BAC  
                                      l2294 2926                                        l2286 28EC  
                                      l3094 259A                                        l3086 2574  
                                      l3078 2544                                        l3166 23AC  
                                      l3158 2368                                        l3270 16F4  
                                      l3254 1618                                        l3238 14FA  
                                      l3246 1520                                        l3190 229E  
                                      l3182 225C                                        l3174 2214  
                                      l3422 133C                                        l3414 12D0  
                                      l3406 12B2                                        l3350 1048  
                                      l3342 0FE2                                        l3326 0F3C  
                                      l3430 2006                                        l2560 1B30  
                                      l2552 1AD2                                        l2544 1A8E  
                                      l2528 1A10                                        l2536 1A40  
                                      l2480 18BE                                        l2472 1894  
                                      l2464 1864                                        l2456 1840  
                                      l2448 180E                                        l2640 1D1E  
                                      l2632 1CE4                                        l2624 1C70  
                                      l2616 1C24                                        l2608 1BF2  
                                      l2296 2928                                        l2288 28F0  
                                      l3096 25A0                                        l3088 257A  
                                      l3168 23C4                                        l3280 1758  
                                      l3272 1714                                        l3264 169C  
                                      l3256 1656                                        l3248 155E  
                                      l3192 22C2                                        l3184 2270  
                                      l3176 222C                                        l3424 1350  
                                      l3416 12E8                                        l3360 1092  
                                      l3352 1074                                        l3336 0F8A  
                                      l3344 1008                                        l3328 0F62  
                                      l3440 204C                                        l3432 2026  
                                      l2570 1B7E                                        l2562 1B4A  
                                      l2554 1AFC                                        l2538 1A4E  
                                      l2482 18D4                                        l2474 18A4  
                                      l2466 1872                                        l2458 1848  
                                      l2642 1D2C                                        l2634 1CE6  
                                      l2626 1CAC                                        l2618 1C30  
                                      l3098 1D40                                        l3290 1790  
                                      l3266 16B0                                        l3258 1694  
                                      l3194 22DA                                        l3186 2284  
                                      l3178 223C                                        l3418 1314  
                                      l3370 112E                                        l3362 10AA  
                                      l3346 1026                                        l3338 0F9E  
                                      l3450 2056                                        l3442 204E  
                                      l3434 2032                                        l3426 1FFE  
                                      l2900 2AF8                                        l2660 293A  
                                      l2572 1B80                                        l2564 1B66  
                                      l2548 1AB8                                        l2556 1B00  
                                      l2484 18E4                                        l2492 1904  
                                      l2476 18A6                                        l2468 1874  
                                      l2644 1D2E                                        l2636 1CEA  
                                      l2628 1CB8                                        l2580 2110  
                                      l3292 17BC                                        l3268 16C8  
                                      l3196 22F2                                        l3188 2292  
                                      l3380 1170                                        l3372 113C  
                                      l3364 10D6                                        l3348 103A  
                                      l3460 2066                                        l3452 2058  
                                      l3444 2050                                        l3436 203E  
                                      l3428 2002                                        l2902 2B02  
                                      l2662 294A                                        l2566 1B6A  
                                      l2558 1B1A                                        l2494 1914  
                                      l2486 18EC                                        l2478 18AE  
                                      l2638 1D0E                                        l2910 24E6  
                                      l2590 219A                                        l2582 213E  
                                      l3294 17DC                                        l3286 1764  
                                      l3278 171A                                        l3198 22FE  
                                      l3390 120C                                        l3382 1184  
                                      l3374 1166                                        l3358 107E  
                                      l3366 10FC                                        l2670 2B2C  
                                      l3470 20A8                                        l3462 206A  
                                      l3454 205A                                        l3446 2052  
                                      l3438 204A                                        l2904 29EE  
                                      l2664 2954                                        l2656 292C  
                                      l2568 1B78                                        l2496 1914  
                                      l2488 18F0                                        l2920 2522  
                                      l2912 250A                                        l2592 21AC  
                                      l2584 214E                                        l3288 1778  
                                      l3384 119C                                        l3368 111A  
                                      l3296 0E18                                        l3472 20C2  
                                      l3464 207E                                        l3456 205E  
                                      l3448 2054                                        l2658 2930  
                                      l2666 23F6                                        l2922 252C  
                                      l2914 2514                                        l2930 270A  
                                      l2594 21BA                                        l2586 217C  
                                      l3386 11C8                                        l3298 0E34  
                                      l2906 2B58                                        l3474 20C4  
                                      l3466 2080                                        l3458 2062  
                                      l2668 1EAC                                        l2924 252E  
                                      l2916 2516                                        l2908 24BC  
                                      l2932 271A                                        l2940 2694  
                                      l2596 220A                                        l2588 218C  
                                      l3396 1216                                        l3388 11EE  
                                      l3484 20E0                                        l3476 20D0  
                                      l3468 2094                                        l2926 2538  
                                      l2918 2520                                        l2934 272A  
                                      l2950 26E8                                        l2942 26A0  
                                      l2598 2210                                        l3398 122A  
                                      l3486 20FC                                        l3478 20DC  
                                      l2936 273E                                        l2928 26FE  
                                      l2944 26B0                                        l3488 20FE  
                                      l2938 2752                                        l2946 26C0  
                                      l2948 26D4                                        l2898 2B42  
                                      STR_1 0E01                                        u1000 2A52  
                                      u1001 2A4E                                        u1010 2A68  
                                      u1011 2A64                                        u1200 1914  
                                      u2000 151A                                        u1201 1910  
                                      u2001 1516                                        u1210 198A  
                                      u1130 180C                                        u1050 2914  
                                      u2010 155E                                        u1211 1986  
                                      u1131 1808                                        u1051 290C  
                                      u2011 155A                                        u1300 1AA4  
                                      u1220 19AC                                        u1140 181E  
                                      u2020 159C                                        u2100 0E34  
                                      u1301 1AA0                                        u1221 19A8  
                                      u1141 181A                                        u2021 1598  
                                      u2101 0E30                                        u1310 1AB8  
                                      u1230 19D6                                        u1150 182E  
                                      u2030 15DA                                        u2110 0EB8  
                                      u1311 1AB4                                        u1231 19D2  
                                      u1151 182A                                        u2031 15D6  
                                      u2111 0EB4                                        u1320 1AD2  
                                      u1240 19FA                                        u1160 1872  
                                      u1400 220A                                        u2040 1618  
                                      u2200 120C                                        u2120 0EDA  
                                      u1321 1ACE                                        u1241 19F6  
                                      u1161 186E                                        u1401 2206  
                                      u2041 1614                                        u2201 1208  
                                      u2121 0ED6                                        u1330 1B1A  
                                      u1250 1A10                                        u1170 1884  
                                      u1410 1B9E                                        u2050 1656  
                                      u2210 1290                                        u2130 0F5E  
                                      u1331 1B16                                        u1251 1A0C  
                                      u1171 1880                                        u1411 1B9A  
                                      u2051 1652                                        u2211 128C  
                                      u2131 0F5A                                        u1340 1B4A  
                                      u1260 1A2E                                        u1180 1894  
                                      u1500 1D2C                                        u1420 1BAC  
                                      u1068 2916                                        u2060 1694  
                                      u2220 12B2                                        u2140 0F80  
                                      u1341 1B46                                        u1261 1A2A  
                                      u1181 1890                                        u1501 1D28  
                                      u1421 1BA8                                        u2061 1690  
                                      u2221 12AE                                        u2141 0F7C  
                                      u1350 1B78                                        u1270 1A4E  
                                      u1190 18D4                                        u1430 1C08  
                                      u2070 1714                                        u2230 1336  
                                      u2150 1004                                        u1351 1B74  
                                      u1271 1A4A                                        u1191 18D0  
                                      u1431 1C04                                        u2071 1710  
                                      u2231 1332                                        u2151 1000  
                                      u1280 1A60                                        u1440 1C5E  
                                      u1360 213E                                        u2080 1758  
                                      u2240 1350                                        u2160 1026  
                              _BAUD4CONbits 000EE9                                        u1281 1A5C  
                                      u1441 1C5A                                        u1361 213A  
                                      u2081 1754                                        u2241 134C  
                                      u2161 1022                                        u1290 1A8E  
                                      u1450 1CA8                                        u1370 217C  
                                      u2090 17DC                                        u2170 10F8  
                                      u2250 2094                                        u1291 1A8A  
                                      u1451 1CA4                                        u1371 2178  
                                      u2091 17D8                                        u2171 10F4  
                                      u2307 0E88                                        u2251 2090  
                                      u1460 1CC6                                        u1380 219A  
                                      u2180 111A                                        u1461 1CC2  
                                      u1381 2196                                        u2181 1116  
                                      u2317 0F02                                        u1470 1CD6  
                                      u1390 21BA                                        u2190 11EA  
                                      u1471 1CD2                                        u1391 21B6  
                                      u2191 11E6                                        u2407 115A  
                                      u2327 0F2E                                        u1480 1CE4  
                                      u1481 1CE0                                        u2417 118E  
                                      u2337 0FA8                                        u1490 1D1E  
                                      _T2PR 000FBC                                        u1491 1D1A  
                                      u2507 14C0                                        u2427 11BA  
                                      u2347 0FD4                                        u1900 1D5C  
                                      u1901 1D58                                        u2517 14EC  
                                      u2437 1234                                        u2357 1040  
                                      u1910 1E26                                        u1911 1E22  
                                      u2527 16BA                                        u2447 1260  
                                      u2367 1066                                        u2287 20B4  
                                      u1920 23AC                                        u1921 23A8  
                                      u2537 16E6                                        u2457 12DA  
                                      u2377 109C                                        u2297 0E5C  
                                      u1930 23C4                                        u1931 23C0  
                                      u2547 1782                                        u2467 1306  
                                      u2387 10C8                                        u1940 22C2  
                                      u2557 17AE                                        u1941 22BE  
                                      u2477 228A                                        u2397 1134  
                                      u1870 2556                                        u1950 22DA  
                                      u2567 2940                                        u1871 2552  
                                      u2487 13BA                                        u1951 22D6  
                                      u1880 2574                                        u1960 1394  
                                      u2577 2B08                                        u1881 2570  
                                      u2497 13E6                                        u1961 1390  
                                      u1890 2590                                        u1970 1414  
                                      u1891 258C                                        u1971 1410  
                                      u1980 145C                                        u1981 1458  
                                      u1990 149A                                        u1991 1496  
                                      i2l86 2AF6                                        _main 1FFE  
                                      fsr2h 000FDA                                        indf2 000FDF  
                                      fsr2l 000FD9                                        btemp 0056  
                                      prodh 000FF4                                        prodl 000FF3  
                                      start 0032                        ?i2_color_writetoaddr 0003  
                           ___fldiv@new_exp 001A                      __end_of_color_read_Red 27B8  
                           __end_of_HighISR 0032                                ___param_bank 000000  
                                     ?_main 0001                             __end_of___fldiv 1B8C  
                           __end_of___lwdiv 25B0                                       i2l204 2BAE  
                                     i2l207 2B86                                       i2l192 2A6A  
                                     i2l195 2A90                                       i2l460 2B2A  
                                     i2l198 2BB8                                       i2l463 2A40  
                                     i2l466 2B7A                                       i2l475 002E  
                                     i2l469 29C2                                       _TMR0H 000FD4  
                                     _TMR0L 000FD3                  __end_of_I2C_2_Master_Start 2BA6  
                __end_of_I2C_2_Master_Write 2B70                                       tablat 000FF5  
                     _Color_Interrupts_init 2AF8                             __end_of_reverse 230C  
                                     ttemp5 0057                                       ttemp6 005A  
                                     ttemp7 005E                                       status 000FD8  
                                     wtemp8 0057                     __end_of_color_read_RGBC 24BC  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 28A8  
                     _I2C_2_Master_RepStart 2B88                             ?_color_read_Red 000D  
                           __initialization 28A8                                __end_of_main 2110  
               ?_Color_Interrupts_threshold 000D                                      ??_main 00BD  
                             __activetblptr 000001                     __end_of_color_normalise 1FFE  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2222 2A6A                                      i2l2224 2A7A  
                                    i2l3050 0026                                      i2l2260 2BB4  
                                    i2l2316 2ADA                                      i2l3052 002A  
                                    i2l3044 000A                                      i2l2262 2BA6  
                                    i2l3046 001A                                      i2l2264 2BAA  
                                    i2l3048 001C                                      i2l2258 2BB0  
                                    i2l2266 2B7E                                      i2l2268 2B82  
                                    i2l2650 2B1C                                      i2l2652 2A18  
                                    i2l2654 2B70                                      i2l2648 2B12  
                                    i2l2960 2992                                      _RG6PPS 000E88  
                                 ??_HighISR 0009                    __end_of_color_click_init 2960  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 1D40    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 2B64  
                              _CCPTMRS0bits 000FAD                                      ___flge 2110  
                                    ___wmul 2A92                                   ??___fldiv 0011  
                                 ??___lwdiv 0013                                      clear_0 28C6  
                                    clear_1 28D2                                      isa$std 000001  
                                    main@mL 00DF                                      main@mR 00E8  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 2992  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
                                 ??_reverse 0020    Color_Interrupts_threshold@upperThreshold 000D  
i2Color_Interrupts_threshold@upperThreshold 0005                           ??_initDCmotorsPWM 000B  
                i2color_writetoaddr@address 0004                      ?_Color_Interrupts_init 0001  
                          __end_of_turnLeft 2694                                  ___flge@ff1 0009  
                                ___flge@ff2 000D                                ___xxtofl@arg 001E  
                              ___xxtofl@exp 001D                                ___xxtofl@val 0014  
                                __accesstop 0060                     __end_of__initialization 28D8  
                  __end_of_color_read_Clear 2858                    __end_of_color_read_Green 2808  
                    ?_I2C_2_Master_RepStart 0001                               ___rparam_used 000001  
                          ?_color_read_RGBC 0022                            ?_color_read_Blue 000D  
                           _Interrupts_init 2B42                          motor_retrace@j_510 00B1  
                        motor_retrace@j_511 00B3                          motor_retrace@j_512 00B5  
                        motor_retrace@j_513 00B7                          motor_retrace@j_514 00B9  
                        motor_retrace@j_515 00BB                              __pcstackCOMRAM 0001  
                              __pidataBANK0 2BBA              __end_ofi2_persistence_register 2B7C  
                              ?_tricolorLED 0001                            ?_color_normalise 0022  
                   i2_Color_Interrupts_init 2B12                                  __pbssBANK0 0060  
                         _color_writetoaddr 2AB8                                _T2CLKCONbits 000FBF  
                          motor_response@mL 0023                            motor_response@mR 0025  
                                   ?___flge 0009                          ?_color_writetoaddr 000B  
                                   ?___wmul 0009                          motor_response@temp 0021  
                     __end_of_motor_retrace 1356                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     _SSP2ADD 000ED6  
                                   i2u98_40 2A7A                                     i2u98_41 2A76  
                                   i2u99_40 2A90                                     i2u99_41 2A8C  
                                   _SSP2BUF 000ED5                        _persistence_register 2B58  
                                _buggy_path 00A0                     __end_of_Interrupts_init 2B58  
                            _lowerThreshold 009C                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 2AD8                          _I2C_2_Master_Start 2B9C  
                       i2_I2C_2_Master_Idle 2A6A                          _I2C_2_Master_Write 2B64  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 2BA6  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fldiv 17F2                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 253C                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 004B  
                                   __pcinit 28A8                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                     __ptext0 1FFE  
                                   __ptext1 2B2C                                     __ptext2 2B58  
                                   __ptext3 0E18                                     __ptext4 2214  
                                   __ptext5 1356                                     __ptext6 25B0  
                                   __ptext7 2622                                     __ptext8 2960  
                                   __ptext9 230C                        ?i2_I2C_2_Master_Idle 0001  
                                 _T2CONbits 000FBD                                  ??___xxtofl 0018  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                              _upperThreshold 00F1  
                                   _reverse 2214                               _RxBufWriteCnt 0055  
                     ?_persistence_register 0001                        ??_I2C_2_Master_Start 000A  
                      ??_I2C_2_Master_Write 000A                        end_of_initialization 28D8  
               __end_ofi2_color_writetoaddr 2AF8                           ?_color_click_init 0001  
                         __end_of_norm_stop 2992                          ??_color_click_init 000D  
                               norm_stop@mL 001C                                 norm_stop@mR 001E  
                                   postdec2 000FDD                                  _motorLinit 26FE  
                                   postinc0 000FEE                                     postinc2 000FDE  
                                _motorRinit 2694                               _interrupt_ctr 004F  
                   ?_Color_Interrupts_clear 0001                             _initDCmotorsPWM 24BC  
                                ??_turnLeft 0020                         color_read_RGBC@temp 0022  
                        setMotorPWM@negDuty 001B                       ??i2_I2C_2_Master_Idle 0001  
                         __end_of_turnRight 2622                       ??i2_I2C_2_Master_Stop 0002  
                             ___xxtofl@sign 001C                     ??_Color_Interrupts_init 000D  
                                 _TRISAbits 000F81                          setMotorPWM@posDuty 001A  
                                 _TRISBbits 000F82                                   _TRISCbits 000F83  
                                 _TRISDbits 000F84                                   _TRISEbits 000F85  
                                 _TRISFbits 000F86                                   _TRISGbits 000F87  
                                 _TRISHbits 000F88                                 ___fldiv@grs 001C  
                               ___fldiv@rem 0015                            fullSpeedAhead@mL 001C  
                          fullSpeedAhead@mR 001E                    color_writetoaddr@address 000C  
                   ??_I2C_2_Master_RepStart 000A                            ?_Interrupts_init 0001  
                               _CCP1CONbits 000FAB                           ?_color_read_Clear 000D  
                              _EUSART4RXbuf 0031                                _EUSART4TXbuf 0060  
                               _CCP2CONbits 000FA7                           ?_color_read_Green 000D  
                               _CCP3CONbits 000F26                                 _CCP4CONbits 000F22  
                        ??_color_read_Clear 000F                          ??_color_read_Green 000F  
            __end_of_Color_Interrupts_clear 29C4                              __end_of___flge 2214  
                            _fullSpeedAhead 230C                              __end_of___wmul 2AB8  
                       color_read_Clear@tmp 0012                         start_initialization 28A8  
                    ??_persistence_register 000D                               _TxBufWriteCnt 0053  
                       color_read_Green@tmp 0012                     __end_of_initDCmotorsPWM 253C  
                    __end_of_fullSpeedAhead 23F6                                    ??___flge 0011  
                               ?_motorLinit 0009                                    ??___wmul 000D  
                               ?_motorRinit 0009                         color_normalise@RGBC 0022  
                               __pdataBANK0 00F1               i2I2C_2_Master_Write@data_byte 0002  
              __end_ofi2_I2C_2_Master_Start 2BBA                __end_ofi2_I2C_2_Master_Write 2B88  
                                 ___fldiv@a 000D                                   ___fldiv@b 0009  
                               __pbssCOMRAM 0031                               __pcstackBANK0 00AF  
                            _motor_response 1356                                    ?_HighISR 0001  
                                 _amb_clear 0045                                   _amb_green 0049  
                           motor_retrace@mL 0023                             motor_retrace@mR 0025  
                          ___lwdiv@dividend 000F                             motor_response@j 0029  
                           ?_fullSpeedAhead 001C                                   __pintcode 0008  
                                  ?___fldiv 0009                                    ?___lwdiv 000F  
              ??_Color_Interrupts_threshold 0011                        I2C_2_Master_Read@ack 000B  
                       motor_response@j_502 002B                         motor_response@j_503 002D  
                       motor_response@j_504 002F                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 2A42  
                         _I2C_2_Master_Init 29C4                           _I2C_2_Master_Read 28EA  
                         _I2C_2_Master_Stop 2B92                                _RxBufReadCnt 0054  
                                  ?_reverse 001C                          ?_I2C_2_Master_Idle 0001  
                        ?_I2C_2_Master_Init 0001                          ?_I2C_2_Master_Read 0001  
                             ??_setMotorPWM 0018                          ?_I2C_2_Master_Stop 0001  
                          ___lwdiv@quotient 0014                      __end_of_motor_response 17F2  
                  initDCmotorsPWM@PWMperiod 0009                         ??_I2C_2_Master_Idle 0009  
                       ??_I2C_2_Master_Init 0009                         ??_I2C_2_Master_Read 000A  
                            ___wmul@product 000D                                    _LATAbits 000F79  
                       ??_I2C_2_Master_Stop 000A                                    _LATDbits 000F7C  
                                  _LATEbits 000F7D                                    _LATFbits 000F7E  
                                  _LATGbits 000F7F                                    _LATHbits 000F80  
                                  _IPR0bits 000E1F                                    _PIE0bits 000E29  
                                  _PIE4bits 000E2D                                 turnRight@mL 001C  
                               turnRight@mR 001E                                    _PIR0bits 000E33  
                                  i2u184_40 001A                                    i2u184_41 0016  
                                  i2u258_47 2B22                                    _PIR4bits 000E37  
                  ??i2_persistence_register 0005                            ?_initDCmotorsPWM 0009  
                                 _norm_stop 2960                                    _SSP2CON2 000EDA  
                                  _SSP2STAT 000ED8                   __end_of_I2C_2_Master_Idle 2A6A  
                 __end_of_I2C_2_Master_Init 29EE                   __end_of_I2C_2_Master_Read 292C  
                         ___wmul@multiplier 0009                   __end_of_I2C_2_Master_Stop 2B9C  
                              setMotorPWM@m 0016                 I2C_2_Master_Write@data_byte 000A  
                         ??_color_read_RGBC 0024                           ??_color_read_Blue 000F  
                              _TxBufReadCnt 0052                    i2color_writetoaddr@value 0003  
                                 _turnRight 25B0               __end_of_Color_Interrupts_init 2B12  
                           ?_motor_response 0021               __end_of_I2C_2_Master_RepStart 2B92  
                        color_read_Blue@tmp 0012                         __end_of_setMotorPWM 1EAC  
                      i2_I2C_2_Master_Start 2BB0                        i2_I2C_2_Master_Write 2B7C  
                                  __Hrparam 0000                     motor_retrace@buggy_path 0021  
                         ??_color_normalise 0024                                    __Lrparam 0000  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 2A42                i2_Color_Interrupts_threshold 2A18  
               __end_ofi2_I2C_2_Master_Idle 2A92                 __end_ofi2_I2C_2_Master_Stop 2BB0  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               _motor_retrace 0E18  
                             ??_tricolorLED 0009                                    _amb_blue 0047  
                                  ___xxtofl 1B8C                                  _T0CON0bits 000FD5  
                                _T0CON1bits 000FD6                              motor_retrace@j 00AF  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0013  
                                ?_turnRight 001C                                    __ptext10 1D40  
                                  __ptext11 2A92                                    __ptext20 2808  
                                  __ptext12 253C                                    __ptext21 2858  
                                  __ptext13 2110                                    __ptext30 29EE  
                                  __ptext22 2B88                                    __ptext14 2694  
                                  __ptext31 2AF8                                    __ptext23 28EA  
                                  __ptext15 26FE                                    __ptext40 2A18  
                                  __ptext32 2AB8                                    __ptext24 1B8C  
                                  __ptext16 24BC                                    __ptext41 2B12  
                                  __ptext33 2B64                                    __ptext25 1EAC  
                                  __ptext17 23F6                                    __ptext42 2AD8  
                                  __ptext34 2B92                                    __ptext26 17F2  
                                  __ptext18 2768                                    __ptext43 2B7C  
                                  __ptext35 2B9C                                    __ptext27 292C  
                                  __ptext19 27B8                                    __ptext44 2BA6  
                                  __ptext36 2A42                                    __ptext28 29C4  
                                  __ptext45 2BB0                                    __ptext29 2B42  
                                  __ptext46 2A6A                                    __ptext38 2992  
                                  __ptext39 2B70                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                   reverse@mL 001C  
                                 reverse@mR 001E                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 00BF  
                                  int$flags 0056          __end_of_Color_Interrupts_threshold 2A18  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 29EE  
                                  _turnLeft 2622                              ?_motor_retrace 0021  
                                _INTCONbits 000FF2                                 _setMotorPWM 1D40  
                              motorLinit@mL 0009                         __end_of_tricolorLED 2B42  
                                  intlevel2 0000                                _motor_return 0051  
                        __end_of_motorLinit 2768                          __end_of_motorRinit 26FE  
                              motorRinit@mR 0009                            ??_fullSpeedAhead 0020  
                               ??_norm_stop 0020             __end_ofi2_Color_Interrupts_init 2B2C  
                          _color_click_init 292C                                  _SSP2DATPPS 000E1D  
                                _SSP2CLKPPS 000E1C                              _interrupt_flag 009E  
                    i2_persistence_register 2B70                                 ??_turnRight 0020  
                                _TX4STAbits 000EE8                      ??i2_I2C_2_Master_Start 0002  
                    ??i2_I2C_2_Master_Write 0002                    ??_Color_Interrupts_clear 0009  
