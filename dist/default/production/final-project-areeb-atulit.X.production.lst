

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Dec 07 22:50:14 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 06/04/2022 GMT
    51                           ; 
    52                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F67K40 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     _TX4REG	set	3812
    85   000000                     _RC4STAbits	set	3815
    86   000000                     _SP4BRGH	set	3814
    87   000000                     _SSP2CON2bits	set	3802
    88   000000                     _RX4PPS	set	3605
    89   000000                     _SSP2CLKPPS	set	3612
    90   000000                     _SSP2DATPPS	set	3613
    91   000000                     _ANSELDbits	set	3751
    92   000000                     _SSP2ADD	set	3798
    93   000000                     _SSP2CON1bits	set	3801
    94   000000                     _LATAbits	set	3961
    95   000000                     _LATGbits	set	3967
    96   000000                     _TRISGbits	set	3975
    97   000000                     _T2PR	set	4028
    98   000000                     _T2CONbits	set	4029
    99   000000                     _TMR0L	set	4051
   100   000000                     _TMR0H	set	4052
   101   000000                     _T0CON0bits	set	4053
   102   000000                     _T0CON1bits	set	4054
   103   000000                     _INTCONbits	set	4082
   104   000000                     _CCPR2H	set	4006
   105   000000                     _CCPR1H	set	4010
   106   000000                     _TRISAbits	set	3969
   107   000000                     _TRISBbits	set	3970
   108   000000                     _TRISDbits	set	3972
   109   000000                     _TRISEbits	set	3973
   110   000000                     _TRISFbits	set	3974
   111   000000                     _LATDbits	set	3964
   112   000000                     _LATEbits	set	3965
   113   000000                     _LATFbits	set	3966
   114   000000                     _RC4REG	set	3811
   115   000000                     _SP4BRGL	set	3813
   116   000000                     _TX4STAbits	set	3816
   117   000000                     _BAUD4CONbits	set	3817
   118   000000                     _SSP2CON2	set	3802
   119   000000                     _SSP2STAT	set	3800
   120   000000                     _SSP2BUF	set	3797
   121   000000                     _IPR0bits	set	3615
   122   000000                     _PIE0bits	set	3625
   123   000000                     _PIE4bits	set	3629
   124   000000                     _RC0PPS	set	3682
   125   000000                     _RD5PPS	set	3695
   126   000000                     _RE2PPS	set	3700
   127   000000                     _ANSELBbits	set	3738
   128   000000                     _RD6PPS	set	3696
   129   000000                     _RC7PPS	set	3689
   130   000000                     _CCPR4H	set	3873
   131   000000                     _CCPR3H	set	3877
   132   000000                     _PIR0bits	set	3635
   133   000000                     _PIR4bits	set	3639
   134   000000                     _RE4PPS	set	3702
   135   000000                     _RG6PPS	set	3720
   136   000000                     _T2CLKCONbits	set	4031
   137   000000                     _T2HLTbits	set	4030
   138   000000                     _CCP1CONbits	set	4011
   139   000000                     _CCPTMRS0bits	set	4013
   140   000000                     _CCP2CONbits	set	4007
   141   000000                     _CCP3CONbits	set	3878
   142   000000                     _CCP4CONbits	set	3874
   143                           
   144                           	psect	smallconst
   145   000E00                     __psmallconst:
   146                           	callstack 0
   147   000E00  00                 	db	0
   148   000E01                     STR_1:
   149                           
   150                           ; BSR set to: 14
   151   000E01  52                 	db	82	;'R'
   152   000E02  47                 	db	71	;'G'
   153   000E03  42                 	db	66	;'B'
   154   000E04  43                 	db	67	;'C'
   155   000E05  3A                 	db	58	;':'
   156   000E06  25                 	db	37
   157   000E07  69                 	db	105	;'i'
   158   000E08  20                 	db	32
   159   000E09  25                 	db	37
   160   000E0A  69                 	db	105	;'i'
   161   000E0B  20                 	db	32
   162   000E0C  25                 	db	37
   163   000E0D  69                 	db	105	;'i'
   164   000E0E  20                 	db	32
   165   000E0F  25                 	db	37
   166   000E10  69                 	db	105	;'i'
   167   000E11  0A                 	db	10
   168   000E12  00                 	db	0
   169   000E13  00                 	db	0	; dummy byte at the end
   170   000000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174   001A2A                     __pcinit:
   175                           	callstack 0
   176   001A2A                     start_initialization:
   177                           	callstack 0
   178   001A2A                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Clear objects allocated to BANK1 (112 bytes)
   182   001A2A  EE01  F000         	lfsr	0,__pbssBANK1
   183   001A2E  0E70               	movlw	112
   184   001A30                     clear_0:
   185   001A30  6AEE               	clrf	postinc0,c
   186   001A32  06E8               	decf	wreg,f,c
   187   001A34  E1FD               	bnz	clear_0
   188                           
   189                           ; Clear objects allocated to BANK0 (10 bytes)
   190   001A36  EE00  F0E9         	lfsr	0,__pbssBANK0
   191   001A3A  0E0A               	movlw	10
   192   001A3C                     clear_1:
   193   001A3C  6AEE               	clrf	postinc0,c
   194   001A3E  06E8               	decf	wreg,f,c
   195   001A40  E1FD               	bnz	clear_1
   196                           
   197                           ; Clear objects allocated to COMRAM (1 bytes)
   198   001A42  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   199   001A44                     end_of_initialization:
   200                           	callstack 0
   201   001A44                     __end_of__initialization:
   202                           	callstack 0
   203   001A44  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   204   001A46  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   205   001A48  0E00               	movlw	low (__Lsmallconst shr (0+16))
   206   001A4A  6EF8               	movwf	tblptru,c
   207   001A4C  0E0E               	movlw	high __Lsmallconst
   208   001A4E  6EF7               	movwf	tblptrh,c
   209   001A50  0100               	movlb	0
   210   001A52  EFFC  F00C         	goto	_main	;jump to C main() function
   211                           
   212                           	psect	bssCOMRAM
   213   00005A                     __pbssCOMRAM:
   214                           	callstack 0
   215   00005A                     _TxBufWriteCnt:
   216                           	callstack 0
   217   00005A                     	ds	1
   218                           
   219                           	psect	bssBANK0
   220   0000E9                     __pbssBANK0:
   221                           	callstack 0
   222   0000E9                     _width:
   223                           	callstack 0
   224   0000E9                     	ds	2
   225   0000EB                     _prec:
   226                           	callstack 0
   227   0000EB                     	ds	2
   228   0000ED                     _interrupt_flag:
   229                           	callstack 0
   230   0000ED                     	ds	2
   231   0000EF                     _flags:
   232                           	callstack 0
   233   0000EF                     	ds	1
   234   0000F0                     _TxBufReadCnt:
   235                           	callstack 0
   236   0000F0                     	ds	1
   237   0000F1                     _RxBufReadCnt:
   238                           	callstack 0
   239   0000F1                     	ds	1
   240   0000F2                     _RxBufWriteCnt:
   241                           	callstack 0
   242   0000F2                     	ds	1
   243                           
   244                           	psect	bssBANK1
   245   000100                     __pbssBANK1:
   246                           	callstack 0
   247   000100                     _EUSART4TXbuf:
   248                           	callstack 0
   249   000100                     	ds	60
   250   00013C                     _EUSART4RXbuf:
   251                           	callstack 0
   252   00013C                     	ds	20
   253   000150                     _dbuf:
   254                           	callstack 0
   255   000150                     	ds	32
   256                           
   257                           	psect	cstackBANK0
   258   000060                     __pcstackBANK0:
   259                           	callstack 0
   260   000060                     ?_sprintf:
   261                           	callstack 0
   262   000060                     sprintf@s:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x0
   266   000060                     	ds	2
   267   000062                     sprintf@fmt:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x2
   271   000062                     	ds	10
   272   00006C                     sprintf@ap:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0xC
   276   00006C                     	ds	2
   277   00006E                     sprintf@f:
   278                           	callstack 0
   279                           
   280                           ; 11 bytes @ 0xE
   281   00006E                     	ds	11
   282   000079                     colorVal2String@buf:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x19
   286   000079                     	ds	2
   287   00007B                     colorVal2String@temp:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x1B
   291   00007B                     	ds	2
   292   00007D                     main@buf:
   293                           	callstack 0
   294                           
   295                           ; 100 bytes @ 0x1D
   296   00007D                     	ds	100
   297   0000E1                     main@RGBC:
   298                           	callstack 0
   299                           
   300                           ; 8 bytes @ 0x81
   301   0000E1                     	ds	8
   302                           
   303                           	psect	cstackCOMRAM
   304   000001                     __pcstackCOMRAM:
   305                           	callstack 0
   306   000001                     ??_HighISR:
   307   000001                     
   308                           ; 1 bytes @ 0x0
   309   000001                     	ds	1
   310   000002                     ??_I2C_2_Master_Idle:
   311   000002                     ?___aodiv:
   312                           	callstack 0
   313   000002                     ?___aomod:
   314                           	callstack 0
   315   000002                     sendCharSerial4@charToSend:
   316                           	callstack 0
   317   000002                     fputc@c:
   318                           	callstack 0
   319   000002                     ___aodiv@dividend:
   320                           	callstack 0
   321   000002                     ___aomod@dividend:
   322                           	callstack 0
   323                           
   324                           ; 8 bytes @ 0x1
   325   000002                     	ds	1
   326   000003                     ??_I2C_2_Master_Read:
   327   000003                     I2C_2_Master_Write@data_byte:
   328                           	callstack 0
   329   000003                     sendStringSerial4@string:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x2
   333   000003                     	ds	1
   334   000004                     color_writetoaddr@value:
   335                           	callstack 0
   336   000004                     I2C_2_Master_Read@ack:
   337                           	callstack 0
   338   000004                     fputc@fp:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x3
   342   000004                     	ds	1
   343   000005                     color_writetoaddr@address:
   344                           	callstack 0
   345   000005                     I2C_2_Master_Read@tmp:
   346                           	callstack 0
   347   000005                     sendStringSerial4@i:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x4
   351   000005                     	ds	1
   352   000006                     ??_fputc:
   353   000006                     ??_color_click_init:
   354   000006                     ?_color_read_Red:
   355                           	callstack 0
   356   000006                     ?_color_read_Green:
   357                           	callstack 0
   358   000006                     ?_color_read_Blue:
   359                           	callstack 0
   360   000006                     ?_color_read_Clear:
   361                           	callstack 0
   362                           
   363                           ; 2 bytes @ 0x5
   364   000006                     	ds	1
   365   000007                     RGBC2Serial@str:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x6
   369   000007                     	ds	1
   370   000008                     ??_color_read_Red:
   371   000008                     ??_color_read_Green:
   372   000008                     ??_color_read_Blue:
   373   000008                     ??_color_read_Clear:
   374                           
   375                           ; 1 bytes @ 0x7
   376   000008                     	ds	1
   377   000009                     ??_RGBC2Serial:
   378                           
   379                           ; 1 bytes @ 0x8
   380   000009                     	ds	1
   381   00000A                     ___aodiv@divisor:
   382                           	callstack 0
   383   00000A                     ___aomod@divisor:
   384                           	callstack 0
   385                           
   386                           ; 8 bytes @ 0x9
   387   00000A                     	ds	1
   388   00000B                     color_read_Red@tmp:
   389                           	callstack 0
   390   00000B                     color_read_Green@tmp:
   391                           	callstack 0
   392   00000B                     color_read_Blue@tmp:
   393                           	callstack 0
   394   00000B                     color_read_Clear@tmp:
   395                           	callstack 0
   396   00000B                     fputs@s:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0xA
   400   00000B                     	ds	2
   401   00000D                     color_read_RGBC@temp:
   402                           	callstack 0
   403   00000D                     fputs@fp:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0xC
   407   00000D                     	ds	2
   408   00000F                     fputs@c:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0xE
   412   00000F                     	ds	1
   413   000010                     fputs@i:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0xF
   417   000010                     	ds	2
   418   000012                     ___aodiv@counter:
   419                           	callstack 0
   420   000012                     ___aomod@counter:
   421                           	callstack 0
   422   000012                     pad@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x11
   426   000012                     	ds	1
   427   000013                     ___aodiv@sign:
   428                           	callstack 0
   429   000013                     ___aomod@sign:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0x12
   433   000013                     	ds	1
   434   000014                     ?_abs:
   435                           	callstack 0
   436   000014                     pad@buf:
   437                           	callstack 0
   438   000014                     abs@a:
   439                           	callstack 0
   440   000014                     ___aodiv@quotient:
   441                           	callstack 0
   442                           
   443                           ; 8 bytes @ 0x13
   444   000014                     	ds	2
   445   000016                     ??_abs:
   446   000016                     pad@p:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x15
   450   000016                     	ds	2
   451   000018                     ??_pad:
   452                           
   453                           ; 1 bytes @ 0x17
   454   000018                     	ds	1
   455   000019                     pad@i:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0x18
   459   000019                     	ds	2
   460   00001B                     pad@w:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0x1A
   464   00001B                     	ds	2
   465   00001D                     dtoa@fp:
   466                           	callstack 0
   467                           
   468                           ; 2 bytes @ 0x1C
   469   00001D                     	ds	2
   470   00001F                     dtoa@d:
   471                           	callstack 0
   472                           
   473                           ; 8 bytes @ 0x1E
   474   00001F                     	ds	8
   475   000027                     ??_dtoa:
   476                           
   477                           ; 1 bytes @ 0x26
   478   000027                     	ds	8
   479   00002F                     _dtoa$2273:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2E
   483   00002F                     	ds	2
   484   000031                     dtoa@p:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x30
   488   000031                     	ds	2
   489   000033                     dtoa@w:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x32
   493   000033                     	ds	2
   494   000035                     dtoa@n:
   495                           	callstack 0
   496                           
   497                           ; 8 bytes @ 0x34
   498   000035                     	ds	8
   499   00003D                     dtoa@i:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x3C
   503   00003D                     	ds	2
   504   00003F                     dtoa@s:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x3E
   508   00003F                     	ds	1
   509   000040                     vfpfcnvrt@fp:
   510                           	callstack 0
   511                           
   512                           ; 2 bytes @ 0x3F
   513   000040                     	ds	2
   514   000042                     vfpfcnvrt@fmt:
   515                           	callstack 0
   516                           
   517                           ; 2 bytes @ 0x41
   518   000042                     	ds	2
   519   000044                     vfpfcnvrt@ap:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x43
   523   000044                     	ds	2
   524   000046                     ??_vfpfcnvrt:
   525                           
   526                           ; 1 bytes @ 0x45
   527   000046                     	ds	2
   528   000048                     vfpfcnvrt@convarg:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x47
   532   000048                     	ds	8
   533   000050                     vfpfcnvrt@cp:
   534                           	callstack 0
   535                           
   536                           ; 2 bytes @ 0x4F
   537   000050                     	ds	2
   538   000052                     ?_vfprintf:
   539                           	callstack 0
   540   000052                     vfprintf@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x51
   544   000052                     	ds	2
   545   000054                     vfprintf@fmt:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x53
   549   000054                     	ds	2
   550   000056                     vfprintf@ap:
   551                           	callstack 0
   552                           
   553                           ; 2 bytes @ 0x55
   554   000056                     	ds	2
   555   000058                     vfprintf@cfmt:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x57
   559   000058                     	ds	2
   560   00005A                     
   561                           ; 1 bytes @ 0x59
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 129 in file "main.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  buf           100   29[BANK0 ] unsigned char [100]
   572 ;;  RGBC            8  129[BANK0 ] struct RGBC_val
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : 0/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   583 ;;      Locals:         0     108       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   585 ;;      Totals:         0     108       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   586 ;;Total ram usage:      108 bytes
   587 ;; Hardware stack levels required when called: 10
   588 ;; This function calls:
   589 ;;		_colorVal2String
   590 ;;		_color_click_init
   591 ;;		_color_read_RGBC
   592 ;;		_initUSART4
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text0
   599   0019F8                     __ptext0:
   600                           	callstack 0
   601   0019F8                     _main:
   602                           	callstack 21
   603   0019F8                     
   604                           ;main.c: 131:     RGBC_val RGBC;;main.c: 132:     char buf[100];;main.c: 136:     color_
      +                          click_init();
   605   0019F8  ECE2  F00C         	call	_color_click_init	;wreg free
   606   0019FC                     
   607                           ;main.c: 140:     initUSART4();
   608   0019FC  EC67  F00D         	call	_initUSART4	;wreg free
   609   001A00                     
   610                           ;main.c: 153:         color_read_RGBC(&RGBC);
   611   001A00  0EE1               	movlw	low main@RGBC
   612   001A02  6E0D               	movwf	color_read_RGBC@temp^0,c
   613   001A04  0E00               	movlw	high main@RGBC
   614   001A06  6E0E               	movwf	(color_read_RGBC@temp+1)^0,c
   615   001A08  EC40  F00B         	call	_color_read_RGBC	;wreg free
   616   001A0C                     
   617                           ;main.c: 154:         colorVal2String(buf, &RGBC);
   618   001A0C  0E7D               	movlw	low main@buf
   619   001A0E  0100               	movlb	0	; () banked
   620   001A10  6F79               	movwf	colorVal2String@buf& (0+255),b
   621   001A12  0E00               	movlw	high main@buf
   622   001A14  6F7A               	movwf	(colorVal2String@buf+1)& (0+255),b
   623   001A16  0EE1               	movlw	low main@RGBC
   624   001A18  6F7B               	movwf	colorVal2String@temp& (0+255),b
   625   001A1A  0E00               	movlw	high main@RGBC
   626   001A1C  6F7C               	movwf	(colorVal2String@temp+1)& (0+255),b
   627   001A1E  EC08  F00B         	call	_colorVal2String	;wreg free
   628   001A22                     l155:
   629   001A22  EF11  F00D         	goto	l155
   630   001A26  EF27  F000         	goto	start
   631   001A2A                     __end_of_main:
   632                           	callstack 0
   633                           
   634 ;; *************** function _initUSART4 *****************
   635 ;; Defined at:
   636 ;;		line 4 in file "../lab-5-areeb-atulit.X/serial.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   654 ;;Total ram usage:        0 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; Hardware stack levels required when called: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_main
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text1
   665   001ACE                     __ptext1:
   666                           	callstack 0
   667   001ACE                     _initUSART4:
   668                           	callstack 29
   669   001ACE                     
   670                           ;../lab-5-areeb-atulit.X/serial.c: 8:     RC0PPS = 0x12;
   671   001ACE  0E12               	movlw	18
   672   001AD0  010E               	movlb	14	; () banked
   673   001AD2  6F62               	movwf	98,b	;volatile
   674                           
   675                           ;../lab-5-areeb-atulit.X/serial.c: 9:     RX4PPS = 0x11;
   676   001AD4  0E11               	movlw	17
   677   001AD6  6F15               	movwf	21,b	;volatile
   678   001AD8                     
   679                           ; BSR set to: 14
   680                           ;../lab-5-areeb-atulit.X/serial.c: 10:     BAUD4CONbits.BRG16 = 0;
   681   001AD8  97E9               	bcf	233,3,b	;volatile
   682   001ADA                     
   683                           ; BSR set to: 14
   684                           ;../lab-5-areeb-atulit.X/serial.c: 11:     TX4STAbits.BRGH = 0;
   685   001ADA  95E8               	bcf	232,2,b	;volatile
   686                           
   687                           ;../lab-5-areeb-atulit.X/serial.c: 12:     SP4BRGL = 103;
   688   001ADC  0E67               	movlw	103
   689   001ADE  6FE5               	movwf	229,b	;volatile
   690                           
   691                           ;../lab-5-areeb-atulit.X/serial.c: 13:     SP4BRGH = 0;
   692   001AE0  0E00               	movlw	0
   693   001AE2  6FE6               	movwf	230,b	;volatile
   694   001AE4                     
   695                           ; BSR set to: 14
   696                           ;../lab-5-areeb-atulit.X/serial.c: 15:     RC4STAbits.CREN = 1;
   697   001AE4  89E7               	bsf	231,4,b	;volatile
   698   001AE6                     
   699                           ; BSR set to: 14
   700                           ;../lab-5-areeb-atulit.X/serial.c: 16:     TX4STAbits.TXEN = 1;
   701   001AE6  8BE8               	bsf	232,5,b	;volatile
   702   001AE8                     
   703                           ; BSR set to: 14
   704                           ;../lab-5-areeb-atulit.X/serial.c: 17:     RC4STAbits.SPEN = 1;
   705   001AE8  8FE7               	bsf	231,7,b	;volatile
   706   001AEA                     
   707                           ; BSR set to: 14
   708                           ;../lab-5-areeb-atulit.X/serial.c: 18:     PIE4bits.RC4IE=1;
   709   001AEA  872D               	bsf	45,3,b	;volatile
   710   001AEC                     
   711                           ; BSR set to: 14
   712                           ;../lab-5-areeb-atulit.X/serial.c: 19:     PIE4bits.TX4IE=1;
   713   001AEC  852D               	bsf	45,2,b	;volatile
   714   001AEE                     
   715                           ; BSR set to: 14
   716   001AEE  0012               	return		;funcret
   717   001AF0                     __end_of_initUSART4:
   718                           	callstack 0
   719                           
   720 ;; *************** function _color_read_RGBC *****************
   721 ;; Defined at:
   722 ;;		line 92 in file "color.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  temp            2   12[COMRAM] PTR struct RGBC_val
   725 ;;		 -> main@RGBC(8), 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  1    wreg      void 
   730 ;; Registers used:
   731 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : 0/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   737 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   740 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   741 ;;Total ram usage:        2 bytes
   742 ;; Hardware stack levels used: 1
   743 ;; Hardware stack levels required when called: 4
   744 ;; This function calls:
   745 ;;		_color_read_Blue
   746 ;;		_color_read_Clear
   747 ;;		_color_read_Green
   748 ;;		_color_read_Red
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755   001680                     __ptext2:
   756                           	callstack 0
   757   001680                     _color_read_RGBC:
   758                           	callstack 26
   759   001680                     
   760                           ;color.c: 93:     temp->R = color_read_Red();
   761   001680  EC98  F00B         	call	_color_read_Red	;wreg free
   762   001684  C00D  FFD9         	movff	color_read_RGBC@temp,fsr2l
   763   001688  C00E  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
   764   00168C  C006  FFDE         	movff	?_color_read_Red,postinc2
   765   001690  C007  FFDD         	movff	?_color_read_Red+1,postdec2
   766                           
   767                           ;color.c: 94:     temp->B = color_read_Blue();
   768   001694  EC10  F00C         	call	_color_read_Blue	;wreg free
   769   001698  EE20 F004          	lfsr	2,4
   770   00169C  500D               	movf	color_read_RGBC@temp^0,w,c
   771   00169E  26D9               	addwf	fsr2l,f,c
   772   0016A0  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   773   0016A2  22DA               	addwfc	fsr2h,f,c
   774   0016A4  C006  FFDE         	movff	?_color_read_Blue,postinc2
   775   0016A8  C007  FFDD         	movff	?_color_read_Blue+1,postdec2
   776                           
   777                           ;color.c: 95:     temp->G = color_read_Green();
   778   0016AC  ECC0  F00B         	call	_color_read_Green	;wreg free
   779   0016B0  EE20 F002          	lfsr	2,2
   780   0016B4  500D               	movf	color_read_RGBC@temp^0,w,c
   781   0016B6  26D9               	addwf	fsr2l,f,c
   782   0016B8  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   783   0016BA  22DA               	addwfc	fsr2h,f,c
   784   0016BC  C006  FFDE         	movff	?_color_read_Green,postinc2
   785   0016C0  C007  FFDD         	movff	?_color_read_Green+1,postdec2
   786                           
   787                           ;color.c: 96:     temp->C = color_read_Clear();
   788   0016C4  ECE8  F00B         	call	_color_read_Clear	;wreg free
   789   0016C8  EE20 F006          	lfsr	2,6
   790   0016CC  500D               	movf	color_read_RGBC@temp^0,w,c
   791   0016CE  26D9               	addwf	fsr2l,f,c
   792   0016D0  500E               	movf	(color_read_RGBC@temp+1)^0,w,c
   793   0016D2  22DA               	addwfc	fsr2h,f,c
   794   0016D4  C006  FFDE         	movff	?_color_read_Clear,postinc2
   795   0016D8  C007  FFDD         	movff	?_color_read_Clear+1,postdec2
   796   0016DC  0012               	return		;funcret
   797   0016DE                     __end_of_color_read_RGBC:
   798                           	callstack 0
   799                           
   800 ;; *************** function _color_read_Red *****************
   801 ;; Defined at:
   802 ;;		line 33 in file "color.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  tmp             2   10[COMRAM] unsigned int 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  2    5[COMRAM] unsigned int 
   809 ;; Registers used:
   810 ;;		wreg, status,2, status,0, cstack
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   816 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   817 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   818 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   819 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   820 ;;Total ram usage:        7 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; Hardware stack levels required when called: 3
   823 ;; This function calls:
   824 ;;		_I2C_2_Master_Read
   825 ;;		_I2C_2_Master_RepStart
   826 ;;		_I2C_2_Master_Start
   827 ;;		_I2C_2_Master_Stop
   828 ;;		_I2C_2_Master_Write
   829 ;; This function is called by:
   830 ;;		_color_read_RGBC
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text3
   835   001730                     __ptext3:
   836                           	callstack 0
   837   001730                     _color_read_Red:
   838                           	callstack 26
   839   001730                     
   840                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
   841   001730  ECA4  F00D         	call	_I2C_2_Master_Start	;wreg free
   842                           
   843                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
   844   001734  0E52               	movlw	82
   845   001736  EC94  F00D         	call	_I2C_2_Master_Write
   846                           
   847                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
   848   00173A  0EB6               	movlw	182
   849   00173C  EC94  F00D         	call	_I2C_2_Master_Write
   850                           
   851                           ;color.c: 39:  I2C_2_Master_RepStart();
   852   001740  EC9A  F00D         	call	_I2C_2_Master_RepStart	;wreg free
   853                           
   854                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
   855   001744  0E53               	movlw	83
   856   001746  EC94  F00D         	call	_I2C_2_Master_Write
   857                           
   858                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
   859   00174A  0E01               	movlw	1
   860   00174C  EC81  F00C         	call	_I2C_2_Master_Read
   861   001750  6E08               	movwf	??_color_read_Red^0,c
   862   001752  5008               	movf	??_color_read_Red^0,w,c
   863   001754  6E0B               	movwf	color_read_Red@tmp^0,c
   864   001756  6A0C               	clrf	(color_read_Red@tmp+1)^0,c
   865                           
   866                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   867   001758  0E00               	movlw	0
   868   00175A  EC81  F00C         	call	_I2C_2_Master_Read
   869   00175E  6E08               	movwf	??_color_read_Red^0,c
   870   001760  5008               	movf	??_color_read_Red^0,w,c
   871   001762  6E0A               	movwf	(??_color_read_Red+2)^0,c
   872   001764  6A09               	clrf	(??_color_read_Red+1)^0,c
   873   001766  500B               	movf	color_read_Red@tmp^0,w,c
   874   001768  1009               	iorwf	(??_color_read_Red+1)^0,w,c
   875   00176A  6E0B               	movwf	color_read_Red@tmp^0,c
   876   00176C  500C               	movf	(color_read_Red@tmp+1)^0,w,c
   877   00176E  100A               	iorwf	(??_color_read_Red+2)^0,w,c
   878   001770  6E0C               	movwf	(color_read_Red@tmp+1)^0,c
   879                           
   880                           ;color.c: 43:  I2C_2_Master_Stop();
   881   001772  EC9F  F00D         	call	_I2C_2_Master_Stop	;wreg free
   882   001776                     
   883                           ;color.c: 44:  return tmp;
   884   001776  C00B  F006         	movff	color_read_Red@tmp,?_color_read_Red
   885   00177A  C00C  F007         	movff	color_read_Red@tmp+1,?_color_read_Red+1
   886   00177E  0012               	return		;funcret
   887   001780                     __end_of_color_read_Red:
   888                           	callstack 0
   889                           
   890 ;; *************** function _color_read_Green *****************
   891 ;; Defined at:
   892 ;;		line 47 in file "color.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  tmp             2   10[COMRAM] unsigned int 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  2    5[COMRAM] unsigned int 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, cstack
   901 ;; Tracked objects:
   902 ;;		On entry : 0/0
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   907 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   908 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   909 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   910 ;;Total ram usage:        7 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; Hardware stack levels required when called: 3
   913 ;; This function calls:
   914 ;;		_I2C_2_Master_Read
   915 ;;		_I2C_2_Master_RepStart
   916 ;;		_I2C_2_Master_Start
   917 ;;		_I2C_2_Master_Stop
   918 ;;		_I2C_2_Master_Write
   919 ;; This function is called by:
   920 ;;		_color_read_RGBC
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text4
   925   001780                     __ptext4:
   926                           	callstack 0
   927   001780                     _color_read_Green:
   928                           	callstack 26
   929   001780                     
   930                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
   931   001780  ECA4  F00D         	call	_I2C_2_Master_Start	;wreg free
   932                           
   933                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
   934   001784  0E52               	movlw	82
   935   001786  EC94  F00D         	call	_I2C_2_Master_Write
   936                           
   937                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
   938   00178A  0EB8               	movlw	184
   939   00178C  EC94  F00D         	call	_I2C_2_Master_Write
   940                           
   941                           ;color.c: 53:  I2C_2_Master_RepStart();
   942   001790  EC9A  F00D         	call	_I2C_2_Master_RepStart	;wreg free
   943                           
   944                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
   945   001794  0E53               	movlw	83
   946   001796  EC94  F00D         	call	_I2C_2_Master_Write
   947                           
   948                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
   949   00179A  0E01               	movlw	1
   950   00179C  EC81  F00C         	call	_I2C_2_Master_Read
   951   0017A0  6E08               	movwf	??_color_read_Green^0,c
   952   0017A2  5008               	movf	??_color_read_Green^0,w,c
   953   0017A4  6E0B               	movwf	color_read_Green@tmp^0,c
   954   0017A6  6A0C               	clrf	(color_read_Green@tmp+1)^0,c
   955                           
   956                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
   957   0017A8  0E00               	movlw	0
   958   0017AA  EC81  F00C         	call	_I2C_2_Master_Read
   959   0017AE  6E08               	movwf	??_color_read_Green^0,c
   960   0017B0  5008               	movf	??_color_read_Green^0,w,c
   961   0017B2  6E0A               	movwf	(??_color_read_Green+2)^0,c
   962   0017B4  6A09               	clrf	(??_color_read_Green+1)^0,c
   963   0017B6  500B               	movf	color_read_Green@tmp^0,w,c
   964   0017B8  1009               	iorwf	(??_color_read_Green+1)^0,w,c
   965   0017BA  6E0B               	movwf	color_read_Green@tmp^0,c
   966   0017BC  500C               	movf	(color_read_Green@tmp+1)^0,w,c
   967   0017BE  100A               	iorwf	(??_color_read_Green+2)^0,w,c
   968   0017C0  6E0C               	movwf	(color_read_Green@tmp+1)^0,c
   969                           
   970                           ;color.c: 57:  I2C_2_Master_Stop();
   971   0017C2  EC9F  F00D         	call	_I2C_2_Master_Stop	;wreg free
   972   0017C6                     
   973                           ;color.c: 58:  return tmp;
   974   0017C6  C00B  F006         	movff	color_read_Green@tmp,?_color_read_Green
   975   0017CA  C00C  F007         	movff	color_read_Green@tmp+1,?_color_read_Green+1
   976   0017CE  0012               	return		;funcret
   977   0017D0                     __end_of_color_read_Green:
   978                           	callstack 0
   979                           
   980 ;; *************** function _color_read_Clear *****************
   981 ;; Defined at:
   982 ;;		line 75 in file "color.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;  tmp             2   10[COMRAM] unsigned int 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  2    5[COMRAM] unsigned int 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;Total ram usage:        7 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 3
  1003 ;; This function calls:
  1004 ;;		_I2C_2_Master_Read
  1005 ;;		_I2C_2_Master_RepStart
  1006 ;;		_I2C_2_Master_Start
  1007 ;;		_I2C_2_Master_Stop
  1008 ;;		_I2C_2_Master_Write
  1009 ;; This function is called by:
  1010 ;;		_color_read_RGBC
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text5
  1015   0017D0                     __ptext5:
  1016                           	callstack 0
  1017   0017D0                     _color_read_Clear:
  1018                           	callstack 26
  1019   0017D0                     
  1020                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  1021   0017D0  ECA4  F00D         	call	_I2C_2_Master_Start	;wreg free
  1022                           
  1023                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  1024   0017D4  0E52               	movlw	82
  1025   0017D6  EC94  F00D         	call	_I2C_2_Master_Write
  1026                           
  1027                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  1028   0017DA  0EB4               	movlw	180
  1029   0017DC  EC94  F00D         	call	_I2C_2_Master_Write
  1030                           
  1031                           ;color.c: 81:  I2C_2_Master_RepStart();
  1032   0017E0  EC9A  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1033                           
  1034                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  1035   0017E4  0E53               	movlw	83
  1036   0017E6  EC94  F00D         	call	_I2C_2_Master_Write
  1037                           
  1038                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  1039   0017EA  0E01               	movlw	1
  1040   0017EC  EC81  F00C         	call	_I2C_2_Master_Read
  1041   0017F0  6E08               	movwf	??_color_read_Clear^0,c
  1042   0017F2  5008               	movf	??_color_read_Clear^0,w,c
  1043   0017F4  6E0B               	movwf	color_read_Clear@tmp^0,c
  1044   0017F6  6A0C               	clrf	(color_read_Clear@tmp+1)^0,c
  1045                           
  1046                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1047   0017F8  0E00               	movlw	0
  1048   0017FA  EC81  F00C         	call	_I2C_2_Master_Read
  1049   0017FE  6E08               	movwf	??_color_read_Clear^0,c
  1050   001800  5008               	movf	??_color_read_Clear^0,w,c
  1051   001802  6E0A               	movwf	(??_color_read_Clear+2)^0,c
  1052   001804  6A09               	clrf	(??_color_read_Clear+1)^0,c
  1053   001806  500B               	movf	color_read_Clear@tmp^0,w,c
  1054   001808  1009               	iorwf	(??_color_read_Clear+1)^0,w,c
  1055   00180A  6E0B               	movwf	color_read_Clear@tmp^0,c
  1056   00180C  500C               	movf	(color_read_Clear@tmp+1)^0,w,c
  1057   00180E  100A               	iorwf	(??_color_read_Clear+2)^0,w,c
  1058   001810  6E0C               	movwf	(color_read_Clear@tmp+1)^0,c
  1059                           
  1060                           ;color.c: 85:  I2C_2_Master_Stop();
  1061   001812  EC9F  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1062   001816                     
  1063                           ;color.c: 86:  return tmp;
  1064   001816  C00B  F006         	movff	color_read_Clear@tmp,?_color_read_Clear
  1065   00181A  C00C  F007         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1066   00181E  0012               	return		;funcret
  1067   001820                     __end_of_color_read_Clear:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _color_read_Blue *****************
  1071 ;; Defined at:
  1072 ;;		line 61 in file "color.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;  tmp             2   10[COMRAM] unsigned int 
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  2    5[COMRAM] unsigned int 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1086 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1087 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;Total ram usage:        7 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 3
  1093 ;; This function calls:
  1094 ;;		_I2C_2_Master_Read
  1095 ;;		_I2C_2_Master_RepStart
  1096 ;;		_I2C_2_Master_Start
  1097 ;;		_I2C_2_Master_Stop
  1098 ;;		_I2C_2_Master_Write
  1099 ;; This function is called by:
  1100 ;;		_color_read_RGBC
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text6
  1105   001820                     __ptext6:
  1106                           	callstack 0
  1107   001820                     _color_read_Blue:
  1108                           	callstack 26
  1109   001820                     
  1110                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  1111   001820  ECA4  F00D         	call	_I2C_2_Master_Start	;wreg free
  1112                           
  1113                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  1114   001824  0E52               	movlw	82
  1115   001826  EC94  F00D         	call	_I2C_2_Master_Write
  1116                           
  1117                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  1118   00182A  0EBA               	movlw	186
  1119   00182C  EC94  F00D         	call	_I2C_2_Master_Write
  1120                           
  1121                           ;color.c: 67:  I2C_2_Master_RepStart();
  1122   001830  EC9A  F00D         	call	_I2C_2_Master_RepStart	;wreg free
  1123                           
  1124                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  1125   001834  0E53               	movlw	83
  1126   001836  EC94  F00D         	call	_I2C_2_Master_Write
  1127                           
  1128                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  1129   00183A  0E01               	movlw	1
  1130   00183C  EC81  F00C         	call	_I2C_2_Master_Read
  1131   001840  6E08               	movwf	??_color_read_Blue^0,c
  1132   001842  5008               	movf	??_color_read_Blue^0,w,c
  1133   001844  6E0B               	movwf	color_read_Blue@tmp^0,c
  1134   001846  6A0C               	clrf	(color_read_Blue@tmp+1)^0,c
  1135                           
  1136                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1137   001848  0E00               	movlw	0
  1138   00184A  EC81  F00C         	call	_I2C_2_Master_Read
  1139   00184E  6E08               	movwf	??_color_read_Blue^0,c
  1140   001850  5008               	movf	??_color_read_Blue^0,w,c
  1141   001852  6E0A               	movwf	(??_color_read_Blue+2)^0,c
  1142   001854  6A09               	clrf	(??_color_read_Blue+1)^0,c
  1143   001856  500B               	movf	color_read_Blue@tmp^0,w,c
  1144   001858  1009               	iorwf	(??_color_read_Blue+1)^0,w,c
  1145   00185A  6E0B               	movwf	color_read_Blue@tmp^0,c
  1146   00185C  500C               	movf	(color_read_Blue@tmp+1)^0,w,c
  1147   00185E  100A               	iorwf	(??_color_read_Blue+2)^0,w,c
  1148   001860  6E0C               	movwf	(color_read_Blue@tmp+1)^0,c
  1149                           
  1150                           ;color.c: 71:  I2C_2_Master_Stop();
  1151   001862  EC9F  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1152   001866                     
  1153                           ;color.c: 72:  return tmp;
  1154   001866  C00B  F006         	movff	color_read_Blue@tmp,?_color_read_Blue
  1155   00186A  C00C  F007         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1156   00186E  0012               	return		;funcret
  1157   001870                     __end_of_color_read_Blue:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _I2C_2_Master_RepStart *****************
  1161 ;; Defined at:
  1162 ;;		line 33 in file "i2c.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;		None
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  1    wreg      void 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0, cstack
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;Total ram usage:        0 bytes
  1181 ;; Hardware stack levels used: 1
  1182 ;; Hardware stack levels required when called: 2
  1183 ;; This function calls:
  1184 ;;		_I2C_2_Master_Idle
  1185 ;; This function is called by:
  1186 ;;		_color_read_Red
  1187 ;;		_color_read_Green
  1188 ;;		_color_read_Blue
  1189 ;;		_color_read_Clear
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194   001B34                     __ptext7:
  1195                           	callstack 0
  1196   001B34                     _I2C_2_Master_RepStart:
  1197                           	callstack 26
  1198   001B34                     
  1199                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1200   001B34  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1201   001B38                     
  1202                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1203   001B38  010E               	movlb	14	; () banked
  1204   001B3A  83DA               	bsf	218,1,b	;volatile
  1205   001B3C                     
  1206                           ; BSR set to: 14
  1207   001B3C  0012               	return		;funcret
  1208   001B3E                     __end_of_I2C_2_Master_RepStart:
  1209                           	callstack 0
  1210                           
  1211 ;; *************** function _I2C_2_Master_Read *****************
  1212 ;; Defined at:
  1213 ;;		line 51 in file "i2c.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  ack             1    wreg     unsigned char 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  ack             1    3[COMRAM] unsigned char 
  1218 ;;  tmp             1    4[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      unsigned char 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1231 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1232 ;;Total ram usage:        3 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 2
  1235 ;; This function calls:
  1236 ;;		_I2C_2_Master_Idle
  1237 ;; This function is called by:
  1238 ;;		_color_read_Red
  1239 ;;		_color_read_Green
  1240 ;;		_color_read_Blue
  1241 ;;		_color_read_Clear
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text8
  1246   001902                     __ptext8:
  1247                           	callstack 0
  1248   001902                     _I2C_2_Master_Read:
  1249                           	callstack 26
  1250                           
  1251                           ; BSR set to: 14
  1252                           ;incstack = 0
  1253                           ;I2C_2_Master_Read@ack stored from wreg
  1254   001902  6E04               	movwf	I2C_2_Master_Read@ack^0,c
  1255   001904                     
  1256                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1257   001904  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1258   001908                     
  1259                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1260   001908  010E               	movlb	14	; () banked
  1261   00190A  87DA               	bsf	218,3,b	;volatile
  1262                           
  1263                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1264   00190C  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1265   001910                     
  1266                           ;i2c.c: 57:   tmp = SSP2BUF;
  1267   001910  CED5 F005          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1268                           
  1269                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1270   001914  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1271   001918                     
  1272                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1273   001918  5004               	movf	I2C_2_Master_Read@ack^0,w,c
  1274   00191A  B4D8               	btfsc	status,2,c
  1275   00191C  EF92  F00C         	goto	u981
  1276   001920  EF96  F00C         	goto	u980
  1277   001924                     u981:
  1278   001924  6A03               	clrf	??_I2C_2_Master_Read^0,c
  1279   001926  2A03               	incf	??_I2C_2_Master_Read^0,f,c
  1280   001928  EF97  F00C         	goto	u998
  1281   00192C                     u980:
  1282   00192C  6A03               	clrf	??_I2C_2_Master_Read^0,c
  1283   00192E                     u998:
  1284   00192E  3A03               	swapf	??_I2C_2_Master_Read^0,f,c
  1285   001930  4603               	rlncf	??_I2C_2_Master_Read^0,f,c
  1286   001932  010E               	movlb	14	; () banked
  1287   001934  51DA               	movf	218,w,b	;volatile
  1288   001936  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  1289   001938  0BDF               	andlw	-33
  1290   00193A  1803               	xorwf	??_I2C_2_Master_Read^0,w,c
  1291   00193C  6FDA               	movwf	218,b	;volatile
  1292   00193E                     
  1293                           ; BSR set to: 14
  1294                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1295   00193E  89DA               	bsf	218,4,b	;volatile
  1296   001940                     
  1297                           ; BSR set to: 14
  1298                           ;i2c.c: 61:   return tmp;
  1299   001940  5005               	movf	I2C_2_Master_Read@tmp^0,w,c
  1300   001942                     
  1301                           ; BSR set to: 14
  1302   001942  0012               	return		;funcret
  1303   001944                     __end_of_I2C_2_Master_Read:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _color_click_init *****************
  1307 ;; Defined at:
  1308 ;;		line 9 in file "color.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, status,2, status,0, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : 0/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1325 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1326 ;;Total ram usage:        1 bytes
  1327 ;; Hardware stack levels used: 1
  1328 ;; Hardware stack levels required when called: 4
  1329 ;; This function calls:
  1330 ;;		_I2C_2_Master_Init
  1331 ;;		_color_writetoaddr
  1332 ;; This function is called by:
  1333 ;;		_main
  1334 ;;		_Color_Interrupts_clear
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           	psect	text9
  1339   0019C4                     __ptext9:
  1340                           	callstack 0
  1341   0019C4                     _color_click_init:
  1342                           	callstack 26
  1343   0019C4                     
  1344                           ;color.c: 12:     I2C_2_Master_Init();
  1345   0019C4  EC2B  F00D         	call	_I2C_2_Master_Init	;wreg free
  1346   0019C8                     
  1347                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  1348   0019C8  0E01               	movlw	1
  1349   0019CA  6E04               	movwf	color_writetoaddr@value^0,c
  1350   0019CC  0E00               	movlw	0
  1351   0019CE  EC78  F00D         	call	_color_writetoaddr
  1352   0019D2                     
  1353                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1354   0019D2  0E3F               	movlw	63
  1355   0019D4  6E06               	movwf	??_color_click_init^0,c
  1356   0019D6  0E55               	movlw	85
  1357   0019D8                     u1137:
  1358   0019D8  2EE8               	decfsz	wreg,f,c
  1359   0019DA  D7FE               	bra	u1137
  1360   0019DC  2E06               	decfsz	??_color_click_init^0,f,c
  1361   0019DE  D7FC               	bra	u1137
  1362   0019E0  F000               	nop	
  1363   0019E2                     
  1364                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  1365   0019E2  0E03               	movlw	3
  1366   0019E4  6E04               	movwf	color_writetoaddr@value^0,c
  1367   0019E6  0E00               	movlw	0
  1368   0019E8  EC78  F00D         	call	_color_writetoaddr
  1369   0019EC                     
  1370                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  1371   0019EC  0ED5               	movlw	213
  1372   0019EE  6E04               	movwf	color_writetoaddr@value^0,c
  1373   0019F0  0E01               	movlw	1
  1374   0019F2  EC78  F00D         	call	_color_writetoaddr
  1375   0019F6  0012               	return		;funcret
  1376   0019F8                     __end_of_color_click_init:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _color_writetoaddr *****************
  1380 ;; Defined at:
  1381 ;;		line 25 in file "color.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  address         1    wreg     unsigned char 
  1384 ;;  value           1    3[COMRAM] unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  address         1    4[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1396 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 3
  1403 ;; This function calls:
  1404 ;;		_I2C_2_Master_Start
  1405 ;;		_I2C_2_Master_Stop
  1406 ;;		_I2C_2_Master_Write
  1407 ;; This function is called by:
  1408 ;;		_color_click_init
  1409 ;;		_Color_Interrupts_init
  1410 ;;		_Color_Interrupts_threshold
  1411 ;;		_persistence_register
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text10
  1416   001AF0                     __ptext10:
  1417                           	callstack 0
  1418   001AF0                     _color_writetoaddr:
  1419                           	callstack 26
  1420                           
  1421                           ;incstack = 0
  1422                           ;color_writetoaddr@address stored from wreg
  1423   001AF0  6E05               	movwf	color_writetoaddr@address^0,c
  1424   001AF2                     
  1425                           ;color.c: 26:     I2C_2_Master_Start();
  1426   001AF2  ECA4  F00D         	call	_I2C_2_Master_Start	;wreg free
  1427                           
  1428                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  1429   001AF6  0E52               	movlw	82
  1430   001AF8  EC94  F00D         	call	_I2C_2_Master_Write
  1431                           
  1432                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  1433   001AFC  5005               	movf	color_writetoaddr@address^0,w,c
  1434   001AFE  0980               	iorlw	128
  1435   001B00  EC94  F00D         	call	_I2C_2_Master_Write
  1436                           
  1437                           ;color.c: 29:     I2C_2_Master_Write(value);
  1438   001B04  5004               	movf	color_writetoaddr@value^0,w,c
  1439   001B06  EC94  F00D         	call	_I2C_2_Master_Write
  1440                           
  1441                           ;color.c: 30:     I2C_2_Master_Stop();
  1442   001B0A  EC9F  F00D         	call	_I2C_2_Master_Stop	;wreg free
  1443   001B0E  0012               	return		;funcret
  1444   001B10                     __end_of_color_writetoaddr:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _I2C_2_Master_Write *****************
  1448 ;; Defined at:
  1449 ;;		line 45 in file "i2c.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;  data_byte       1    wreg     unsigned char 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  data_byte       1    2[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1464 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1466 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1467 ;;Total ram usage:        1 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 2
  1470 ;; This function calls:
  1471 ;;		_I2C_2_Master_Idle
  1472 ;; This function is called by:
  1473 ;;		_color_writetoaddr
  1474 ;;		_color_read_Red
  1475 ;;		_color_read_Green
  1476 ;;		_color_read_Blue
  1477 ;;		_color_read_Clear
  1478 ;;		_Color_Interrupts_clear
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           	psect	text11
  1483   001B28                     __ptext11:
  1484                           	callstack 0
  1485   001B28                     _I2C_2_Master_Write:
  1486                           	callstack 26
  1487                           
  1488                           ;incstack = 0
  1489                           ;I2C_2_Master_Write@data_byte stored from wreg
  1490   001B28  6E03               	movwf	I2C_2_Master_Write@data_byte^0,c
  1491   001B2A                     
  1492                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1493   001B2A  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1494   001B2E                     
  1495                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1496   001B2E  C003  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1497   001B32  0012               	return		;funcret
  1498   001B34                     __end_of_I2C_2_Master_Write:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _I2C_2_Master_Stop *****************
  1502 ;; Defined at:
  1503 ;;		line 39 in file "i2c.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1521 ;;Total ram usage:        0 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 2
  1524 ;; This function calls:
  1525 ;;		_I2C_2_Master_Idle
  1526 ;; This function is called by:
  1527 ;;		_color_writetoaddr
  1528 ;;		_color_read_Red
  1529 ;;		_color_read_Green
  1530 ;;		_color_read_Blue
  1531 ;;		_color_read_Clear
  1532 ;;		_Color_Interrupts_clear
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           	psect	text12
  1537   001B3E                     __ptext12:
  1538                           	callstack 0
  1539   001B3E                     _I2C_2_Master_Stop:
  1540                           	callstack 26
  1541   001B3E                     
  1542                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1543   001B3E  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1544   001B42                     
  1545                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1546   001B42  010E               	movlb	14	; () banked
  1547   001B44  85DA               	bsf	218,2,b	;volatile
  1548   001B46                     
  1549                           ; BSR set to: 14
  1550   001B46  0012               	return		;funcret
  1551   001B48                     __end_of_I2C_2_Master_Stop:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _I2C_2_Master_Start *****************
  1555 ;; Defined at:
  1556 ;;		line 27 in file "i2c.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		wreg, status,2, status,0, cstack
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used: 1
  1576 ;; Hardware stack levels required when called: 2
  1577 ;; This function calls:
  1578 ;;		_I2C_2_Master_Idle
  1579 ;; This function is called by:
  1580 ;;		_color_writetoaddr
  1581 ;;		_color_read_Red
  1582 ;;		_color_read_Green
  1583 ;;		_color_read_Blue
  1584 ;;		_color_read_Clear
  1585 ;;		_Color_Interrupts_clear
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text13
  1590   001B48                     __ptext13:
  1591                           	callstack 0
  1592   001B48                     _I2C_2_Master_Start:
  1593                           	callstack 26
  1594   001B48                     
  1595                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1596   001B48  EC40  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1597   001B4C                     
  1598                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1599   001B4C  010E               	movlb	14	; () banked
  1600   001B4E  81DA               	bsf	218,0,b	;volatile
  1601   001B50                     
  1602                           ; BSR set to: 14
  1603   001B50  0012               	return		;funcret
  1604   001B52                     __end_of_I2C_2_Master_Start:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _I2C_2_Master_Idle *****************
  1608 ;; Defined at:
  1609 ;;		line 22 in file "i2c.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1625 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1626 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1627 ;;Total ram usage:        1 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 1
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_I2C_2_Master_Start
  1634 ;;		_I2C_2_Master_RepStart
  1635 ;;		_I2C_2_Master_Stop
  1636 ;;		_I2C_2_Master_Write
  1637 ;;		_I2C_2_Master_Read
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text14
  1642   001A80                     __ptext14:
  1643                           	callstack 0
  1644   001A80                     _I2C_2_Master_Idle:
  1645                           	callstack 26
  1646   001A80                     l110:
  1647   001A80  010E               	movlb	14	; () banked
  1648   001A82  B5D8               	btfsc	216,2,b	;volatile
  1649   001A84  EF46  F00D         	goto	u921
  1650   001A88  EF48  F00D         	goto	u920
  1651   001A8C                     u921:
  1652   001A8C  EF40  F00D         	goto	l110
  1653   001A90                     u920:
  1654   001A90                     
  1655                           ; BSR set to: 14
  1656   001A90  CEDA F002          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1657   001A94  0E1F               	movlw	31
  1658   001A96  1602               	andwf	??_I2C_2_Master_Idle^0,f,c
  1659   001A98  A4D8               	btfss	status,2,c
  1660   001A9A  EF51  F00D         	goto	u931
  1661   001A9E  EF53  F00D         	goto	u930
  1662   001AA2                     u931:
  1663   001AA2  EF40  F00D         	goto	l110
  1664   001AA6                     u930:
  1665   001AA6                     
  1666                           ; BSR set to: 14
  1667   001AA6  0012               	return		;funcret
  1668   001AA8                     __end_of_I2C_2_Master_Idle:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _I2C_2_Master_Init *****************
  1672 ;; Defined at:
  1673 ;;		line 4 in file "i2c.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_color_click_init
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text15
  1702   001A56                     __ptext15:
  1703                           	callstack 0
  1704   001A56                     _I2C_2_Master_Init:
  1705                           	callstack 28
  1706   001A56                     
  1707                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1708   001A56  010E               	movlb	14	; () banked
  1709   001A58  51D9               	movf	217,w,b	;volatile
  1710   001A5A  0BF0               	andlw	-16
  1711   001A5C  0908               	iorlw	8
  1712   001A5E  6FD9               	movwf	217,b	;volatile
  1713   001A60                     
  1714                           ; BSR set to: 14
  1715                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1716   001A60  8BD9               	bsf	217,5,b	;volatile
  1717                           
  1718                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1719   001A62  0E9F               	movlw	159
  1720   001A64  6FD6               	movwf	214,b	;volatile
  1721   001A66                     
  1722                           ; BSR set to: 14
  1723                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1724   001A66  8A84               	bsf	132,5,c	;volatile
  1725   001A68                     
  1726                           ; BSR set to: 14
  1727                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1728   001A68  8C84               	bsf	132,6,c	;volatile
  1729   001A6A                     
  1730                           ; BSR set to: 14
  1731                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1732   001A6A  9BA7               	bcf	167,5,b	;volatile
  1733   001A6C                     
  1734                           ; BSR set to: 14
  1735                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1736   001A6C  9DA7               	bcf	167,6,b	;volatile
  1737                           
  1738                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1739   001A6E  0E1D               	movlw	29
  1740   001A70  6F1D               	movwf	29,b	;volatile
  1741                           
  1742                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1743   001A72  0E1E               	movlw	30
  1744   001A74  6F1C               	movwf	28,b	;volatile
  1745                           
  1746                           ;i2c.c: 18:   RD5PPS=0x1C;
  1747   001A76  0E1C               	movlw	28
  1748   001A78  6F6F               	movwf	111,b	;volatile
  1749                           
  1750                           ;i2c.c: 19:   RD6PPS=0x1B;
  1751   001A7A  0E1B               	movlw	27
  1752   001A7C  6F70               	movwf	112,b	;volatile
  1753   001A7E                     
  1754                           ; BSR set to: 14
  1755   001A7E  0012               	return		;funcret
  1756   001A80                     __end_of_I2C_2_Master_Init:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _colorVal2String *****************
  1760 ;; Defined at:
  1761 ;;		line 98 in file "color.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  buf             2   25[BANK0 ] PTR unsigned char 
  1764 ;;		 -> main@buf(100), 
  1765 ;;  temp            2   27[BANK0 ] PTR struct RGBC_val
  1766 ;;		 -> main@RGBC(8), 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;		None
  1769 ;; Return value:  Size  Location     Type
  1770 ;;                  1    wreg      unsigned char 
  1771 ;; Registers used:
  1772 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1773 ;; Tracked objects:
  1774 ;;		On entry : 0/0
  1775 ;;		On exit  : 0/0
  1776 ;;		Unchanged: 0/0
  1777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1778 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1781 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1782 ;;Total ram usage:        4 bytes
  1783 ;; Hardware stack levels used: 1
  1784 ;; Hardware stack levels required when called: 9
  1785 ;; This function calls:
  1786 ;;		_RGBC2Serial
  1787 ;;		_sprintf
  1788 ;; This function is called by:
  1789 ;;		_main
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text16
  1794   001610                     __ptext16:
  1795                           	callstack 0
  1796   001610                     _colorVal2String:
  1797                           	callstack 21
  1798   001610                     
  1799                           ;color.c: 99:     sprintf(buf,"RGBC:%i %i %i %i\n",temp->R, temp->G, temp->B, temp->C);
  1800   001610  C079  F060         	movff	colorVal2String@buf,sprintf@s
  1801   001614  C07A  F061         	movff	colorVal2String@buf+1,sprintf@s+1
  1802   001618  0E01               	movlw	low STR_1
  1803   00161A  0100               	movlb	0	; () banked
  1804   00161C  6F62               	movwf	sprintf@fmt& (0+255),b
  1805   00161E  0E0E               	movlw	high STR_1
  1806   001620  6F63               	movwf	(sprintf@fmt+1)& (0+255),b
  1807   001622  C07B  FFD9         	movff	colorVal2String@temp,fsr2l
  1808   001626  C07C  FFDA         	movff	colorVal2String@temp+1,fsr2h
  1809   00162A  CFDE F064          	movff	postinc2,?_sprintf+4
  1810   00162E  CFDD F065          	movff	postdec2,?_sprintf+5
  1811   001632  EE20 F002          	lfsr	2,2
  1812   001636  517B               	movf	colorVal2String@temp& (0+255),w,b
  1813   001638  26D9               	addwf	fsr2l,f,c
  1814   00163A  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1815   00163C  22DA               	addwfc	fsr2h,f,c
  1816   00163E  CFDE F066          	movff	postinc2,?_sprintf+6
  1817   001642  CFDD F067          	movff	postdec2,?_sprintf+7
  1818   001646  EE20 F004          	lfsr	2,4
  1819   00164A  517B               	movf	colorVal2String@temp& (0+255),w,b
  1820   00164C  26D9               	addwf	fsr2l,f,c
  1821   00164E  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1822   001650  22DA               	addwfc	fsr2h,f,c
  1823   001652  CFDE F068          	movff	postinc2,?_sprintf+8
  1824   001656  CFDD F069          	movff	postdec2,?_sprintf+9
  1825   00165A  EE20 F006          	lfsr	2,6
  1826   00165E  517B               	movf	colorVal2String@temp& (0+255),w,b
  1827   001660  26D9               	addwf	fsr2l,f,c
  1828   001662  517C               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1829   001664  22DA               	addwfc	fsr2h,f,c
  1830   001666  CFDE F06A          	movff	postinc2,?_sprintf+10
  1831   00166A  CFDD F06B          	movff	postdec2,?_sprintf+11
  1832   00166E  EC6F  F00B         	call	_sprintf	;wreg free
  1833   001672                     
  1834                           ;color.c: 100:     RGBC2Serial(buf);
  1835   001672  C079  F007         	movff	colorVal2String@buf,RGBC2Serial@str
  1836   001676  C07A  F008         	movff	colorVal2String@buf+1,RGBC2Serial@str+1
  1837   00167A  EC54  F00D         	call	_RGBC2Serial	;wreg free
  1838   00167E  0012               	return		;funcret
  1839   001680                     __end_of_colorVal2String:
  1840                           	callstack 0
  1841                           
  1842 ;; *************** function _sprintf *****************
  1843 ;; Defined at:
  1844 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;  s               2    0[BANK0 ] PTR unsigned char 
  1847 ;;		 -> main@buf(100), 
  1848 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1849 ;;		 -> STR_1(18), 
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;  f              11   14[BANK0 ] struct _IO_FILE
  1852 ;;  ap              2   12[BANK0 ] PTR void [1]
  1853 ;;		 -> ?_sprintf(2), 
  1854 ;;  ret             2    0        int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2    0[BANK0 ] int 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1864 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1867 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1868 ;;Total ram usage:       25 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 8
  1871 ;; This function calls:
  1872 ;;		_vfprintf
  1873 ;; This function is called by:
  1874 ;;		_colorVal2String
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text17
  1879   0016DE                     __ptext17:
  1880                           	callstack 0
  1881   0016DE                     _sprintf:
  1882                           	callstack 21
  1883   0016DE  0E64               	movlw	low (?_sprintf+4)
  1884   0016E0  0100               	movlb	0	; () banked
  1885   0016E2  6F6C               	movwf	sprintf@ap& (0+255),b
  1886   0016E4  0E00               	movlw	high (?_sprintf+4)
  1887   0016E6  6F6D               	movwf	(sprintf@ap+1)& (0+255),b
  1888   0016E8  C060  F06E         	movff	sprintf@s,sprintf@f
  1889   0016EC  C061  F06F         	movff	sprintf@s+1,sprintf@f+1
  1890   0016F0                     
  1891                           ; BSR set to: 0
  1892   0016F0  0E00               	movlw	0
  1893   0016F2  6F72               	movwf	(sprintf@f+4)& (0+255),b
  1894   0016F4  0E00               	movlw	0
  1895   0016F6  6F71               	movwf	(sprintf@f+3)& (0+255),b
  1896   0016F8                     
  1897                           ; BSR set to: 0
  1898   0016F8  0E00               	movlw	0
  1899   0016FA  6F78               	movwf	(sprintf@f+10)& (0+255),b
  1900   0016FC  0E00               	movlw	0
  1901   0016FE  6F77               	movwf	(sprintf@f+9)& (0+255),b
  1902   001700                     
  1903                           ; BSR set to: 0
  1904   001700  0E6E               	movlw	low sprintf@f
  1905   001702  6E52               	movwf	vfprintf@fp^0,c
  1906   001704  0E00               	movlw	high sprintf@f
  1907   001706  6E53               	movwf	(vfprintf@fp+1)^0,c
  1908   001708  C062  F054         	movff	sprintf@fmt,vfprintf@fmt
  1909   00170C  C063  F055         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1910   001710  0E6C               	movlw	low sprintf@ap
  1911   001712  6E56               	movwf	vfprintf@ap^0,c
  1912   001714  0E00               	movlw	high sprintf@ap
  1913   001716  6E57               	movwf	(vfprintf@ap+1)^0,c
  1914   001718  EC38  F00C         	call	_vfprintf	;wreg free
  1915   00171C  0100               	movlb	0	; () banked
  1916   00171E  5171               	movf	(sprintf@f+3)& (0+255),w,b
  1917   001720  2560               	addwf	sprintf@s& (0+255),w,b
  1918   001722  6ED9               	movwf	fsr2l,c
  1919   001724  5172               	movf	(sprintf@f+4)& (0+255),w,b
  1920   001726  2161               	addwfc	(sprintf@s+1)& (0+255),w,b
  1921   001728  6EDA               	movwf	fsr2h,c
  1922   00172A  0E00               	movlw	0
  1923   00172C  6EDF               	movwf	indf2,c
  1924   00172E                     
  1925                           ; BSR set to: 0
  1926   00172E  0012               	return		;funcret
  1927   001730                     __end_of_sprintf:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _vfprintf *****************
  1931 ;; Defined at:
  1932 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
  1935 ;;		 -> sprintf@f(11), 
  1936 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
  1937 ;;		 -> STR_1(18), 
  1938 ;;  ap              2   85[COMRAM] PTR PTR void 
  1939 ;;		 -> sprintf@ap(2), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
  1942 ;;		 -> STR_1(18), 
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  2   81[COMRAM] int 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;Total ram usage:        8 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 7
  1959 ;; This function calls:
  1960 ;;		_vfpfcnvrt
  1961 ;; This function is called by:
  1962 ;;		_sprintf
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text18
  1967   001870                     __ptext18:
  1968                           	callstack 0
  1969   001870                     _vfprintf:
  1970                           	callstack 21
  1971   001870                     
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1973   001870  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
  1974   001874  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1977   001878  EF4C  F00C         	goto	l1963
  1978   00187C                     l1961:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1981   00187C  C052  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1982   001880  C053  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1983   001884  0E58               	movlw	low vfprintf@cfmt
  1984   001886  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1985   001888  0E00               	movlw	high vfprintf@cfmt
  1986   00188A  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1987   00188C  C056  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1988   001890  C057  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1989   001894  ECBF  F009         	call	_vfpfcnvrt	;wreg free
  1990   001898                     l1963:
  1991                           
  1992                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1993   001898  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
  1994   00189C  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1995   0018A0                     	if	0	;tblptru may be non-zero
  1996   0018A0                     	endif
  1997   0018A0                     	if	0	;tblptru may be non-zero
  1998   0018A0                     	endif
  1999   0018A0  0008               	tblrd		*
  2000   0018A2  50F5               	movf	tablat,w,c
  2001   0018A4  0900               	iorlw	0
  2002   0018A6  A4D8               	btfss	status,2,c
  2003   0018A8  EF58  F00C         	goto	u1011
  2004   0018AC  EF5A  F00C         	goto	u1010
  2005   0018B0                     u1011:
  2006   0018B0  EF3E  F00C         	goto	l1961
  2007   0018B4                     u1010:
  2008   0018B4                     
  2009                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2010   0018B4  0E00               	movlw	0
  2011   0018B6  6E53               	movwf	(?_vfprintf+1)^0,c
  2012   0018B8  0E00               	movlw	0
  2013   0018BA  6E52               	movwf	?_vfprintf^0,c
  2014   0018BC  0012               	return		;funcret
  2015   0018BE                     __end_of_vfprintf:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _vfpfcnvrt *****************
  2019 ;; Defined at:
  2020 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  2023 ;;		 -> sprintf@f(11), 
  2024 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  2025 ;;		 -> vfprintf@cfmt(2), 
  2026 ;;  ap              2   67[COMRAM] PTR PTR void 
  2027 ;;		 -> sprintf@ap(2), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  convarg         8   71[COMRAM] struct .
  2030 ;;  cp              2   79[COMRAM] PTR unsigned char 
  2031 ;;		 -> STR_1(18), 
  2032 ;;  i               2    0        int 
  2033 ;;  done            2    0        int 
  2034 ;;  c               1    0        unsigned char 
  2035 ;; Return value:  Size  Location     Type
  2036 ;;                  1    wreg      void 
  2037 ;; Registers used:
  2038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2039 ;; Tracked objects:
  2040 ;;		On entry : 0/0
  2041 ;;		On exit  : 0/0
  2042 ;;		Unchanged: 0/0
  2043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2044 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2045 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2046 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2047 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2048 ;;Total ram usage:       18 bytes
  2049 ;; Hardware stack levels used: 1
  2050 ;; Hardware stack levels required when called: 6
  2051 ;; This function calls:
  2052 ;;		_dtoa
  2053 ;;		_fputc
  2054 ;; This function is called by:
  2055 ;;		_vfprintf
  2056 ;; This function uses a non-reentrant model
  2057 ;;
  2058                           
  2059                           	psect	text19
  2060   00137E                     __ptext19:
  2061                           	callstack 0
  2062   00137E                     _vfpfcnvrt:
  2063                           	callstack 21
  2064   00137E                     
  2065                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2066   00137E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2067   001382  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2068   001386  CFDE FFF6          	movff	postinc2,tblptrl
  2069   00138A  CFDD FFF7          	movff	postdec2,tblptrh
  2070   00138E                     	if	0	;tblptru may be non-zero
  2071   00138E                     	endif
  2072   00138E                     	if	0	;tblptru may be non-zero
  2073   00138E                     	endif
  2074   00138E  0008               	tblrd		*
  2075   001390  50F5               	movf	tablat,w,c
  2076   001392  0A25               	xorlw	37
  2077   001394  A4D8               	btfss	status,2,c
  2078   001396  EFCF  F009         	goto	u951
  2079   00139A  EFD1  F009         	goto	u950
  2080   00139E                     u951:
  2081   00139E  EF51  F00A         	goto	l1915
  2082   0013A2                     u950:
  2083   0013A2                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2085   0013A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2086   0013A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2087   0013AA  2ADE               	incf	postinc2,f,c
  2088   0013AC  0E00               	movlw	0
  2089   0013AE  22DD               	addwfc	postdec2,f,c
  2090   0013B0                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2092   0013B0  0E00               	movlw	0
  2093   0013B2  0100               	movlb	0	; () banked
  2094   0013B4  6FEA               	movwf	(_width+1)& (0+255),b
  2095   0013B6  0E00               	movlw	0
  2096   0013B8  6FE9               	movwf	_width& (0+255),b
  2097   0013BA  C0E9  F0EF         	movff	_width,_flags
  2098   0013BE                     
  2099                           ; BSR set to: 0
  2100                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2101   0013BE  69EB               	setf	_prec& (0+255),b
  2102   0013C0  69EC               	setf	(_prec+1)& (0+255),b
  2103   0013C2                     
  2104                           ; BSR set to: 0
  2105                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2106   0013C2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2107   0013C6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2108   0013CA  CFDE F050          	movff	postinc2,vfpfcnvrt@cp
  2109   0013CE  CFDD F051          	movff	postdec2,vfpfcnvrt@cp+1
  2110   0013D2                     
  2111                           ; BSR set to: 0
  2112                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2113   0013D2  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2114   0013D6  C051  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2115   0013DA                     	if	0	;tblptru may be non-zero
  2116   0013DA                     	endif
  2117   0013DA                     	if	0	;tblptru may be non-zero
  2118   0013DA                     	endif
  2119   0013DA  0008               	tblrd		*
  2120   0013DC  50F5               	movf	tablat,w,c
  2121   0013DE  0A64               	xorlw	100
  2122   0013E0  B4D8               	btfsc	status,2,c
  2123   0013E2  EFF5  F009         	goto	u961
  2124   0013E6  EFF7  F009         	goto	u960
  2125   0013EA                     u961:
  2126   0013EA  EF05  F00A         	goto	l1905
  2127   0013EE                     u960:
  2128   0013EE                     
  2129                           ; BSR set to: 0
  2130   0013EE  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2131   0013F2  C051  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2132   0013F6                     	if	0	;tblptru may be non-zero
  2133   0013F6                     	endif
  2134   0013F6                     	if	0	;tblptru may be non-zero
  2135   0013F6                     	endif
  2136   0013F6  0008               	tblrd		*
  2137   0013F8  50F5               	movf	tablat,w,c
  2138   0013FA  0A69               	xorlw	105
  2139   0013FC  A4D8               	btfss	status,2,c
  2140   0013FE  EF03  F00A         	goto	u971
  2141   001402  EF05  F00A         	goto	u970
  2142   001406                     u971:
  2143   001406  EF48  F00A         	goto	l1911
  2144   00140A                     u970:
  2145   00140A                     l1905:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2149   00140A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2150   00140E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2151   001412  CFDF F046          	movff	indf2,??_vfpfcnvrt
  2152   001416  0E02               	movlw	2
  2153   001418  26DE               	addwf	postinc2,f,c
  2154   00141A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  2155   00141E  0E00               	movlw	0
  2156   001420  22DD               	addwfc	postdec2,f,c
  2157   001422  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2158   001426  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2159   00142A  CFDE F048          	movff	postinc2,vfpfcnvrt@convarg
  2160   00142E  CFDD F049          	movff	postdec2,vfpfcnvrt@convarg+1
  2161   001432  0E00               	movlw	0
  2162   001434  BE49               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2163   001436  0EFF               	movlw	-1
  2164   001438  6E4A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2165   00143A  6E4B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2166   00143C  6E4C               	movwf	(vfpfcnvrt@convarg+4)^0,c
  2167   00143E  6E4D               	movwf	(vfpfcnvrt@convarg+5)^0,c
  2168   001440  6E4E               	movwf	(vfpfcnvrt@convarg+6)^0,c
  2169   001442  6E4F               	movwf	(vfpfcnvrt@convarg+7)^0,c
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2172   001444  0E01               	movlw	1
  2173   001446  2450               	addwf	vfpfcnvrt@cp^0,w,c
  2174   001448  6E46               	movwf	??_vfpfcnvrt^0,c
  2175   00144A  0E00               	movlw	0
  2176   00144C  2051               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2177   00144E  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  2178   001450  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2179   001454  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2180   001458  C046  FFDE         	movff	??_vfpfcnvrt,postinc2
  2181   00145C  C047  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2182   001460                     
  2183                           ; BSR set to: 0
  2184                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2185   001460  C040  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2186   001464  C041  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2187   001468  C048  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  2188   00146C  C049  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2189   001470  C04A  F021         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2190   001474  C04B  F022         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2191   001478  C04C  F023         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2192   00147C  C04D  F024         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2193   001480  C04E  F025         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2194   001484  C04F  F026         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2195   001488  EC0A  F007         	call	_dtoa	;wreg free
  2196   00148C  EF65  F00A         	goto	l1141
  2197   001490                     l1911:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2200   001490  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2201   001494  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2202   001498  2ADE               	incf	postinc2,f,c
  2203   00149A  0E00               	movlw	0
  2204   00149C  22DD               	addwfc	postdec2,f,c
  2205   00149E  EF65  F00A         	goto	l1141
  2206   0014A2                     l1915:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2209   0014A2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2210   0014A6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2211   0014AA  CFDE FFF6          	movff	postinc2,tblptrl
  2212   0014AE  CFDD FFF7          	movff	postdec2,tblptrh
  2213   0014B2                     	if	0	;tblptru may be non-zero
  2214   0014B2                     	endif
  2215   0014B2                     	if	0	;tblptru may be non-zero
  2216   0014B2                     	endif
  2217   0014B2  0008               	tblrd		*
  2218   0014B4  50F5               	movf	tablat,w,c
  2219   0014B6  6E02               	movwf	fputc@c^0,c
  2220   0014B8  6A03               	clrf	(fputc@c+1)^0,c
  2221   0014BA  C040  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2222   0014BE  C041  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2223   0014C2  EC66  F00A         	call	_fputc	;wreg free
  2224   0014C6  EF48  F00A         	goto	l1911
  2225   0014CA                     l1141:
  2226   0014CA  0012               	return		;funcret
  2227   0014CC                     __end_of_vfpfcnvrt:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _dtoa *****************
  2231 ;; Defined at:
  2232 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2235 ;;		 -> sprintf@f(11), 
  2236 ;;  d               8   30[COMRAM] long long 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  n               8   52[COMRAM] long long 
  2239 ;;  i               2   60[COMRAM] int 
  2240 ;;  w               2   50[COMRAM] int 
  2241 ;;  p               2   48[COMRAM] int 
  2242 ;;  s               1   62[COMRAM] unsigned char 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2252 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2255 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2256 ;;Total ram usage:       35 bytes
  2257 ;; Hardware stack levels used: 1
  2258 ;; Hardware stack levels required when called: 5
  2259 ;; This function calls:
  2260 ;;		___aodiv
  2261 ;;		___aomod
  2262 ;;		_abs
  2263 ;;		_pad
  2264 ;; This function is called by:
  2265 ;;		_vfpfcnvrt
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text20
  2270   000E14                     __ptext20:
  2271                           	callstack 0
  2272   000E14                     _dtoa:
  2273                           	callstack 21
  2274   000E14                     
  2275                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2276   000E14  C01F  F035         	movff	dtoa@d,dtoa@n
  2277   000E18  C020  F036         	movff	dtoa@d+1,dtoa@n+1
  2278   000E1C  C021  F037         	movff	dtoa@d+2,dtoa@n+2
  2279   000E20  C022  F038         	movff	dtoa@d+3,dtoa@n+3
  2280   000E24  C023  F039         	movff	dtoa@d+4,dtoa@n+4
  2281   000E28  C024  F03A         	movff	dtoa@d+5,dtoa@n+5
  2282   000E2C  C025  F03B         	movff	dtoa@d+6,dtoa@n+6
  2283   000E30  C026  F03C         	movff	dtoa@d+7,dtoa@n+7
  2284   000E34                     
  2285                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2286   000E34  BE3C               	btfsc	(dtoa@n+7)^0,7,c
  2287   000E36  EF1F  F007         	goto	u821
  2288   000E3A  EF22  F007         	goto	u820
  2289   000E3E                     u821:
  2290   000E3E  0E01               	movlw	1
  2291   000E40  EF23  F007         	goto	u830
  2292   000E44                     u820:
  2293   000E44  0E00               	movlw	0
  2294   000E46                     u830:
  2295   000E46  6E3F               	movwf	dtoa@s^0,c
  2296   000E48                     
  2297                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2298   000E48  503F               	movf	dtoa@s^0,w,c
  2299   000E4A  B4D8               	btfsc	status,2,c
  2300   000E4C  EF2A  F007         	goto	u841
  2301   000E50  EF2C  F007         	goto	u840
  2302   000E54                     u841:
  2303   000E54  EF3C  F007         	goto	l1839
  2304   000E58                     u840:
  2305   000E58                     
  2306                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2307   000E58  1E3C               	comf	(dtoa@n+7)^0,f,c
  2308   000E5A  1E3B               	comf	(dtoa@n+6)^0,f,c
  2309   000E5C  1E3A               	comf	(dtoa@n+5)^0,f,c
  2310   000E5E  1E39               	comf	(dtoa@n+4)^0,f,c
  2311   000E60  1E38               	comf	(dtoa@n+3)^0,f,c
  2312   000E62  1E37               	comf	(dtoa@n+2)^0,f,c
  2313   000E64  1E36               	comf	(dtoa@n+1)^0,f,c
  2314   000E66  6C35               	negf	dtoa@n^0,c
  2315   000E68  0E00               	movlw	0
  2316   000E6A  2236               	addwfc	(dtoa@n+1)^0,f,c
  2317   000E6C  2237               	addwfc	(dtoa@n+2)^0,f,c
  2318   000E6E  2238               	addwfc	(dtoa@n+3)^0,f,c
  2319   000E70  2239               	addwfc	(dtoa@n+4)^0,f,c
  2320   000E72  223A               	addwfc	(dtoa@n+5)^0,f,c
  2321   000E74  223B               	addwfc	(dtoa@n+6)^0,f,c
  2322   000E76  223C               	addwfc	(dtoa@n+7)^0,f,c
  2323   000E78                     l1839:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2326   000E78  0100               	movlb	0	; () banked
  2327   000E7A  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  2328   000E7C  EF4A  F007         	goto	u850
  2329   000E80  51EC               	movf	(_prec+1)& (0+255),w,b
  2330   000E82  E106               	bnz	u851
  2331   000E84  05EB               	decf	_prec& (0+255),w,b
  2332   000E86  B0D8               	btfsc	status,0,c
  2333   000E88  EF48  F007         	goto	u851
  2334   000E8C  EF4A  F007         	goto	u850
  2335   000E90                     u851:
  2336   000E90  EF50  F007         	goto	l1120
  2337   000E94                     u850:
  2338   000E94                     
  2339                           ; BSR set to: 0
  2340   000E94  0E00               	movlw	0
  2341   000E96  6E32               	movwf	(dtoa@p+1)^0,c
  2342   000E98  0E01               	movlw	1
  2343   000E9A  6E31               	movwf	dtoa@p^0,c
  2344   000E9C  EF54  F007         	goto	l1122
  2345   000EA0                     l1120:
  2346                           
  2347                           ; BSR set to: 0
  2348   000EA0  C0EB  F031         	movff	_prec,dtoa@p
  2349   000EA4  C0EC  F032         	movff	_prec+1,dtoa@p+1
  2350   000EA8                     l1122:
  2351                           
  2352                           ; BSR set to: 0
  2353                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2354   000EA8  C0E9  F033         	movff	_width,dtoa@w
  2355   000EAC  C0EA  F034         	movff	_width+1,dtoa@w+1
  2356   000EB0                     
  2357                           ; BSR set to: 0
  2358                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2359   000EB0  503F               	movf	dtoa@s^0,w,c
  2360   000EB2  B4D8               	btfsc	status,2,c
  2361   000EB4  EF5E  F007         	goto	u861
  2362   000EB8  EF60  F007         	goto	u860
  2363   000EBC                     u861:
  2364   000EBC  EF77  F007         	goto	l1123
  2365   000EC0                     u860:
  2366   000EC0                     
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2369   000EC0  0633               	decf	dtoa@w^0,f,c
  2370   000EC2  A0D8               	btfss	status,0,c
  2371   000EC4  0634               	decf	(dtoa@w+1)^0,f,c
  2372   000EC6                     
  2373                           ; BSR set to: 0
  2374                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2375   000EC6  503F               	movf	dtoa@s^0,w,c
  2376   000EC8  A4D8               	btfss	status,2,c
  2377   000ECA  EF69  F007         	goto	u871
  2378   000ECE  EF6B  F007         	goto	u870
  2379   000ED2                     u871:
  2380   000ED2  EF71  F007         	goto	l1851
  2381   000ED6                     u870:
  2382   000ED6                     
  2383                           ; BSR set to: 0
  2384   000ED6  0E00               	movlw	0
  2385   000ED8  6E30               	movwf	(_dtoa$2273+1)^0,c
  2386   000EDA  0E2B               	movlw	43
  2387   000EDC  6E2F               	movwf	_dtoa$2273^0,c
  2388   000EDE  EF75  F007         	goto	l1853
  2389   000EE2                     l1851:
  2390                           
  2391                           ; BSR set to: 0
  2392   000EE2  0E00               	movlw	0
  2393   000EE4  6E30               	movwf	(_dtoa$2273+1)^0,c
  2394   000EE6  0E2D               	movlw	45
  2395   000EE8  6E2F               	movwf	_dtoa$2273^0,c
  2396   000EEA                     l1853:
  2397                           
  2398                           ; BSR set to: 0
  2399   000EEA  C02F  F03F         	movff	_dtoa$2273,dtoa@s
  2400   000EEE                     l1123:
  2401                           
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2404   000EEE  0E00               	movlw	0
  2405   000EF0  6E3E               	movwf	(dtoa@i+1)^0,c
  2406   000EF2  0E1F               	movlw	31
  2407   000EF4  6E3D               	movwf	dtoa@i^0,c
  2408   000EF6                     
  2409                           ; BSR set to: 0
  2410                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2411   000EF6  0E00               	movlw	0
  2412   000EF8  0101               	movlb	1	; () banked
  2413   000EFA  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2414                           
  2415                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2416   000EFC  EFFC  F007         	goto	l1867
  2417   000F00                     l1857:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2420   000F00  063D               	decf	dtoa@i^0,f,c
  2421   000F02  A0D8               	btfss	status,0,c
  2422   000F04  063E               	decf	(dtoa@i+1)^0,f,c
  2423   000F06                     
  2424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2425   000F06  0E50               	movlw	low _dbuf
  2426   000F08  243D               	addwf	dtoa@i^0,w,c
  2427   000F0A  6ED9               	movwf	fsr2l,c
  2428   000F0C  0E01               	movlw	high _dbuf
  2429   000F0E  203E               	addwfc	(dtoa@i+1)^0,w,c
  2430   000F10  6EDA               	movwf	fsr2h,c
  2431   000F12  C035  F002         	movff	dtoa@n,___aomod@dividend
  2432   000F16  C036  F003         	movff	dtoa@n+1,___aomod@dividend+1
  2433   000F1A  C037  F004         	movff	dtoa@n+2,___aomod@dividend+2
  2434   000F1E  C038  F005         	movff	dtoa@n+3,___aomod@dividend+3
  2435   000F22  C039  F006         	movff	dtoa@n+4,___aomod@dividend+4
  2436   000F26  C03A  F007         	movff	dtoa@n+5,___aomod@dividend+5
  2437   000F2A  C03B  F008         	movff	dtoa@n+6,___aomod@dividend+6
  2438   000F2E  C03C  F009         	movff	dtoa@n+7,___aomod@dividend+7
  2439   000F32  0E0A               	movlw	10
  2440   000F34  6E0A               	movwf	___aomod@divisor^0,c
  2441   000F36  0E00               	movlw	0
  2442   000F38  6E0B               	movwf	(___aomod@divisor+1)^0,c
  2443   000F3A  0E00               	movlw	0
  2444   000F3C  6E0C               	movwf	(___aomod@divisor+2)^0,c
  2445   000F3E  0E00               	movlw	0
  2446   000F40  6E0D               	movwf	(___aomod@divisor+3)^0,c
  2447   000F42  0E00               	movlw	0
  2448   000F44  6E0E               	movwf	(___aomod@divisor+4)^0,c
  2449   000F46  0E00               	movlw	0
  2450   000F48  6E0F               	movwf	(___aomod@divisor+5)^0,c
  2451   000F4A  0E00               	movlw	0
  2452   000F4C  6E10               	movwf	(___aomod@divisor+6)^0,c
  2453   000F4E  0E00               	movlw	0
  2454   000F50  6E11               	movwf	(___aomod@divisor+7)^0,c
  2455   000F52  EC0D  F009         	call	___aomod	;wreg free
  2456   000F56  C002  F027         	movff	?___aomod,??_dtoa
  2457   000F5A  C003  F028         	movff	?___aomod+1,??_dtoa+1
  2458   000F5E  C004  F029         	movff	?___aomod+2,??_dtoa+2
  2459   000F62  C005  F02A         	movff	?___aomod+3,??_dtoa+3
  2460   000F66  C006  F02B         	movff	?___aomod+4,??_dtoa+4
  2461   000F6A  C007  F02C         	movff	?___aomod+5,??_dtoa+5
  2462   000F6E  C008  F02D         	movff	?___aomod+6,??_dtoa+6
  2463   000F72  C009  F02E         	movff	?___aomod+7,??_dtoa+7
  2464   000F76  C027  F014         	movff	??_dtoa,abs@a
  2465   000F7A  C028  F015         	movff	??_dtoa+1,abs@a+1
  2466   000F7E  ECA2  F00C         	call	_abs	;wreg free
  2467   000F82  5014               	movf	?_abs^0,w,c
  2468   000F84  0F30               	addlw	48
  2469   000F86  6EDF               	movwf	indf2,c
  2470   000F88                     
  2471                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2472   000F88  0631               	decf	dtoa@p^0,f,c
  2473   000F8A  A0D8               	btfss	status,0,c
  2474   000F8C  0632               	decf	(dtoa@p+1)^0,f,c
  2475   000F8E                     
  2476                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2477   000F8E  0633               	decf	dtoa@w^0,f,c
  2478   000F90  A0D8               	btfss	status,0,c
  2479   000F92  0634               	decf	(dtoa@w+1)^0,f,c
  2480   000F94                     
  2481                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2482   000F94  C035  F002         	movff	dtoa@n,___aodiv@dividend
  2483   000F98  C036  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  2484   000F9C  C037  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  2485   000FA0  C038  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  2486   000FA4  C039  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  2487   000FA8  C03A  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  2488   000FAC  C03B  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  2489   000FB0  C03C  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  2490   000FB4  0E0A               	movlw	10
  2491   000FB6  6E0A               	movwf	___aodiv@divisor^0,c
  2492   000FB8  0E00               	movlw	0
  2493   000FBA  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  2494   000FBC  0E00               	movlw	0
  2495   000FBE  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  2496   000FC0  0E00               	movlw	0
  2497   000FC2  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  2498   000FC4  0E00               	movlw	0
  2499   000FC6  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  2500   000FC8  0E00               	movlw	0
  2501   000FCA  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  2502   000FCC  0E00               	movlw	0
  2503   000FCE  6E10               	movwf	(___aodiv@divisor+6)^0,c
  2504   000FD0  0E00               	movlw	0
  2505   000FD2  6E11               	movwf	(___aodiv@divisor+7)^0,c
  2506   000FD4  EC49  F008         	call	___aodiv	;wreg free
  2507   000FD8  C002  F035         	movff	?___aodiv,dtoa@n
  2508   000FDC  C003  F036         	movff	?___aodiv+1,dtoa@n+1
  2509   000FE0  C004  F037         	movff	?___aodiv+2,dtoa@n+2
  2510   000FE4  C005  F038         	movff	?___aodiv+3,dtoa@n+3
  2511   000FE8  C006  F039         	movff	?___aodiv+4,dtoa@n+4
  2512   000FEC  C007  F03A         	movff	?___aodiv+5,dtoa@n+5
  2513   000FF0  C008  F03B         	movff	?___aodiv+6,dtoa@n+6
  2514   000FF4  C009  F03C         	movff	?___aodiv+7,dtoa@n+7
  2515   000FF8                     l1867:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2518   000FF8  BE3E               	btfsc	(dtoa@i+1)^0,7,c
  2519   000FFA  EF07  F008         	goto	u881
  2520   000FFE  503E               	movf	(dtoa@i+1)^0,w,c
  2521   001000  E108               	bnz	u880
  2522   001002  043D               	decf	dtoa@i^0,w,c
  2523   001004  A0D8               	btfss	status,0,c
  2524   001006  EF07  F008         	goto	u881
  2525   00100A  EF09  F008         	goto	u880
  2526   00100E                     u881:
  2527   00100E  EF25  F008         	goto	l1873
  2528   001012                     u880:
  2529   001012  5035               	movf	dtoa@n^0,w,c
  2530   001014  1036               	iorwf	(dtoa@n+1)^0,w,c
  2531   001016  1037               	iorwf	(dtoa@n+2)^0,w,c
  2532   001018  1038               	iorwf	(dtoa@n+3)^0,w,c
  2533   00101A  1039               	iorwf	(dtoa@n+4)^0,w,c
  2534   00101C  103A               	iorwf	(dtoa@n+5)^0,w,c
  2535   00101E  103B               	iorwf	(dtoa@n+6)^0,w,c
  2536   001020  103C               	iorwf	(dtoa@n+7)^0,w,c
  2537   001022  A4D8               	btfss	status,2,c
  2538   001024  EF16  F008         	goto	u891
  2539   001028  EF18  F008         	goto	u890
  2540   00102C                     u891:
  2541   00102C  EF80  F007         	goto	l1857
  2542   001030                     u890:
  2543   001030  BE32               	btfsc	(dtoa@p+1)^0,7,c
  2544   001032  EF25  F008         	goto	u900
  2545   001036  5032               	movf	(dtoa@p+1)^0,w,c
  2546   001038  E106               	bnz	u901
  2547   00103A  0431               	decf	dtoa@p^0,w,c
  2548   00103C  B0D8               	btfsc	status,0,c
  2549   00103E  EF23  F008         	goto	u901
  2550   001042  EF25  F008         	goto	u900
  2551   001046                     u901:
  2552   001046  EF80  F007         	goto	l1857
  2553   00104A                     u900:
  2554   00104A                     l1873:
  2555                           
  2556                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2557   00104A  503F               	movf	dtoa@s^0,w,c
  2558   00104C  B4D8               	btfsc	status,2,c
  2559   00104E  EF2B  F008         	goto	u911
  2560   001052  EF2D  F008         	goto	u910
  2561   001056                     u911:
  2562   001056  EF38  F008         	goto	l1879
  2563   00105A                     u910:
  2564   00105A                     
  2565                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2566   00105A  063D               	decf	dtoa@i^0,f,c
  2567   00105C  A0D8               	btfss	status,0,c
  2568   00105E  063E               	decf	(dtoa@i+1)^0,f,c
  2569   001060                     
  2570                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2571   001060  0E50               	movlw	low _dbuf
  2572   001062  243D               	addwf	dtoa@i^0,w,c
  2573   001064  6ED9               	movwf	fsr2l,c
  2574   001066  0E01               	movlw	high _dbuf
  2575   001068  203E               	addwfc	(dtoa@i+1)^0,w,c
  2576   00106A  6EDA               	movwf	fsr2h,c
  2577   00106C  C03F  FFDF         	movff	dtoa@s,indf2
  2578   001070                     l1879:
  2579                           
  2580                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2581   001070  C01D  F012         	movff	dtoa@fp,pad@fp
  2582   001074  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2583   001078  0E50               	movlw	low _dbuf
  2584   00107A  243D               	addwf	dtoa@i^0,w,c
  2585   00107C  6E14               	movwf	pad@buf^0,c
  2586   00107E  0E01               	movlw	high _dbuf
  2587   001080  203E               	addwfc	(dtoa@i+1)^0,w,c
  2588   001082  6E15               	movwf	(pad@buf+1)^0,c
  2589   001084  C033  F016         	movff	dtoa@w,pad@p
  2590   001088  C034  F017         	movff	dtoa@w+1,pad@p+1
  2591   00108C  ECCB  F00A         	call	_pad	;wreg free
  2592   001090  0012               	return		;funcret
  2593   001092                     __end_of_dtoa:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function _pad *****************
  2597 ;; Defined at:
  2598 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2601 ;;		 -> sprintf@f(11), 
  2602 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2603 ;;		 -> dbuf(32), 
  2604 ;;  p               2   21[COMRAM] int 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  w               2   26[COMRAM] int 
  2607 ;;  i               2   24[COMRAM] int 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      void 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2617 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2618 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2620 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2621 ;;Total ram usage:       11 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 4
  2624 ;; This function calls:
  2625 ;;		_fputc
  2626 ;;		_fputs
  2627 ;; This function is called by:
  2628 ;;		_dtoa
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text21
  2633   001596                     __ptext21:
  2634                           	callstack 0
  2635   001596                     _pad:
  2636                           	callstack 21
  2637   001596                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2639   001596  BE17               	btfsc	(pad@p+1)^0,7,c
  2640   001598  EFD0  F00A         	goto	u791
  2641   00159C  EFD2  F00A         	goto	u790
  2642   0015A0                     u791:
  2643   0015A0  EFD8  F00A         	goto	l1817
  2644   0015A4                     u790:
  2645   0015A4  C016  F01B         	movff	pad@p,pad@w
  2646   0015A8  C017  F01C         	movff	pad@p+1,pad@w+1
  2647   0015AC  EFDC  F00A         	goto	l1111
  2648   0015B0                     l1817:
  2649   0015B0  0E00               	movlw	0
  2650   0015B2  6E1C               	movwf	(pad@w+1)^0,c
  2651   0015B4  0E00               	movlw	0
  2652   0015B6  6E1B               	movwf	pad@w^0,c
  2653   0015B8                     l1111:
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2656   0015B8  0E00               	movlw	0
  2657   0015BA  6E1A               	movwf	(pad@i+1)^0,c
  2658   0015BC  0E00               	movlw	0
  2659   0015BE  6E19               	movwf	pad@i^0,c
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2662   0015C0  EFEE  F00A         	goto	l1823
  2663   0015C4                     l1819:
  2664                           
  2665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2666   0015C4  0E00               	movlw	0
  2667   0015C6  6E03               	movwf	(fputc@c+1)^0,c
  2668   0015C8  0E20               	movlw	32
  2669   0015CA  6E02               	movwf	fputc@c^0,c
  2670   0015CC  C012  F004         	movff	pad@fp,fputc@fp
  2671   0015D0  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2672   0015D4  EC66  F00A         	call	_fputc	;wreg free
  2673   0015D8                     
  2674                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2675   0015D8  4A19               	infsnz	pad@i^0,f,c
  2676   0015DA  2A1A               	incf	(pad@i+1)^0,f,c
  2677   0015DC                     l1823:
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2680   0015DC  501B               	movf	pad@w^0,w,c
  2681   0015DE  5C19               	subwf	pad@i^0,w,c
  2682   0015E0  501A               	movf	(pad@i+1)^0,w,c
  2683   0015E2  0A80               	xorlw	128
  2684   0015E4  6E18               	movwf	??_pad^0,c
  2685   0015E6  501C               	movf	(pad@w+1)^0,w,c
  2686   0015E8  0A80               	xorlw	128
  2687   0015EA  5818               	subwfb	??_pad^0,w,c
  2688   0015EC  A0D8               	btfss	status,0,c
  2689   0015EE  EFFB  F00A         	goto	u801
  2690   0015F2  EFFD  F00A         	goto	u800
  2691   0015F6                     u801:
  2692   0015F6  EFE2  F00A         	goto	l1819
  2693   0015FA                     u800:
  2694   0015FA                     
  2695                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2696   0015FA  C014  F00B         	movff	pad@buf,fputs@s
  2697   0015FE  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2698   001602  C012  F00D         	movff	pad@fp,fputs@fp
  2699   001606  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2700   00160A  EC5F  F00C         	call	_fputs	;wreg free
  2701   00160E  0012               	return		;funcret
  2702   001610                     __end_of_pad:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function _fputs *****************
  2706 ;; Defined at:
  2707 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2710 ;;		 -> dbuf(32), 
  2711 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2712 ;;		 -> sprintf@f(11), 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  i               2   15[COMRAM] int 
  2715 ;;  c               1   14[COMRAM] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  2   10[COMRAM] int 
  2718 ;; Registers used:
  2719 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2726 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2728 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2729 ;;Total ram usage:        7 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 3
  2732 ;; This function calls:
  2733 ;;		_fputc
  2734 ;; This function is called by:
  2735 ;;		_pad
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text22
  2740   0018BE                     __ptext22:
  2741                           	callstack 0
  2742   0018BE                     _fputs:
  2743                           	callstack 21
  2744   0018BE  0E00               	movlw	0
  2745   0018C0  6E11               	movwf	(fputs@i+1)^0,c
  2746   0018C2  0E00               	movlw	0
  2747   0018C4  6E10               	movwf	fputs@i^0,c
  2748   0018C6  EF70  F00C         	goto	l1731
  2749   0018CA                     l1727:
  2750   0018CA  C00F  F002         	movff	fputs@c,fputc@c
  2751   0018CE  6A03               	clrf	(fputc@c+1)^0,c
  2752   0018D0  C00D  F004         	movff	fputs@fp,fputc@fp
  2753   0018D4  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  2754   0018D8  EC66  F00A         	call	_fputc	;wreg free
  2755   0018DC  4A10               	infsnz	fputs@i^0,f,c
  2756   0018DE  2A11               	incf	(fputs@i+1)^0,f,c
  2757   0018E0                     l1731:
  2758   0018E0  5010               	movf	fputs@i^0,w,c
  2759   0018E2  240B               	addwf	fputs@s^0,w,c
  2760   0018E4  6ED9               	movwf	fsr2l,c
  2761   0018E6  5011               	movf	(fputs@i+1)^0,w,c
  2762   0018E8  200C               	addwfc	(fputs@s+1)^0,w,c
  2763   0018EA  6EDA               	movwf	fsr2h,c
  2764   0018EC  50DF               	movf	indf2,w,c
  2765   0018EE  6E0F               	movwf	fputs@c^0,c
  2766   0018F0  500F               	movf	fputs@c^0,w,c
  2767   0018F2  A4D8               	btfss	status,2,c
  2768   0018F4  EF7E  F00C         	goto	u651
  2769   0018F8  EF80  F00C         	goto	u650
  2770   0018FC                     u651:
  2771   0018FC  EF65  F00C         	goto	l1727
  2772   001900                     u650:
  2773   001900  0012               	return		;funcret
  2774   001902                     __end_of_fputs:
  2775                           	callstack 0
  2776                           
  2777 ;; *************** function _fputc *****************
  2778 ;; Defined at:
  2779 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  c               2    1[COMRAM] int 
  2782 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  2783 ;;		 -> sprintf@f(11), 
  2784 ;; Auto vars:     Size  Location     Type
  2785 ;;		None
  2786 ;; Return value:  Size  Location     Type
  2787 ;;                  2    1[COMRAM] int 
  2788 ;; Registers used:
  2789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2790 ;; Tracked objects:
  2791 ;;		On entry : 0/0
  2792 ;;		On exit  : 0/0
  2793 ;;		Unchanged: 0/0
  2794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2795 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2797 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2798 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2799 ;;Total ram usage:        9 bytes
  2800 ;; Hardware stack levels used: 1
  2801 ;; Hardware stack levels required when called: 2
  2802 ;; This function calls:
  2803 ;;		_putch
  2804 ;; This function is called by:
  2805 ;;		_pad
  2806 ;;		_vfpfcnvrt
  2807 ;;		_fputs
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text23
  2812   0014CC                     __ptext23:
  2813                           	callstack 0
  2814   0014CC                     _fputc:
  2815                           	callstack 24
  2816   0014CC  5004               	movf	fputc@fp^0,w,c
  2817   0014CE  1005               	iorwf	(fputc@fp+1)^0,w,c
  2818   0014D0  B4D8               	btfsc	status,2,c
  2819   0014D2  EF6D  F00A         	goto	u611
  2820   0014D6  EF6F  F00A         	goto	u610
  2821   0014DA                     u611:
  2822   0014DA  EF78  F00A         	goto	l1715
  2823   0014DE                     u610:
  2824   0014DE  5004               	movf	fputc@fp^0,w,c
  2825   0014E0  1005               	iorwf	(fputc@fp+1)^0,w,c
  2826   0014E2  A4D8               	btfss	status,2,c
  2827   0014E4  EF76  F00A         	goto	u621
  2828   0014E8  EF78  F00A         	goto	u620
  2829   0014EC                     u621:
  2830   0014EC  EF7D  F00A         	goto	l1717
  2831   0014F0                     u620:
  2832   0014F0                     l1715:
  2833   0014F0  5002               	movf	fputc@c^0,w,c
  2834   0014F2  ECA9  F00D         	call	_putch
  2835   0014F6  EFCA  F00A         	goto	l1166
  2836   0014FA                     l1717:
  2837   0014FA  EE20 F009          	lfsr	2,9
  2838   0014FE  5004               	movf	fputc@fp^0,w,c
  2839   001500  26D9               	addwf	fsr2l,f,c
  2840   001502  5005               	movf	(fputc@fp+1)^0,w,c
  2841   001504  22DA               	addwfc	fsr2h,f,c
  2842   001506  50DE               	movf	postinc2,w,c
  2843   001508  10DE               	iorwf	postinc2,w,c
  2844   00150A  B4D8               	btfsc	status,2,c
  2845   00150C  EF8A  F00A         	goto	u631
  2846   001510  EF8C  F00A         	goto	u630
  2847   001514                     u631:
  2848   001514  EFA7  F00A         	goto	l1721
  2849   001518                     u630:
  2850   001518  EE20 F009          	lfsr	2,9
  2851   00151C  5004               	movf	fputc@fp^0,w,c
  2852   00151E  26D9               	addwf	fsr2l,f,c
  2853   001520  5005               	movf	(fputc@fp+1)^0,w,c
  2854   001522  22DA               	addwfc	fsr2h,f,c
  2855   001524  EE10 F003          	lfsr	1,3
  2856   001528  5004               	movf	fputc@fp^0,w,c
  2857   00152A  26E1               	addwf	fsr1l,f,c
  2858   00152C  5005               	movf	(fputc@fp+1)^0,w,c
  2859   00152E  22E2               	addwfc	fsr1h,f,c
  2860   001530  50DE               	movf	postinc2,w,c
  2861   001532  5CE6               	subwf	postinc1,w,c
  2862   001534  50E6               	movf	postinc1,w,c
  2863   001536  0A80               	xorlw	128
  2864   001538  6E0A               	movwf	(??_fputc+4)^0,c
  2865   00153A  50DE               	movf	postinc2,w,c
  2866   00153C  0A80               	xorlw	128
  2867   00153E  580A               	subwfb	(??_fputc+4)^0,w,c
  2868   001540  B0D8               	btfsc	status,0,c
  2869   001542  EFA5  F00A         	goto	u641
  2870   001546  EFA7  F00A         	goto	u640
  2871   00154A                     u641:
  2872   00154A  EFCA  F00A         	goto	l1166
  2873   00154E                     u640:
  2874   00154E                     l1721:
  2875   00154E  EE20 F003          	lfsr	2,3
  2876   001552  5004               	movf	fputc@fp^0,w,c
  2877   001554  26D9               	addwf	fsr2l,f,c
  2878   001556  5005               	movf	(fputc@fp+1)^0,w,c
  2879   001558  22DA               	addwfc	fsr2h,f,c
  2880   00155A  CFDE F006          	movff	postinc2,??_fputc
  2881   00155E  CFDD F007          	movff	postdec2,??_fputc+1
  2882   001562  C004  FFD9         	movff	fputc@fp,fsr2l
  2883   001566  C005  FFDA         	movff	fputc@fp+1,fsr2h
  2884   00156A  CFDE F008          	movff	postinc2,??_fputc+2
  2885   00156E  CFDD F009          	movff	postdec2,??_fputc+3
  2886   001572  5006               	movf	??_fputc^0,w,c
  2887   001574  2408               	addwf	(??_fputc+2)^0,w,c
  2888   001576  6ED9               	movwf	fsr2l,c
  2889   001578  5007               	movf	(??_fputc+1)^0,w,c
  2890   00157A  2009               	addwfc	(??_fputc+3)^0,w,c
  2891   00157C  6EDA               	movwf	fsr2h,c
  2892   00157E  C002  FFDF         	movff	fputc@c,indf2
  2893   001582  EE20 F003          	lfsr	2,3
  2894   001586  5004               	movf	fputc@fp^0,w,c
  2895   001588  26D9               	addwf	fsr2l,f,c
  2896   00158A  5005               	movf	(fputc@fp+1)^0,w,c
  2897   00158C  22DA               	addwfc	fsr2h,f,c
  2898   00158E  2ADE               	incf	postinc2,f,c
  2899   001590  0E00               	movlw	0
  2900   001592  22DD               	addwfc	postdec2,f,c
  2901   001594                     l1166:
  2902   001594  0012               	return		;funcret
  2903   001596                     __end_of_fputc:
  2904                           	callstack 0
  2905                           
  2906 ;; *************** function _putch *****************
  2907 ;; Defined at:
  2908 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  c               1    wreg     unsigned char 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  c               1    0[COMRAM] unsigned char 
  2913 ;; Return value:  Size  Location     Type
  2914 ;;                  1    wreg      void 
  2915 ;; Registers used:
  2916 ;;		wreg
  2917 ;; Tracked objects:
  2918 ;;		On entry : 0/0
  2919 ;;		On exit  : 0/0
  2920 ;;		Unchanged: 0/0
  2921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2926 ;;Total ram usage:        0 bytes
  2927 ;; Hardware stack levels used: 1
  2928 ;; Hardware stack levels required when called: 1
  2929 ;; This function calls:
  2930 ;;		Nothing
  2931 ;; This function is called by:
  2932 ;;		_fputc
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text24
  2937   001B52                     __ptext24:
  2938                           	callstack 0
  2939   001B52                     _putch:
  2940                           	callstack 24
  2941   001B52  0012               	return		;funcret
  2942   001B54                     __end_of_putch:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _abs *****************
  2946 ;; Defined at:
  2947 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  a               2   19[COMRAM] int 
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  2   19[COMRAM] int 
  2954 ;; Registers used:
  2955 ;;		wreg, status,2, status,0
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2961 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2963 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2964 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2965 ;;Total ram usage:        4 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 1
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_dtoa
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text25
  2976   001944                     __ptext25:
  2977                           	callstack 0
  2978   001944                     _abs:
  2979                           	callstack 24
  2980   001944  BE15               	btfsc	(abs@a+1)^0,7,c
  2981   001946  EFAF  F00C         	goto	u810
  2982   00194A  5015               	movf	(abs@a+1)^0,w,c
  2983   00194C  E106               	bnz	u811
  2984   00194E  0414               	decf	abs@a^0,w,c
  2985   001950  B0D8               	btfsc	status,0,c
  2986   001952  EFAD  F00C         	goto	u811
  2987   001956  EFAF  F00C         	goto	u810
  2988   00195A                     u811:
  2989   00195A  EFBD  F00C         	goto	l1151
  2990   00195E                     u810:
  2991   00195E  C014  F016         	movff	abs@a,??_abs
  2992   001962  C015  F017         	movff	abs@a+1,??_abs+1
  2993   001966  1E16               	comf	??_abs^0,f,c
  2994   001968  1E17               	comf	(??_abs+1)^0,f,c
  2995   00196A  4A16               	infsnz	??_abs^0,f,c
  2996   00196C  2A17               	incf	(??_abs+1)^0,f,c
  2997   00196E  C016  F014         	movff	??_abs,?_abs
  2998   001972  C017  F015         	movff	??_abs+1,?_abs+1
  2999   001976  EFC1  F00C         	goto	l1154
  3000   00197A                     l1151:
  3001   00197A  C014  F014         	movff	abs@a,?_abs
  3002   00197E  C015  F015         	movff	abs@a+1,?_abs+1
  3003   001982                     l1154:
  3004   001982  0012               	return		;funcret
  3005   001984                     __end_of_abs:
  3006                           	callstack 0
  3007                           
  3008 ;; *************** function ___aomod *****************
  3009 ;; Defined at:
  3010 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3011 ;; Parameters:    Size  Location     Type
  3012 ;;  dividend        8    1[COMRAM] long long 
  3013 ;;  divisor         8    9[COMRAM] long long 
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;  sign            1   18[COMRAM] unsigned char 
  3016 ;;  counter         1   17[COMRAM] unsigned char 
  3017 ;; Return value:  Size  Location     Type
  3018 ;;                  8    1[COMRAM] long long 
  3019 ;; Registers used:
  3020 ;;		wreg, status,2, status,0
  3021 ;; Tracked objects:
  3022 ;;		On entry : 0/0
  3023 ;;		On exit  : 0/0
  3024 ;;		Unchanged: 0/0
  3025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3026 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3029 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3030 ;;Total ram usage:       18 bytes
  3031 ;; Hardware stack levels used: 1
  3032 ;; Hardware stack levels required when called: 1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_dtoa
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text26
  3041   00121A                     __ptext26:
  3042                           	callstack 0
  3043   00121A                     ___aomod:
  3044                           	callstack 24
  3045   00121A  0E00               	movlw	0
  3046   00121C  6E13               	movwf	___aomod@sign^0,c
  3047   00121E  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  3048   001220  EF16  F009         	goto	u730
  3049   001224  EF14  F009         	goto	u731
  3050   001228                     u731:
  3051   001228  EF28  F009         	goto	l1785
  3052   00122C                     u730:
  3053   00122C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3054   00122E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3055   001230  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3056   001232  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3057   001234  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3058   001236  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3059   001238  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3060   00123A  6C02               	negf	___aomod@dividend^0,c
  3061   00123C  0E00               	movlw	0
  3062   00123E  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3063   001240  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3064   001242  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3065   001244  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3066   001246  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3067   001248  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3068   00124A  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3069   00124C  0E01               	movlw	1
  3070   00124E  6E13               	movwf	___aomod@sign^0,c
  3071   001250                     l1785:
  3072   001250  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  3073   001252  EF2F  F009         	goto	u740
  3074   001256  EF2D  F009         	goto	u741
  3075   00125A                     u741:
  3076   00125A  EF3F  F009         	goto	l1789
  3077   00125E                     u740:
  3078   00125E  1E11               	comf	(___aomod@divisor+7)^0,f,c
  3079   001260  1E10               	comf	(___aomod@divisor+6)^0,f,c
  3080   001262  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  3081   001264  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  3082   001266  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  3083   001268  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  3084   00126A  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  3085   00126C  6C0A               	negf	___aomod@divisor^0,c
  3086   00126E  0E00               	movlw	0
  3087   001270  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  3088   001272  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  3089   001274  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  3090   001276  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  3091   001278  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  3092   00127A  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  3093   00127C  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  3094   00127E                     l1789:
  3095   00127E  500A               	movf	___aomod@divisor^0,w,c
  3096   001280  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  3097   001282  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  3098   001284  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  3099   001286  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  3100   001288  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  3101   00128A  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  3102   00128C  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  3103   00128E  B4D8               	btfsc	status,2,c
  3104   001290  EF4C  F009         	goto	u751
  3105   001294  EF4E  F009         	goto	u750
  3106   001298                     u751:
  3107   001298  EF96  F009         	goto	l1805
  3108   00129C                     u750:
  3109   00129C  0E01               	movlw	1
  3110   00129E  6E12               	movwf	___aomod@counter^0,c
  3111   0012A0  EF5C  F009         	goto	l1795
  3112   0012A4                     l1793:
  3113   0012A4  90D8               	bcf	status,0,c
  3114   0012A6  360A               	rlcf	___aomod@divisor^0,f,c
  3115   0012A8  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  3116   0012AA  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  3117   0012AC  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  3118   0012AE  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  3119   0012B0  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  3120   0012B2  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  3121   0012B4  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  3122   0012B6  2A12               	incf	___aomod@counter^0,f,c
  3123   0012B8                     l1795:
  3124   0012B8  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  3125   0012BA  EF61  F009         	goto	u761
  3126   0012BE  EF63  F009         	goto	u760
  3127   0012C2                     u761:
  3128   0012C2  EF52  F009         	goto	l1793
  3129   0012C6                     u760:
  3130   0012C6                     l1797:
  3131   0012C6  500A               	movf	___aomod@divisor^0,w,c
  3132   0012C8  5C02               	subwf	___aomod@dividend^0,w,c
  3133   0012CA  500B               	movf	(___aomod@divisor+1)^0,w,c
  3134   0012CC  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  3135   0012CE  500C               	movf	(___aomod@divisor+2)^0,w,c
  3136   0012D0  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  3137   0012D2  500D               	movf	(___aomod@divisor+3)^0,w,c
  3138   0012D4  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  3139   0012D6  500E               	movf	(___aomod@divisor+4)^0,w,c
  3140   0012D8  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  3141   0012DA  500F               	movf	(___aomod@divisor+5)^0,w,c
  3142   0012DC  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  3143   0012DE  5010               	movf	(___aomod@divisor+6)^0,w,c
  3144   0012E0  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  3145   0012E2  5011               	movf	(___aomod@divisor+7)^0,w,c
  3146   0012E4  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  3147   0012E6  A0D8               	btfss	status,0,c
  3148   0012E8  EF78  F009         	goto	u771
  3149   0012EC  EF7A  F009         	goto	u770
  3150   0012F0                     u771:
  3151   0012F0  EF8A  F009         	goto	l1801
  3152   0012F4                     u770:
  3153   0012F4  500A               	movf	___aomod@divisor^0,w,c
  3154   0012F6  5E02               	subwf	___aomod@dividend^0,f,c
  3155   0012F8  500B               	movf	(___aomod@divisor+1)^0,w,c
  3156   0012FA  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  3157   0012FC  500C               	movf	(___aomod@divisor+2)^0,w,c
  3158   0012FE  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  3159   001300  500D               	movf	(___aomod@divisor+3)^0,w,c
  3160   001302  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  3161   001304  500E               	movf	(___aomod@divisor+4)^0,w,c
  3162   001306  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  3163   001308  500F               	movf	(___aomod@divisor+5)^0,w,c
  3164   00130A  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  3165   00130C  5010               	movf	(___aomod@divisor+6)^0,w,c
  3166   00130E  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  3167   001310  5011               	movf	(___aomod@divisor+7)^0,w,c
  3168   001312  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  3169   001314                     l1801:
  3170   001314  90D8               	bcf	status,0,c
  3171   001316  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  3172   001318  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  3173   00131A  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  3174   00131C  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  3175   00131E  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  3176   001320  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  3177   001322  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  3178   001324  320A               	rrcf	___aomod@divisor^0,f,c
  3179   001326  2E12               	decfsz	___aomod@counter^0,f,c
  3180   001328  EF63  F009         	goto	l1797
  3181   00132C                     l1805:
  3182   00132C  5013               	movf	___aomod@sign^0,w,c
  3183   00132E  B4D8               	btfsc	status,2,c
  3184   001330  EF9C  F009         	goto	u781
  3185   001334  EF9E  F009         	goto	u780
  3186   001338                     u781:
  3187   001338  EFAE  F009         	goto	l1809
  3188   00133C                     u780:
  3189   00133C  1E09               	comf	(___aomod@dividend+7)^0,f,c
  3190   00133E  1E08               	comf	(___aomod@dividend+6)^0,f,c
  3191   001340  1E07               	comf	(___aomod@dividend+5)^0,f,c
  3192   001342  1E06               	comf	(___aomod@dividend+4)^0,f,c
  3193   001344  1E05               	comf	(___aomod@dividend+3)^0,f,c
  3194   001346  1E04               	comf	(___aomod@dividend+2)^0,f,c
  3195   001348  1E03               	comf	(___aomod@dividend+1)^0,f,c
  3196   00134A  6C02               	negf	___aomod@dividend^0,c
  3197   00134C  0E00               	movlw	0
  3198   00134E  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  3199   001350  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  3200   001352  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  3201   001354  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  3202   001356  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  3203   001358  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  3204   00135A  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  3205   00135C                     l1809:
  3206   00135C  C002  F002         	movff	___aomod@dividend,?___aomod
  3207   001360  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  3208   001364  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  3209   001368  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  3210   00136C  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  3211   001370  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  3212   001374  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  3213   001378  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  3214   00137C  0012               	return		;funcret
  3215   00137E                     __end_of___aomod:
  3216                           	callstack 0
  3217                           
  3218 ;; *************** function ___aodiv *****************
  3219 ;; Defined at:
  3220 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3221 ;; Parameters:    Size  Location     Type
  3222 ;;  dividend        8    1[COMRAM] long long 
  3223 ;;  divisor         8    9[COMRAM] long long 
  3224 ;; Auto vars:     Size  Location     Type
  3225 ;;  quotient        8   19[COMRAM] long long 
  3226 ;;  sign            1   18[COMRAM] unsigned char 
  3227 ;;  counter         1   17[COMRAM] unsigned char 
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  8    1[COMRAM] long long 
  3230 ;; Registers used:
  3231 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3237 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3238 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;Total ram usage:       26 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_dtoa
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text27
  3252   001092                     __ptext27:
  3253                           	callstack 0
  3254   001092                     ___aodiv:
  3255                           	callstack 24
  3256   001092  0E00               	movlw	0
  3257   001094  6E13               	movwf	___aodiv@sign^0,c
  3258   001096  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  3259   001098  EF52  F008         	goto	u660
  3260   00109C  EF50  F008         	goto	u661
  3261   0010A0                     u661:
  3262   0010A0  EF64  F008         	goto	l1741
  3263   0010A4                     u660:
  3264   0010A4  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  3265   0010A6  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  3266   0010A8  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  3267   0010AA  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  3268   0010AC  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  3269   0010AE  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  3270   0010B0  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  3271   0010B2  6C0A               	negf	___aodiv@divisor^0,c
  3272   0010B4  0E00               	movlw	0
  3273   0010B6  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  3274   0010B8  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  3275   0010BA  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  3276   0010BC  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  3277   0010BE  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  3278   0010C0  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  3279   0010C2  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  3280   0010C4  0E01               	movlw	1
  3281   0010C6  6E13               	movwf	___aodiv@sign^0,c
  3282   0010C8                     l1741:
  3283   0010C8  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  3284   0010CA  EF6B  F008         	goto	u670
  3285   0010CE  EF69  F008         	goto	u671
  3286   0010D2                     u671:
  3287   0010D2  EF7D  F008         	goto	l1747
  3288   0010D6                     u670:
  3289   0010D6  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  3290   0010D8  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  3291   0010DA  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  3292   0010DC  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  3293   0010DE  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  3294   0010E0  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  3295   0010E2  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  3296   0010E4  6C02               	negf	___aodiv@dividend^0,c
  3297   0010E6  0E00               	movlw	0
  3298   0010E8  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  3299   0010EA  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  3300   0010EC  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  3301   0010EE  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  3302   0010F0  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  3303   0010F2  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  3304   0010F4  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  3305   0010F6  0E01               	movlw	1
  3306   0010F8  1A13               	xorwf	___aodiv@sign^0,f,c
  3307   0010FA                     l1747:
  3308   0010FA  EE20  F014         	lfsr	2,___aodiv@quotient
  3309   0010FE  0E07               	movlw	7
  3310   001100                     u681:
  3311   001100  6ADE               	clrf	postinc2,c
  3312   001102  06E8               	decf	wreg,f,c
  3313   001104  E2FD               	bc	u681
  3314   001106  500A               	movf	___aodiv@divisor^0,w,c
  3315   001108  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  3316   00110A  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  3317   00110C  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  3318   00110E  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  3319   001110  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  3320   001112  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  3321   001114  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  3322   001116  B4D8               	btfsc	status,2,c
  3323   001118  EF90  F008         	goto	u691
  3324   00111C  EF92  F008         	goto	u690
  3325   001120                     u691:
  3326   001120  EFE4  F008         	goto	l1769
  3327   001124                     u690:
  3328   001124  0E01               	movlw	1
  3329   001126  6E12               	movwf	___aodiv@counter^0,c
  3330   001128  EFA0  F008         	goto	l1755
  3331   00112C                     l1753:
  3332   00112C  90D8               	bcf	status,0,c
  3333   00112E  360A               	rlcf	___aodiv@divisor^0,f,c
  3334   001130  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  3335   001132  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  3336   001134  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  3337   001136  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  3338   001138  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  3339   00113A  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  3340   00113C  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  3341   00113E  2A12               	incf	___aodiv@counter^0,f,c
  3342   001140                     l1755:
  3343   001140  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  3344   001142  EFA5  F008         	goto	u701
  3345   001146  EFA7  F008         	goto	u700
  3346   00114A                     u701:
  3347   00114A  EF96  F008         	goto	l1753
  3348   00114E                     u700:
  3349   00114E                     l1757:
  3350   00114E  90D8               	bcf	status,0,c
  3351   001150  3614               	rlcf	___aodiv@quotient^0,f,c
  3352   001152  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  3353   001154  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  3354   001156  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  3355   001158  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  3356   00115A  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  3357   00115C  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  3358   00115E  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  3359   001160  500A               	movf	___aodiv@divisor^0,w,c
  3360   001162  5C02               	subwf	___aodiv@dividend^0,w,c
  3361   001164  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3362   001166  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  3363   001168  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3364   00116A  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  3365   00116C  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3366   00116E  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  3367   001170  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3368   001172  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  3369   001174  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3370   001176  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  3371   001178  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3372   00117A  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  3373   00117C  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3374   00117E  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  3375   001180  A0D8               	btfss	status,0,c
  3376   001182  EFC5  F008         	goto	u711
  3377   001186  EFC7  F008         	goto	u710
  3378   00118A                     u711:
  3379   00118A  EFD8  F008         	goto	l1765
  3380   00118E                     u710:
  3381   00118E  500A               	movf	___aodiv@divisor^0,w,c
  3382   001190  5E02               	subwf	___aodiv@dividend^0,f,c
  3383   001192  500B               	movf	(___aodiv@divisor+1)^0,w,c
  3384   001194  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  3385   001196  500C               	movf	(___aodiv@divisor+2)^0,w,c
  3386   001198  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  3387   00119A  500D               	movf	(___aodiv@divisor+3)^0,w,c
  3388   00119C  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  3389   00119E  500E               	movf	(___aodiv@divisor+4)^0,w,c
  3390   0011A0  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  3391   0011A2  500F               	movf	(___aodiv@divisor+5)^0,w,c
  3392   0011A4  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  3393   0011A6  5010               	movf	(___aodiv@divisor+6)^0,w,c
  3394   0011A8  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  3395   0011AA  5011               	movf	(___aodiv@divisor+7)^0,w,c
  3396   0011AC  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  3397   0011AE  8014               	bsf	___aodiv@quotient^0,0,c
  3398   0011B0                     l1765:
  3399   0011B0  90D8               	bcf	status,0,c
  3400   0011B2  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  3401   0011B4  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  3402   0011B6  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  3403   0011B8  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  3404   0011BA  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  3405   0011BC  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  3406   0011BE  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  3407   0011C0  320A               	rrcf	___aodiv@divisor^0,f,c
  3408   0011C2  2E12               	decfsz	___aodiv@counter^0,f,c
  3409   0011C4  EFA7  F008         	goto	l1757
  3410   0011C8                     l1769:
  3411   0011C8  5013               	movf	___aodiv@sign^0,w,c
  3412   0011CA  B4D8               	btfsc	status,2,c
  3413   0011CC  EFEA  F008         	goto	u721
  3414   0011D0  EFEC  F008         	goto	u720
  3415   0011D4                     u721:
  3416   0011D4  EFFC  F008         	goto	l1773
  3417   0011D8                     u720:
  3418   0011D8  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  3419   0011DA  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  3420   0011DC  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  3421   0011DE  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  3422   0011E0  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  3423   0011E2  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  3424   0011E4  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  3425   0011E6  6C14               	negf	___aodiv@quotient^0,c
  3426   0011E8  0E00               	movlw	0
  3427   0011EA  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  3428   0011EC  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  3429   0011EE  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  3430   0011F0  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  3431   0011F2  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  3432   0011F4  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  3433   0011F6  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  3434   0011F8                     l1773:
  3435   0011F8  C014  F002         	movff	___aodiv@quotient,?___aodiv
  3436   0011FC  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  3437   001200  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  3438   001204  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  3439   001208  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  3440   00120C  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  3441   001210  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  3442   001214  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  3443   001218  0012               	return		;funcret
  3444   00121A                     __end_of___aodiv:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _RGBC2Serial *****************
  3448 ;; Defined at:
  3449 ;;		line 88 in file "color.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  str             2    6[COMRAM] PTR unsigned char 
  3452 ;;		 -> main@buf(100), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3467 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3468 ;;Total ram usage:        4 bytes
  3469 ;; Hardware stack levels used: 1
  3470 ;; Hardware stack levels required when called: 3
  3471 ;; This function calls:
  3472 ;;		_sendStringSerial4
  3473 ;; This function is called by:
  3474 ;;		_colorVal2String
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           	psect	text28
  3479   001AA8                     __ptext28:
  3480                           	callstack 0
  3481   001AA8                     _RGBC2Serial:
  3482                           	callstack 26
  3483   001AA8                     
  3484                           ;color.c: 89:     _delay((unsigned long)((2000)*(64000000/4000.0)));
  3485   001AA8  0EA3               	movlw	163
  3486   001AAA  6E0A               	movwf	(??_RGBC2Serial+1)^0,c
  3487   001AAC  0E57               	movlw	87
  3488   001AAE  6E09               	movwf	??_RGBC2Serial^0,c
  3489   001AB0  0E02               	movlw	2
  3490   001AB2                     u1147:
  3491   001AB2  2EE8               	decfsz	wreg,f,c
  3492   001AB4  D7FE               	bra	u1147
  3493   001AB6  2E09               	decfsz	??_RGBC2Serial^0,f,c
  3494   001AB8  D7FC               	bra	u1147
  3495   001ABA  2E0A               	decfsz	(??_RGBC2Serial+1)^0,f,c
  3496   001ABC  D7FA               	bra	u1147
  3497   001ABE  D000               	nop2	
  3498   001AC0                     
  3499                           ;color.c: 90:     sendStringSerial4(str);
  3500   001AC0  C007  F003         	movff	RGBC2Serial@str,sendStringSerial4@string
  3501   001AC4  C008  F004         	movff	RGBC2Serial@str+1,sendStringSerial4@string+1
  3502   001AC8  ECC2  F00C         	call	_sendStringSerial4	;wreg free
  3503   001ACC  0012               	return		;funcret
  3504   001ACE                     __end_of_RGBC2Serial:
  3505                           	callstack 0
  3506                           
  3507 ;; *************** function _sendStringSerial4 *****************
  3508 ;; Defined at:
  3509 ;;		line 37 in file "../lab-5-areeb-atulit.X/serial.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;  string          2    2[COMRAM] PTR unsigned char 
  3512 ;;		 -> main@buf(100), 
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  i               2    4[COMRAM] int 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3525 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;Total ram usage:        4 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; Hardware stack levels required when called: 2
  3531 ;; This function calls:
  3532 ;;		_sendCharSerial4
  3533 ;; This function is called by:
  3534 ;;		_RGBC2Serial
  3535 ;; This function uses a non-reentrant model
  3536 ;;
  3537                           
  3538                           	psect	text29
  3539   001984                     __ptext29:
  3540                           	callstack 0
  3541   001984                     _sendStringSerial4:
  3542                           	callstack 26
  3543   001984                     
  3544                           ;../lab-5-areeb-atulit.X/serial.c: 39:     int i=0;
  3545   001984  0E00               	movlw	0
  3546   001986  6E06               	movwf	(sendStringSerial4@i+1)^0,c
  3547   001988  0E00               	movlw	0
  3548   00198A  6E05               	movwf	sendStringSerial4@i^0,c
  3549                           
  3550                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3551   00198C  EFD3  F00C         	goto	l1957
  3552   001990                     l1953:
  3553                           
  3554                           ;../lab-5-areeb-atulit.X/serial.c: 41:         sendCharSerial4(string[i]);
  3555   001990  5005               	movf	sendStringSerial4@i^0,w,c
  3556   001992  2403               	addwf	sendStringSerial4@string^0,w,c
  3557   001994  6ED9               	movwf	fsr2l,c
  3558   001996  5006               	movf	(sendStringSerial4@i+1)^0,w,c
  3559   001998  2004               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3560   00199A  6EDA               	movwf	fsr2h,c
  3561   00199C  50DF               	movf	indf2,w,c
  3562   00199E  EC88  F00D         	call	_sendCharSerial4
  3563   0019A2                     
  3564                           ;../lab-5-areeb-atulit.X/serial.c: 42:         i++;
  3565   0019A2  4A05               	infsnz	sendStringSerial4@i^0,f,c
  3566   0019A4  2A06               	incf	(sendStringSerial4@i+1)^0,f,c
  3567   0019A6                     l1957:
  3568                           
  3569                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3570   0019A6  5005               	movf	sendStringSerial4@i^0,w,c
  3571   0019A8  2403               	addwf	sendStringSerial4@string^0,w,c
  3572   0019AA  6ED9               	movwf	fsr2l,c
  3573   0019AC  5006               	movf	(sendStringSerial4@i+1)^0,w,c
  3574   0019AE  2004               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3575   0019B0  6EDA               	movwf	fsr2h,c
  3576   0019B2  50DF               	movf	indf2,w,c
  3577   0019B4  A4D8               	btfss	status,2,c
  3578   0019B6  EFDF  F00C         	goto	u1001
  3579   0019BA  EFE1  F00C         	goto	u1000
  3580   0019BE                     u1001:
  3581   0019BE  EFC8  F00C         	goto	l1953
  3582   0019C2                     u1000:
  3583   0019C2  0012               	return		;funcret
  3584   0019C4                     __end_of_sendStringSerial4:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _sendCharSerial4 *****************
  3588 ;; Defined at:
  3589 ;;		line 30 in file "../lab-5-areeb-atulit.X/serial.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  charToSend      1    wreg     unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  charToSend      1    1[COMRAM] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3606 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3607 ;;Total ram usage:        1 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_sendStringSerial4
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text30
  3618   001B10                     __ptext30:
  3619                           	callstack 0
  3620   001B10                     _sendCharSerial4:
  3621                           	callstack 26
  3622                           
  3623                           ;incstack = 0
  3624                           ;sendCharSerial4@charToSend stored from wreg
  3625   001B10  6E02               	movwf	sendCharSerial4@charToSend^0,c
  3626   001B12                     l204:
  3627   001B12  010E               	movlb	14	; () banked
  3628   001B14  A537               	btfss	55,2,b	;volatile
  3629   001B16  EF8F  F00D         	goto	u941
  3630   001B1A  EF91  F00D         	goto	u940
  3631   001B1E                     u941:
  3632   001B1E  EF89  F00D         	goto	l204
  3633   001B22                     u940:
  3634   001B22                     
  3635                           ; BSR set to: 14
  3636                           ;../lab-5-areeb-atulit.X/serial.c: 32:     TX4REG = charToSend;
  3637   001B22  C002  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3638   001B26                     
  3639                           ; BSR set to: 14
  3640   001B26  0012               	return		;funcret
  3641   001B28                     __end_of_sendCharSerial4:
  3642                           	callstack 0
  3643                           
  3644 ;; *************** function _HighISR *****************
  3645 ;; Defined at:
  3646 ;;		line 67 in file "interrupts.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3662 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3663 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3664 ;;Total ram usage:        1 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; This function calls:
  3667 ;;		Nothing
  3668 ;; This function is called by:
  3669 ;;		Interrupt level 2
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	intcode
  3674   000008                     __pintcode:
  3675                           	callstack 0
  3676   000008                     _HighISR:
  3677                           	callstack 21
  3678                           
  3679                           ; BSR set to: 14
  3680                           ;incstack = 0
  3681   000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3682   00000A                     
  3683                           ;interrupts.c: 70:     if(PIR0bits.INT0IF){
  3684   00000A  010E               	movlb	14	; () banked
  3685   00000C  A133               	btfss	51,0,b	;volatile
  3686   00000E  EF0B  F000         	goto	i2u110_41
  3687   000012  EF0D  F000         	goto	i2u110_40
  3688   000016                     i2u110_41:
  3689   000016  EF25  F000         	goto	i2l306
  3690   00001A                     i2u110_40:
  3691   00001A                     
  3692                           ; BSR set to: 14
  3693                           ;interrupts.c: 72:     LATDbits.LATD7=!LATDbits.LATD7;
  3694   00001A  AE7C               	btfss	124,7,c	;volatile
  3695   00001C  EF12  F000         	goto	i2u111_41
  3696   000020  EF16  F000         	goto	i2u111_40
  3697   000024                     i2u111_41:
  3698   000024  6A01               	clrf	??_HighISR^0,c
  3699   000026  2A01               	incf	??_HighISR^0,f,c
  3700   000028  EF17  F000         	goto	i2u112_48
  3701   00002C                     i2u111_40:
  3702   00002C  6A01               	clrf	??_HighISR^0,c
  3703   00002E                     i2u112_48:
  3704   00002E  3201               	rrcf	??_HighISR^0,f,c
  3705   000030  3201               	rrcf	??_HighISR^0,f,c
  3706   000032  507C               	movf	124,w,c	;volatile
  3707   000034  1801               	xorwf	??_HighISR^0,w,c
  3708   000036  0B7F               	andlw	-129
  3709   000038  1801               	xorwf	??_HighISR^0,w,c
  3710   00003A  6E7C               	movwf	124,c	;volatile
  3711   00003C                     
  3712                           ;interrupts.c: 73:         interrupt_flag = 1;
  3713   00003C  0E00               	movlw	0
  3714   00003E  0100               	movlb	0	; () banked
  3715   000040  6FEE               	movwf	(_interrupt_flag+1)& (0+255),b
  3716   000042  0E01               	movlw	1
  3717   000044  6FED               	movwf	_interrupt_flag& (0+255),b
  3718   000046                     
  3719                           ; BSR set to: 0
  3720                           ;interrupts.c: 76:         PIR0bits.INT0IF = 0;
  3721   000046  010E               	movlb	14	; () banked
  3722   000048  9133               	bcf	51,0,b	;volatile
  3723   00004A                     i2l306:
  3724                           
  3725                           ; BSR set to: 14
  3726   00004A  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3727   00004C  0011               	retfie		f
  3728   00004E                     __end_of_HighISR:
  3729                           	callstack 0
  3730                           
  3731                           	psect	rparam
  3732   000000                     
  3733                           	psect	temp
  3734   00005B                     btemp:
  3735                           	callstack 0
  3736   00005B                     	ds	1
  3737   000000                     int$flags	set	btemp
  3738   000000                     wtemp8	set	btemp+1
  3739   000000                     ttemp5	set	btemp+1
  3740   000000                     ttemp6	set	btemp+4
  3741   000000                     ttemp7	set	btemp+8
  3742                           
  3743                           	psect	idloc
  3744                           
  3745                           ;Config register IDLOC0 @ 0x200000
  3746                           ;	unspecified, using default values
  3747   200000                     	org	2097152
  3748   200000  0FFF               	dw	4095
  3749                           
  3750                           ;Config register IDLOC1 @ 0x200002
  3751                           ;	unspecified, using default values
  3752   200002                     	org	2097154
  3753   200002  0FFF               	dw	4095
  3754                           
  3755                           ;Config register IDLOC2 @ 0x200004
  3756                           ;	unspecified, using default values
  3757   200004                     	org	2097156
  3758   200004  0FFF               	dw	4095
  3759                           
  3760                           ;Config register IDLOC3 @ 0x200006
  3761                           ;	unspecified, using default values
  3762   200006                     	org	2097158
  3763   200006  0FFF               	dw	4095
  3764                           
  3765                           ;Config register IDLOC4 @ 0x200008
  3766                           ;	unspecified, using default values
  3767   200008                     	org	2097160
  3768   200008  0FFF               	dw	4095
  3769                           
  3770                           ;Config register IDLOC5 @ 0x20000A
  3771                           ;	unspecified, using default values
  3772   20000A                     	org	2097162
  3773   20000A  0FFF               	dw	4095
  3774                           
  3775                           ;Config register IDLOC6 @ 0x20000C
  3776                           ;	unspecified, using default values
  3777   20000C                     	org	2097164
  3778   20000C  0FFF               	dw	4095
  3779                           
  3780                           ;Config register IDLOC7 @ 0x20000E
  3781                           ;	unspecified, using default values
  3782   20000E                     	org	2097166
  3783   20000E  0FFF               	dw	4095
  3784                           
  3785                           	psect	config
  3786                           
  3787                           ;Config register CONFIG1L @ 0x300000
  3788                           ;	External Oscillator mode Selection bits
  3789                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3790                           ;	Power-up default value for COSC bits
  3791                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  3792   300000                     	org	3145728
  3793   300000  AA                 	db	170
  3794                           
  3795                           ;Config register CONFIG1H @ 0x300001
  3796                           ;	unspecified, using default values
  3797                           ;	Clock Out Enable bit
  3798                           ;	CLKOUTEN = 0x1, unprogrammed default
  3799                           ;	Clock Switch Enable bit
  3800                           ;	CSWEN = 0x1, unprogrammed default
  3801                           ;	Fail-Safe Clock Monitor Enable bit
  3802                           ;	FCMEN = 0x1, unprogrammed default
  3803   300001                     	org	3145729
  3804   300001  FF                 	db	255
  3805                           
  3806                           ;Config register CONFIG2L @ 0x300002
  3807                           ;	unspecified, using default values
  3808                           ;	Master Clear Enable bit
  3809                           ;	MCLRE = 0x1, unprogrammed default
  3810                           ;	Power-up Timer Enable bit
  3811                           ;	PWRTE = 0x1, unprogrammed default
  3812                           ;	Low-power BOR enable bit
  3813                           ;	LPBOREN = 0x1, unprogrammed default
  3814                           ;	Brown-out Reset Enable bits
  3815                           ;	BOREN = 0x3, unprogrammed default
  3816   300002                     	org	3145730
  3817   300002  FF                 	db	255
  3818                           
  3819                           ;Config register CONFIG2H @ 0x300003
  3820                           ;	unspecified, using default values
  3821                           ;	Brown Out Reset Voltage selection bits
  3822                           ;	BORV = 0x3, unprogrammed default
  3823                           ;	ZCD Disable bit
  3824                           ;	ZCD = 0x1, unprogrammed default
  3825                           ;	PPSLOCK bit One-Way Set Enable bit
  3826                           ;	PPS1WAY = 0x1, unprogrammed default
  3827                           ;	Stack Full/Underflow Reset Enable bit
  3828                           ;	STVREN = 0x1, unprogrammed default
  3829                           ;	Debugger Enable bit
  3830                           ;	DEBUG = 0x1, unprogrammed default
  3831                           ;	Extended Instruction Set Enable bit
  3832                           ;	XINST = 0x1, unprogrammed default
  3833   300003                     	org	3145731
  3834   300003  FF                 	db	255
  3835                           
  3836                           ;Config register CONFIG3L @ 0x300004
  3837                           ;	WDT Period Select bits
  3838                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3839                           ;	WDT operating mode
  3840                           ;	WDTE = OFF, WDT Disabled
  3841   300004                     	org	3145732
  3842   300004  9F                 	db	159
  3843                           
  3844                           ;Config register CONFIG3H @ 0x300005
  3845                           ;	unspecified, using default values
  3846                           ;	WDT Window Select bits
  3847                           ;	WDTCWS = 0x7, unprogrammed default
  3848                           ;	WDT input clock selector
  3849                           ;	WDTCCS = 0x7, unprogrammed default
  3850   300005                     	org	3145733
  3851   300005  FF                 	db	255
  3852                           
  3853                           ;Config register CONFIG4L @ 0x300006
  3854                           ;	unspecified, using default values
  3855                           ;	Write Protection Block 0
  3856                           ;	WRT0 = 0x1, unprogrammed default
  3857                           ;	Write Protection Block 1
  3858                           ;	WRT1 = 0x1, unprogrammed default
  3859                           ;	Write Protection Block 2
  3860                           ;	WRT2 = 0x1, unprogrammed default
  3861                           ;	Write Protection Block 3
  3862                           ;	WRT3 = 0x1, unprogrammed default
  3863                           ;	Write Protection Block 3
  3864                           ;	WRT4 = 0x1, unprogrammed default
  3865                           ;	Write Protection Block 3
  3866                           ;	WRT5 = 0x1, unprogrammed default
  3867                           ;	Write Protection Block 3
  3868                           ;	WRT6 = 0x1, unprogrammed default
  3869                           ;	Write Protection Block 3
  3870                           ;	WRT7 = 0x1, unprogrammed default
  3871   300006                     	org	3145734
  3872   300006  FF                 	db	255
  3873                           
  3874                           ;Config register CONFIG4H @ 0x300007
  3875                           ;	unspecified, using default values
  3876                           ;	Configuration Register Write Protection bit
  3877                           ;	WRTC = 0x1, unprogrammed default
  3878                           ;	Boot Block Write Protection bit
  3879                           ;	WRTB = 0x1, unprogrammed default
  3880                           ;	Data EEPROM Write Protection bit
  3881                           ;	WRTD = 0x1, unprogrammed default
  3882                           ;	Scanner Enable bit
  3883                           ;	SCANE = 0x1, unprogrammed default
  3884                           ;	Low Voltage Programming Enable bit
  3885                           ;	LVP = 0x1, unprogrammed default
  3886   300007                     	org	3145735
  3887   300007  FF                 	db	255
  3888                           
  3889                           ;Config register CONFIG5L @ 0x300008
  3890                           ;	unspecified, using default values
  3891                           ;	UserNVM Program Memory Code Protection bit
  3892                           ;	CP = 0x1, unprogrammed default
  3893                           ;	DataNVM Memory Code Protection bit
  3894                           ;	CPD = 0x1, unprogrammed default
  3895   300008                     	org	3145736
  3896   300008  FF                 	db	255
  3897                           
  3898                           ;Config register CONFIG5H @ 0x300009
  3899                           ;	unspecified, using default values
  3900   300009                     	org	3145737
  3901   300009  FF                 	db	255
  3902                           
  3903                           ;Config register CONFIG6L @ 0x30000A
  3904                           ;	unspecified, using default values
  3905                           ;	Table Read Protection Block 0
  3906                           ;	EBTR0 = 0x1, unprogrammed default
  3907                           ;	Table Read Protection Block 1
  3908                           ;	EBTR1 = 0x1, unprogrammed default
  3909                           ;	Table Read Protection Block 2
  3910                           ;	EBTR2 = 0x1, unprogrammed default
  3911                           ;	Table Read Protection Block 3
  3912                           ;	EBTR3 = 0x1, unprogrammed default
  3913                           ;	Table Read Protection Block 4
  3914                           ;	EBTR4 = 0x1, unprogrammed default
  3915                           ;	Table Read Protection Block 5
  3916                           ;	EBTR5 = 0x1, unprogrammed default
  3917                           ;	Table Read Protection Block 6
  3918                           ;	EBTR6 = 0x1, unprogrammed default
  3919                           ;	Table Read Protection Block 7
  3920                           ;	EBTR7 = 0x1, unprogrammed default
  3921   30000A                     	org	3145738
  3922   30000A  FF                 	db	255
  3923                           
  3924                           ;Config register CONFIG6H @ 0x30000B
  3925                           ;	unspecified, using default values
  3926                           ;	Boot Block Table Read Protection bit
  3927                           ;	EBTRB = 0x1, unprogrammed default
  3928   30000B                     	org	3145739
  3929   30000B  FF                 	db	255
  3930                           tosu	equ	0xFFF
  3931                           tosh	equ	0xFFE
  3932                           tosl	equ	0xFFD
  3933                           stkptr	equ	0xFFC
  3934                           pclatu	equ	0xFFB
  3935                           pclath	equ	0xFFA
  3936                           pcl	equ	0xFF9
  3937                           tblptru	equ	0xFF8
  3938                           tblptrh	equ	0xFF7
  3939                           tblptrl	equ	0xFF6
  3940                           tablat	equ	0xFF5
  3941                           prodh	equ	0xFF4
  3942                           prodl	equ	0xFF3
  3943                           indf0	equ	0xFEF
  3944                           postinc0	equ	0xFEE
  3945                           postdec0	equ	0xFED
  3946                           preinc0	equ	0xFEC
  3947                           plusw0	equ	0xFEB
  3948                           fsr0h	equ	0xFEA
  3949                           fsr0l	equ	0xFE9
  3950                           wreg	equ	0xFE8
  3951                           indf1	equ	0xFE7
  3952                           postinc1	equ	0xFE6
  3953                           postdec1	equ	0xFE5
  3954                           preinc1	equ	0xFE4
  3955                           plusw1	equ	0xFE3
  3956                           fsr1h	equ	0xFE2
  3957                           fsr1l	equ	0xFE1
  3958                           bsr	equ	0xFE0
  3959                           indf2	equ	0xFDF
  3960                           postinc2	equ	0xFDE
  3961                           postdec2	equ	0xFDD
  3962                           preinc2	equ	0xFDC
  3963                           plusw2	equ	0xFDB
  3964                           fsr2h	equ	0xFDA
  3965                           fsr2l	equ	0xFD9
  3966                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         123
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     89      90
    BANK0           160    137     147
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S2245$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2192$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2192$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S1560DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S1560DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    colorVal2String@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    colorVal2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK0[8]), 

    RGBC2Serial@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK0[100]), 


Critical Paths under _main in COMRAM

    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RGBC2Serial->_sendStringSerial4
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_colorVal2String
    _colorVal2String->_sprintf

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               108   108      0    7735
                                             29 BANK0    108   108      0
                    _colorVal2String
                   _color_click_init
                    _color_read_RGBC
                         _initUSART4
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     616
                                             12 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                              5 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      45
                                              2 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                              5 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                              3 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              2 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorVal2String                                      4     0      4    6222
                                             25 BANK0      4     0      4
                        _RGBC2Serial
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    5570
                                              0 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5219
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    4869
                                             63 COMRAM    18    12      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    3649
                                             28 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _RGBC2Serial                                          4     2      2     286
                                              6 COMRAM     4     2      2
                  _sendStringSerial4
 ---------------------------------------------------------------------------------
 (3) _sendStringSerial4                                    4     2      2     188
                                              2 COMRAM     4     2      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (4) _sendCharSerial4                                      1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _colorVal2String
     _RGBC2Serial
       _sendStringSerial4
         _sendCharSerial4
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      64        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     89      93       5       91.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     59      5A       1       95.7%
BITBIGSFRlllhhh     52      0       0      42        0.0%
BITBIGSFRlllhhl     37      0       0      44        0.0%
BITBIGSFRlllllh     2D      0       0      47        0.0%
BITBIGSFRllllll     2A      0       0      55        0.0%
BITBIGSFRllllll     26      0       0      62        0.0%
BITBIGSFRhlllll     1E      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRllllll     11      0       0      50        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      48        0.0%
BITBIGSFRllllll      9      0       0      59        0.0%
BITBIGSFRlllhll      8      0       0      45        0.0%
BITBIGSFRllllll      6      0       0      61        0.0%
BITBIGSFRllllll      6      0       0      54        0.0%
BITBIGSFRllllll      5      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      58        0.0%
BITBIGSFRllllll      3      0       0      52        0.0%
BITBIGSFRlllhhl      2      0       0      43        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      41        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      51        0.0%
BITBIGSFRllllll      1      0       0      60        0.0%
BITBIGSFRllllh       1      0       0      46        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BITBIGSFRlhl         1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15D      63        0.0%
DATA                 0      0     15D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Dec 07 22:50:14 2022

               _color_read_Red 1730                _color_read_RGBC 1680                _color_read_Blue 1820  
                           l53 19F6                             l62 17CE                             l71 1ACC  
                           l56 1B0E                             l65 186E                             l74 16DC  
                           l59 177E                             l68 181E                             l77 167E  
             _color_read_Clear 17D0               _color_read_Green 1780                            l110 1A80  
                          l113 1AA6                            l122 1B46                            l107 1A7E  
                          l204 1B12                            l116 1B50                            l213 19C2  
                          l125 1B32                            l207 1B26                            l119 1B3C  
                          l128 1942                            l155 1A22                            l156 1A22  
                          l195 1AEE                            l525 1218                            l538 137C  
                          u610 14DE                            u611 14DA                            u700 114E  
                          u620 14F0                            u701 114A                            u621 14EC  
                          u710 118E                            u630 1518                            u711 118A  
                          u631 1514                            u720 11D8                            u640 154E  
                          u800 15FA                            u721 11D4                            u641 154A  
                          u801 15F6                            u730 122C                            u810 195E  
                          u650 1900                            u731 1228                            u811 195A  
                          u651 18FC                            u660 10A4                            u740 125E  
                          u900 104A                            u820 0E44                            u661 10A0  
                          u741 125A                            u901 1046                            u821 0E3E  
                          u670 10D6                            u750 129C                            u910 105A  
                          u830 0E46                            u671 10D2                            u751 1298  
                          u911 1056                            u760 12C6                            u840 0E58  
                          u920 1A90                            u681 1100                            u761 12C2  
                          u841 0E54                            u921 1A8C                            u690 1124  
                          u770 12F4                            u850 0E94                            u930 1AA6  
                          u691 1120                            u771 12F0                            u851 0E90  
                          u931 1AA2                            u940 1B22                            u780 133C  
                          u860 0EC0                            u941 1B1E                            u781 1338  
                          u861 0EBC                            u790 15A4                            u870 0ED6  
                          u950 13A2                            u791 15A0                            u871 0ED2  
                          u951 139E                            u880 1012                            u960 13EE  
                          u881 100E                            u961 13EA                            u890 1030  
                          u970 140A                            u891 102C                            u971 1406  
                          u980 192C                            u981 1924                            u998 192E  
                          _abs 1944                            _pad 1596                            wreg 000FE8  
                         l1111 15B8                           l1120 0EA0                           l2001 17D0  
                         l1122 0EA8                           l1115 160E                           l1123 0EEE  
                         l2011 16DE                           l2003 1816                           ?_abs 0014  
                         l1141 14CA                           l2013 16F0                           l1134 1090  
                         l2007 1AA8                           l1151 197A                           l2015 16F8  
                         l2031 19EC                           l2023 19C4                           l2009 1AC0  
                         l2017 1700                           l2025 19C8                           l2033 1680  
                         l2041 1AD8                           l1154 1982                           l1147 18BC  
                         l2019 171C                           l2027 19D2                           l2051 1AEA  
                         l2043 1ADA                           l2133 1610                           l2029 19E2  
                         l2053 1AEC                           l2045 1AE4                           l2141 1A00  
                         l1166 1594                           l1174 1900                           l2135 1672  
                         l2047 1AE6                           l2039 1ACE                           l2143 1A0C  
                         l1177 1B52                           l1089 172E                           l2049 1AE8  
                         l2137 19F8                           l2139 19FC                           l1711 14CC  
                         l1801 1314                           l1721 154E                           l1713 14DE  
                         l1803 1326                           l1715 14F0                           l1731 18E0  
                         l1741 10C8                           l1733 1092                           l1805 132C  
                         l1717 14FA                           l1725 18BE                           l1821 15D8  
                         l1813 1596                           l1901 13D2                           l1751 1124  
                         l1743 10D6                           l1735 1096                           l1807 133C  
                         l1719 1518                           l1727 18CA                           l1823 15DC  
                         l1815 15A4                           l1831 0E14                           l1911 1490  
                         l1903 13EE                           l1761 118E                           l1753 112C  
                         l1745 10F6                           l1737 10A4                           l1809 135C  
                         l1729 18DC                           l1825 15FA                           l1817 15B0  
                         l1841 0E94                           l1833 0E34                           l1905 140A  
                         l1921 1B48                           l1771 11D8                           l1763 11AE  
                         l1755 1140                           l1747 10FA                           l1739 10C4  
                         l1827 1944                           l1819 15C4                           l1851 0EE2  
                         l1843 0EB0                           l1835 0E48                           l1907 1460  
                         l1915 14A2                           l1923 1B4C                           l1931 1B42  
                         l1773 11F8                           l1765 11B0                           l1757 114E  
                         l1749 1106                           l1781 122C                           l1829 195E  
                         l1861 0F88                           l1853 0EEA                           l1845 0EC0  
                         l1837 0E58                           l1925 1B2A                           l1941 1910  
                         l1933 1B34                           l1951 1984                           l1767 11C2  
                         l1759 1160                           l1791 129C                           l1783 124C  
                         l1871 1030                           l1863 0F8E                           l1855 0EF6  
                         l1847 0EC6                           l1839 0E78                           l1927 1B2E  
                         l1943 1918                           l1935 1B38                           l1953 1990  
                         l1769 11C8                           l1793 12A4                           l1785 1250  
                         l1777 121A                           l1873 104A                           l1865 0F94  
                         l1857 0F00                           l1849 0ED6                           l1961 187C  
                         l1929 1B3E                           l1945 193E                           l1937 1904  
                         l1955 19A2                           l1795 12B8                           l1787 125E  
                         l1779 121E                           l1875 105A                           l1859 0F06  
                         l1867 0FF8                           l1891 137E                           l1963 1898  
                         l1971 1A60                           l1883 1A80                           l1947 1940  
                         l1939 1908                           l1957 19A6                           l1797 12C6  
                         l1789 127E                           l1877 1060                           l1869 1012  
                         l1893 13A2                           l1965 18B4                           l1973 1A66  
                         l1885 1A90                           l1981 1AF2                           ?_pad 0012  
                         l1887 1B12                           l1799 12F4                           l1879 1070  
                         l1895 13B0                           l1959 1870                           l1975 1A68  
                         l1991 17C6                           l1983 1730                           l1889 1B22  
                         l1897 13BE                           l1977 1A6A                           l1969 1A56  
                         l1985 1776                           l1899 13C2                           l1979 1A6C  
                         l1995 1820                           l1997 1866                           l1989 1780  
                         STR_1 0E01                   ?_RGBC2Serial 0007                           u1000 19C2  
                         u1001 19BE                           u1010 18B4                           u1011 18B0  
                         u1137 19D8                           u1147 1AB2                   _BAUD4CONbits 000EE9  
                         _T2PR 000FBC                           abs@a 0014                           _dbuf 0150  
                         _main 19F8                           _dtoa 0E14                           _prec 00EB  
                         pad@i 0019                           pad@p 0016                           fsr1h 000FE2  
                         fsr2h 000FDA                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 001B                           fsr2l 000FD9                           btemp 005B  
                         start 004E         __end_of_color_read_Red 1780                __end_of_HighISR 004E  
                 ___param_bank 000000                          ??_abs 0016                          ??_pad 0018  
             ?_colorVal2String 0079                __end_of___aodiv 121A                          ?_main 0001  
                        ?_dtoa 001D                __end_of___aomod 137E                          i2l306 004A  
                 vfpfcnvrt@fmt 0042                          _TMR0H 000FD4                          _TMR0L 000FD3  
      __end_of_sendCharSerial4 1B28     __end_of_I2C_2_Master_Start 1B52     __end_of_I2C_2_Master_Write 1B34  
                        _flags 00EF                          _fputc 14CC                          _fputs 18BE  
                        pad@fp 0012                          _width 00E9                          _putch 1B52  
                        dtoa@d 001F                          dtoa@i 003D                          dtoa@n 0035  
                        dtoa@p 0031                          dtoa@s 003F                          dtoa@w 0033  
                        tablat 000FF5                          ttemp5 005C                          ttemp6 005F  
                        ttemp7 0063                          status 000FD8                          wtemp8 005C  
              __end_of_sprintf 1730        __end_of_color_read_RGBC 16DE        __end_of_color_read_Blue 1870  
        _I2C_2_Master_RepStart 1B34                ?_color_read_Red 0006                __initialization 1A2A  
                 __end_of_main 1A2A                   __end_of_dtoa 1092                         ??_main 005A  
                       ??_dtoa 0027                  __activetblptr 000001                         ?_fputc 0002  
                       ?_fputs 000B                         _CCPR1H 000FAA                         _CCPR2H 000FA6  
                       _CCPR3H 000F25                         _CCPR4H 000F21                         ?_putch 0001  
                       _RC0PPS 000E62                         _RC4REG 000EE3                         _RE2PPS 000E74  
                       _RC7PPS 000E69                         _RD5PPS 000E6F                         _RE4PPS 000E76  
                       _RD6PPS 000E70                         i2l2131 0046                         i2l2125 000A  
                       i2l2127 001A                         i2l2129 003C                         _RG6PPS 000E88  
                    ??_HighISR 0001       __end_of_color_click_init 19F8                         _RX4PPS 000E15  
                       _TX4REG 000EE4                   _CCPTMRS0bits 000FAD                   vfprintf@cfmt 0058  
                    ??___aodiv 0012                      ??___aomod 0012                         clear_0 1A30  
                       clear_1 1A3C                         isa$std 000001                         pad@buf 0014  
                       dtoa@fp 001D                         fputc@c 0002                         fputs@c 000F  
                       fputs@i 0010                         fputs@s 000B                   __mediumconst 0000  
                       tblptrh 000FF7                         tblptrl 000FF6                         tblptru 000FF8  
             ?_sendCharSerial4 0001                         putch@c 0001               __end_of_vfprintf 18BE  
                    ??_sprintf 005A                     __accesstop 0060        __end_of__initialization 1A44  
     __end_of_color_read_Clear 1820       __end_of_color_read_Green 17D0         ?_I2C_2_Master_RepStart 0001  
                ___rparam_used 000001               ?_color_read_RGBC 000D               ?_color_read_Blue 0006  
               __pcstackCOMRAM 0001                  __end_of_fputc 1596                  __end_of_fputs 1902  
                __end_of_putch 1B54                        ??_fputc 0006                        ??_fputs 000F  
                      ??_putch 0002                     __pbssBANK0 00E9                     __pbssBANK1 0100  
            _color_writetoaddr 1AF0                   _T2CLKCONbits 000FBF             ?_color_writetoaddr 0004  
          ??_color_writetoaddr 0005                        _SP4BRGH 000EE6                        _SP4BRGL 000EE5  
                      _SSP2ADD 000ED6                        _SSP2BUF 000ED5         color_writetoaddr@value 0004  
             ??_color_read_Red 0008                        _HighISR 0008      __end_of_color_writetoaddr 1B10  
           _I2C_2_Master_Start 1B48                     _initUSART4 1ACE             _I2C_2_Master_Write 1B28  
                      __Hparam 0000                        __Lparam 0000              color_read_Red@tmp 000B  
      sendStringSerial4@string 0003                        ___aodiv 1092                        ___aomod 121A  
          ?_I2C_2_Master_Start 0001            ?_I2C_2_Master_Write 0001                      ?_vfprintf 0052  
                 __psmallconst 0E00                        __pcinit 1A2A                        __ramtop 0E00  
                      __ptext0 19F8                        __ptext1 1ACE                        __ptext2 1680  
                      __ptext3 1730                        __ptext4 1780                        __ptext5 17D0  
                      __ptext6 1820                        __ptext7 1B34                        __ptext8 1902  
                      __ptext9 19C4                      _T2CONbits 000FBD                      _T2HLTbits 000FBE  
                _RxBufWriteCnt 00F2                        main@buf 007D                        _sprintf 16DE  
         ??_I2C_2_Master_Start 0003           ??_I2C_2_Master_Write 0003           end_of_initialization 1A44  
                      fputc@fp 0004                        fputs@fp 000D              ?_color_click_init 0001  
           ??_color_click_init 0006              __end_of_vfpfcnvrt 14CC                        postdec2 000FDD  
                      postinc0 000FEE                        postinc1 000FE6                        postinc2 000FDE  
             vfpfcnvrt@convarg 0048                     ??_vfprintf 0058            color_read_RGBC@temp 000D  
                    _TRISAbits 000F81                      _TRISBbits 000F82                      _TRISDbits 000F84  
                    _TRISEbits 000F85                      _TRISFbits 000F86                      _TRISGbits 000F87  
     color_writetoaddr@address 0005        ??_I2C_2_Master_RepStart 0003             sendStringSerial4@i 0005  
                  _CCP1CONbits 000FAB              ?_color_read_Clear 0006                   _EUSART4RXbuf 013C  
                 _EUSART4TXbuf 0100                    _CCP2CONbits 000FA7              ?_color_read_Green 0006  
                  _CCP3CONbits 000F26                    ?_initUSART4 0001                    _CCP4CONbits 000F22  
    sendCharSerial4@charToSend 0002             ??_color_read_Clear 0008             ??_color_read_Green 0008  
                  vfpfcnvrt@ap 0044                    vfpfcnvrt@cp 0050                    vfpfcnvrt@fp 0040  
          color_read_Clear@tmp 000B            start_initialization 1A2A                    __end_of_abs 1984  
                  __end_of_pad 1610                  _TxBufWriteCnt 005A                  ??_RGBC2Serial 0009  
            ??_colorVal2String 005A            color_read_Green@tmp 000B                    vfprintf@fmt 0054  
                  __pbssCOMRAM 005A                  __pcstackBANK0 0060               ___aodiv@dividend 0002  
                     ?_HighISR 0001            __end_of_RGBC2Serial 1ACE                      _dtoa$2273 002F  
                    __pintcode 0008                       ?___aodiv 0002                       ?___aomod 0002  
             ___aodiv@quotient 0014           I2C_2_Master_Read@ack 0004           I2C_2_Master_Read@tmp 0005  
                  __smallconst 0E00              _I2C_2_Master_Idle 1A80              _I2C_2_Master_Init 1A56  
            _I2C_2_Master_Read 1902              _I2C_2_Master_Stop 1B3E                   _RxBufReadCnt 00F1  
           ?_I2C_2_Master_Idle 0001             ?_I2C_2_Master_Init 0001             ?_I2C_2_Master_Read 0001  
           ?_I2C_2_Master_Stop 0001                       ?_sprintf 0060              _sendStringSerial4 1984  
          ??_I2C_2_Master_Idle 0002            ??_I2C_2_Master_Init 0002            ??_I2C_2_Master_Read 0003  
                     _LATAbits 000F79            ??_I2C_2_Master_Stop 0003                       _LATDbits 000F7C  
                     _LATEbits 000F7D                       _LATFbits 000F7E                       _LATGbits 000F7F  
                     _IPR0bits 000E1F                       _PIE0bits 000E29             ?_sendStringSerial4 0003  
                     _PIE4bits 000E2D                       i2u110_40 001A                       i2u110_41 0016  
                     i2u111_40 002C                       i2u111_41 0024                       i2u112_48 002E  
                     _PIR0bits 000E33                       _PIR4bits 000E37              ??_sendCharSerial4 0002  
                     _SSP2CON2 000EDA            ??_sendStringSerial4 0005                       _SSP2STAT 000ED8  
                    _vfpfcnvrt 137E      __end_of_I2C_2_Master_Idle 1AA8      __end_of_I2C_2_Master_Init 1A80  
    __end_of_I2C_2_Master_Read 1944      __end_of_I2C_2_Master_Stop 1B48    I2C_2_Master_Write@data_byte 0003  
            ??_color_read_RGBC 000F              ??_color_read_Blue 0008                   _TxBufReadCnt 00F0  
    __end_of_sendStringSerial4 19C4                    _RGBC2Serial 1AA8  __end_of_I2C_2_Master_RepStart 1B3E  
           color_read_Blue@tmp 000B                   ??_initUSART4 0002            colorVal2String@temp 007B  
                     __Hrparam 0000                     vfprintf@ap 0056                       __Lrparam 0000  
                   vfprintf@fp 0052                   __Lsmallconst 0E00                     ?_vfpfcnvrt 0040  
              ___aodiv@divisor 000A                ___aodiv@counter 0012                     _ANSELBbits 000E9A  
                   _ANSELDbits 000EA7                     sprintf@fmt 0062                _colorVal2String 1610  
                   _T0CON0bits 000FD5                     _T0CON1bits 000FD6             __end_of_initUSART4 1AF0  
                     __ptext10 1AF0                       __ptext11 1B28                       __ptext20 0E14  
                     __ptext12 1B3E                       __ptext21 1596                       __ptext13 1B48  
                     __ptext30 1B10                       __ptext22 18BE                       __ptext14 1A80  
                     __ptext23 14CC                       __ptext15 1A56                       __ptext24 1B52  
                     __ptext16 1610                       __ptext25 1944                       __ptext17 16DE  
                     __ptext26 121A                       __ptext18 1870                       __ptext27 1092  
                     __ptext19 137E                       __ptext28 1AA8                       __ptext29 1984  
                 _SSP2CON1bits 000ED9                   _SSP2CON2bits 000EDA                       isa$xinst 000000  
                   _RC4STAbits 000EE7                       main@RGBC 00E1                       int$flags 005B  
                     _vfprintf 1870               ___aomod@dividend 0002                     _INTCONbits 000FF2  
           colorVal2String@buf 0079                       intlevel2 0000                      sprintf@ap 006C  
              ___aomod@divisor 000A        __end_of_colorVal2String 1680                    ??_vfpfcnvrt 0046  
              ___aomod@counter 0012               _color_click_init 19C4                       sprintf@f 006E  
                     sprintf@s 0060                     _SSP2DATPPS 000E1D                     _SSP2CLKPPS 000E1C  
               _interrupt_flag 00ED                     _TX4STAbits 000EE8                   ___aodiv@sign 0013  
              _sendCharSerial4 1B10                 RGBC2Serial@str 0007                   ___aomod@sign 0013  
