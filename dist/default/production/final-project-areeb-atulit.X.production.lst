

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Dec 11 20:49:09 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    62                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    63   000000                     
    64                           ; Generated 06/04/2022 GMT
    65                           ; 
    66                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    67                           ; All rights reserved.
    68                           ; 
    69                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    70                           ; 
    71                           ; Redistribution and use in source and binary forms, with or without modification, are
    72                           ; permitted provided that the following conditions are met:
    73                           ; 
    74                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    75                           ;        conditions and the following disclaimer.
    76                           ; 
    77                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    78                           ;        of conditions and the following disclaimer in the documentation and/or other
    79                           ;        materials provided with the distribution. Publication is not required when
    80                           ;        this file is used in an embedded application.
    81                           ; 
    82                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    83                           ;        software without specific prior written permission.
    84                           ; 
    85                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    86                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    87                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    88                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    89                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    90                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    91                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    92                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    93                           ; 
    94                           ; 
    95                           ; Code-generator required, PIC18F67K40 Definitions
    96                           ; 
    97                           ; SFR Addresses
    98   000000                     
    99                           	psect	idataBANK0
   100   0024B6                     __pidataBANK0:
   101                           	callstack 0
   102                           
   103                           ;initializer for _upperThreshold
   104   0024B6  09C4               	dw	2500
   105   000000                     _TRISBbits	set	3970
   106   000000                     _TX4REG	set	3812
   107   000000                     _RC4STAbits	set	3815
   108   000000                     _SP4BRGH	set	3814
   109   000000                     _LATHbits	set	3968
   110   000000                     _TRISCbits	set	3971
   111   000000                     _TRISDbits	set	3972
   112   000000                     _TRISEbits	set	3973
   113   000000                     _TRISFbits	set	3974
   114   000000                     _TRISAbits	set	3969
   115   000000                     _SSP2CON2bits	set	3802
   116   000000                     _RX4PPS	set	3605
   117   000000                     _SSP2CLKPPS	set	3612
   118   000000                     _SSP2DATPPS	set	3613
   119   000000                     _ANSELDbits	set	3751
   120   000000                     _SSP2ADD	set	3798
   121   000000                     _SSP2CON1bits	set	3801
   122   000000                     _LATAbits	set	3961
   123   000000                     _LATGbits	set	3967
   124   000000                     _TRISGbits	set	3975
   125   000000                     _T2PR	set	4028
   126   000000                     _T2CONbits	set	4029
   127   000000                     _TMR0L	set	4051
   128   000000                     _TMR0H	set	4052
   129   000000                     _T0CON0bits	set	4053
   130   000000                     _T0CON1bits	set	4054
   131   000000                     _INTCONbits	set	4082
   132   000000                     _TRISHbits	set	3976
   133   000000                     _CCPR2H	set	4006
   134   000000                     _CCPR1H	set	4010
   135   000000                     _LATDbits	set	3964
   136   000000                     _LATEbits	set	3965
   137   000000                     _LATFbits	set	3966
   138   000000                     _RC4REG	set	3811
   139   000000                     _SP4BRGL	set	3813
   140   000000                     _TX4STAbits	set	3816
   141   000000                     _BAUD4CONbits	set	3817
   142   000000                     _SSP2CON2	set	3802
   143   000000                     _SSP2STAT	set	3800
   144   000000                     _SSP2BUF	set	3797
   145   000000                     _IPR0bits	set	3615
   146   000000                     _PIE0bits	set	3625
   147   000000                     _PIE4bits	set	3629
   148   000000                     _RC0PPS	set	3682
   149   000000                     _RD5PPS	set	3695
   150   000000                     _RE2PPS	set	3700
   151   000000                     _ANSELBbits	set	3738
   152   000000                     _RD6PPS	set	3696
   153   000000                     _RC7PPS	set	3689
   154   000000                     _CCPR4H	set	3873
   155   000000                     _CCPR3H	set	3877
   156   000000                     _PIR0bits	set	3635
   157   000000                     _PIR4bits	set	3639
   158   000000                     _RE4PPS	set	3702
   159   000000                     _RG6PPS	set	3720
   160   000000                     _T2CLKCONbits	set	4031
   161   000000                     _T2HLTbits	set	4030
   162   000000                     _CCP1CONbits	set	4011
   163   000000                     _CCPTMRS0bits	set	4013
   164   000000                     _CCP2CONbits	set	4007
   165   000000                     _CCP3CONbits	set	3878
   166   000000                     _CCP4CONbits	set	3874
   167                           
   168                           	psect	smallconst
   169   000E00                     __psmallconst:
   170                           	callstack 0
   171   000E00  00                 	db	0
   172   000E01                     
   173                           ; BSR set to: 14
   174   000E01  52                 	db	82	;'R'
   175   000E02  47                 	db	71	;'G'
   176   000E03  42                 	db	66	;'B'
   177   000E04  43                 	db	67	;'C'
   178   000E05  3A                 	db	58	;':'
   179   000E06  25                 	db	37
   180   000E07  69                 	db	105	;'i'
   181   000E08  20                 	db	32
   182   000E09  25                 	db	37
   183   000E0A  69                 	db	105	;'i'
   184   000E0B  20                 	db	32
   185   000E0C  25                 	db	37
   186   000E0D  69                 	db	105	;'i'
   187   000E0E  20                 	db	32
   188   000E0F  25                 	db	37
   189   000E10  69                 	db	105	;'i'
   190   000E11  20                 	db	32
   191   000E12  25                 	db	37
   192   000E13  69                 	db	105	;'i'
   193   000E14  0A                 	db	10
   194   000E15  00                 	db	0
   195   000E16  00                 	db	0	; dummy byte at the end
   196   000000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   0021A4                     __pcinit:
   201                           	callstack 0
   202   0021A4                     start_initialization:
   203                           	callstack 0
   204   0021A4                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (2 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   0021A4  0EB6               	movlw	low __pidataBANK0
   210   0021A6  6EF6               	movwf	tblptrl,c
   211   0021A8  0E24               	movlw	high __pidataBANK0
   212   0021AA  6EF7               	movwf	tblptrh,c
   213   0021AC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   0021AE  6EF8               	movwf	tblptru,c
   215   0021B0  0009               	tblrd		*+	;fetch initializer
   216   0021B2  CFF5 F0E3          	movff	tablat,__pdataBANK0
   217   0021B6  0009               	tblrd		*+	;fetch initializer
   218   0021B8  CFF5 F0E4          	movff	tablat,__pdataBANK0+1
   219                           
   220                           ; Clear objects allocated to BANK0 (81 bytes)
   221   0021BC  EE00  F060         	lfsr	0,__pbssBANK0
   222   0021C0  0E51               	movlw	81
   223   0021C2                     clear_0:
   224   0021C2  6AEE               	clrf	postinc0,c
   225   0021C4  06E8               	decf	wreg,f,c
   226   0021C6  E1FD               	bnz	clear_0
   227                           
   228                           ; Clear objects allocated to COMRAM (35 bytes)
   229   0021C8  EE00  F030         	lfsr	0,__pbssCOMRAM
   230   0021CC  0E23               	movlw	35
   231   0021CE                     clear_1:
   232   0021CE  6AEE               	clrf	postinc0,c
   233   0021D0  06E8               	decf	wreg,f,c
   234   0021D2  E1FD               	bnz	clear_1
   235   0021D4                     end_of_initialization:
   236                           	callstack 0
   237   0021D4                     __end_of__initialization:
   238                           	callstack 0
   239   0021D4  9053               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   240   0021D6  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   241   0021D8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   242   0021DA  6EF8               	movwf	tblptru,c
   243   0021DC  0E0E               	movlw	high __Lsmallconst
   244   0021DE  6EF7               	movwf	tblptrh,c
   245   0021E0  0100               	movlb	0
   246   0021E2  EFF1  F00C         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249   000030                     __pbssCOMRAM:
   250                           	callstack 0
   251   000030                     _EUSART4RXbuf:
   252                           	callstack 0
   253   000030                     	ds	20
   254   000044                     _amb_clear:
   255                           	callstack 0
   256   000044                     	ds	2
   257   000046                     _amb_blue:
   258                           	callstack 0
   259   000046                     	ds	2
   260   000048                     _amb_green:
   261                           	callstack 0
   262   000048                     	ds	2
   263   00004A                     _amb_red:
   264                           	callstack 0
   265   00004A                     	ds	2
   266   00004C                     _interrupt_ctr:
   267                           	callstack 0
   268   00004C                     	ds	2
   269   00004E                     _motor_return:
   270                           	callstack 0
   271   00004E                     	ds	1
   272   00004F                     _TxBufReadCnt:
   273                           	callstack 0
   274   00004F                     	ds	1
   275   000050                     _TxBufWriteCnt:
   276                           	callstack 0
   277   000050                     	ds	1
   278   000051                     _RxBufReadCnt:
   279                           	callstack 0
   280   000051                     	ds	1
   281   000052                     _RxBufWriteCnt:
   282                           	callstack 0
   283   000052                     	ds	1
   284                           
   285                           	psect	bssBANK0
   286   000060                     __pbssBANK0:
   287                           	callstack 0
   288   000060                     _EUSART4TXbuf:
   289                           	callstack 0
   290   000060                     	ds	60
   291   00009C                     _buggy_path:
   292                           	callstack 0
   293   00009C                     	ds	15
   294   0000AB                     _lowerThreshold:
   295                           	callstack 0
   296   0000AB                     	ds	2
   297   0000AD                     _ctr:
   298                           	callstack 0
   299   0000AD                     	ds	2
   300   0000AF                     _interrupt_flag:
   301                           	callstack 0
   302   0000AF                     	ds	2
   303                           
   304                           	psect	dataBANK0
   305   0000E3                     __pdataBANK0:
   306                           	callstack 0
   307   0000E3                     _upperThreshold:
   308                           	callstack 0
   309   0000E3                     	ds	2
   310                           
   311                           	psect	cstackBANK0
   312   0000B1                     __pcstackBANK0:
   313                           	callstack 0
   314   0000B1                     main@RGBC:
   315                           	callstack 0
   316                           
   317                           ; 32 bytes @ 0x0
   318   0000B1                     	ds	32
   319   0000D1                     main@mL:
   320                           	callstack 0
   321                           
   322                           ; 9 bytes @ 0x20
   323   0000D1                     	ds	9
   324   0000DA                     main@mR:
   325                           	callstack 0
   326                           
   327                           ; 9 bytes @ 0x29
   328   0000DA                     	ds	9
   329                           
   330                           	psect	cstackCOMRAM
   331   000001                     __pcstackCOMRAM:
   332                           	callstack 0
   333   000001                     ??i2_I2C_2_Master_Idle:
   334   000001                     
   335                           ; 1 bytes @ 0x0
   336   000001                     	ds	1
   337   000002                     i2I2C_2_Master_Write@data_byte:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x1
   341   000002                     	ds	1
   342   000003                     i2color_writetoaddr@value:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x2
   346   000003                     	ds	1
   347   000004                     i2color_writetoaddr@address:
   348                           	callstack 0
   349                           
   350                           ; 1 bytes @ 0x3
   351   000004                     	ds	1
   352   000005                     ??i2_Color_Interrupts_init:
   353   000005                     i2Color_Interrupts_threshold@upperThreshold:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x4
   357   000005                     	ds	2
   358   000007                     i2Color_Interrupts_threshold@lowerThreshold:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x6
   362   000007                     	ds	2
   363   000009                     ??_I2C_2_Master_Idle:
   364   000009                     ?___wmul:
   365                           	callstack 0
   366   000009                     ?___fldiv:
   367                           	callstack 0
   368   000009                     initDCmotorsPWM@PWMperiod:
   369                           	callstack 0
   370   000009                     motorLinit@mL:
   371                           	callstack 0
   372   000009                     motorRinit@mR:
   373                           	callstack 0
   374   000009                     ___wmul@multiplier:
   375                           	callstack 0
   376   000009                     ___flge@ff1:
   377                           	callstack 0
   378   000009                     ___fldiv@b:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x8
   382   000009                     	ds	1
   383   00000A                     ??_I2C_2_Master_Read:
   384   00000A                     I2C_2_Master_Write@data_byte:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388   00000A                     	ds	1
   389   00000B                     color_writetoaddr@value:
   390                           	callstack 0
   391   00000B                     I2C_2_Master_Read@ack:
   392                           	callstack 0
   393   00000B                     ___wmul@multiplicand:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0xA
   397   00000B                     	ds	1
   398   00000C                     color_writetoaddr@address:
   399                           	callstack 0
   400   00000C                     I2C_2_Master_Read@tmp:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0xB
   404   00000C                     	ds	1
   405   00000D                     ??_Color_Interrupts_init:
   406   00000D                     ??_color_click_init:
   407   00000D                     ?_color_read_Red:
   408                           	callstack 0
   409   00000D                     ?_color_read_Green:
   410                           	callstack 0
   411   00000D                     ?_color_read_Blue:
   412                           	callstack 0
   413   00000D                     ?_color_read_Clear:
   414                           	callstack 0
   415   00000D                     Color_Interrupts_threshold@upperThreshold:
   416                           	callstack 0
   417   00000D                     ___wmul@product:
   418                           	callstack 0
   419   00000D                     ___flge@ff2:
   420                           	callstack 0
   421   00000D                     ___fldiv@a:
   422                           	callstack 0
   423                           
   424                           ; 4 bytes @ 0xC
   425   00000D                     	ds	2
   426   00000F                     ??_color_read_Red:
   427   00000F                     ??_color_read_Green:
   428   00000F                     ??_color_read_Blue:
   429   00000F                     ??_color_read_Clear:
   430   00000F                     ?___lwdiv:
   431                           	callstack 0
   432   00000F                     Color_Interrupts_threshold@lowerThreshold:
   433                           	callstack 0
   434   00000F                     ___lwdiv@dividend:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xE
   438   00000F                     	ds	2
   439   000011                     ??___fldiv:
   440   000011                     ??___flge:
   441   000011                     ___lwdiv@divisor:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x10
   445   000011                     	ds	1
   446   000012                     color_read_Red@tmp:
   447                           	callstack 0
   448   000012                     color_read_Green@tmp:
   449                           	callstack 0
   450   000012                     color_read_Blue@tmp:
   451                           	callstack 0
   452   000012                     color_read_Clear@tmp:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x11
   456   000012                     	ds	1
   457   000013                     ___lwdiv@quotient:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x12
   461   000013                     	ds	1
   462   000014                     ?___xxtofl:
   463                           	callstack 0
   464   000014                     ___xxtofl@val:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x13
   468   000014                     	ds	1
   469   000015                     ___lwdiv@counter:
   470                           	callstack 0
   471   000015                     ___fldiv@rem:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0x14
   475   000015                     	ds	1
   476   000016                     setMotorPWM@m:
   477                           	callstack 0
   478                           
   479                           ; 2 bytes @ 0x15
   480   000016                     	ds	2
   481   000018                     ??_setMotorPWM:
   482   000018                     ??___xxtofl:
   483                           
   484                           ; 1 bytes @ 0x17
   485   000018                     	ds	1
   486   000019                     ___fldiv@sign:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x18
   490   000019                     	ds	1
   491   00001A                     setMotorPWM@posDuty:
   492                           	callstack 0
   493   00001A                     ___fldiv@new_exp:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x19
   497   00001A                     	ds	1
   498   00001B                     setMotorPWM@negDuty:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x1A
   502   00001B                     	ds	1
   503   00001C                     ___xxtofl@sign:
   504                           	callstack 0
   505   00001C                     norm_stop@mL:
   506                           	callstack 0
   507   00001C                     turnLeft@mL:
   508                           	callstack 0
   509   00001C                     turnRight@mL:
   510                           	callstack 0
   511   00001C                     fullSpeedAhead@mL:
   512                           	callstack 0
   513   00001C                     ___fldiv@grs:
   514                           	callstack 0
   515                           
   516                           ; 4 bytes @ 0x1B
   517   00001C                     	ds	1
   518   00001D                     ___xxtofl@exp:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1C
   522   00001D                     	ds	1
   523   00001E                     norm_stop@mR:
   524                           	callstack 0
   525   00001E                     turnLeft@mR:
   526                           	callstack 0
   527   00001E                     turnRight@mR:
   528                           	callstack 0
   529   00001E                     fullSpeedAhead@mR:
   530                           	callstack 0
   531   00001E                     ___xxtofl@arg:
   532                           	callstack 0
   533                           
   534                           ; 4 bytes @ 0x1D
   535   00001E                     	ds	2
   536   000020                     ___fldiv@bexp:
   537                           	callstack 0
   538   000020                     motor_response@temp:
   539                           	callstack 0
   540                           
   541                           ; 2 bytes @ 0x1F
   542   000020                     	ds	1
   543   000021                     ___fldiv@aexp:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x20
   547   000021                     	ds	1
   548   000022                     color_read_RGBC@temp:
   549                           	callstack 0
   550   000022                     color_normalise@RGBC:
   551                           	callstack 0
   552   000022                     motor_response@mL:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x21
   556   000022                     	ds	2
   557   000024                     motor_response@mR:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x23
   561   000024                     	ds	2
   562   000026                     ??_motor_response:
   563                           
   564                           ; 1 bytes @ 0x25
   565   000026                     	ds	2
   566   000028                     motor_response@j:
   567                           	callstack 0
   568                           
   569                           ; 2 bytes @ 0x27
   570   000028                     	ds	2
   571   00002A                     motor_response@j_496:
   572                           	callstack 0
   573                           
   574                           ; 2 bytes @ 0x29
   575   00002A                     	ds	2
   576   00002C                     motor_response@j_497:
   577                           	callstack 0
   578                           
   579                           ; 2 bytes @ 0x2B
   580   00002C                     	ds	2
   581   00002E                     ??_main:
   582                           
   583                           ; 1 bytes @ 0x2D
   584   00002E                     	ds	2
   585                           
   586 ;;
   587 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   588 ;;
   589 ;; *************** function _main *****************
   590 ;; Defined at:
   591 ;;		line 22 in file "main.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;		None
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  buf           100    0        unsigned char [100]
   596 ;;  RGBC           32    0[BANK0 ] struct RGBC_val
   597 ;;  mR              9   41[BANK0 ] struct DC_motor
   598 ;;  mL              9   32[BANK0 ] struct DC_motor
   599 ;;  amb_clear       2    0        int 
   600 ;;  amb_blue        2    0        int 
   601 ;;  amb_green       2    0        int 
   602 ;;  amb_red         2    0        int 
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   613 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   614 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   615 ;;      Totals:         2      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   616 ;;Total ram usage:       52 bytes
   617 ;; Hardware stack levels required when called: 10
   618 ;; This function calls:
   619 ;;		_Color_Interrupts_init
   620 ;;		_Color_Interrupts_threshold
   621 ;;		_Interrupts_init
   622 ;;		_color_click_init
   623 ;;		_color_normalise
   624 ;;		_color_read_Blue
   625 ;;		_color_read_Clear
   626 ;;		_color_read_Green
   627 ;;		_color_read_RGBC
   628 ;;		_color_read_Red
   629 ;;		_fullSpeedAhead
   630 ;;		_initDCmotorsPWM
   631 ;;		_motorLinit
   632 ;;		_motorRinit
   633 ;;		_motor_response
   634 ;;		_norm_stop
   635 ;;		_persistence_register
   636 ;;		_tricolorLED
   637 ;; This function is called by:
   638 ;;		Startup code after reset
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text0
   643   0019E2                     __ptext0:
   644                           	callstack 0
   645   0019E2                     _main:
   646                           	callstack 21
   647   0019E2                     
   648                           ;main.c: 24:     tricolorLED();
   649   0019E2  EC14  F012         	call	_tricolorLED	;wreg free
   650   0019E6                     
   651                           ;main.c: 25:     RGBC_val RGBC;;main.c: 26:     char buf[100];;main.c: 28:     color_cli
      +                          ck_init();
   652   0019E6  EC14  F011         	call	_color_click_init	;wreg free
   653   0019EA                     
   654                           ;main.c: 30:     Interrupts_init();
   655   0019EA  EC1F  F012         	call	_Interrupts_init	;wreg free
   656                           
   657                           ;main.c: 31:     Color_Interrupts_init();
   658   0019EE  ECFA  F011         	call	_Color_Interrupts_init	;wreg free
   659                           
   660                           ;main.c: 32:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
   661   0019F2  C0E3  F00D         	movff	_upperThreshold,Color_Interrupts_threshold@upperThreshold
   662   0019F6  C0E4  F00E         	movff	_upperThreshold+1,Color_Interrupts_threshold@upperThreshold+1
   663   0019FA  C0AB  F00F         	movff	_lowerThreshold,Color_Interrupts_threshold@lowerThreshold
   664   0019FE  C0AC  F010         	movff	_lowerThreshold+1,Color_Interrupts_threshold@lowerThreshold+1
   665   001A02  EC75  F011         	call	_Color_Interrupts_threshold	;wreg free
   666                           
   667                           ;main.c: 33:     persistence_register();
   668   001A06  EC2A  F012         	call	_persistence_register	;wreg free
   669   001A0A                     
   670                           ;main.c: 35:     initDCmotorsPWM(200);
   671   001A0A  0E00               	movlw	0
   672   001A0C  6E0A               	movwf	(initDCmotorsPWM@PWMperiod+1)^0,c
   673   001A0E  0EC8               	movlw	200
   674   001A10  6E09               	movwf	initDCmotorsPWM@PWMperiod^0,c
   675   001A12  ECDC  F00E         	call	_initDCmotorsPWM	;wreg free
   676   001A16                     
   677                           ;main.c: 36:     DC_motor mL, mR;;main.c: 37:     motorLinit(&mL);
   678   001A16  0ED1               	movlw	low main@mL
   679   001A18  6E09               	movwf	motorLinit@mL^0,c
   680   001A1A  0E00               	movlw	high main@mL
   681   001A1C  6E0A               	movwf	(motorLinit@mL+1)^0,c
   682   001A1E  ECFD  F00F         	call	_motorLinit	;wreg free
   683   001A22                     
   684                           ;main.c: 38:     motorRinit(&mR);
   685   001A22  0EDA               	movlw	low main@mR
   686   001A24  6E09               	movwf	motorRinit@mR^0,c
   687   001A26  0E00               	movlw	high main@mR
   688   001A28  6E0A               	movwf	(motorRinit@mR+1)^0,c
   689   001A2A  ECC8  F00F         	call	_motorRinit	;wreg free
   690   001A2E                     
   691                           ;main.c: 40:     TRISEbits.TRISE2 = 0;
   692   001A2E  9485               	bcf	133,2,c	;volatile
   693   001A30                     
   694                           ;main.c: 41:     TRISEbits.TRISE4 = 0;
   695   001A30  9885               	bcf	133,4,c	;volatile
   696   001A32                     
   697                           ;main.c: 42:     TRISCbits.TRISC7 = 0;
   698   001A32  9E83               	bcf	131,7,c	;volatile
   699   001A34                     
   700                           ;main.c: 43:     TRISGbits.TRISG6 = 0;
   701   001A34  9C87               	bcf	135,6,c	;volatile
   702   001A36                     
   703                           ;main.c: 44:     TRISDbits.TRISD7 = 0;
   704   001A36  9E84               	bcf	132,7,c	;volatile
   705   001A38                     
   706                           ;main.c: 45:     LATDbits.LATD7 = 0;
   707   001A38  9E7C               	bcf	124,7,c	;volatile
   708   001A3A                     
   709                           ;main.c: 46:     TRISHbits.TRISH3 = 0;
   710   001A3A  9688               	bcf	136,3,c	;volatile
   711   001A3C                     
   712                           ;main.c: 47:     LATHbits.LATH3 = 0;
   713   001A3C  9680               	bcf	128,3,c	;volatile
   714   001A3E  EC32  F010         	call	_color_read_Red	;wreg free
   715   001A42  ECAA  F010         	call	_color_read_Blue	;wreg free
   716   001A46  EC5A  F010         	call	_color_read_Green	;wreg free
   717   001A4A  EC82  F010         	call	_color_read_Clear	;wreg free
   718   001A4E                     l2924:
   719                           
   720                           ;main.c: 56:         fullSpeedAhead(&mL, &mR);
   721   001A4E  0ED1               	movlw	low main@mL
   722   001A50  6E1C               	movwf	fullSpeedAhead@mL^0,c
   723   001A52  0E00               	movlw	high main@mL
   724   001A54  6E1D               	movwf	(fullSpeedAhead@mL+1)^0,c
   725   001A56  0EDA               	movlw	low main@mR
   726   001A58  6E1E               	movwf	fullSpeedAhead@mR^0,c
   727   001A5A  0E00               	movlw	high main@mR
   728   001A5C  6E1F               	movwf	(fullSpeedAhead@mR+1)^0,c
   729   001A5E  EC04  F00E         	call	_fullSpeedAhead	;wreg free
   730   001A62                     
   731                           ;main.c: 58:         LATHbits.LATH3 = 1;
   732   001A62  8680               	bsf	128,3,c	;volatile
   733   001A64                     
   734                           ;main.c: 59:         if (interrupt_flag == 1 ) {
   735   001A64  0100               	movlb	0	; () banked
   736   001A66  05AF               	decf	_interrupt_flag& (0+255),w,b
   737   001A68  11B0               	iorwf	(_interrupt_flag+1)& (0+255),w,b
   738   001A6A  A4D8               	btfss	status,2,c
   739   001A6C  EF3A  F00D         	goto	u1771
   740   001A70  EF3C  F00D         	goto	u1770
   741   001A74                     u1771:
   742   001A74  EF27  F00D         	goto	l2924
   743   001A78                     u1770:
   744   001A78                     
   745                           ; BSR set to: 0
   746                           ;main.c: 61:             norm_stop(&mL, &mR);
   747   001A78  0ED1               	movlw	low main@mL
   748   001A7A  6E1C               	movwf	norm_stop@mL^0,c
   749   001A7C  0E00               	movlw	high main@mL
   750   001A7E  6E1D               	movwf	(norm_stop@mL+1)^0,c
   751   001A80  0EDA               	movlw	low main@mR
   752   001A82  6E1E               	movwf	norm_stop@mR^0,c
   753   001A84  0E00               	movlw	high main@mR
   754   001A86  6E1F               	movwf	(norm_stop@mR+1)^0,c
   755   001A88  EC2E  F011         	call	_norm_stop	;wreg free
   756   001A8C                     
   757                           ;main.c: 62:             _delay((unsigned long)((1000)*(64000000/4000.0)));
   758   001A8C  0E52               	movlw	82
   759   001A8E  6E2F               	movwf	(??_main+1)^0,c
   760   001A90  0E2B               	movlw	43
   761   001A92  6E2E               	movwf	??_main^0,c
   762   001A94  0E00               	movlw	0
   763   001A96                     u1837:
   764   001A96  2EE8               	decfsz	wreg,f,c
   765   001A98  D7FE               	bra	u1837
   766   001A9A  2E2E               	decfsz	??_main^0,f,c
   767   001A9C  D7FC               	bra	u1837
   768   001A9E  2E2F               	decfsz	(??_main+1)^0,f,c
   769   001AA0  D7FA               	bra	u1837
   770   001AA2  D000               	nop2	
   771   001AA4                     
   772                           ;main.c: 63:             LATDbits.LATD7 = 0;
   773   001AA4  9E7C               	bcf	124,7,c	;volatile
   774   001AA6                     
   775                           ;main.c: 64:             color_read_RGBC(&RGBC);
   776   001AA6  0EB1               	movlw	low main@RGBC
   777   001AA8  6E22               	movwf	color_read_RGBC@temp^0,c
   778   001AAA  0E00               	movlw	high main@RGBC
   779   001AAC  6E23               	movwf	(color_read_RGBC@temp+1)^0,c
   780   001AAE  EC79  F00E         	call	_color_read_RGBC	;wreg free
   781   001AB2                     
   782                           ;main.c: 65:             color_normalise(&RGBC);
   783   001AB2  0EB1               	movlw	low main@RGBC
   784   001AB4  6E22               	movwf	color_normalise@RGBC^0,c
   785   001AB6  0E00               	movlw	high main@RGBC
   786   001AB8  6E23               	movwf	(color_normalise@RGBC+1)^0,c
   787   001ABA  EC48  F00C         	call	_color_normalise	;wreg free
   788   001ABE                     
   789                           ;main.c: 66:             buggy_path[ctr] = motor_response(&RGBC,&mL,&mR);
   790   001ABE  0EB1               	movlw	low main@RGBC
   791   001AC0  6E20               	movwf	motor_response@temp^0,c
   792   001AC2  0E00               	movlw	high main@RGBC
   793   001AC4  6E21               	movwf	(motor_response@temp+1)^0,c
   794   001AC6  0ED1               	movlw	low main@mL
   795   001AC8  6E22               	movwf	motor_response@mL^0,c
   796   001ACA  0E00               	movlw	high main@mL
   797   001ACC  6E23               	movwf	(motor_response@mL+1)^0,c
   798   001ACE  0EDA               	movlw	low main@mR
   799   001AD0  6E24               	movwf	motor_response@mR^0,c
   800   001AD2  0E00               	movlw	high main@mR
   801   001AD4  6E25               	movwf	(motor_response@mR+1)^0,c
   802   001AD6  EC0C  F007         	call	_motor_response	;wreg free
   803   001ADA  6E2E               	movwf	??_main^0,c
   804   001ADC  0E9C               	movlw	low _buggy_path
   805   001ADE  0100               	movlb	0	; () banked
   806   001AE0  25AD               	addwf	_ctr& (0+255),w,b
   807   001AE2  6ED9               	movwf	fsr2l,c
   808   001AE4  0E00               	movlw	high _buggy_path
   809   001AE6  21AE               	addwfc	(_ctr+1)& (0+255),w,b
   810   001AE8  6EDA               	movwf	fsr2h,c
   811   001AEA  C02E  FFDF         	movff	??_main,indf2
   812   001AEE                     
   813                           ; BSR set to: 0
   814                           ;main.c: 67:             ctr++;
   815   001AEE  4BAD               	infsnz	_ctr& (0+255),f,b
   816   001AF0  2BAE               	incf	(_ctr+1)& (0+255),f,b
   817   001AF2                     
   818                           ; BSR set to: 0
   819                           ;main.c: 75:             LATHbits.LATH3 = 0;
   820   001AF2  9680               	bcf	128,3,c	;volatile
   821   001AF4                     
   822                           ; BSR set to: 0
   823                           ;main.c: 76:             interrupt_flag = 0;
   824   001AF4  0E00               	movlw	0
   825   001AF6  6FB0               	movwf	(_interrupt_flag+1)& (0+255),b
   826   001AF8  0E00               	movlw	0
   827   001AFA  6FAF               	movwf	_interrupt_flag& (0+255),b
   828   001AFC  EF27  F00D         	goto	l2924
   829   001B00  EF19  F000         	goto	start
   830   001B04                     __end_of_main:
   831                           	callstack 0
   832                           
   833 ;; *************** function _tricolorLED *****************
   834 ;; Defined at:
   835 ;;		line 113 in file "color.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		None
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 6
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text1
   864   002428                     __ptext1:
   865                           	callstack 0
   866   002428                     _tricolorLED:
   867                           	callstack 24
   868   002428                     
   869                           ;color.c: 115:     TRISGbits.TRISG0 = 0;
   870   002428  9087               	bcf	135,0,c	;volatile
   871                           
   872                           ;color.c: 116:     LATGbits.LATG0 = 1;
   873   00242A  807F               	bsf	127,0,c	;volatile
   874                           
   875                           ;color.c: 117:     TRISAbits.TRISA4 = 0;
   876   00242C  9881               	bcf	129,4,c	;volatile
   877                           
   878                           ;color.c: 118:     LATAbits.LATA4 = 1;
   879   00242E  8879               	bsf	121,4,c	;volatile
   880                           
   881                           ;color.c: 119:     TRISFbits.TRISF7 = 0;
   882   002430  9E86               	bcf	134,7,c	;volatile
   883                           
   884                           ;color.c: 120:     LATFbits.LATF7 = 1;
   885   002432  8E7E               	bsf	126,7,c	;volatile
   886                           
   887                           ;color.c: 121:     TRISAbits.TRISA3 = 0;
   888   002434  9681               	bcf	129,3,c	;volatile
   889                           
   890                           ;color.c: 122:     LATAbits.LATA3 = 1;
   891   002436  8679               	bsf	121,3,c	;volatile
   892                           
   893                           ;color.c: 123:     TRISEbits.TRISE7 = 0;
   894   002438  9E85               	bcf	133,7,c	;volatile
   895                           
   896                           ;color.c: 124:     LATEbits.LATE7 = 1;
   897   00243A  8E7D               	bsf	125,7,c	;volatile
   898   00243C  0012               	return		;funcret
   899   00243E                     __end_of_tricolorLED:
   900                           	callstack 0
   901                           
   902 ;; *************** function _persistence_register *****************
   903 ;; Defined at:
   904 ;;		line 46 in file "interrupts.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;Total ram usage:        0 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 9
   925 ;; This function calls:
   926 ;;		_color_writetoaddr
   927 ;; This function is called by:
   928 ;;		_main
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text2
   933   002454                     __ptext2:
   934                           	callstack 0
   935   002454                     _persistence_register:
   936                           	callstack 21
   937   002454                     
   938                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
   939   002454  0E02               	movlw	2
   940   002456  6E0B               	movwf	color_writetoaddr@value^0,c
   941   002458  0E0C               	movlw	12
   942   00245A  ECDA  F011         	call	_color_writetoaddr
   943   00245E  0012               	return		;funcret
   944   002460                     __end_of_persistence_register:
   945                           	callstack 0
   946                           
   947 ;; *************** function _motor_response *****************
   948 ;; Defined at:
   949 ;;		line 127 in file "color.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  temp            2   31[COMRAM] PTR struct RGBC_val
   952 ;;		 -> main@RGBC(32), 
   953 ;;  mL              2   33[COMRAM] PTR struct DC_motor
   954 ;;		 -> main@mL(9), 
   955 ;;  mR              2   35[COMRAM] PTR struct DC_motor
   956 ;;		 -> main@mR(9), 
   957 ;; Auto vars:     Size  Location     Type
   958 ;;  j               2   43[COMRAM] int 
   959 ;;  j               2   41[COMRAM] int 
   960 ;;  j               2   39[COMRAM] int 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      unsigned char 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   970 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   971 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   973 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   974 ;;Total ram usage:       14 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 9
   977 ;; This function calls:
   978 ;;		___flge
   979 ;;		_norm_stop
   980 ;;		_turnLeft
   981 ;;		_turnRight
   982 ;; This function is called by:
   983 ;;		_main
   984 ;; This function uses a non-reentrant model
   985 ;;
   986                           
   987                           	psect	text3
   988   000E18                     __ptext3:
   989                           	callstack 0
   990   000E18                     _motor_response:
   991                           	callstack 21
   992   000E18                     
   993                           ;color.c: 128:     if (temp->norm_G >8) {
   994   000E18  0E00               	movlw	0
   995   000E1A  6E09               	movwf	___flge@ff1^0,c
   996   000E1C  0E00               	movlw	0
   997   000E1E  6E0A               	movwf	(___flge@ff1+1)^0,c
   998   000E20  0E00               	movlw	0
   999   000E22  6E0B               	movwf	(___flge@ff1+2)^0,c
  1000   000E24  0E41               	movlw	65
  1001   000E26  6E0C               	movwf	(___flge@ff1+3)^0,c
  1002   000E28  EE20 F014          	lfsr	2,20
  1003   000E2C  5020               	movf	motor_response@temp^0,w,c
  1004   000E2E  26D9               	addwf	fsr2l,f,c
  1005   000E30  5021               	movf	(motor_response@temp+1)^0,w,c
  1006   000E32  22DA               	addwfc	fsr2h,f,c
  1007   000E34  CFDE F00D          	movff	postinc2,___flge@ff2
  1008   000E38  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1009   000E3C  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1010   000E40  CFDE F010          	movff	postinc2,___flge@ff2+3
  1011   000E44  EC82  F00D         	call	___flge	;wreg free
  1012   000E48  B0D8               	btfsc	status,0,c
  1013   000E4A  EF29  F007         	goto	u1451
  1014   000E4E  EF2B  F007         	goto	u1450
  1015   000E52                     u1451:
  1016   000E52  EF6E  F007         	goto	l2600
  1017   000E56                     u1450:
  1018   000E56                     
  1019                           ;color.c: 129:         for (int j = 0; j <= 15; j++) {
  1020   000E56  0E00               	movlw	0
  1021   000E58  6E29               	movwf	(motor_response@j+1)^0,c
  1022   000E5A  0E00               	movlw	0
  1023   000E5C  6E28               	movwf	motor_response@j^0,c
  1024   000E5E                     l2586:
  1025                           
  1026                           ;color.c: 130:             turnRight(mL, mR);
  1027   000E5E  C022  F01C         	movff	motor_response@mL,turnRight@mL
  1028   000E62  C023  F01D         	movff	motor_response@mL+1,turnRight@mL+1
  1029   000E66  C024  F01E         	movff	motor_response@mR,turnRight@mR
  1030   000E6A  C025  F01F         	movff	motor_response@mR+1,turnRight@mR+1
  1031   000E6E  EC56  F00F         	call	_turnRight	;wreg free
  1032   000E72                     
  1033                           ;color.c: 131:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1034   000E72  0E03               	movlw	3
  1035   000E74  6E27               	movwf	(??_motor_response+1)^0,c
  1036   000E76  0E70               	movlw	112
  1037   000E78  6E26               	movwf	??_motor_response^0,c
  1038   000E7A  0E5C               	movlw	92
  1039   000E7C                     u1847:
  1040   000E7C  2EE8               	decfsz	wreg,f,c
  1041   000E7E  D7FE               	bra	u1847
  1042   000E80  2E26               	decfsz	??_motor_response^0,f,c
  1043   000E82  D7FC               	bra	u1847
  1044   000E84  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1045   000E86  D7FA               	bra	u1847
  1046   000E88  D000               	nop2	
  1047   000E8A                     
  1048                           ;color.c: 132:             norm_stop(mL, mR);
  1049   000E8A  C022  F01C         	movff	motor_response@mL,norm_stop@mL
  1050   000E8E  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1051   000E92  C024  F01E         	movff	motor_response@mR,norm_stop@mR
  1052   000E96  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1053   000E9A  EC2E  F011         	call	_norm_stop	;wreg free
  1054                           
  1055                           ;color.c: 133:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1056   000E9E  0E03               	movlw	3
  1057   000EA0  6E27               	movwf	(??_motor_response+1)^0,c
  1058   000EA2  0E70               	movlw	112
  1059   000EA4  6E26               	movwf	??_motor_response^0,c
  1060   000EA6  0E5C               	movlw	92
  1061   000EA8                     u1857:
  1062   000EA8  2EE8               	decfsz	wreg,f,c
  1063   000EAA  D7FE               	bra	u1857
  1064   000EAC  2E26               	decfsz	??_motor_response^0,f,c
  1065   000EAE  D7FC               	bra	u1857
  1066   000EB0  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1067   000EB2  D7FA               	bra	u1857
  1068   000EB4  D000               	nop2	
  1069   000EB6                     
  1070                           ;color.c: 134:         }
  1071   000EB6  4A28               	infsnz	motor_response@j^0,f,c
  1072   000EB8  2A29               	incf	(motor_response@j+1)^0,f,c
  1073   000EBA  BE29               	btfsc	(motor_response@j+1)^0,7,c
  1074   000EBC  EF69  F007         	goto	u1461
  1075   000EC0  5029               	movf	(motor_response@j+1)^0,w,c
  1076   000EC2  E109               	bnz	u1460
  1077   000EC4  0E10               	movlw	16
  1078   000EC6  5C28               	subwf	motor_response@j^0,w,c
  1079   000EC8  A0D8               	btfss	status,0,c
  1080   000ECA  EF69  F007         	goto	u1461
  1081   000ECE  EF6B  F007         	goto	u1460
  1082   000ED2                     u1461:
  1083   000ED2  EF2F  F007         	goto	l2586
  1084   000ED6                     u1460:
  1085   000ED6                     
  1086                           ;color.c: 135:         return 1;
  1087   000ED6  0E01               	movlw	1
  1088   000ED8  EFEA  F008         	goto	l117
  1089   000EDC                     l2600:
  1090   000EDC  0E00               	movlw	0
  1091   000EDE  6E09               	movwf	___flge@ff1^0,c
  1092   000EE0  0E00               	movlw	0
  1093   000EE2  6E0A               	movwf	(___flge@ff1+1)^0,c
  1094   000EE4  0E90               	movlw	144
  1095   000EE6  6E0B               	movwf	(___flge@ff1+2)^0,c
  1096   000EE8  0E40               	movlw	64
  1097   000EEA  6E0C               	movwf	(___flge@ff1+3)^0,c
  1098   000EEC  EE20 F018          	lfsr	2,24
  1099   000EF0  5020               	movf	motor_response@temp^0,w,c
  1100   000EF2  26D9               	addwf	fsr2l,f,c
  1101   000EF4  5021               	movf	(motor_response@temp+1)^0,w,c
  1102   000EF6  22DA               	addwfc	fsr2h,f,c
  1103   000EF8  CFDE F00D          	movff	postinc2,___flge@ff2
  1104   000EFC  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1105   000F00  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1106   000F04  CFDE F010          	movff	postinc2,___flge@ff2+3
  1107   000F08  EC82  F00D         	call	___flge	;wreg free
  1108   000F0C  B0D8               	btfsc	status,0,c
  1109   000F0E  EF8B  F007         	goto	u1471
  1110   000F12  EF8D  F007         	goto	u1470
  1111   000F16                     u1471:
  1112   000F16  EFEF  F007         	goto	l2624
  1113   000F1A                     u1470:
  1114   000F1A  EE20 F018          	lfsr	2,24
  1115   000F1E  5020               	movf	motor_response@temp^0,w,c
  1116   000F20  26D9               	addwf	fsr2l,f,c
  1117   000F22  5021               	movf	(motor_response@temp+1)^0,w,c
  1118   000F24  22DA               	addwfc	fsr2h,f,c
  1119   000F26  CFDE F009          	movff	postinc2,___flge@ff1
  1120   000F2A  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1121   000F2E  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1122   000F32  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1123   000F36  0E66               	movlw	102
  1124   000F38  6E0D               	movwf	___flge@ff2^0,c
  1125   000F3A  0E66               	movlw	102
  1126   000F3C  6E0E               	movwf	(___flge@ff2+1)^0,c
  1127   000F3E  0EA6               	movlw	166
  1128   000F40  6E0F               	movwf	(___flge@ff2+2)^0,c
  1129   000F42  0E40               	movlw	64
  1130   000F44  6E10               	movwf	(___flge@ff2+3)^0,c
  1131   000F46  EC82  F00D         	call	___flge	;wreg free
  1132   000F4A  B0D8               	btfsc	status,0,c
  1133   000F4C  EFAA  F007         	goto	u1481
  1134   000F50  EFAC  F007         	goto	u1480
  1135   000F54                     u1481:
  1136   000F54  EFEF  F007         	goto	l2624
  1137   000F58                     u1480:
  1138   000F58                     
  1139                           ;color.c: 138:         for (int j = 0; j <= 15; j++) {
  1140   000F58  0E00               	movlw	0
  1141   000F5A  6E2B               	movwf	(motor_response@j_496+1)^0,c
  1142   000F5C  0E00               	movlw	0
  1143   000F5E  6E2A               	movwf	motor_response@j_496^0,c
  1144   000F60                     l2610:
  1145                           
  1146                           ;color.c: 139:             turnLeft(mL, mR);
  1147   000F60  C022  F01C         	movff	motor_response@mL,turnLeft@mL
  1148   000F64  C023  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  1149   000F68  C024  F01E         	movff	motor_response@mR,turnLeft@mR
  1150   000F6C  C025  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  1151   000F70  EC8F  F00F         	call	_turnLeft	;wreg free
  1152   000F74                     
  1153                           ;color.c: 140:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1154   000F74  0E03               	movlw	3
  1155   000F76  6E27               	movwf	(??_motor_response+1)^0,c
  1156   000F78  0E70               	movlw	112
  1157   000F7A  6E26               	movwf	??_motor_response^0,c
  1158   000F7C  0E5C               	movlw	92
  1159   000F7E                     u1867:
  1160   000F7E  2EE8               	decfsz	wreg,f,c
  1161   000F80  D7FE               	bra	u1867
  1162   000F82  2E26               	decfsz	??_motor_response^0,f,c
  1163   000F84  D7FC               	bra	u1867
  1164   000F86  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1165   000F88  D7FA               	bra	u1867
  1166   000F8A  D000               	nop2	
  1167   000F8C                     
  1168                           ;color.c: 141:             norm_stop(mL, mR);
  1169   000F8C  C022  F01C         	movff	motor_response@mL,norm_stop@mL
  1170   000F90  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1171   000F94  C024  F01E         	movff	motor_response@mR,norm_stop@mR
  1172   000F98  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1173   000F9C  EC2E  F011         	call	_norm_stop	;wreg free
  1174                           
  1175                           ;color.c: 142:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1176   000FA0  0E03               	movlw	3
  1177   000FA2  6E27               	movwf	(??_motor_response+1)^0,c
  1178   000FA4  0E70               	movlw	112
  1179   000FA6  6E26               	movwf	??_motor_response^0,c
  1180   000FA8  0E5C               	movlw	92
  1181   000FAA                     u1877:
  1182   000FAA  2EE8               	decfsz	wreg,f,c
  1183   000FAC  D7FE               	bra	u1877
  1184   000FAE  2E26               	decfsz	??_motor_response^0,f,c
  1185   000FB0  D7FC               	bra	u1877
  1186   000FB2  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1187   000FB4  D7FA               	bra	u1877
  1188   000FB6  D000               	nop2	
  1189   000FB8                     
  1190                           ;color.c: 143:         }
  1191   000FB8  4A2A               	infsnz	motor_response@j_496^0,f,c
  1192   000FBA  2A2B               	incf	(motor_response@j_496+1)^0,f,c
  1193   000FBC  BE2B               	btfsc	(motor_response@j_496+1)^0,7,c
  1194   000FBE  EFEA  F007         	goto	u1491
  1195   000FC2  502B               	movf	(motor_response@j_496+1)^0,w,c
  1196   000FC4  E109               	bnz	u1490
  1197   000FC6  0E10               	movlw	16
  1198   000FC8  5C2A               	subwf	motor_response@j_496^0,w,c
  1199   000FCA  A0D8               	btfss	status,0,c
  1200   000FCC  EFEA  F007         	goto	u1491
  1201   000FD0  EFEC  F007         	goto	u1490
  1202   000FD4                     u1491:
  1203   000FD4  EFB0  F007         	goto	l2610
  1204   000FD8                     u1490:
  1205   000FD8                     
  1206                           ;color.c: 144:         return 2;
  1207   000FD8  0E02               	movlw	2
  1208   000FDA  EFEA  F008         	goto	l117
  1209   000FDE                     l2624:
  1210   000FDE  0E33               	movlw	51
  1211   000FE0  6E09               	movwf	___flge@ff1^0,c
  1212   000FE2  0E33               	movlw	51
  1213   000FE4  6E0A               	movwf	(___flge@ff1+1)^0,c
  1214   000FE6  0E33               	movlw	51
  1215   000FE8  6E0B               	movwf	(___flge@ff1+2)^0,c
  1216   000FEA  0E40               	movlw	64
  1217   000FEC  6E0C               	movwf	(___flge@ff1+3)^0,c
  1218   000FEE  EE20 F018          	lfsr	2,24
  1219   000FF2  5020               	movf	motor_response@temp^0,w,c
  1220   000FF4  26D9               	addwf	fsr2l,f,c
  1221   000FF6  5021               	movf	(motor_response@temp+1)^0,w,c
  1222   000FF8  22DA               	addwfc	fsr2h,f,c
  1223   000FFA  CFDE F00D          	movff	postinc2,___flge@ff2
  1224   000FFE  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1225   001002  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1226   001006  CFDE F010          	movff	postinc2,___flge@ff2+3
  1227   00100A  EC82  F00D         	call	___flge	;wreg free
  1228   00100E  B0D8               	btfsc	status,0,c
  1229   001010  EF0C  F008         	goto	u1501
  1230   001014  EF0E  F008         	goto	u1500
  1231   001018                     u1501:
  1232   001018  EFEA  F008         	goto	l117
  1233   00101C                     u1500:
  1234   00101C  EE20 F018          	lfsr	2,24
  1235   001020  5020               	movf	motor_response@temp^0,w,c
  1236   001022  26D9               	addwf	fsr2l,f,c
  1237   001024  5021               	movf	(motor_response@temp+1)^0,w,c
  1238   001026  22DA               	addwfc	fsr2h,f,c
  1239   001028  CFDE F009          	movff	postinc2,___flge@ff1
  1240   00102C  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1241   001030  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1242   001034  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1243   001038  0ECD               	movlw	205
  1244   00103A  6E0D               	movwf	___flge@ff2^0,c
  1245   00103C  0ECC               	movlw	204
  1246   00103E  6E0E               	movwf	(___flge@ff2+1)^0,c
  1247   001040  0E4C               	movlw	76
  1248   001042  6E0F               	movwf	(___flge@ff2+2)^0,c
  1249   001044  0E40               	movlw	64
  1250   001046  6E10               	movwf	(___flge@ff2+3)^0,c
  1251   001048  EC82  F00D         	call	___flge	;wreg free
  1252   00104C  B0D8               	btfsc	status,0,c
  1253   00104E  EF2B  F008         	goto	u1511
  1254   001052  EF2D  F008         	goto	u1510
  1255   001056                     u1511:
  1256   001056  EFEA  F008         	goto	l117
  1257   00105A                     u1510:
  1258   00105A  0E33               	movlw	51
  1259   00105C  6E09               	movwf	___flge@ff1^0,c
  1260   00105E  0E33               	movlw	51
  1261   001060  6E0A               	movwf	(___flge@ff1+1)^0,c
  1262   001062  0E33               	movlw	51
  1263   001064  6E0B               	movwf	(___flge@ff1+2)^0,c
  1264   001066  0E40               	movlw	64
  1265   001068  6E0C               	movwf	(___flge@ff1+3)^0,c
  1266   00106A  EE20 F010          	lfsr	2,16
  1267   00106E  5020               	movf	motor_response@temp^0,w,c
  1268   001070  26D9               	addwf	fsr2l,f,c
  1269   001072  5021               	movf	(motor_response@temp+1)^0,w,c
  1270   001074  22DA               	addwfc	fsr2h,f,c
  1271   001076  CFDE F00D          	movff	postinc2,___flge@ff2
  1272   00107A  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1273   00107E  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1274   001082  CFDE F010          	movff	postinc2,___flge@ff2+3
  1275   001086  EC82  F00D         	call	___flge	;wreg free
  1276   00108A  B0D8               	btfsc	status,0,c
  1277   00108C  EF4A  F008         	goto	u1521
  1278   001090  EF4C  F008         	goto	u1520
  1279   001094                     u1521:
  1280   001094  EFEA  F008         	goto	l117
  1281   001098                     u1520:
  1282   001098  EE20 F010          	lfsr	2,16
  1283   00109C  5020               	movf	motor_response@temp^0,w,c
  1284   00109E  26D9               	addwf	fsr2l,f,c
  1285   0010A0  5021               	movf	(motor_response@temp+1)^0,w,c
  1286   0010A2  22DA               	addwfc	fsr2h,f,c
  1287   0010A4  CFDE F009          	movff	postinc2,___flge@ff1
  1288   0010A8  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1289   0010AC  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1290   0010B0  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1291   0010B4  0ECD               	movlw	205
  1292   0010B6  6E0D               	movwf	___flge@ff2^0,c
  1293   0010B8  0ECC               	movlw	204
  1294   0010BA  6E0E               	movwf	(___flge@ff2+1)^0,c
  1295   0010BC  0E4C               	movlw	76
  1296   0010BE  6E0F               	movwf	(___flge@ff2+2)^0,c
  1297   0010C0  0E40               	movlw	64
  1298   0010C2  6E10               	movwf	(___flge@ff2+3)^0,c
  1299   0010C4  EC82  F00D         	call	___flge	;wreg free
  1300   0010C8  B0D8               	btfsc	status,0,c
  1301   0010CA  EF69  F008         	goto	u1531
  1302   0010CE  EF6B  F008         	goto	u1530
  1303   0010D2                     u1531:
  1304   0010D2  EFEA  F008         	goto	l117
  1305   0010D6                     u1530:
  1306   0010D6  0E33               	movlw	51
  1307   0010D8  6E09               	movwf	___flge@ff1^0,c
  1308   0010DA  0E33               	movlw	51
  1309   0010DC  6E0A               	movwf	(___flge@ff1+1)^0,c
  1310   0010DE  0E33               	movlw	51
  1311   0010E0  6E0B               	movwf	(___flge@ff1+2)^0,c
  1312   0010E2  0E40               	movlw	64
  1313   0010E4  6E0C               	movwf	(___flge@ff1+3)^0,c
  1314   0010E6  EE20 F014          	lfsr	2,20
  1315   0010EA  5020               	movf	motor_response@temp^0,w,c
  1316   0010EC  26D9               	addwf	fsr2l,f,c
  1317   0010EE  5021               	movf	(motor_response@temp+1)^0,w,c
  1318   0010F0  22DA               	addwfc	fsr2h,f,c
  1319   0010F2  CFDE F00D          	movff	postinc2,___flge@ff2
  1320   0010F6  CFDE F00E          	movff	postinc2,___flge@ff2+1
  1321   0010FA  CFDE F00F          	movff	postinc2,___flge@ff2+2
  1322   0010FE  CFDE F010          	movff	postinc2,___flge@ff2+3
  1323   001102  EC82  F00D         	call	___flge	;wreg free
  1324   001106  B0D8               	btfsc	status,0,c
  1325   001108  EF88  F008         	goto	u1541
  1326   00110C  EF8A  F008         	goto	u1540
  1327   001110                     u1541:
  1328   001110  EFEA  F008         	goto	l117
  1329   001114                     u1540:
  1330   001114  EE20 F014          	lfsr	2,20
  1331   001118  5020               	movf	motor_response@temp^0,w,c
  1332   00111A  26D9               	addwf	fsr2l,f,c
  1333   00111C  5021               	movf	(motor_response@temp+1)^0,w,c
  1334   00111E  22DA               	addwfc	fsr2h,f,c
  1335   001120  CFDE F009          	movff	postinc2,___flge@ff1
  1336   001124  CFDE F00A          	movff	postinc2,___flge@ff1+1
  1337   001128  CFDE F00B          	movff	postinc2,___flge@ff1+2
  1338   00112C  CFDE F00C          	movff	postinc2,___flge@ff1+3
  1339   001130  0ECD               	movlw	205
  1340   001132  6E0D               	movwf	___flge@ff2^0,c
  1341   001134  0ECC               	movlw	204
  1342   001136  6E0E               	movwf	(___flge@ff2+1)^0,c
  1343   001138  0E4C               	movlw	76
  1344   00113A  6E0F               	movwf	(___flge@ff2+2)^0,c
  1345   00113C  0E40               	movlw	64
  1346   00113E  6E10               	movwf	(___flge@ff2+3)^0,c
  1347   001140  EC82  F00D         	call	___flge	;wreg free
  1348   001144  B0D8               	btfsc	status,0,c
  1349   001146  EFA7  F008         	goto	u1551
  1350   00114A  EFA9  F008         	goto	u1550
  1351   00114E                     u1551:
  1352   00114E  EFEA  F008         	goto	l117
  1353   001152                     u1550:
  1354   001152                     
  1355                           ;color.c: 147:         for (int j = 0; j <= 29; j++) {
  1356   001152  0E00               	movlw	0
  1357   001154  6E2D               	movwf	(motor_response@j_497+1)^0,c
  1358   001156  0E00               	movlw	0
  1359   001158  6E2C               	movwf	motor_response@j_497^0,c
  1360   00115A                     l2642:
  1361                           
  1362                           ;color.c: 148:             turnLeft(mL, mR);
  1363   00115A  C022  F01C         	movff	motor_response@mL,turnLeft@mL
  1364   00115E  C023  F01D         	movff	motor_response@mL+1,turnLeft@mL+1
  1365   001162  C024  F01E         	movff	motor_response@mR,turnLeft@mR
  1366   001166  C025  F01F         	movff	motor_response@mR+1,turnLeft@mR+1
  1367   00116A  EC8F  F00F         	call	_turnLeft	;wreg free
  1368   00116E                     
  1369                           ;color.c: 149:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1370   00116E  0E03               	movlw	3
  1371   001170  6E27               	movwf	(??_motor_response+1)^0,c
  1372   001172  0E70               	movlw	112
  1373   001174  6E26               	movwf	??_motor_response^0,c
  1374   001176  0E5C               	movlw	92
  1375   001178                     u1887:
  1376   001178  2EE8               	decfsz	wreg,f,c
  1377   00117A  D7FE               	bra	u1887
  1378   00117C  2E26               	decfsz	??_motor_response^0,f,c
  1379   00117E  D7FC               	bra	u1887
  1380   001180  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1381   001182  D7FA               	bra	u1887
  1382   001184  D000               	nop2	
  1383   001186                     
  1384                           ;color.c: 150:             norm_stop(mL, mR);
  1385   001186  C022  F01C         	movff	motor_response@mL,norm_stop@mL
  1386   00118A  C023  F01D         	movff	motor_response@mL+1,norm_stop@mL+1
  1387   00118E  C024  F01E         	movff	motor_response@mR,norm_stop@mR
  1388   001192  C025  F01F         	movff	motor_response@mR+1,norm_stop@mR+1
  1389   001196  EC2E  F011         	call	_norm_stop	;wreg free
  1390                           
  1391                           ;color.c: 151:             _delay((unsigned long)((30)*(64000000/4000.0)));
  1392   00119A  0E03               	movlw	3
  1393   00119C  6E27               	movwf	(??_motor_response+1)^0,c
  1394   00119E  0E70               	movlw	112
  1395   0011A0  6E26               	movwf	??_motor_response^0,c
  1396   0011A2  0E5C               	movlw	92
  1397   0011A4                     u1897:
  1398   0011A4  2EE8               	decfsz	wreg,f,c
  1399   0011A6  D7FE               	bra	u1897
  1400   0011A8  2E26               	decfsz	??_motor_response^0,f,c
  1401   0011AA  D7FC               	bra	u1897
  1402   0011AC  2E27               	decfsz	(??_motor_response+1)^0,f,c
  1403   0011AE  D7FA               	bra	u1897
  1404   0011B0  D000               	nop2	
  1405   0011B2                     
  1406                           ;color.c: 152:         }
  1407   0011B2  4A2C               	infsnz	motor_response@j_497^0,f,c
  1408   0011B4  2A2D               	incf	(motor_response@j_497+1)^0,f,c
  1409   0011B6  BE2D               	btfsc	(motor_response@j_497+1)^0,7,c
  1410   0011B8  EFE7  F008         	goto	u1561
  1411   0011BC  502D               	movf	(motor_response@j_497+1)^0,w,c
  1412   0011BE  E109               	bnz	u1560
  1413   0011C0  0E1E               	movlw	30
  1414   0011C2  5C2C               	subwf	motor_response@j_497^0,w,c
  1415   0011C4  A0D8               	btfss	status,0,c
  1416   0011C6  EFE7  F008         	goto	u1561
  1417   0011CA  EFE9  F008         	goto	u1560
  1418   0011CE                     u1561:
  1419   0011CE  EFAD  F008         	goto	l2642
  1420   0011D2                     u1560:
  1421   0011D2                     
  1422                           ;color.c: 153:         return 3;
  1423   0011D2  0E03               	movlw	3
  1424   0011D4                     l117:
  1425   0011D4  0012               	return		;funcret
  1426   0011D6                     __end_of_motor_response:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _turnRight *****************
  1430 ;; Defined at:
  1431 ;;		line 144 in file "dc_motor.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1434 ;;		 -> main@mL(9), 
  1435 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1436 ;;		 -> main@mR(9), 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1448 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1452 ;;Total ram usage:        4 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 8
  1455 ;; This function calls:
  1456 ;;		_setMotorPWM
  1457 ;; This function is called by:
  1458 ;;		_motor_response
  1459 ;;		_motor_retrace
  1460 ;; This function uses a non-reentrant model
  1461 ;;
  1462                           
  1463                           	psect	text4
  1464   001EAC                     __ptext4:
  1465                           	callstack 0
  1466   001EAC                     _turnRight:
  1467                           	callstack 21
  1468   001EAC                     
  1469                           ;dc_motor.c: 144: void turnRight(DC_motor *mL, DC_motor *mR);dc_motor.c: 145: {;dc_motor
      +                          .c: 146:     mL->power = 50;
  1470   001EAC  C01C  FFD9         	movff	turnRight@mL,fsr2l
  1471   001EB0  C01D  FFDA         	movff	turnRight@mL+1,fsr2h
  1472   001EB4  0E32               	movlw	50
  1473   001EB6  6EDF               	movwf	indf2,c
  1474                           
  1475                           ;dc_motor.c: 147:     mR->power = 50;
  1476   001EB8  C01E  FFD9         	movff	turnRight@mR,fsr2l
  1477   001EBC  C01F  FFDA         	movff	turnRight@mR+1,fsr2h
  1478   001EC0  0E32               	movlw	50
  1479   001EC2  6EDF               	movwf	indf2,c
  1480   001EC4                     
  1481                           ;dc_motor.c: 148:     mL->brakemode = 1;
  1482   001EC4  EE20 F002          	lfsr	2,2
  1483   001EC8  501C               	movf	turnRight@mL^0,w,c
  1484   001ECA  26D9               	addwf	fsr2l,f,c
  1485   001ECC  501D               	movf	(turnRight@mL+1)^0,w,c
  1486   001ECE  22DA               	addwfc	fsr2h,f,c
  1487   001ED0  0E01               	movlw	1
  1488   001ED2  6EDF               	movwf	indf2,c
  1489   001ED4                     
  1490                           ;dc_motor.c: 149:     mR->brakemode = 1;
  1491   001ED4  EE20 F002          	lfsr	2,2
  1492   001ED8  501E               	movf	turnRight@mR^0,w,c
  1493   001EDA  26D9               	addwf	fsr2l,f,c
  1494   001EDC  501F               	movf	(turnRight@mR+1)^0,w,c
  1495   001EDE  22DA               	addwfc	fsr2h,f,c
  1496   001EE0  0E01               	movlw	1
  1497   001EE2  6EDF               	movwf	indf2,c
  1498   001EE4                     
  1499                           ;dc_motor.c: 150:     mR->direction = 0;
  1500   001EE4  EE20 F001          	lfsr	2,1
  1501   001EE8  501E               	movf	turnRight@mR^0,w,c
  1502   001EEA  26D9               	addwf	fsr2l,f,c
  1503   001EEC  501F               	movf	(turnRight@mR+1)^0,w,c
  1504   001EEE  22DA               	addwfc	fsr2h,f,c
  1505   001EF0  0E00               	movlw	0
  1506   001EF2  6EDF               	movwf	indf2,c
  1507   001EF4                     
  1508                           ;dc_motor.c: 151:     mL->direction = 1;
  1509   001EF4  EE20 F001          	lfsr	2,1
  1510   001EF8  501C               	movf	turnRight@mL^0,w,c
  1511   001EFA  26D9               	addwf	fsr2l,f,c
  1512   001EFC  501D               	movf	(turnRight@mL+1)^0,w,c
  1513   001EFE  22DA               	addwfc	fsr2h,f,c
  1514   001F00  0E01               	movlw	1
  1515   001F02  6EDF               	movwf	indf2,c
  1516   001F04                     
  1517                           ;dc_motor.c: 152:     setMotorPWM(mL);
  1518   001F04  C01C  F016         	movff	turnRight@mL,setMotorPWM@m
  1519   001F08  C01D  F017         	movff	turnRight@mL+1,setMotorPWM@m+1
  1520   001F0C  EC92  F00B         	call	_setMotorPWM	;wreg free
  1521   001F10                     
  1522                           ;dc_motor.c: 153:     setMotorPWM(mR);
  1523   001F10  C01E  F016         	movff	turnRight@mR,setMotorPWM@m
  1524   001F14  C01F  F017         	movff	turnRight@mR+1,setMotorPWM@m+1
  1525   001F18  EC92  F00B         	call	_setMotorPWM	;wreg free
  1526   001F1C  0012               	return		;funcret
  1527   001F1E                     __end_of_turnRight:
  1528                           	callstack 0
  1529                           
  1530 ;; *************** function _turnLeft *****************
  1531 ;; Defined at:
  1532 ;;		line 131 in file "dc_motor.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1535 ;;		 -> main@mL(9), 
  1536 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1537 ;;		 -> main@mR(9), 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1552 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1553 ;;Total ram usage:        4 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; Hardware stack levels required when called: 8
  1556 ;; This function calls:
  1557 ;;		_setMotorPWM
  1558 ;; This function is called by:
  1559 ;;		_motor_response
  1560 ;;		_motor_retrace
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text5
  1565   001F1E                     __ptext5:
  1566                           	callstack 0
  1567   001F1E                     _turnLeft:
  1568                           	callstack 21
  1569   001F1E                     
  1570                           ;dc_motor.c: 131: void turnLeft(DC_motor *mL, DC_motor *mR);dc_motor.c: 132: {;dc_motor.
      +                          c: 133:     mL->power = 50;
  1571   001F1E  C01C  FFD9         	movff	turnLeft@mL,fsr2l
  1572   001F22  C01D  FFDA         	movff	turnLeft@mL+1,fsr2h
  1573   001F26  0E32               	movlw	50
  1574   001F28  6EDF               	movwf	indf2,c
  1575                           
  1576                           ;dc_motor.c: 134:     mR->power = 50;
  1577   001F2A  C01E  FFD9         	movff	turnLeft@mR,fsr2l
  1578   001F2E  C01F  FFDA         	movff	turnLeft@mR+1,fsr2h
  1579   001F32  0E32               	movlw	50
  1580   001F34  6EDF               	movwf	indf2,c
  1581   001F36                     
  1582                           ;dc_motor.c: 135:     mL->brakemode = 1;
  1583   001F36  EE20 F002          	lfsr	2,2
  1584   001F3A  501C               	movf	turnLeft@mL^0,w,c
  1585   001F3C  26D9               	addwf	fsr2l,f,c
  1586   001F3E  501D               	movf	(turnLeft@mL+1)^0,w,c
  1587   001F40  22DA               	addwfc	fsr2h,f,c
  1588   001F42  0E01               	movlw	1
  1589   001F44  6EDF               	movwf	indf2,c
  1590   001F46                     
  1591                           ;dc_motor.c: 136:     mR->brakemode = 1;
  1592   001F46  EE20 F002          	lfsr	2,2
  1593   001F4A  501E               	movf	turnLeft@mR^0,w,c
  1594   001F4C  26D9               	addwf	fsr2l,f,c
  1595   001F4E  501F               	movf	(turnLeft@mR+1)^0,w,c
  1596   001F50  22DA               	addwfc	fsr2h,f,c
  1597   001F52  0E01               	movlw	1
  1598   001F54  6EDF               	movwf	indf2,c
  1599   001F56                     
  1600                           ;dc_motor.c: 137:     mL->direction = 0;
  1601   001F56  EE20 F001          	lfsr	2,1
  1602   001F5A  501C               	movf	turnLeft@mL^0,w,c
  1603   001F5C  26D9               	addwf	fsr2l,f,c
  1604   001F5E  501D               	movf	(turnLeft@mL+1)^0,w,c
  1605   001F60  22DA               	addwfc	fsr2h,f,c
  1606   001F62  0E00               	movlw	0
  1607   001F64  6EDF               	movwf	indf2,c
  1608   001F66                     
  1609                           ;dc_motor.c: 138:     mR->direction = 1;
  1610   001F66  EE20 F001          	lfsr	2,1
  1611   001F6A  501E               	movf	turnLeft@mR^0,w,c
  1612   001F6C  26D9               	addwf	fsr2l,f,c
  1613   001F6E  501F               	movf	(turnLeft@mR+1)^0,w,c
  1614   001F70  22DA               	addwfc	fsr2h,f,c
  1615   001F72  0E01               	movlw	1
  1616   001F74  6EDF               	movwf	indf2,c
  1617   001F76                     
  1618                           ;dc_motor.c: 139:     setMotorPWM(mL);
  1619   001F76  C01C  F016         	movff	turnLeft@mL,setMotorPWM@m
  1620   001F7A  C01D  F017         	movff	turnLeft@mL+1,setMotorPWM@m+1
  1621   001F7E  EC92  F00B         	call	_setMotorPWM	;wreg free
  1622   001F82                     
  1623                           ;dc_motor.c: 140:     setMotorPWM(mR);
  1624   001F82  C01E  F016         	movff	turnLeft@mR,setMotorPWM@m
  1625   001F86  C01F  F017         	movff	turnLeft@mR+1,setMotorPWM@m+1
  1626   001F8A  EC92  F00B         	call	_setMotorPWM	;wreg free
  1627   001F8E  0012               	return		;funcret
  1628   001F90                     __end_of_turnLeft:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _norm_stop *****************
  1632 ;; Defined at:
  1633 ;;		line 118 in file "dc_motor.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  1636 ;;		 -> main@mL(9), 
  1637 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  1638 ;;		 -> main@mR(9), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;		None
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  1    wreg      void 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1654 ;;Total ram usage:        4 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; Hardware stack levels required when called: 8
  1657 ;; This function calls:
  1658 ;;		_setMotorPWM
  1659 ;; This function is called by:
  1660 ;;		_motor_response
  1661 ;;		_main
  1662 ;;		_motor_retrace
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           	psect	text6
  1667   00225C                     __ptext6:
  1668                           	callstack 0
  1669   00225C                     _norm_stop:
  1670                           	callstack 22
  1671   00225C                     
  1672                           ;dc_motor.c: 118: void norm_stop(DC_motor *mL, DC_motor *mR);dc_motor.c: 119: {;dc_motor
      +                          .c: 124:     mL->power = 0;
  1673   00225C  C01C  FFD9         	movff	norm_stop@mL,fsr2l
  1674   002260  C01D  FFDA         	movff	norm_stop@mL+1,fsr2h
  1675   002264  0E00               	movlw	0
  1676   002266  6EDF               	movwf	indf2,c
  1677                           
  1678                           ;dc_motor.c: 125:     mR->power = 0;
  1679   002268  C01E  FFD9         	movff	norm_stop@mR,fsr2l
  1680   00226C  C01F  FFDA         	movff	norm_stop@mR+1,fsr2h
  1681   002270  0E00               	movlw	0
  1682   002272  6EDF               	movwf	indf2,c
  1683   002274                     
  1684                           ;dc_motor.c: 126:     setMotorPWM(mL);
  1685   002274  C01C  F016         	movff	norm_stop@mL,setMotorPWM@m
  1686   002278  C01D  F017         	movff	norm_stop@mL+1,setMotorPWM@m+1
  1687   00227C  EC92  F00B         	call	_setMotorPWM	;wreg free
  1688   002280                     
  1689                           ;dc_motor.c: 127:     setMotorPWM(mR);
  1690   002280  C01E  F016         	movff	norm_stop@mR,setMotorPWM@m
  1691   002284  C01F  F017         	movff	norm_stop@mR+1,setMotorPWM@m+1
  1692   002288  EC92  F00B         	call	_setMotorPWM	;wreg free
  1693   00228C  0012               	return		;funcret
  1694   00228E                     __end_of_norm_stop:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function ___flge *****************
  1698 ;; Defined at:
  1699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\flge.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  ff1             4    8[COMRAM] void 
  1702 ;;  ff2             4   12[COMRAM] void 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;		None
  1705 ;; Return value:  Size  Location     Type
  1706 ;;		None               void
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1714 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1717 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1718 ;;Total ram usage:       12 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 6
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_motor_response
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text7
  1729   001B04                     __ptext7:
  1730                           	callstack 0
  1731   001B04                     ___flge:
  1732                           	callstack 23
  1733   001B04  0E00               	movlw	0
  1734   001B06  1409               	andwf	___flge@ff1^0,w,c
  1735   001B08  6E11               	movwf	??___flge^0,c
  1736   001B0A  0E00               	movlw	0
  1737   001B0C  140A               	andwf	(___flge@ff1+1)^0,w,c
  1738   001B0E  6E12               	movwf	(??___flge+1)^0,c
  1739   001B10  0E80               	movlw	128
  1740   001B12  140B               	andwf	(___flge@ff1+2)^0,w,c
  1741   001B14  6E13               	movwf	(??___flge+2)^0,c
  1742   001B16  0E7F               	movlw	127
  1743   001B18  140C               	andwf	(___flge@ff1+3)^0,w,c
  1744   001B1A  6E14               	movwf	(??___flge+3)^0,c
  1745   001B1C  5011               	movf	??___flge^0,w,c
  1746   001B1E  1012               	iorwf	(??___flge+1)^0,w,c
  1747   001B20  1013               	iorwf	(??___flge+2)^0,w,c
  1748   001B22  1014               	iorwf	(??___flge+3)^0,w,c
  1749   001B24  A4D8               	btfss	status,2,c
  1750   001B26  EF97  F00D         	goto	u1301
  1751   001B2A  EF99  F00D         	goto	u1300
  1752   001B2E                     u1301:
  1753   001B2E  EFA1  F00D         	goto	l2490
  1754   001B32                     u1300:
  1755   001B32  0E00               	movlw	0
  1756   001B34  6E09               	movwf	___flge@ff1^0,c
  1757   001B36  0E00               	movlw	0
  1758   001B38  6E0A               	movwf	(___flge@ff1+1)^0,c
  1759   001B3A  0E00               	movlw	0
  1760   001B3C  6E0B               	movwf	(___flge@ff1+2)^0,c
  1761   001B3E  0E00               	movlw	0
  1762   001B40  6E0C               	movwf	(___flge@ff1+3)^0,c
  1763   001B42                     l2490:
  1764   001B42  0E00               	movlw	0
  1765   001B44  140D               	andwf	___flge@ff2^0,w,c
  1766   001B46  6E11               	movwf	??___flge^0,c
  1767   001B48  0E00               	movlw	0
  1768   001B4A  140E               	andwf	(___flge@ff2+1)^0,w,c
  1769   001B4C  6E12               	movwf	(??___flge+1)^0,c
  1770   001B4E  0E80               	movlw	128
  1771   001B50  140F               	andwf	(___flge@ff2+2)^0,w,c
  1772   001B52  6E13               	movwf	(??___flge+2)^0,c
  1773   001B54  0E7F               	movlw	127
  1774   001B56  1410               	andwf	(___flge@ff2+3)^0,w,c
  1775   001B58  6E14               	movwf	(??___flge+3)^0,c
  1776   001B5A  5011               	movf	??___flge^0,w,c
  1777   001B5C  1012               	iorwf	(??___flge+1)^0,w,c
  1778   001B5E  1013               	iorwf	(??___flge+2)^0,w,c
  1779   001B60  1014               	iorwf	(??___flge+3)^0,w,c
  1780   001B62  A4D8               	btfss	status,2,c
  1781   001B64  EFB6  F00D         	goto	u1311
  1782   001B68  EFB8  F00D         	goto	u1310
  1783   001B6C                     u1311:
  1784   001B6C  EFC0  F00D         	goto	l2494
  1785   001B70                     u1310:
  1786   001B70  0E00               	movlw	0
  1787   001B72  6E0D               	movwf	___flge@ff2^0,c
  1788   001B74  0E00               	movlw	0
  1789   001B76  6E0E               	movwf	(___flge@ff2+1)^0,c
  1790   001B78  0E00               	movlw	0
  1791   001B7A  6E0F               	movwf	(___flge@ff2+2)^0,c
  1792   001B7C  0E00               	movlw	0
  1793   001B7E  6E10               	movwf	(___flge@ff2+3)^0,c
  1794   001B80                     l2494:
  1795   001B80  AE0C               	btfss	(___flge@ff1+3)^0,7,c
  1796   001B82  EFC5  F00D         	goto	u1321
  1797   001B86  EFC7  F00D         	goto	u1320
  1798   001B8A                     u1321:
  1799   001B8A  EFD0  F00D         	goto	l2498
  1800   001B8E                     u1320:
  1801   001B8E  6C09               	negf	___flge@ff1^0,c
  1802   001B90  1E0A               	comf	(___flge@ff1+1)^0,f,c
  1803   001B92  B0D8               	btfsc	status,0,c
  1804   001B94  2A0A               	incf	(___flge@ff1+1)^0,f,c
  1805   001B96  1E0B               	comf	(___flge@ff1+2)^0,f,c
  1806   001B98  B0D8               	btfsc	status,0,c
  1807   001B9A  2A0B               	incf	(___flge@ff1+2)^0,f,c
  1808   001B9C  0E80               	movlw	128
  1809   001B9E  560C               	subfwb	(___flge@ff1+3)^0,f,c
  1810   001BA0                     l2498:
  1811   001BA0  AE10               	btfss	(___flge@ff2+3)^0,7,c
  1812   001BA2  EFD5  F00D         	goto	u1331
  1813   001BA6  EFD7  F00D         	goto	u1330
  1814   001BAA                     u1331:
  1815   001BAA  EFE0  F00D         	goto	l869
  1816   001BAE                     u1330:
  1817   001BAE  6C0D               	negf	___flge@ff2^0,c
  1818   001BB0  1E0E               	comf	(___flge@ff2+1)^0,f,c
  1819   001BB2  B0D8               	btfsc	status,0,c
  1820   001BB4  2A0E               	incf	(___flge@ff2+1)^0,f,c
  1821   001BB6  1E0F               	comf	(___flge@ff2+2)^0,f,c
  1822   001BB8  B0D8               	btfsc	status,0,c
  1823   001BBA  2A0F               	incf	(___flge@ff2+2)^0,f,c
  1824   001BBC  0E80               	movlw	128
  1825   001BBE  5610               	subfwb	(___flge@ff2+3)^0,f,c
  1826   001BC0                     l869:
  1827   001BC0  0E00               	movlw	0
  1828   001BC2  1A09               	xorwf	___flge@ff1^0,f,c
  1829   001BC4  0E00               	movlw	0
  1830   001BC6  1A0A               	xorwf	(___flge@ff1+1)^0,f,c
  1831   001BC8  0E00               	movlw	0
  1832   001BCA  1A0B               	xorwf	(___flge@ff1+2)^0,f,c
  1833   001BCC  0E80               	movlw	128
  1834   001BCE  1A0C               	xorwf	(___flge@ff1+3)^0,f,c
  1835   001BD0  0E00               	movlw	0
  1836   001BD2  1A0D               	xorwf	___flge@ff2^0,f,c
  1837   001BD4  0E00               	movlw	0
  1838   001BD6  1A0E               	xorwf	(___flge@ff2+1)^0,f,c
  1839   001BD8  0E00               	movlw	0
  1840   001BDA  1A0F               	xorwf	(___flge@ff2+2)^0,f,c
  1841   001BDC  0E80               	movlw	128
  1842   001BDE  1A10               	xorwf	(___flge@ff2+3)^0,f,c
  1843   001BE0  500D               	movf	___flge@ff2^0,w,c
  1844   001BE2  5C09               	subwf	___flge@ff1^0,w,c
  1845   001BE4  500E               	movf	(___flge@ff2+1)^0,w,c
  1846   001BE6  580A               	subwfb	(___flge@ff1+1)^0,w,c
  1847   001BE8  500F               	movf	(___flge@ff2+2)^0,w,c
  1848   001BEA  580B               	subwfb	(___flge@ff1+2)^0,w,c
  1849   001BEC  5010               	movf	(___flge@ff2+3)^0,w,c
  1850   001BEE  580C               	subwfb	(___flge@ff1+3)^0,w,c
  1851   001BF0  B0D8               	btfsc	status,0,c
  1852   001BF2  EFFD  F00D         	goto	u1341
  1853   001BF6  EFFF  F00D         	goto	u1340
  1854   001BFA                     u1341:
  1855   001BFA  EF02  F00E         	goto	l2504
  1856   001BFE                     u1340:
  1857   001BFE  90D8               	bcf	status,0,c
  1858   001C00  EF03  F00E         	goto	l874
  1859   001C04                     l2504:
  1860   001C04  80D8               	bsf	status,0,c
  1861   001C06                     l874:
  1862   001C06  0012               	return		;funcret
  1863   001C08                     __end_of___flge:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _motorRinit *****************
  1867 ;; Defined at:
  1868 ;;		line 88 in file "dc_motor.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  mR              2    8[COMRAM] PTR struct DC_motor
  1871 ;;		 -> main@mR(9), 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1883 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1886 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1887 ;;Total ram usage:        2 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 6
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text8
  1898   001F90                     __ptext8:
  1899                           	callstack 0
  1900   001F90                     _motorRinit:
  1901                           	callstack 24
  1902   001F90                     
  1903                           ;dc_motor.c: 88: void motorRinit(DC_motor *mR);dc_motor.c: 89: {;dc_motor.c: 90:     mR-
      +                          >power = 50;
  1904   001F90  C009  FFD9         	movff	motorRinit@mR,fsr2l
  1905   001F94  C00A  FFDA         	movff	motorRinit@mR+1,fsr2h
  1906   001F98  0E32               	movlw	50
  1907   001F9A  6EDF               	movwf	indf2,c
  1908   001F9C                     
  1909                           ;dc_motor.c: 91:     mR->direction = 1;
  1910   001F9C  EE20 F001          	lfsr	2,1
  1911   001FA0  5009               	movf	motorRinit@mR^0,w,c
  1912   001FA2  26D9               	addwf	fsr2l,f,c
  1913   001FA4  500A               	movf	(motorRinit@mR+1)^0,w,c
  1914   001FA6  22DA               	addwfc	fsr2h,f,c
  1915   001FA8  0E01               	movlw	1
  1916   001FAA  6EDF               	movwf	indf2,c
  1917   001FAC                     
  1918                           ;dc_motor.c: 92:     mR->brakemode = 1;
  1919   001FAC  EE20 F002          	lfsr	2,2
  1920   001FB0  5009               	movf	motorRinit@mR^0,w,c
  1921   001FB2  26D9               	addwf	fsr2l,f,c
  1922   001FB4  500A               	movf	(motorRinit@mR+1)^0,w,c
  1923   001FB6  22DA               	addwfc	fsr2h,f,c
  1924   001FB8  0E01               	movlw	1
  1925   001FBA  6EDF               	movwf	indf2,c
  1926   001FBC                     
  1927                           ;dc_motor.c: 93:     mR->posDutyHighByte = (unsigned char *) (&CCPR3H);
  1928   001FBC  EE20 F005          	lfsr	2,5
  1929   001FC0  5009               	movf	motorRinit@mR^0,w,c
  1930   001FC2  26D9               	addwf	fsr2l,f,c
  1931   001FC4  500A               	movf	(motorRinit@mR+1)^0,w,c
  1932   001FC6  22DA               	addwfc	fsr2h,f,c
  1933   001FC8  0E25               	movlw	37
  1934   001FCA  6EDE               	movwf	postinc2,c
  1935   001FCC  0E0F               	movlw	15
  1936   001FCE  6EDD               	movwf	postdec2,c
  1937   001FD0                     
  1938                           ;dc_motor.c: 94:     mR->negDutyHighByte = (unsigned char *) (&CCPR4H);
  1939   001FD0  EE20 F007          	lfsr	2,7
  1940   001FD4  5009               	movf	motorRinit@mR^0,w,c
  1941   001FD6  26D9               	addwf	fsr2l,f,c
  1942   001FD8  500A               	movf	(motorRinit@mR+1)^0,w,c
  1943   001FDA  22DA               	addwfc	fsr2h,f,c
  1944   001FDC  0E21               	movlw	33
  1945   001FDE  6EDE               	movwf	postinc2,c
  1946   001FE0  0E0F               	movlw	15
  1947   001FE2  6EDD               	movwf	postdec2,c
  1948   001FE4                     
  1949                           ;dc_motor.c: 95:     mR->PWMperiod = 200;
  1950   001FE4  EE20 F003          	lfsr	2,3
  1951   001FE8  5009               	movf	motorRinit@mR^0,w,c
  1952   001FEA  26D9               	addwf	fsr2l,f,c
  1953   001FEC  500A               	movf	(motorRinit@mR+1)^0,w,c
  1954   001FEE  22DA               	addwfc	fsr2h,f,c
  1955   001FF0  0EC8               	movlw	200
  1956   001FF2  6EDE               	movwf	postinc2,c
  1957   001FF4  0E00               	movlw	0
  1958   001FF6  6EDD               	movwf	postdec2,c
  1959   001FF8  0012               	return		;funcret
  1960   001FFA                     __end_of_motorRinit:
  1961                           	callstack 0
  1962                           
  1963 ;; *************** function _motorLinit *****************
  1964 ;; Defined at:
  1965 ;;		line 78 in file "dc_motor.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  mL              2    8[COMRAM] PTR struct DC_motor
  1968 ;;		 -> main@mL(9), 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1980 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1983 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1984 ;;Total ram usage:        2 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 6
  1987 ;; This function calls:
  1988 ;;		Nothing
  1989 ;; This function is called by:
  1990 ;;		_main
  1991 ;; This function uses a non-reentrant model
  1992 ;;
  1993                           
  1994                           	psect	text9
  1995   001FFA                     __ptext9:
  1996                           	callstack 0
  1997   001FFA                     _motorLinit:
  1998                           	callstack 24
  1999   001FFA                     
  2000                           ;dc_motor.c: 78: void motorLinit(DC_motor *mL);dc_motor.c: 79: {;dc_motor.c: 80:     mL-
      +                          >power = 50;
  2001   001FFA  C009  FFD9         	movff	motorLinit@mL,fsr2l
  2002   001FFE  C00A  FFDA         	movff	motorLinit@mL+1,fsr2h
  2003   002002  0E32               	movlw	50
  2004   002004  6EDF               	movwf	indf2,c
  2005   002006                     
  2006                           ;dc_motor.c: 81:     mL->direction = 1;
  2007   002006  EE20 F001          	lfsr	2,1
  2008   00200A  5009               	movf	motorLinit@mL^0,w,c
  2009   00200C  26D9               	addwf	fsr2l,f,c
  2010   00200E  500A               	movf	(motorLinit@mL+1)^0,w,c
  2011   002010  22DA               	addwfc	fsr2h,f,c
  2012   002012  0E01               	movlw	1
  2013   002014  6EDF               	movwf	indf2,c
  2014   002016                     
  2015                           ;dc_motor.c: 82:     mL->brakemode = 1;
  2016   002016  EE20 F002          	lfsr	2,2
  2017   00201A  5009               	movf	motorLinit@mL^0,w,c
  2018   00201C  26D9               	addwf	fsr2l,f,c
  2019   00201E  500A               	movf	(motorLinit@mL+1)^0,w,c
  2020   002020  22DA               	addwfc	fsr2h,f,c
  2021   002022  0E01               	movlw	1
  2022   002024  6EDF               	movwf	indf2,c
  2023   002026                     
  2024                           ;dc_motor.c: 83:     mL->posDutyHighByte = (unsigned char *) (&CCPR1H);
  2025   002026  EE20 F005          	lfsr	2,5
  2026   00202A  5009               	movf	motorLinit@mL^0,w,c
  2027   00202C  26D9               	addwf	fsr2l,f,c
  2028   00202E  500A               	movf	(motorLinit@mL+1)^0,w,c
  2029   002030  22DA               	addwfc	fsr2h,f,c
  2030   002032  0EAA               	movlw	170
  2031   002034  6EDE               	movwf	postinc2,c
  2032   002036  0E0F               	movlw	15
  2033   002038  6EDD               	movwf	postdec2,c
  2034   00203A                     
  2035                           ;dc_motor.c: 84:     mL->negDutyHighByte = (unsigned char *) (&CCPR2H);
  2036   00203A  EE20 F007          	lfsr	2,7
  2037   00203E  5009               	movf	motorLinit@mL^0,w,c
  2038   002040  26D9               	addwf	fsr2l,f,c
  2039   002042  500A               	movf	(motorLinit@mL+1)^0,w,c
  2040   002044  22DA               	addwfc	fsr2h,f,c
  2041   002046  0EA6               	movlw	166
  2042   002048  6EDE               	movwf	postinc2,c
  2043   00204A  0E0F               	movlw	15
  2044   00204C  6EDD               	movwf	postdec2,c
  2045   00204E                     
  2046                           ;dc_motor.c: 85:     mL->PWMperiod = 200;
  2047   00204E  EE20 F003          	lfsr	2,3
  2048   002052  5009               	movf	motorLinit@mL^0,w,c
  2049   002054  26D9               	addwf	fsr2l,f,c
  2050   002056  500A               	movf	(motorLinit@mL+1)^0,w,c
  2051   002058  22DA               	addwfc	fsr2h,f,c
  2052   00205A  0EC8               	movlw	200
  2053   00205C  6EDE               	movwf	postinc2,c
  2054   00205E  0E00               	movlw	0
  2055   002060  6EDD               	movwf	postdec2,c
  2056   002062  0012               	return		;funcret
  2057   002064                     __end_of_motorLinit:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _initDCmotorsPWM *****************
  2061 ;; Defined at:
  2062 ;;		line 5 in file "dc_motor.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;  PWMperiod       2    8[COMRAM] unsigned int 
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		wreg, status,2
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2080 ;;Total ram usage:        2 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; Hardware stack levels required when called: 6
  2083 ;; This function calls:
  2084 ;;		Nothing
  2085 ;; This function is called by:
  2086 ;;		_main
  2087 ;; This function uses a non-reentrant model
  2088 ;;
  2089                           
  2090                           	psect	text10
  2091   001DB8                     __ptext10:
  2092                           	callstack 0
  2093   001DB8                     _initDCmotorsPWM:
  2094                           	callstack 24
  2095   001DB8                     
  2096                           ;dc_motor.c: 9:     RE2PPS=0x05;
  2097   001DB8  0E05               	movlw	5
  2098   001DBA  010E               	movlb	14	; () banked
  2099   001DBC  6F74               	movwf	116,b	;volatile
  2100                           
  2101                           ;dc_motor.c: 10:     RE4PPS=0x06;
  2102   001DBE  0E06               	movlw	6
  2103   001DC0  6F76               	movwf	118,b	;volatile
  2104                           
  2105                           ;dc_motor.c: 11:     RC7PPS=0x07;
  2106   001DC2  0E07               	movlw	7
  2107   001DC4  6F69               	movwf	105,b	;volatile
  2108                           
  2109                           ;dc_motor.c: 12:     RG6PPS=0x08;
  2110   001DC6  0E08               	movlw	8
  2111   001DC8  6F88               	movwf	136,b	;volatile
  2112                           
  2113                           ;dc_motor.c: 15:     T2CONbits.CKPS=0b0011;
  2114   001DCA  50BD               	movf	189,w,c	;volatile
  2115   001DCC  0B8F               	andlw	-113
  2116   001DCE  0930               	iorlw	48
  2117   001DD0  6EBD               	movwf	189,c	;volatile
  2118                           
  2119                           ;dc_motor.c: 16:     T2HLTbits.MODE=0b00000;
  2120   001DD2  0EE0               	movlw	-32
  2121   001DD4  16BE               	andwf	190,f,c	;volatile
  2122                           
  2123                           ;dc_motor.c: 17:     T2CLKCONbits.CS=0b0001;
  2124   001DD6  50BF               	movf	191,w,c	;volatile
  2125   001DD8  0BF0               	andlw	-16
  2126   001DDA  0901               	iorlw	1
  2127   001DDC  6EBF               	movwf	191,c	;volatile
  2128                           
  2129                           ;dc_motor.c: 21:     T2PR=200;
  2130   001DDE  0EC8               	movlw	200
  2131   001DE0  6EBC               	movwf	188,c	;volatile
  2132   001DE2                     
  2133                           ; BSR set to: 14
  2134                           ;dc_motor.c: 22:     T2CONbits.ON=1;
  2135   001DE2  8EBD               	bsf	189,7,c	;volatile
  2136                           
  2137                           ;dc_motor.c: 26:     CCPR1H=0;
  2138   001DE4  0E00               	movlw	0
  2139   001DE6  6EAA               	movwf	170,c	;volatile
  2140                           
  2141                           ;dc_motor.c: 27:     CCPR2H=0;
  2142   001DE8  0E00               	movlw	0
  2143   001DEA  6EA6               	movwf	166,c	;volatile
  2144                           
  2145                           ;dc_motor.c: 28:     CCPR3H=0;
  2146   001DEC  0E00               	movlw	0
  2147   001DEE  010F               	movlb	15	; () banked
  2148   001DF0  6F25               	movwf	37,b	;volatile
  2149                           
  2150                           ;dc_motor.c: 29:     CCPR4H=0;
  2151   001DF2  0E00               	movlw	0
  2152   001DF4  6F21               	movwf	33,b	;volatile
  2153                           
  2154                           ;dc_motor.c: 32:     CCPTMRS0bits.C1TSEL=0;
  2155   001DF6  0EFC               	movlw	-4
  2156   001DF8  16AD               	andwf	173,f,c	;volatile
  2157                           
  2158                           ;dc_motor.c: 33:     CCPTMRS0bits.C2TSEL=0;
  2159   001DFA  0EF3               	movlw	-13
  2160   001DFC  16AD               	andwf	173,f,c	;volatile
  2161                           
  2162                           ;dc_motor.c: 34:     CCPTMRS0bits.C3TSEL=0;
  2163   001DFE  0ECF               	movlw	-49
  2164   001E00  16AD               	andwf	173,f,c	;volatile
  2165                           
  2166                           ;dc_motor.c: 35:     CCPTMRS0bits.C4TSEL=0;
  2167   001E02  0E3F               	movlw	-193
  2168   001E04  16AD               	andwf	173,f,c	;volatile
  2169   001E06                     
  2170                           ; BSR set to: 15
  2171                           ;dc_motor.c: 38:     CCP1CONbits.FMT=1;
  2172   001E06  88AB               	bsf	171,4,c	;volatile
  2173                           
  2174                           ;dc_motor.c: 39:     CCP1CONbits.CCP1MODE=0b1100;
  2175   001E08  50AB               	movf	171,w,c	;volatile
  2176   001E0A  0BF0               	andlw	-16
  2177   001E0C  090C               	iorlw	12
  2178   001E0E  6EAB               	movwf	171,c	;volatile
  2179   001E10                     
  2180                           ; BSR set to: 15
  2181                           ;dc_motor.c: 40:     CCP1CONbits.EN=1;
  2182   001E10  8EAB               	bsf	171,7,c	;volatile
  2183   001E12                     
  2184                           ; BSR set to: 15
  2185                           ;dc_motor.c: 42:     CCP2CONbits.FMT=1;
  2186   001E12  88A7               	bsf	167,4,c	;volatile
  2187                           
  2188                           ;dc_motor.c: 43:     CCP2CONbits.CCP2MODE=0b1100;
  2189   001E14  50A7               	movf	167,w,c	;volatile
  2190   001E16  0BF0               	andlw	-16
  2191   001E18  090C               	iorlw	12
  2192   001E1A  6EA7               	movwf	167,c	;volatile
  2193   001E1C                     
  2194                           ; BSR set to: 15
  2195                           ;dc_motor.c: 44:     CCP2CONbits.EN=1;
  2196   001E1C  8EA7               	bsf	167,7,c	;volatile
  2197   001E1E                     
  2198                           ; BSR set to: 15
  2199                           ;dc_motor.c: 46:     CCP3CONbits.FMT=1;
  2200   001E1E  8926               	bsf	38,4,b	;volatile
  2201                           
  2202                           ;dc_motor.c: 47:     CCP3CONbits.CCP3MODE=0b1100;
  2203   001E20  5126               	movf	38,w,b	;volatile
  2204   001E22  0BF0               	andlw	-16
  2205   001E24  090C               	iorlw	12
  2206   001E26  6F26               	movwf	38,b	;volatile
  2207   001E28                     
  2208                           ; BSR set to: 15
  2209                           ;dc_motor.c: 48:     CCP3CONbits.EN=1;
  2210   001E28  8F26               	bsf	38,7,b	;volatile
  2211   001E2A                     
  2212                           ; BSR set to: 15
  2213                           ;dc_motor.c: 50:     CCP4CONbits.FMT=1;
  2214   001E2A  8922               	bsf	34,4,b	;volatile
  2215                           
  2216                           ;dc_motor.c: 51:     CCP4CONbits.CCP4MODE=0b1100;
  2217   001E2C  5122               	movf	34,w,b	;volatile
  2218   001E2E  0BF0               	andlw	-16
  2219   001E30  090C               	iorlw	12
  2220   001E32  6F22               	movwf	34,b	;volatile
  2221   001E34                     
  2222                           ; BSR set to: 15
  2223                           ;dc_motor.c: 52:     CCP4CONbits.EN=1;
  2224   001E34  8F22               	bsf	34,7,b	;volatile
  2225   001E36                     
  2226                           ; BSR set to: 15
  2227   001E36  0012               	return		;funcret
  2228   001E38                     __end_of_initDCmotorsPWM:
  2229                           	callstack 0
  2230                           
  2231 ;; *************** function _fullSpeedAhead *****************
  2232 ;; Defined at:
  2233 ;;		line 167 in file "dc_motor.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  mL              2   27[COMRAM] PTR struct DC_motor
  2236 ;;		 -> main@mL(9), 
  2237 ;;  mR              2   29[COMRAM] PTR struct DC_motor
  2238 ;;		 -> main@mR(9), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2250 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2252 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2253 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2254 ;;Total ram usage:        5 bytes
  2255 ;; Hardware stack levels used: 1
  2256 ;; Hardware stack levels required when called: 8
  2257 ;; This function calls:
  2258 ;;		_setMotorPWM
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text11
  2265   001C08                     __ptext11:
  2266                           	callstack 0
  2267   001C08                     _fullSpeedAhead:
  2268                           	callstack 22
  2269   001C08                     
  2270                           ;dc_motor.c: 167: void fullSpeedAhead(DC_motor *mL, DC_motor *mR);dc_motor.c: 168: {;dc_
      +                          motor.c: 169:     mL->power = 5;
  2271   001C08  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2272   001C0C  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2273   001C10  0E05               	movlw	5
  2274   001C12  6EDF               	movwf	indf2,c
  2275                           
  2276                           ;dc_motor.c: 170:     mR->power = 5;
  2277   001C14  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2278   001C18  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2279   001C1C  0E05               	movlw	5
  2280   001C1E  6EDF               	movwf	indf2,c
  2281   001C20                     
  2282                           ;dc_motor.c: 171:     mR->direction = 1;
  2283   001C20  EE20 F001          	lfsr	2,1
  2284   001C24  501E               	movf	fullSpeedAhead@mR^0,w,c
  2285   001C26  26D9               	addwf	fsr2l,f,c
  2286   001C28  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2287   001C2A  22DA               	addwfc	fsr2h,f,c
  2288   001C2C  0E01               	movlw	1
  2289   001C2E  6EDF               	movwf	indf2,c
  2290   001C30                     
  2291                           ;dc_motor.c: 172:     mL->direction = 1;
  2292   001C30  EE20 F001          	lfsr	2,1
  2293   001C34  501C               	movf	fullSpeedAhead@mL^0,w,c
  2294   001C36  26D9               	addwf	fsr2l,f,c
  2295   001C38  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2296   001C3A  22DA               	addwfc	fsr2h,f,c
  2297   001C3C  0E01               	movlw	1
  2298   001C3E  6EDF               	movwf	indf2,c
  2299   001C40                     
  2300                           ;dc_motor.c: 173:     mL->brakemode = 1;
  2301   001C40  EE20 F002          	lfsr	2,2
  2302   001C44  501C               	movf	fullSpeedAhead@mL^0,w,c
  2303   001C46  26D9               	addwf	fsr2l,f,c
  2304   001C48  501D               	movf	(fullSpeedAhead@mL+1)^0,w,c
  2305   001C4A  22DA               	addwfc	fsr2h,f,c
  2306   001C4C  0E01               	movlw	1
  2307   001C4E  6EDF               	movwf	indf2,c
  2308   001C50                     
  2309                           ;dc_motor.c: 174:     mR->brakemode = 1;
  2310   001C50  EE20 F002          	lfsr	2,2
  2311   001C54  501E               	movf	fullSpeedAhead@mR^0,w,c
  2312   001C56  26D9               	addwf	fsr2l,f,c
  2313   001C58  501F               	movf	(fullSpeedAhead@mR+1)^0,w,c
  2314   001C5A  22DA               	addwfc	fsr2h,f,c
  2315   001C5C  0E01               	movlw	1
  2316   001C5E  6EDF               	movwf	indf2,c
  2317                           
  2318                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2319   001C60  EF48  F00E         	goto	l2724
  2320   001C64                     l2718:
  2321                           
  2322                           ;dc_motor.c: 176:     {;dc_motor.c: 177:         mL->power++;
  2323   001C64  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2324   001C68  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2325   001C6C  2ADF               	incf	indf2,f,c
  2326                           
  2327                           ;dc_motor.c: 178:         mR->power++;
  2328   001C6E  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2329   001C72  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2330   001C76  2ADF               	incf	indf2,f,c
  2331   001C78                     
  2332                           ;dc_motor.c: 180:         setMotorPWM(mL);
  2333   001C78  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2334   001C7C  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2335   001C80  EC92  F00B         	call	_setMotorPWM	;wreg free
  2336   001C84                     
  2337                           ;dc_motor.c: 181:         setMotorPWM(mR);
  2338   001C84  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2339   001C88  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2340   001C8C  EC92  F00B         	call	_setMotorPWM	;wreg free
  2341   001C90                     l2724:
  2342                           
  2343                           ;dc_motor.c: 175:     while (mL->power <= 20 && mR->power <=20)
  2344   001C90  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2345   001C94  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2346   001C98  0E15               	movlw	21
  2347   001C9A  60DF               	cpfslt	indf2,c
  2348   001C9C  EF52  F00E         	goto	u1571
  2349   001CA0  EF54  F00E         	goto	u1570
  2350   001CA4                     u1571:
  2351   001CA4  EF60  F00E         	goto	l2728
  2352   001CA8                     u1570:
  2353   001CA8  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2354   001CAC  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2355   001CB0  0E14               	movlw	20
  2356   001CB2  64DF               	cpfsgt	indf2,c
  2357   001CB4  EF5E  F00E         	goto	u1581
  2358   001CB8  EF60  F00E         	goto	u1580
  2359   001CBC                     u1581:
  2360   001CBC  EF32  F00E         	goto	l2718
  2361   001CC0                     u1580:
  2362   001CC0                     l2728:
  2363                           
  2364                           ;dc_motor.c: 183:     mL->power = 20;
  2365   001CC0  C01C  FFD9         	movff	fullSpeedAhead@mL,fsr2l
  2366   001CC4  C01D  FFDA         	movff	fullSpeedAhead@mL+1,fsr2h
  2367   001CC8  0E14               	movlw	20
  2368   001CCA  6EDF               	movwf	indf2,c
  2369                           
  2370                           ;dc_motor.c: 184:     mR->power = 20;
  2371   001CCC  C01E  FFD9         	movff	fullSpeedAhead@mR,fsr2l
  2372   001CD0  C01F  FFDA         	movff	fullSpeedAhead@mR+1,fsr2h
  2373   001CD4  0E14               	movlw	20
  2374   001CD6  6EDF               	movwf	indf2,c
  2375   001CD8                     
  2376                           ;dc_motor.c: 185:     setMotorPWM(mL);
  2377   001CD8  C01C  F016         	movff	fullSpeedAhead@mL,setMotorPWM@m
  2378   001CDC  C01D  F017         	movff	fullSpeedAhead@mL+1,setMotorPWM@m+1
  2379   001CE0  EC92  F00B         	call	_setMotorPWM	;wreg free
  2380   001CE4                     
  2381                           ;dc_motor.c: 186:     setMotorPWM(mR);
  2382   001CE4  C01E  F016         	movff	fullSpeedAhead@mR,setMotorPWM@m
  2383   001CE8  C01F  F017         	movff	fullSpeedAhead@mR+1,setMotorPWM@m+1
  2384   001CEC  EC92  F00B         	call	_setMotorPWM	;wreg free
  2385   001CF0  0012               	return		;funcret
  2386   001CF2                     __end_of_fullSpeedAhead:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _setMotorPWM *****************
  2390 ;; Defined at:
  2391 ;;		line 56 in file "dc_motor.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  m               2   21[COMRAM] PTR struct DC_motor
  2394 ;;		 -> main@mR(9), main@mL(9), 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  negDuty         1   26[COMRAM] unsigned char 
  2397 ;;  posDuty         1   25[COMRAM] unsigned char 
  2398 ;; Return value:  Size  Location     Type
  2399 ;;                  1    wreg      void 
  2400 ;; Registers used:
  2401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2402 ;; Tracked objects:
  2403 ;;		On entry : 0/0
  2404 ;;		On exit  : 0/0
  2405 ;;		Unchanged: 0/0
  2406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2409 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2410 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2411 ;;Total ram usage:        6 bytes
  2412 ;; Hardware stack levels used: 1
  2413 ;; Hardware stack levels required when called: 7
  2414 ;; This function calls:
  2415 ;;		___lwdiv
  2416 ;;		___wmul
  2417 ;; This function is called by:
  2418 ;;		_norm_stop
  2419 ;;		_turnLeft
  2420 ;;		_turnRight
  2421 ;;		_fullSpeedAhead
  2422 ;;		_stop
  2423 ;;		_uturn
  2424 ;;		_reverse
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text12
  2429   001724                     __ptext12:
  2430                           	callstack 0
  2431   001724                     _setMotorPWM:
  2432                           	callstack 22
  2433   001724                     
  2434                           ;dc_motor.c: 56: void setMotorPWM(DC_motor *m);dc_motor.c: 57: {;dc_motor.c: 58:     uns
      +                          igned char posDuty, negDuty;;dc_motor.c: 60:     if(m->brakemode) {
  2435   001724  EE20 F002          	lfsr	2,2
  2436   001728  5016               	movf	setMotorPWM@m^0,w,c
  2437   00172A  26D9               	addwf	fsr2l,f,c
  2438   00172C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2439   00172E  22DA               	addwfc	fsr2h,f,c
  2440   001730  50DF               	movf	indf2,w,c
  2441   001732  B4D8               	btfsc	status,2,c
  2442   001734  EF9E  F00B         	goto	u1051
  2443   001738  EFA0  F00B         	goto	u1050
  2444   00173C                     u1051:
  2445   00173C  EFD4  F00B         	goto	l2264
  2446   001740                     u1050:
  2447   001740                     
  2448                           ;dc_motor.c: 61:         posDuty=m->PWMperiod - ((unsigned int)(m->power)*(m->PWMperiod)
      +                          )/100;
  2449   001740  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2450   001744  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2451   001748  50DF               	movf	indf2,w,c
  2452   00174A  6E18               	movwf	??_setMotorPWM^0,c
  2453   00174C  5018               	movf	??_setMotorPWM^0,w,c
  2454   00174E  6E09               	movwf	___wmul@multiplier^0,c
  2455   001750  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2456   001752  EE20 F003          	lfsr	2,3
  2457   001756  5016               	movf	setMotorPWM@m^0,w,c
  2458   001758  26D9               	addwf	fsr2l,f,c
  2459   00175A  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2460   00175C  22DA               	addwfc	fsr2h,f,c
  2461   00175E  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2462   001762  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2463   001766  ECC7  F011         	call	___wmul	;wreg free
  2464   00176A  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2465   00176E  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2466   001772  0E00               	movlw	0
  2467   001774  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2468   001776  0E64               	movlw	100
  2469   001778  6E11               	movwf	___lwdiv@divisor^0,c
  2470   00177A  EC1C  F00F         	call	___lwdiv	;wreg free
  2471   00177E  EE20 F003          	lfsr	2,3
  2472   001782  5016               	movf	setMotorPWM@m^0,w,c
  2473   001784  26D9               	addwf	fsr2l,f,c
  2474   001786  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2475   001788  22DA               	addwfc	fsr2h,f,c
  2476   00178A  50DF               	movf	indf2,w,c
  2477   00178C  6E19               	movwf	(??_setMotorPWM+1)^0,c
  2478   00178E  500F               	movf	?___lwdiv^0,w,c
  2479   001790  5C19               	subwf	(??_setMotorPWM+1)^0,w,c
  2480   001792  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2481   001794                     
  2482                           ;dc_motor.c: 62:         negDuty=m->PWMperiod;
  2483   001794  EE20 F003          	lfsr	2,3
  2484   001798  5016               	movf	setMotorPWM@m^0,w,c
  2485   00179A  26D9               	addwf	fsr2l,f,c
  2486   00179C  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2487   00179E  22DA               	addwfc	fsr2h,f,c
  2488   0017A0  50DF               	movf	indf2,w,c
  2489   0017A2  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2490                           
  2491                           ;dc_motor.c: 63:     }
  2492   0017A4  EFF7  F00B         	goto	l2268
  2493   0017A8                     l2264:
  2494                           
  2495                           ;dc_motor.c: 65:         posDuty=((unsigned int)(m->power)*(m->PWMperiod))/100;
  2496   0017A8  C016  FFD9         	movff	setMotorPWM@m,fsr2l
  2497   0017AC  C017  FFDA         	movff	setMotorPWM@m+1,fsr2h
  2498   0017B0  50DF               	movf	indf2,w,c
  2499   0017B2  6E18               	movwf	??_setMotorPWM^0,c
  2500   0017B4  5018               	movf	??_setMotorPWM^0,w,c
  2501   0017B6  6E09               	movwf	___wmul@multiplier^0,c
  2502   0017B8  6A0A               	clrf	(___wmul@multiplier+1)^0,c
  2503   0017BA  EE20 F003          	lfsr	2,3
  2504   0017BE  5016               	movf	setMotorPWM@m^0,w,c
  2505   0017C0  26D9               	addwf	fsr2l,f,c
  2506   0017C2  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2507   0017C4  22DA               	addwfc	fsr2h,f,c
  2508   0017C6  CFDE F00B          	movff	postinc2,___wmul@multiplicand
  2509   0017CA  CFDD F00C          	movff	postdec2,___wmul@multiplicand+1
  2510   0017CE  ECC7  F011         	call	___wmul	;wreg free
  2511   0017D2  C009  F00F         	movff	?___wmul,___lwdiv@dividend
  2512   0017D6  C00A  F010         	movff	?___wmul+1,___lwdiv@dividend+1
  2513   0017DA  0E00               	movlw	0
  2514   0017DC  6E12               	movwf	(___lwdiv@divisor+1)^0,c
  2515   0017DE  0E64               	movlw	100
  2516   0017E0  6E11               	movwf	___lwdiv@divisor^0,c
  2517   0017E2  EC1C  F00F         	call	___lwdiv	;wreg free
  2518   0017E6  500F               	movf	?___lwdiv^0,w,c
  2519   0017E8  6E1A               	movwf	setMotorPWM@posDuty^0,c
  2520   0017EA                     
  2521                           ;dc_motor.c: 66:         negDuty=0;
  2522   0017EA  0E00               	movlw	0
  2523   0017EC  6E1B               	movwf	setMotorPWM@negDuty^0,c
  2524   0017EE                     l2268:
  2525                           
  2526                           ;dc_motor.c: 69:     if (m->direction) {
  2527   0017EE  EE20 F001          	lfsr	2,1
  2528   0017F2  5016               	movf	setMotorPWM@m^0,w,c
  2529   0017F4  26D9               	addwf	fsr2l,f,c
  2530   0017F6  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2531   0017F8  22DA               	addwfc	fsr2h,f,c
  2532   0017FA  50DF               	movf	indf2,w,c
  2533   0017FC  B4D8               	btfsc	status,2,c
  2534   0017FE  EF03  F00C         	goto	u1061
  2535   001802  EF05  F00C         	goto	u1060
  2536   001806                     u1061:
  2537   001806  EF27  F00C         	goto	l2272
  2538   00180A                     u1060:
  2539   00180A                     
  2540                           ;dc_motor.c: 70:         *(m->posDutyHighByte)=posDuty;
  2541   00180A  EE20 F005          	lfsr	2,5
  2542   00180E  5016               	movf	setMotorPWM@m^0,w,c
  2543   001810  26D9               	addwf	fsr2l,f,c
  2544   001812  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2545   001814  22DA               	addwfc	fsr2h,f,c
  2546   001816  CFDE F018          	movff	postinc2,??_setMotorPWM
  2547   00181A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2548   00181E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2549   001822  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2550   001826  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2551                           
  2552                           ;dc_motor.c: 71:         *(m->negDutyHighByte)=negDuty;
  2553   00182A  EE20 F007          	lfsr	2,7
  2554   00182E  5016               	movf	setMotorPWM@m^0,w,c
  2555   001830  26D9               	addwf	fsr2l,f,c
  2556   001832  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2557   001834  22DA               	addwfc	fsr2h,f,c
  2558   001836  CFDE F018          	movff	postinc2,??_setMotorPWM
  2559   00183A  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2560   00183E  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2561   001842  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2562   001846  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2563                           
  2564                           ;dc_motor.c: 72:     } else {
  2565   00184A  EF47  F00C         	goto	l559
  2566   00184E                     l2272:
  2567                           
  2568                           ;dc_motor.c: 73:         *(m->posDutyHighByte)=negDuty;
  2569   00184E  EE20 F005          	lfsr	2,5
  2570   001852  5016               	movf	setMotorPWM@m^0,w,c
  2571   001854  26D9               	addwf	fsr2l,f,c
  2572   001856  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2573   001858  22DA               	addwfc	fsr2h,f,c
  2574   00185A  CFDE F018          	movff	postinc2,??_setMotorPWM
  2575   00185E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2576   001862  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2577   001866  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2578   00186A  C01B  FFDF         	movff	setMotorPWM@negDuty,indf2
  2579                           
  2580                           ;dc_motor.c: 74:         *(m->negDutyHighByte)=posDuty;
  2581   00186E  EE20 F007          	lfsr	2,7
  2582   001872  5016               	movf	setMotorPWM@m^0,w,c
  2583   001874  26D9               	addwf	fsr2l,f,c
  2584   001876  5017               	movf	(setMotorPWM@m+1)^0,w,c
  2585   001878  22DA               	addwfc	fsr2h,f,c
  2586   00187A  CFDE F018          	movff	postinc2,??_setMotorPWM
  2587   00187E  CFDD F019          	movff	postdec2,??_setMotorPWM+1
  2588   001882  C018  FFD9         	movff	??_setMotorPWM,fsr2l
  2589   001886  C019  FFDA         	movff	??_setMotorPWM+1,fsr2h
  2590   00188A  C01A  FFDF         	movff	setMotorPWM@posDuty,indf2
  2591   00188E                     l559:
  2592   00188E  0012               	return		;funcret
  2593   001890                     __end_of_setMotorPWM:
  2594                           	callstack 0
  2595                           
  2596 ;; *************** function ___wmul *****************
  2597 ;; Defined at:
  2598 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  2599 ;; Parameters:    Size  Location     Type
  2600 ;;  multiplier      2    8[COMRAM] unsigned int 
  2601 ;;  multiplicand    2   10[COMRAM] unsigned int 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  product         2   12[COMRAM] unsigned int 
  2604 ;; Return value:  Size  Location     Type
  2605 ;;                  2    8[COMRAM] unsigned int 
  2606 ;; Registers used:
  2607 ;;		wreg, status,2, status,0, prodl, prodh
  2608 ;; Tracked objects:
  2609 ;;		On entry : 0/0
  2610 ;;		On exit  : 0/0
  2611 ;;		Unchanged: 0/0
  2612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2613 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2616 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2617 ;;Total ram usage:        6 bytes
  2618 ;; Hardware stack levels used: 1
  2619 ;; Hardware stack levels required when called: 6
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_setMotorPWM
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text13
  2628   00238E                     __ptext13:
  2629                           	callstack 0
  2630   00238E                     ___wmul:
  2631                           	callstack 22
  2632   00238E  5009               	movf	___wmul@multiplier^0,w,c
  2633   002390  020B               	mulwf	___wmul@multiplicand^0,c
  2634   002392  CFF3 F00D          	movff	prodl,___wmul@product
  2635   002396  CFF4 F00E          	movff	prodh,___wmul@product+1
  2636   00239A  5009               	movf	___wmul@multiplier^0,w,c
  2637   00239C  020C               	mulwf	(___wmul@multiplicand+1)^0,c
  2638   00239E  50F3               	movf	243,w,c
  2639   0023A0  260E               	addwf	(___wmul@product+1)^0,f,c
  2640   0023A2  500A               	movf	(___wmul@multiplier+1)^0,w,c
  2641   0023A4  020B               	mulwf	___wmul@multiplicand^0,c
  2642   0023A6  50F3               	movf	243,w,c
  2643   0023A8  260E               	addwf	(___wmul@product+1)^0,f,c
  2644   0023AA  C00D  F009         	movff	___wmul@product,?___wmul
  2645   0023AE  C00E  F00A         	movff	___wmul@product+1,?___wmul+1
  2646   0023B2  0012               	return		;funcret
  2647   0023B4                     __end_of___wmul:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function ___lwdiv *****************
  2651 ;; Defined at:
  2652 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  dividend        2   14[COMRAM] unsigned int 
  2655 ;;  divisor         2   16[COMRAM] unsigned int 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  quotient        2   18[COMRAM] unsigned int 
  2658 ;;  counter         1   20[COMRAM] unsigned char 
  2659 ;; Return value:  Size  Location     Type
  2660 ;;                  2   14[COMRAM] unsigned int 
  2661 ;; Registers used:
  2662 ;;		wreg, status,2, status,0
  2663 ;; Tracked objects:
  2664 ;;		On entry : 0/0
  2665 ;;		On exit  : 0/0
  2666 ;;		Unchanged: 0/0
  2667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2668 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2669 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2671 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2672 ;;Total ram usage:        7 bytes
  2673 ;; Hardware stack levels used: 1
  2674 ;; Hardware stack levels required when called: 6
  2675 ;; This function calls:
  2676 ;;		Nothing
  2677 ;; This function is called by:
  2678 ;;		_setMotorPWM
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text14
  2683   001E38                     __ptext14:
  2684                           	callstack 0
  2685   001E38                     ___lwdiv:
  2686                           	callstack 22
  2687   001E38  0E00               	movlw	0
  2688   001E3A  6E14               	movwf	(___lwdiv@quotient+1)^0,c
  2689   001E3C  0E00               	movlw	0
  2690   001E3E  6E13               	movwf	___lwdiv@quotient^0,c
  2691   001E40  5011               	movf	___lwdiv@divisor^0,w,c
  2692   001E42  1012               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2693   001E44  B4D8               	btfsc	status,2,c
  2694   001E46  EF27  F00F         	goto	u1001
  2695   001E4A  EF29  F00F         	goto	u1000
  2696   001E4E                     u1001:
  2697   001E4E  EF51  F00F         	goto	l1095
  2698   001E52                     u1000:
  2699   001E52  0E01               	movlw	1
  2700   001E54  6E15               	movwf	___lwdiv@counter^0,c
  2701   001E56  EF31  F00F         	goto	l2202
  2702   001E5A                     l2200:
  2703   001E5A  90D8               	bcf	status,0,c
  2704   001E5C  3611               	rlcf	___lwdiv@divisor^0,f,c
  2705   001E5E  3612               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2706   001E60  2A15               	incf	___lwdiv@counter^0,f,c
  2707   001E62                     l2202:
  2708   001E62  AE12               	btfss	(___lwdiv@divisor+1)^0,7,c
  2709   001E64  EF36  F00F         	goto	u1011
  2710   001E68  EF38  F00F         	goto	u1010
  2711   001E6C                     u1011:
  2712   001E6C  EF2D  F00F         	goto	l2200
  2713   001E70                     u1010:
  2714   001E70                     l2204:
  2715   001E70  90D8               	bcf	status,0,c
  2716   001E72  3613               	rlcf	___lwdiv@quotient^0,f,c
  2717   001E74  3614               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2718   001E76  5011               	movf	___lwdiv@divisor^0,w,c
  2719   001E78  5C0F               	subwf	___lwdiv@dividend^0,w,c
  2720   001E7A  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2721   001E7C  5810               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2722   001E7E  A0D8               	btfss	status,0,c
  2723   001E80  EF44  F00F         	goto	u1021
  2724   001E84  EF46  F00F         	goto	u1020
  2725   001E88                     u1021:
  2726   001E88  EF4B  F00F         	goto	l2212
  2727   001E8C                     u1020:
  2728   001E8C  5011               	movf	___lwdiv@divisor^0,w,c
  2729   001E8E  5E0F               	subwf	___lwdiv@dividend^0,f,c
  2730   001E90  5012               	movf	(___lwdiv@divisor+1)^0,w,c
  2731   001E92  5A10               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2732   001E94  8013               	bsf	___lwdiv@quotient^0,0,c
  2733   001E96                     l2212:
  2734   001E96  90D8               	bcf	status,0,c
  2735   001E98  3212               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2736   001E9A  3211               	rrcf	___lwdiv@divisor^0,f,c
  2737   001E9C  2E15               	decfsz	___lwdiv@counter^0,f,c
  2738   001E9E  EF38  F00F         	goto	l2204
  2739   001EA2                     l1095:
  2740   001EA2  C013  F00F         	movff	___lwdiv@quotient,?___lwdiv
  2741   001EA6  C014  F010         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2742   001EAA  0012               	return		;funcret
  2743   001EAC                     __end_of___lwdiv:
  2744                           	callstack 0
  2745                           
  2746 ;; *************** function _color_read_RGBC *****************
  2747 ;; Defined at:
  2748 ;;		line 94 in file "color.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  temp            2   33[COMRAM] PTR struct RGBC_val
  2751 ;;		 -> main@RGBC(32), 
  2752 ;; Auto vars:     Size  Location     Type
  2753 ;;		None
  2754 ;; Return value:  Size  Location     Type
  2755 ;;                  1    wreg      void 
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2763 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2766 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2767 ;;Total ram usage:        2 bytes
  2768 ;; Hardware stack levels used: 1
  2769 ;; Hardware stack levels required when called: 9
  2770 ;; This function calls:
  2771 ;;		___xxtofl
  2772 ;;		_color_read_Blue
  2773 ;;		_color_read_Clear
  2774 ;;		_color_read_Green
  2775 ;;		_color_read_Red
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text15
  2782   001CF2                     __ptext15:
  2783                           	callstack 0
  2784   001CF2                     _color_read_RGBC:
  2785                           	callstack 21
  2786   001CF2                     
  2787                           ;color.c: 95:     temp->R = color_read_Red();
  2788   001CF2  EC32  F010         	call	_color_read_Red	;wreg free
  2789   001CF6  C00D  F014         	movff	?_color_read_Red,___xxtofl@val
  2790   001CFA  C00E  F015         	movff	?_color_read_Red+1,___xxtofl@val+1
  2791   001CFE  6A16               	clrf	(___xxtofl@val+2)^0,c
  2792   001D00  6A17               	clrf	(___xxtofl@val+3)^0,c
  2793   001D02  0E00               	movlw	0
  2794   001D04  ECB8  F00A         	call	___xxtofl
  2795   001D08  C022  FFD9         	movff	color_read_RGBC@temp,fsr2l
  2796   001D0C  C023  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
  2797   001D10  C014  FFDE         	movff	?___xxtofl,postinc2
  2798   001D14  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2799   001D18  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2800   001D1C  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2801                           
  2802                           ;color.c: 96:     temp->B = color_read_Blue();
  2803   001D20  ECAA  F010         	call	_color_read_Blue	;wreg free
  2804   001D24  C00D  F014         	movff	?_color_read_Blue,___xxtofl@val
  2805   001D28  C00E  F015         	movff	?_color_read_Blue+1,___xxtofl@val+1
  2806   001D2C  6A16               	clrf	(___xxtofl@val+2)^0,c
  2807   001D2E  6A17               	clrf	(___xxtofl@val+3)^0,c
  2808   001D30  0E00               	movlw	0
  2809   001D32  ECB8  F00A         	call	___xxtofl
  2810   001D36  EE20 F008          	lfsr	2,8
  2811   001D3A  5022               	movf	color_read_RGBC@temp^0,w,c
  2812   001D3C  26D9               	addwf	fsr2l,f,c
  2813   001D3E  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2814   001D40  22DA               	addwfc	fsr2h,f,c
  2815   001D42  C014  FFDE         	movff	?___xxtofl,postinc2
  2816   001D46  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2817   001D4A  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2818   001D4E  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2819                           
  2820                           ;color.c: 97:     temp->G = color_read_Green();
  2821   001D52  EC5A  F010         	call	_color_read_Green	;wreg free
  2822   001D56  C00D  F014         	movff	?_color_read_Green,___xxtofl@val
  2823   001D5A  C00E  F015         	movff	?_color_read_Green+1,___xxtofl@val+1
  2824   001D5E  6A16               	clrf	(___xxtofl@val+2)^0,c
  2825   001D60  6A17               	clrf	(___xxtofl@val+3)^0,c
  2826   001D62  0E00               	movlw	0
  2827   001D64  ECB8  F00A         	call	___xxtofl
  2828   001D68  EE20 F004          	lfsr	2,4
  2829   001D6C  5022               	movf	color_read_RGBC@temp^0,w,c
  2830   001D6E  26D9               	addwf	fsr2l,f,c
  2831   001D70  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2832   001D72  22DA               	addwfc	fsr2h,f,c
  2833   001D74  C014  FFDE         	movff	?___xxtofl,postinc2
  2834   001D78  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2835   001D7C  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2836   001D80  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2837                           
  2838                           ;color.c: 98:     temp->C = color_read_Clear();
  2839   001D84  EC82  F010         	call	_color_read_Clear	;wreg free
  2840   001D88  C00D  F014         	movff	?_color_read_Clear,___xxtofl@val
  2841   001D8C  C00E  F015         	movff	?_color_read_Clear+1,___xxtofl@val+1
  2842   001D90  6A16               	clrf	(___xxtofl@val+2)^0,c
  2843   001D92  6A17               	clrf	(___xxtofl@val+3)^0,c
  2844   001D94  0E00               	movlw	0
  2845   001D96  ECB8  F00A         	call	___xxtofl
  2846   001D9A  EE20 F00C          	lfsr	2,12
  2847   001D9E  5022               	movf	color_read_RGBC@temp^0,w,c
  2848   001DA0  26D9               	addwf	fsr2l,f,c
  2849   001DA2  5023               	movf	(color_read_RGBC@temp+1)^0,w,c
  2850   001DA4  22DA               	addwfc	fsr2h,f,c
  2851   001DA6  C014  FFDE         	movff	?___xxtofl,postinc2
  2852   001DAA  C015  FFDE         	movff	?___xxtofl+1,postinc2
  2853   001DAE  C016  FFDE         	movff	?___xxtofl+2,postinc2
  2854   001DB2  C017  FFDE         	movff	?___xxtofl+3,postinc2
  2855   001DB6  0012               	return		;funcret
  2856   001DB8                     __end_of_color_read_RGBC:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _color_read_Red *****************
  2860 ;; Defined at:
  2861 ;;		line 35 in file "color.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;		None
  2864 ;; Auto vars:     Size  Location     Type
  2865 ;;  tmp             2   17[COMRAM] unsigned int 
  2866 ;; Return value:  Size  Location     Type
  2867 ;;                  2   12[COMRAM] unsigned int 
  2868 ;; Registers used:
  2869 ;;		wreg, status,2, status,0, cstack
  2870 ;; Tracked objects:
  2871 ;;		On entry : 0/0
  2872 ;;		On exit  : 0/0
  2873 ;;		Unchanged: 0/0
  2874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2876 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2877 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2878 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2879 ;;Total ram usage:        7 bytes
  2880 ;; Hardware stack levels used: 1
  2881 ;; Hardware stack levels required when called: 8
  2882 ;; This function calls:
  2883 ;;		_I2C_2_Master_Read
  2884 ;;		_I2C_2_Master_RepStart
  2885 ;;		_I2C_2_Master_Start
  2886 ;;		_I2C_2_Master_Stop
  2887 ;;		_I2C_2_Master_Write
  2888 ;; This function is called by:
  2889 ;;		_color_read_RGBC
  2890 ;;		_main
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           	psect	text16
  2895   002064                     __ptext16:
  2896                           	callstack 0
  2897   002064                     _color_read_Red:
  2898                           	callstack 22
  2899   002064                     
  2900                           ;color.c: 37:  unsigned int tmp;;color.c: 38:  I2C_2_Master_Start();
  2901   002064  EC4C  F012         	call	_I2C_2_Master_Start	;wreg free
  2902                           
  2903                           ;color.c: 39:  I2C_2_Master_Write(0x52 | 0x00);
  2904   002068  0E52               	movlw	82
  2905   00206A  EC30  F012         	call	_I2C_2_Master_Write
  2906                           
  2907                           ;color.c: 40:  I2C_2_Master_Write(0xA0 | 0x16);
  2908   00206E  0EB6               	movlw	182
  2909   002070  EC30  F012         	call	_I2C_2_Master_Write
  2910                           
  2911                           ;color.c: 41:  I2C_2_Master_RepStart();
  2912   002074  EC42  F012         	call	_I2C_2_Master_RepStart	;wreg free
  2913                           
  2914                           ;color.c: 42:  I2C_2_Master_Write(0x52 | 0x01);
  2915   002078  0E53               	movlw	83
  2916   00207A  EC30  F012         	call	_I2C_2_Master_Write
  2917                           
  2918                           ;color.c: 43:  tmp=I2C_2_Master_Read(1);
  2919   00207E  0E01               	movlw	1
  2920   002080  ECF3  F010         	call	_I2C_2_Master_Read
  2921   002084  6E0F               	movwf	??_color_read_Red^0,c
  2922   002086  500F               	movf	??_color_read_Red^0,w,c
  2923   002088  6E12               	movwf	color_read_Red@tmp^0,c
  2924   00208A  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  2925                           
  2926                           ;color.c: 44:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  2927   00208C  0E00               	movlw	0
  2928   00208E  ECF3  F010         	call	_I2C_2_Master_Read
  2929   002092  6E0F               	movwf	??_color_read_Red^0,c
  2930   002094  500F               	movf	??_color_read_Red^0,w,c
  2931   002096  6E11               	movwf	(??_color_read_Red+2)^0,c
  2932   002098  6A10               	clrf	(??_color_read_Red+1)^0,c
  2933   00209A  5012               	movf	color_read_Red@tmp^0,w,c
  2934   00209C  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  2935   00209E  6E12               	movwf	color_read_Red@tmp^0,c
  2936   0020A0  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  2937   0020A2  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  2938   0020A4  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  2939                           
  2940                           ;color.c: 45:  I2C_2_Master_Stop();
  2941   0020A6  EC47  F012         	call	_I2C_2_Master_Stop	;wreg free
  2942   0020AA                     
  2943                           ;color.c: 46:  return tmp;
  2944   0020AA  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  2945   0020AE  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  2946   0020B2  0012               	return		;funcret
  2947   0020B4                     __end_of_color_read_Red:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _color_read_Green *****************
  2951 ;; Defined at:
  2952 ;;		line 49 in file "color.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  tmp             2   17[COMRAM] unsigned int 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  2   12[COMRAM] unsigned int 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2966 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2967 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2968 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2969 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2970 ;;Total ram usage:        7 bytes
  2971 ;; Hardware stack levels used: 1
  2972 ;; Hardware stack levels required when called: 8
  2973 ;; This function calls:
  2974 ;;		_I2C_2_Master_Read
  2975 ;;		_I2C_2_Master_RepStart
  2976 ;;		_I2C_2_Master_Start
  2977 ;;		_I2C_2_Master_Stop
  2978 ;;		_I2C_2_Master_Write
  2979 ;; This function is called by:
  2980 ;;		_color_read_RGBC
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text17
  2986   0020B4                     __ptext17:
  2987                           	callstack 0
  2988   0020B4                     _color_read_Green:
  2989                           	callstack 21
  2990   0020B4                     
  2991                           ;color.c: 51:  unsigned int tmp;;color.c: 52:  I2C_2_Master_Start();
  2992   0020B4  EC4C  F012         	call	_I2C_2_Master_Start	;wreg free
  2993                           
  2994                           ;color.c: 53:  I2C_2_Master_Write(0x52 | 0x00);
  2995   0020B8  0E52               	movlw	82
  2996   0020BA  EC30  F012         	call	_I2C_2_Master_Write
  2997                           
  2998                           ;color.c: 54:  I2C_2_Master_Write(0xA0 | 0x18);
  2999   0020BE  0EB8               	movlw	184
  3000   0020C0  EC30  F012         	call	_I2C_2_Master_Write
  3001                           
  3002                           ;color.c: 55:  I2C_2_Master_RepStart();
  3003   0020C4  EC42  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3004                           
  3005                           ;color.c: 56:  I2C_2_Master_Write(0x52 | 0x01);
  3006   0020C8  0E53               	movlw	83
  3007   0020CA  EC30  F012         	call	_I2C_2_Master_Write
  3008                           
  3009                           ;color.c: 57:  tmp=I2C_2_Master_Read(1);
  3010   0020CE  0E01               	movlw	1
  3011   0020D0  ECF3  F010         	call	_I2C_2_Master_Read
  3012   0020D4  6E0F               	movwf	??_color_read_Green^0,c
  3013   0020D6  500F               	movf	??_color_read_Green^0,w,c
  3014   0020D8  6E12               	movwf	color_read_Green@tmp^0,c
  3015   0020DA  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  3016                           
  3017                           ;color.c: 58:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3018   0020DC  0E00               	movlw	0
  3019   0020DE  ECF3  F010         	call	_I2C_2_Master_Read
  3020   0020E2  6E0F               	movwf	??_color_read_Green^0,c
  3021   0020E4  500F               	movf	??_color_read_Green^0,w,c
  3022   0020E6  6E11               	movwf	(??_color_read_Green+2)^0,c
  3023   0020E8  6A10               	clrf	(??_color_read_Green+1)^0,c
  3024   0020EA  5012               	movf	color_read_Green@tmp^0,w,c
  3025   0020EC  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  3026   0020EE  6E12               	movwf	color_read_Green@tmp^0,c
  3027   0020F0  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  3028   0020F2  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  3029   0020F4  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  3030                           
  3031                           ;color.c: 59:  I2C_2_Master_Stop();
  3032   0020F6  EC47  F012         	call	_I2C_2_Master_Stop	;wreg free
  3033   0020FA                     
  3034                           ;color.c: 60:  return tmp;
  3035   0020FA  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  3036   0020FE  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  3037   002102  0012               	return		;funcret
  3038   002104                     __end_of_color_read_Green:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _color_read_Clear *****************
  3042 ;; Defined at:
  3043 ;;		line 77 in file "color.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;		None
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  tmp             2   17[COMRAM] unsigned int 
  3048 ;; Return value:  Size  Location     Type
  3049 ;;                  2   12[COMRAM] unsigned int 
  3050 ;; Registers used:
  3051 ;;		wreg, status,2, status,0, cstack
  3052 ;; Tracked objects:
  3053 ;;		On entry : 0/0
  3054 ;;		On exit  : 0/0
  3055 ;;		Unchanged: 0/0
  3056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3059 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3060 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3061 ;;Total ram usage:        7 bytes
  3062 ;; Hardware stack levels used: 1
  3063 ;; Hardware stack levels required when called: 8
  3064 ;; This function calls:
  3065 ;;		_I2C_2_Master_Read
  3066 ;;		_I2C_2_Master_RepStart
  3067 ;;		_I2C_2_Master_Start
  3068 ;;		_I2C_2_Master_Stop
  3069 ;;		_I2C_2_Master_Write
  3070 ;; This function is called by:
  3071 ;;		_color_read_RGBC
  3072 ;;		_main
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text18
  3077   002104                     __ptext18:
  3078                           	callstack 0
  3079   002104                     _color_read_Clear:
  3080                           	callstack 21
  3081   002104                     
  3082                           ;color.c: 79:  unsigned int tmp;;color.c: 80:  I2C_2_Master_Start();
  3083   002104  EC4C  F012         	call	_I2C_2_Master_Start	;wreg free
  3084                           
  3085                           ;color.c: 81:  I2C_2_Master_Write(0x52 | 0x00);
  3086   002108  0E52               	movlw	82
  3087   00210A  EC30  F012         	call	_I2C_2_Master_Write
  3088                           
  3089                           ;color.c: 82:  I2C_2_Master_Write(0xA0 | 0x14);
  3090   00210E  0EB4               	movlw	180
  3091   002110  EC30  F012         	call	_I2C_2_Master_Write
  3092                           
  3093                           ;color.c: 83:  I2C_2_Master_RepStart();
  3094   002114  EC42  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3095                           
  3096                           ;color.c: 84:  I2C_2_Master_Write(0x52 | 0x01);
  3097   002118  0E53               	movlw	83
  3098   00211A  EC30  F012         	call	_I2C_2_Master_Write
  3099                           
  3100                           ;color.c: 85:  tmp=I2C_2_Master_Read(1);
  3101   00211E  0E01               	movlw	1
  3102   002120  ECF3  F010         	call	_I2C_2_Master_Read
  3103   002124  6E0F               	movwf	??_color_read_Clear^0,c
  3104   002126  500F               	movf	??_color_read_Clear^0,w,c
  3105   002128  6E12               	movwf	color_read_Clear@tmp^0,c
  3106   00212A  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  3107                           
  3108                           ;color.c: 86:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3109   00212C  0E00               	movlw	0
  3110   00212E  ECF3  F010         	call	_I2C_2_Master_Read
  3111   002132  6E0F               	movwf	??_color_read_Clear^0,c
  3112   002134  500F               	movf	??_color_read_Clear^0,w,c
  3113   002136  6E11               	movwf	(??_color_read_Clear+2)^0,c
  3114   002138  6A10               	clrf	(??_color_read_Clear+1)^0,c
  3115   00213A  5012               	movf	color_read_Clear@tmp^0,w,c
  3116   00213C  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  3117   00213E  6E12               	movwf	color_read_Clear@tmp^0,c
  3118   002140  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  3119   002142  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  3120   002144  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  3121                           
  3122                           ;color.c: 87:  I2C_2_Master_Stop();
  3123   002146  EC47  F012         	call	_I2C_2_Master_Stop	;wreg free
  3124   00214A                     
  3125                           ;color.c: 88:  return tmp;
  3126   00214A  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  3127   00214E  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  3128   002152  0012               	return		;funcret
  3129   002154                     __end_of_color_read_Clear:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _color_read_Blue *****************
  3133 ;; Defined at:
  3134 ;;		line 63 in file "color.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  tmp             2   17[COMRAM] unsigned int 
  3139 ;; Return value:  Size  Location     Type
  3140 ;;                  2   12[COMRAM] unsigned int 
  3141 ;; Registers used:
  3142 ;;		wreg, status,2, status,0, cstack
  3143 ;; Tracked objects:
  3144 ;;		On entry : 0/0
  3145 ;;		On exit  : 0/0
  3146 ;;		Unchanged: 0/0
  3147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3150 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3151 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3152 ;;Total ram usage:        7 bytes
  3153 ;; Hardware stack levels used: 1
  3154 ;; Hardware stack levels required when called: 8
  3155 ;; This function calls:
  3156 ;;		_I2C_2_Master_Read
  3157 ;;		_I2C_2_Master_RepStart
  3158 ;;		_I2C_2_Master_Start
  3159 ;;		_I2C_2_Master_Stop
  3160 ;;		_I2C_2_Master_Write
  3161 ;; This function is called by:
  3162 ;;		_color_read_RGBC
  3163 ;;		_main
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text19
  3168   002154                     __ptext19:
  3169                           	callstack 0
  3170   002154                     _color_read_Blue:
  3171                           	callstack 21
  3172   002154                     
  3173                           ;color.c: 65:  unsigned int tmp;;color.c: 66:  I2C_2_Master_Start();
  3174   002154  EC4C  F012         	call	_I2C_2_Master_Start	;wreg free
  3175                           
  3176                           ;color.c: 67:  I2C_2_Master_Write(0x52 | 0x00);
  3177   002158  0E52               	movlw	82
  3178   00215A  EC30  F012         	call	_I2C_2_Master_Write
  3179                           
  3180                           ;color.c: 68:  I2C_2_Master_Write(0xA0 | 0x1A);
  3181   00215E  0EBA               	movlw	186
  3182   002160  EC30  F012         	call	_I2C_2_Master_Write
  3183                           
  3184                           ;color.c: 69:  I2C_2_Master_RepStart();
  3185   002164  EC42  F012         	call	_I2C_2_Master_RepStart	;wreg free
  3186                           
  3187                           ;color.c: 70:  I2C_2_Master_Write(0x52 | 0x01);
  3188   002168  0E53               	movlw	83
  3189   00216A  EC30  F012         	call	_I2C_2_Master_Write
  3190                           
  3191                           ;color.c: 71:  tmp=I2C_2_Master_Read(1);
  3192   00216E  0E01               	movlw	1
  3193   002170  ECF3  F010         	call	_I2C_2_Master_Read
  3194   002174  6E0F               	movwf	??_color_read_Blue^0,c
  3195   002176  500F               	movf	??_color_read_Blue^0,w,c
  3196   002178  6E12               	movwf	color_read_Blue@tmp^0,c
  3197   00217A  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  3198                           
  3199                           ;color.c: 72:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  3200   00217C  0E00               	movlw	0
  3201   00217E  ECF3  F010         	call	_I2C_2_Master_Read
  3202   002182  6E0F               	movwf	??_color_read_Blue^0,c
  3203   002184  500F               	movf	??_color_read_Blue^0,w,c
  3204   002186  6E11               	movwf	(??_color_read_Blue+2)^0,c
  3205   002188  6A10               	clrf	(??_color_read_Blue+1)^0,c
  3206   00218A  5012               	movf	color_read_Blue@tmp^0,w,c
  3207   00218C  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  3208   00218E  6E12               	movwf	color_read_Blue@tmp^0,c
  3209   002190  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  3210   002192  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  3211   002194  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  3212                           
  3213                           ;color.c: 73:  I2C_2_Master_Stop();
  3214   002196  EC47  F012         	call	_I2C_2_Master_Stop	;wreg free
  3215   00219A                     
  3216                           ;color.c: 74:  return tmp;
  3217   00219A  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  3218   00219E  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  3219   0021A2  0012               	return		;funcret
  3220   0021A4                     __end_of_color_read_Blue:
  3221                           	callstack 0
  3222                           
  3223 ;; *************** function _I2C_2_Master_RepStart *****************
  3224 ;; Defined at:
  3225 ;;		line 33 in file "i2c.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;		None
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 7
  3246 ;; This function calls:
  3247 ;;		_I2C_2_Master_Idle
  3248 ;; This function is called by:
  3249 ;;		_color_read_Red
  3250 ;;		_color_read_Green
  3251 ;;		_color_read_Blue
  3252 ;;		_color_read_Clear
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text20
  3257   002484                     __ptext20:
  3258                           	callstack 0
  3259   002484                     _I2C_2_Master_RepStart:
  3260                           	callstack 22
  3261   002484                     
  3262                           ;i2c.c: 35:   I2C_2_Master_Idle();
  3263   002484  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  3264   002488                     
  3265                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  3266   002488  010E               	movlb	14	; () banked
  3267   00248A  83DA               	bsf	218,1,b	;volatile
  3268   00248C                     
  3269                           ; BSR set to: 14
  3270   00248C  0012               	return		;funcret
  3271   00248E                     __end_of_I2C_2_Master_RepStart:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _I2C_2_Master_Read *****************
  3275 ;; Defined at:
  3276 ;;		line 51 in file "i2c.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  ack             1    wreg     unsigned char 
  3279 ;; Auto vars:     Size  Location     Type
  3280 ;;  ack             1   10[COMRAM] unsigned char 
  3281 ;;  tmp             1   11[COMRAM] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      unsigned char 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3294 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3295 ;;Total ram usage:        3 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 7
  3298 ;; This function calls:
  3299 ;;		_I2C_2_Master_Idle
  3300 ;; This function is called by:
  3301 ;;		_color_read_Red
  3302 ;;		_color_read_Green
  3303 ;;		_color_read_Blue
  3304 ;;		_color_read_Clear
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text21
  3309   0021E6                     __ptext21:
  3310                           	callstack 0
  3311   0021E6                     _I2C_2_Master_Read:
  3312                           	callstack 22
  3313                           
  3314                           ; BSR set to: 14
  3315                           ;incstack = 0
  3316                           ;I2C_2_Master_Read@ack stored from wreg
  3317   0021E6  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  3318   0021E8                     
  3319                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  3320   0021E8  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  3321   0021EC                     
  3322                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  3323   0021EC  010E               	movlb	14	; () banked
  3324   0021EE  87DA               	bsf	218,3,b	;volatile
  3325                           
  3326                           ;i2c.c: 56:   I2C_2_Master_Idle();
  3327   0021F0  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  3328   0021F4                     
  3329                           ;i2c.c: 57:   tmp = SSP2BUF;
  3330   0021F4  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  3331                           
  3332                           ;i2c.c: 58:   I2C_2_Master_Idle();
  3333   0021F8  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  3334   0021FC                     
  3335                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  3336   0021FC  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  3337   0021FE  B4D8               	btfsc	status,2,c
  3338   002200  EF04  F011         	goto	u1031
  3339   002204  EF08  F011         	goto	u1030
  3340   002208                     u1031:
  3341   002208  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  3342   00220A  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  3343   00220C  EF09  F011         	goto	u1048
  3344   002210                     u1030:
  3345   002210  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  3346   002212                     u1048:
  3347   002212  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  3348   002214  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  3349   002216  010E               	movlb	14	; () banked
  3350   002218  51DA               	movf	218,w,b	;volatile
  3351   00221A  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  3352   00221C  0BDF               	andlw	-33
  3353   00221E  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  3354   002220  6FDA               	movwf	218,b	;volatile
  3355   002222                     
  3356                           ; BSR set to: 14
  3357                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  3358   002222  89DA               	bsf	218,4,b	;volatile
  3359   002224                     
  3360                           ; BSR set to: 14
  3361                           ;i2c.c: 61:   return tmp;
  3362   002224  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  3363   002226                     
  3364                           ; BSR set to: 14
  3365   002226  0012               	return		;funcret
  3366   002228                     __end_of_I2C_2_Master_Read:
  3367                           	callstack 0
  3368                           
  3369 ;; *************** function ___xxtofl *****************
  3370 ;; Defined at:
  3371 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\xxtofl.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  sign            1    wreg     unsigned char 
  3374 ;;  val             4   19[COMRAM] long 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  sign            1   27[COMRAM] unsigned char 
  3377 ;;  arg             4   29[COMRAM] unsigned long 
  3378 ;;  exp             1   28[COMRAM] unsigned char 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;                  4   19[COMRAM] unsigned char 
  3381 ;; Registers used:
  3382 ;;		wreg, status,2, status,0
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3389 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3391 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;Total ram usage:       14 bytes
  3393 ;; Hardware stack levels used: 1
  3394 ;; Hardware stack levels required when called: 6
  3395 ;; This function calls:
  3396 ;;		Nothing
  3397 ;; This function is called by:
  3398 ;;		_color_read_RGBC
  3399 ;;		_color_normalise
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text22
  3404   001570                     __ptext22:
  3405                           	callstack 0
  3406   001570                     ___xxtofl:
  3407                           	callstack 23
  3408                           
  3409                           ; BSR set to: 14
  3410                           ;incstack = 0
  3411                           ;___xxtofl@sign stored from wreg
  3412   001570  6E1C               	movwf	___xxtofl@sign^0,c
  3413   001572  501C               	movf	___xxtofl@sign^0,w,c
  3414   001574  B4D8               	btfsc	status,2,c
  3415   001576  EFBF  F00A         	goto	u1351
  3416   00157A  EFC1  F00A         	goto	u1350
  3417   00157E                     u1351:
  3418   00157E  EFE3  F00A         	goto	l1259
  3419   001582                     u1350:
  3420   001582  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  3421   001584  EFC8  F00A         	goto	u1360
  3422   001588  EFC6  F00A         	goto	u1361
  3423   00158C                     u1361:
  3424   00158C  EFE3  F00A         	goto	l1259
  3425   001590                     u1360:
  3426   001590  C014  F018         	movff	___xxtofl@val,??___xxtofl
  3427   001594  C015  F019         	movff	___xxtofl@val+1,??___xxtofl+1
  3428   001598  C016  F01A         	movff	___xxtofl@val+2,??___xxtofl+2
  3429   00159C  C017  F01B         	movff	___xxtofl@val+3,??___xxtofl+3
  3430   0015A0  1E18               	comf	??___xxtofl^0,f,c
  3431   0015A2  1E19               	comf	(??___xxtofl+1)^0,f,c
  3432   0015A4  1E1A               	comf	(??___xxtofl+2)^0,f,c
  3433   0015A6  1E1B               	comf	(??___xxtofl+3)^0,f,c
  3434   0015A8  2A18               	incf	??___xxtofl^0,f,c
  3435   0015AA  0E00               	movlw	0
  3436   0015AC  2219               	addwfc	(??___xxtofl+1)^0,f,c
  3437   0015AE  221A               	addwfc	(??___xxtofl+2)^0,f,c
  3438   0015B0  221B               	addwfc	(??___xxtofl+3)^0,f,c
  3439   0015B2  C018  F01E         	movff	??___xxtofl,___xxtofl@arg
  3440   0015B6  C019  F01F         	movff	??___xxtofl+1,___xxtofl@arg+1
  3441   0015BA  C01A  F020         	movff	??___xxtofl+2,___xxtofl@arg+2
  3442   0015BE  C01B  F021         	movff	??___xxtofl+3,___xxtofl@arg+3
  3443   0015C2  EFEB  F00A         	goto	l2514
  3444   0015C6                     l1259:
  3445   0015C6  C014  F01E         	movff	___xxtofl@val,___xxtofl@arg
  3446   0015CA  C015  F01F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3447   0015CE  C016  F020         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3448   0015D2  C017  F021         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3449   0015D6                     l2514:
  3450   0015D6  5014               	movf	___xxtofl@val^0,w,c
  3451   0015D8  1015               	iorwf	(___xxtofl@val+1)^0,w,c
  3452   0015DA  1016               	iorwf	(___xxtofl@val+2)^0,w,c
  3453   0015DC  1017               	iorwf	(___xxtofl@val+3)^0,w,c
  3454   0015DE  A4D8               	btfss	status,2,c
  3455   0015E0  EFF4  F00A         	goto	u1371
  3456   0015E4  EFF6  F00A         	goto	u1370
  3457   0015E8                     u1371:
  3458   0015E8  EF00  F00B         	goto	l2520
  3459   0015EC                     u1370:
  3460   0015EC  0E00               	movlw	0
  3461   0015EE  6E14               	movwf	?___xxtofl^0,c
  3462   0015F0  0E00               	movlw	0
  3463   0015F2  6E15               	movwf	(?___xxtofl+1)^0,c
  3464   0015F4  0E00               	movlw	0
  3465   0015F6  6E16               	movwf	(?___xxtofl+2)^0,c
  3466   0015F8  0E00               	movlw	0
  3467   0015FA  6E17               	movwf	(?___xxtofl+3)^0,c
  3468   0015FC  EF91  F00B         	goto	l1262
  3469   001600                     l2520:
  3470   001600  0E96               	movlw	150
  3471   001602  6E1D               	movwf	___xxtofl@exp^0,c
  3472   001604  EF0A  F00B         	goto	l2524
  3473   001608                     l2522:
  3474   001608  2A1D               	incf	___xxtofl@exp^0,f,c
  3475   00160A  90D8               	bcf	status,0,c
  3476   00160C  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  3477   00160E  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  3478   001610  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  3479   001612  321E               	rrcf	___xxtofl@arg^0,f,c
  3480   001614                     l2524:
  3481   001614  0E00               	movlw	0
  3482   001616  141E               	andwf	___xxtofl@arg^0,w,c
  3483   001618  6E18               	movwf	??___xxtofl^0,c
  3484   00161A  0E00               	movlw	0
  3485   00161C  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  3486   00161E  6E19               	movwf	(??___xxtofl+1)^0,c
  3487   001620  0E00               	movlw	0
  3488   001622  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  3489   001624  6E1A               	movwf	(??___xxtofl+2)^0,c
  3490   001626  0EFE               	movlw	254
  3491   001628  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  3492   00162A  6E1B               	movwf	(??___xxtofl+3)^0,c
  3493   00162C  5018               	movf	??___xxtofl^0,w,c
  3494   00162E  1019               	iorwf	(??___xxtofl+1)^0,w,c
  3495   001630  101A               	iorwf	(??___xxtofl+2)^0,w,c
  3496   001632  101B               	iorwf	(??___xxtofl+3)^0,w,c
  3497   001634  A4D8               	btfss	status,2,c
  3498   001636  EF1F  F00B         	goto	u1381
  3499   00163A  EF21  F00B         	goto	u1380
  3500   00163E                     u1381:
  3501   00163E  EF04  F00B         	goto	l2522
  3502   001642                     u1380:
  3503   001642  EF2F  F00B         	goto	l1266
  3504   001646                     l2526:
  3505   001646  2A1D               	incf	___xxtofl@exp^0,f,c
  3506   001648  0E01               	movlw	1
  3507   00164A  261E               	addwf	___xxtofl@arg^0,f,c
  3508   00164C  0E00               	movlw	0
  3509   00164E  221F               	addwfc	(___xxtofl@arg+1)^0,f,c
  3510   001650  2220               	addwfc	(___xxtofl@arg+2)^0,f,c
  3511   001652  2221               	addwfc	(___xxtofl@arg+3)^0,f,c
  3512   001654  90D8               	bcf	status,0,c
  3513   001656  3221               	rrcf	(___xxtofl@arg+3)^0,f,c
  3514   001658  3220               	rrcf	(___xxtofl@arg+2)^0,f,c
  3515   00165A  321F               	rrcf	(___xxtofl@arg+1)^0,f,c
  3516   00165C  321E               	rrcf	___xxtofl@arg^0,f,c
  3517   00165E                     l1266:
  3518   00165E  0E00               	movlw	0
  3519   001660  141E               	andwf	___xxtofl@arg^0,w,c
  3520   001662  6E18               	movwf	??___xxtofl^0,c
  3521   001664  0E00               	movlw	0
  3522   001666  141F               	andwf	(___xxtofl@arg+1)^0,w,c
  3523   001668  6E19               	movwf	(??___xxtofl+1)^0,c
  3524   00166A  0E00               	movlw	0
  3525   00166C  1420               	andwf	(___xxtofl@arg+2)^0,w,c
  3526   00166E  6E1A               	movwf	(??___xxtofl+2)^0,c
  3527   001670  0EFF               	movlw	255
  3528   001672  1421               	andwf	(___xxtofl@arg+3)^0,w,c
  3529   001674  6E1B               	movwf	(??___xxtofl+3)^0,c
  3530   001676  5018               	movf	??___xxtofl^0,w,c
  3531   001678  1019               	iorwf	(??___xxtofl+1)^0,w,c
  3532   00167A  101A               	iorwf	(??___xxtofl+2)^0,w,c
  3533   00167C  101B               	iorwf	(??___xxtofl+3)^0,w,c
  3534   00167E  A4D8               	btfss	status,2,c
  3535   001680  EF44  F00B         	goto	u1391
  3536   001684  EF46  F00B         	goto	u1390
  3537   001688                     u1391:
  3538   001688  EF23  F00B         	goto	l2526
  3539   00168C                     u1390:
  3540   00168C  EF4E  F00B         	goto	l2534
  3541   001690                     l2532:
  3542   001690  061D               	decf	___xxtofl@exp^0,f,c
  3543   001692  90D8               	bcf	status,0,c
  3544   001694  361E               	rlcf	___xxtofl@arg^0,f,c
  3545   001696  361F               	rlcf	(___xxtofl@arg+1)^0,f,c
  3546   001698  3620               	rlcf	(___xxtofl@arg+2)^0,f,c
  3547   00169A  3621               	rlcf	(___xxtofl@arg+3)^0,f,c
  3548   00169C                     l2534:
  3549   00169C  BE20               	btfsc	(___xxtofl@arg+2)^0,7,c
  3550   00169E  EF53  F00B         	goto	u1401
  3551   0016A2  EF55  F00B         	goto	u1400
  3552   0016A6                     u1401:
  3553   0016A6  EF5D  F00B         	goto	l1273
  3554   0016AA                     u1400:
  3555   0016AA  0E02               	movlw	2
  3556   0016AC  601D               	cpfslt	___xxtofl@exp^0,c
  3557   0016AE  EF5B  F00B         	goto	u1411
  3558   0016B2  EF5D  F00B         	goto	u1410
  3559   0016B6                     u1411:
  3560   0016B6  EF48  F00B         	goto	l2532
  3561   0016BA                     u1410:
  3562   0016BA                     l1273:
  3563   0016BA  B01D               	btfsc	___xxtofl@exp^0,0,c
  3564   0016BC  EF62  F00B         	goto	u1421
  3565   0016C0  EF64  F00B         	goto	u1420
  3566   0016C4                     u1421:
  3567   0016C4  EF65  F00B         	goto	l2540
  3568   0016C8                     u1420:
  3569   0016C8  9E20               	bcf	(___xxtofl@arg+2)^0,7,c
  3570   0016CA                     l2540:
  3571   0016CA  90D8               	bcf	status,0,c
  3572   0016CC  321D               	rrcf	___xxtofl@exp^0,f,c
  3573   0016CE  C01D  F018         	movff	___xxtofl@exp,??___xxtofl
  3574   0016D2  6A19               	clrf	(??___xxtofl+1)^0,c
  3575   0016D4  6A1A               	clrf	(??___xxtofl+2)^0,c
  3576   0016D6  6A1B               	clrf	(??___xxtofl+3)^0,c
  3577   0016D8  C018  F01B         	movff	??___xxtofl,??___xxtofl+3
  3578   0016DC  6A1A               	clrf	(??___xxtofl+2)^0,c
  3579   0016DE  6A19               	clrf	(??___xxtofl+1)^0,c
  3580   0016E0  6A18               	clrf	??___xxtofl^0,c
  3581   0016E2  5018               	movf	??___xxtofl^0,w,c
  3582   0016E4  121E               	iorwf	___xxtofl@arg^0,f,c
  3583   0016E6  5019               	movf	(??___xxtofl+1)^0,w,c
  3584   0016E8  121F               	iorwf	(___xxtofl@arg+1)^0,f,c
  3585   0016EA  501A               	movf	(??___xxtofl+2)^0,w,c
  3586   0016EC  1220               	iorwf	(___xxtofl@arg+2)^0,f,c
  3587   0016EE  501B               	movf	(??___xxtofl+3)^0,w,c
  3588   0016F0  1221               	iorwf	(___xxtofl@arg+3)^0,f,c
  3589   0016F2  501C               	movf	___xxtofl@sign^0,w,c
  3590   0016F4  B4D8               	btfsc	status,2,c
  3591   0016F6  EF7F  F00B         	goto	u1431
  3592   0016FA  EF81  F00B         	goto	u1430
  3593   0016FE                     u1431:
  3594   0016FE  EF89  F00B         	goto	l2550
  3595   001702                     u1430:
  3596   001702  BE17               	btfsc	(___xxtofl@val+3)^0,7,c
  3597   001704  EF88  F00B         	goto	u1440
  3598   001708  EF86  F00B         	goto	u1441
  3599   00170C                     u1441:
  3600   00170C  EF89  F00B         	goto	l2550
  3601   001710                     u1440:
  3602   001710  8E21               	bsf	(___xxtofl@arg+3)^0,7,c
  3603   001712                     l2550:
  3604   001712  C01E  F014         	movff	___xxtofl@arg,?___xxtofl
  3605   001716  C01F  F015         	movff	___xxtofl@arg+1,?___xxtofl+1
  3606   00171A  C020  F016         	movff	___xxtofl@arg+2,?___xxtofl+2
  3607   00171E  C021  F017         	movff	___xxtofl@arg+3,?___xxtofl+3
  3608   001722                     l1262:
  3609   001722  0012               	return		;funcret
  3610   001724                     __end_of___xxtofl:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function _color_normalise *****************
  3614 ;; Defined at:
  3615 ;;		line 100 in file "color.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  RGBC            2   33[COMRAM] PTR struct RGBC_val
  3618 ;;		 -> main@RGBC(32), 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;		None
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  1    wreg      void 
  3623 ;; Registers used:
  3624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3630 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3634 ;;Total ram usage:        2 bytes
  3635 ;; Hardware stack levels used: 1
  3636 ;; Hardware stack levels required when called: 7
  3637 ;; This function calls:
  3638 ;;		___fldiv
  3639 ;; This function is called by:
  3640 ;;		_main
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           	psect	text23
  3645   001890                     __ptext23:
  3646                           	callstack 0
  3647   001890                     _color_normalise:
  3648                           	callstack 23
  3649   001890                     
  3650                           ;color.c: 101:     RGBC->norm_R = RGBC->C / RGBC->R;
  3651   001890  EE20 F00C          	lfsr	2,12
  3652   001894  5022               	movf	color_normalise@RGBC^0,w,c
  3653   001896  26D9               	addwf	fsr2l,f,c
  3654   001898  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3655   00189A  22DA               	addwfc	fsr2h,f,c
  3656   00189C  CFDE F009          	movff	postinc2,___fldiv@b
  3657   0018A0  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3658   0018A4  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3659   0018A8  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3660   0018AC  C022  FFD9         	movff	color_normalise@RGBC,fsr2l
  3661   0018B0  C023  FFDA         	movff	color_normalise@RGBC+1,fsr2h
  3662   0018B4  CFDE F00D          	movff	postinc2,___fldiv@a
  3663   0018B8  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3664   0018BC  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3665   0018C0  CFDE F010          	movff	postinc2,___fldiv@a+3
  3666   0018C4  ECEB  F008         	call	___fldiv	;wreg free
  3667   0018C8  EE20 F010          	lfsr	2,16
  3668   0018CC  5022               	movf	color_normalise@RGBC^0,w,c
  3669   0018CE  26D9               	addwf	fsr2l,f,c
  3670   0018D0  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3671   0018D2  22DA               	addwfc	fsr2h,f,c
  3672   0018D4  C009  FFDE         	movff	?___fldiv,postinc2
  3673   0018D8  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3674   0018DC  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3675   0018E0  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3676                           
  3677                           ;color.c: 103:     RGBC->norm_G = RGBC->C / RGBC->G;
  3678   0018E4  EE20 F00C          	lfsr	2,12
  3679   0018E8  5022               	movf	color_normalise@RGBC^0,w,c
  3680   0018EA  26D9               	addwf	fsr2l,f,c
  3681   0018EC  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3682   0018EE  22DA               	addwfc	fsr2h,f,c
  3683   0018F0  CFDE F009          	movff	postinc2,___fldiv@b
  3684   0018F4  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3685   0018F8  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3686   0018FC  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3687   001900  EE20 F004          	lfsr	2,4
  3688   001904  5022               	movf	color_normalise@RGBC^0,w,c
  3689   001906  26D9               	addwf	fsr2l,f,c
  3690   001908  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3691   00190A  22DA               	addwfc	fsr2h,f,c
  3692   00190C  CFDE F00D          	movff	postinc2,___fldiv@a
  3693   001910  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3694   001914  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3695   001918  CFDE F010          	movff	postinc2,___fldiv@a+3
  3696   00191C  ECEB  F008         	call	___fldiv	;wreg free
  3697   001920  EE20 F014          	lfsr	2,20
  3698   001924  5022               	movf	color_normalise@RGBC^0,w,c
  3699   001926  26D9               	addwf	fsr2l,f,c
  3700   001928  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3701   00192A  22DA               	addwfc	fsr2h,f,c
  3702   00192C  C009  FFDE         	movff	?___fldiv,postinc2
  3703   001930  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3704   001934  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3705   001938  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3706                           
  3707                           ;color.c: 104:     RGBC->norm_B = RGBC->C / RGBC->B;
  3708   00193C  EE20 F00C          	lfsr	2,12
  3709   001940  5022               	movf	color_normalise@RGBC^0,w,c
  3710   001942  26D9               	addwf	fsr2l,f,c
  3711   001944  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3712   001946  22DA               	addwfc	fsr2h,f,c
  3713   001948  CFDE F009          	movff	postinc2,___fldiv@b
  3714   00194C  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3715   001950  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3716   001954  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3717   001958  EE20 F008          	lfsr	2,8
  3718   00195C  5022               	movf	color_normalise@RGBC^0,w,c
  3719   00195E  26D9               	addwf	fsr2l,f,c
  3720   001960  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3721   001962  22DA               	addwfc	fsr2h,f,c
  3722   001964  CFDE F00D          	movff	postinc2,___fldiv@a
  3723   001968  CFDE F00E          	movff	postinc2,___fldiv@a+1
  3724   00196C  CFDE F00F          	movff	postinc2,___fldiv@a+2
  3725   001970  CFDE F010          	movff	postinc2,___fldiv@a+3
  3726   001974  ECEB  F008         	call	___fldiv	;wreg free
  3727   001978  EE20 F018          	lfsr	2,24
  3728   00197C  5022               	movf	color_normalise@RGBC^0,w,c
  3729   00197E  26D9               	addwf	fsr2l,f,c
  3730   001980  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3731   001982  22DA               	addwfc	fsr2h,f,c
  3732   001984  C009  FFDE         	movff	?___fldiv,postinc2
  3733   001988  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3734   00198C  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3735   001990  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3736                           
  3737                           ;color.c: 105:     RGBC->norm_C = RGBC->C / amb_clear;
  3738   001994  EE20 F00C          	lfsr	2,12
  3739   001998  5022               	movf	color_normalise@RGBC^0,w,c
  3740   00199A  26D9               	addwf	fsr2l,f,c
  3741   00199C  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3742   00199E  22DA               	addwfc	fsr2h,f,c
  3743   0019A0  CFDE F009          	movff	postinc2,___fldiv@b
  3744   0019A4  CFDE F00A          	movff	postinc2,___fldiv@b+1
  3745   0019A8  CFDE F00B          	movff	postinc2,___fldiv@b+2
  3746   0019AC  CFDE F00C          	movff	postinc2,___fldiv@b+3
  3747   0019B0  0E00               	movlw	0
  3748   0019B2  6E0D               	movwf	___fldiv@a^0,c
  3749   0019B4  0E00               	movlw	0
  3750   0019B6  6E0E               	movwf	(___fldiv@a+1)^0,c
  3751   0019B8  0E00               	movlw	0
  3752   0019BA  6E0F               	movwf	(___fldiv@a+2)^0,c
  3753   0019BC  0E00               	movlw	0
  3754   0019BE  6E10               	movwf	(___fldiv@a+3)^0,c
  3755   0019C0  ECEB  F008         	call	___fldiv	;wreg free
  3756   0019C4  EE20 F01C          	lfsr	2,28
  3757   0019C8  5022               	movf	color_normalise@RGBC^0,w,c
  3758   0019CA  26D9               	addwf	fsr2l,f,c
  3759   0019CC  5023               	movf	(color_normalise@RGBC+1)^0,w,c
  3760   0019CE  22DA               	addwfc	fsr2h,f,c
  3761   0019D0  C009  FFDE         	movff	?___fldiv,postinc2
  3762   0019D4  C00A  FFDE         	movff	?___fldiv+1,postinc2
  3763   0019D8  C00B  FFDE         	movff	?___fldiv+2,postinc2
  3764   0019DC  C00C  FFDE         	movff	?___fldiv+3,postinc2
  3765   0019E0  0012               	return		;funcret
  3766   0019E2                     __end_of_color_normalise:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function ___fldiv *****************
  3770 ;; Defined at:
  3771 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcdiv.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  b               4    8[COMRAM] void 
  3774 ;;  a               4   12[COMRAM] void 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  grs             4   27[COMRAM] unsigned long 
  3777 ;;  rem             4   20[COMRAM] unsigned long 
  3778 ;;  new_exp         2   25[COMRAM] short 
  3779 ;;  aexp            1   32[COMRAM] unsigned char 
  3780 ;;  bexp            1   31[COMRAM] unsigned char 
  3781 ;;  sign            1   24[COMRAM] unsigned char 
  3782 ;; Return value:  Size  Location     Type
  3783 ;;                  4    8[COMRAM] unsigned char 
  3784 ;; Registers used:
  3785 ;;		wreg, status,2, status,0
  3786 ;; Tracked objects:
  3787 ;;		On entry : 0/0
  3788 ;;		On exit  : 0/0
  3789 ;;		Unchanged: 0/0
  3790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3792 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3794 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3795 ;;Total ram usage:       25 bytes
  3796 ;; Hardware stack levels used: 1
  3797 ;; Hardware stack levels required when called: 6
  3798 ;; This function calls:
  3799 ;;		Nothing
  3800 ;; This function is called by:
  3801 ;;		_color_normalise
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text24
  3806   0011D6                     __ptext24:
  3807                           	callstack 0
  3808   0011D6                     ___fldiv:
  3809                           	callstack 23
  3810   0011D6  500C               	movf	(___fldiv@b+3)^0,w,c
  3811   0011D8  0B80               	andlw	128
  3812   0011DA  6E19               	movwf	___fldiv@sign^0,c
  3813   0011DC  500C               	movf	(___fldiv@b+3)^0,w,c
  3814   0011DE  240C               	addwf	(___fldiv@b+3)^0,w,c
  3815   0011E0  6E20               	movwf	___fldiv@bexp^0,c
  3816   0011E2  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  3817   0011E4  EFF6  F008         	goto	u1071
  3818   0011E8  EFF8  F008         	goto	u1070
  3819   0011EC                     u1071:
  3820   0011EC  EFF9  F008         	goto	l2354
  3821   0011F0                     u1070:
  3822   0011F0  8020               	bsf	___fldiv@bexp^0,0,c
  3823   0011F2                     l2354:
  3824   0011F2  5020               	movf	___fldiv@bexp^0,w,c
  3825   0011F4  B4D8               	btfsc	status,2,c
  3826   0011F6  EFFF  F008         	goto	u1081
  3827   0011FA  EF01  F009         	goto	u1080
  3828   0011FE                     u1081:
  3829   0011FE  EF16  F009         	goto	l2364
  3830   001202                     u1080:
  3831   001202  2820               	incf	___fldiv@bexp^0,w,c
  3832   001204  A4D8               	btfss	status,2,c
  3833   001206  EF07  F009         	goto	u1091
  3834   00120A  EF09  F009         	goto	u1090
  3835   00120E                     u1091:
  3836   00120E  EF11  F009         	goto	l2360
  3837   001212                     u1090:
  3838   001212  0E00               	movlw	0
  3839   001214  6E09               	movwf	___fldiv@b^0,c
  3840   001216  0E00               	movlw	0
  3841   001218  6E0A               	movwf	(___fldiv@b+1)^0,c
  3842   00121A  0E00               	movlw	0
  3843   00121C  6E0B               	movwf	(___fldiv@b+2)^0,c
  3844   00121E  0E00               	movlw	0
  3845   001220  6E0C               	movwf	(___fldiv@b+3)^0,c
  3846   001222                     l2360:
  3847   001222  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  3848   001224  0E00               	movlw	0
  3849   001226  6E0C               	movwf	(___fldiv@b+3)^0,c
  3850   001228  EF1E  F009         	goto	l2366
  3851   00122C                     l2364:
  3852   00122C  0E00               	movlw	0
  3853   00122E  6E09               	movwf	___fldiv@b^0,c
  3854   001230  0E00               	movlw	0
  3855   001232  6E0A               	movwf	(___fldiv@b+1)^0,c
  3856   001234  0E00               	movlw	0
  3857   001236  6E0B               	movwf	(___fldiv@b+2)^0,c
  3858   001238  0E00               	movlw	0
  3859   00123A  6E0C               	movwf	(___fldiv@b+3)^0,c
  3860   00123C                     l2366:
  3861   00123C  5010               	movf	(___fldiv@a+3)^0,w,c
  3862   00123E  0B80               	andlw	128
  3863   001240  1A19               	xorwf	___fldiv@sign^0,f,c
  3864   001242  5010               	movf	(___fldiv@a+3)^0,w,c
  3865   001244  2410               	addwf	(___fldiv@a+3)^0,w,c
  3866   001246  6E21               	movwf	___fldiv@aexp^0,c
  3867   001248  AE0F               	btfss	(___fldiv@a+2)^0,7,c
  3868   00124A  EF29  F009         	goto	u1101
  3869   00124E  EF2B  F009         	goto	u1100
  3870   001252                     u1101:
  3871   001252  EF2C  F009         	goto	l2374
  3872   001256                     u1100:
  3873   001256  8021               	bsf	___fldiv@aexp^0,0,c
  3874   001258                     l2374:
  3875   001258  5021               	movf	___fldiv@aexp^0,w,c
  3876   00125A  B4D8               	btfsc	status,2,c
  3877   00125C  EF32  F009         	goto	u1111
  3878   001260  EF34  F009         	goto	u1110
  3879   001264                     u1111:
  3880   001264  EF49  F009         	goto	l2384
  3881   001268                     u1110:
  3882   001268  2821               	incf	___fldiv@aexp^0,w,c
  3883   00126A  A4D8               	btfss	status,2,c
  3884   00126C  EF3A  F009         	goto	u1121
  3885   001270  EF3C  F009         	goto	u1120
  3886   001274                     u1121:
  3887   001274  EF44  F009         	goto	l2380
  3888   001278                     u1120:
  3889   001278  0E00               	movlw	0
  3890   00127A  6E0D               	movwf	___fldiv@a^0,c
  3891   00127C  0E00               	movlw	0
  3892   00127E  6E0E               	movwf	(___fldiv@a+1)^0,c
  3893   001280  0E00               	movlw	0
  3894   001282  6E0F               	movwf	(___fldiv@a+2)^0,c
  3895   001284  0E00               	movlw	0
  3896   001286  6E10               	movwf	(___fldiv@a+3)^0,c
  3897   001288                     l2380:
  3898   001288  8E0F               	bsf	(___fldiv@a+2)^0,7,c
  3899   00128A  0E00               	movlw	0
  3900   00128C  6E10               	movwf	(___fldiv@a+3)^0,c
  3901   00128E  EF51  F009         	goto	l2386
  3902   001292                     l2384:
  3903   001292  0E00               	movlw	0
  3904   001294  6E0D               	movwf	___fldiv@a^0,c
  3905   001296  0E00               	movlw	0
  3906   001298  6E0E               	movwf	(___fldiv@a+1)^0,c
  3907   00129A  0E00               	movlw	0
  3908   00129C  6E0F               	movwf	(___fldiv@a+2)^0,c
  3909   00129E  0E00               	movlw	0
  3910   0012A0  6E10               	movwf	(___fldiv@a+3)^0,c
  3911   0012A2                     l2386:
  3912   0012A2  500D               	movf	___fldiv@a^0,w,c
  3913   0012A4  100E               	iorwf	(___fldiv@a+1)^0,w,c
  3914   0012A6  100F               	iorwf	(___fldiv@a+2)^0,w,c
  3915   0012A8  1010               	iorwf	(___fldiv@a+3)^0,w,c
  3916   0012AA  A4D8               	btfss	status,2,c
  3917   0012AC  EF5A  F009         	goto	u1131
  3918   0012B0  EF5C  F009         	goto	u1130
  3919   0012B4                     u1131:
  3920   0012B4  EF74  F009         	goto	l2398
  3921   0012B8                     u1130:
  3922   0012B8  0E00               	movlw	0
  3923   0012BA  6E09               	movwf	___fldiv@b^0,c
  3924   0012BC  0E00               	movlw	0
  3925   0012BE  6E0A               	movwf	(___fldiv@b+1)^0,c
  3926   0012C0  0E00               	movlw	0
  3927   0012C2  6E0B               	movwf	(___fldiv@b+2)^0,c
  3928   0012C4  0E00               	movlw	0
  3929   0012C6  6E0C               	movwf	(___fldiv@b+3)^0,c
  3930   0012C8  0E80               	movlw	128
  3931   0012CA  120B               	iorwf	(___fldiv@b+2)^0,f,c
  3932   0012CC  0E7F               	movlw	127
  3933   0012CE  120C               	iorwf	(___fldiv@b+3)^0,f,c
  3934   0012D0                     l2392:
  3935   0012D0  5019               	movf	___fldiv@sign^0,w,c
  3936   0012D2  120C               	iorwf	(___fldiv@b+3)^0,f,c
  3937   0012D4  C009  F009         	movff	___fldiv@b,?___fldiv
  3938   0012D8  C00A  F00A         	movff	___fldiv@b+1,?___fldiv+1
  3939   0012DC  C00B  F00B         	movff	___fldiv@b+2,?___fldiv+2
  3940   0012E0  C00C  F00C         	movff	___fldiv@b+3,?___fldiv+3
  3941   0012E4  EFB7  F00A         	goto	l1186
  3942   0012E8                     l2398:
  3943   0012E8  5020               	movf	___fldiv@bexp^0,w,c
  3944   0012EA  A4D8               	btfss	status,2,c
  3945   0012EC  EF7A  F009         	goto	u1141
  3946   0012F0  EF7C  F009         	goto	u1140
  3947   0012F4                     u1141:
  3948   0012F4  EF86  F009         	goto	l2406
  3949   0012F8                     u1140:
  3950   0012F8  0E00               	movlw	0
  3951   0012FA  6E09               	movwf	?___fldiv^0,c
  3952   0012FC  0E00               	movlw	0
  3953   0012FE  6E0A               	movwf	(?___fldiv+1)^0,c
  3954   001300  0E00               	movlw	0
  3955   001302  6E0B               	movwf	(?___fldiv+2)^0,c
  3956   001304  0E00               	movlw	0
  3957   001306  6E0C               	movwf	(?___fldiv+3)^0,c
  3958   001308  EFB7  F00A         	goto	l1186
  3959   00130C                     l2406:
  3960   00130C  5021               	movf	___fldiv@aexp^0,w,c
  3961   00130E  C020  F011         	movff	___fldiv@bexp,??___fldiv
  3962   001312  6A12               	clrf	(??___fldiv+1)^0,c
  3963   001314  5E11               	subwf	??___fldiv^0,f,c
  3964   001316  0E00               	movlw	0
  3965   001318  5A12               	subwfb	(??___fldiv+1)^0,f,c
  3966   00131A  0E7F               	movlw	127
  3967   00131C  2411               	addwf	??___fldiv^0,w,c
  3968   00131E  6E1A               	movwf	___fldiv@new_exp^0,c
  3969   001320  0E00               	movlw	0
  3970   001322  2012               	addwfc	(??___fldiv+1)^0,w,c
  3971   001324  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  3972   001326  C009  F015         	movff	___fldiv@b,___fldiv@rem
  3973   00132A  C00A  F016         	movff	___fldiv@b+1,___fldiv@rem+1
  3974   00132E  C00B  F017         	movff	___fldiv@b+2,___fldiv@rem+2
  3975   001332  C00C  F018         	movff	___fldiv@b+3,___fldiv@rem+3
  3976   001336  0E00               	movlw	0
  3977   001338  6E09               	movwf	___fldiv@b^0,c
  3978   00133A  0E00               	movlw	0
  3979   00133C  6E0A               	movwf	(___fldiv@b+1)^0,c
  3980   00133E  0E00               	movlw	0
  3981   001340  6E0B               	movwf	(___fldiv@b+2)^0,c
  3982   001342  0E00               	movlw	0
  3983   001344  6E0C               	movwf	(___fldiv@b+3)^0,c
  3984   001346  0E00               	movlw	0
  3985   001348  6E1C               	movwf	___fldiv@grs^0,c
  3986   00134A  0E00               	movlw	0
  3987   00134C  6E1D               	movwf	(___fldiv@grs+1)^0,c
  3988   00134E  0E00               	movlw	0
  3989   001350  6E1E               	movwf	(___fldiv@grs+2)^0,c
  3990   001352  0E00               	movlw	0
  3991   001354  6E1F               	movwf	(___fldiv@grs+3)^0,c
  3992   001356  0E00               	movlw	0
  3993   001358  6E21               	movwf	___fldiv@aexp^0,c
  3994   00135A  EFE7  F009         	goto	l1188
  3995   00135E                     l2416:
  3996   00135E  5021               	movf	___fldiv@aexp^0,w,c
  3997   001360  B4D8               	btfsc	status,2,c
  3998   001362  EFB5  F009         	goto	u1151
  3999   001366  EFB7  F009         	goto	u1150
  4000   00136A                     u1151:
  4001   00136A  EFCE  F009         	goto	l2424
  4002   00136E                     u1150:
  4003   00136E  90D8               	bcf	status,0,c
  4004   001370  3615               	rlcf	___fldiv@rem^0,f,c
  4005   001372  3616               	rlcf	(___fldiv@rem+1)^0,f,c
  4006   001374  3617               	rlcf	(___fldiv@rem+2)^0,f,c
  4007   001376  3618               	rlcf	(___fldiv@rem+3)^0,f,c
  4008   001378  90D8               	bcf	status,0,c
  4009   00137A  3609               	rlcf	___fldiv@b^0,f,c
  4010   00137C  360A               	rlcf	(___fldiv@b+1)^0,f,c
  4011   00137E  360B               	rlcf	(___fldiv@b+2)^0,f,c
  4012   001380  360C               	rlcf	(___fldiv@b+3)^0,f,c
  4013   001382  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4014   001384  EFC6  F009         	goto	u1161
  4015   001388  EFC8  F009         	goto	u1160
  4016   00138C                     u1161:
  4017   00138C  EFC9  F009         	goto	l1191
  4018   001390                     u1160:
  4019   001390  8009               	bsf	___fldiv@b^0,0,c
  4020   001392                     l1191:
  4021   001392  90D8               	bcf	status,0,c
  4022   001394  361C               	rlcf	___fldiv@grs^0,f,c
  4023   001396  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  4024   001398  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  4025   00139A  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  4026   00139C                     l2424:
  4027   00139C  500D               	movf	___fldiv@a^0,w,c
  4028   00139E  5C15               	subwf	___fldiv@rem^0,w,c
  4029   0013A0  500E               	movf	(___fldiv@a+1)^0,w,c
  4030   0013A2  5816               	subwfb	(___fldiv@rem+1)^0,w,c
  4031   0013A4  500F               	movf	(___fldiv@a+2)^0,w,c
  4032   0013A6  5817               	subwfb	(___fldiv@rem+2)^0,w,c
  4033   0013A8  5010               	movf	(___fldiv@a+3)^0,w,c
  4034   0013AA  5818               	subwfb	(___fldiv@rem+3)^0,w,c
  4035   0013AC  A0D8               	btfss	status,0,c
  4036   0013AE  EFDB  F009         	goto	u1171
  4037   0013B2  EFDD  F009         	goto	u1170
  4038   0013B6                     u1171:
  4039   0013B6  EFE6  F009         	goto	l2430
  4040   0013BA                     u1170:
  4041   0013BA  8C1F               	bsf	(___fldiv@grs+3)^0,6,c
  4042   0013BC  500D               	movf	___fldiv@a^0,w,c
  4043   0013BE  5E15               	subwf	___fldiv@rem^0,f,c
  4044   0013C0  500E               	movf	(___fldiv@a+1)^0,w,c
  4045   0013C2  5A16               	subwfb	(___fldiv@rem+1)^0,f,c
  4046   0013C4  500F               	movf	(___fldiv@a+2)^0,w,c
  4047   0013C6  5A17               	subwfb	(___fldiv@rem+2)^0,f,c
  4048   0013C8  5010               	movf	(___fldiv@a+3)^0,w,c
  4049   0013CA  5A18               	subwfb	(___fldiv@rem+3)^0,f,c
  4050   0013CC                     l2430:
  4051   0013CC  2A21               	incf	___fldiv@aexp^0,f,c
  4052   0013CE                     l1188:
  4053   0013CE  0E19               	movlw	25
  4054   0013D0  6421               	cpfsgt	___fldiv@aexp^0,c
  4055   0013D2  EFED  F009         	goto	u1181
  4056   0013D6  EFEF  F009         	goto	u1180
  4057   0013DA                     u1181:
  4058   0013DA  EFAF  F009         	goto	l2416
  4059   0013DE                     u1180:
  4060   0013DE  5015               	movf	___fldiv@rem^0,w,c
  4061   0013E0  1016               	iorwf	(___fldiv@rem+1)^0,w,c
  4062   0013E2  1017               	iorwf	(___fldiv@rem+2)^0,w,c
  4063   0013E4  1018               	iorwf	(___fldiv@rem+3)^0,w,c
  4064   0013E6  B4D8               	btfsc	status,2,c
  4065   0013E8  EFF8  F009         	goto	u1191
  4066   0013EC  EFFA  F009         	goto	u1190
  4067   0013F0                     u1191:
  4068   0013F0  EF12  F00A         	goto	l2442
  4069   0013F4                     u1190:
  4070   0013F4  801C               	bsf	___fldiv@grs^0,0,c
  4071   0013F6  EF12  F00A         	goto	l2442
  4072   0013FA                     l2436:
  4073   0013FA  90D8               	bcf	status,0,c
  4074   0013FC  3609               	rlcf	___fldiv@b^0,f,c
  4075   0013FE  360A               	rlcf	(___fldiv@b+1)^0,f,c
  4076   001400  360B               	rlcf	(___fldiv@b+2)^0,f,c
  4077   001402  360C               	rlcf	(___fldiv@b+3)^0,f,c
  4078   001404  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4079   001406  EF07  F00A         	goto	u1201
  4080   00140A  EF09  F00A         	goto	u1200
  4081   00140E                     u1201:
  4082   00140E  EF0A  F00A         	goto	l1197
  4083   001412                     u1200:
  4084   001412  8009               	bsf	___fldiv@b^0,0,c
  4085   001414                     l1197:
  4086   001414  90D8               	bcf	status,0,c
  4087   001416  361C               	rlcf	___fldiv@grs^0,f,c
  4088   001418  361D               	rlcf	(___fldiv@grs+1)^0,f,c
  4089   00141A  361E               	rlcf	(___fldiv@grs+2)^0,f,c
  4090   00141C  361F               	rlcf	(___fldiv@grs+3)^0,f,c
  4091   00141E  061A               	decf	___fldiv@new_exp^0,f,c
  4092   001420  A0D8               	btfss	status,0,c
  4093   001422  061B               	decf	(___fldiv@new_exp+1)^0,f,c
  4094   001424                     l2442:
  4095   001424  AE0B               	btfss	(___fldiv@b+2)^0,7,c
  4096   001426  EF17  F00A         	goto	u1211
  4097   00142A  EF19  F00A         	goto	u1210
  4098   00142E                     u1211:
  4099   00142E  EFFD  F009         	goto	l2436
  4100   001432                     u1210:
  4101   001432  0E00               	movlw	0
  4102   001434  6E21               	movwf	___fldiv@aexp^0,c
  4103   001436  AE1F               	btfss	(___fldiv@grs+3)^0,7,c
  4104   001438  EF20  F00A         	goto	u1221
  4105   00143C  EF22  F00A         	goto	u1220
  4106   001440                     u1221:
  4107   001440  EF46  F00A         	goto	l1199
  4108   001444                     u1220:
  4109   001444  0EFF               	movlw	255
  4110   001446  141C               	andwf	___fldiv@grs^0,w,c
  4111   001448  6E11               	movwf	??___fldiv^0,c
  4112   00144A  0EFF               	movlw	255
  4113   00144C  141D               	andwf	(___fldiv@grs+1)^0,w,c
  4114   00144E  6E12               	movwf	(??___fldiv+1)^0,c
  4115   001450  0EFF               	movlw	255
  4116   001452  141E               	andwf	(___fldiv@grs+2)^0,w,c
  4117   001454  6E13               	movwf	(??___fldiv+2)^0,c
  4118   001456  0E7F               	movlw	127
  4119   001458  141F               	andwf	(___fldiv@grs+3)^0,w,c
  4120   00145A  6E14               	movwf	(??___fldiv+3)^0,c
  4121   00145C  5011               	movf	??___fldiv^0,w,c
  4122   00145E  1012               	iorwf	(??___fldiv+1)^0,w,c
  4123   001460  1013               	iorwf	(??___fldiv+2)^0,w,c
  4124   001462  1014               	iorwf	(??___fldiv+3)^0,w,c
  4125   001464  B4D8               	btfsc	status,2,c
  4126   001466  EF37  F00A         	goto	u1231
  4127   00146A  EF39  F00A         	goto	u1230
  4128   00146E                     u1231:
  4129   00146E  EF3D  F00A         	goto	l1200
  4130   001472                     u1230:
  4131   001472                     l2450:
  4132   001472  0E01               	movlw	1
  4133   001474  6E21               	movwf	___fldiv@aexp^0,c
  4134   001476  EF46  F00A         	goto	l1199
  4135   00147A                     l1200:
  4136   00147A  A009               	btfss	___fldiv@b^0,0,c
  4137   00147C  EF42  F00A         	goto	u1241
  4138   001480  EF44  F00A         	goto	u1240
  4139   001484                     u1241:
  4140   001484  EF46  F00A         	goto	l1199
  4141   001488                     u1240:
  4142   001488  EF39  F00A         	goto	l2450
  4143   00148C                     l1199:
  4144   00148C  5021               	movf	___fldiv@aexp^0,w,c
  4145   00148E  B4D8               	btfsc	status,2,c
  4146   001490  EF4C  F00A         	goto	u1251
  4147   001494  EF4E  F00A         	goto	u1250
  4148   001498                     u1251:
  4149   001498  EF72  F00A         	goto	l2462
  4150   00149C                     u1250:
  4151   00149C  0E01               	movlw	1
  4152   00149E  2609               	addwf	___fldiv@b^0,f,c
  4153   0014A0  0E00               	movlw	0
  4154   0014A2  220A               	addwfc	(___fldiv@b+1)^0,f,c
  4155   0014A4  220B               	addwfc	(___fldiv@b+2)^0,f,c
  4156   0014A6  220C               	addwfc	(___fldiv@b+3)^0,f,c
  4157   0014A8  A00C               	btfss	(___fldiv@b+3)^0,0,c
  4158   0014AA  EF59  F00A         	goto	u1261
  4159   0014AE  EF5B  F00A         	goto	u1260
  4160   0014B2                     u1261:
  4161   0014B2  EF72  F00A         	goto	l2462
  4162   0014B6                     u1260:
  4163   0014B6  C009  F011         	movff	___fldiv@b,??___fldiv
  4164   0014BA  C00A  F012         	movff	___fldiv@b+1,??___fldiv+1
  4165   0014BE  C00B  F013         	movff	___fldiv@b+2,??___fldiv+2
  4166   0014C2  C00C  F014         	movff	___fldiv@b+3,??___fldiv+3
  4167   0014C6  3414               	rlcf	(??___fldiv+3)^0,w,c
  4168   0014C8  3214               	rrcf	(??___fldiv+3)^0,f,c
  4169   0014CA  3213               	rrcf	(??___fldiv+2)^0,f,c
  4170   0014CC  3212               	rrcf	(??___fldiv+1)^0,f,c
  4171   0014CE  3211               	rrcf	??___fldiv^0,f,c
  4172   0014D0  C011  F009         	movff	??___fldiv,___fldiv@b
  4173   0014D4  C012  F00A         	movff	??___fldiv+1,___fldiv@b+1
  4174   0014D8  C013  F00B         	movff	??___fldiv+2,___fldiv@b+2
  4175   0014DC  C014  F00C         	movff	??___fldiv+3,___fldiv@b+3
  4176   0014E0  4A1A               	infsnz	___fldiv@new_exp^0,f,c
  4177   0014E2  2A1B               	incf	(___fldiv@new_exp+1)^0,f,c
  4178   0014E4                     l2462:
  4179   0014E4  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4180   0014E6  EF7D  F00A         	goto	u1271
  4181   0014EA  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  4182   0014EC  E108               	bnz	u1270
  4183   0014EE  281A               	incf	___fldiv@new_exp^0,w,c
  4184   0014F0  A0D8               	btfss	status,0,c
  4185   0014F2  EF7D  F00A         	goto	u1271
  4186   0014F6  EF7F  F00A         	goto	u1270
  4187   0014FA                     u1271:
  4188   0014FA  EF8A  F00A         	goto	l2466
  4189   0014FE                     u1270:
  4190   0014FE  0E00               	movlw	0
  4191   001500  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  4192   001502  681A               	setf	___fldiv@new_exp^0,c
  4193   001504  0E00               	movlw	0
  4194   001506  6E09               	movwf	___fldiv@b^0,c
  4195   001508  0E00               	movlw	0
  4196   00150A  6E0A               	movwf	(___fldiv@b+1)^0,c
  4197   00150C  0E00               	movlw	0
  4198   00150E  6E0B               	movwf	(___fldiv@b+2)^0,c
  4199   001510  0E00               	movlw	0
  4200   001512  6E0C               	movwf	(___fldiv@b+3)^0,c
  4201   001514                     l2466:
  4202   001514  BE1B               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4203   001516  EF97  F00A         	goto	u1280
  4204   00151A  501B               	movf	(___fldiv@new_exp+1)^0,w,c
  4205   00151C  E106               	bnz	u1281
  4206   00151E  041A               	decf	___fldiv@new_exp^0,w,c
  4207   001520  B0D8               	btfsc	status,0,c
  4208   001522  EF95  F00A         	goto	u1281
  4209   001526  EF97  F00A         	goto	u1280
  4210   00152A                     u1281:
  4211   00152A  EFA5  F00A         	goto	l2470
  4212   00152E                     u1280:
  4213   00152E  0E00               	movlw	0
  4214   001530  6E1B               	movwf	(___fldiv@new_exp+1)^0,c
  4215   001532  0E00               	movlw	0
  4216   001534  6E1A               	movwf	___fldiv@new_exp^0,c
  4217   001536  0E00               	movlw	0
  4218   001538  6E09               	movwf	___fldiv@b^0,c
  4219   00153A  0E00               	movlw	0
  4220   00153C  6E0A               	movwf	(___fldiv@b+1)^0,c
  4221   00153E  0E00               	movlw	0
  4222   001540  6E0B               	movwf	(___fldiv@b+2)^0,c
  4223   001542  0E00               	movlw	0
  4224   001544  6E0C               	movwf	(___fldiv@b+3)^0,c
  4225   001546  0E00               	movlw	0
  4226   001548  6E19               	movwf	___fldiv@sign^0,c
  4227   00154A                     l2470:
  4228   00154A  C01A  F020         	movff	___fldiv@new_exp,___fldiv@bexp
  4229   00154E  A020               	btfss	___fldiv@bexp^0,0,c
  4230   001550  EFAC  F00A         	goto	u1291
  4231   001554  EFAE  F00A         	goto	u1290
  4232   001558                     u1291:
  4233   001558  EFB1  F00A         	goto	l2476
  4234   00155C                     u1290:
  4235   00155C  8E0B               	bsf	(___fldiv@b+2)^0,7,c
  4236   00155E  EFB2  F00A         	goto	l2478
  4237   001562                     l2476:
  4238   001562  9E0B               	bcf	(___fldiv@b+2)^0,7,c
  4239   001564                     l2478:
  4240   001564  90D8               	bcf	status,0,c
  4241   001566  3020               	rrcf	___fldiv@bexp^0,w,c
  4242   001568  6E0C               	movwf	(___fldiv@b+3)^0,c
  4243   00156A  EF68  F009         	goto	l2392
  4244   00156E                     l1186:
  4245   00156E  0012               	return		;funcret
  4246   001570                     __end_of___fldiv:
  4247                           	callstack 0
  4248                           
  4249 ;; *************** function _color_click_init *****************
  4250 ;; Defined at:
  4251 ;;		line 11 in file "color.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		wreg, status,2, status,0, cstack
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4267 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4268 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4269 ;;Total ram usage:        1 bytes
  4270 ;; Hardware stack levels used: 1
  4271 ;; Hardware stack levels required when called: 9
  4272 ;; This function calls:
  4273 ;;		_I2C_2_Master_Init
  4274 ;;		_color_writetoaddr
  4275 ;; This function is called by:
  4276 ;;		_main
  4277 ;; This function uses a non-reentrant model
  4278 ;;
  4279                           
  4280                           	psect	text25
  4281   002228                     __ptext25:
  4282                           	callstack 0
  4283   002228                     _color_click_init:
  4284                           	callstack 21
  4285   002228                     
  4286                           ;color.c: 14:     I2C_2_Master_Init();
  4287   002228  EC60  F011         	call	_I2C_2_Master_Init	;wreg free
  4288   00222C                     
  4289                           ;color.c: 17:   color_writetoaddr(0x00, 0x01);
  4290   00222C  0E01               	movlw	1
  4291   00222E  6E0B               	movwf	color_writetoaddr@value^0,c
  4292   002230  0E00               	movlw	0
  4293   002232  ECDA  F011         	call	_color_writetoaddr
  4294   002236                     
  4295                           ;color.c: 18:     _delay((unsigned long)((3)*(64000000/4000.0)));
  4296   002236  0E3F               	movlw	63
  4297   002238  6E0D               	movwf	??_color_click_init^0,c
  4298   00223A  0E55               	movlw	85
  4299   00223C                     u1907:
  4300   00223C  2EE8               	decfsz	wreg,f,c
  4301   00223E  D7FE               	bra	u1907
  4302   002240  2E0D               	decfsz	??_color_click_init^0,f,c
  4303   002242  D7FC               	bra	u1907
  4304   002244  F000               	nop	
  4305   002246                     
  4306                           ;color.c: 21:  color_writetoaddr(0x00, 0x03);
  4307   002246  0E03               	movlw	3
  4308   002248  6E0B               	movwf	color_writetoaddr@value^0,c
  4309   00224A  0E00               	movlw	0
  4310   00224C  ECDA  F011         	call	_color_writetoaddr
  4311   002250                     
  4312                           ;color.c: 24:  color_writetoaddr(0x01, 0xD5);
  4313   002250  0ED5               	movlw	213
  4314   002252  6E0B               	movwf	color_writetoaddr@value^0,c
  4315   002254  0E01               	movlw	1
  4316   002256  ECDA  F011         	call	_color_writetoaddr
  4317   00225A  0012               	return		;funcret
  4318   00225C                     __end_of_color_click_init:
  4319                           	callstack 0
  4320                           
  4321 ;; *************** function _I2C_2_Master_Init *****************
  4322 ;; Defined at:
  4323 ;;		line 4 in file "i2c.c"
  4324 ;; Parameters:    Size  Location     Type
  4325 ;;		None
  4326 ;; Auto vars:     Size  Location     Type
  4327 ;;		None
  4328 ;; Return value:  Size  Location     Type
  4329 ;;                  1    wreg      void 
  4330 ;; Registers used:
  4331 ;;		wreg, status,2
  4332 ;; Tracked objects:
  4333 ;;		On entry : 0/0
  4334 ;;		On exit  : 0/0
  4335 ;;		Unchanged: 0/0
  4336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4341 ;;Total ram usage:        0 bytes
  4342 ;; Hardware stack levels used: 1
  4343 ;; Hardware stack levels required when called: 6
  4344 ;; This function calls:
  4345 ;;		Nothing
  4346 ;; This function is called by:
  4347 ;;		_color_click_init
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           
  4351                           	psect	text26
  4352   0022C0                     __ptext26:
  4353                           	callstack 0
  4354   0022C0                     _I2C_2_Master_Init:
  4355                           	callstack 23
  4356   0022C0                     
  4357                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  4358   0022C0  010E               	movlb	14	; () banked
  4359   0022C2  51D9               	movf	217,w,b	;volatile
  4360   0022C4  0BF0               	andlw	-16
  4361   0022C6  0908               	iorlw	8
  4362   0022C8  6FD9               	movwf	217,b	;volatile
  4363   0022CA                     
  4364                           ; BSR set to: 14
  4365                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  4366   0022CA  8BD9               	bsf	217,5,b	;volatile
  4367                           
  4368                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  4369   0022CC  0E9F               	movlw	159
  4370   0022CE  6FD6               	movwf	214,b	;volatile
  4371   0022D0                     
  4372                           ; BSR set to: 14
  4373                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  4374   0022D0  8A84               	bsf	132,5,c	;volatile
  4375   0022D2                     
  4376                           ; BSR set to: 14
  4377                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  4378   0022D2  8C84               	bsf	132,6,c	;volatile
  4379   0022D4                     
  4380                           ; BSR set to: 14
  4381                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  4382   0022D4  9BA7               	bcf	167,5,b	;volatile
  4383   0022D6                     
  4384                           ; BSR set to: 14
  4385                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  4386   0022D6  9DA7               	bcf	167,6,b	;volatile
  4387                           
  4388                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  4389   0022D8  0E1D               	movlw	29
  4390   0022DA  6F1D               	movwf	29,b	;volatile
  4391                           
  4392                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  4393   0022DC  0E1E               	movlw	30
  4394   0022DE  6F1C               	movwf	28,b	;volatile
  4395                           
  4396                           ;i2c.c: 18:   RD5PPS=0x1C;
  4397   0022E0  0E1C               	movlw	28
  4398   0022E2  6F6F               	movwf	111,b	;volatile
  4399                           
  4400                           ;i2c.c: 19:   RD6PPS=0x1B;
  4401   0022E4  0E1B               	movlw	27
  4402   0022E6  6F70               	movwf	112,b	;volatile
  4403   0022E8                     
  4404                           ; BSR set to: 14
  4405   0022E8  0012               	return		;funcret
  4406   0022EA                     __end_of_I2C_2_Master_Init:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _Interrupts_init *****************
  4410 ;; Defined at:
  4411 ;;		line 10 in file "interrupts.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		None
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;Total ram usage:        0 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 6
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           	psect	text27
  4440   00243E                     __ptext27:
  4441                           	callstack 0
  4442   00243E                     _Interrupts_init:
  4443                           	callstack 24
  4444   00243E                     
  4445                           ;interrupts.c: 15:     TRISBbits.TRISB0=1;
  4446   00243E  8082               	bsf	130,0,c	;volatile
  4447                           
  4448                           ;interrupts.c: 17:     ANSELBbits.ANSELB0=0;
  4449   002440  010E               	movlb	14	; () banked
  4450   002442  919A               	bcf	154,0,b	;volatile
  4451                           
  4452                           ;interrupts.c: 18:     PIR0bits.INT0IF = 0;
  4453   002444  9133               	bcf	51,0,b	;volatile
  4454                           
  4455                           ;interrupts.c: 19:     PIE0bits.INT0IE = 1;
  4456   002446  8129               	bsf	41,0,b	;volatile
  4457                           
  4458                           ;interrupts.c: 20:     IPR0bits.INT0IP = 1;
  4459   002448  811F               	bsf	31,0,b	;volatile
  4460                           
  4461                           ;interrupts.c: 21:     INTCONbits.INT0EDG=0;
  4462   00244A  90F2               	bcf	242,0,c	;volatile
  4463                           
  4464                           ;interrupts.c: 23:     INTCONbits.IPEN=1;
  4465   00244C  8AF2               	bsf	242,5,c	;volatile
  4466                           
  4467                           ;interrupts.c: 24:     INTCONbits.PEIE=1;
  4468   00244E  8CF2               	bsf	242,6,c	;volatile
  4469                           
  4470                           ;interrupts.c: 25:     INTCONbits.GIE=1;
  4471   002450  8EF2               	bsf	242,7,c	;volatile
  4472   002452                     
  4473                           ; BSR set to: 14
  4474   002452  0012               	return		;funcret
  4475   002454                     __end_of_Interrupts_init:
  4476                           	callstack 0
  4477                           
  4478 ;; *************** function _Color_Interrupts_threshold *****************
  4479 ;; Defined at:
  4480 ;;		line 38 in file "interrupts.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  upperThresho    2   12[COMRAM] unsigned int 
  4483 ;;  lowerThresho    2   14[COMRAM] unsigned int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;		None
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4495 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4499 ;;Total ram usage:        4 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 9
  4502 ;; This function calls:
  4503 ;;		_color_writetoaddr
  4504 ;; This function is called by:
  4505 ;;		_main
  4506 ;; This function uses a non-reentrant model
  4507 ;;
  4508                           
  4509                           	psect	text28
  4510   0022EA                     __ptext28:
  4511                           	callstack 0
  4512   0022EA                     _Color_Interrupts_threshold:
  4513                           	callstack 21
  4514   0022EA                     
  4515                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  4516   0022EA  C00F  F00B         	movff	Color_Interrupts_threshold@lowerThreshold,color_writetoaddr@value
  4517   0022EE  0E04               	movlw	4
  4518   0022F0  ECDA  F011         	call	_color_writetoaddr
  4519                           
  4520                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  4521   0022F4  5010               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  4522   0022F6  6E0B               	movwf	color_writetoaddr@value^0,c
  4523   0022F8  0E05               	movlw	5
  4524   0022FA  ECDA  F011         	call	_color_writetoaddr
  4525                           
  4526                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  4527   0022FE  C00D  F00B         	movff	Color_Interrupts_threshold@upperThreshold,color_writetoaddr@value
  4528   002302  0E06               	movlw	6
  4529   002304  ECDA  F011         	call	_color_writetoaddr
  4530                           
  4531                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  4532   002308  500E               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  4533   00230A  6E0B               	movwf	color_writetoaddr@value^0,c
  4534   00230C  0E07               	movlw	7
  4535   00230E  ECDA  F011         	call	_color_writetoaddr
  4536   002312  0012               	return		;funcret
  4537   002314                     __end_of_Color_Interrupts_threshold:
  4538                           	callstack 0
  4539                           
  4540 ;; *************** function _Color_Interrupts_init *****************
  4541 ;; Defined at:
  4542 ;;		line 29 in file "interrupts.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;		None
  4545 ;; Auto vars:     Size  Location     Type
  4546 ;;		None
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  1    wreg      void 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4558 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4560 ;;Total ram usage:        1 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 9
  4563 ;; This function calls:
  4564 ;;		_color_writetoaddr
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a non-reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text29
  4571   0023F4                     __ptext29:
  4572                           	callstack 0
  4573   0023F4                     _Color_Interrupts_init:
  4574                           	callstack 21
  4575   0023F4                     
  4576                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  4577   0023F4  0E13               	movlw	19
  4578   0023F6  6E0B               	movwf	color_writetoaddr@value^0,c
  4579   0023F8  0E00               	movlw	0
  4580   0023FA  ECDA  F011         	call	_color_writetoaddr
  4581   0023FE                     
  4582                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  4583   0023FE  0ED0               	movlw	208
  4584   002400  6E0D               	movwf	??_Color_Interrupts_init^0,c
  4585   002402  0ECA               	movlw	202
  4586   002404                     u1917:
  4587   002404  2EE8               	decfsz	wreg,f,c
  4588   002406  D7FE               	bra	u1917
  4589   002408  2E0D               	decfsz	??_Color_Interrupts_init^0,f,c
  4590   00240A  D7FC               	bra	u1917
  4591   00240C  0012               	return		;funcret
  4592   00240E                     __end_of_Color_Interrupts_init:
  4593                           	callstack 0
  4594                           
  4595 ;; *************** function _color_writetoaddr *****************
  4596 ;; Defined at:
  4597 ;;		line 27 in file "color.c"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;  address         1    wreg     unsigned char 
  4600 ;;  value           1   10[COMRAM] unsigned char 
  4601 ;; Auto vars:     Size  Location     Type
  4602 ;;  address         1   11[COMRAM] unsigned char 
  4603 ;; Return value:  Size  Location     Type
  4604 ;;                  1    wreg      void 
  4605 ;; Registers used:
  4606 ;;		wreg, status,2, status,0, cstack
  4607 ;; Tracked objects:
  4608 ;;		On entry : 0/0
  4609 ;;		On exit  : 0/0
  4610 ;;		Unchanged: 0/0
  4611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4612 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;Total ram usage:        2 bytes
  4617 ;; Hardware stack levels used: 1
  4618 ;; Hardware stack levels required when called: 8
  4619 ;; This function calls:
  4620 ;;		_I2C_2_Master_Start
  4621 ;;		_I2C_2_Master_Stop
  4622 ;;		_I2C_2_Master_Write
  4623 ;; This function is called by:
  4624 ;;		_color_click_init
  4625 ;;		_Color_Interrupts_init
  4626 ;;		_Color_Interrupts_threshold
  4627 ;;		_persistence_register
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           	psect	text30
  4632   0023B4                     __ptext30:
  4633                           	callstack 0
  4634   0023B4                     _color_writetoaddr:
  4635                           	callstack 21
  4636                           
  4637                           ;incstack = 0
  4638                           ;color_writetoaddr@address stored from wreg
  4639   0023B4  6E0C               	movwf	color_writetoaddr@address^0,c
  4640   0023B6                     
  4641                           ;color.c: 28:     I2C_2_Master_Start();
  4642   0023B6  EC4C  F012         	call	_I2C_2_Master_Start	;wreg free
  4643                           
  4644                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  4645   0023BA  0E52               	movlw	82
  4646   0023BC  EC30  F012         	call	_I2C_2_Master_Write
  4647                           
  4648                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  4649   0023C0  500C               	movf	color_writetoaddr@address^0,w,c
  4650   0023C2  0980               	iorlw	128
  4651   0023C4  EC30  F012         	call	_I2C_2_Master_Write
  4652                           
  4653                           ;color.c: 31:     I2C_2_Master_Write(value);
  4654   0023C8  500B               	movf	color_writetoaddr@value^0,w,c
  4655   0023CA  EC30  F012         	call	_I2C_2_Master_Write
  4656                           
  4657                           ;color.c: 32:     I2C_2_Master_Stop();
  4658   0023CE  EC47  F012         	call	_I2C_2_Master_Stop	;wreg free
  4659   0023D2  0012               	return		;funcret
  4660   0023D4                     __end_of_color_writetoaddr:
  4661                           	callstack 0
  4662                           
  4663 ;; *************** function _I2C_2_Master_Write *****************
  4664 ;; Defined at:
  4665 ;;		line 45 in file "i2c.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  data_byte       1    wreg     unsigned char 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;  data_byte       1    9[COMRAM] unsigned char 
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg, status,2, status,0, cstack
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4683 ;;Total ram usage:        1 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 7
  4686 ;; This function calls:
  4687 ;;		_I2C_2_Master_Idle
  4688 ;; This function is called by:
  4689 ;;		_color_writetoaddr
  4690 ;;		_color_read_Red
  4691 ;;		_color_read_Green
  4692 ;;		_color_read_Blue
  4693 ;;		_color_read_Clear
  4694 ;; This function uses a non-reentrant model
  4695 ;;
  4696                           
  4697                           	psect	text31
  4698   002460                     __ptext31:
  4699                           	callstack 0
  4700   002460                     _I2C_2_Master_Write:
  4701                           	callstack 21
  4702                           
  4703                           ;incstack = 0
  4704                           ;I2C_2_Master_Write@data_byte stored from wreg
  4705   002460  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  4706   002462                     
  4707                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4708   002462  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4709   002466                     
  4710                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4711   002466  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  4712   00246A  0012               	return		;funcret
  4713   00246C                     __end_of_I2C_2_Master_Write:
  4714                           	callstack 0
  4715                           
  4716 ;; *************** function _I2C_2_Master_Stop *****************
  4717 ;; Defined at:
  4718 ;;		line 39 in file "i2c.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4736 ;;Total ram usage:        0 bytes
  4737 ;; Hardware stack levels used: 1
  4738 ;; Hardware stack levels required when called: 7
  4739 ;; This function calls:
  4740 ;;		_I2C_2_Master_Idle
  4741 ;; This function is called by:
  4742 ;;		_color_writetoaddr
  4743 ;;		_color_read_Red
  4744 ;;		_color_read_Green
  4745 ;;		_color_read_Blue
  4746 ;;		_color_read_Clear
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           	psect	text32
  4751   00248E                     __ptext32:
  4752                           	callstack 0
  4753   00248E                     _I2C_2_Master_Stop:
  4754                           	callstack 21
  4755   00248E                     
  4756                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4757   00248E  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4758   002492                     
  4759                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4760   002492  010E               	movlb	14	; () banked
  4761   002494  85DA               	bsf	218,2,b	;volatile
  4762   002496                     
  4763                           ; BSR set to: 14
  4764   002496  0012               	return		;funcret
  4765   002498                     __end_of_I2C_2_Master_Stop:
  4766                           	callstack 0
  4767                           
  4768 ;; *************** function _I2C_2_Master_Start *****************
  4769 ;; Defined at:
  4770 ;;		line 27 in file "i2c.c"
  4771 ;; Parameters:    Size  Location     Type
  4772 ;;		None
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;		None
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, status,2, status,0, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 0/0
  4781 ;;		On exit  : 0/0
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4788 ;;Total ram usage:        0 bytes
  4789 ;; Hardware stack levels used: 1
  4790 ;; Hardware stack levels required when called: 7
  4791 ;; This function calls:
  4792 ;;		_I2C_2_Master_Idle
  4793 ;; This function is called by:
  4794 ;;		_color_writetoaddr
  4795 ;;		_color_read_Red
  4796 ;;		_color_read_Green
  4797 ;;		_color_read_Blue
  4798 ;;		_color_read_Clear
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text33
  4803   002498                     __ptext33:
  4804                           	callstack 0
  4805   002498                     _I2C_2_Master_Start:
  4806                           	callstack 21
  4807   002498                     
  4808                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4809   002498  EC9F  F011         	call	_I2C_2_Master_Idle	;wreg free
  4810   00249C                     
  4811                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4812   00249C  010E               	movlb	14	; () banked
  4813   00249E  81DA               	bsf	218,0,b	;volatile
  4814   0024A0                     
  4815                           ; BSR set to: 14
  4816   0024A0  0012               	return		;funcret
  4817   0024A2                     __end_of_I2C_2_Master_Start:
  4818                           	callstack 0
  4819                           
  4820 ;; *************** function _I2C_2_Master_Idle *****************
  4821 ;; Defined at:
  4822 ;;		line 22 in file "i2c.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;Total ram usage:        1 bytes
  4841 ;; Hardware stack levels used: 1
  4842 ;; Hardware stack levels required when called: 6
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_I2C_2_Master_Start
  4847 ;;		_I2C_2_Master_RepStart
  4848 ;;		_I2C_2_Master_Stop
  4849 ;;		_I2C_2_Master_Write
  4850 ;;		_I2C_2_Master_Read
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text34
  4855   00233E                     __ptext34:
  4856                           	callstack 0
  4857   00233E                     _I2C_2_Master_Idle:
  4858                           	callstack 21
  4859   00233E                     l186:
  4860   00233E  010E               	movlb	14	; () banked
  4861   002340  B5D8               	btfsc	216,2,b	;volatile
  4862   002342  EFA5  F011         	goto	u981
  4863   002346  EFA7  F011         	goto	u980
  4864   00234A                     u981:
  4865   00234A  EF9F  F011         	goto	l186
  4866   00234E                     u980:
  4867   00234E                     
  4868                           ; BSR set to: 14
  4869   00234E  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  4870   002352  0E1F               	movlw	31
  4871   002354  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  4872   002356  A4D8               	btfss	status,2,c
  4873   002358  EFB0  F011         	goto	u991
  4874   00235C  EFB2  F011         	goto	u990
  4875   002360                     u991:
  4876   002360  EF9F  F011         	goto	l186
  4877   002364                     u990:
  4878   002364                     
  4879                           ; BSR set to: 14
  4880   002364  0012               	return		;funcret
  4881   002366                     __end_of_I2C_2_Master_Idle:
  4882                           	callstack 0
  4883                           
  4884 ;; *************** function _HighISR *****************
  4885 ;; Defined at:
  4886 ;;		line 71 in file "interrupts.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;		None
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1    wreg      void 
  4893 ;; Registers used:
  4894 ;;		wreg, status,2, status,0, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 5
  4907 ;; This function calls:
  4908 ;;		_Color_Interrupts_clear
  4909 ;; This function is called by:
  4910 ;;		Interrupt level 2
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	intcode
  4915   000008                     __pintcode:
  4916                           	callstack 0
  4917   000008                     _HighISR:
  4918                           	callstack 21
  4919                           
  4920                           ; BSR set to: 14
  4921                           ;incstack = 0
  4922   000008  8253               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4923   00000A                     
  4924                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  4925   00000A  010E               	movlb	14	; () banked
  4926   00000C  A133               	btfss	51,0,b	;volatile
  4927   00000E  EF0B  F000         	goto	i2u180_41
  4928   000012  EF0D  F000         	goto	i2u180_40
  4929   000016                     i2u180_41:
  4930   000016  EF17  F000         	goto	i2l465
  4931   00001A                     i2u180_40:
  4932   00001A                     
  4933                           ; BSR set to: 14
  4934                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  4935   00001A  8E7C               	bsf	124,7,c	;volatile
  4936   00001C                     
  4937                           ; BSR set to: 14
  4938                           ;interrupts.c: 76:         interrupt_flag = 1;
  4939   00001C  0E00               	movlw	0
  4940   00001E  0100               	movlb	0	; () banked
  4941   000020  6FB0               	movwf	(_interrupt_flag+1)& (0+255),b
  4942   000022  0E01               	movlw	1
  4943   000024  6FAF               	movwf	_interrupt_flag& (0+255),b
  4944   000026                     
  4945                           ; BSR set to: 0
  4946                           ;interrupts.c: 78:         Color_Interrupts_clear();
  4947   000026  EC47  F011         	call	_Color_Interrupts_clear	;wreg free
  4948   00002A                     
  4949                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  4950   00002A  010E               	movlb	14	; () banked
  4951   00002C  9133               	bcf	51,0,b	;volatile
  4952   00002E                     i2l465:
  4953                           
  4954                           ; BSR set to: 14
  4955   00002E  9253               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4956   000030  0011               	retfie		f
  4957   000032                     __end_of_HighISR:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _Color_Interrupts_clear *****************
  4961 ;; Defined at:
  4962 ;;		line 51 in file "interrupts.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 4
  4983 ;; This function calls:
  4984 ;;		i2_Color_Interrupts_init
  4985 ;;		i2_Color_Interrupts_threshold
  4986 ;;		i2_I2C_2_Master_Start
  4987 ;;		i2_I2C_2_Master_Stop
  4988 ;;		i2_I2C_2_Master_Write
  4989 ;;		i2_persistence_register
  4990 ;; This function is called by:
  4991 ;;		_HighISR
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995                           	psect	text36
  4996   00228E                     __ptext36:
  4997                           	callstack 0
  4998   00228E                     _Color_Interrupts_clear:
  4999                           	callstack 21
  5000   00228E                     
  5001                           ;interrupts.c: 55:     I2C_2_Master_Start();
  5002   00228E  EC56  F012         	call	i2_I2C_2_Master_Start	;wreg free
  5003                           
  5004                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  5005   002292  0E52               	movlw	82
  5006   002294  EC3C  F012         	call	i2_I2C_2_Master_Write
  5007                           
  5008                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  5009   002298  0EE6               	movlw	230
  5010   00229A  EC3C  F012         	call	i2_I2C_2_Master_Write
  5011                           
  5012                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  5013   00229E  EC51  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  5014                           
  5015                           ;interrupts.c: 61:     Color_Interrupts_init();
  5016   0022A2  EC07  F012         	call	i2_Color_Interrupts_init	;wreg free
  5017                           
  5018                           ;interrupts.c: 62:     persistence_register();
  5019   0022A6  EC36  F012         	call	i2_persistence_register	;wreg free
  5020                           
  5021                           ;interrupts.c: 63:     Color_Interrupts_threshold(upperThreshold, lowerThreshold);
  5022   0022AA  C0E3  F005         	movff	_upperThreshold,i2Color_Interrupts_threshold@upperThreshold
  5023   0022AE  C0E4  F006         	movff	_upperThreshold+1,i2Color_Interrupts_threshold@upperThreshold+1
  5024   0022B2  C0AB  F007         	movff	_lowerThreshold,i2Color_Interrupts_threshold@lowerThreshold
  5025   0022B6  C0AC  F008         	movff	_lowerThreshold+1,i2Color_Interrupts_threshold@lowerThreshold+1
  5026   0022BA  EC8A  F011         	call	i2_Color_Interrupts_threshold	;wreg free
  5027   0022BE  0012               	return		;funcret
  5028   0022C0                     __end_of_Color_Interrupts_clear:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function i2_persistence_register *****************
  5032 ;; Defined at:
  5033 ;;		line 46 in file "interrupts.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;		None
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;		None
  5038 ;; Return value:  Size  Location     Type
  5039 ;;                  1    wreg      void 
  5040 ;; Registers used:
  5041 ;;		wreg, status,2, status,0, cstack
  5042 ;; Tracked objects:
  5043 ;;		On entry : 0/0
  5044 ;;		On exit  : 0/0
  5045 ;;		Unchanged: 0/0
  5046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;Total ram usage:        0 bytes
  5052 ;; Hardware stack levels used: 1
  5053 ;; Hardware stack levels required when called: 3
  5054 ;; This function calls:
  5055 ;;		i2_color_writetoaddr
  5056 ;; This function is called by:
  5057 ;;		_Color_Interrupts_clear
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061                           	psect	text37
  5062   00246C                     __ptext37:
  5063                           	callstack 0
  5064   00246C                     i2_persistence_register:
  5065                           	callstack 21
  5066   00246C                     
  5067                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  5068   00246C  0E02               	movlw	2
  5069   00246E  6E03               	movwf	i2color_writetoaddr@value^0,c
  5070   002470  0E0C               	movlw	12
  5071   002472  ECEA  F011         	call	i2_color_writetoaddr
  5072   002476  0012               	return		;funcret
  5073   002478                     __end_ofi2_persistence_register:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function i2_Color_Interrupts_threshold *****************
  5077 ;; Defined at:
  5078 ;;		line 38 in file "interrupts.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  upperThresho    2    4[COMRAM] unsigned int 
  5081 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0, cstack
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5096 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5097 ;;Total ram usage:        4 bytes
  5098 ;; Hardware stack levels used: 1
  5099 ;; Hardware stack levels required when called: 3
  5100 ;; This function calls:
  5101 ;;		i2_color_writetoaddr
  5102 ;; This function is called by:
  5103 ;;		_Color_Interrupts_clear
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           	psect	text38
  5108   002314                     __ptext38:
  5109                           	callstack 0
  5110   002314                     i2_Color_Interrupts_threshold:
  5111                           	callstack 21
  5112   002314                     
  5113                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  5114   002314  C007  F003         	movff	i2Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  5115   002318  0E04               	movlw	4
  5116   00231A  ECEA  F011         	call	i2_color_writetoaddr
  5117                           
  5118                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  5119   00231E  5008               	movf	(i2Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  5120   002320  6E03               	movwf	i2color_writetoaddr@value^0,c
  5121   002322  0E05               	movlw	5
  5122   002324  ECEA  F011         	call	i2_color_writetoaddr
  5123                           
  5124                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  5125   002328  C005  F003         	movff	i2Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  5126   00232C  0E06               	movlw	6
  5127   00232E  ECEA  F011         	call	i2_color_writetoaddr
  5128                           
  5129                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  5130   002332  5006               	movf	(i2Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  5131   002334  6E03               	movwf	i2color_writetoaddr@value^0,c
  5132   002336  0E07               	movlw	7
  5133   002338  ECEA  F011         	call	i2_color_writetoaddr
  5134   00233C  0012               	return		;funcret
  5135   00233E                     __end_ofi2_Color_Interrupts_threshold:
  5136                           	callstack 0
  5137                           
  5138 ;; *************** function i2_Color_Interrupts_init *****************
  5139 ;; Defined at:
  5140 ;;		line 29 in file "interrupts.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5158 ;;Total ram usage:        1 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; Hardware stack levels required when called: 3
  5161 ;; This function calls:
  5162 ;;		i2_color_writetoaddr
  5163 ;; This function is called by:
  5164 ;;		_Color_Interrupts_clear
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text39
  5169   00240E                     __ptext39:
  5170                           	callstack 0
  5171   00240E                     i2_Color_Interrupts_init:
  5172                           	callstack 21
  5173   00240E                     
  5174                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  5175   00240E  0E13               	movlw	19
  5176   002410  6E03               	movwf	i2color_writetoaddr@value^0,c
  5177   002412  0E00               	movlw	0
  5178   002414  ECEA  F011         	call	i2_color_writetoaddr
  5179   002418                     
  5180                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  5181   002418  0ED0               	movlw	208
  5182   00241A  6E05               	movwf	??i2_Color_Interrupts_init^0,c
  5183   00241C  0ECA               	movlw	202
  5184   00241E                     i2u192_47:
  5185   00241E  2EE8               	decfsz	wreg,f,c
  5186   002420  D7FE               	bra	i2u192_47
  5187   002422  2E05               	decfsz	??i2_Color_Interrupts_init^0,f,c
  5188   002424  D7FC               	bra	i2u192_47
  5189   002426  0012               	return		;funcret
  5190   002428                     __end_ofi2_Color_Interrupts_init:
  5191                           	callstack 0
  5192                           
  5193 ;; *************** function i2_color_writetoaddr *****************
  5194 ;; Defined at:
  5195 ;;		line 27 in file "color.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  address         1    wreg     unsigned char 
  5198 ;;  value           1    2[COMRAM] unsigned char 
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;  address         1    3[COMRAM] unsigned char 
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		wreg, status,2, status,0, cstack
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5210 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5213 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5214 ;;Total ram usage:        2 bytes
  5215 ;; Hardware stack levels used: 1
  5216 ;; Hardware stack levels required when called: 2
  5217 ;; This function calls:
  5218 ;;		i2_I2C_2_Master_Start
  5219 ;;		i2_I2C_2_Master_Stop
  5220 ;;		i2_I2C_2_Master_Write
  5221 ;; This function is called by:
  5222 ;;		i2_Color_Interrupts_init
  5223 ;;		i2_Color_Interrupts_threshold
  5224 ;;		i2_persistence_register
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text40
  5229   0023D4                     __ptext40:
  5230                           	callstack 0
  5231   0023D4                     i2_color_writetoaddr:
  5232                           	callstack 21
  5233                           
  5234                           ;incstack = 0
  5235                           ;i2color_writetoaddr@address stored from wreg
  5236   0023D4  6E04               	movwf	i2color_writetoaddr@address^0,c
  5237   0023D6                     
  5238                           ;color.c: 28:     I2C_2_Master_Start();
  5239   0023D6  EC56  F012         	call	i2_I2C_2_Master_Start	;wreg free
  5240                           
  5241                           ;color.c: 29:     I2C_2_Master_Write(0x52 | 0x00);
  5242   0023DA  0E52               	movlw	82
  5243   0023DC  EC3C  F012         	call	i2_I2C_2_Master_Write
  5244                           
  5245                           ;color.c: 30:     I2C_2_Master_Write(0x80 | address);
  5246   0023E0  5004               	movf	i2color_writetoaddr@address^0,w,c
  5247   0023E2  0980               	iorlw	128
  5248   0023E4  EC3C  F012         	call	i2_I2C_2_Master_Write
  5249                           
  5250                           ;color.c: 31:     I2C_2_Master_Write(value);
  5251   0023E8  5003               	movf	i2color_writetoaddr@value^0,w,c
  5252   0023EA  EC3C  F012         	call	i2_I2C_2_Master_Write
  5253                           
  5254                           ;color.c: 32:     I2C_2_Master_Stop();
  5255   0023EE  EC51  F012         	call	i2_I2C_2_Master_Stop	;wreg free
  5256   0023F2  0012               	return		;funcret
  5257   0023F4                     __end_ofi2_color_writetoaddr:
  5258                           	callstack 0
  5259                           
  5260 ;; *************** function i2_I2C_2_Master_Write *****************
  5261 ;; Defined at:
  5262 ;;		line 45 in file "i2c.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  data_byte       1    wreg     unsigned char 
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;  data_byte       1    1[COMRAM] unsigned char 
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		wreg, status,2, status,0, cstack
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5277 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;Total ram usage:        1 bytes
  5281 ;; Hardware stack levels used: 1
  5282 ;; Hardware stack levels required when called: 1
  5283 ;; This function calls:
  5284 ;;		i2_I2C_2_Master_Idle
  5285 ;; This function is called by:
  5286 ;;		_Color_Interrupts_clear
  5287 ;;		i2_color_writetoaddr
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291                           	psect	text41
  5292   002478                     __ptext41:
  5293                           	callstack 0
  5294   002478                     i2_I2C_2_Master_Write:
  5295                           	callstack 21
  5296                           
  5297                           ;incstack = 0
  5298                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  5299   002478  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  5300   00247A                     
  5301                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  5302   00247A  ECB3  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5303   00247E                     
  5304                           ;i2c.c: 48:   SSP2BUF = data_byte;
  5305   00247E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  5306   002482  0012               	return		;funcret
  5307   002484                     __end_ofi2_I2C_2_Master_Write:
  5308                           	callstack 0
  5309                           
  5310 ;; *************** function i2_I2C_2_Master_Stop *****************
  5311 ;; Defined at:
  5312 ;;		line 39 in file "i2c.c"
  5313 ;; Parameters:    Size  Location     Type
  5314 ;;		None
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  1    wreg      void 
  5319 ;; Registers used:
  5320 ;;		wreg, status,2, status,0, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5330 ;;Total ram usage:        0 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 1
  5333 ;; This function calls:
  5334 ;;		i2_I2C_2_Master_Idle
  5335 ;; This function is called by:
  5336 ;;		_Color_Interrupts_clear
  5337 ;;		i2_color_writetoaddr
  5338 ;; This function uses a non-reentrant model
  5339 ;;
  5340                           
  5341                           	psect	text42
  5342   0024A2                     __ptext42:
  5343                           	callstack 0
  5344   0024A2                     i2_I2C_2_Master_Stop:
  5345                           	callstack 21
  5346   0024A2                     
  5347                           ;i2c.c: 41:   I2C_2_Master_Idle();
  5348   0024A2  ECB3  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5349   0024A6                     
  5350                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  5351   0024A6  010E               	movlb	14	; () banked
  5352   0024A8  85DA               	bsf	218,2,b	;volatile
  5353   0024AA                     
  5354                           ; BSR set to: 14
  5355   0024AA  0012               	return		;funcret
  5356   0024AC                     __end_ofi2_I2C_2_Master_Stop:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function i2_I2C_2_Master_Start *****************
  5360 ;; Defined at:
  5361 ;;		line 27 in file "i2c.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;		None
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  1    wreg      void 
  5368 ;; Registers used:
  5369 ;;		wreg, status,2, status,0, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5379 ;;Total ram usage:        0 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 1
  5382 ;; This function calls:
  5383 ;;		i2_I2C_2_Master_Idle
  5384 ;; This function is called by:
  5385 ;;		_Color_Interrupts_clear
  5386 ;;		i2_color_writetoaddr
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text43
  5391   0024AC                     __ptext43:
  5392                           	callstack 0
  5393   0024AC                     i2_I2C_2_Master_Start:
  5394                           	callstack 21
  5395   0024AC                     
  5396                           ;i2c.c: 29:   I2C_2_Master_Idle();
  5397   0024AC  ECB3  F011         	call	i2_I2C_2_Master_Idle	;wreg free
  5398   0024B0                     
  5399                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  5400   0024B0  010E               	movlb	14	; () banked
  5401   0024B2  81DA               	bsf	218,0,b	;volatile
  5402   0024B4                     
  5403                           ; BSR set to: 14
  5404   0024B4  0012               	return		;funcret
  5405   0024B6                     __end_ofi2_I2C_2_Master_Start:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function i2_I2C_2_Master_Idle *****************
  5409 ;; Defined at:
  5410 ;;		line 22 in file "i2c.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;		None
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;		None
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5426 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5428 ;;Total ram usage:        1 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		i2_I2C_2_Master_Start
  5434 ;;		i2_I2C_2_Master_Stop
  5435 ;;		i2_I2C_2_Master_Write
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text44
  5440   002366                     __ptext44:
  5441                           	callstack 0
  5442   002366                     i2_I2C_2_Master_Idle:
  5443                           	callstack 21
  5444   002366                     i2l186:
  5445   002366  010E               	movlb	14	; () banked
  5446   002368  B5D8               	btfsc	216,2,b	;volatile
  5447   00236A  EFB9  F011         	goto	i2u96_41
  5448   00236E  EFBB  F011         	goto	i2u96_40
  5449   002372                     i2u96_41:
  5450   002372  EFB3  F011         	goto	i2l186
  5451   002376                     i2u96_40:
  5452   002376                     
  5453                           ; BSR set to: 14
  5454   002376  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  5455   00237A  0E1F               	movlw	31
  5456   00237C  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  5457   00237E  A4D8               	btfss	status,2,c
  5458   002380  EFC4  F011         	goto	i2u97_41
  5459   002384  EFC6  F011         	goto	i2u97_40
  5460   002388                     i2u97_41:
  5461   002388  EFB3  F011         	goto	i2l186
  5462   00238C                     i2u97_40:
  5463   00238C                     
  5464                           ; BSR set to: 14
  5465   00238C  0012               	return		;funcret
  5466   00238E                     __end_ofi2_I2C_2_Master_Idle:
  5467                           	callstack 0
  5468                           
  5469                           	psect	rparam
  5470   000000                     
  5471                           	psect	temp
  5472   000053                     btemp:
  5473                           	callstack 0
  5474   000053                     	ds	1
  5475   000000                     int$flags	set	btemp
  5476   000000                     wtemp8	set	btemp+1
  5477   000000                     ttemp5	set	btemp+1
  5478   000000                     ttemp6	set	btemp+4
  5479   000000                     ttemp7	set	btemp+8
  5480                           
  5481                           	psect	idloc
  5482                           
  5483                           ;Config register IDLOC0 @ 0x200000
  5484                           ;	unspecified, using default values
  5485   200000                     	org	2097152
  5486   200000  0FFF               	dw	4095
  5487                           
  5488                           ;Config register IDLOC1 @ 0x200002
  5489                           ;	unspecified, using default values
  5490   200002                     	org	2097154
  5491   200002  0FFF               	dw	4095
  5492                           
  5493                           ;Config register IDLOC2 @ 0x200004
  5494                           ;	unspecified, using default values
  5495   200004                     	org	2097156
  5496   200004  0FFF               	dw	4095
  5497                           
  5498                           ;Config register IDLOC3 @ 0x200006
  5499                           ;	unspecified, using default values
  5500   200006                     	org	2097158
  5501   200006  0FFF               	dw	4095
  5502                           
  5503                           ;Config register IDLOC4 @ 0x200008
  5504                           ;	unspecified, using default values
  5505   200008                     	org	2097160
  5506   200008  0FFF               	dw	4095
  5507                           
  5508                           ;Config register IDLOC5 @ 0x20000A
  5509                           ;	unspecified, using default values
  5510   20000A                     	org	2097162
  5511   20000A  0FFF               	dw	4095
  5512                           
  5513                           ;Config register IDLOC6 @ 0x20000C
  5514                           ;	unspecified, using default values
  5515   20000C                     	org	2097164
  5516   20000C  0FFF               	dw	4095
  5517                           
  5518                           ;Config register IDLOC7 @ 0x20000E
  5519                           ;	unspecified, using default values
  5520   20000E                     	org	2097166
  5521   20000E  0FFF               	dw	4095
  5522                           
  5523                           	psect	config
  5524                           
  5525                           ;Config register CONFIG1L @ 0x300000
  5526                           ;	External Oscillator mode Selection bits
  5527                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  5528                           ;	Power-up default value for COSC bits
  5529                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  5530   300000                     	org	3145728
  5531   300000  AA                 	db	170
  5532                           
  5533                           ;Config register CONFIG1H @ 0x300001
  5534                           ;	unspecified, using default values
  5535                           ;	Clock Out Enable bit
  5536                           ;	CLKOUTEN = 0x1, unprogrammed default
  5537                           ;	Clock Switch Enable bit
  5538                           ;	CSWEN = 0x1, unprogrammed default
  5539                           ;	Fail-Safe Clock Monitor Enable bit
  5540                           ;	FCMEN = 0x1, unprogrammed default
  5541   300001                     	org	3145729
  5542   300001  FF                 	db	255
  5543                           
  5544                           ;Config register CONFIG2L @ 0x300002
  5545                           ;	unspecified, using default values
  5546                           ;	Master Clear Enable bit
  5547                           ;	MCLRE = 0x1, unprogrammed default
  5548                           ;	Power-up Timer Enable bit
  5549                           ;	PWRTE = 0x1, unprogrammed default
  5550                           ;	Low-power BOR enable bit
  5551                           ;	LPBOREN = 0x1, unprogrammed default
  5552                           ;	Brown-out Reset Enable bits
  5553                           ;	BOREN = 0x3, unprogrammed default
  5554   300002                     	org	3145730
  5555   300002  FF                 	db	255
  5556                           
  5557                           ;Config register CONFIG2H @ 0x300003
  5558                           ;	unspecified, using default values
  5559                           ;	Brown Out Reset Voltage selection bits
  5560                           ;	BORV = 0x3, unprogrammed default
  5561                           ;	ZCD Disable bit
  5562                           ;	ZCD = 0x1, unprogrammed default
  5563                           ;	PPSLOCK bit One-Way Set Enable bit
  5564                           ;	PPS1WAY = 0x1, unprogrammed default
  5565                           ;	Stack Full/Underflow Reset Enable bit
  5566                           ;	STVREN = 0x1, unprogrammed default
  5567                           ;	Debugger Enable bit
  5568                           ;	DEBUG = 0x1, unprogrammed default
  5569                           ;	Extended Instruction Set Enable bit
  5570                           ;	XINST = 0x1, unprogrammed default
  5571   300003                     	org	3145731
  5572   300003  FF                 	db	255
  5573                           
  5574                           ;Config register CONFIG3L @ 0x300004
  5575                           ;	WDT Period Select bits
  5576                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5577                           ;	WDT operating mode
  5578                           ;	WDTE = OFF, WDT Disabled
  5579   300004                     	org	3145732
  5580   300004  9F                 	db	159
  5581                           
  5582                           ;Config register CONFIG3H @ 0x300005
  5583                           ;	unspecified, using default values
  5584                           ;	WDT Window Select bits
  5585                           ;	WDTCWS = 0x7, unprogrammed default
  5586                           ;	WDT input clock selector
  5587                           ;	WDTCCS = 0x7, unprogrammed default
  5588   300005                     	org	3145733
  5589   300005  FF                 	db	255
  5590                           
  5591                           ;Config register CONFIG4L @ 0x300006
  5592                           ;	unspecified, using default values
  5593                           ;	Write Protection Block 0
  5594                           ;	WRT0 = 0x1, unprogrammed default
  5595                           ;	Write Protection Block 1
  5596                           ;	WRT1 = 0x1, unprogrammed default
  5597                           ;	Write Protection Block 2
  5598                           ;	WRT2 = 0x1, unprogrammed default
  5599                           ;	Write Protection Block 3
  5600                           ;	WRT3 = 0x1, unprogrammed default
  5601                           ;	Write Protection Block 3
  5602                           ;	WRT4 = 0x1, unprogrammed default
  5603                           ;	Write Protection Block 3
  5604                           ;	WRT5 = 0x1, unprogrammed default
  5605                           ;	Write Protection Block 3
  5606                           ;	WRT6 = 0x1, unprogrammed default
  5607                           ;	Write Protection Block 3
  5608                           ;	WRT7 = 0x1, unprogrammed default
  5609   300006                     	org	3145734
  5610   300006  FF                 	db	255
  5611                           
  5612                           ;Config register CONFIG4H @ 0x300007
  5613                           ;	unspecified, using default values
  5614                           ;	Configuration Register Write Protection bit
  5615                           ;	WRTC = 0x1, unprogrammed default
  5616                           ;	Boot Block Write Protection bit
  5617                           ;	WRTB = 0x1, unprogrammed default
  5618                           ;	Data EEPROM Write Protection bit
  5619                           ;	WRTD = 0x1, unprogrammed default
  5620                           ;	Scanner Enable bit
  5621                           ;	SCANE = 0x1, unprogrammed default
  5622                           ;	Low Voltage Programming Enable bit
  5623                           ;	LVP = 0x1, unprogrammed default
  5624   300007                     	org	3145735
  5625   300007  FF                 	db	255
  5626                           
  5627                           ;Config register CONFIG5L @ 0x300008
  5628                           ;	unspecified, using default values
  5629                           ;	UserNVM Program Memory Code Protection bit
  5630                           ;	CP = 0x1, unprogrammed default
  5631                           ;	DataNVM Memory Code Protection bit
  5632                           ;	CPD = 0x1, unprogrammed default
  5633   300008                     	org	3145736
  5634   300008  FF                 	db	255
  5635                           
  5636                           ;Config register CONFIG5H @ 0x300009
  5637                           ;	unspecified, using default values
  5638   300009                     	org	3145737
  5639   300009  FF                 	db	255
  5640                           
  5641                           ;Config register CONFIG6L @ 0x30000A
  5642                           ;	unspecified, using default values
  5643                           ;	Table Read Protection Block 0
  5644                           ;	EBTR0 = 0x1, unprogrammed default
  5645                           ;	Table Read Protection Block 1
  5646                           ;	EBTR1 = 0x1, unprogrammed default
  5647                           ;	Table Read Protection Block 2
  5648                           ;	EBTR2 = 0x1, unprogrammed default
  5649                           ;	Table Read Protection Block 3
  5650                           ;	EBTR3 = 0x1, unprogrammed default
  5651                           ;	Table Read Protection Block 4
  5652                           ;	EBTR4 = 0x1, unprogrammed default
  5653                           ;	Table Read Protection Block 5
  5654                           ;	EBTR5 = 0x1, unprogrammed default
  5655                           ;	Table Read Protection Block 6
  5656                           ;	EBTR6 = 0x1, unprogrammed default
  5657                           ;	Table Read Protection Block 7
  5658                           ;	EBTR7 = 0x1, unprogrammed default
  5659   30000A                     	org	3145738
  5660   30000A  FF                 	db	255
  5661                           
  5662                           ;Config register CONFIG6H @ 0x30000B
  5663                           ;	unspecified, using default values
  5664                           ;	Boot Block Table Read Protection bit
  5665                           ;	EBTRB = 0x1, unprogrammed default
  5666   30000B                     	org	3145739
  5667   30000B  FF                 	db	255
  5668                           tosu	equ	0xFFF
  5669                           tosh	equ	0xFFE
  5670                           tosl	equ	0xFFD
  5671                           stkptr	equ	0xFFC
  5672                           pclatu	equ	0xFFB
  5673                           pclath	equ	0xFFA
  5674                           pcl	equ	0xFF9
  5675                           tblptru	equ	0xFF8
  5676                           tblptrh	equ	0xFF7
  5677                           tblptrl	equ	0xFF6
  5678                           tablat	equ	0xFF5
  5679                           prodh	equ	0xFF4
  5680                           prodl	equ	0xFF3
  5681                           indf0	equ	0xFEF
  5682                           postinc0	equ	0xFEE
  5683                           postdec0	equ	0xFED
  5684                           preinc0	equ	0xFEC
  5685                           plusw0	equ	0xFEB
  5686                           fsr0h	equ	0xFEA
  5687                           fsr0l	equ	0xFE9
  5688                           wreg	equ	0xFE8
  5689                           indf1	equ	0xFE7
  5690                           postinc1	equ	0xFE6
  5691                           postdec1	equ	0xFE5
  5692                           preinc1	equ	0xFE4
  5693                           plusw1	equ	0xFE3
  5694                           fsr1h	equ	0xFE2
  5695                           fsr1l	equ	0xFE1
  5696                           bsr	equ	0xFE0
  5697                           indf2	equ	0xFDF
  5698                           postinc2	equ	0xFDE
  5699                           postdec2	equ	0xFDD
  5700                           preinc2	equ	0xFDC
  5701                           plusw2	equ	0xFDB
  5702                           fsr2h	equ	0xFDA
  5703                           fsr2l	equ	0xFD9
  5704                           status	equ	0xFD8

Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         116
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     47      82
    BANK0           160     50     133
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_1(CODE[21]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    S2555$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2555$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), main@mL(BANK0[9]), 

    mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S320DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S320DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motor_response@mR	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mR(BANK0[9]), 

    motor_response@mL	PTR struct DC_motor size(2) Largest target is 11
		 -> main@mL(BANK0[9]), 

    motor_response@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_normalise@RGBC	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 32
		 -> main@RGBC(BANK0[32]), 


Critical Paths under _main in COMRAM

    _main->_motor_response
    _persistence_register->_color_writetoaddr
    _motor_response->_norm_stop
    _motor_response->_turnLeft
    _motor_response->_turnRight
    _turnRight->_setMotorPWM
    _turnLeft->_setMotorPWM
    _norm_stop->_setMotorPWM
    _fullSpeedAhead->_setMotorPWM
    _setMotorPWM->___lwdiv
    ___lwdiv->___wmul
    _color_read_RGBC->___xxtofl
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    ___xxtofl->_color_read_Blue
    ___xxtofl->_color_read_Clear
    ___xxtofl->_color_read_Green
    ___xxtofl->_color_read_Red
    _color_normalise->___fldiv
    _color_click_init->_color_writetoaddr
    _Color_Interrupts_threshold->_color_writetoaddr
    _Color_Interrupts_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->i2_Color_Interrupts_threshold
    i2_persistence_register->i2_color_writetoaddr
    i2_Color_Interrupts_threshold->i2_color_writetoaddr
    i2_Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               160   160      0   29268
                                             45 COMRAM     2     2      0
                                              0 BANK0     50    50      0
              _Color_Interrupts_init
         _Color_Interrupts_threshold
                    _Interrupts_init
                   _color_click_init
                    _color_normalise
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                    _color_read_RGBC
                     _color_read_Red
                     _fullSpeedAhead
                    _initDCmotorsPWM
                         _motorLinit
                         _motorRinit
                     _motor_response
                          _norm_stop
               _persistence_register
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _persistence_register                                 0     0      0     750
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _motor_response                                      14     8      6   13595
                                             31 COMRAM    14     8      6
                             ___flge
                          _norm_stop
                           _turnLeft
                          _turnRight
 ---------------------------------------------------------------------------------
 (2) _turnRight                                            4     0      4    3677
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _turnLeft                                             4     0      4    3373
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (1) _norm_stop                                            4     0      4    4653
                                             27 COMRAM     4     0      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1064
                                              8 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _motorRinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _motorLinit                                           2     0      2     208
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _initDCmotorsPWM                                      2     0      2      76
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _fullSpeedAhead                                       5     1      4    3093
                                             27 COMRAM     5     1      4
                        _setMotorPWM
 ---------------------------------------------------------------------------------
 (2) _setMotorPWM                                          6     4      2    2589
                                             21 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     355
                                              8 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     358
                                             14 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2    1310
                                             33 COMRAM     2     0      2
                           ___xxtofl
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (1) _color_read_Red                                       7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     113
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Read                                    3     3      0      45
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     694
                                             19 COMRAM    14    10      4
                    _color_read_Blue (ARG)
                   _color_read_Clear (ARG)
                   _color_read_Green (ARG)
                     _color_read_Red (ARG)
 ---------------------------------------------------------------------------------
 (1) _color_normalise                                      2     0      2    1957
                                             33 COMRAM     2     0      2
                            ___fldiv
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    1639
                                              8 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     750
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupts_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_threshold                           4     0      4    1090
                                             12 COMRAM     4     0      4
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (1) _Color_Interrupts_init                                1     1      0     750
                                             12 COMRAM     1     1      0
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     750
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      22
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HighISR                                              0     0      0     828
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (6) _Color_Interrupts_clear                               0     0      0     828
            i2_Color_Interrupts_init
       i2_Color_Interrupts_threshold
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
             i2_persistence_register
 ---------------------------------------------------------------------------------
 (7) i2_persistence_register                               0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_threshold                         4     0      4     362
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (7) i2_Color_Interrupts_init                              1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (8) i2_color_writetoaddr                                  2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Write                                 1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Stop                                  0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (9) i2_I2C_2_Master_Start                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (10) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Color_Interrupts_init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _Color_Interrupts_threshold
     _color_writetoaddr
   _Interrupts_init
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
   _color_normalise
     ___fldiv
   _color_read_Blue
     _I2C_2_Master_Read
       _I2C_2_Master_Idle
     _I2C_2_Master_RepStart
       _I2C_2_Master_Idle
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Clear
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_Green
     _I2C_2_Master_Read
     _I2C_2_Master_RepStart
     _I2C_2_Master_Start
     _I2C_2_Master_Stop
     _I2C_2_Master_Write
   _color_read_RGBC
     ___xxtofl
       _color_read_Blue (ARG)
       _color_read_Clear (ARG)
       _color_read_Green (ARG)
       _color_read_Red (ARG)
         _I2C_2_Master_Read
         _I2C_2_Master_RepStart
         _I2C_2_Master_Start
         _I2C_2_Master_Stop
         _I2C_2_Master_Write
     _color_read_Blue
     _color_read_Clear
     _color_read_Green
     _color_read_Red
   _color_read_Red
   _fullSpeedAhead
     _setMotorPWM
       ___lwdiv
         ___wmul (ARG)
       ___wmul
   _initDCmotorsPWM
   _motorLinit
   _motorRinit
   _motor_response
     ___flge
     _norm_stop
       _setMotorPWM
     _turnLeft
       _setMotorPWM
     _turnRight
       _setMotorPWM
   _norm_stop
   _persistence_register
     _color_writetoaddr
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     i2_Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     i2_Color_Interrupts_threshold
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write
     i2_persistence_register
       i2_color_writetoaddr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      62        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      85       5       83.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2F      52       1       87.2%
BITBIGSFRlllhhh     52      0       0      40        0.0%
BITBIGSFRlllhhl     37      0       0      42        0.0%
BITBIGSFRlllllh     2D      0       0      45        0.0%
BITBIGSFRllllll     2A      0       0      53        0.0%
BITBIGSFRllllll     26      0       0      60        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      47        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      46        0.0%
BITBIGSFRllllll      9      0       0      57        0.0%
BITBIGSFRlllhll      8      0       0      43        0.0%
BITBIGSFRllllll      6      0       0      59        0.0%
BITBIGSFRllllll      6      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      51        0.0%
BITBIGSFRllllll      5      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      54        0.0%
BITBIGSFRllllll      3      0       0      50        0.0%
BITBIGSFRlllhhl      2      0       0      41        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      39        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      49        0.0%
BITBIGSFRllllll      1      0       0      58        0.0%
BITBIGSFRllllh       1      0       0      44        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D7      61        0.0%
DATA                 0      0      D7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Dec 11 20:49:09 2022

                            _color_read_Red 2064                                ___fldiv@aexp 0021  
                              ___fldiv@bexp 0020                             _color_read_RGBC 1CF2  
                              ___fldiv@sign 0019                             _color_read_Blue 2154  
                                        l81 225A                                          l90 2102  
                                        l84 23D2                                          l93 21A2  
                                        l87 20B2                                          l96 2152  
                       ___wmul@multiplicand 000B                            _color_read_Clear 2104  
                          _color_read_Green 20B4                           ??_Interrupts_init 0009  
                                       l102 1DB6                                         l111 243C  
                                       l201 246A                                         l105 19E0  
                                       l204 2226                                         l117 11D4  
                                       l183 22E8                                         l192 24A0  
                                       l186 233E                                         l450 240C  
                                       l195 248C                                         l604 23B2  
                                       l189 2364                                         l453 2312  
                                       l198 2496                                         l447 2452  
                                       l552 1E36                                         l456 245E  
                                       l562 2062                                         l565 1FF8  
                                       l582 1F1C                                         l559 188E  
                                       l576 228C                                         l593 1CF0  
                                       l579 1F8E                                         l874 1C06  
                                       l869 1BC0                                         u980 234E  
                                       u981 234A                                         u990 2364  
                                       u991 2360                            ??_motor_response 0026  
                                       _ctr 00AD              ??i2_Color_Interrupts_threshold 0009  
                               _tricolorLED 2428                         i2_color_writetoaddr 23D4  
                                       wreg 000FE8                             _color_normalise 1890  
                                      l1102 1EAA                                        l1200 147A  
                                      l2200 1E5A                                        l2210 1E94  
                                      l2202 1E62                                        l2212 1E96  
                                      l2204 1E70                                        l2230 249C  
                                      l1262 1722                                        l2302 2154  
                                      l2310 214A                                        l2214 1E9C  
                                      l2206 1E76                                        l1191 1392  
                                      l1095 1EA2                                        l2232 2462  
                                      l2400 12F8                                        l2240 2484  
                                      l2304 219A                                        l2208 1E8C  
                                      l2320 1EE4                                        l1273 16BA  
                                      l2234 2466                                        l2410 1336  
                                      l2402 12F8                                        l1186 156E  
                                      l1266 165E                                        l2250 21FC  
                                      l2242 2488                                        l2330 2274  
                                      l2322 1EF4                                        l2314 1EAC  
                                      l1259 15C6                                        l2228 2498  
                                      l2236 248E                                        l2420 1382  
                                      l1188 13CE                                        l2412 1346  
                                      l2252 2222                                        l2244 21E8  
                                      l2308 2104                                        l2260 1740  
                                      l2500 1BAE                                        l2332 2280  
                                      l2340 1F56                                        l2324 1F04  
                                      l2316 1EC4                                        l1197 1414  
                                      l2238 2492                                        l2430 13CC  
                                      l2422 1390                                        l2414 1356  
                                      l2406 130C                                        l2350 11E2  
                                      l2510 1582                                        l2254 2224  
                                      l2246 21EC                                        l2190 23AA  
                                      l2270 180A                                        l2262 1794  
                                      l2502 1BFE                                        l2342 1F66  
                                      l2334 1F1E                                        l2326 1F10  
                                      l2318 1ED4                                        l1199 148C  
                                      l2184 233E                                        l2280 22D0  
                                      l2440 1412                                        l2432 13DE  
                                      l2424 139C                                        l2416 135E  
                                      l2408 1326                                        l2360 1222  
                                      l2352 11F0                                        l2520 1600  
                                      l2512 1590                                        l2248 21F4  
                                      l2272 184E                                        l2264 17A8  
                                      l2504 1C04                                        l2328 225C  
                                      l2344 1F76                                        l2336 1F36  
                                      l2600 0EDC                                        l2186 234E  
                                      l2282 22D2                                        l2450 1472  
                                      l2434 13F4                                        l2442 1424  
                                      l2426 13BA                                        l2418 136E  
                                      l2370 1248                                        l2362 1224  
                                      l2354 11F2                                        l2530 1654  
                                      l2522 1608                                        l2514 15D6  
                                      l2290 2064                                        l2194 1E38  
                                      l2266 17EA                                        l2258 1724  
                                      l2346 1F82                                        l2338 1F46  
                                      l2610 0F60                                        l2602 0F1A  
                                      l2284 22D4                                        l2276 22C0  
                                      l2460 14E0                                        l2444 1432  
                                      l2436 13FA                                        l2428 13BC  
                                      l2380 1288                                        l2372 1256  
                                      l2356 1202                                        l2364 122C  
                                      l2348 11D6                                        l2540 16CA  
                                      l2532 1690                                        l2524 1614  
                                      l2516 15EC                                        l2508 1572  
                                      l2292 20AA                                        l2196 1E40  
                                      l2188 238E                                        l2268 17EE  
                                      l2700 1FAC                                        l2612 0F74  
                                      l2604 0F58                                        l2286 22D6  
                                      l2278 22CA                                        l2470 154A  
                                      l2454 149C                                        l2462 14E4  
                                      l2446 1436                                        l2438 1404  
                                      l2390 12C8                                        l2382 128A  
                                      l2374 1258                                        l2366 123C  
                                      l2358 1212                                        l2550 1712  
                                      l2542 16CE                                        l2534 169C  
                                      l2526 1646                                        l2198 1E52  
                                      l2710 1C20                                        l2702 1FBC  
                                      l2630 1098                                        l2614 0F8C  
                                      l2288 23B6                                        l2472 154E  
                                      l2464 14FE                                        l2456 14A8  
                                      l2448 1444                                        l2392 12D0  
                                      l2376 1268                                        l2384 1292  
                                      l2368 1242                                        l2544 16F2  
                                      l2536 16AA                                        l2528 1648  
                                      l2296 20B4                                        l2720 1C78  
                                      l2712 1C30                                        l2704 1FD0  
                                      l2632 10D6                                        l2616 0FB8  
                                      l2624 0FDE                                        l2570 2250  
                                      l2562 2228                                        l2474 155C  
                                      l2466 1514                                        l2458 14B6  
                                      l2394 12D4                                        l2386 12A2  
                                      l2378 1278                                        l2546 1702  
                                      l2538 16C8                                        l2298 20FA  
                                      l2730 1CD8                                        l2722 1C84  
                                      l2714 1C40                                        l2706 1FE4  
                                      l2490 1B42                                        l2650 11D2  
                                      l2642 115A                                        l2634 1114  
                                      l2626 101C                                        l2618 0FD8  
                                      l2660 22EA                                        l2564 222C  
                                      l2476 1562                                        l2468 152E  
                                      l2388 12B8                                        l2548 1710  
                                      l2572 1CF2                                        l2732 1CE4  
                                      l2724 1C90                                        l2716 1C50  
                                      l2708 1C08                                        l2492 1B70  
                                      l2644 116E                                        l2636 1152  
                                      l2628 105A                                        l2580 0E56  
                                      l2900 1A2E                                        l2654 243E  
                                      l2566 2236                                        l2478 1564  
                                      l2398 12E8                                        l2574 1890  
                                      l2726 1CA8                                        l2718 1C64  
                                      l2670 1E10                                        l2494 1B80  
                                      l2486 1B04                                        l2646 1186  
                                      l2590 0E8A                                        l2662 2454  
                                      l2910 1A38                                        l2902 1A30  
                                      l2656 23F4                                        l2568 2246  
                                      l2728 1CC0                                        l2680 1E2A  
                                      l2672 1E12                                        l2664 1DB8  
                                      l2496 1B8E                                        l2488 1B32  
                                      l2648 11B2                                        l2592 0EB6  
                                      l2576 2428                                        l2920 1A46  
                                      l2912 1A3A                                        l2904 1A32  
                                      l2658 23FE                                        l2682 1E34  
                                      l2674 1E1C                                        l2666 1DE2  
                                      l2690 2026                                        l2498 1BA0  
                                      l2594 0ED6                                        l2586 0E5E  
                                      l2578 0E18                                        l2930 1A78  
                                      l2922 1A4A                                        l2914 1A3C  
                                      l2906 1A34                                        l2676 1E1E  
                                      l2668 1E06                                        l2692 203A  
                                      l2684 1FFA                                        l2588 0E72  
                                      l2940 1ABE                                        l2932 1A8C  
                                      l2924 1A4E                                        l2916 1A3E  
                                      l2908 1A36                                        l2678 1E28  
                                      l2694 204E                                        l2686 2006  
                                      l2942 1AEE                                        l2934 1AA4  
                                      l2926 1A62                                        l2918 1A42  
                                      l2688 2016                                        l2696 1F90  
                                      l2944 1AF2                                        l2936 1AA6  
                                      l2928 1A64                                        l2698 1F9C  
                                      l2946 1AF4                                        l2938 1AB2  
                                      l2890 19E6                                        l2892 19EA  
                                      l2894 1A0A                                        l2896 1A16  
                                      l2888 19E2                                        l2898 1A22  
                                      STR_1 0E01                                        u1000 1E52  
                                      u1001 1E4E                                        u1010 1E70  
                                      u1011 1E6C                                        u1100 1256  
                                      u1020 1E8C                                        u1101 1252  
                                      u1021 1E88                                        u1110 1268  
                                      u1030 2210                                        u1111 1264  
                                      u1031 2208                                        u1200 1412  
                                      u1120 1278                                        u1201 140E  
                                      u1121 1274                                        u1210 1432  
                                      u1130 12B8                                        u1050 1740  
                                      u1211 142E                                        u1131 12B4  
                                      u1051 173C                                        u1220 1444  
                                      u1140 12F8                                        u1060 180A  
                                      u1300 1B32                                        u1221 1440  
                                      u1141 12F4                                        u1061 1806  
                                      u1301 1B2E                                        u1230 1472  
                                      u1150 136E                                        u1070 11F0  
                                      u1310 1B70                                        u1231 146E  
                                      u1151 136A                                        u1071 11EC  
                                      u1311 1B6C                                        u1240 1488  
                                      u1160 1390                                        u1080 1202  
                                      u1400 16AA                                        u1048 2212  
                                      u1320 1B8E                                        u1241 1484  
                                      u1161 138C                                        u1081 11FE  
                                      u1401 16A6                                        u1321 1B8A  
                                      u1250 149C                                        u1170 13BA  
                                      u1090 1212                                        u1410 16BA  
                                      u1330 1BAE                                        u1251 1498  
                                      u1171 13B6                                        u1091 120E  
                                      u1411 16B6                                        u1331 1BAA  
                                      u1260 14B6                                        u1180 13DE  
                                      u1420 16C8                                        u1340 1BFE  
                                      u1500 101C                                        u1261 14B2  
                                      u1181 13DA                                        u1421 16C4  
                                      u1341 1BFA                                        u1501 1018  
                                      u1270 14FE                                        u1190 13F4  
                                      u1430 1702                                        u1350 1582  
                                      u1510 105A                                        u1271 14FA  
                                      u1191 13F0                                        u1431 16FE  
                                      u1351 157E                                        u1511 1056  
                                      u1280 152E                                        u1440 1710  
                                      u1360 1590                                        u1520 1098  
                              _BAUD4CONbits 000EE9                                        u1281 152A  
                                      u1441 170C                                        u1361 158C  
                                      u1521 1094                                        u1290 155C  
                                      u1370 15EC                                        u1530 10D6  
                                      u1450 0E56                                        u1291 1558  
                                      u1371 15E8                                        u1531 10D2  
                                      u1451 0E52                                        u1380 1642  
                                      u1540 1114                                        u1460 0ED6  
                                      u1381 163E                                        u1541 1110  
                                      u1461 0ED2                                        u1390 168C  
                                      u1550 1152                                        u1470 0F1A  
                                      u1391 1688                                        u1551 114E  
                                      u1471 0F16                                        u1560 11D2  
                                      u1480 0F58                                        u1561 11CE  
                                      u1481 0F54                                        u1570 1CA8  
                                      u1490 0FD8                                        _T2PR 000FBC  
                                      u1571 1CA4                                        u1491 0FD4  
                                      u1580 1CC0                                        u1581 1CBC  
                                      u1770 1A78                                        u1907 223C  
                                      u1771 1A74                                        u1917 2404  
                                      u1837 1A96                                        u1847 0E7C  
                                      u1857 0EA8                                        u1867 0F7E  
                                      u1877 0FAA                                        u1887 1178  
                                      u1897 11A4                                        i2l84 23F2  
                                      _main 19E2                                        fsr2h 000FDA  
                                      indf2 000FDF                                        fsr2l 000FD9  
                                      btemp 0053                                        prodh 000FF4  
                                      prodl 000FF3                                        start 0032  
                      ?i2_color_writetoaddr 0003                             ___fldiv@new_exp 001A  
                    __end_of_color_read_Red 20B4                             __end_of_HighISR 0032  
                              ___param_bank 000000                                       ?_main 0001  
                           __end_of___fldiv 1570                             __end_of___lwdiv 1EAC  
                                     i2l201 2482                                       i2l192 24B4  
                                     i2l186 2366                                       i2l450 2426  
                                     i2l189 238C                                       i2l453 233C  
                                     i2l198 24AA                                       i2l456 2476  
                                     i2l465 002E                                       i2l459 22BE  
                                     _TMR0H 000FD4                                       _TMR0L 000FD3  
                __end_of_I2C_2_Master_Start 24A2                  __end_of_I2C_2_Master_Write 246C  
                                     tablat 000FF5                       _Color_Interrupts_init 23F4  
                                     ttemp5 0054                                       ttemp6 0057  
                                     ttemp7 005B                                       status 000FD8  
                                     wtemp8 0054                     __end_of_color_read_RGBC 1DB8  
                     ??i2_color_writetoaddr 0004                     __end_of_color_read_Blue 21A4  
                     _I2C_2_Master_RepStart 2484                             ?_color_read_Red 000D  
                           __initialization 21A4                                __end_of_main 1B04  
               ?_Color_Interrupts_threshold 000D                                      ??_main 002E  
                             __activetblptr 000001                     __end_of_color_normalise 19E2  
                              ?_setMotorPWM 0016                                      _CCPR1H 000FAA  
                                    _CCPR2H 000FA6                                      _CCPR3H 000F25  
                                    _CCPR4H 000F21                                      _RC0PPS 000E62  
                                    _RC4REG 000EE3                                      _RE2PPS 000E74  
                                    _RC7PPS 000E69                                      _RD5PPS 000E6F  
                                    _RE4PPS 000E76                                      _RD6PPS 000E70  
                                    i2l2220 24A2                                      i2l2222 24A6  
                                    i2l2216 24AC                                      i2l2224 247A  
                                    i2l2218 24B0                                      i2l2226 247E  
                                    i2l2180 2366                                      i2l2182 2376  
                                    i2l2274 23D6                                      i2l2560 246C  
                                    i2l2554 240E                                      i2l2556 2418  
                                    i2l2558 2314                                      i2l2742 228E  
                                    i2l2970 001C                                      _RG6PPS 000E88  
                                    i2l2972 0026                                      i2l2974 002A  
                                    i2l2966 000A                                      i2l2968 001A  
                                 ??_HighISR 0009                    __end_of_color_click_init 225C  
                                    _RX4PPS 000E15                                      _TX4REG 000EE4  
                          __end_of___xxtofl 1724    Color_Interrupts_threshold@lowerThreshold 000F  
i2Color_Interrupts_threshold@lowerThreshold 0007                __end_of_persistence_register 2460  
                              _CCPTMRS0bits 000FAD                                      ___flge 1B04  
                                    ___wmul 238E                                   ??___fldiv 0011  
                                 ??___lwdiv 0013                                      clear_0 21C2  
                                    clear_1 21CE                                      isa$std 000001  
                                    main@mL 00D1                                      main@mR 00DA  
                   ?i2_persistence_register 0001                      _Color_Interrupts_clear 228E  
                              __mediumconst 0000                                      tblptrh 000FF7  
                                    tblptrl 000FF6                                      tblptru 000FF8  
  Color_Interrupts_threshold@upperThreshold 000D  i2Color_Interrupts_threshold@upperThreshold 0005  
                         ??_initDCmotorsPWM 000B                  i2color_writetoaddr@address 0004  
                    ?_Color_Interrupts_init 0001                            __end_of_turnLeft 1F90  
                                ___flge@ff1 0009                                  ___flge@ff2 000D  
                              ___xxtofl@arg 001E                                ___xxtofl@exp 001D  
                              ___xxtofl@val 0014                                  __accesstop 0060  
                   __end_of__initialization 21D4                    __end_of_color_read_Clear 2154  
                  __end_of_color_read_Green 2104                      ?_I2C_2_Master_RepStart 0001  
                             ___rparam_used 000001                            ?_color_read_RGBC 0022  
                          ?_color_read_Blue 000D                             _Interrupts_init 243E  
                            __pcstackCOMRAM 0001                                __pidataBANK0 24B6  
            __end_ofi2_persistence_register 2478                                ?_tricolorLED 0001  
                          ?_color_normalise 0022                     i2_Color_Interrupts_init 240E  
                                __pbssBANK0 0060                           _color_writetoaddr 23B4  
                              _T2CLKCONbits 000FBF                            motor_response@mL 0022  
                          motor_response@mR 0024                                     ?___flge 0009  
                        ?_color_writetoaddr 000B                                     ?___wmul 0009  
                        motor_response@temp 0020                         ??_color_writetoaddr 000C  
                                 ?___xxtofl 0014                                     _SP4BRGH 000EE6  
                                   _SP4BRGL 000EE5                                     i2u96_40 2376  
                                   i2u96_41 2372                                     i2u97_40 238C  
                                   i2u97_41 2388                                     _SSP2ADD 000ED6  
                                   _SSP2BUF 000ED5                        _persistence_register 2454  
                                _buggy_path 009C                     __end_of_Interrupts_init 2454  
                            _lowerThreshold 00AB                      color_writetoaddr@value 000B  
                          ??_color_read_Red 000F                                     _HighISR 0008  
                 __end_of_color_writetoaddr 23D4                          _I2C_2_Master_Start 2498  
                       i2_I2C_2_Master_Idle 2366                          _I2C_2_Master_Write 2460  
                                   __Hparam 0000                         i2_I2C_2_Master_Stop 24A2  
                                   __Lparam 0000                           color_read_Red@tmp 0012  
                                   ___fldiv 11D6                         ?_I2C_2_Master_Start 0001  
                                   ___lwdiv 1E38                         ?_I2C_2_Master_Write 0001  
                              __psmallconst 0E00                                     _amb_red 004A  
                                   __pcinit 21A4                                     __ramtop 0E00  
                                 ?_turnLeft 001C                                     __ptext0 19E2  
                                   __ptext1 2428                                     __ptext2 2454  
                                   __ptext3 0E18                                     __ptext4 1EAC  
                                   __ptext5 1F1E                                     __ptext6 225C  
                                   __ptext7 1B04                                     __ptext8 1F90  
                                   __ptext9 1FFA                        ?i2_I2C_2_Master_Idle 0001  
                                 _T2CONbits 000FBD                                  ??___xxtofl 0018  
                      ?i2_I2C_2_Master_Stop 0001                                   _T2HLTbits 000FBE  
                 ??i2_Color_Interrupts_init 0005                              _upperThreshold 00E3  
                             _RxBufWriteCnt 0052                       ?_persistence_register 0001  
                      ??_I2C_2_Master_Start 000A                        ??_I2C_2_Master_Write 000A  
                      end_of_initialization 21D4                 __end_ofi2_color_writetoaddr 23F4  
                         ?_color_click_init 0001                           __end_of_norm_stop 228E  
                        ??_color_click_init 000D                                 norm_stop@mL 001C  
                               norm_stop@mR 001E                                     postdec2 000FDD  
                                _motorLinit 1FFA                                     postinc0 000FEE  
                                   postinc2 000FDE                                  _motorRinit 1F90  
                             _interrupt_ctr 004C                     ?_Color_Interrupts_clear 0001  
                           _initDCmotorsPWM 1DB8                                  ??_turnLeft 0020  
                       color_read_RGBC@temp 0022                          setMotorPWM@negDuty 001B  
                     ??i2_I2C_2_Master_Idle 0001                           __end_of_turnRight 1F1E  
                     ??i2_I2C_2_Master_Stop 0002                               ___xxtofl@sign 001C  
                   ??_Color_Interrupts_init 000D                                   _TRISAbits 000F81  
                        setMotorPWM@posDuty 001A                                   _TRISBbits 000F82  
                                 _TRISCbits 000F83                                   _TRISDbits 000F84  
                                 _TRISEbits 000F85                                   _TRISFbits 000F86  
                                 _TRISGbits 000F87                                   _TRISHbits 000F88  
                               ___fldiv@grs 001C                                 ___fldiv@rem 0015  
                          fullSpeedAhead@mL 001C                            fullSpeedAhead@mR 001E  
                  color_writetoaddr@address 000C                     ??_I2C_2_Master_RepStart 000A  
                          ?_Interrupts_init 0001                                 _CCP1CONbits 000FAB  
                         ?_color_read_Clear 000D                                _EUSART4RXbuf 0030  
                              _EUSART4TXbuf 0060                                 _CCP2CONbits 000FA7  
                         ?_color_read_Green 000D                                 _CCP3CONbits 000F26  
                               _CCP4CONbits 000F22                          ??_color_read_Clear 000F  
                        ??_color_read_Green 000F              __end_of_Color_Interrupts_clear 22C0  
                            __end_of___flge 1C08                              _fullSpeedAhead 1C08  
                            __end_of___wmul 23B4                         color_read_Clear@tmp 0012  
                       start_initialization 21A4                      ??_persistence_register 000D  
                             _TxBufWriteCnt 0050                         color_read_Green@tmp 0012  
                   __end_of_initDCmotorsPWM 1E38                      __end_of_fullSpeedAhead 1CF2  
                                  ??___flge 0011                                 ?_motorLinit 0009  
                                  ??___wmul 000D                                 ?_motorRinit 0009  
                       color_normalise@RGBC 0022                                 __pdataBANK0 00E3  
             i2I2C_2_Master_Write@data_byte 0002                __end_ofi2_I2C_2_Master_Start 24B6  
              __end_ofi2_I2C_2_Master_Write 2484                                   ___fldiv@a 000D  
                                 ___fldiv@b 0009                                 __pbssCOMRAM 0030  
                             __pcstackBANK0 00B1                              _motor_response 0E18  
                                  ?_HighISR 0001                                   _amb_clear 0044  
                                 _amb_green 0048                            ___lwdiv@dividend 000F  
                           motor_response@j 0028                             ?_fullSpeedAhead 001C  
                                 __pintcode 0008                                    ?___fldiv 0009  
                                  ?___lwdiv 000F                ??_Color_Interrupts_threshold 0011  
                      I2C_2_Master_Read@ack 000B                         motor_response@j_496 002A  
                       motor_response@j_497 002C                        I2C_2_Master_Read@tmp 000C  
                               __smallconst 0E00                           _I2C_2_Master_Idle 233E  
                         _I2C_2_Master_Init 22C0                           _I2C_2_Master_Read 21E6  
                         _I2C_2_Master_Stop 248E                                _RxBufReadCnt 0051  
                        ?_I2C_2_Master_Idle 0001                          ?_I2C_2_Master_Init 0001  
                        ?_I2C_2_Master_Read 0001                               ??_setMotorPWM 0018  
                        ?_I2C_2_Master_Stop 0001                            ___lwdiv@quotient 0013  
                    __end_of_motor_response 11D6                    initDCmotorsPWM@PWMperiod 0009  
                       ??_I2C_2_Master_Idle 0009                         ??_I2C_2_Master_Init 0009  
                       ??_I2C_2_Master_Read 000A                              ___wmul@product 000D  
                                  _LATAbits 000F79                         ??_I2C_2_Master_Stop 000A  
                                  _LATDbits 000F7C                                    _LATEbits 000F7D  
                                  _LATFbits 000F7E                                    _LATGbits 000F7F  
                                  _LATHbits 000F80                                    _IPR0bits 000E1F  
                                  _PIE0bits 000E29                                    _PIE4bits 000E2D  
                               turnRight@mL 001C                                 turnRight@mR 001E  
                                  i2u180_40 001A                                    i2u180_41 0016  
                                  _PIR0bits 000E33                                    i2u192_47 241E  
                                  _PIR4bits 000E37                    ??i2_persistence_register 0005  
                          ?_initDCmotorsPWM 0009                                   _norm_stop 225C  
                                  _SSP2CON2 000EDA                                    _SSP2STAT 000ED8  
                 __end_of_I2C_2_Master_Idle 2366                   __end_of_I2C_2_Master_Init 22EA  
                 __end_of_I2C_2_Master_Read 2228                           ___wmul@multiplier 0009  
                 __end_of_I2C_2_Master_Stop 2498                                setMotorPWM@m 0016  
               I2C_2_Master_Write@data_byte 000A                           ??_color_read_RGBC 0024  
                         ??_color_read_Blue 000F                                _TxBufReadCnt 004F  
                  i2color_writetoaddr@value 0003                                   _turnRight 1EAC  
             __end_of_Color_Interrupts_init 240E                             ?_motor_response 0020  
             __end_of_I2C_2_Master_RepStart 248E                          color_read_Blue@tmp 0012  
                       __end_of_setMotorPWM 1890                        i2_I2C_2_Master_Start 24AC  
                      i2_I2C_2_Master_Write 2478                                    __Hrparam 0000  
                         ??_color_normalise 0024                                    __Lrparam 0000  
                              __Lsmallconst 0E00                                  ?_norm_stop 001C  
      __end_ofi2_Color_Interrupts_threshold 233E                i2_Color_Interrupts_threshold 2314  
               __end_ofi2_I2C_2_Master_Idle 238E                 __end_ofi2_I2C_2_Master_Stop 24AC  
                  ?i2_Color_Interrupts_init 0001                                  _ANSELBbits 000E9A  
                                _ANSELDbits 000EA7                               ??_tricolorLED 0009  
                                  _amb_blue 0046                                    ___xxtofl 1570  
                                _T0CON0bits 000FD5                                  _T0CON1bits 000FD6  
                           ___lwdiv@divisor 0011                             ___lwdiv@counter 0015  
                                ?_turnRight 001C                                    __ptext10 1DB8  
                                  __ptext11 1C08                                    __ptext20 2484  
                                  __ptext12 1724                                    __ptext21 21E6  
                                  __ptext13 238E                                    __ptext30 23B4  
                                  __ptext22 1570                                    __ptext14 1E38  
                                  __ptext31 2460                                    __ptext23 1890  
                                  __ptext15 1CF2                                    __ptext40 23D4  
                                  __ptext32 248E                                    __ptext24 11D6  
                                  __ptext16 2064                                    __ptext41 2478  
                                  __ptext33 2498                                    __ptext25 2228  
                                  __ptext17 20B4                                    __ptext42 24A2  
                                  __ptext34 233E                                    __ptext26 22C0  
                                  __ptext18 2104                                    __ptext43 24AC  
                                  __ptext27 243E                                    __ptext19 2154  
                                  __ptext44 2366                                    __ptext36 228E  
                                  __ptext28 22EA                                    __ptext37 246C  
                                  __ptext29 23F4                                    __ptext38 2314  
                                  __ptext39 240E                                _SSP2CON1bits 000ED9  
                              _SSP2CON2bits 000EDA                                  turnLeft@mL 001C  
                                turnLeft@mR 001E                       ?i2_I2C_2_Master_Start 0001  
                     ?i2_I2C_2_Master_Write 0001                                    isa$xinst 000000  
                              ??_motorLinit 000B                                ??_motorRinit 000B  
                                _RC4STAbits 000EE7                                    main@RGBC 00B1  
                                  int$flags 0053          __end_of_Color_Interrupts_threshold 2314  
             ?i2_Color_Interrupts_threshold 0005                  _Color_Interrupts_threshold 22EA  
                                  _turnLeft 1F1E                                  _INTCONbits 000FF2  
                               _setMotorPWM 1724                                motorLinit@mL 0009  
                       __end_of_tricolorLED 243E                                    intlevel2 0000  
                              _motor_return 004E                          __end_of_motorLinit 2064  
                        __end_of_motorRinit 1FFA                                motorRinit@mR 0009  
                          ??_fullSpeedAhead 0020                                 ??_norm_stop 0020  
           __end_ofi2_Color_Interrupts_init 2428                            _color_click_init 2228  
                                _SSP2DATPPS 000E1D                                  _SSP2CLKPPS 000E1C  
                            _interrupt_flag 00AF                      i2_persistence_register 246C  
                               ??_turnRight 0020                                  _TX4STAbits 000EE8  
                    ??i2_I2C_2_Master_Start 0002                      ??i2_I2C_2_Master_Write 0002  
                  ??_Color_Interrupts_clear 0009  
