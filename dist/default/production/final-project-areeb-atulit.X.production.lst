

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Dec 09 19:01:00 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F67K40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 06/04/2022 GMT
    62                           ; 
    63                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F67K40 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     _TX4REG	set	3812
    96   000000                     _RC4STAbits	set	3815
    97   000000                     _SP4BRGH	set	3814
    98   000000                     _LATHbits	set	3968
    99   000000                     _TRISAbits	set	3969
   100   000000                     _SSP2CON2bits	set	3802
   101   000000                     _RX4PPS	set	3605
   102   000000                     _SSP2CLKPPS	set	3612
   103   000000                     _SSP2DATPPS	set	3613
   104   000000                     _ANSELDbits	set	3751
   105   000000                     _SSP2ADD	set	3798
   106   000000                     _SSP2CON1bits	set	3801
   107   000000                     _LATAbits	set	3961
   108   000000                     _LATGbits	set	3967
   109   000000                     _TRISGbits	set	3975
   110   000000                     _T2PR	set	4028
   111   000000                     _T2CONbits	set	4029
   112   000000                     _TMR0L	set	4051
   113   000000                     _TMR0H	set	4052
   114   000000                     _T0CON0bits	set	4053
   115   000000                     _T0CON1bits	set	4054
   116   000000                     _INTCONbits	set	4082
   117   000000                     _TRISHbits	set	3976
   118   000000                     _CCPR2H	set	4006
   119   000000                     _CCPR1H	set	4010
   120   000000                     _TRISBbits	set	3970
   121   000000                     _TRISDbits	set	3972
   122   000000                     _TRISEbits	set	3973
   123   000000                     _TRISFbits	set	3974
   124   000000                     _LATDbits	set	3964
   125   000000                     _LATEbits	set	3965
   126   000000                     _LATFbits	set	3966
   127   000000                     _RC4REG	set	3811
   128   000000                     _SP4BRGL	set	3813
   129   000000                     _TX4STAbits	set	3816
   130   000000                     _BAUD4CONbits	set	3817
   131   000000                     _SSP2CON2	set	3802
   132   000000                     _SSP2STAT	set	3800
   133   000000                     _SSP2BUF	set	3797
   134   000000                     _IPR0bits	set	3615
   135   000000                     _PIE0bits	set	3625
   136   000000                     _PIE4bits	set	3629
   137   000000                     _RC0PPS	set	3682
   138   000000                     _RD5PPS	set	3695
   139   000000                     _RE2PPS	set	3700
   140   000000                     _ANSELBbits	set	3738
   141   000000                     _RD6PPS	set	3696
   142   000000                     _RC7PPS	set	3689
   143   000000                     _CCPR4H	set	3873
   144   000000                     _CCPR3H	set	3877
   145   000000                     _PIR0bits	set	3635
   146   000000                     _PIR4bits	set	3639
   147   000000                     _RE4PPS	set	3702
   148   000000                     _RG6PPS	set	3720
   149   000000                     _T2CLKCONbits	set	4031
   150   000000                     _T2HLTbits	set	4030
   151   000000                     _CCP1CONbits	set	4011
   152   000000                     _CCPTMRS0bits	set	4013
   153   000000                     _CCP2CONbits	set	4007
   154   000000                     _CCP3CONbits	set	3878
   155   000000                     _CCP4CONbits	set	3874
   156                           
   157                           	psect	smallconst
   158   000E00                     __psmallconst:
   159                           	callstack 0
   160   000E00  00                 	db	0
   161   000E01                     STR_1:
   162                           
   163                           ; BSR set to: 14
   164   000E01  52                 	db	82	;'R'
   165   000E02  47                 	db	71	;'G'
   166   000E03  42                 	db	66	;'B'
   167   000E04  43                 	db	67	;'C'
   168   000E05  3A                 	db	58	;':'
   169   000E06  25                 	db	37
   170   000E07  69                 	db	105	;'i'
   171   000E08  20                 	db	32
   172   000E09  25                 	db	37
   173   000E0A  69                 	db	105	;'i'
   174   000E0B  20                 	db	32
   175   000E0C  25                 	db	37
   176   000E0D  69                 	db	105	;'i'
   177   000E0E  20                 	db	32
   178   000E0F  25                 	db	37
   179   000E10  69                 	db	105	;'i'
   180   000E11  0A                 	db	10
   181   000E12  00                 	db	0
   182   000E13  00                 	db	0	; dummy byte at the end
   183   000000                     
   184                           ; #config settings
   185                           
   186                           	psect	cinit
   187   001A3E                     __pcinit:
   188                           	callstack 0
   189   001A3E                     start_initialization:
   190                           	callstack 0
   191   001A3E                     __initialization:
   192                           	callstack 0
   193                           
   194                           ; Clear objects allocated to BANK1 (112 bytes)
   195   001A3E  EE01  F000         	lfsr	0,__pbssBANK1
   196   001A42  0E70               	movlw	112
   197   001A44                     clear_0:
   198   001A44  6AEE               	clrf	postinc0,c
   199   001A46  06E8               	decf	wreg,f,c
   200   001A48  E1FD               	bnz	clear_0
   201                           
   202                           ; Clear objects allocated to BANK0 (6 bytes)
   203   001A4A  0100               	movlb	0
   204   001A4C  6B96               	clrf	(__pbssBANK0+5)& (0+255),b
   205   001A4E  6B95               	clrf	(__pbssBANK0+4)& (0+255),b
   206   001A50  6B94               	clrf	(__pbssBANK0+3)& (0+255),b
   207   001A52  6B93               	clrf	(__pbssBANK0+2)& (0+255),b
   208   001A54  6B92               	clrf	(__pbssBANK0+1)& (0+255),b
   209   001A56  6B91               	clrf	__pbssBANK0& (0+255),b
   210                           
   211                           ; Clear objects allocated to COMRAM (7 bytes)
   212   001A58  EE00  F04F         	lfsr	0,__pbssCOMRAM
   213   001A5C  0E07               	movlw	7
   214   001A5E                     clear_1:
   215   001A5E  6AEE               	clrf	postinc0,c
   216   001A60  06E8               	decf	wreg,f,c
   217   001A62  E1FD               	bnz	clear_1
   218   001A64                     end_of_initialization:
   219                           	callstack 0
   220   001A64                     __end_of__initialization:
   221                           	callstack 0
   222   001A64  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   223   001A66  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   224   001A68  0E00               	movlw	low (__Lsmallconst shr (0+16))
   225   001A6A  6EF8               	movwf	tblptru,c
   226   001A6C  0E0E               	movlw	high __Lsmallconst
   227   001A6E  6EF7               	movwf	tblptrh,c
   228   001A70  0100               	movlb	0
   229   001A72  EFCA  F00A         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   00004F                     __pbssCOMRAM:
   233                           	callstack 0
   234   00004F                     _prec:
   235                           	callstack 0
   236   00004F                     	ds	2
   237   000051                     _flags:
   238                           	callstack 0
   239   000051                     	ds	1
   240   000052                     _TxBufReadCnt:
   241                           	callstack 0
   242   000052                     	ds	1
   243   000053                     _TxBufWriteCnt:
   244                           	callstack 0
   245   000053                     	ds	1
   246   000054                     _RxBufReadCnt:
   247                           	callstack 0
   248   000054                     	ds	1
   249   000055                     _RxBufWriteCnt:
   250                           	callstack 0
   251   000055                     	ds	1
   252                           
   253                           	psect	bssBANK0
   254   000091                     __pbssBANK0:
   255                           	callstack 0
   256   000091                     _width:
   257                           	callstack 0
   258   000091                     	ds	2
   259   000093                     _interrupt_ctr:
   260                           	callstack 0
   261   000093                     	ds	2
   262   000095                     _interrupt_flag:
   263                           	callstack 0
   264   000095                     	ds	2
   265                           
   266                           	psect	bssBANK1
   267   000100                     __pbssBANK1:
   268                           	callstack 0
   269   000100                     _EUSART4TXbuf:
   270                           	callstack 0
   271   000100                     	ds	60
   272   00013C                     _EUSART4RXbuf:
   273                           	callstack 0
   274   00013C                     	ds	20
   275   000150                     _dbuf:
   276                           	callstack 0
   277   000150                     	ds	32
   278                           
   279                           	psect	cstackBANK1
   280   000170                     __pcstackBANK1:
   281                           	callstack 0
   282   000170                     main@buf:
   283                           	callstack 0
   284                           
   285                           ; 100 bytes @ 0x0
   286   000170                     	ds	100
   287   0001D4                     main@RGBC:
   288                           	callstack 0
   289                           
   290                           ; 8 bytes @ 0x64
   291   0001D4                     	ds	8
   292                           
   293                           	psect	cstackBANK0
   294   000060                     __pcstackBANK0:
   295                           	callstack 0
   296   000060                     vfpfcnvrt@convarg:
   297                           	callstack 0
   298                           
   299                           ; 8 bytes @ 0x0
   300   000060                     	ds	8
   301   000068                     vfpfcnvrt@cp:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x8
   305   000068                     	ds	2
   306   00006A                     ?_vfprintf:
   307                           	callstack 0
   308   00006A                     vfprintf@fp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xA
   312   00006A                     	ds	2
   313   00006C                     vfprintf@fmt:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xC
   317   00006C                     	ds	2
   318   00006E                     vfprintf@ap:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0xE
   322   00006E                     	ds	2
   323   000070                     vfprintf@cfmt:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x10
   327   000070                     	ds	2
   328   000072                     ?_sprintf:
   329                           	callstack 0
   330   000072                     sprintf@s:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x12
   334   000072                     	ds	2
   335   000074                     sprintf@fmt:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x14
   339   000074                     	ds	10
   340   00007E                     sprintf@ap:
   341                           	callstack 0
   342                           
   343                           ; 2 bytes @ 0x1E
   344   00007E                     	ds	2
   345   000080                     sprintf@f:
   346                           	callstack 0
   347                           
   348                           ; 11 bytes @ 0x20
   349   000080                     	ds	11
   350   00008B                     colorVal2String@buf:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x2B
   354   00008B                     	ds	2
   355   00008D                     colorVal2String@temp:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x2D
   359   00008D                     	ds	2
   360   00008F                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x2F
   363   00008F                     	ds	2
   364                           
   365                           	psect	cstackCOMRAM
   366   000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368   000001                     ??i2_I2C_2_Master_Idle:
   369   000001                     
   370                           ; 1 bytes @ 0x0
   371   000001                     	ds	1
   372   000002                     i2I2C_2_Master_Write@data_byte:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x1
   376   000002                     	ds	1
   377   000003                     i2color_writetoaddr@value:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x2
   381   000003                     	ds	1
   382   000004                     i2color_writetoaddr@address:
   383                           	callstack 0
   384                           
   385                           ; 1 bytes @ 0x3
   386   000004                     	ds	1
   387   000005                     ??_Color_Interrupts_init:
   388   000005                     Color_Interrupts_threshold@upperThreshold:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x4
   392   000005                     	ds	2
   393   000007                     Color_Interrupts_threshold@lowerThreshold:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x6
   397   000007                     	ds	2
   398   000009                     ??_I2C_2_Master_Idle:
   399   000009                     ?___aodiv:
   400                           	callstack 0
   401   000009                     ?___aomod:
   402                           	callstack 0
   403   000009                     sendCharSerial4@charToSend:
   404                           	callstack 0
   405   000009                     fputc@c:
   406                           	callstack 0
   407   000009                     ___aodiv@dividend:
   408                           	callstack 0
   409   000009                     ___aomod@dividend:
   410                           	callstack 0
   411                           
   412                           ; 8 bytes @ 0x8
   413   000009                     	ds	1
   414   00000A                     ??_I2C_2_Master_Read:
   415   00000A                     I2C_2_Master_Write@data_byte:
   416                           	callstack 0
   417   00000A                     sendStringSerial4@string:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x9
   421   00000A                     	ds	1
   422   00000B                     color_writetoaddr@value:
   423                           	callstack 0
   424   00000B                     I2C_2_Master_Read@ack:
   425                           	callstack 0
   426   00000B                     fputc@fp:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0xA
   430   00000B                     	ds	1
   431   00000C                     color_writetoaddr@address:
   432                           	callstack 0
   433   00000C                     I2C_2_Master_Read@tmp:
   434                           	callstack 0
   435   00000C                     sendStringSerial4@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xB
   439   00000C                     	ds	1
   440   00000D                     ??_fputc:
   441   00000D                     ??_color_click_init:
   442   00000D                     ?_color_read_Red:
   443                           	callstack 0
   444   00000D                     ?_color_read_Green:
   445                           	callstack 0
   446   00000D                     ?_color_read_Blue:
   447                           	callstack 0
   448   00000D                     ?_color_read_Clear:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0xC
   452   00000D                     	ds	1
   453   00000E                     RGBC2Serial@str:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0xD
   457   00000E                     	ds	1
   458   00000F                     ??_color_read_Red:
   459   00000F                     ??_color_read_Green:
   460   00000F                     ??_color_read_Blue:
   461   00000F                     ??_color_read_Clear:
   462                           
   463                           ; 1 bytes @ 0xE
   464   00000F                     	ds	1
   465   000010                     ??_RGBC2Serial:
   466                           
   467                           ; 1 bytes @ 0xF
   468   000010                     	ds	1
   469   000011                     ___aodiv@divisor:
   470                           	callstack 0
   471   000011                     ___aomod@divisor:
   472                           	callstack 0
   473                           
   474                           ; 8 bytes @ 0x10
   475   000011                     	ds	1
   476   000012                     color_read_Red@tmp:
   477                           	callstack 0
   478   000012                     color_read_Green@tmp:
   479                           	callstack 0
   480   000012                     color_read_Blue@tmp:
   481                           	callstack 0
   482   000012                     color_read_Clear@tmp:
   483                           	callstack 0
   484   000012                     fputs@s:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x11
   488   000012                     	ds	2
   489   000014                     color_read_RGBC@temp:
   490                           	callstack 0
   491   000014                     fputs@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x13
   495   000014                     	ds	2
   496   000016                     fputs@c:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x15
   500   000016                     	ds	1
   501   000017                     fputs@i:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x16
   505   000017                     	ds	2
   506   000019                     ___aodiv@counter:
   507                           	callstack 0
   508   000019                     ___aomod@counter:
   509                           	callstack 0
   510   000019                     pad@fp:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x18
   514   000019                     	ds	1
   515   00001A                     ___aodiv@sign:
   516                           	callstack 0
   517   00001A                     ___aomod@sign:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x19
   521   00001A                     	ds	1
   522   00001B                     ?_abs:
   523                           	callstack 0
   524   00001B                     pad@buf:
   525                           	callstack 0
   526   00001B                     abs@a:
   527                           	callstack 0
   528   00001B                     ___aodiv@quotient:
   529                           	callstack 0
   530                           
   531                           ; 8 bytes @ 0x1A
   532   00001B                     	ds	2
   533   00001D                     ??_abs:
   534   00001D                     pad@p:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x1C
   538   00001D                     	ds	2
   539   00001F                     ??_pad:
   540                           
   541                           ; 1 bytes @ 0x1E
   542   00001F                     	ds	1
   543   000020                     pad@i:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x1F
   547   000020                     	ds	2
   548   000022                     pad@w:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x21
   552   000022                     	ds	2
   553   000024                     dtoa@fp:
   554                           	callstack 0
   555                           
   556                           ; 2 bytes @ 0x23
   557   000024                     	ds	2
   558   000026                     dtoa@d:
   559                           	callstack 0
   560                           
   561                           ; 8 bytes @ 0x25
   562   000026                     	ds	8
   563   00002E                     ??_dtoa:
   564                           
   565                           ; 1 bytes @ 0x2D
   566   00002E                     	ds	8
   567   000036                     _dtoa$2398:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x35
   571   000036                     	ds	2
   572   000038                     dtoa@p:
   573                           	callstack 0
   574                           
   575                           ; 2 bytes @ 0x37
   576   000038                     	ds	2
   577   00003A                     dtoa@w:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x39
   581   00003A                     	ds	2
   582   00003C                     dtoa@n:
   583                           	callstack 0
   584                           
   585                           ; 8 bytes @ 0x3B
   586   00003C                     	ds	8
   587   000044                     dtoa@s:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x43
   591   000044                     	ds	1
   592   000045                     dtoa@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x44
   596   000045                     	ds	2
   597   000047                     vfpfcnvrt@fp:
   598                           	callstack 0
   599                           
   600                           ; 2 bytes @ 0x46
   601   000047                     	ds	2
   602   000049                     vfpfcnvrt@fmt:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x48
   606   000049                     	ds	2
   607   00004B                     vfpfcnvrt@ap:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x4A
   611   00004B                     	ds	2
   612   00004D                     ??_vfpfcnvrt:
   613                           
   614                           ; 1 bytes @ 0x4C
   615   00004D                     	ds	2
   616   00004F                     
   617                           ; 1 bytes @ 0x4E
   618 ;;
   619 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   620 ;;
   621 ;; *************** function _main *****************
   622 ;; Defined at:
   623 ;;		line 79 in file "main.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;  buf           100    0[BANK1 ] unsigned char [100]
   628 ;;  RGBC            8  100[BANK1 ] struct RGBC_val
   629 ;; Return value:  Size  Location     Type
   630 ;;                  1    wreg      void 
   631 ;; Registers used:
   632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   639 ;;      Locals:         0       0     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
   640 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   641 ;;      Totals:         0       2     108       0       0       0       0       0       0       0       0       0       
      +0       0       0
   642 ;;Total ram usage:      110 bytes
   643 ;; Hardware stack levels required when called: 15
   644 ;; This function calls:
   645 ;;		_RGBC2Serial
   646 ;;		_colorVal2String
   647 ;;		_color_click_init
   648 ;;		_color_read_RGBC
   649 ;;		_initUSART4
   650 ;;		_tricolorLED
   651 ;; This function is called by:
   652 ;;		Startup code after reset
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text0
   657   001594                     __ptext0:
   658                           	callstack 0
   659   001594                     _main:
   660                           	callstack 16
   661   001594                     
   662                           ;main.c: 81:     tricolorLED();
   663   001594  EC1D  F00E         	call	_tricolorLED	;wreg free
   664   001598                     
   665                           ;main.c: 82:     TRISHbits.TRISH3 = 0;
   666   001598  9688               	bcf	136,3,c	;volatile
   667   00159A                     
   668                           ;main.c: 83:     LATHbits.LATH3 = 0;
   669   00159A  9680               	bcf	128,3,c	;volatile
   670   00159C                     
   671                           ;main.c: 85:     RGBC_val RGBC;;main.c: 86:     char buf[100];;main.c: 87:     initUSART
      +                          4();
   672   00159C  ECD3  F00D         	call	_initUSART4	;wreg free
   673   0015A0                     
   674                           ;main.c: 88:     color_click_init();
   675   0015A0  EC3B  F00D         	call	_color_click_init	;wreg free
   676   0015A4                     l2629:
   677                           
   678                           ;main.c: 92:         color_read_RGBC(&RGBC);
   679   0015A4  0ED4               	movlw	low main@RGBC
   680   0015A6  6E14               	movwf	color_read_RGBC@temp^0,c
   681   0015A8  0E01               	movlw	high main@RGBC
   682   0015AA  6E15               	movwf	(color_read_RGBC@temp+1)^0,c
   683   0015AC  EC7C  F00B         	call	_color_read_RGBC	;wreg free
   684   0015B0                     
   685                           ;main.c: 93:         LATHbits.LATH3 = !LATHbits.LATH3;
   686   0015B0  A680               	btfss	128,3,c	;volatile
   687   0015B2  EFDD  F00A         	goto	u1631
   688   0015B6  EFE2  F00A         	goto	u1630
   689   0015BA                     u1631:
   690   0015BA  0100               	movlb	0	; () banked
   691   0015BC  6B8F               	clrf	??_main& (0+255),b
   692   0015BE  2B8F               	incf	??_main& (0+255),f,b
   693   0015C0  EFE4  F00A         	goto	u1648
   694   0015C4                     u1630:
   695   0015C4  0100               	movlb	0	; () banked
   696   0015C6  6B8F               	clrf	??_main& (0+255),b
   697   0015C8                     u1648:
   698   0015C8  478F               	rlncf	??_main& (0+255),f,b
   699   0015CA  478F               	rlncf	??_main& (0+255),f,b
   700   0015CC  478F               	rlncf	??_main& (0+255),f,b
   701   0015CE  5080               	movf	128,w,c	;volatile
   702   0015D0  198F               	xorwf	??_main& (0+255),w,b
   703   0015D2  0BF7               	andlw	-9
   704   0015D4  198F               	xorwf	??_main& (0+255),w,b
   705   0015D6  6E80               	movwf	128,c	;volatile
   706   0015D8                     
   707                           ; BSR set to: 0
   708                           ;main.c: 94:         _delay((unsigned long)((500)*(64000000/4000.0)));
   709   0015D8  0E29               	movlw	41
   710   0015DA  0100               	movlb	0	; () banked
   711   0015DC  6F90               	movwf	(??_main+1)& (0+255),b
   712   0015DE  0E96               	movlw	150
   713   0015E0  6F8F               	movwf	??_main& (0+255),b
   714   0015E2  0E7F               	movlw	127
   715   0015E4                     u1657:
   716   0015E4  2EE8               	decfsz	wreg,f,c
   717   0015E6  D7FE               	bra	u1657
   718   0015E8  2F8F               	decfsz	??_main& (0+255),f,b
   719   0015EA  D7FC               	bra	u1657
   720   0015EC  2F90               	decfsz	(??_main+1)& (0+255),f,b
   721   0015EE  D7FA               	bra	u1657
   722   0015F0                     
   723                           ;main.c: 95:         colorVal2String(buf, &RGBC);
   724   0015F0  0E70               	movlw	low main@buf
   725   0015F2  0100               	movlb	0	; () banked
   726   0015F4  6F8B               	movwf	colorVal2String@buf& (0+255),b
   727   0015F6  0E01               	movlw	high main@buf
   728   0015F8  6F8C               	movwf	(colorVal2String@buf+1)& (0+255),b
   729   0015FA  0ED4               	movlw	low main@RGBC
   730   0015FC  6F8D               	movwf	colorVal2String@temp& (0+255),b
   731   0015FE  0E01               	movlw	high main@RGBC
   732   001600  6F8E               	movwf	(colorVal2String@temp+1)& (0+255),b
   733   001602  EC4A  F00B         	call	_colorVal2String	;wreg free
   734   001606                     
   735                           ;main.c: 96:         RGBC2Serial(buf);
   736   001606  0E70               	movlw	low main@buf
   737   001608  6E0E               	movwf	RGBC2Serial@str^0,c
   738   00160A  0E01               	movlw	high main@buf
   739   00160C  6E0F               	movwf	(RGBC2Serial@str+1)^0,c
   740   00160E  ECC0  F00D         	call	_RGBC2Serial	;wreg free
   741   001612  EFD2  F00A         	goto	l2629
   742   001616  EF19  F000         	goto	start
   743   00161A                     __end_of_main:
   744                           	callstack 0
   745                           
   746 ;; *************** function _tricolorLED *****************
   747 ;; Defined at:
   748 ;;		line 103 in file "color.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		None
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; Hardware stack levels required when called: 6
   769 ;; This function calls:
   770 ;;		Nothing
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           	psect	text1
   777   001C3A                     __ptext1:
   778                           	callstack 0
   779   001C3A                     _tricolorLED:
   780                           	callstack 24
   781   001C3A                     
   782                           ;color.c: 105:     TRISGbits.TRISG0 = 0;
   783   001C3A  9087               	bcf	135,0,c	;volatile
   784                           
   785                           ;color.c: 106:     LATGbits.LATG0 = 1;
   786   001C3C  807F               	bsf	127,0,c	;volatile
   787                           
   788                           ;color.c: 107:     TRISAbits.TRISA4 = 0;
   789   001C3E  9881               	bcf	129,4,c	;volatile
   790                           
   791                           ;color.c: 108:     LATAbits.LATA4 = 1;
   792   001C40  8879               	bsf	121,4,c	;volatile
   793                           
   794                           ;color.c: 109:     TRISFbits.TRISF7 = 0;
   795   001C42  9E86               	bcf	134,7,c	;volatile
   796                           
   797                           ;color.c: 110:     LATFbits.LATF7 = 1;
   798   001C44  8E7E               	bsf	126,7,c	;volatile
   799                           
   800                           ;color.c: 111:     TRISAbits.TRISA3 = 0;
   801   001C46  9681               	bcf	129,3,c	;volatile
   802                           
   803                           ;color.c: 112:     LATAbits.LATA3 = 1;
   804   001C48  8679               	bsf	121,3,c	;volatile
   805                           
   806                           ;color.c: 113:     TRISEbits.TRISE7 = 0;
   807   001C4A  9E85               	bcf	133,7,c	;volatile
   808                           
   809                           ;color.c: 114:     LATEbits.LATE7 = 1;
   810   001C4C  8E7D               	bsf	125,7,c	;volatile
   811   001C4E  0012               	return		;funcret
   812   001C50                     __end_of_tricolorLED:
   813                           	callstack 0
   814                           
   815 ;; *************** function _initUSART4 *****************
   816 ;; Defined at:
   817 ;;		line 4 in file "../lab-5-areeb-atulit.X/serial.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;		None
   820 ;; Auto vars:     Size  Location     Type
   821 ;;		None
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, status,2
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   835 ;;Total ram usage:        0 bytes
   836 ;; Hardware stack levels used: 1
   837 ;; Hardware stack levels required when called: 6
   838 ;; This function calls:
   839 ;;		Nothing
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           	psect	text2
   846   001BA6                     __ptext2:
   847                           	callstack 0
   848   001BA6                     _initUSART4:
   849                           	callstack 24
   850   001BA6                     
   851                           ;../lab-5-areeb-atulit.X/serial.c: 8:     RC0PPS = 0x12;
   852   001BA6  0E12               	movlw	18
   853   001BA8  010E               	movlb	14	; () banked
   854   001BAA  6F62               	movwf	98,b	;volatile
   855                           
   856                           ;../lab-5-areeb-atulit.X/serial.c: 9:     RX4PPS = 0x11;
   857   001BAC  0E11               	movlw	17
   858   001BAE  6F15               	movwf	21,b	;volatile
   859   001BB0                     
   860                           ; BSR set to: 14
   861                           ;../lab-5-areeb-atulit.X/serial.c: 10:     BAUD4CONbits.BRG16 = 0;
   862   001BB0  97E9               	bcf	233,3,b	;volatile
   863   001BB2                     
   864                           ; BSR set to: 14
   865                           ;../lab-5-areeb-atulit.X/serial.c: 11:     TX4STAbits.BRGH = 0;
   866   001BB2  95E8               	bcf	232,2,b	;volatile
   867                           
   868                           ;../lab-5-areeb-atulit.X/serial.c: 12:     SP4BRGL = 103;
   869   001BB4  0E67               	movlw	103
   870   001BB6  6FE5               	movwf	229,b	;volatile
   871                           
   872                           ;../lab-5-areeb-atulit.X/serial.c: 13:     SP4BRGH = 0;
   873   001BB8  0E00               	movlw	0
   874   001BBA  6FE6               	movwf	230,b	;volatile
   875   001BBC                     
   876                           ; BSR set to: 14
   877                           ;../lab-5-areeb-atulit.X/serial.c: 15:     RC4STAbits.CREN = 1;
   878   001BBC  89E7               	bsf	231,4,b	;volatile
   879   001BBE                     
   880                           ; BSR set to: 14
   881                           ;../lab-5-areeb-atulit.X/serial.c: 16:     TX4STAbits.TXEN = 1;
   882   001BBE  8BE8               	bsf	232,5,b	;volatile
   883   001BC0                     
   884                           ; BSR set to: 14
   885                           ;../lab-5-areeb-atulit.X/serial.c: 17:     RC4STAbits.SPEN = 1;
   886   001BC0  8FE7               	bsf	231,7,b	;volatile
   887   001BC2                     
   888                           ; BSR set to: 14
   889                           ;../lab-5-areeb-atulit.X/serial.c: 18:     PIE4bits.RC4IE=1;
   890   001BC2  872D               	bsf	45,3,b	;volatile
   891   001BC4                     
   892                           ; BSR set to: 14
   893                           ;../lab-5-areeb-atulit.X/serial.c: 19:     PIE4bits.TX4IE=1;
   894   001BC4  852D               	bsf	45,2,b	;volatile
   895   001BC6                     
   896                           ; BSR set to: 14
   897   001BC6  0012               	return		;funcret
   898   001BC8                     __end_of_initUSART4:
   899                           	callstack 0
   900                           
   901 ;; *************** function _color_read_RGBC *****************
   902 ;; Defined at:
   903 ;;		line 92 in file "color.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;  temp            2   19[COMRAM] PTR struct RGBC_val
   906 ;;		 -> main@RGBC(8), 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   922 ;;Total ram usage:        2 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 9
   925 ;; This function calls:
   926 ;;		_color_read_Blue
   927 ;;		_color_read_Clear
   928 ;;		_color_read_Green
   929 ;;		_color_read_Red
   930 ;; This function is called by:
   931 ;;		_main
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           	psect	text3
   936   0016F8                     __ptext3:
   937                           	callstack 0
   938   0016F8                     _color_read_RGBC:
   939                           	callstack 21
   940   0016F8                     
   941                           ;color.c: 93:     temp->R = color_read_Red();
   942   0016F8  ECD4  F00B         	call	_color_read_Red	;wreg free
   943   0016FC  C014  FFD9         	movff	color_read_RGBC@temp,fsr2l
   944   001700  C015  FFDA         	movff	color_read_RGBC@temp+1,fsr2h
   945   001704  C00D  FFDE         	movff	?_color_read_Red,postinc2
   946   001708  C00E  FFDD         	movff	?_color_read_Red+1,postdec2
   947                           
   948                           ;color.c: 94:     temp->B = color_read_Blue();
   949   00170C  EC4C  F00C         	call	_color_read_Blue	;wreg free
   950   001710  EE20 F004          	lfsr	2,4
   951   001714  5014               	movf	color_read_RGBC@temp^0,w,c
   952   001716  26D9               	addwf	fsr2l,f,c
   953   001718  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
   954   00171A  22DA               	addwfc	fsr2h,f,c
   955   00171C  C00D  FFDE         	movff	?_color_read_Blue,postinc2
   956   001720  C00E  FFDD         	movff	?_color_read_Blue+1,postdec2
   957                           
   958                           ;color.c: 95:     temp->G = color_read_Green();
   959   001724  ECFC  F00B         	call	_color_read_Green	;wreg free
   960   001728  EE20 F002          	lfsr	2,2
   961   00172C  5014               	movf	color_read_RGBC@temp^0,w,c
   962   00172E  26D9               	addwf	fsr2l,f,c
   963   001730  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
   964   001732  22DA               	addwfc	fsr2h,f,c
   965   001734  C00D  FFDE         	movff	?_color_read_Green,postinc2
   966   001738  C00E  FFDD         	movff	?_color_read_Green+1,postdec2
   967                           
   968                           ;color.c: 96:     temp->C = color_read_Clear();
   969   00173C  EC24  F00C         	call	_color_read_Clear	;wreg free
   970   001740  EE20 F006          	lfsr	2,6
   971   001744  5014               	movf	color_read_RGBC@temp^0,w,c
   972   001746  26D9               	addwf	fsr2l,f,c
   973   001748  5015               	movf	(color_read_RGBC@temp+1)^0,w,c
   974   00174A  22DA               	addwfc	fsr2h,f,c
   975   00174C  C00D  FFDE         	movff	?_color_read_Clear,postinc2
   976   001750  C00E  FFDD         	movff	?_color_read_Clear+1,postdec2
   977   001754  0012               	return		;funcret
   978   001756                     __end_of_color_read_RGBC:
   979                           	callstack 0
   980                           
   981 ;; *************** function _color_read_Red *****************
   982 ;; Defined at:
   983 ;;		line 33 in file "color.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;  tmp             2   17[COMRAM] unsigned int 
   988 ;; Return value:  Size  Location     Type
   989 ;;                  2   12[COMRAM] unsigned int 
   990 ;; Registers used:
   991 ;;		wreg, status,2, status,0, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : 0/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   997 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   999 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1000 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1001 ;;Total ram usage:        7 bytes
  1002 ;; Hardware stack levels used: 1
  1003 ;; Hardware stack levels required when called: 8
  1004 ;; This function calls:
  1005 ;;		_I2C_2_Master_Read
  1006 ;;		_I2C_2_Master_RepStart
  1007 ;;		_I2C_2_Master_Start
  1008 ;;		_I2C_2_Master_Stop
  1009 ;;		_I2C_2_Master_Write
  1010 ;; This function is called by:
  1011 ;;		_color_read_RGBC
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text4
  1016   0017A8                     __ptext4:
  1017                           	callstack 0
  1018   0017A8                     _color_read_Red:
  1019                           	callstack 21
  1020   0017A8                     
  1021                           ;color.c: 35:  unsigned int tmp;;color.c: 36:  I2C_2_Master_Start();
  1022   0017A8  EC44  F00E         	call	_I2C_2_Master_Start	;wreg free
  1023                           
  1024                           ;color.c: 37:  I2C_2_Master_Write(0x52 | 0x00);
  1025   0017AC  0E52               	movlw	82
  1026   0017AE  EC28  F00E         	call	_I2C_2_Master_Write
  1027                           
  1028                           ;color.c: 38:  I2C_2_Master_Write(0xA0 | 0x16);
  1029   0017B2  0EB6               	movlw	182
  1030   0017B4  EC28  F00E         	call	_I2C_2_Master_Write
  1031                           
  1032                           ;color.c: 39:  I2C_2_Master_RepStart();
  1033   0017B8  EC3A  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1034                           
  1035                           ;color.c: 40:  I2C_2_Master_Write(0x52 | 0x01);
  1036   0017BC  0E53               	movlw	83
  1037   0017BE  EC28  F00E         	call	_I2C_2_Master_Write
  1038                           
  1039                           ;color.c: 41:  tmp=I2C_2_Master_Read(1);
  1040   0017C2  0E01               	movlw	1
  1041   0017C4  ECBE  F00C         	call	_I2C_2_Master_Read
  1042   0017C8  6E0F               	movwf	??_color_read_Red^0,c
  1043   0017CA  500F               	movf	??_color_read_Red^0,w,c
  1044   0017CC  6E12               	movwf	color_read_Red@tmp^0,c
  1045   0017CE  6A13               	clrf	(color_read_Red@tmp+1)^0,c
  1046                           
  1047                           ;color.c: 42:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1048   0017D0  0E00               	movlw	0
  1049   0017D2  ECBE  F00C         	call	_I2C_2_Master_Read
  1050   0017D6  6E0F               	movwf	??_color_read_Red^0,c
  1051   0017D8  500F               	movf	??_color_read_Red^0,w,c
  1052   0017DA  6E11               	movwf	(??_color_read_Red+2)^0,c
  1053   0017DC  6A10               	clrf	(??_color_read_Red+1)^0,c
  1054   0017DE  5012               	movf	color_read_Red@tmp^0,w,c
  1055   0017E0  1010               	iorwf	(??_color_read_Red+1)^0,w,c
  1056   0017E2  6E12               	movwf	color_read_Red@tmp^0,c
  1057   0017E4  5013               	movf	(color_read_Red@tmp+1)^0,w,c
  1058   0017E6  1011               	iorwf	(??_color_read_Red+2)^0,w,c
  1059   0017E8  6E13               	movwf	(color_read_Red@tmp+1)^0,c
  1060                           
  1061                           ;color.c: 43:  I2C_2_Master_Stop();
  1062   0017EA  EC3F  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1063   0017EE                     
  1064                           ;color.c: 44:  return tmp;
  1065   0017EE  C012  F00D         	movff	color_read_Red@tmp,?_color_read_Red
  1066   0017F2  C013  F00E         	movff	color_read_Red@tmp+1,?_color_read_Red+1
  1067   0017F6  0012               	return		;funcret
  1068   0017F8                     __end_of_color_read_Red:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _color_read_Green *****************
  1072 ;; Defined at:
  1073 ;;		line 47 in file "color.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  tmp             2   17[COMRAM] unsigned int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   12[COMRAM] unsigned int 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1089 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1090 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1091 ;;Total ram usage:        7 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 8
  1094 ;; This function calls:
  1095 ;;		_I2C_2_Master_Read
  1096 ;;		_I2C_2_Master_RepStart
  1097 ;;		_I2C_2_Master_Start
  1098 ;;		_I2C_2_Master_Stop
  1099 ;;		_I2C_2_Master_Write
  1100 ;; This function is called by:
  1101 ;;		_color_read_RGBC
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106   0017F8                     __ptext5:
  1107                           	callstack 0
  1108   0017F8                     _color_read_Green:
  1109                           	callstack 21
  1110   0017F8                     
  1111                           ;color.c: 49:  unsigned int tmp;;color.c: 50:  I2C_2_Master_Start();
  1112   0017F8  EC44  F00E         	call	_I2C_2_Master_Start	;wreg free
  1113                           
  1114                           ;color.c: 51:  I2C_2_Master_Write(0x52 | 0x00);
  1115   0017FC  0E52               	movlw	82
  1116   0017FE  EC28  F00E         	call	_I2C_2_Master_Write
  1117                           
  1118                           ;color.c: 52:  I2C_2_Master_Write(0xA0 | 0x18);
  1119   001802  0EB8               	movlw	184
  1120   001804  EC28  F00E         	call	_I2C_2_Master_Write
  1121                           
  1122                           ;color.c: 53:  I2C_2_Master_RepStart();
  1123   001808  EC3A  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1124                           
  1125                           ;color.c: 54:  I2C_2_Master_Write(0x52 | 0x01);
  1126   00180C  0E53               	movlw	83
  1127   00180E  EC28  F00E         	call	_I2C_2_Master_Write
  1128                           
  1129                           ;color.c: 55:  tmp=I2C_2_Master_Read(1);
  1130   001812  0E01               	movlw	1
  1131   001814  ECBE  F00C         	call	_I2C_2_Master_Read
  1132   001818  6E0F               	movwf	??_color_read_Green^0,c
  1133   00181A  500F               	movf	??_color_read_Green^0,w,c
  1134   00181C  6E12               	movwf	color_read_Green@tmp^0,c
  1135   00181E  6A13               	clrf	(color_read_Green@tmp+1)^0,c
  1136                           
  1137                           ;color.c: 56:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1138   001820  0E00               	movlw	0
  1139   001822  ECBE  F00C         	call	_I2C_2_Master_Read
  1140   001826  6E0F               	movwf	??_color_read_Green^0,c
  1141   001828  500F               	movf	??_color_read_Green^0,w,c
  1142   00182A  6E11               	movwf	(??_color_read_Green+2)^0,c
  1143   00182C  6A10               	clrf	(??_color_read_Green+1)^0,c
  1144   00182E  5012               	movf	color_read_Green@tmp^0,w,c
  1145   001830  1010               	iorwf	(??_color_read_Green+1)^0,w,c
  1146   001832  6E12               	movwf	color_read_Green@tmp^0,c
  1147   001834  5013               	movf	(color_read_Green@tmp+1)^0,w,c
  1148   001836  1011               	iorwf	(??_color_read_Green+2)^0,w,c
  1149   001838  6E13               	movwf	(color_read_Green@tmp+1)^0,c
  1150                           
  1151                           ;color.c: 57:  I2C_2_Master_Stop();
  1152   00183A  EC3F  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1153   00183E                     
  1154                           ;color.c: 58:  return tmp;
  1155   00183E  C012  F00D         	movff	color_read_Green@tmp,?_color_read_Green
  1156   001842  C013  F00E         	movff	color_read_Green@tmp+1,?_color_read_Green+1
  1157   001846  0012               	return		;funcret
  1158   001848                     __end_of_color_read_Green:
  1159                           	callstack 0
  1160                           
  1161 ;; *************** function _color_read_Clear *****************
  1162 ;; Defined at:
  1163 ;;		line 75 in file "color.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;  tmp             2   17[COMRAM] unsigned int 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  2   12[COMRAM] unsigned int 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1179 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1180 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1181 ;;Total ram usage:        7 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 8
  1184 ;; This function calls:
  1185 ;;		_I2C_2_Master_Read
  1186 ;;		_I2C_2_Master_RepStart
  1187 ;;		_I2C_2_Master_Start
  1188 ;;		_I2C_2_Master_Stop
  1189 ;;		_I2C_2_Master_Write
  1190 ;; This function is called by:
  1191 ;;		_color_read_RGBC
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text6
  1196   001848                     __ptext6:
  1197                           	callstack 0
  1198   001848                     _color_read_Clear:
  1199                           	callstack 21
  1200   001848                     
  1201                           ;color.c: 77:  unsigned int tmp;;color.c: 78:  I2C_2_Master_Start();
  1202   001848  EC44  F00E         	call	_I2C_2_Master_Start	;wreg free
  1203                           
  1204                           ;color.c: 79:  I2C_2_Master_Write(0x52 | 0x00);
  1205   00184C  0E52               	movlw	82
  1206   00184E  EC28  F00E         	call	_I2C_2_Master_Write
  1207                           
  1208                           ;color.c: 80:  I2C_2_Master_Write(0xA0 | 0x14);
  1209   001852  0EB4               	movlw	180
  1210   001854  EC28  F00E         	call	_I2C_2_Master_Write
  1211                           
  1212                           ;color.c: 81:  I2C_2_Master_RepStart();
  1213   001858  EC3A  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1214                           
  1215                           ;color.c: 82:  I2C_2_Master_Write(0x52 | 0x01);
  1216   00185C  0E53               	movlw	83
  1217   00185E  EC28  F00E         	call	_I2C_2_Master_Write
  1218                           
  1219                           ;color.c: 83:  tmp=I2C_2_Master_Read(1);
  1220   001862  0E01               	movlw	1
  1221   001864  ECBE  F00C         	call	_I2C_2_Master_Read
  1222   001868  6E0F               	movwf	??_color_read_Clear^0,c
  1223   00186A  500F               	movf	??_color_read_Clear^0,w,c
  1224   00186C  6E12               	movwf	color_read_Clear@tmp^0,c
  1225   00186E  6A13               	clrf	(color_read_Clear@tmp+1)^0,c
  1226                           
  1227                           ;color.c: 84:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1228   001870  0E00               	movlw	0
  1229   001872  ECBE  F00C         	call	_I2C_2_Master_Read
  1230   001876  6E0F               	movwf	??_color_read_Clear^0,c
  1231   001878  500F               	movf	??_color_read_Clear^0,w,c
  1232   00187A  6E11               	movwf	(??_color_read_Clear+2)^0,c
  1233   00187C  6A10               	clrf	(??_color_read_Clear+1)^0,c
  1234   00187E  5012               	movf	color_read_Clear@tmp^0,w,c
  1235   001880  1010               	iorwf	(??_color_read_Clear+1)^0,w,c
  1236   001882  6E12               	movwf	color_read_Clear@tmp^0,c
  1237   001884  5013               	movf	(color_read_Clear@tmp+1)^0,w,c
  1238   001886  1011               	iorwf	(??_color_read_Clear+2)^0,w,c
  1239   001888  6E13               	movwf	(color_read_Clear@tmp+1)^0,c
  1240                           
  1241                           ;color.c: 85:  I2C_2_Master_Stop();
  1242   00188A  EC3F  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1243   00188E                     
  1244                           ;color.c: 86:  return tmp;
  1245   00188E  C012  F00D         	movff	color_read_Clear@tmp,?_color_read_Clear
  1246   001892  C013  F00E         	movff	color_read_Clear@tmp+1,?_color_read_Clear+1
  1247   001896  0012               	return		;funcret
  1248   001898                     __end_of_color_read_Clear:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _color_read_Blue *****************
  1252 ;; Defined at:
  1253 ;;		line 61 in file "color.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;  tmp             2   17[COMRAM] unsigned int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2   12[COMRAM] unsigned int 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1269 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1270 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1271 ;;Total ram usage:        7 bytes
  1272 ;; Hardware stack levels used: 1
  1273 ;; Hardware stack levels required when called: 8
  1274 ;; This function calls:
  1275 ;;		_I2C_2_Master_Read
  1276 ;;		_I2C_2_Master_RepStart
  1277 ;;		_I2C_2_Master_Start
  1278 ;;		_I2C_2_Master_Stop
  1279 ;;		_I2C_2_Master_Write
  1280 ;; This function is called by:
  1281 ;;		_color_read_RGBC
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text7
  1286   001898                     __ptext7:
  1287                           	callstack 0
  1288   001898                     _color_read_Blue:
  1289                           	callstack 21
  1290   001898                     
  1291                           ;color.c: 63:  unsigned int tmp;;color.c: 64:  I2C_2_Master_Start();
  1292   001898  EC44  F00E         	call	_I2C_2_Master_Start	;wreg free
  1293                           
  1294                           ;color.c: 65:  I2C_2_Master_Write(0x52 | 0x00);
  1295   00189C  0E52               	movlw	82
  1296   00189E  EC28  F00E         	call	_I2C_2_Master_Write
  1297                           
  1298                           ;color.c: 66:  I2C_2_Master_Write(0xA0 | 0x1A);
  1299   0018A2  0EBA               	movlw	186
  1300   0018A4  EC28  F00E         	call	_I2C_2_Master_Write
  1301                           
  1302                           ;color.c: 67:  I2C_2_Master_RepStart();
  1303   0018A8  EC3A  F00E         	call	_I2C_2_Master_RepStart	;wreg free
  1304                           
  1305                           ;color.c: 68:  I2C_2_Master_Write(0x52 | 0x01);
  1306   0018AC  0E53               	movlw	83
  1307   0018AE  EC28  F00E         	call	_I2C_2_Master_Write
  1308                           
  1309                           ;color.c: 69:  tmp=I2C_2_Master_Read(1);
  1310   0018B2  0E01               	movlw	1
  1311   0018B4  ECBE  F00C         	call	_I2C_2_Master_Read
  1312   0018B8  6E0F               	movwf	??_color_read_Blue^0,c
  1313   0018BA  500F               	movf	??_color_read_Blue^0,w,c
  1314   0018BC  6E12               	movwf	color_read_Blue@tmp^0,c
  1315   0018BE  6A13               	clrf	(color_read_Blue@tmp+1)^0,c
  1316                           
  1317                           ;color.c: 70:  tmp=tmp | (I2C_2_Master_Read(0)<<8);
  1318   0018C0  0E00               	movlw	0
  1319   0018C2  ECBE  F00C         	call	_I2C_2_Master_Read
  1320   0018C6  6E0F               	movwf	??_color_read_Blue^0,c
  1321   0018C8  500F               	movf	??_color_read_Blue^0,w,c
  1322   0018CA  6E11               	movwf	(??_color_read_Blue+2)^0,c
  1323   0018CC  6A10               	clrf	(??_color_read_Blue+1)^0,c
  1324   0018CE  5012               	movf	color_read_Blue@tmp^0,w,c
  1325   0018D0  1010               	iorwf	(??_color_read_Blue+1)^0,w,c
  1326   0018D2  6E12               	movwf	color_read_Blue@tmp^0,c
  1327   0018D4  5013               	movf	(color_read_Blue@tmp+1)^0,w,c
  1328   0018D6  1011               	iorwf	(??_color_read_Blue+2)^0,w,c
  1329   0018D8  6E13               	movwf	(color_read_Blue@tmp+1)^0,c
  1330                           
  1331                           ;color.c: 71:  I2C_2_Master_Stop();
  1332   0018DA  EC3F  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1333   0018DE                     
  1334                           ;color.c: 72:  return tmp;
  1335   0018DE  C012  F00D         	movff	color_read_Blue@tmp,?_color_read_Blue
  1336   0018E2  C013  F00E         	movff	color_read_Blue@tmp+1,?_color_read_Blue+1
  1337   0018E6  0012               	return		;funcret
  1338   0018E8                     __end_of_color_read_Blue:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _I2C_2_Master_RepStart *****************
  1342 ;; Defined at:
  1343 ;;		line 33 in file "i2c.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 7
  1364 ;; This function calls:
  1365 ;;		_I2C_2_Master_Idle
  1366 ;; This function is called by:
  1367 ;;		_color_read_Red
  1368 ;;		_color_read_Green
  1369 ;;		_color_read_Blue
  1370 ;;		_color_read_Clear
  1371 ;; This function uses a non-reentrant model
  1372 ;;
  1373                           
  1374                           	psect	text8
  1375   001C74                     __ptext8:
  1376                           	callstack 0
  1377   001C74                     _I2C_2_Master_RepStart:
  1378                           	callstack 21
  1379   001C74                     
  1380                           ;i2c.c: 35:   I2C_2_Master_Idle();
  1381   001C74  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1382   001C78                     
  1383                           ;i2c.c: 36:   SSP2CON2bits.RSEN = 1;
  1384   001C78  010E               	movlb	14	; () banked
  1385   001C7A  83DA               	bsf	218,1,b	;volatile
  1386   001C7C                     
  1387                           ; BSR set to: 14
  1388   001C7C  0012               	return		;funcret
  1389   001C7E                     __end_of_I2C_2_Master_RepStart:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _I2C_2_Master_Read *****************
  1393 ;; Defined at:
  1394 ;;		line 51 in file "i2c.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;  ack             1    wreg     unsigned char 
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  ack             1   10[COMRAM] unsigned char 
  1399 ;;  tmp             1   11[COMRAM] unsigned char 
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      unsigned char 
  1402 ;; Registers used:
  1403 ;;		wreg, status,2, status,0, cstack
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1411 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1412 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1413 ;;Total ram usage:        3 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; Hardware stack levels required when called: 7
  1416 ;; This function calls:
  1417 ;;		_I2C_2_Master_Idle
  1418 ;; This function is called by:
  1419 ;;		_color_read_Red
  1420 ;;		_color_read_Green
  1421 ;;		_color_read_Blue
  1422 ;;		_color_read_Clear
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text9
  1427   00197C                     __ptext9:
  1428                           	callstack 0
  1429   00197C                     _I2C_2_Master_Read:
  1430                           	callstack 21
  1431                           
  1432                           ; BSR set to: 14
  1433                           ;incstack = 0
  1434                           ;I2C_2_Master_Read@ack stored from wreg
  1435   00197C  6E0B               	movwf	I2C_2_Master_Read@ack^0,c
  1436   00197E                     
  1437                           ;i2c.c: 51: unsigned char I2C_2_Master_Read(unsigned char ack);i2c.c: 52: {;i2c.c: 53:  
      +                           unsigned char tmp;;i2c.c: 54:   I2C_2_Master_Idle();
  1438   00197E  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1439   001982                     
  1440                           ;i2c.c: 55:   SSP2CON2bits.RCEN = 1;
  1441   001982  010E               	movlb	14	; () banked
  1442   001984  87DA               	bsf	218,3,b	;volatile
  1443                           
  1444                           ;i2c.c: 56:   I2C_2_Master_Idle();
  1445   001986  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1446   00198A                     
  1447                           ;i2c.c: 57:   tmp = SSP2BUF;
  1448   00198A  CED5 F00C          	movff	3797,I2C_2_Master_Read@tmp	;volatile
  1449                           
  1450                           ;i2c.c: 58:   I2C_2_Master_Idle();
  1451   00198E  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1452   001992                     
  1453                           ;i2c.c: 59:   SSP2CON2bits.ACKDT = !ack;
  1454   001992  500B               	movf	I2C_2_Master_Read@ack^0,w,c
  1455   001994  B4D8               	btfsc	status,2,c
  1456   001996  EFCF  F00C         	goto	u1581
  1457   00199A  EFD3  F00C         	goto	u1580
  1458   00199E                     u1581:
  1459   00199E  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  1460   0019A0  2A0A               	incf	??_I2C_2_Master_Read^0,f,c
  1461   0019A2  EFD4  F00C         	goto	u1598
  1462   0019A6                     u1580:
  1463   0019A6  6A0A               	clrf	??_I2C_2_Master_Read^0,c
  1464   0019A8                     u1598:
  1465   0019A8  3A0A               	swapf	??_I2C_2_Master_Read^0,f,c
  1466   0019AA  460A               	rlncf	??_I2C_2_Master_Read^0,f,c
  1467   0019AC  010E               	movlb	14	; () banked
  1468   0019AE  51DA               	movf	218,w,b	;volatile
  1469   0019B0  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  1470   0019B2  0BDF               	andlw	-33
  1471   0019B4  180A               	xorwf	??_I2C_2_Master_Read^0,w,c
  1472   0019B6  6FDA               	movwf	218,b	;volatile
  1473   0019B8                     
  1474                           ; BSR set to: 14
  1475                           ;i2c.c: 60:   SSP2CON2bits.ACKEN = 1;
  1476   0019B8  89DA               	bsf	218,4,b	;volatile
  1477   0019BA                     
  1478                           ; BSR set to: 14
  1479                           ;i2c.c: 61:   return tmp;
  1480   0019BA  500C               	movf	I2C_2_Master_Read@tmp^0,w,c
  1481   0019BC                     
  1482                           ; BSR set to: 14
  1483   0019BC  0012               	return		;funcret
  1484   0019BE                     __end_of_I2C_2_Master_Read:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _color_click_init *****************
  1488 ;; Defined at:
  1489 ;;		line 9 in file "color.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg, status,2, status,0, cstack
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1505 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1506 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1507 ;;Total ram usage:        1 bytes
  1508 ;; Hardware stack levels used: 1
  1509 ;; Hardware stack levels required when called: 9
  1510 ;; This function calls:
  1511 ;;		_I2C_2_Master_Init
  1512 ;;		_color_writetoaddr
  1513 ;; This function is called by:
  1514 ;;		_main
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           
  1518                           	psect	text10
  1519   001A76                     __ptext10:
  1520                           	callstack 0
  1521   001A76                     _color_click_init:
  1522                           	callstack 21
  1523   001A76                     
  1524                           ;color.c: 12:     I2C_2_Master_Init();
  1525   001A76  EC6E  F00D         	call	_I2C_2_Master_Init	;wreg free
  1526   001A7A                     
  1527                           ;color.c: 15:   color_writetoaddr(0x00, 0x01);
  1528   001A7A  0E01               	movlw	1
  1529   001A7C  6E0B               	movwf	color_writetoaddr@value^0,c
  1530   001A7E  0E00               	movlw	0
  1531   001A80  ECE4  F00D         	call	_color_writetoaddr
  1532   001A84                     
  1533                           ;color.c: 16:     _delay((unsigned long)((3)*(64000000/4000.0)));
  1534   001A84  0E3F               	movlw	63
  1535   001A86  6E0D               	movwf	??_color_click_init^0,c
  1536   001A88  0E55               	movlw	85
  1537   001A8A                     u1667:
  1538   001A8A  2EE8               	decfsz	wreg,f,c
  1539   001A8C  D7FE               	bra	u1667
  1540   001A8E  2E0D               	decfsz	??_color_click_init^0,f,c
  1541   001A90  D7FC               	bra	u1667
  1542   001A92  F000               	nop	
  1543   001A94                     
  1544                           ;color.c: 19:  color_writetoaddr(0x00, 0x03);
  1545   001A94  0E03               	movlw	3
  1546   001A96  6E0B               	movwf	color_writetoaddr@value^0,c
  1547   001A98  0E00               	movlw	0
  1548   001A9A  ECE4  F00D         	call	_color_writetoaddr
  1549   001A9E                     
  1550                           ;color.c: 22:  color_writetoaddr(0x01, 0xD5);
  1551   001A9E  0ED5               	movlw	213
  1552   001AA0  6E0B               	movwf	color_writetoaddr@value^0,c
  1553   001AA2  0E01               	movlw	1
  1554   001AA4  ECE4  F00D         	call	_color_writetoaddr
  1555   001AA8  0012               	return		;funcret
  1556   001AAA                     __end_of_color_click_init:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _color_writetoaddr *****************
  1560 ;; Defined at:
  1561 ;;		line 25 in file "color.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  address         1    wreg     unsigned char 
  1564 ;;  value           1   10[COMRAM] unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  address         1   11[COMRAM] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1576 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1577 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 8
  1583 ;; This function calls:
  1584 ;;		_I2C_2_Master_Start
  1585 ;;		_I2C_2_Master_Stop
  1586 ;;		_I2C_2_Master_Write
  1587 ;; This function is called by:
  1588 ;;		_color_click_init
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           	psect	text11
  1593   001BC8                     __ptext11:
  1594                           	callstack 0
  1595   001BC8                     _color_writetoaddr:
  1596                           	callstack 21
  1597                           
  1598                           ;incstack = 0
  1599                           ;color_writetoaddr@address stored from wreg
  1600   001BC8  6E0C               	movwf	color_writetoaddr@address^0,c
  1601   001BCA                     
  1602                           ;color.c: 26:     I2C_2_Master_Start();
  1603   001BCA  EC44  F00E         	call	_I2C_2_Master_Start	;wreg free
  1604                           
  1605                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  1606   001BCE  0E52               	movlw	82
  1607   001BD0  EC28  F00E         	call	_I2C_2_Master_Write
  1608                           
  1609                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  1610   001BD4  500C               	movf	color_writetoaddr@address^0,w,c
  1611   001BD6  0980               	iorlw	128
  1612   001BD8  EC28  F00E         	call	_I2C_2_Master_Write
  1613                           
  1614                           ;color.c: 29:     I2C_2_Master_Write(value);
  1615   001BDC  500B               	movf	color_writetoaddr@value^0,w,c
  1616   001BDE  EC28  F00E         	call	_I2C_2_Master_Write
  1617                           
  1618                           ;color.c: 30:     I2C_2_Master_Stop();
  1619   001BE2  EC3F  F00E         	call	_I2C_2_Master_Stop	;wreg free
  1620   001BE6  0012               	return		;funcret
  1621   001BE8                     __end_of_color_writetoaddr:
  1622                           	callstack 0
  1623                           
  1624 ;; *************** function _I2C_2_Master_Write *****************
  1625 ;; Defined at:
  1626 ;;		line 45 in file "i2c.c"
  1627 ;; Parameters:    Size  Location     Type
  1628 ;;  data_byte       1    wreg     unsigned char 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;  data_byte       1    9[COMRAM] unsigned char 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1643 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1644 ;;Total ram usage:        1 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; Hardware stack levels required when called: 7
  1647 ;; This function calls:
  1648 ;;		_I2C_2_Master_Idle
  1649 ;; This function is called by:
  1650 ;;		_color_writetoaddr
  1651 ;;		_color_read_Red
  1652 ;;		_color_read_Green
  1653 ;;		_color_read_Blue
  1654 ;;		_color_read_Clear
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           	psect	text12
  1659   001C50                     __ptext12:
  1660                           	callstack 0
  1661   001C50                     _I2C_2_Master_Write:
  1662                           	callstack 21
  1663                           
  1664                           ;incstack = 0
  1665                           ;I2C_2_Master_Write@data_byte stored from wreg
  1666   001C50  6E0A               	movwf	I2C_2_Master_Write@data_byte^0,c
  1667   001C52                     
  1668                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  1669   001C52  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1670   001C56                     
  1671                           ;i2c.c: 48:   SSP2BUF = data_byte;
  1672   001C56  C00A  FED5         	movff	I2C_2_Master_Write@data_byte,3797	;volatile
  1673   001C5A  0012               	return		;funcret
  1674   001C5C                     __end_of_I2C_2_Master_Write:
  1675                           	callstack 0
  1676                           
  1677 ;; *************** function _I2C_2_Master_Stop *****************
  1678 ;; Defined at:
  1679 ;;		line 39 in file "i2c.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, status,2, status,0, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used: 1
  1699 ;; Hardware stack levels required when called: 7
  1700 ;; This function calls:
  1701 ;;		_I2C_2_Master_Idle
  1702 ;; This function is called by:
  1703 ;;		_color_writetoaddr
  1704 ;;		_color_read_Red
  1705 ;;		_color_read_Green
  1706 ;;		_color_read_Blue
  1707 ;;		_color_read_Clear
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text13
  1712   001C7E                     __ptext13:
  1713                           	callstack 0
  1714   001C7E                     _I2C_2_Master_Stop:
  1715                           	callstack 21
  1716   001C7E                     
  1717                           ;i2c.c: 41:   I2C_2_Master_Idle();
  1718   001C7E  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1719   001C82                     
  1720                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  1721   001C82  010E               	movlb	14	; () banked
  1722   001C84  85DA               	bsf	218,2,b	;volatile
  1723   001C86                     
  1724                           ; BSR set to: 14
  1725   001C86  0012               	return		;funcret
  1726   001C88                     __end_of_I2C_2_Master_Stop:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _I2C_2_Master_Start *****************
  1730 ;; Defined at:
  1731 ;;		line 27 in file "i2c.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 7
  1752 ;; This function calls:
  1753 ;;		_I2C_2_Master_Idle
  1754 ;; This function is called by:
  1755 ;;		_color_writetoaddr
  1756 ;;		_color_read_Red
  1757 ;;		_color_read_Green
  1758 ;;		_color_read_Blue
  1759 ;;		_color_read_Clear
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text14
  1764   001C88                     __ptext14:
  1765                           	callstack 0
  1766   001C88                     _I2C_2_Master_Start:
  1767                           	callstack 21
  1768   001C88                     
  1769                           ;i2c.c: 29:   I2C_2_Master_Idle();
  1770   001C88  EC98  F00D         	call	_I2C_2_Master_Idle	;wreg free
  1771   001C8C                     
  1772                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  1773   001C8C  010E               	movlb	14	; () banked
  1774   001C8E  81DA               	bsf	218,0,b	;volatile
  1775   001C90                     
  1776                           ; BSR set to: 14
  1777   001C90  0012               	return		;funcret
  1778   001C92                     __end_of_I2C_2_Master_Start:
  1779                           	callstack 0
  1780                           
  1781 ;; *************** function _I2C_2_Master_Idle *****************
  1782 ;; Defined at:
  1783 ;;		line 22 in file "i2c.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;		None
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1800 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1801 ;;Total ram usage:        1 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 6
  1804 ;; This function calls:
  1805 ;;		Nothing
  1806 ;; This function is called by:
  1807 ;;		_I2C_2_Master_Start
  1808 ;;		_I2C_2_Master_RepStart
  1809 ;;		_I2C_2_Master_Stop
  1810 ;;		_I2C_2_Master_Write
  1811 ;;		_I2C_2_Master_Read
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text15
  1816   001B30                     __ptext15:
  1817                           	callstack 0
  1818   001B30                     _I2C_2_Master_Idle:
  1819                           	callstack 21
  1820   001B30                     l128:
  1821   001B30  010E               	movlb	14	; () banked
  1822   001B32  B5D8               	btfsc	216,2,b	;volatile
  1823   001B34  EF9E  F00D         	goto	u1531
  1824   001B38  EFA0  F00D         	goto	u1530
  1825   001B3C                     u1531:
  1826   001B3C  EF98  F00D         	goto	l128
  1827   001B40                     u1530:
  1828   001B40                     
  1829                           ; BSR set to: 14
  1830   001B40  CEDA F009          	movff	3802,??_I2C_2_Master_Idle	;volatile
  1831   001B44  0E1F               	movlw	31
  1832   001B46  1609               	andwf	??_I2C_2_Master_Idle^0,f,c
  1833   001B48  A4D8               	btfss	status,2,c
  1834   001B4A  EFA9  F00D         	goto	u1541
  1835   001B4E  EFAB  F00D         	goto	u1540
  1836   001B52                     u1541:
  1837   001B52  EF98  F00D         	goto	l128
  1838   001B56                     u1540:
  1839   001B56                     
  1840                           ; BSR set to: 14
  1841   001B56  0012               	return		;funcret
  1842   001B58                     __end_of_I2C_2_Master_Idle:
  1843                           	callstack 0
  1844                           
  1845 ;; *************** function _I2C_2_Master_Init *****************
  1846 ;; Defined at:
  1847 ;;		line 4 in file "i2c.c"
  1848 ;; Parameters:    Size  Location     Type
  1849 ;;		None
  1850 ;; Auto vars:     Size  Location     Type
  1851 ;;		None
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  1    wreg      void 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1865 ;;Total ram usage:        0 bytes
  1866 ;; Hardware stack levels used: 1
  1867 ;; Hardware stack levels required when called: 6
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_color_click_init
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           	psect	text16
  1876   001ADC                     __ptext16:
  1877                           	callstack 0
  1878   001ADC                     _I2C_2_Master_Init:
  1879                           	callstack 23
  1880   001ADC                     
  1881                           ;i2c.c: 7:   SSP2CON1bits.SSPM= 0b1000;
  1882   001ADC  010E               	movlb	14	; () banked
  1883   001ADE  51D9               	movf	217,w,b	;volatile
  1884   001AE0  0BF0               	andlw	-16
  1885   001AE2  0908               	iorlw	8
  1886   001AE4  6FD9               	movwf	217,b	;volatile
  1887   001AE6                     
  1888                           ; BSR set to: 14
  1889                           ;i2c.c: 8:   SSP2CON1bits.SSPEN = 1;
  1890   001AE6  8BD9               	bsf	217,5,b	;volatile
  1891                           
  1892                           ;i2c.c: 9:   SSP2ADD = (64000000/(4*100000))-1;
  1893   001AE8  0E9F               	movlw	159
  1894   001AEA  6FD6               	movwf	214,b	;volatile
  1895   001AEC                     
  1896                           ; BSR set to: 14
  1897                           ;i2c.c: 12:   TRISDbits.TRISD5 = 1;
  1898   001AEC  8A84               	bsf	132,5,c	;volatile
  1899   001AEE                     
  1900                           ; BSR set to: 14
  1901                           ;i2c.c: 13:   TRISDbits.TRISD6 = 1;
  1902   001AEE  8C84               	bsf	132,6,c	;volatile
  1903   001AF0                     
  1904                           ; BSR set to: 14
  1905                           ;i2c.c: 14:   ANSELDbits.ANSELD5=0;
  1906   001AF0  9BA7               	bcf	167,5,b	;volatile
  1907   001AF2                     
  1908                           ; BSR set to: 14
  1909                           ;i2c.c: 15:   ANSELDbits.ANSELD6=0;
  1910   001AF2  9DA7               	bcf	167,6,b	;volatile
  1911                           
  1912                           ;i2c.c: 16:   SSP2DATPPS=0x1D;
  1913   001AF4  0E1D               	movlw	29
  1914   001AF6  6F1D               	movwf	29,b	;volatile
  1915                           
  1916                           ;i2c.c: 17:   SSP2CLKPPS=0x1E;
  1917   001AF8  0E1E               	movlw	30
  1918   001AFA  6F1C               	movwf	28,b	;volatile
  1919                           
  1920                           ;i2c.c: 18:   RD5PPS=0x1C;
  1921   001AFC  0E1C               	movlw	28
  1922   001AFE  6F6F               	movwf	111,b	;volatile
  1923                           
  1924                           ;i2c.c: 19:   RD6PPS=0x1B;
  1925   001B00  0E1B               	movlw	27
  1926   001B02  6F70               	movwf	112,b	;volatile
  1927   001B04                     
  1928                           ; BSR set to: 14
  1929   001B04  0012               	return		;funcret
  1930   001B06                     __end_of_I2C_2_Master_Init:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _colorVal2String *****************
  1934 ;; Defined at:
  1935 ;;		line 98 in file "color.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  buf             2   43[BANK0 ] PTR unsigned char 
  1938 ;;		 -> main@buf(100), 
  1939 ;;  temp            2   45[BANK0 ] PTR struct RGBC_val
  1940 ;;		 -> main@RGBC(8), 
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      unsigned char 
  1945 ;; Registers used:
  1946 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  1952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1955 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  1956 ;;Total ram usage:        4 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 14
  1959 ;; This function calls:
  1960 ;;		_sprintf
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text17
  1967   001694                     __ptext17:
  1968                           	callstack 0
  1969   001694                     _colorVal2String:
  1970                           	callstack 16
  1971   001694                     
  1972                           ;color.c: 99:     sprintf(buf,"RGBC:%i %i %i %i\n",temp->R, temp->G, temp->B, temp->C);
  1973   001694  C08B  F072         	movff	colorVal2String@buf,sprintf@s
  1974   001698  C08C  F073         	movff	colorVal2String@buf+1,sprintf@s+1
  1975   00169C  0E01               	movlw	low STR_1
  1976   00169E  0100               	movlb	0	; () banked
  1977   0016A0  6F74               	movwf	sprintf@fmt& (0+255),b
  1978   0016A2  0E0E               	movlw	high STR_1
  1979   0016A4  6F75               	movwf	(sprintf@fmt+1)& (0+255),b
  1980   0016A6  C08D  FFD9         	movff	colorVal2String@temp,fsr2l
  1981   0016AA  C08E  FFDA         	movff	colorVal2String@temp+1,fsr2h
  1982   0016AE  CFDE F076          	movff	postinc2,?_sprintf+4
  1983   0016B2  CFDD F077          	movff	postdec2,?_sprintf+5
  1984   0016B6  EE20 F002          	lfsr	2,2
  1985   0016BA  518D               	movf	colorVal2String@temp& (0+255),w,b
  1986   0016BC  26D9               	addwf	fsr2l,f,c
  1987   0016BE  518E               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1988   0016C0  22DA               	addwfc	fsr2h,f,c
  1989   0016C2  CFDE F078          	movff	postinc2,?_sprintf+6
  1990   0016C6  CFDD F079          	movff	postdec2,?_sprintf+7
  1991   0016CA  EE20 F004          	lfsr	2,4
  1992   0016CE  518D               	movf	colorVal2String@temp& (0+255),w,b
  1993   0016D0  26D9               	addwf	fsr2l,f,c
  1994   0016D2  518E               	movf	(colorVal2String@temp+1)& (0+255),w,b
  1995   0016D4  22DA               	addwfc	fsr2h,f,c
  1996   0016D6  CFDE F07A          	movff	postinc2,?_sprintf+8
  1997   0016DA  CFDD F07B          	movff	postdec2,?_sprintf+9
  1998   0016DE  EE20 F006          	lfsr	2,6
  1999   0016E2  518D               	movf	colorVal2String@temp& (0+255),w,b
  2000   0016E4  26D9               	addwf	fsr2l,f,c
  2001   0016E6  518E               	movf	(colorVal2String@temp+1)& (0+255),w,b
  2002   0016E8  22DA               	addwfc	fsr2h,f,c
  2003   0016EA  CFDE F07C          	movff	postinc2,?_sprintf+10
  2004   0016EE  CFDD F07D          	movff	postdec2,?_sprintf+11
  2005   0016F2  ECAB  F00B         	call	_sprintf	;wreg free
  2006   0016F6  0012               	return		;funcret
  2007   0016F8                     __end_of_colorVal2String:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _sprintf *****************
  2011 ;; Defined at:
  2012 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_sprintf.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  s               2   18[BANK0 ] PTR unsigned char 
  2015 ;;		 -> main@buf(100), 
  2016 ;;  fmt             2   20[BANK0 ] PTR const unsigned char 
  2017 ;;		 -> STR_1(18), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  f              11   32[BANK0 ] struct _IO_FILE
  2020 ;;  ap              2   30[BANK0 ] PTR void [1]
  2021 ;;		 -> ?_sprintf(2), 
  2022 ;;  ret             2    0        int 
  2023 ;; Return value:  Size  Location     Type
  2024 ;;                  2   18[BANK0 ] int 
  2025 ;; Registers used:
  2026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2027 ;; Tracked objects:
  2028 ;;		On entry : 0/0
  2029 ;;		On exit  : 0/0
  2030 ;;		Unchanged: 0/0
  2031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2032 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2033 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2035 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2036 ;;Total ram usage:       25 bytes
  2037 ;; Hardware stack levels used: 1
  2038 ;; Hardware stack levels required when called: 13
  2039 ;; This function calls:
  2040 ;;		_vfprintf
  2041 ;; This function is called by:
  2042 ;;		_colorVal2String
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           
  2046                           	psect	text18
  2047   001756                     __ptext18:
  2048                           	callstack 0
  2049   001756                     _sprintf:
  2050                           	callstack 16
  2051   001756  0E76               	movlw	low (?_sprintf+4)
  2052   001758  0100               	movlb	0	; () banked
  2053   00175A  6F7E               	movwf	sprintf@ap& (0+255),b
  2054   00175C  0E00               	movlw	high (?_sprintf+4)
  2055   00175E  6F7F               	movwf	(sprintf@ap+1)& (0+255),b
  2056   001760  C072  F080         	movff	sprintf@s,sprintf@f
  2057   001764  C073  F081         	movff	sprintf@s+1,sprintf@f+1
  2058   001768                     
  2059                           ; BSR set to: 0
  2060   001768  0E00               	movlw	0
  2061   00176A  6F84               	movwf	(sprintf@f+4)& (0+255),b
  2062   00176C  0E00               	movlw	0
  2063   00176E  6F83               	movwf	(sprintf@f+3)& (0+255),b
  2064   001770                     
  2065                           ; BSR set to: 0
  2066   001770  0E00               	movlw	0
  2067   001772  6F8A               	movwf	(sprintf@f+10)& (0+255),b
  2068   001774  0E00               	movlw	0
  2069   001776  6F89               	movwf	(sprintf@f+9)& (0+255),b
  2070   001778                     
  2071                           ; BSR set to: 0
  2072   001778  0E80               	movlw	low sprintf@f
  2073   00177A  6F6A               	movwf	vfprintf@fp& (0+255),b
  2074   00177C  0E00               	movlw	high sprintf@f
  2075   00177E  6F6B               	movwf	(vfprintf@fp+1)& (0+255),b
  2076   001780  C074  F06C         	movff	sprintf@fmt,vfprintf@fmt
  2077   001784  C075  F06D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2078   001788  0E7E               	movlw	low sprintf@ap
  2079   00178A  6F6E               	movwf	vfprintf@ap& (0+255),b
  2080   00178C  0E00               	movlw	high sprintf@ap
  2081   00178E  6F6F               	movwf	(vfprintf@ap+1)& (0+255),b
  2082   001790  EC74  F00C         	call	_vfprintf	;wreg free
  2083   001794  0100               	movlb	0	; () banked
  2084   001796  5183               	movf	(sprintf@f+3)& (0+255),w,b
  2085   001798  2572               	addwf	sprintf@s& (0+255),w,b
  2086   00179A  6ED9               	movwf	fsr2l,c
  2087   00179C  5184               	movf	(sprintf@f+4)& (0+255),w,b
  2088   00179E  2173               	addwfc	(sprintf@s+1)& (0+255),w,b
  2089   0017A0  6EDA               	movwf	fsr2h,c
  2090   0017A2  0E00               	movlw	0
  2091   0017A4  6EDF               	movwf	indf2,c
  2092   0017A6                     
  2093                           ; BSR set to: 0
  2094   0017A6  0012               	return		;funcret
  2095   0017A8                     __end_of_sprintf:
  2096                           	callstack 0
  2097                           
  2098 ;; *************** function _vfprintf *****************
  2099 ;; Defined at:
  2100 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  2103 ;;		 -> sprintf@f(11), 
  2104 ;;  fmt             2   12[BANK0 ] PTR const unsigned char 
  2105 ;;		 -> STR_1(18), 
  2106 ;;  ap              2   14[BANK0 ] PTR PTR void 
  2107 ;;		 -> sprintf@ap(2), 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  cfmt            2   16[BANK0 ] PTR unsigned char 
  2110 ;;		 -> STR_1(18), 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  2   10[BANK0 ] int 
  2113 ;; Registers used:
  2114 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2120 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2121 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2123 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2124 ;;Total ram usage:        8 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; Hardware stack levels required when called: 12
  2127 ;; This function calls:
  2128 ;;		_vfpfcnvrt
  2129 ;; This function is called by:
  2130 ;;		_sprintf
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text19
  2135   0018E8                     __ptext19:
  2136                           	callstack 0
  2137   0018E8                     _vfprintf:
  2138                           	callstack 16
  2139   0018E8                     
  2140                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  2141   0018E8  C06C  F070         	movff	vfprintf@fmt,vfprintf@cfmt
  2142   0018EC  C06D  F071         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2143                           
  2144                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2145   0018F0  EF88  F00C         	goto	l2517
  2146   0018F4                     l2515:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2149   0018F4  C06A  F047         	movff	vfprintf@fp,vfpfcnvrt@fp
  2150   0018F8  C06B  F048         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2151   0018FC  0E70               	movlw	low vfprintf@cfmt
  2152   0018FE  6E49               	movwf	vfpfcnvrt@fmt^0,c
  2153   001900  0E00               	movlw	high vfprintf@cfmt
  2154   001902  6E4A               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2155   001904  C06E  F04B         	movff	vfprintf@ap,vfpfcnvrt@ap
  2156   001908  C06F  F04C         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2157   00190C  ECBE  F009         	call	_vfpfcnvrt	;wreg free
  2158   001910                     l2517:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  2161   001910  C070  FFF6         	movff	vfprintf@cfmt,tblptrl
  2162   001914  C071  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2163   001918                     	if	0	;tblptru may be non-zero
  2164   001918                     	endif
  2165   001918                     	if	0	;tblptru may be non-zero
  2166   001918                     	endif
  2167   001918  0008               	tblrd		*
  2168   00191A  50F5               	movf	tablat,w,c
  2169   00191C  0900               	iorlw	0
  2170   00191E  A4D8               	btfss	status,2,c
  2171   001920  EF94  F00C         	goto	u1611
  2172   001924  EF96  F00C         	goto	u1610
  2173   001928                     u1611:
  2174   001928  EF7A  F00C         	goto	l2515
  2175   00192C                     u1610:
  2176   00192C                     
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  2178   00192C  0E00               	movlw	0
  2179   00192E  0100               	movlb	0	; () banked
  2180   001930  6F6B               	movwf	(?_vfprintf+1)& (0+255),b
  2181   001932  0E00               	movlw	0
  2182   001934  6F6A               	movwf	?_vfprintf& (0+255),b
  2183   001936                     
  2184                           ; BSR set to: 0
  2185   001936  0012               	return		;funcret
  2186   001938                     __end_of_vfprintf:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _vfpfcnvrt *****************
  2190 ;; Defined at:
  2191 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  fp              2   70[COMRAM] PTR struct _IO_FILE
  2194 ;;		 -> sprintf@f(11), 
  2195 ;;  fmt             2   72[COMRAM] PTR PTR unsigned char 
  2196 ;;		 -> vfprintf@cfmt(2), 
  2197 ;;  ap              2   74[COMRAM] PTR PTR void 
  2198 ;;		 -> sprintf@ap(2), 
  2199 ;; Auto vars:     Size  Location     Type
  2200 ;;  convarg         8    0[BANK0 ] struct .
  2201 ;;  cp              2    8[BANK0 ] PTR unsigned char 
  2202 ;;		 -> STR_1(18), 
  2203 ;;  i               2    0        int 
  2204 ;;  done            2    0        int 
  2205 ;;  c               1    0        unsigned char 
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2215 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2216 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2217 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2218 ;;      Totals:         8      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2219 ;;Total ram usage:       18 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 11
  2222 ;; This function calls:
  2223 ;;		_dtoa
  2224 ;;		_fputc
  2225 ;; This function is called by:
  2226 ;;		_vfprintf
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text20
  2231   00137C                     __ptext20:
  2232                           	callstack 0
  2233   00137C                     _vfpfcnvrt:
  2234                           	callstack 16
  2235   00137C                     
  2236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  2237   00137C  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2238   001380  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2239   001384  CFDE FFF6          	movff	postinc2,tblptrl
  2240   001388  CFDD FFF7          	movff	postdec2,tblptrh
  2241   00138C                     	if	0	;tblptru may be non-zero
  2242   00138C                     	endif
  2243   00138C                     	if	0	;tblptru may be non-zero
  2244   00138C                     	endif
  2245   00138C  0008               	tblrd		*
  2246   00138E  50F5               	movf	tablat,w,c
  2247   001390  0A25               	xorlw	37
  2248   001392  A4D8               	btfss	status,2,c
  2249   001394  EFCE  F009         	goto	u1551
  2250   001398  EFD0  F009         	goto	u1550
  2251   00139C                     u1551:
  2252   00139C  EF50  F00A         	goto	l2473
  2253   0013A0                     u1550:
  2254   0013A0                     
  2255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  2256   0013A0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2257   0013A4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2258   0013A8  2ADE               	incf	postinc2,f,c
  2259   0013AA  0E00               	movlw	0
  2260   0013AC  22DD               	addwfc	postdec2,f,c
  2261   0013AE                     
  2262                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  2263   0013AE  0E00               	movlw	0
  2264   0013B0  0100               	movlb	0	; () banked
  2265   0013B2  6F92               	movwf	(_width+1)& (0+255),b
  2266   0013B4  0E00               	movlw	0
  2267   0013B6  6F91               	movwf	_width& (0+255),b
  2268   0013B8  C091  F051         	movff	_width,_flags
  2269   0013BC                     
  2270                           ; BSR set to: 0
  2271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  2272   0013BC  684F               	setf	_prec^0,c
  2273   0013BE  6850               	setf	(_prec+1)^0,c
  2274   0013C0                     
  2275                           ; BSR set to: 0
  2276                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1117:   cp = *fmt
      +                          ;
  2277   0013C0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2278   0013C4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2279   0013C8  CFDE F068          	movff	postinc2,vfpfcnvrt@cp
  2280   0013CC  CFDD F069          	movff	postdec2,vfpfcnvrt@cp+1
  2281   0013D0                     
  2282                           ; BSR set to: 0
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1187:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2284   0013D0  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2285   0013D4  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2286   0013D8                     	if	0	;tblptru may be non-zero
  2287   0013D8                     	endif
  2288   0013D8                     	if	0	;tblptru may be non-zero
  2289   0013D8                     	endif
  2290   0013D8  0008               	tblrd		*
  2291   0013DA  50F5               	movf	tablat,w,c
  2292   0013DC  0A64               	xorlw	100
  2293   0013DE  B4D8               	btfsc	status,2,c
  2294   0013E0  EFF4  F009         	goto	u1561
  2295   0013E4  EFF6  F009         	goto	u1560
  2296   0013E8                     u1561:
  2297   0013E8  EF04  F00A         	goto	l2463
  2298   0013EC                     u1560:
  2299   0013EC                     
  2300                           ; BSR set to: 0
  2301   0013EC  C068  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2302   0013F0  C069  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2303   0013F4                     	if	0	;tblptru may be non-zero
  2304   0013F4                     	endif
  2305   0013F4                     	if	0	;tblptru may be non-zero
  2306   0013F4                     	endif
  2307   0013F4  0008               	tblrd		*
  2308   0013F6  50F5               	movf	tablat,w,c
  2309   0013F8  0A69               	xorlw	105
  2310   0013FA  A4D8               	btfss	status,2,c
  2311   0013FC  EF02  F00A         	goto	u1571
  2312   001400  EF04  F00A         	goto	u1570
  2313   001404                     u1571:
  2314   001404  EF47  F00A         	goto	l2469
  2315   001408                     u1570:
  2316   001408                     l2463:
  2317                           
  2318                           ; BSR set to: 0
  2319                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1230:    convarg.
      +                          ll = (long long)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2320   001408  C04B  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2321   00140C  C04C  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2322   001410  CFDF F04D          	movff	indf2,??_vfpfcnvrt
  2323   001414  0E02               	movlw	2
  2324   001416  26DE               	addwf	postinc2,f,c
  2325   001418  CFDF F04E          	movff	indf2,??_vfpfcnvrt+1
  2326   00141C  0E00               	movlw	0
  2327   00141E  22DD               	addwfc	postdec2,f,c
  2328   001420  C04D  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2329   001424  C04E  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2330   001428  CFDE F060          	movff	postinc2,vfpfcnvrt@convarg
  2331   00142C  CFDD F061          	movff	postdec2,vfpfcnvrt@convarg+1
  2332   001430  0E00               	movlw	0
  2333   001432  BF61               	btfsc	(vfpfcnvrt@convarg+1)& (0+255),7,b
  2334   001434  0EFF               	movlw	-1
  2335   001436  6F62               	movwf	(vfpfcnvrt@convarg+2)& (0+255),b
  2336   001438  6F63               	movwf	(vfpfcnvrt@convarg+3)& (0+255),b
  2337   00143A  6F64               	movwf	(vfpfcnvrt@convarg+4)& (0+255),b
  2338   00143C  6F65               	movwf	(vfpfcnvrt@convarg+5)& (0+255),b
  2339   00143E  6F66               	movwf	(vfpfcnvrt@convarg+6)& (0+255),b
  2340   001440  6F67               	movwf	(vfpfcnvrt@convarg+7)& (0+255),b
  2341                           
  2342                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1232:    *fmt = c
      +                          p+1;
  2343   001442  0E01               	movlw	1
  2344   001444  2568               	addwf	vfpfcnvrt@cp& (0+255),w,b
  2345   001446  6E4D               	movwf	??_vfpfcnvrt^0,c
  2346   001448  0E00               	movlw	0
  2347   00144A  2169               	addwfc	(vfpfcnvrt@cp+1)& (0+255),w,b
  2348   00144C  6E4E               	movwf	(??_vfpfcnvrt+1)^0,c
  2349   00144E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2350   001452  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2351   001456  C04D  FFDE         	movff	??_vfpfcnvrt,postinc2
  2352   00145A  C04E  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2353   00145E                     
  2354                           ; BSR set to: 0
  2355                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1233:    return (
      +                          void) dtoa(fp, convarg.ll);;	Return value of _vfpfcnvrt is never used
  2356   00145E  C047  F024         	movff	vfpfcnvrt@fp,dtoa@fp
  2357   001462  C048  F025         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2358   001466  C060  F026         	movff	vfpfcnvrt@convarg,dtoa@d
  2359   00146A  C061  F027         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2360   00146E  C062  F028         	movff	vfpfcnvrt@convarg+2,dtoa@d+2
  2361   001472  C063  F029         	movff	vfpfcnvrt@convarg+3,dtoa@d+3
  2362   001476  C064  F02A         	movff	vfpfcnvrt@convarg+4,dtoa@d+4
  2363   00147A  C065  F02B         	movff	vfpfcnvrt@convarg+5,dtoa@d+5
  2364   00147E  C066  F02C         	movff	vfpfcnvrt@convarg+6,dtoa@d+6
  2365   001482  C067  F02D         	movff	vfpfcnvrt@convarg+7,dtoa@d+7
  2366   001486  EC0A  F007         	call	_dtoa	;wreg free
  2367   00148A  EF64  F00A         	goto	l1187
  2368   00148E                     l2469:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  2371   00148E  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2372   001492  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2373   001496  2ADE               	incf	postinc2,f,c
  2374   001498  0E00               	movlw	0
  2375   00149A  22DD               	addwfc	postdec2,f,c
  2376   00149C  EF64  F00A         	goto	l1187
  2377   0014A0                     l2473:
  2378                           
  2379                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  2380   0014A0  C049  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2381   0014A4  C04A  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2382   0014A8  CFDE FFF6          	movff	postinc2,tblptrl
  2383   0014AC  CFDD FFF7          	movff	postdec2,tblptrh
  2384   0014B0                     	if	0	;tblptru may be non-zero
  2385   0014B0                     	endif
  2386   0014B0                     	if	0	;tblptru may be non-zero
  2387   0014B0                     	endif
  2388   0014B0  0008               	tblrd		*
  2389   0014B2  50F5               	movf	tablat,w,c
  2390   0014B4  6E09               	movwf	fputc@c^0,c
  2391   0014B6  6A0A               	clrf	(fputc@c+1)^0,c
  2392   0014B8  C047  F00B         	movff	vfpfcnvrt@fp,fputc@fp
  2393   0014BC  C048  F00C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2394   0014C0  EC65  F00A         	call	_fputc	;wreg free
  2395   0014C4  EF47  F00A         	goto	l2469
  2396   0014C8                     l1187:
  2397   0014C8  0012               	return		;funcret
  2398   0014CA                     __end_of_vfpfcnvrt:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _dtoa *****************
  2402 ;; Defined at:
  2403 ;;		line 443 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  fp              2   35[COMRAM] PTR struct _IO_FILE
  2406 ;;		 -> sprintf@f(11), 
  2407 ;;  d               8   37[COMRAM] long long 
  2408 ;; Auto vars:     Size  Location     Type
  2409 ;;  n               8   59[COMRAM] long long 
  2410 ;;  i               2   68[COMRAM] int 
  2411 ;;  w               2   57[COMRAM] int 
  2412 ;;  p               2   55[COMRAM] int 
  2413 ;;  s               1   67[COMRAM] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2423 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2424 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2425 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2426 ;;      Totals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2427 ;;Total ram usage:       35 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 10
  2430 ;; This function calls:
  2431 ;;		___aodiv
  2432 ;;		___aomod
  2433 ;;		_abs
  2434 ;;		_pad
  2435 ;; This function is called by:
  2436 ;;		_vfpfcnvrt
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           	psect	text21
  2441   000E14                     __ptext21:
  2442                           	callstack 0
  2443   000E14                     _dtoa:
  2444                           	callstack 16
  2445   000E14                     
  2446                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 443: static void 
      +                          dtoa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\
      +                          doprnt.c: 444: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          45:  char s;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 446: 
      +                              int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 4
      +                          47:     long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 450:     n = d;
  2447   000E14  C026  F03C         	movff	dtoa@d,dtoa@n
  2448   000E18  C027  F03D         	movff	dtoa@d+1,dtoa@n+1
  2449   000E1C  C028  F03E         	movff	dtoa@d+2,dtoa@n+2
  2450   000E20  C029  F03F         	movff	dtoa@d+3,dtoa@n+3
  2451   000E24  C02A  F040         	movff	dtoa@d+4,dtoa@n+4
  2452   000E28  C02B  F041         	movff	dtoa@d+5,dtoa@n+5
  2453   000E2C  C02C  F042         	movff	dtoa@d+6,dtoa@n+6
  2454   000E30  C02D  F043         	movff	dtoa@d+7,dtoa@n+7
  2455   000E34                     
  2456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 451:     s = n < 
      +                          0 ? 1 : 0;
  2457   000E34  BE43               	btfsc	(dtoa@n+7)^0,7,c
  2458   000E36  EF1F  F007         	goto	u1431
  2459   000E3A  EF22  F007         	goto	u1430
  2460   000E3E                     u1431:
  2461   000E3E  0E01               	movlw	1
  2462   000E40  EF23  F007         	goto	u1440
  2463   000E44                     u1430:
  2464   000E44  0E00               	movlw	0
  2465   000E46                     u1440:
  2466   000E46  6E44               	movwf	dtoa@s^0,c
  2467   000E48                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 452:     if (s) {
  2469   000E48  5044               	movf	dtoa@s^0,w,c
  2470   000E4A  B4D8               	btfsc	status,2,c
  2471   000E4C  EF2A  F007         	goto	u1451
  2472   000E50  EF2C  F007         	goto	u1450
  2473   000E54                     u1451:
  2474   000E54  EF3C  F007         	goto	l2401
  2475   000E58                     u1450:
  2476   000E58                     
  2477                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 453:         n = 
      +                          -n;
  2478   000E58  1E43               	comf	(dtoa@n+7)^0,f,c
  2479   000E5A  1E42               	comf	(dtoa@n+6)^0,f,c
  2480   000E5C  1E41               	comf	(dtoa@n+5)^0,f,c
  2481   000E5E  1E40               	comf	(dtoa@n+4)^0,f,c
  2482   000E60  1E3F               	comf	(dtoa@n+3)^0,f,c
  2483   000E62  1E3E               	comf	(dtoa@n+2)^0,f,c
  2484   000E64  1E3D               	comf	(dtoa@n+1)^0,f,c
  2485   000E66  6C3C               	negf	dtoa@n^0,c
  2486   000E68  0E00               	movlw	0
  2487   000E6A  223D               	addwfc	(dtoa@n+1)^0,f,c
  2488   000E6C  223E               	addwfc	(dtoa@n+2)^0,f,c
  2489   000E6E  223F               	addwfc	(dtoa@n+3)^0,f,c
  2490   000E70  2240               	addwfc	(dtoa@n+4)^0,f,c
  2491   000E72  2241               	addwfc	(dtoa@n+5)^0,f,c
  2492   000E74  2242               	addwfc	(dtoa@n+6)^0,f,c
  2493   000E76  2243               	addwfc	(dtoa@n+7)^0,f,c
  2494   000E78                     l2401:
  2495                           
  2496                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 462:     p = (0 <
      +                           prec) ? prec : 1;
  2497   000E78  BE50               	btfsc	(_prec+1)^0,7,c
  2498   000E7A  EF49  F007         	goto	u1460
  2499   000E7E  5050               	movf	(_prec+1)^0,w,c
  2500   000E80  E106               	bnz	u1461
  2501   000E82  044F               	decf	_prec^0,w,c
  2502   000E84  B0D8               	btfsc	status,0,c
  2503   000E86  EF47  F007         	goto	u1461
  2504   000E8A  EF49  F007         	goto	u1460
  2505   000E8E                     u1461:
  2506   000E8E  EF4F  F007         	goto	l1166
  2507   000E92                     u1460:
  2508   000E92  0E00               	movlw	0
  2509   000E94  6E39               	movwf	(dtoa@p+1)^0,c
  2510   000E96  0E01               	movlw	1
  2511   000E98  6E38               	movwf	dtoa@p^0,c
  2512   000E9A  EF53  F007         	goto	l1168
  2513   000E9E                     l1166:
  2514   000E9E  C04F  F038         	movff	_prec,dtoa@p
  2515   000EA2  C050  F039         	movff	_prec+1,dtoa@p+1
  2516   000EA6                     l1168:
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 463:     w = widt
      +                          h;
  2519   000EA6  C091  F03A         	movff	_width,dtoa@w
  2520   000EAA  C092  F03B         	movff	_width+1,dtoa@w+1
  2521   000EAE                     
  2522                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 464:     if (s
  2523   000EAE  5044               	movf	dtoa@s^0,w,c
  2524   000EB0  B4D8               	btfsc	status,2,c
  2525   000EB2  EF5D  F007         	goto	u1471
  2526   000EB6  EF5F  F007         	goto	u1470
  2527   000EBA                     u1471:
  2528   000EBA  EF76  F007         	goto	l1169
  2529   000EBE                     u1470:
  2530   000EBE                     
  2531                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 468:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 469:         --w;
  2532   000EBE  063A               	decf	dtoa@w^0,f,c
  2533   000EC0  A0D8               	btfss	status,0,c
  2534   000EC2  063B               	decf	(dtoa@w+1)^0,f,c
  2535   000EC4                     
  2536                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 470:   s = s ? '-
      +                          ' : '+';
  2537   000EC4  5044               	movf	dtoa@s^0,w,c
  2538   000EC6  A4D8               	btfss	status,2,c
  2539   000EC8  EF68  F007         	goto	u1481
  2540   000ECC  EF6A  F007         	goto	u1480
  2541   000ED0                     u1481:
  2542   000ED0  EF70  F007         	goto	l2413
  2543   000ED4                     u1480:
  2544   000ED4  0E00               	movlw	0
  2545   000ED6  6E37               	movwf	(_dtoa$2398+1)^0,c
  2546   000ED8  0E2B               	movlw	43
  2547   000EDA  6E36               	movwf	_dtoa$2398^0,c
  2548   000EDC  EF74  F007         	goto	l2415
  2549   000EE0                     l2413:
  2550   000EE0  0E00               	movlw	0
  2551   000EE2  6E37               	movwf	(_dtoa$2398+1)^0,c
  2552   000EE4  0E2D               	movlw	45
  2553   000EE6  6E36               	movwf	_dtoa$2398^0,c
  2554   000EE8                     l2415:
  2555   000EE8  C036  F044         	movff	_dtoa$2398,dtoa@s
  2556   000EEC                     l1169:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 480:     i = size
      +                          of(dbuf) - 1;
  2559   000EEC  0E00               	movlw	0
  2560   000EEE  6E46               	movwf	(dtoa@i+1)^0,c
  2561   000EF0  0E1F               	movlw	31
  2562   000EF2  6E45               	movwf	dtoa@i^0,c
  2563   000EF4                     
  2564                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 481:     dbuf[i] 
      +                          = '\0';
  2565   000EF4  0E00               	movlw	0
  2566   000EF6  0101               	movlb	1	; () banked
  2567   000EF8  6F6F               	movwf	(_dbuf+31)& (0+255),b
  2568                           
  2569                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2570   000EFA  EFFB  F007         	goto	l2429
  2571   000EFE                     l2419:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 486:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 487:         --i;
  2574   000EFE  0645               	decf	dtoa@i^0,f,c
  2575   000F00  A0D8               	btfss	status,0,c
  2576   000F02  0646               	decf	(dtoa@i+1)^0,f,c
  2577   000F04                     
  2578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 488:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2579   000F04  0E50               	movlw	low _dbuf
  2580   000F06  2445               	addwf	dtoa@i^0,w,c
  2581   000F08  6ED9               	movwf	fsr2l,c
  2582   000F0A  0E01               	movlw	high _dbuf
  2583   000F0C  2046               	addwfc	(dtoa@i+1)^0,w,c
  2584   000F0E  6EDA               	movwf	fsr2h,c
  2585   000F10  C03C  F009         	movff	dtoa@n,___aomod@dividend
  2586   000F14  C03D  F00A         	movff	dtoa@n+1,___aomod@dividend+1
  2587   000F18  C03E  F00B         	movff	dtoa@n+2,___aomod@dividend+2
  2588   000F1C  C03F  F00C         	movff	dtoa@n+3,___aomod@dividend+3
  2589   000F20  C040  F00D         	movff	dtoa@n+4,___aomod@dividend+4
  2590   000F24  C041  F00E         	movff	dtoa@n+5,___aomod@dividend+5
  2591   000F28  C042  F00F         	movff	dtoa@n+6,___aomod@dividend+6
  2592   000F2C  C043  F010         	movff	dtoa@n+7,___aomod@dividend+7
  2593   000F30  0E0A               	movlw	10
  2594   000F32  6E11               	movwf	___aomod@divisor^0,c
  2595   000F34  0E00               	movlw	0
  2596   000F36  6E12               	movwf	(___aomod@divisor+1)^0,c
  2597   000F38  0E00               	movlw	0
  2598   000F3A  6E13               	movwf	(___aomod@divisor+2)^0,c
  2599   000F3C  0E00               	movlw	0
  2600   000F3E  6E14               	movwf	(___aomod@divisor+3)^0,c
  2601   000F40  0E00               	movlw	0
  2602   000F42  6E15               	movwf	(___aomod@divisor+4)^0,c
  2603   000F44  0E00               	movlw	0
  2604   000F46  6E16               	movwf	(___aomod@divisor+5)^0,c
  2605   000F48  0E00               	movlw	0
  2606   000F4A  6E17               	movwf	(___aomod@divisor+6)^0,c
  2607   000F4C  0E00               	movlw	0
  2608   000F4E  6E18               	movwf	(___aomod@divisor+7)^0,c
  2609   000F50  EC0C  F009         	call	___aomod	;wreg free
  2610   000F54  C009  F02E         	movff	?___aomod,??_dtoa
  2611   000F58  C00A  F02F         	movff	?___aomod+1,??_dtoa+1
  2612   000F5C  C00B  F030         	movff	?___aomod+2,??_dtoa+2
  2613   000F60  C00C  F031         	movff	?___aomod+3,??_dtoa+3
  2614   000F64  C00D  F032         	movff	?___aomod+4,??_dtoa+4
  2615   000F68  C00E  F033         	movff	?___aomod+5,??_dtoa+5
  2616   000F6C  C00F  F034         	movff	?___aomod+6,??_dtoa+6
  2617   000F70  C010  F035         	movff	?___aomod+7,??_dtoa+7
  2618   000F74  C02E  F01B         	movff	??_dtoa,abs@a
  2619   000F78  C02F  F01C         	movff	??_dtoa+1,abs@a+1
  2620   000F7C  ECDF  F00C         	call	_abs	;wreg free
  2621   000F80  501B               	movf	?_abs^0,w,c
  2622   000F82  0F30               	addlw	48
  2623   000F84  6EDF               	movwf	indf2,c
  2624   000F86                     
  2625                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 489:         --p;
  2626   000F86  0638               	decf	dtoa@p^0,f,c
  2627   000F88  A0D8               	btfss	status,0,c
  2628   000F8A  0639               	decf	(dtoa@p+1)^0,f,c
  2629   000F8C                     
  2630                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 490:         --w;
  2631   000F8C  063A               	decf	dtoa@w^0,f,c
  2632   000F8E  A0D8               	btfss	status,0,c
  2633   000F90  063B               	decf	(dtoa@w+1)^0,f,c
  2634   000F92                     
  2635                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 491:         n = 
      +                          n / 10;
  2636   000F92  C03C  F009         	movff	dtoa@n,___aodiv@dividend
  2637   000F96  C03D  F00A         	movff	dtoa@n+1,___aodiv@dividend+1
  2638   000F9A  C03E  F00B         	movff	dtoa@n+2,___aodiv@dividend+2
  2639   000F9E  C03F  F00C         	movff	dtoa@n+3,___aodiv@dividend+3
  2640   000FA2  C040  F00D         	movff	dtoa@n+4,___aodiv@dividend+4
  2641   000FA6  C041  F00E         	movff	dtoa@n+5,___aodiv@dividend+5
  2642   000FAA  C042  F00F         	movff	dtoa@n+6,___aodiv@dividend+6
  2643   000FAE  C043  F010         	movff	dtoa@n+7,___aodiv@dividend+7
  2644   000FB2  0E0A               	movlw	10
  2645   000FB4  6E11               	movwf	___aodiv@divisor^0,c
  2646   000FB6  0E00               	movlw	0
  2647   000FB8  6E12               	movwf	(___aodiv@divisor+1)^0,c
  2648   000FBA  0E00               	movlw	0
  2649   000FBC  6E13               	movwf	(___aodiv@divisor+2)^0,c
  2650   000FBE  0E00               	movlw	0
  2651   000FC0  6E14               	movwf	(___aodiv@divisor+3)^0,c
  2652   000FC2  0E00               	movlw	0
  2653   000FC4  6E15               	movwf	(___aodiv@divisor+4)^0,c
  2654   000FC6  0E00               	movlw	0
  2655   000FC8  6E16               	movwf	(___aodiv@divisor+5)^0,c
  2656   000FCA  0E00               	movlw	0
  2657   000FCC  6E17               	movwf	(___aodiv@divisor+6)^0,c
  2658   000FCE  0E00               	movlw	0
  2659   000FD0  6E18               	movwf	(___aodiv@divisor+7)^0,c
  2660   000FD2  EC48  F008         	call	___aodiv	;wreg free
  2661   000FD6  C009  F03C         	movff	?___aodiv,dtoa@n
  2662   000FDA  C00A  F03D         	movff	?___aodiv+1,dtoa@n+1
  2663   000FDE  C00B  F03E         	movff	?___aodiv+2,dtoa@n+2
  2664   000FE2  C00C  F03F         	movff	?___aodiv+3,dtoa@n+3
  2665   000FE6  C00D  F040         	movff	?___aodiv+4,dtoa@n+4
  2666   000FEA  C00E  F041         	movff	?___aodiv+5,dtoa@n+5
  2667   000FEE  C00F  F042         	movff	?___aodiv+6,dtoa@n+6
  2668   000FF2  C010  F043         	movff	?___aodiv+7,dtoa@n+7
  2669   000FF6                     l2429:
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 482:     while (!
      +                          (i < 1) && (n || (0 < p)
  2672   000FF6  BE46               	btfsc	(dtoa@i+1)^0,7,c
  2673   000FF8  EF06  F008         	goto	u1491
  2674   000FFC  5046               	movf	(dtoa@i+1)^0,w,c
  2675   000FFE  E108               	bnz	u1490
  2676   001000  0445               	decf	dtoa@i^0,w,c
  2677   001002  A0D8               	btfss	status,0,c
  2678   001004  EF06  F008         	goto	u1491
  2679   001008  EF08  F008         	goto	u1490
  2680   00100C                     u1491:
  2681   00100C  EF24  F008         	goto	l2435
  2682   001010                     u1490:
  2683   001010  503C               	movf	dtoa@n^0,w,c
  2684   001012  103D               	iorwf	(dtoa@n+1)^0,w,c
  2685   001014  103E               	iorwf	(dtoa@n+2)^0,w,c
  2686   001016  103F               	iorwf	(dtoa@n+3)^0,w,c
  2687   001018  1040               	iorwf	(dtoa@n+4)^0,w,c
  2688   00101A  1041               	iorwf	(dtoa@n+5)^0,w,c
  2689   00101C  1042               	iorwf	(dtoa@n+6)^0,w,c
  2690   00101E  1043               	iorwf	(dtoa@n+7)^0,w,c
  2691   001020  A4D8               	btfss	status,2,c
  2692   001022  EF15  F008         	goto	u1501
  2693   001026  EF17  F008         	goto	u1500
  2694   00102A                     u1501:
  2695   00102A  EF7F  F007         	goto	l2419
  2696   00102E                     u1500:
  2697   00102E  BE39               	btfsc	(dtoa@p+1)^0,7,c
  2698   001030  EF24  F008         	goto	u1510
  2699   001034  5039               	movf	(dtoa@p+1)^0,w,c
  2700   001036  E106               	bnz	u1511
  2701   001038  0438               	decf	dtoa@p^0,w,c
  2702   00103A  B0D8               	btfsc	status,0,c
  2703   00103C  EF22  F008         	goto	u1511
  2704   001040  EF24  F008         	goto	u1510
  2705   001044                     u1511:
  2706   001044  EF7F  F007         	goto	l2419
  2707   001048                     u1510:
  2708   001048                     l2435:
  2709                           
  2710                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 495:     if (s !=
      +                           0) {
  2711   001048  5044               	movf	dtoa@s^0,w,c
  2712   00104A  B4D8               	btfsc	status,2,c
  2713   00104C  EF2A  F008         	goto	u1521
  2714   001050  EF2C  F008         	goto	u1520
  2715   001054                     u1521:
  2716   001054  EF37  F008         	goto	l2441
  2717   001058                     u1520:
  2718   001058                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 496:         --i;
  2720   001058  0645               	decf	dtoa@i^0,f,c
  2721   00105A  A0D8               	btfss	status,0,c
  2722   00105C  0646               	decf	(dtoa@i+1)^0,f,c
  2723   00105E                     
  2724                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 497:         dbuf
      +                          [i] = s;
  2725   00105E  0E50               	movlw	low _dbuf
  2726   001060  2445               	addwf	dtoa@i^0,w,c
  2727   001062  6ED9               	movwf	fsr2l,c
  2728   001064  0E01               	movlw	high _dbuf
  2729   001066  2046               	addwfc	(dtoa@i+1)^0,w,c
  2730   001068  6EDA               	movwf	fsr2h,c
  2731   00106A  C044  FFDF         	movff	dtoa@s,indf2
  2732   00106E                     l2441:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 501:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2735   00106E  C024  F019         	movff	dtoa@fp,pad@fp
  2736   001072  C025  F01A         	movff	dtoa@fp+1,pad@fp+1
  2737   001076  0E50               	movlw	low _dbuf
  2738   001078  2445               	addwf	dtoa@i^0,w,c
  2739   00107A  6E1B               	movwf	pad@buf^0,c
  2740   00107C  0E01               	movlw	high _dbuf
  2741   00107E  2046               	addwfc	(dtoa@i+1)^0,w,c
  2742   001080  6E1C               	movwf	(pad@buf+1)^0,c
  2743   001082  C03A  F01D         	movff	dtoa@w,pad@p
  2744   001086  C03B  F01E         	movff	dtoa@w+1,pad@p+1
  2745   00108A  EC0D  F00B         	call	_pad	;wreg free
  2746   00108E  0012               	return		;funcret
  2747   001090                     __end_of_dtoa:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _pad *****************
  2751 ;; Defined at:
  2752 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  fp              2   24[COMRAM] PTR struct _IO_FILE
  2755 ;;		 -> sprintf@f(11), 
  2756 ;;  buf             2   26[COMRAM] PTR unsigned char 
  2757 ;;		 -> dbuf(32), 
  2758 ;;  p               2   28[COMRAM] int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  w               2   33[COMRAM] int 
  2761 ;;  i               2   31[COMRAM] int 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  1    wreg      void 
  2764 ;; Registers used:
  2765 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2771 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2772 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2773 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2774 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2775 ;;Total ram usage:       11 bytes
  2776 ;; Hardware stack levels used: 1
  2777 ;; Hardware stack levels required when called: 9
  2778 ;; This function calls:
  2779 ;;		_fputc
  2780 ;;		_fputs
  2781 ;; This function is called by:
  2782 ;;		_dtoa
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           	psect	text22
  2787   00161A                     __ptext22:
  2788                           	callstack 0
  2789   00161A                     _pad:
  2790                           	callstack 16
  2791   00161A                     
  2792                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  2793   00161A  BE1E               	btfsc	(pad@p+1)^0,7,c
  2794   00161C  EF12  F00B         	goto	u1401
  2795   001620  EF14  F00B         	goto	u1400
  2796   001624                     u1401:
  2797   001624  EF1A  F00B         	goto	l2379
  2798   001628                     u1400:
  2799   001628  C01D  F022         	movff	pad@p,pad@w
  2800   00162C  C01E  F023         	movff	pad@p+1,pad@w+1
  2801   001630  EF1E  F00B         	goto	l1157
  2802   001634                     l2379:
  2803   001634  0E00               	movlw	0
  2804   001636  6E23               	movwf	(pad@w+1)^0,c
  2805   001638  0E00               	movlw	0
  2806   00163A  6E22               	movwf	pad@w^0,c
  2807   00163C                     l1157:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  2810   00163C  0E00               	movlw	0
  2811   00163E  6E21               	movwf	(pad@i+1)^0,c
  2812   001640  0E00               	movlw	0
  2813   001642  6E20               	movwf	pad@i^0,c
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2816   001644  EF30  F00B         	goto	l2385
  2817   001648                     l2381:
  2818                           
  2819                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  2820   001648  0E00               	movlw	0
  2821   00164A  6E0A               	movwf	(fputc@c+1)^0,c
  2822   00164C  0E20               	movlw	32
  2823   00164E  6E09               	movwf	fputc@c^0,c
  2824   001650  C019  F00B         	movff	pad@fp,fputc@fp
  2825   001654  C01A  F00C         	movff	pad@fp+1,fputc@fp+1
  2826   001658  EC65  F00A         	call	_fputc	;wreg free
  2827   00165C                     
  2828                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  2829   00165C  4A20               	infsnz	pad@i^0,f,c
  2830   00165E  2A21               	incf	(pad@i+1)^0,f,c
  2831   001660                     l2385:
  2832                           
  2833                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  2834   001660  5022               	movf	pad@w^0,w,c
  2835   001662  5C20               	subwf	pad@i^0,w,c
  2836   001664  5021               	movf	(pad@i+1)^0,w,c
  2837   001666  0A80               	xorlw	128
  2838   001668  6E1F               	movwf	??_pad^0,c
  2839   00166A  5023               	movf	(pad@w+1)^0,w,c
  2840   00166C  0A80               	xorlw	128
  2841   00166E  581F               	subwfb	??_pad^0,w,c
  2842   001670  A0D8               	btfss	status,0,c
  2843   001672  EF3D  F00B         	goto	u1411
  2844   001676  EF3F  F00B         	goto	u1410
  2845   00167A                     u1411:
  2846   00167A  EF24  F00B         	goto	l2381
  2847   00167E                     u1410:
  2848   00167E                     
  2849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  2850   00167E  C01B  F012         	movff	pad@buf,fputs@s
  2851   001682  C01C  F013         	movff	pad@buf+1,fputs@s+1
  2852   001686  C019  F014         	movff	pad@fp,fputs@fp
  2853   00168A  C01A  F015         	movff	pad@fp+1,fputs@fp+1
  2854   00168E  EC9C  F00C         	call	_fputs	;wreg free
  2855   001692  0012               	return		;funcret
  2856   001694                     __end_of_pad:
  2857                           	callstack 0
  2858                           
  2859 ;; *************** function _fputs *****************
  2860 ;; Defined at:
  2861 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  2862 ;; Parameters:    Size  Location     Type
  2863 ;;  s               2   17[COMRAM] PTR const unsigned char 
  2864 ;;		 -> dbuf(32), 
  2865 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2866 ;;		 -> sprintf@f(11), 
  2867 ;; Auto vars:     Size  Location     Type
  2868 ;;  i               2   22[COMRAM] int 
  2869 ;;  c               1   21[COMRAM] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  2   17[COMRAM] int 
  2872 ;; Registers used:
  2873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2879 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2880 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2882 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2883 ;;Total ram usage:        7 bytes
  2884 ;; Hardware stack levels used: 1
  2885 ;; Hardware stack levels required when called: 8
  2886 ;; This function calls:
  2887 ;;		_fputc
  2888 ;; This function is called by:
  2889 ;;		_pad
  2890 ;; This function uses a non-reentrant model
  2891 ;;
  2892                           
  2893                           	psect	text23
  2894   001938                     __ptext23:
  2895                           	callstack 0
  2896   001938                     _fputs:
  2897                           	callstack 16
  2898   001938  0E00               	movlw	0
  2899   00193A  6E18               	movwf	(fputs@i+1)^0,c
  2900   00193C  0E00               	movlw	0
  2901   00193E  6E17               	movwf	fputs@i^0,c
  2902   001940  EFAD  F00C         	goto	l2293
  2903   001944                     l2289:
  2904   001944  C016  F009         	movff	fputs@c,fputc@c
  2905   001948  6A0A               	clrf	(fputc@c+1)^0,c
  2906   00194A  C014  F00B         	movff	fputs@fp,fputc@fp
  2907   00194E  C015  F00C         	movff	fputs@fp+1,fputc@fp+1
  2908   001952  EC65  F00A         	call	_fputc	;wreg free
  2909   001956  4A17               	infsnz	fputs@i^0,f,c
  2910   001958  2A18               	incf	(fputs@i+1)^0,f,c
  2911   00195A                     l2293:
  2912   00195A  5017               	movf	fputs@i^0,w,c
  2913   00195C  2412               	addwf	fputs@s^0,w,c
  2914   00195E  6ED9               	movwf	fsr2l,c
  2915   001960  5018               	movf	(fputs@i+1)^0,w,c
  2916   001962  2013               	addwfc	(fputs@s+1)^0,w,c
  2917   001964  6EDA               	movwf	fsr2h,c
  2918   001966  50DF               	movf	indf2,w,c
  2919   001968  6E16               	movwf	fputs@c^0,c
  2920   00196A  5016               	movf	fputs@c^0,w,c
  2921   00196C  A4D8               	btfss	status,2,c
  2922   00196E  EFBB  F00C         	goto	u1261
  2923   001972  EFBD  F00C         	goto	u1260
  2924   001976                     u1261:
  2925   001976  EFA2  F00C         	goto	l2289
  2926   00197A                     u1260:
  2927   00197A  0012               	return		;funcret
  2928   00197C                     __end_of_fputs:
  2929                           	callstack 0
  2930                           
  2931 ;; *************** function _fputc *****************
  2932 ;; Defined at:
  2933 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  2934 ;; Parameters:    Size  Location     Type
  2935 ;;  c               2    8[COMRAM] int 
  2936 ;;  fp              2   10[COMRAM] PTR struct _IO_FILE
  2937 ;;		 -> sprintf@f(11), 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  2    8[COMRAM] int 
  2942 ;; Registers used:
  2943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  2949 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2951 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2952 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  2953 ;;Total ram usage:        9 bytes
  2954 ;; Hardware stack levels used: 1
  2955 ;; Hardware stack levels required when called: 7
  2956 ;; This function calls:
  2957 ;;		_putch
  2958 ;; This function is called by:
  2959 ;;		_pad
  2960 ;;		_vfpfcnvrt
  2961 ;;		_fputs
  2962 ;; This function uses a non-reentrant model
  2963 ;;
  2964                           
  2965                           	psect	text24
  2966   0014CA                     __ptext24:
  2967                           	callstack 0
  2968   0014CA                     _fputc:
  2969                           	callstack 19
  2970   0014CA  500B               	movf	fputc@fp^0,w,c
  2971   0014CC  100C               	iorwf	(fputc@fp+1)^0,w,c
  2972   0014CE  B4D8               	btfsc	status,2,c
  2973   0014D0  EF6C  F00A         	goto	u1221
  2974   0014D4  EF6E  F00A         	goto	u1220
  2975   0014D8                     u1221:
  2976   0014D8  EF77  F00A         	goto	l2277
  2977   0014DC                     u1220:
  2978   0014DC  500B               	movf	fputc@fp^0,w,c
  2979   0014DE  100C               	iorwf	(fputc@fp+1)^0,w,c
  2980   0014E0  A4D8               	btfss	status,2,c
  2981   0014E2  EF75  F00A         	goto	u1231
  2982   0014E6  EF77  F00A         	goto	u1230
  2983   0014EA                     u1231:
  2984   0014EA  EF7C  F00A         	goto	l2279
  2985   0014EE                     u1230:
  2986   0014EE                     l2277:
  2987   0014EE  5009               	movf	fputc@c^0,w,c
  2988   0014F0  EC53  F00E         	call	_putch
  2989   0014F4  EFC9  F00A         	goto	l1212
  2990   0014F8                     l2279:
  2991   0014F8  EE20 F009          	lfsr	2,9
  2992   0014FC  500B               	movf	fputc@fp^0,w,c
  2993   0014FE  26D9               	addwf	fsr2l,f,c
  2994   001500  500C               	movf	(fputc@fp+1)^0,w,c
  2995   001502  22DA               	addwfc	fsr2h,f,c
  2996   001504  50DE               	movf	postinc2,w,c
  2997   001506  10DE               	iorwf	postinc2,w,c
  2998   001508  B4D8               	btfsc	status,2,c
  2999   00150A  EF89  F00A         	goto	u1241
  3000   00150E  EF8B  F00A         	goto	u1240
  3001   001512                     u1241:
  3002   001512  EFA6  F00A         	goto	l2283
  3003   001516                     u1240:
  3004   001516  EE20 F009          	lfsr	2,9
  3005   00151A  500B               	movf	fputc@fp^0,w,c
  3006   00151C  26D9               	addwf	fsr2l,f,c
  3007   00151E  500C               	movf	(fputc@fp+1)^0,w,c
  3008   001520  22DA               	addwfc	fsr2h,f,c
  3009   001522  EE10 F003          	lfsr	1,3
  3010   001526  500B               	movf	fputc@fp^0,w,c
  3011   001528  26E1               	addwf	fsr1l,f,c
  3012   00152A  500C               	movf	(fputc@fp+1)^0,w,c
  3013   00152C  22E2               	addwfc	fsr1h,f,c
  3014   00152E  50DE               	movf	postinc2,w,c
  3015   001530  5CE6               	subwf	postinc1,w,c
  3016   001532  50E6               	movf	postinc1,w,c
  3017   001534  0A80               	xorlw	128
  3018   001536  6E11               	movwf	(??_fputc+4)^0,c
  3019   001538  50DE               	movf	postinc2,w,c
  3020   00153A  0A80               	xorlw	128
  3021   00153C  5811               	subwfb	(??_fputc+4)^0,w,c
  3022   00153E  B0D8               	btfsc	status,0,c
  3023   001540  EFA4  F00A         	goto	u1251
  3024   001544  EFA6  F00A         	goto	u1250
  3025   001548                     u1251:
  3026   001548  EFC9  F00A         	goto	l1212
  3027   00154C                     u1250:
  3028   00154C                     l2283:
  3029   00154C  EE20 F003          	lfsr	2,3
  3030   001550  500B               	movf	fputc@fp^0,w,c
  3031   001552  26D9               	addwf	fsr2l,f,c
  3032   001554  500C               	movf	(fputc@fp+1)^0,w,c
  3033   001556  22DA               	addwfc	fsr2h,f,c
  3034   001558  CFDE F00D          	movff	postinc2,??_fputc
  3035   00155C  CFDD F00E          	movff	postdec2,??_fputc+1
  3036   001560  C00B  FFD9         	movff	fputc@fp,fsr2l
  3037   001564  C00C  FFDA         	movff	fputc@fp+1,fsr2h
  3038   001568  CFDE F00F          	movff	postinc2,??_fputc+2
  3039   00156C  CFDD F010          	movff	postdec2,??_fputc+3
  3040   001570  500D               	movf	??_fputc^0,w,c
  3041   001572  240F               	addwf	(??_fputc+2)^0,w,c
  3042   001574  6ED9               	movwf	fsr2l,c
  3043   001576  500E               	movf	(??_fputc+1)^0,w,c
  3044   001578  2010               	addwfc	(??_fputc+3)^0,w,c
  3045   00157A  6EDA               	movwf	fsr2h,c
  3046   00157C  C009  FFDF         	movff	fputc@c,indf2
  3047   001580  EE20 F003          	lfsr	2,3
  3048   001584  500B               	movf	fputc@fp^0,w,c
  3049   001586  26D9               	addwf	fsr2l,f,c
  3050   001588  500C               	movf	(fputc@fp+1)^0,w,c
  3051   00158A  22DA               	addwfc	fsr2h,f,c
  3052   00158C  2ADE               	incf	postinc2,f,c
  3053   00158E  0E00               	movlw	0
  3054   001590  22DD               	addwfc	postdec2,f,c
  3055   001592                     l1212:
  3056   001592  0012               	return		;funcret
  3057   001594                     __end_of_fputc:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _putch *****************
  3061 ;; Defined at:
  3062 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\putch.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  c               1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  c               1    0[COMRAM] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3080 ;;Total ram usage:        0 bytes
  3081 ;; Hardware stack levels used: 1
  3082 ;; Hardware stack levels required when called: 6
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_fputc
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text25
  3091   001CA6                     __ptext25:
  3092                           	callstack 0
  3093   001CA6                     _putch:
  3094                           	callstack 19
  3095   001CA6  0012               	return		;funcret
  3096   001CA8                     __end_of_putch:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _abs *****************
  3100 ;; Defined at:
  3101 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\abs.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  a               2   26[COMRAM] int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;		None
  3106 ;; Return value:  Size  Location     Type
  3107 ;;                  2   26[COMRAM] int 
  3108 ;; Registers used:
  3109 ;;		wreg, status,2, status,0
  3110 ;; Tracked objects:
  3111 ;;		On entry : 0/0
  3112 ;;		On exit  : 0/0
  3113 ;;		Unchanged: 0/0
  3114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3115 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3117 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3118 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3119 ;;Total ram usage:        4 bytes
  3120 ;; Hardware stack levels used: 1
  3121 ;; Hardware stack levels required when called: 6
  3122 ;; This function calls:
  3123 ;;		Nothing
  3124 ;; This function is called by:
  3125 ;;		_dtoa
  3126 ;; This function uses a non-reentrant model
  3127 ;;
  3128                           
  3129                           	psect	text26
  3130   0019BE                     __ptext26:
  3131                           	callstack 0
  3132   0019BE                     _abs:
  3133                           	callstack 19
  3134   0019BE  BE1C               	btfsc	(abs@a+1)^0,7,c
  3135   0019C0  EFEC  F00C         	goto	u1420
  3136   0019C4  501C               	movf	(abs@a+1)^0,w,c
  3137   0019C6  E106               	bnz	u1421
  3138   0019C8  041B               	decf	abs@a^0,w,c
  3139   0019CA  B0D8               	btfsc	status,0,c
  3140   0019CC  EFEA  F00C         	goto	u1421
  3141   0019D0  EFEC  F00C         	goto	u1420
  3142   0019D4                     u1421:
  3143   0019D4  EFFA  F00C         	goto	l1197
  3144   0019D8                     u1420:
  3145   0019D8  C01B  F01D         	movff	abs@a,??_abs
  3146   0019DC  C01C  F01E         	movff	abs@a+1,??_abs+1
  3147   0019E0  1E1D               	comf	??_abs^0,f,c
  3148   0019E2  1E1E               	comf	(??_abs+1)^0,f,c
  3149   0019E4  4A1D               	infsnz	??_abs^0,f,c
  3150   0019E6  2A1E               	incf	(??_abs+1)^0,f,c
  3151   0019E8  C01D  F01B         	movff	??_abs,?_abs
  3152   0019EC  C01E  F01C         	movff	??_abs+1,?_abs+1
  3153   0019F0  EFFE  F00C         	goto	l1200
  3154   0019F4                     l1197:
  3155   0019F4  C01B  F01B         	movff	abs@a,?_abs
  3156   0019F8  C01C  F01C         	movff	abs@a+1,?_abs+1
  3157   0019FC                     l1200:
  3158   0019FC  0012               	return		;funcret
  3159   0019FE                     __end_of_abs:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function ___aomod *****************
  3163 ;; Defined at:
  3164 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aomod.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  dividend        8    8[COMRAM] long long 
  3167 ;;  divisor         8   16[COMRAM] long long 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  sign            1   25[COMRAM] unsigned char 
  3170 ;;  counter         1   24[COMRAM] unsigned char 
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  8    8[COMRAM] long long 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3180 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3181 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3183 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3184 ;;Total ram usage:       18 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; Hardware stack levels required when called: 6
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_dtoa
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           	psect	text27
  3195   001218                     __ptext27:
  3196                           	callstack 0
  3197   001218                     ___aomod:
  3198                           	callstack 19
  3199   001218  0E00               	movlw	0
  3200   00121A  6E1A               	movwf	___aomod@sign^0,c
  3201   00121C  BE10               	btfsc	(___aomod@dividend+7)^0,7,c
  3202   00121E  EF15  F009         	goto	u1340
  3203   001222  EF13  F009         	goto	u1341
  3204   001226                     u1341:
  3205   001226  EF27  F009         	goto	l2347
  3206   00122A                     u1340:
  3207   00122A  1E10               	comf	(___aomod@dividend+7)^0,f,c
  3208   00122C  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  3209   00122E  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  3210   001230  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  3211   001232  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  3212   001234  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  3213   001236  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  3214   001238  6C09               	negf	___aomod@dividend^0,c
  3215   00123A  0E00               	movlw	0
  3216   00123C  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  3217   00123E  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  3218   001240  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  3219   001242  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  3220   001244  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  3221   001246  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  3222   001248  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  3223   00124A  0E01               	movlw	1
  3224   00124C  6E1A               	movwf	___aomod@sign^0,c
  3225   00124E                     l2347:
  3226   00124E  BE18               	btfsc	(___aomod@divisor+7)^0,7,c
  3227   001250  EF2E  F009         	goto	u1350
  3228   001254  EF2C  F009         	goto	u1351
  3229   001258                     u1351:
  3230   001258  EF3E  F009         	goto	l2351
  3231   00125C                     u1350:
  3232   00125C  1E18               	comf	(___aomod@divisor+7)^0,f,c
  3233   00125E  1E17               	comf	(___aomod@divisor+6)^0,f,c
  3234   001260  1E16               	comf	(___aomod@divisor+5)^0,f,c
  3235   001262  1E15               	comf	(___aomod@divisor+4)^0,f,c
  3236   001264  1E14               	comf	(___aomod@divisor+3)^0,f,c
  3237   001266  1E13               	comf	(___aomod@divisor+2)^0,f,c
  3238   001268  1E12               	comf	(___aomod@divisor+1)^0,f,c
  3239   00126A  6C11               	negf	___aomod@divisor^0,c
  3240   00126C  0E00               	movlw	0
  3241   00126E  2212               	addwfc	(___aomod@divisor+1)^0,f,c
  3242   001270  2213               	addwfc	(___aomod@divisor+2)^0,f,c
  3243   001272  2214               	addwfc	(___aomod@divisor+3)^0,f,c
  3244   001274  2215               	addwfc	(___aomod@divisor+4)^0,f,c
  3245   001276  2216               	addwfc	(___aomod@divisor+5)^0,f,c
  3246   001278  2217               	addwfc	(___aomod@divisor+6)^0,f,c
  3247   00127A  2218               	addwfc	(___aomod@divisor+7)^0,f,c
  3248   00127C                     l2351:
  3249   00127C  5011               	movf	___aomod@divisor^0,w,c
  3250   00127E  1012               	iorwf	(___aomod@divisor+1)^0,w,c
  3251   001280  1013               	iorwf	(___aomod@divisor+2)^0,w,c
  3252   001282  1014               	iorwf	(___aomod@divisor+3)^0,w,c
  3253   001284  1015               	iorwf	(___aomod@divisor+4)^0,w,c
  3254   001286  1016               	iorwf	(___aomod@divisor+5)^0,w,c
  3255   001288  1017               	iorwf	(___aomod@divisor+6)^0,w,c
  3256   00128A  1018               	iorwf	(___aomod@divisor+7)^0,w,c
  3257   00128C  B4D8               	btfsc	status,2,c
  3258   00128E  EF4B  F009         	goto	u1361
  3259   001292  EF4D  F009         	goto	u1360
  3260   001296                     u1361:
  3261   001296  EF95  F009         	goto	l2367
  3262   00129A                     u1360:
  3263   00129A  0E01               	movlw	1
  3264   00129C  6E19               	movwf	___aomod@counter^0,c
  3265   00129E  EF5B  F009         	goto	l2357
  3266   0012A2                     l2355:
  3267   0012A2  90D8               	bcf	status,0,c
  3268   0012A4  3611               	rlcf	___aomod@divisor^0,f,c
  3269   0012A6  3612               	rlcf	(___aomod@divisor+1)^0,f,c
  3270   0012A8  3613               	rlcf	(___aomod@divisor+2)^0,f,c
  3271   0012AA  3614               	rlcf	(___aomod@divisor+3)^0,f,c
  3272   0012AC  3615               	rlcf	(___aomod@divisor+4)^0,f,c
  3273   0012AE  3616               	rlcf	(___aomod@divisor+5)^0,f,c
  3274   0012B0  3617               	rlcf	(___aomod@divisor+6)^0,f,c
  3275   0012B2  3618               	rlcf	(___aomod@divisor+7)^0,f,c
  3276   0012B4  2A19               	incf	___aomod@counter^0,f,c
  3277   0012B6                     l2357:
  3278   0012B6  AE18               	btfss	(___aomod@divisor+7)^0,7,c
  3279   0012B8  EF60  F009         	goto	u1371
  3280   0012BC  EF62  F009         	goto	u1370
  3281   0012C0                     u1371:
  3282   0012C0  EF51  F009         	goto	l2355
  3283   0012C4                     u1370:
  3284   0012C4                     l2359:
  3285   0012C4  5011               	movf	___aomod@divisor^0,w,c
  3286   0012C6  5C09               	subwf	___aomod@dividend^0,w,c
  3287   0012C8  5012               	movf	(___aomod@divisor+1)^0,w,c
  3288   0012CA  580A               	subwfb	(___aomod@dividend+1)^0,w,c
  3289   0012CC  5013               	movf	(___aomod@divisor+2)^0,w,c
  3290   0012CE  580B               	subwfb	(___aomod@dividend+2)^0,w,c
  3291   0012D0  5014               	movf	(___aomod@divisor+3)^0,w,c
  3292   0012D2  580C               	subwfb	(___aomod@dividend+3)^0,w,c
  3293   0012D4  5015               	movf	(___aomod@divisor+4)^0,w,c
  3294   0012D6  580D               	subwfb	(___aomod@dividend+4)^0,w,c
  3295   0012D8  5016               	movf	(___aomod@divisor+5)^0,w,c
  3296   0012DA  580E               	subwfb	(___aomod@dividend+5)^0,w,c
  3297   0012DC  5017               	movf	(___aomod@divisor+6)^0,w,c
  3298   0012DE  580F               	subwfb	(___aomod@dividend+6)^0,w,c
  3299   0012E0  5018               	movf	(___aomod@divisor+7)^0,w,c
  3300   0012E2  5810               	subwfb	(___aomod@dividend+7)^0,w,c
  3301   0012E4  A0D8               	btfss	status,0,c
  3302   0012E6  EF77  F009         	goto	u1381
  3303   0012EA  EF79  F009         	goto	u1380
  3304   0012EE                     u1381:
  3305   0012EE  EF89  F009         	goto	l2363
  3306   0012F2                     u1380:
  3307   0012F2  5011               	movf	___aomod@divisor^0,w,c
  3308   0012F4  5E09               	subwf	___aomod@dividend^0,f,c
  3309   0012F6  5012               	movf	(___aomod@divisor+1)^0,w,c
  3310   0012F8  5A0A               	subwfb	(___aomod@dividend+1)^0,f,c
  3311   0012FA  5013               	movf	(___aomod@divisor+2)^0,w,c
  3312   0012FC  5A0B               	subwfb	(___aomod@dividend+2)^0,f,c
  3313   0012FE  5014               	movf	(___aomod@divisor+3)^0,w,c
  3314   001300  5A0C               	subwfb	(___aomod@dividend+3)^0,f,c
  3315   001302  5015               	movf	(___aomod@divisor+4)^0,w,c
  3316   001304  5A0D               	subwfb	(___aomod@dividend+4)^0,f,c
  3317   001306  5016               	movf	(___aomod@divisor+5)^0,w,c
  3318   001308  5A0E               	subwfb	(___aomod@dividend+5)^0,f,c
  3319   00130A  5017               	movf	(___aomod@divisor+6)^0,w,c
  3320   00130C  5A0F               	subwfb	(___aomod@dividend+6)^0,f,c
  3321   00130E  5018               	movf	(___aomod@divisor+7)^0,w,c
  3322   001310  5A10               	subwfb	(___aomod@dividend+7)^0,f,c
  3323   001312                     l2363:
  3324   001312  90D8               	bcf	status,0,c
  3325   001314  3218               	rrcf	(___aomod@divisor+7)^0,f,c
  3326   001316  3217               	rrcf	(___aomod@divisor+6)^0,f,c
  3327   001318  3216               	rrcf	(___aomod@divisor+5)^0,f,c
  3328   00131A  3215               	rrcf	(___aomod@divisor+4)^0,f,c
  3329   00131C  3214               	rrcf	(___aomod@divisor+3)^0,f,c
  3330   00131E  3213               	rrcf	(___aomod@divisor+2)^0,f,c
  3331   001320  3212               	rrcf	(___aomod@divisor+1)^0,f,c
  3332   001322  3211               	rrcf	___aomod@divisor^0,f,c
  3333   001324  2E19               	decfsz	___aomod@counter^0,f,c
  3334   001326  EF62  F009         	goto	l2359
  3335   00132A                     l2367:
  3336   00132A  501A               	movf	___aomod@sign^0,w,c
  3337   00132C  B4D8               	btfsc	status,2,c
  3338   00132E  EF9B  F009         	goto	u1391
  3339   001332  EF9D  F009         	goto	u1390
  3340   001336                     u1391:
  3341   001336  EFAD  F009         	goto	l2371
  3342   00133A                     u1390:
  3343   00133A  1E10               	comf	(___aomod@dividend+7)^0,f,c
  3344   00133C  1E0F               	comf	(___aomod@dividend+6)^0,f,c
  3345   00133E  1E0E               	comf	(___aomod@dividend+5)^0,f,c
  3346   001340  1E0D               	comf	(___aomod@dividend+4)^0,f,c
  3347   001342  1E0C               	comf	(___aomod@dividend+3)^0,f,c
  3348   001344  1E0B               	comf	(___aomod@dividend+2)^0,f,c
  3349   001346  1E0A               	comf	(___aomod@dividend+1)^0,f,c
  3350   001348  6C09               	negf	___aomod@dividend^0,c
  3351   00134A  0E00               	movlw	0
  3352   00134C  220A               	addwfc	(___aomod@dividend+1)^0,f,c
  3353   00134E  220B               	addwfc	(___aomod@dividend+2)^0,f,c
  3354   001350  220C               	addwfc	(___aomod@dividend+3)^0,f,c
  3355   001352  220D               	addwfc	(___aomod@dividend+4)^0,f,c
  3356   001354  220E               	addwfc	(___aomod@dividend+5)^0,f,c
  3357   001356  220F               	addwfc	(___aomod@dividend+6)^0,f,c
  3358   001358  2210               	addwfc	(___aomod@dividend+7)^0,f,c
  3359   00135A                     l2371:
  3360   00135A  C009  F009         	movff	___aomod@dividend,?___aomod
  3361   00135E  C00A  F00A         	movff	___aomod@dividend+1,?___aomod+1
  3362   001362  C00B  F00B         	movff	___aomod@dividend+2,?___aomod+2
  3363   001366  C00C  F00C         	movff	___aomod@dividend+3,?___aomod+3
  3364   00136A  C00D  F00D         	movff	___aomod@dividend+4,?___aomod+4
  3365   00136E  C00E  F00E         	movff	___aomod@dividend+5,?___aomod+5
  3366   001372  C00F  F00F         	movff	___aomod@dividend+6,?___aomod+6
  3367   001376  C010  F010         	movff	___aomod@dividend+7,?___aomod+7
  3368   00137A  0012               	return		;funcret
  3369   00137C                     __end_of___aomod:
  3370                           	callstack 0
  3371                           
  3372 ;; *************** function ___aodiv *****************
  3373 ;; Defined at:
  3374 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\aodiv.c"
  3375 ;; Parameters:    Size  Location     Type
  3376 ;;  dividend        8    8[COMRAM] long long 
  3377 ;;  divisor         8   16[COMRAM] long long 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  quotient        8   26[COMRAM] long long 
  3380 ;;  sign            1   25[COMRAM] unsigned char 
  3381 ;;  counter         1   24[COMRAM] unsigned char 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  8    8[COMRAM] long long 
  3384 ;; Registers used:
  3385 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3391 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3392 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3394 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3395 ;;Total ram usage:       26 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 6
  3398 ;; This function calls:
  3399 ;;		Nothing
  3400 ;; This function is called by:
  3401 ;;		_dtoa
  3402 ;; This function uses a non-reentrant model
  3403 ;;
  3404                           
  3405                           	psect	text28
  3406   001090                     __ptext28:
  3407                           	callstack 0
  3408   001090                     ___aodiv:
  3409                           	callstack 19
  3410   001090  0E00               	movlw	0
  3411   001092  6E1A               	movwf	___aodiv@sign^0,c
  3412   001094  BE18               	btfsc	(___aodiv@divisor+7)^0,7,c
  3413   001096  EF51  F008         	goto	u1270
  3414   00109A  EF4F  F008         	goto	u1271
  3415   00109E                     u1271:
  3416   00109E  EF63  F008         	goto	l2303
  3417   0010A2                     u1270:
  3418   0010A2  1E18               	comf	(___aodiv@divisor+7)^0,f,c
  3419   0010A4  1E17               	comf	(___aodiv@divisor+6)^0,f,c
  3420   0010A6  1E16               	comf	(___aodiv@divisor+5)^0,f,c
  3421   0010A8  1E15               	comf	(___aodiv@divisor+4)^0,f,c
  3422   0010AA  1E14               	comf	(___aodiv@divisor+3)^0,f,c
  3423   0010AC  1E13               	comf	(___aodiv@divisor+2)^0,f,c
  3424   0010AE  1E12               	comf	(___aodiv@divisor+1)^0,f,c
  3425   0010B0  6C11               	negf	___aodiv@divisor^0,c
  3426   0010B2  0E00               	movlw	0
  3427   0010B4  2212               	addwfc	(___aodiv@divisor+1)^0,f,c
  3428   0010B6  2213               	addwfc	(___aodiv@divisor+2)^0,f,c
  3429   0010B8  2214               	addwfc	(___aodiv@divisor+3)^0,f,c
  3430   0010BA  2215               	addwfc	(___aodiv@divisor+4)^0,f,c
  3431   0010BC  2216               	addwfc	(___aodiv@divisor+5)^0,f,c
  3432   0010BE  2217               	addwfc	(___aodiv@divisor+6)^0,f,c
  3433   0010C0  2218               	addwfc	(___aodiv@divisor+7)^0,f,c
  3434   0010C2  0E01               	movlw	1
  3435   0010C4  6E1A               	movwf	___aodiv@sign^0,c
  3436   0010C6                     l2303:
  3437   0010C6  BE10               	btfsc	(___aodiv@dividend+7)^0,7,c
  3438   0010C8  EF6A  F008         	goto	u1280
  3439   0010CC  EF68  F008         	goto	u1281
  3440   0010D0                     u1281:
  3441   0010D0  EF7C  F008         	goto	l2309
  3442   0010D4                     u1280:
  3443   0010D4  1E10               	comf	(___aodiv@dividend+7)^0,f,c
  3444   0010D6  1E0F               	comf	(___aodiv@dividend+6)^0,f,c
  3445   0010D8  1E0E               	comf	(___aodiv@dividend+5)^0,f,c
  3446   0010DA  1E0D               	comf	(___aodiv@dividend+4)^0,f,c
  3447   0010DC  1E0C               	comf	(___aodiv@dividend+3)^0,f,c
  3448   0010DE  1E0B               	comf	(___aodiv@dividend+2)^0,f,c
  3449   0010E0  1E0A               	comf	(___aodiv@dividend+1)^0,f,c
  3450   0010E2  6C09               	negf	___aodiv@dividend^0,c
  3451   0010E4  0E00               	movlw	0
  3452   0010E6  220A               	addwfc	(___aodiv@dividend+1)^0,f,c
  3453   0010E8  220B               	addwfc	(___aodiv@dividend+2)^0,f,c
  3454   0010EA  220C               	addwfc	(___aodiv@dividend+3)^0,f,c
  3455   0010EC  220D               	addwfc	(___aodiv@dividend+4)^0,f,c
  3456   0010EE  220E               	addwfc	(___aodiv@dividend+5)^0,f,c
  3457   0010F0  220F               	addwfc	(___aodiv@dividend+6)^0,f,c
  3458   0010F2  2210               	addwfc	(___aodiv@dividend+7)^0,f,c
  3459   0010F4  0E01               	movlw	1
  3460   0010F6  1A1A               	xorwf	___aodiv@sign^0,f,c
  3461   0010F8                     l2309:
  3462   0010F8  EE20  F01B         	lfsr	2,___aodiv@quotient
  3463   0010FC  0E07               	movlw	7
  3464   0010FE                     u1291:
  3465   0010FE  6ADE               	clrf	postinc2,c
  3466   001100  06E8               	decf	wreg,f,c
  3467   001102  E2FD               	bc	u1291
  3468   001104  5011               	movf	___aodiv@divisor^0,w,c
  3469   001106  1012               	iorwf	(___aodiv@divisor+1)^0,w,c
  3470   001108  1013               	iorwf	(___aodiv@divisor+2)^0,w,c
  3471   00110A  1014               	iorwf	(___aodiv@divisor+3)^0,w,c
  3472   00110C  1015               	iorwf	(___aodiv@divisor+4)^0,w,c
  3473   00110E  1016               	iorwf	(___aodiv@divisor+5)^0,w,c
  3474   001110  1017               	iorwf	(___aodiv@divisor+6)^0,w,c
  3475   001112  1018               	iorwf	(___aodiv@divisor+7)^0,w,c
  3476   001114  B4D8               	btfsc	status,2,c
  3477   001116  EF8F  F008         	goto	u1301
  3478   00111A  EF91  F008         	goto	u1300
  3479   00111E                     u1301:
  3480   00111E  EFE3  F008         	goto	l2331
  3481   001122                     u1300:
  3482   001122  0E01               	movlw	1
  3483   001124  6E19               	movwf	___aodiv@counter^0,c
  3484   001126  EF9F  F008         	goto	l2317
  3485   00112A                     l2315:
  3486   00112A  90D8               	bcf	status,0,c
  3487   00112C  3611               	rlcf	___aodiv@divisor^0,f,c
  3488   00112E  3612               	rlcf	(___aodiv@divisor+1)^0,f,c
  3489   001130  3613               	rlcf	(___aodiv@divisor+2)^0,f,c
  3490   001132  3614               	rlcf	(___aodiv@divisor+3)^0,f,c
  3491   001134  3615               	rlcf	(___aodiv@divisor+4)^0,f,c
  3492   001136  3616               	rlcf	(___aodiv@divisor+5)^0,f,c
  3493   001138  3617               	rlcf	(___aodiv@divisor+6)^0,f,c
  3494   00113A  3618               	rlcf	(___aodiv@divisor+7)^0,f,c
  3495   00113C  2A19               	incf	___aodiv@counter^0,f,c
  3496   00113E                     l2317:
  3497   00113E  AE18               	btfss	(___aodiv@divisor+7)^0,7,c
  3498   001140  EFA4  F008         	goto	u1311
  3499   001144  EFA6  F008         	goto	u1310
  3500   001148                     u1311:
  3501   001148  EF95  F008         	goto	l2315
  3502   00114C                     u1310:
  3503   00114C                     l2319:
  3504   00114C  90D8               	bcf	status,0,c
  3505   00114E  361B               	rlcf	___aodiv@quotient^0,f,c
  3506   001150  361C               	rlcf	(___aodiv@quotient+1)^0,f,c
  3507   001152  361D               	rlcf	(___aodiv@quotient+2)^0,f,c
  3508   001154  361E               	rlcf	(___aodiv@quotient+3)^0,f,c
  3509   001156  361F               	rlcf	(___aodiv@quotient+4)^0,f,c
  3510   001158  3620               	rlcf	(___aodiv@quotient+5)^0,f,c
  3511   00115A  3621               	rlcf	(___aodiv@quotient+6)^0,f,c
  3512   00115C  3622               	rlcf	(___aodiv@quotient+7)^0,f,c
  3513   00115E  5011               	movf	___aodiv@divisor^0,w,c
  3514   001160  5C09               	subwf	___aodiv@dividend^0,w,c
  3515   001162  5012               	movf	(___aodiv@divisor+1)^0,w,c
  3516   001164  580A               	subwfb	(___aodiv@dividend+1)^0,w,c
  3517   001166  5013               	movf	(___aodiv@divisor+2)^0,w,c
  3518   001168  580B               	subwfb	(___aodiv@dividend+2)^0,w,c
  3519   00116A  5014               	movf	(___aodiv@divisor+3)^0,w,c
  3520   00116C  580C               	subwfb	(___aodiv@dividend+3)^0,w,c
  3521   00116E  5015               	movf	(___aodiv@divisor+4)^0,w,c
  3522   001170  580D               	subwfb	(___aodiv@dividend+4)^0,w,c
  3523   001172  5016               	movf	(___aodiv@divisor+5)^0,w,c
  3524   001174  580E               	subwfb	(___aodiv@dividend+5)^0,w,c
  3525   001176  5017               	movf	(___aodiv@divisor+6)^0,w,c
  3526   001178  580F               	subwfb	(___aodiv@dividend+6)^0,w,c
  3527   00117A  5018               	movf	(___aodiv@divisor+7)^0,w,c
  3528   00117C  5810               	subwfb	(___aodiv@dividend+7)^0,w,c
  3529   00117E  A0D8               	btfss	status,0,c
  3530   001180  EFC4  F008         	goto	u1321
  3531   001184  EFC6  F008         	goto	u1320
  3532   001188                     u1321:
  3533   001188  EFD7  F008         	goto	l2327
  3534   00118C                     u1320:
  3535   00118C  5011               	movf	___aodiv@divisor^0,w,c
  3536   00118E  5E09               	subwf	___aodiv@dividend^0,f,c
  3537   001190  5012               	movf	(___aodiv@divisor+1)^0,w,c
  3538   001192  5A0A               	subwfb	(___aodiv@dividend+1)^0,f,c
  3539   001194  5013               	movf	(___aodiv@divisor+2)^0,w,c
  3540   001196  5A0B               	subwfb	(___aodiv@dividend+2)^0,f,c
  3541   001198  5014               	movf	(___aodiv@divisor+3)^0,w,c
  3542   00119A  5A0C               	subwfb	(___aodiv@dividend+3)^0,f,c
  3543   00119C  5015               	movf	(___aodiv@divisor+4)^0,w,c
  3544   00119E  5A0D               	subwfb	(___aodiv@dividend+4)^0,f,c
  3545   0011A0  5016               	movf	(___aodiv@divisor+5)^0,w,c
  3546   0011A2  5A0E               	subwfb	(___aodiv@dividend+5)^0,f,c
  3547   0011A4  5017               	movf	(___aodiv@divisor+6)^0,w,c
  3548   0011A6  5A0F               	subwfb	(___aodiv@dividend+6)^0,f,c
  3549   0011A8  5018               	movf	(___aodiv@divisor+7)^0,w,c
  3550   0011AA  5A10               	subwfb	(___aodiv@dividend+7)^0,f,c
  3551   0011AC  801B               	bsf	___aodiv@quotient^0,0,c
  3552   0011AE                     l2327:
  3553   0011AE  90D8               	bcf	status,0,c
  3554   0011B0  3218               	rrcf	(___aodiv@divisor+7)^0,f,c
  3555   0011B2  3217               	rrcf	(___aodiv@divisor+6)^0,f,c
  3556   0011B4  3216               	rrcf	(___aodiv@divisor+5)^0,f,c
  3557   0011B6  3215               	rrcf	(___aodiv@divisor+4)^0,f,c
  3558   0011B8  3214               	rrcf	(___aodiv@divisor+3)^0,f,c
  3559   0011BA  3213               	rrcf	(___aodiv@divisor+2)^0,f,c
  3560   0011BC  3212               	rrcf	(___aodiv@divisor+1)^0,f,c
  3561   0011BE  3211               	rrcf	___aodiv@divisor^0,f,c
  3562   0011C0  2E19               	decfsz	___aodiv@counter^0,f,c
  3563   0011C2  EFA6  F008         	goto	l2319
  3564   0011C6                     l2331:
  3565   0011C6  501A               	movf	___aodiv@sign^0,w,c
  3566   0011C8  B4D8               	btfsc	status,2,c
  3567   0011CA  EFE9  F008         	goto	u1331
  3568   0011CE  EFEB  F008         	goto	u1330
  3569   0011D2                     u1331:
  3570   0011D2  EFFB  F008         	goto	l2335
  3571   0011D6                     u1330:
  3572   0011D6  1E22               	comf	(___aodiv@quotient+7)^0,f,c
  3573   0011D8  1E21               	comf	(___aodiv@quotient+6)^0,f,c
  3574   0011DA  1E20               	comf	(___aodiv@quotient+5)^0,f,c
  3575   0011DC  1E1F               	comf	(___aodiv@quotient+4)^0,f,c
  3576   0011DE  1E1E               	comf	(___aodiv@quotient+3)^0,f,c
  3577   0011E0  1E1D               	comf	(___aodiv@quotient+2)^0,f,c
  3578   0011E2  1E1C               	comf	(___aodiv@quotient+1)^0,f,c
  3579   0011E4  6C1B               	negf	___aodiv@quotient^0,c
  3580   0011E6  0E00               	movlw	0
  3581   0011E8  221C               	addwfc	(___aodiv@quotient+1)^0,f,c
  3582   0011EA  221D               	addwfc	(___aodiv@quotient+2)^0,f,c
  3583   0011EC  221E               	addwfc	(___aodiv@quotient+3)^0,f,c
  3584   0011EE  221F               	addwfc	(___aodiv@quotient+4)^0,f,c
  3585   0011F0  2220               	addwfc	(___aodiv@quotient+5)^0,f,c
  3586   0011F2  2221               	addwfc	(___aodiv@quotient+6)^0,f,c
  3587   0011F4  2222               	addwfc	(___aodiv@quotient+7)^0,f,c
  3588   0011F6                     l2335:
  3589   0011F6  C01B  F009         	movff	___aodiv@quotient,?___aodiv
  3590   0011FA  C01C  F00A         	movff	___aodiv@quotient+1,?___aodiv+1
  3591   0011FE  C01D  F00B         	movff	___aodiv@quotient+2,?___aodiv+2
  3592   001202  C01E  F00C         	movff	___aodiv@quotient+3,?___aodiv+3
  3593   001206  C01F  F00D         	movff	___aodiv@quotient+4,?___aodiv+4
  3594   00120A  C020  F00E         	movff	___aodiv@quotient+5,?___aodiv+5
  3595   00120E  C021  F00F         	movff	___aodiv@quotient+6,?___aodiv+6
  3596   001212  C022  F010         	movff	___aodiv@quotient+7,?___aodiv+7
  3597   001216  0012               	return		;funcret
  3598   001218                     __end_of___aodiv:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _RGBC2Serial *****************
  3602 ;; Defined at:
  3603 ;;		line 88 in file "color.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  str             2   13[COMRAM] PTR unsigned char 
  3606 ;;		 -> main@buf(100), 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3618 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3620 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3621 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;Total ram usage:        4 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 8
  3625 ;; This function calls:
  3626 ;;		_sendStringSerial4
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text29
  3633   001B80                     __ptext29:
  3634                           	callstack 0
  3635   001B80                     _RGBC2Serial:
  3636                           	callstack 22
  3637   001B80                     
  3638                           ;color.c: 89:     _delay((unsigned long)((200)*(64000000/4000.0)));
  3639   001B80  0E11               	movlw	17
  3640   001B82  6E11               	movwf	(??_RGBC2Serial+1)^0,c
  3641   001B84  0E3C               	movlw	60
  3642   001B86  6E10               	movwf	??_RGBC2Serial^0,c
  3643   001B88  0ECB               	movlw	203
  3644   001B8A                     u1677:
  3645   001B8A  2EE8               	decfsz	wreg,f,c
  3646   001B8C  D7FE               	bra	u1677
  3647   001B8E  2E10               	decfsz	??_RGBC2Serial^0,f,c
  3648   001B90  D7FC               	bra	u1677
  3649   001B92  2E11               	decfsz	(??_RGBC2Serial+1)^0,f,c
  3650   001B94  D7FA               	bra	u1677
  3651   001B96  F000               	nop	
  3652   001B98                     
  3653                           ;color.c: 90:     sendStringSerial4(str);
  3654   001B98  C00E  F00A         	movff	RGBC2Serial@str,sendStringSerial4@string
  3655   001B9C  C00F  F00B         	movff	RGBC2Serial@str+1,sendStringSerial4@string+1
  3656   001BA0  ECFF  F00C         	call	_sendStringSerial4	;wreg free
  3657   001BA4  0012               	return		;funcret
  3658   001BA6                     __end_of_RGBC2Serial:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _sendStringSerial4 *****************
  3662 ;; Defined at:
  3663 ;;		line 37 in file "../lab-5-areeb-atulit.X/serial.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  string          2    9[COMRAM] PTR unsigned char 
  3666 ;;		 -> main@buf(100), 
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  i               2   11[COMRAM] int 
  3669 ;; Return value:  Size  Location     Type
  3670 ;;                  1    wreg      void 
  3671 ;; Registers used:
  3672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3673 ;; Tracked objects:
  3674 ;;		On entry : 0/0
  3675 ;;		On exit  : 0/0
  3676 ;;		Unchanged: 0/0
  3677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3678 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3679 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3681 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3682 ;;Total ram usage:        4 bytes
  3683 ;; Hardware stack levels used: 1
  3684 ;; Hardware stack levels required when called: 7
  3685 ;; This function calls:
  3686 ;;		_sendCharSerial4
  3687 ;; This function is called by:
  3688 ;;		_RGBC2Serial
  3689 ;; This function uses a non-reentrant model
  3690 ;;
  3691                           
  3692                           	psect	text30
  3693   0019FE                     __ptext30:
  3694                           	callstack 0
  3695   0019FE                     _sendStringSerial4:
  3696                           	callstack 22
  3697   0019FE                     
  3698                           ;../lab-5-areeb-atulit.X/serial.c: 39:     int i=0;
  3699   0019FE  0E00               	movlw	0
  3700   001A00  6E0D               	movwf	(sendStringSerial4@i+1)^0,c
  3701   001A02  0E00               	movlw	0
  3702   001A04  6E0C               	movwf	sendStringSerial4@i^0,c
  3703                           
  3704                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3705   001A06  EF10  F00D         	goto	l2567
  3706   001A0A                     l2563:
  3707                           
  3708                           ;../lab-5-areeb-atulit.X/serial.c: 41:         sendCharSerial4(string[i]);
  3709   001A0A  500C               	movf	sendStringSerial4@i^0,w,c
  3710   001A0C  240A               	addwf	sendStringSerial4@string^0,w,c
  3711   001A0E  6ED9               	movwf	fsr2l,c
  3712   001A10  500D               	movf	(sendStringSerial4@i+1)^0,w,c
  3713   001A12  200B               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3714   001A14  6EDA               	movwf	fsr2h,c
  3715   001A16  50DF               	movf	indf2,w,c
  3716   001A18  EC11  F00E         	call	_sendCharSerial4
  3717   001A1C                     
  3718                           ;../lab-5-areeb-atulit.X/serial.c: 42:         i++;
  3719   001A1C  4A0C               	infsnz	sendStringSerial4@i^0,f,c
  3720   001A1E  2A0D               	incf	(sendStringSerial4@i+1)^0,f,c
  3721   001A20                     l2567:
  3722                           
  3723                           ;../lab-5-areeb-atulit.X/serial.c: 40:     while(string[i]!=0){
  3724   001A20  500C               	movf	sendStringSerial4@i^0,w,c
  3725   001A22  240A               	addwf	sendStringSerial4@string^0,w,c
  3726   001A24  6ED9               	movwf	fsr2l,c
  3727   001A26  500D               	movf	(sendStringSerial4@i+1)^0,w,c
  3728   001A28  200B               	addwfc	(sendStringSerial4@string+1)^0,w,c
  3729   001A2A  6EDA               	movwf	fsr2h,c
  3730   001A2C  50DF               	movf	indf2,w,c
  3731   001A2E  A4D8               	btfss	status,2,c
  3732   001A30  EF1C  F00D         	goto	u1621
  3733   001A34  EF1E  F00D         	goto	u1620
  3734   001A38                     u1621:
  3735   001A38  EF05  F00D         	goto	l2563
  3736   001A3C                     u1620:
  3737   001A3C  0012               	return		;funcret
  3738   001A3E                     __end_of_sendStringSerial4:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function _sendCharSerial4 *****************
  3742 ;; Defined at:
  3743 ;;		line 30 in file "../lab-5-areeb-atulit.X/serial.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;  charToSend      1    wreg     unsigned char 
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;  charToSend      1    8[COMRAM] unsigned char 
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3760 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3761 ;;Total ram usage:        1 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; Hardware stack levels required when called: 6
  3764 ;; This function calls:
  3765 ;;		Nothing
  3766 ;; This function is called by:
  3767 ;;		_sendStringSerial4
  3768 ;; This function uses a non-reentrant model
  3769 ;;
  3770                           
  3771                           	psect	text31
  3772   001C22                     __ptext31:
  3773                           	callstack 0
  3774   001C22                     _sendCharSerial4:
  3775                           	callstack 22
  3776                           
  3777                           ;incstack = 0
  3778                           ;sendCharSerial4@charToSend stored from wreg
  3779   001C22  6E09               	movwf	sendCharSerial4@charToSend^0,c
  3780   001C24                     l234:
  3781   001C24  010E               	movlb	14	; () banked
  3782   001C26  A537               	btfss	55,2,b	;volatile
  3783   001C28  EF18  F00E         	goto	u1601
  3784   001C2C  EF1A  F00E         	goto	u1600
  3785   001C30                     u1601:
  3786   001C30  EF12  F00E         	goto	l234
  3787   001C34                     u1600:
  3788   001C34                     
  3789                           ; BSR set to: 14
  3790                           ;../lab-5-areeb-atulit.X/serial.c: 32:     TX4REG = charToSend;
  3791   001C34  C009  FEE4         	movff	sendCharSerial4@charToSend,3812	;volatile
  3792   001C38                     
  3793                           ; BSR set to: 14
  3794   001C38  0012               	return		;funcret
  3795   001C3A                     __end_of_sendCharSerial4:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function _HighISR *****************
  3799 ;; Defined at:
  3800 ;;		line 71 in file "interrupts.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  1    wreg      void 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0, cstack
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3818 ;;Total ram usage:        0 bytes
  3819 ;; Hardware stack levels used: 1
  3820 ;; Hardware stack levels required when called: 5
  3821 ;; This function calls:
  3822 ;;		_Color_Interrupts_clear
  3823 ;; This function is called by:
  3824 ;;		Interrupt level 2
  3825 ;; This function uses a non-reentrant model
  3826 ;;
  3827                           
  3828                           	psect	intcode
  3829   000008                     __pintcode:
  3830                           	callstack 0
  3831   000008                     _HighISR:
  3832                           	callstack 16
  3833                           
  3834                           ; BSR set to: 14
  3835                           ;incstack = 0
  3836   000008  8256               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3837   00000A                     
  3838                           ;interrupts.c: 74:     if(PIR0bits.INT0IF==1){
  3839   00000A  010E               	movlb	14	; () banked
  3840   00000C  A133               	btfss	51,0,b	;volatile
  3841   00000E  EF0B  F000         	goto	i2u121_41
  3842   000012  EF0D  F000         	goto	i2u121_40
  3843   000016                     i2u121_41:
  3844   000016  EF17  F000         	goto	i2l336
  3845   00001A                     i2u121_40:
  3846   00001A                     
  3847                           ; BSR set to: 14
  3848                           ;interrupts.c: 75:         LATDbits.LATD7 = 1;
  3849   00001A  8E7C               	bsf	124,7,c	;volatile
  3850   00001C                     
  3851                           ; BSR set to: 14
  3852                           ;interrupts.c: 76:         interrupt_flag = 1;
  3853   00001C  0E00               	movlw	0
  3854   00001E  0100               	movlb	0	; () banked
  3855   000020  6F96               	movwf	(_interrupt_flag+1)& (0+255),b
  3856   000022  0E01               	movlw	1
  3857   000024  6F95               	movwf	_interrupt_flag& (0+255),b
  3858   000026                     
  3859                           ; BSR set to: 0
  3860                           ;interrupts.c: 78:         Color_Interrupts_clear();
  3861   000026  EC55  F00D         	call	_Color_Interrupts_clear	;wreg free
  3862   00002A                     
  3863                           ;interrupts.c: 79:         PIR0bits.INT0IF = 0;
  3864   00002A  010E               	movlb	14	; () banked
  3865   00002C  9133               	bcf	51,0,b	;volatile
  3866   00002E                     i2l336:
  3867                           
  3868                           ; BSR set to: 14
  3869   00002E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3870   000030  0011               	retfie		f
  3871   000032                     __end_of_HighISR:
  3872                           	callstack 0
  3873                           
  3874 ;; *************** function _Color_Interrupts_clear *****************
  3875 ;; Defined at:
  3876 ;;		line 51 in file "interrupts.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;		None
  3879 ;; Auto vars:     Size  Location     Type
  3880 ;;		None
  3881 ;; Return value:  Size  Location     Type
  3882 ;;                  1    wreg      void 
  3883 ;; Registers used:
  3884 ;;		wreg, status,2, status,0, cstack
  3885 ;; Tracked objects:
  3886 ;;		On entry : 0/0
  3887 ;;		On exit  : 0/0
  3888 ;;		Unchanged: 0/0
  3889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;Total ram usage:        0 bytes
  3895 ;; Hardware stack levels used: 1
  3896 ;; Hardware stack levels required when called: 4
  3897 ;; This function calls:
  3898 ;;		_Color_Interrupts_init
  3899 ;;		_Color_Interrupts_threshold
  3900 ;;		_persistence_register
  3901 ;;		i2_I2C_2_Master_Start
  3902 ;;		i2_I2C_2_Master_Stop
  3903 ;;		i2_I2C_2_Master_Write
  3904 ;; This function is called by:
  3905 ;;		_HighISR
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text33
  3910   001AAA                     __ptext33:
  3911                           	callstack 0
  3912   001AAA                     _Color_Interrupts_clear:
  3913                           	callstack 16
  3914   001AAA                     
  3915                           ;interrupts.c: 55:     I2C_2_Master_Start();
  3916   001AAA  EC4E  F00E         	call	i2_I2C_2_Master_Start	;wreg free
  3917                           
  3918                           ;interrupts.c: 56:     I2C_2_Master_Write(0x52 | 0x00);
  3919   001AAE  0E52               	movlw	82
  3920   001AB0  EC34  F00E         	call	i2_I2C_2_Master_Write
  3921                           
  3922                           ;interrupts.c: 57:     I2C_2_Master_Write(0b11100110);
  3923   001AB4  0EE6               	movlw	230
  3924   001AB6  EC34  F00E         	call	i2_I2C_2_Master_Write
  3925                           
  3926                           ;interrupts.c: 58:     I2C_2_Master_Stop();
  3927   001ABA  EC49  F00E         	call	i2_I2C_2_Master_Stop	;wreg free
  3928                           
  3929                           ;interrupts.c: 61:     Color_Interrupts_init();
  3930   001ABE  EC04  F00E         	call	_Color_Interrupts_init	;wreg free
  3931                           
  3932                           ;interrupts.c: 62:     persistence_register();
  3933   001AC2  EC2E  F00E         	call	_persistence_register	;wreg free
  3934                           
  3935                           ;interrupts.c: 63:     Color_Interrupts_threshold(5000, 0);
  3936   001AC6  0E13               	movlw	19
  3937   001AC8  6E06               	movwf	(Color_Interrupts_threshold@upperThreshold+1)^0,c
  3938   001ACA  0E88               	movlw	136
  3939   001ACC  6E05               	movwf	Color_Interrupts_threshold@upperThreshold^0,c
  3940   001ACE  0E00               	movlw	0
  3941   001AD0  6E08               	movwf	(Color_Interrupts_threshold@lowerThreshold+1)^0,c
  3942   001AD2  0E00               	movlw	0
  3943   001AD4  6E07               	movwf	Color_Interrupts_threshold@lowerThreshold^0,c
  3944   001AD6  EC83  F00D         	call	_Color_Interrupts_threshold	;wreg free
  3945   001ADA  0012               	return		;funcret
  3946   001ADC                     __end_of_Color_Interrupts_clear:
  3947                           	callstack 0
  3948                           
  3949 ;; *************** function _persistence_register *****************
  3950 ;; Defined at:
  3951 ;;		line 46 in file "interrupts.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 3
  3972 ;; This function calls:
  3973 ;;		i2_color_writetoaddr
  3974 ;; This function is called by:
  3975 ;;		_Color_Interrupts_clear
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text34
  3980   001C5C                     __ptext34:
  3981                           	callstack 0
  3982   001C5C                     _persistence_register:
  3983                           	callstack 16
  3984   001C5C                     
  3985                           ;interrupts.c: 48:  color_writetoaddr(0x0C, 0b010);
  3986   001C5C  0E02               	movlw	2
  3987   001C5E  6E03               	movwf	i2color_writetoaddr@value^0,c
  3988   001C60  0E0C               	movlw	12
  3989   001C62  ECF4  F00D         	call	i2_color_writetoaddr
  3990   001C66  0012               	return		;funcret
  3991   001C68                     __end_of_persistence_register:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _Color_Interrupts_threshold *****************
  3995 ;; Defined at:
  3996 ;;		line 38 in file "interrupts.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  upperThresho    2    4[COMRAM] unsigned int 
  3999 ;;  lowerThresho    2    6[COMRAM] unsigned int 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;		None
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4014 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4015 ;;Total ram usage:        4 bytes
  4016 ;; Hardware stack levels used: 1
  4017 ;; Hardware stack levels required when called: 3
  4018 ;; This function calls:
  4019 ;;		i2_color_writetoaddr
  4020 ;; This function is called by:
  4021 ;;		_Color_Interrupts_clear
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text35
  4026   001B06                     __ptext35:
  4027                           	callstack 0
  4028   001B06                     _Color_Interrupts_threshold:
  4029                           	callstack 16
  4030   001B06                     
  4031                           ;interrupts.c: 38: void Color_Interrupts_threshold(unsigned int upperThreshold, unsigned
      +                           int lowerThreshold);interrupts.c: 39: {;interrupts.c: 40:  color_writetoaddr(0x04, lowe
      +                          rThreshold);
  4032   001B06  C007  F003         	movff	Color_Interrupts_threshold@lowerThreshold,i2color_writetoaddr@value
  4033   001B0A  0E04               	movlw	4
  4034   001B0C  ECF4  F00D         	call	i2_color_writetoaddr
  4035                           
  4036                           ;interrupts.c: 41:     color_writetoaddr(0x05, lowerThreshold>>8);
  4037   001B10  5008               	movf	(Color_Interrupts_threshold@lowerThreshold+1)^0,w,c
  4038   001B12  6E03               	movwf	i2color_writetoaddr@value^0,c
  4039   001B14  0E05               	movlw	5
  4040   001B16  ECF4  F00D         	call	i2_color_writetoaddr
  4041                           
  4042                           ;interrupts.c: 42:     color_writetoaddr(0x06, upperThreshold);
  4043   001B1A  C005  F003         	movff	Color_Interrupts_threshold@upperThreshold,i2color_writetoaddr@value
  4044   001B1E  0E06               	movlw	6
  4045   001B20  ECF4  F00D         	call	i2_color_writetoaddr
  4046                           
  4047                           ;interrupts.c: 43:     color_writetoaddr(0x07, upperThreshold>>8);
  4048   001B24  5006               	movf	(Color_Interrupts_threshold@upperThreshold+1)^0,w,c
  4049   001B26  6E03               	movwf	i2color_writetoaddr@value^0,c
  4050   001B28  0E07               	movlw	7
  4051   001B2A  ECF4  F00D         	call	i2_color_writetoaddr
  4052   001B2E  0012               	return		;funcret
  4053   001B30                     __end_of_Color_Interrupts_threshold:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function _Color_Interrupts_init *****************
  4057 ;; Defined at:
  4058 ;;		line 29 in file "interrupts.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4074 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4075 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4076 ;;Total ram usage:        1 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 3
  4079 ;; This function calls:
  4080 ;;		i2_color_writetoaddr
  4081 ;; This function is called by:
  4082 ;;		_Color_Interrupts_clear
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text36
  4087   001C08                     __ptext36:
  4088                           	callstack 0
  4089   001C08                     _Color_Interrupts_init:
  4090                           	callstack 16
  4091   001C08                     
  4092                           ;interrupts.c: 33:    color_writetoaddr(0x00, 0b00010011);
  4093   001C08  0E13               	movlw	19
  4094   001C0A  6E03               	movwf	i2color_writetoaddr@value^0,c
  4095   001C0C  0E00               	movlw	0
  4096   001C0E  ECF4  F00D         	call	i2_color_writetoaddr
  4097   001C12                     
  4098                           ;interrupts.c: 34:    _delay((unsigned long)((10)*(64000000/4000.0))) ;
  4099   001C12  0ED0               	movlw	208
  4100   001C14  6E05               	movwf	??_Color_Interrupts_init^0,c
  4101   001C16  0ECA               	movlw	202
  4102   001C18                     i2u168_47:
  4103   001C18  2EE8               	decfsz	wreg,f,c
  4104   001C1A  D7FE               	bra	i2u168_47
  4105   001C1C  2E05               	decfsz	??_Color_Interrupts_init^0,f,c
  4106   001C1E  D7FC               	bra	i2u168_47
  4107   001C20  0012               	return		;funcret
  4108   001C22                     __end_of_Color_Interrupts_init:
  4109                           	callstack 0
  4110                           
  4111 ;; *************** function i2_color_writetoaddr *****************
  4112 ;; Defined at:
  4113 ;;		line 25 in file "color.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  address         1    wreg     unsigned char 
  4116 ;;  value           1    2[COMRAM] unsigned char 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  address         1    3[COMRAM] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, status,2, status,0, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4128 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4129 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4132 ;;Total ram usage:        2 bytes
  4133 ;; Hardware stack levels used: 1
  4134 ;; Hardware stack levels required when called: 2
  4135 ;; This function calls:
  4136 ;;		i2_I2C_2_Master_Start
  4137 ;;		i2_I2C_2_Master_Stop
  4138 ;;		i2_I2C_2_Master_Write
  4139 ;; This function is called by:
  4140 ;;		_Color_Interrupts_init
  4141 ;;		_Color_Interrupts_threshold
  4142 ;;		_persistence_register
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146                           	psect	text37
  4147   001BE8                     __ptext37:
  4148                           	callstack 0
  4149   001BE8                     i2_color_writetoaddr:
  4150                           	callstack 16
  4151                           
  4152                           ;incstack = 0
  4153                           ;i2color_writetoaddr@address stored from wreg
  4154   001BE8  6E04               	movwf	i2color_writetoaddr@address^0,c
  4155   001BEA                     
  4156                           ;color.c: 26:     I2C_2_Master_Start();
  4157   001BEA  EC4E  F00E         	call	i2_I2C_2_Master_Start	;wreg free
  4158                           
  4159                           ;color.c: 27:     I2C_2_Master_Write(0x52 | 0x00);
  4160   001BEE  0E52               	movlw	82
  4161   001BF0  EC34  F00E         	call	i2_I2C_2_Master_Write
  4162                           
  4163                           ;color.c: 28:     I2C_2_Master_Write(0x80 | address);
  4164   001BF4  5004               	movf	i2color_writetoaddr@address^0,w,c
  4165   001BF6  0980               	iorlw	128
  4166   001BF8  EC34  F00E         	call	i2_I2C_2_Master_Write
  4167                           
  4168                           ;color.c: 29:     I2C_2_Master_Write(value);
  4169   001BFC  5003               	movf	i2color_writetoaddr@value^0,w,c
  4170   001BFE  EC34  F00E         	call	i2_I2C_2_Master_Write
  4171                           
  4172                           ;color.c: 30:     I2C_2_Master_Stop();
  4173   001C02  EC49  F00E         	call	i2_I2C_2_Master_Stop	;wreg free
  4174   001C06  0012               	return		;funcret
  4175   001C08                     __end_ofi2_color_writetoaddr:
  4176                           	callstack 0
  4177                           
  4178 ;; *************** function i2_I2C_2_Master_Write *****************
  4179 ;; Defined at:
  4180 ;;		line 45 in file "i2c.c"
  4181 ;; Parameters:    Size  Location     Type
  4182 ;;  data_byte       1    wreg     unsigned char 
  4183 ;; Auto vars:     Size  Location     Type
  4184 ;;  data_byte       1    1[COMRAM] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      void 
  4187 ;; Registers used:
  4188 ;;		wreg, status,2, status,0, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4197 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;Total ram usage:        1 bytes
  4199 ;; Hardware stack levels used: 1
  4200 ;; Hardware stack levels required when called: 1
  4201 ;; This function calls:
  4202 ;;		i2_I2C_2_Master_Idle
  4203 ;; This function is called by:
  4204 ;;		_Color_Interrupts_clear
  4205 ;;		i2_color_writetoaddr
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text38
  4210   001C68                     __ptext38:
  4211                           	callstack 0
  4212   001C68                     i2_I2C_2_Master_Write:
  4213                           	callstack 18
  4214                           
  4215                           ;incstack = 0
  4216                           ;i2I2C_2_Master_Write@data_byte stored from wreg
  4217   001C68  6E02               	movwf	i2I2C_2_Master_Write@data_byte^0,c
  4218   001C6A                     
  4219                           ;i2c.c: 45: void I2C_2_Master_Write(unsigned char data_byte);i2c.c: 46: {;i2c.c: 47:   I
      +                          2C_2_Master_Idle();
  4220   001C6A  ECAC  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4221   001C6E                     
  4222                           ;i2c.c: 48:   SSP2BUF = data_byte;
  4223   001C6E  C002  FED5         	movff	i2I2C_2_Master_Write@data_byte,3797	;volatile
  4224   001C72  0012               	return		;funcret
  4225   001C74                     __end_ofi2_I2C_2_Master_Write:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function i2_I2C_2_Master_Stop *****************
  4229 ;; Defined at:
  4230 ;;		line 39 in file "i2c.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;		None
  4233 ;; Auto vars:     Size  Location     Type
  4234 ;;		None
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  1    wreg      void 
  4237 ;; Registers used:
  4238 ;;		wreg, status,2, status,0, cstack
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4248 ;;Total ram usage:        0 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; Hardware stack levels required when called: 1
  4251 ;; This function calls:
  4252 ;;		i2_I2C_2_Master_Idle
  4253 ;; This function is called by:
  4254 ;;		_Color_Interrupts_clear
  4255 ;;		i2_color_writetoaddr
  4256 ;; This function uses a non-reentrant model
  4257 ;;
  4258                           
  4259                           	psect	text39
  4260   001C92                     __ptext39:
  4261                           	callstack 0
  4262   001C92                     i2_I2C_2_Master_Stop:
  4263                           	callstack 18
  4264   001C92                     
  4265                           ;i2c.c: 41:   I2C_2_Master_Idle();
  4266   001C92  ECAC  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4267   001C96                     
  4268                           ;i2c.c: 42:   SSP2CON2bits.PEN = 1;
  4269   001C96  010E               	movlb	14	; () banked
  4270   001C98  85DA               	bsf	218,2,b	;volatile
  4271   001C9A                     
  4272                           ; BSR set to: 14
  4273   001C9A  0012               	return		;funcret
  4274   001C9C                     __end_ofi2_I2C_2_Master_Stop:
  4275                           	callstack 0
  4276                           
  4277 ;; *************** function i2_I2C_2_Master_Start *****************
  4278 ;; Defined at:
  4279 ;;		line 27 in file "i2c.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;		None
  4282 ;; Auto vars:     Size  Location     Type
  4283 ;;		None
  4284 ;; Return value:  Size  Location     Type
  4285 ;;                  1    wreg      void 
  4286 ;; Registers used:
  4287 ;;		wreg, status,2, status,0, cstack
  4288 ;; Tracked objects:
  4289 ;;		On entry : 0/0
  4290 ;;		On exit  : 0/0
  4291 ;;		Unchanged: 0/0
  4292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4297 ;;Total ram usage:        0 bytes
  4298 ;; Hardware stack levels used: 1
  4299 ;; Hardware stack levels required when called: 1
  4300 ;; This function calls:
  4301 ;;		i2_I2C_2_Master_Idle
  4302 ;; This function is called by:
  4303 ;;		_Color_Interrupts_clear
  4304 ;;		i2_color_writetoaddr
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text40
  4309   001C9C                     __ptext40:
  4310                           	callstack 0
  4311   001C9C                     i2_I2C_2_Master_Start:
  4312                           	callstack 18
  4313   001C9C                     
  4314                           ;i2c.c: 29:   I2C_2_Master_Idle();
  4315   001C9C  ECAC  F00D         	call	i2_I2C_2_Master_Idle	;wreg free
  4316   001CA0                     
  4317                           ;i2c.c: 30:   SSP2CON2bits.SEN = 1;
  4318   001CA0  010E               	movlb	14	; () banked
  4319   001CA2  81DA               	bsf	218,0,b	;volatile
  4320   001CA4                     
  4321                           ; BSR set to: 14
  4322   001CA4  0012               	return		;funcret
  4323   001CA6                     __end_ofi2_I2C_2_Master_Start:
  4324                           	callstack 0
  4325                           
  4326 ;; *************** function i2_I2C_2_Master_Idle *****************
  4327 ;; Defined at:
  4328 ;;		line 22 in file "i2c.c"
  4329 ;; Parameters:    Size  Location     Type
  4330 ;;		None
  4331 ;; Auto vars:     Size  Location     Type
  4332 ;;		None
  4333 ;; Return value:  Size  Location     Type
  4334 ;;                  1    wreg      void 
  4335 ;; Registers used:
  4336 ;;		wreg, status,2, status,0
  4337 ;; Tracked objects:
  4338 ;;		On entry : 0/0
  4339 ;;		On exit  : 0/0
  4340 ;;		Unchanged: 0/0
  4341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4346 ;;Total ram usage:        1 bytes
  4347 ;; Hardware stack levels used: 1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		i2_I2C_2_Master_Start
  4352 ;;		i2_I2C_2_Master_Stop
  4353 ;;		i2_I2C_2_Master_Write
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text41
  4358   001B58                     __ptext41:
  4359                           	callstack 0
  4360   001B58                     i2_I2C_2_Master_Idle:
  4361                           	callstack 18
  4362   001B58                     i2l128:
  4363   001B58  010E               	movlb	14	; () banked
  4364   001B5A  B5D8               	btfsc	216,2,b	;volatile
  4365   001B5C  EFB2  F00D         	goto	i2u102_41
  4366   001B60  EFB4  F00D         	goto	i2u102_40
  4367   001B64                     i2u102_41:
  4368   001B64  EFAC  F00D         	goto	i2l128
  4369   001B68                     i2u102_40:
  4370   001B68                     
  4371                           ; BSR set to: 14
  4372   001B68  CEDA F001          	movff	3802,??i2_I2C_2_Master_Idle	;volatile
  4373   001B6C  0E1F               	movlw	31
  4374   001B6E  1601               	andwf	??i2_I2C_2_Master_Idle^0,f,c
  4375   001B70  A4D8               	btfss	status,2,c
  4376   001B72  EFBD  F00D         	goto	i2u103_41
  4377   001B76  EFBF  F00D         	goto	i2u103_40
  4378   001B7A                     i2u103_41:
  4379   001B7A  EFAC  F00D         	goto	i2l128
  4380   001B7E                     i2u103_40:
  4381   001B7E                     
  4382                           ; BSR set to: 14
  4383   001B7E  0012               	return		;funcret
  4384   001B80                     __end_ofi2_I2C_2_Master_Idle:
  4385                           	callstack 0
  4386                           
  4387                           	psect	rparam
  4388   000000                     
  4389                           	psect	temp
  4390   000056                     btemp:
  4391                           	callstack 0
  4392   000056                     	ds	1
  4393   000000                     int$flags	set	btemp
  4394   000000                     wtemp8	set	btemp+1
  4395   000000                     ttemp5	set	btemp+1
  4396   000000                     ttemp6	set	btemp+4
  4397   000000                     ttemp7	set	btemp+8
  4398                           
  4399                           	psect	idloc
  4400                           
  4401                           ;Config register IDLOC0 @ 0x200000
  4402                           ;	unspecified, using default values
  4403   200000                     	org	2097152
  4404   200000  0FFF               	dw	4095
  4405                           
  4406                           ;Config register IDLOC1 @ 0x200002
  4407                           ;	unspecified, using default values
  4408   200002                     	org	2097154
  4409   200002  0FFF               	dw	4095
  4410                           
  4411                           ;Config register IDLOC2 @ 0x200004
  4412                           ;	unspecified, using default values
  4413   200004                     	org	2097156
  4414   200004  0FFF               	dw	4095
  4415                           
  4416                           ;Config register IDLOC3 @ 0x200006
  4417                           ;	unspecified, using default values
  4418   200006                     	org	2097158
  4419   200006  0FFF               	dw	4095
  4420                           
  4421                           ;Config register IDLOC4 @ 0x200008
  4422                           ;	unspecified, using default values
  4423   200008                     	org	2097160
  4424   200008  0FFF               	dw	4095
  4425                           
  4426                           ;Config register IDLOC5 @ 0x20000A
  4427                           ;	unspecified, using default values
  4428   20000A                     	org	2097162
  4429   20000A  0FFF               	dw	4095
  4430                           
  4431                           ;Config register IDLOC6 @ 0x20000C
  4432                           ;	unspecified, using default values
  4433   20000C                     	org	2097164
  4434   20000C  0FFF               	dw	4095
  4435                           
  4436                           ;Config register IDLOC7 @ 0x20000E
  4437                           ;	unspecified, using default values
  4438   20000E                     	org	2097166
  4439   20000E  0FFF               	dw	4095
  4440                           
  4441                           	psect	config
  4442                           
  4443                           ;Config register CONFIG1L @ 0x300000
  4444                           ;	External Oscillator mode Selection bits
  4445                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  4446                           ;	Power-up default value for COSC bits
  4447                           ;	RSTOSC = EXTOSC_4PLL, EXTOSC with 4x PLL, with EXTOSC operating per FEXTOSC bits
  4448   300000                     	org	3145728
  4449   300000  AA                 	db	170
  4450                           
  4451                           ;Config register CONFIG1H @ 0x300001
  4452                           ;	unspecified, using default values
  4453                           ;	Clock Out Enable bit
  4454                           ;	CLKOUTEN = 0x1, unprogrammed default
  4455                           ;	Clock Switch Enable bit
  4456                           ;	CSWEN = 0x1, unprogrammed default
  4457                           ;	Fail-Safe Clock Monitor Enable bit
  4458                           ;	FCMEN = 0x1, unprogrammed default
  4459   300001                     	org	3145729
  4460   300001  FF                 	db	255
  4461                           
  4462                           ;Config register CONFIG2L @ 0x300002
  4463                           ;	unspecified, using default values
  4464                           ;	Master Clear Enable bit
  4465                           ;	MCLRE = 0x1, unprogrammed default
  4466                           ;	Power-up Timer Enable bit
  4467                           ;	PWRTE = 0x1, unprogrammed default
  4468                           ;	Low-power BOR enable bit
  4469                           ;	LPBOREN = 0x1, unprogrammed default
  4470                           ;	Brown-out Reset Enable bits
  4471                           ;	BOREN = 0x3, unprogrammed default
  4472   300002                     	org	3145730
  4473   300002  FF                 	db	255
  4474                           
  4475                           ;Config register CONFIG2H @ 0x300003
  4476                           ;	unspecified, using default values
  4477                           ;	Brown Out Reset Voltage selection bits
  4478                           ;	BORV = 0x3, unprogrammed default
  4479                           ;	ZCD Disable bit
  4480                           ;	ZCD = 0x1, unprogrammed default
  4481                           ;	PPSLOCK bit One-Way Set Enable bit
  4482                           ;	PPS1WAY = 0x1, unprogrammed default
  4483                           ;	Stack Full/Underflow Reset Enable bit
  4484                           ;	STVREN = 0x1, unprogrammed default
  4485                           ;	Debugger Enable bit
  4486                           ;	DEBUG = 0x1, unprogrammed default
  4487                           ;	Extended Instruction Set Enable bit
  4488                           ;	XINST = 0x1, unprogrammed default
  4489   300003                     	org	3145731
  4490   300003  FF                 	db	255
  4491                           
  4492                           ;Config register CONFIG3L @ 0x300004
  4493                           ;	WDT Period Select bits
  4494                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4495                           ;	WDT operating mode
  4496                           ;	WDTE = OFF, WDT Disabled
  4497   300004                     	org	3145732
  4498   300004  9F                 	db	159
  4499                           
  4500                           ;Config register CONFIG3H @ 0x300005
  4501                           ;	unspecified, using default values
  4502                           ;	WDT Window Select bits
  4503                           ;	WDTCWS = 0x7, unprogrammed default
  4504                           ;	WDT input clock selector
  4505                           ;	WDTCCS = 0x7, unprogrammed default
  4506   300005                     	org	3145733
  4507   300005  FF                 	db	255
  4508                           
  4509                           ;Config register CONFIG4L @ 0x300006
  4510                           ;	unspecified, using default values
  4511                           ;	Write Protection Block 0
  4512                           ;	WRT0 = 0x1, unprogrammed default
  4513                           ;	Write Protection Block 1
  4514                           ;	WRT1 = 0x1, unprogrammed default
  4515                           ;	Write Protection Block 2
  4516                           ;	WRT2 = 0x1, unprogrammed default
  4517                           ;	Write Protection Block 3
  4518                           ;	WRT3 = 0x1, unprogrammed default
  4519                           ;	Write Protection Block 3
  4520                           ;	WRT4 = 0x1, unprogrammed default
  4521                           ;	Write Protection Block 3
  4522                           ;	WRT5 = 0x1, unprogrammed default
  4523                           ;	Write Protection Block 3
  4524                           ;	WRT6 = 0x1, unprogrammed default
  4525                           ;	Write Protection Block 3
  4526                           ;	WRT7 = 0x1, unprogrammed default
  4527   300006                     	org	3145734
  4528   300006  FF                 	db	255
  4529                           
  4530                           ;Config register CONFIG4H @ 0x300007
  4531                           ;	unspecified, using default values
  4532                           ;	Configuration Register Write Protection bit
  4533                           ;	WRTC = 0x1, unprogrammed default
  4534                           ;	Boot Block Write Protection bit
  4535                           ;	WRTB = 0x1, unprogrammed default
  4536                           ;	Data EEPROM Write Protection bit
  4537                           ;	WRTD = 0x1, unprogrammed default
  4538                           ;	Scanner Enable bit
  4539                           ;	SCANE = 0x1, unprogrammed default
  4540                           ;	Low Voltage Programming Enable bit
  4541                           ;	LVP = 0x1, unprogrammed default
  4542   300007                     	org	3145735
  4543   300007  FF                 	db	255
  4544                           
  4545                           ;Config register CONFIG5L @ 0x300008
  4546                           ;	unspecified, using default values
  4547                           ;	UserNVM Program Memory Code Protection bit
  4548                           ;	CP = 0x1, unprogrammed default
  4549                           ;	DataNVM Memory Code Protection bit
  4550                           ;	CPD = 0x1, unprogrammed default
  4551   300008                     	org	3145736
  4552   300008  FF                 	db	255
  4553                           
  4554                           ;Config register CONFIG5H @ 0x300009
  4555                           ;	unspecified, using default values
  4556   300009                     	org	3145737
  4557   300009  FF                 	db	255
  4558                           
  4559                           ;Config register CONFIG6L @ 0x30000A
  4560                           ;	unspecified, using default values
  4561                           ;	Table Read Protection Block 0
  4562                           ;	EBTR0 = 0x1, unprogrammed default
  4563                           ;	Table Read Protection Block 1
  4564                           ;	EBTR1 = 0x1, unprogrammed default
  4565                           ;	Table Read Protection Block 2
  4566                           ;	EBTR2 = 0x1, unprogrammed default
  4567                           ;	Table Read Protection Block 3
  4568                           ;	EBTR3 = 0x1, unprogrammed default
  4569                           ;	Table Read Protection Block 4
  4570                           ;	EBTR4 = 0x1, unprogrammed default
  4571                           ;	Table Read Protection Block 5
  4572                           ;	EBTR5 = 0x1, unprogrammed default
  4573                           ;	Table Read Protection Block 6
  4574                           ;	EBTR6 = 0x1, unprogrammed default
  4575                           ;	Table Read Protection Block 7
  4576                           ;	EBTR7 = 0x1, unprogrammed default
  4577   30000A                     	org	3145738
  4578   30000A  FF                 	db	255
  4579                           
  4580                           ;Config register CONFIG6H @ 0x30000B
  4581                           ;	unspecified, using default values
  4582                           ;	Boot Block Table Read Protection bit
  4583                           ;	EBTRB = 0x1, unprogrammed default
  4584   30000B                     	org	3145739
  4585   30000B  FF                 	db	255
  4586                           tosu	equ	0xFFF
  4587                           tosh	equ	0xFFE
  4588                           tosl	equ	0xFFD
  4589                           stkptr	equ	0xFFC
  4590                           pclatu	equ	0xFFB
  4591                           pclath	equ	0xFFA
  4592                           pcl	equ	0xFF9
  4593                           tblptru	equ	0xFF8
  4594                           tblptrh	equ	0xFF7
  4595                           tblptrl	equ	0xFF6
  4596                           tablat	equ	0xFF5
  4597                           prodh	equ	0xFF4
  4598                           prodl	equ	0xFF3
  4599                           indf0	equ	0xFEF
  4600                           postinc0	equ	0xFEE
  4601                           postdec0	equ	0xFED
  4602                           preinc0	equ	0xFEC
  4603                           plusw0	equ	0xFEB
  4604                           fsr0h	equ	0xFEA
  4605                           fsr0l	equ	0xFE9
  4606                           wreg	equ	0xFE8
  4607                           indf1	equ	0xFE7
  4608                           postinc1	equ	0xFE6
  4609                           postdec1	equ	0xFE5
  4610                           preinc1	equ	0xFE4
  4611                           plusw1	equ	0xFE3
  4612                           fsr1h	equ	0xFE2
  4613                           fsr1l	equ	0xFE1
  4614                           bsr	equ	0xFE0
  4615                           indf2	equ	0xFDF
  4616                           postinc2	equ	0xFDE
  4617                           postdec2	equ	0xFDD
  4618                           preinc2	equ	0xFDC
  4619                           plusw2	equ	0xFDB
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         125
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     78      85
    BANK0           160     49      55
    BANK1           256    108     220
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S2370$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2317$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2317$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    reverse@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    reverse@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    reverse@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    fullSpeedAhead@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    uturn@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    uturn@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnRight@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnRight@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    turnLeft@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    norm_stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    stop@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    stop@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorRinit@mR.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    motorLinit@mL.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    S316DC_motor$negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.negDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR4H(BITBIGSFRlllhhll[1]), CCPR2H(BITBIGSFRhlllll[1]), 

    S316DC_motor$posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    setMotorPWM@m.posDutyHighByte	PTR unsigned char  size(2) Largest target is 1
		 -> CCPR3H(BITBIGSFRlllhhll[1]), CCPR1H(BITBIGSFRhlllll[1]), 

    sendStringSerial4@string	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    colorVal2String@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    colorVal2String@buf	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 

    color_read_RGBC@temp	PTR struct RGBC_val size(2) Largest target is 8
		 -> main@RGBC(BANK1[8]), 

    RGBC2Serial@str	PTR unsigned char  size(2) Largest target is 100
		 -> main@buf(BANK1[100]), 


Critical Paths under _main in COMRAM

    _color_read_RGBC->_color_read_Blue
    _color_read_RGBC->_color_read_Clear
    _color_read_RGBC->_color_read_Green
    _color_read_RGBC->_color_read_Red
    _color_read_Red->_I2C_2_Master_Read
    _color_read_Green->_I2C_2_Master_Read
    _color_read_Clear->_I2C_2_Master_Read
    _color_read_Blue->_I2C_2_Master_Read
    _I2C_2_Master_RepStart->_I2C_2_Master_Idle
    _I2C_2_Master_Read->_I2C_2_Master_Idle
    _color_click_init->_color_writetoaddr
    _color_writetoaddr->_I2C_2_Master_Write
    _I2C_2_Master_Write->_I2C_2_Master_Idle
    _I2C_2_Master_Stop->_I2C_2_Master_Idle
    _I2C_2_Master_Start->_I2C_2_Master_Idle
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _RGBC2Serial->_sendStringSerial4
    _sendStringSerial4->_sendCharSerial4

Critical Paths under _HighISR in COMRAM

    _Color_Interrupts_clear->_Color_Interrupts_threshold
    _persistence_register->i2_color_writetoaddr
    _Color_Interrupts_threshold->i2_color_writetoaddr
    _Color_Interrupts_init->i2_color_writetoaddr
    i2_color_writetoaddr->i2_I2C_2_Master_Write
    i2_I2C_2_Master_Write->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Stop->i2_I2C_2_Master_Idle
    i2_I2C_2_Master_Start->i2_I2C_2_Master_Idle

Critical Paths under _main in BANK0

    _main->_colorVal2String
    _colorVal2String->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HighISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HighISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HighISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HighISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HighISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HighISR in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               110   110      0    9771
                                             47 BANK0      2     2      0
                                              0 BANK1    108   108      0
                        _RGBC2Serial
                    _colorVal2String
                   _color_click_init
                    _color_read_RGBC
                         _initUSART4
                        _tricolorLED
 ---------------------------------------------------------------------------------
 (1) _tricolorLED                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUSART4                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _color_read_RGBC                                      2     0      2     870
                                             19 COMRAM     2     0      2
                    _color_read_Blue
                   _color_read_Clear
                   _color_read_Green
                     _color_read_Red
 ---------------------------------------------------------------------------------
 (2) _color_read_Red                                       7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Green                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Clear                                     7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (2) _color_read_Blue                                      7     5      2     164
                                             12 COMRAM     7     5      2
                  _I2C_2_Master_Read
              _I2C_2_Master_RepStart
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_RepStart                                0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Read                                    3     3      0      65
                                              9 COMRAM     3     3      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (1) _color_click_init                                     1     1      0     693
                                             12 COMRAM     1     1      0
                  _I2C_2_Master_Init
                  _color_writetoaddr
 ---------------------------------------------------------------------------------
 (2) _color_writetoaddr                                    2     1      1     693
                                             10 COMRAM     2     1      1
                 _I2C_2_Master_Start
                  _I2C_2_Master_Stop
                 _I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Write                                   1     1      0      31
                                              9 COMRAM     1     1      0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Stop                                    0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (3) _I2C_2_Master_Start                                   0     0      0       0
                  _I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (4) _I2C_2_Master_Idle                                    1     1      0       0
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_2_Master_Init                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _colorVal2String                                      4     0      4    7658
                                             43 BANK0      4     0      4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    15     12    7316
                                             18 BANK0     25    13     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6830
                                             10 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           23    17      6    6369
                                             70 COMRAM     8     2      6
                                              0 BANK0     10    10      0
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                35    25     10    4802
                                             35 COMRAM    35    25     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2533
                                             24 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1177
                                             17 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     857
                                              8 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     183
                                             26 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     613
                                              8 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     625
                                              8 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _RGBC2Serial                                          4     2      2     372
                                             13 COMRAM     4     2      2
                  _sendStringSerial4
 ---------------------------------------------------------------------------------
 (2) _sendStringSerial4                                    4     2      2     251
                                              9 COMRAM     4     2      2
                    _sendCharSerial4
 ---------------------------------------------------------------------------------
 (3) _sendCharSerial4                                      1     1      0      31
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             0     0      0     928
             _Color_Interrupts_clear
 ---------------------------------------------------------------------------------
 (11) _Color_Interrupts_clear                              0     0      0     928
              _Color_Interrupts_init
         _Color_Interrupts_threshold
               _persistence_register
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) _persistence_register                                0     0      0     222
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (12) _Color_Interrupts_threshold                          4     0      4     462
                                              4 COMRAM     4     0      4
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (12) _Color_Interrupts_init                               1     1      0     222
                                              4 COMRAM     1     1      0
                i2_color_writetoaddr
 ---------------------------------------------------------------------------------
 (13) i2_color_writetoaddr                                 2     1      1     222
                                              2 COMRAM     2     1      1
               i2_I2C_2_Master_Start
                i2_I2C_2_Master_Stop
               i2_I2C_2_Master_Write
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Write                                1     1      0      22
                                              1 COMRAM     1     1      0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Stop                                 0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (12) i2_I2C_2_Master_Start                                0     0      0       0
                i2_I2C_2_Master_Idle
 ---------------------------------------------------------------------------------
 (13) i2_I2C_2_Master_Idle                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _RGBC2Serial
     _sendStringSerial4
       _sendCharSerial4
   _colorVal2String
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _color_click_init
     _I2C_2_Master_Init
     _color_writetoaddr
       _I2C_2_Master_Start
         _I2C_2_Master_Idle
       _I2C_2_Master_Stop
         _I2C_2_Master_Idle
       _I2C_2_Master_Write
         _I2C_2_Master_Idle
   _color_read_RGBC
     _color_read_Blue
       _I2C_2_Master_Read
         _I2C_2_Master_Idle
       _I2C_2_Master_RepStart
         _I2C_2_Master_Idle
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Clear
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Green
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
     _color_read_Red
       _I2C_2_Master_Read
       _I2C_2_Master_RepStart
       _I2C_2_Master_Start
       _I2C_2_Master_Stop
       _I2C_2_Master_Write
   _initUSART4
   _tricolorLED

 _HighISR (ROOT)
   _Color_Interrupts_clear
     _Color_Interrupts_init
       i2_color_writetoaddr
         i2_I2C_2_Master_Start
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Stop
           i2_I2C_2_Master_Idle
         i2_I2C_2_Master_Write
           i2_I2C_2_Master_Idle
     _Color_Interrupts_threshold
       i2_color_writetoaddr
     _persistence_register
       i2_color_writetoaddr
     i2_I2C_2_Master_Start
     i2_I2C_2_Master_Stop
     i2_I2C_2_Master_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      63        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6C      DC       7       85.9%
BITBANK13           EA      0       0      30        0.0%
BANK13              EA      0       0      31        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      37       5       34.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4E      55       1       90.4%
BITBIGSFRlllhhh     52      0       0      41        0.0%
BITBIGSFRlllhhl     37      0       0      43        0.0%
BITBIGSFRlllllh     2D      0       0      46        0.0%
BITBIGSFRllllll     2A      0       0      54        0.0%
BITBIGSFRllllll     26      0       0      61        0.0%
BITBIGSFRhlllll     1D      0       0      38        0.0%
BITBIGSFRhlh        1B      0       0      33        0.0%
BITBIGSFRhllh       13      0       0      34        0.0%
BITBIGSFRllllll     11      0       0      48        0.0%
BITBIGSFRllllll     11      0       0      49        0.0%
BITBIGSFRhlllhh      E      0       0      35        0.0%
BITBIGSFRhh          D      0       0      32        0.0%
BITBIGSFRllllll      C      0       0      47        0.0%
BITBIGSFRllllll      9      0       0      58        0.0%
BITBIGSFRlllhll      8      0       0      44        0.0%
BITBIGSFRllllll      6      0       0      60        0.0%
BITBIGSFRllllll      6      0       0      53        0.0%
BITBIGSFRllllll      5      0       0      52        0.0%
BITBIGSFRllllll      5      0       0      56        0.0%
BITBIGSFRllllll      3      0       0      57        0.0%
BITBIGSFRllllll      3      0       0      55        0.0%
BITBIGSFRllllll      3      0       0      51        0.0%
BITBIGSFRlllhhl      2      0       0      42        0.0%
BITBIGSFRhllllh      2      0       0      37        0.0%
BITBIGSFRllh         2      0       0      40        0.0%
BITBIGSFRhlllhl      1      0       0      36        0.0%
BITBIGSFRllllll      1      0       0      50        0.0%
BITBIGSFRllllll      1      0       0      59        0.0%
BITBIGSFRllllh       1      0       0      45        0.0%
BITBIGSFRlhh         1      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     168      62        0.0%
DATA                 0      0     168       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Dec 09 19:01:00 2022

                          _color_read_Red 17A8                           _color_read_RGBC 16F8  
                         _color_read_Blue 1898                                        l61 1AA8  
                                      l70 1846                                        l64 1BE6  
                                      l73 18E6                                        l82 1754  
                                      l67 17F6                                        l76 1896  
                                      l85 16F6                                        l79 1BA4  
                                      l88 1C4E                          _color_read_Clear 1848  
                        _color_read_Green 17F8                                       l131 1B56  
                                     l140 1C86                                       l125 1B04  
                                     l134 1C90                                       l143 1C5A  
                                     l128 1B30                                       l137 1C7C  
                                     l225 1BC6                                       l234 1C24  
                                     l146 19BC                                       l243 1A3C  
                                     l237 1C38                                       l571 1216  
                                     l584 137A                                       _abs 19BE  
                                     _pad 161A                               _tricolorLED 1C3A  
                     i2_color_writetoaddr 1BE8                                       wreg 000FE8  
                                    l1200 19FC                                      ?_abs 001B  
                                    l1212 1592                                      l1220 197A  
                                    l1223 1CA6                                      l1135 17A6  
                                    l1161 1692                                      l1180 108E  
                                    l2301 10C2                                      l1157 163C  
                                    l1166 0E9E                                      l2311 1104  
                                    l2303 10C6                                      l1168 0EA6  
                                    l2321 115E                                      l2313 1122  
                                    l2305 10D4                                      l1169 0EEC  
                                    l2401 0E78                                      l1193 1936  
                                    l2323 118C                                      l2315 112A  
                                    l2331 11C6                                      l2307 10F4  
                                    l2411 0ED4                                      l2403 0E92  
                                    l1187 14C8                                      l2333 11D6  
                                    l2325 11AC                                      l2317 113E  
                                    l2309 10F8                                      l2341 121C  
                                    l1197 19F4                                      l2421 0F04  
                                    l2413 0EE0                                      l2405 0EAE  
                                    l2501 1992                                      l2511 1C34  
                                    l2335 11F6                                      l2327 11AE  
                                    l2319 114C                                      l2351 127C  
                                    l2343 122A                                      l2431 1010  
                                    l2423 0F86                                      l2415 0EE8  
                                    l2407 0EBE                                      l2503 19B8  
                                    l2329 11C0                                      l2361 12F2  
                                    l2353 129A                                      l2345 124A  
                                    l2281 1516                                      l2273 14CA  
                                    l2441 106E                                      l2433 102E  
                                    l2425 0F8C                                      l2417 0EF4  
                                    l2409 0EC4                                      l2513 18E8  
                                    l2505 19BA                                      l2601 1C3A  
                                    l2371 135A                                      l2363 1312  
                                    l2355 12A2                                      l2347 124E  
                                    l2339 1218                                      l2283 154C  
                                    l2275 14DC                                      l2291 1956  
                                    l2435 1048                                      l2427 0F92  
                                    l2419 0EFE                                      l2451 13A0  
                                    l2515 18F4                                      l2531 1AF0  
                                    l2523 1ADC                                      l2611 1BBE  
                                    l2603 1BA6                                      l2509 1C24  
                                    l2365 1324                                      l2357 12B6  
                                    l2349 125C                                      l2277 14EE  
                                    l2293 195A                                      l2381 1648  
                                    l2437 1058                                      l2429 0FF6  
                                    l2461 13EC                                      l2453 13AE  
                                    l2517 1910                                      l2533 1AF2  
                                    l2525 1AE6                                      l2445 1B30  
                                    l2613 1BC0                                      l2605 1BB0  
                                    l2621 1598                                      l2295 1090  
                                    l2359 12C4                                      l2367 132A  
                                    l2391 19D8                                      l2279 14F8  
                                    l2287 1938                                      l2383 165C  
                                    l2375 161A                                      l2439 105E  
                                    l2463 1408                                      l2455 13BC  
                                    l2519 192C                                      l2527 1AEC  
                                    l2447 1B40                                      l2535 1BCA  
                                    l2551 18DE                                      l2543 17F8  
                                    l2615 1BC2                                      l2607 1BB2  
                                    l2631 15B0                                      l2623 159A  
                                    l2561 19FE                                      l2297 1094  
                                    l2369 133A                                      l2289 1944  
                                    l2385 1660                                      l2377 1628  
                                    l2393 0E14                                      l2465 145E  
                                    l2457 13C0                                      l2473 14A0  
                                    l2449 137C                                      l2529 1AEE  
                                    l2481 1C8C                                      l2545 183E  
                                    l2537 17A8                                      l2617 1BC4  
                                    l2609 1BBC                                      l2633 15D8  
                                    l2625 159C                                      l2563 1A0A  
                                    l2299 10A2                                      l2387 167E  
                                    l2379 1634                                      l2395 0E34  
                                    l2459 13D0                                      l2571 1768  
                                    l2483 1C52                                      l2491 1C74  
                                    l2555 1848                                      l2539 17EE  
                                    l2635 15F0                                      l2627 15A0  
                                    l2619 1594                                      l2565 1A1C  
                                    l2389 19BE                                      l2397 0E48  
                                    l2469 148E                                      l2573 1770  
                                    l2485 1C56                                      l2581 1A76  
                                    l2493 1C78                                      l2549 1898  
                                    l2557 188E                                      l2637 1606  
                                    l2629 15A4                                      l2567 1A20  
                                    l2591 1B80                                      l2399 0E58  
                                    l2575 1778                                      l2479 1C88  
                                    l2487 1C7E                                      l2583 1A7A  
                                    l2495 197E                                      l2593 1B98  
                                    l2577 1794                                      l2569 1756  
                                    l2489 1C82                                      l2585 1A84  
                                    l2497 1982                                      l2587 1A94  
                                    l2499 198A                                      l2595 16F8  
                                    l2597 1694                                      l2589 1A9E  
                                    ?_pad 0019                                      STR_1 0E01  
                            ?_RGBC2Serial 000E                                      u1300 1122  
                                    u1220 14DC                                      u1301 111E  
                                    u1221 14D8                                      u1310 114C  
                                    u1230 14EE                                      u1311 1148  
                                    u1231 14EA                                      u1320 118C  
                                    u1240 1516                                      u1400 1628  
                                    u1321 1188                                      u1241 1512  
                                    u1401 1624                                      u1330 11D6  
                                    u1250 154C                                      u1410 167E  
                                    u1331 11D2                                      u1251 1548  
                                    u1411 167A                                      u1340 122A  
                                    u1420 19D8                                      u1260 197A  
                                    u1500 102E                                      u1341 1226  
                                    u1421 19D4                                      u1261 1976  
                                    u1501 102A                                      u1270 10A2  
                                    u1350 125C                                      u1510 1048  
                                    u1430 0E44                                      u1271 109E  
                                    u1351 1258                                      u1511 1044  
                                    u1431 0E3E                                      u1600 1C34  
                                    u1280 10D4                                      u1360 129A  
                                    u1520 1058                                      u1440 0E46  
                            _BAUD4CONbits 000EE9                                      u1601 1C30  
                                    u1281 10D0                                      u1361 1296  
                                    u1521 1054                                      u1370 12C4  
                                    u1450 0E58                                      u1610 192C  
                                    u1530 1B40                                      u1291 10FE  
                                    u1371 12C0                                      u1451 0E54  
                                    u1611 1928                                      u1531 1B3C  
                                    u1620 1A3C                                      u1380 12F2  
                                    u1460 0E92                                      u1540 1B56  
                                    u1621 1A38                                      u1381 12EE  
                                    u1461 0E8E                                      u1541 1B52  
                                    u1390 133A                                      u1470 0EBE  
                                    u1550 13A0                                      u1630 15C4  
                                    u1391 1336                                      u1471 0EBA  
                                    u1551 139C                                      u1631 15BA  
                                    u1480 0ED4                                      u1560 13EC  
                                    u1481 0ED0                                      u1561 13E8  
                                    u1490 1010                                      u1570 1408  
                                    _T2PR 000FBC                                      u1491 100C  
                                    u1571 1404                                      u1580 19A6  
                                    u1581 199E                                      u1648 15C8  
                                    u1657 15E4                                      u1667 1A8A  
                                    u1677 1B8A                                      u1598 19A8  
                                    i2l64 1C06                                      abs@a 001B  
                                    _dbuf 0150                                      _main 1594  
                                    _dtoa 0E14                                      _prec 004F  
                                    pad@i 0020                                      pad@p 001D  
                                    fsr1h 000FE2                                      fsr2h 000FDA  
                                    indf2 000FDF                                      fsr1l 000FE1  
                                    pad@w 0022                                      fsr2l 000FD9  
                                    btemp 0056                                      start 0032  
                    ?i2_color_writetoaddr 0003                    __end_of_color_read_Red 17F8  
                         __end_of_HighISR 0032                              ___param_bank 000000  
                                   ??_abs 001D                                     ??_pad 001F  
                        ?_colorVal2String 008B                           __end_of___aodiv 1218  
                                   ?_main 0001                                     ?_dtoa 0024  
                         __end_of___aomod 137C                                     i2l131 1B7E  
                                   i2l140 1C9A                                     i2l134 1CA4  
                                   i2l143 1C72                                     i2l128 1B58  
                                   i2l321 1C20                                     i2l330 1ADA  
                                   i2l324 1B2E                                     i2l327 1C66  
                                   i2l336 002E                              vfpfcnvrt@fmt 0049  
                                   _TMR0H 000FD4                                     _TMR0L 000FD3  
                 __end_of_sendCharSerial4 1C3A                __end_of_I2C_2_Master_Start 1C92  
              __end_of_I2C_2_Master_Write 1C5C                                     _flags 0051  
                                   _fputc 14CA                                     _fputs 1938  
                                   pad@fp 0019                                     _width 0091  
                                   _putch 1CA6                                     dtoa@d 0026  
                                   dtoa@i 0045                                     dtoa@n 003C  
                                   dtoa@p 0038                                     dtoa@s 0044  
                                   dtoa@w 003A                                     tablat 000FF5  
                   _Color_Interrupts_init 1C08                                     ttemp5 0057  
                                   ttemp6 005A                                     ttemp7 005E  
                                   status 000FD8                                     wtemp8 0057  
                         __end_of_sprintf 17A8                   __end_of_color_read_RGBC 1756  
                   ??i2_color_writetoaddr 0004                   __end_of_color_read_Blue 18E8  
                   _I2C_2_Master_RepStart 1C74                           ?_color_read_Red 000D  
                         __initialization 1A3E                              __end_of_main 161A  
                            __end_of_dtoa 1090               ?_Color_Interrupts_threshold 0005  
                                  ??_main 008F                                    ??_dtoa 002E  
                           __activetblptr 000001                                    ?_fputc 0009  
                                  ?_fputs 0012                                    _CCPR1H 000FAA  
                                  _CCPR2H 000FA6                                    _CCPR3H 000F25  
                                  _CCPR4H 000F21                                    ?_putch 0001  
                                  _RC0PPS 000E62                                    _RC4REG 000EE3  
                                  _RE2PPS 000E74                                    _RC7PPS 000E69  
                                  _RD5PPS 000E6F                                    _RE4PPS 000E76  
                                  _RD6PPS 000E70                                    i2l2041 1C96  
                                  i2l2035 1C9C                                    i2l2043 1C6A  
                                  i2l2037 1CA0                                    i2l2045 1C6E  
                                  i2l2205 1AAA                                    i2l2039 1C92  
                                  i2l2151 1C08                                    i2l2153 1C12  
                                  i2l2091 1BEA                                    i2l2155 1B06  
                                  i2l2157 1C5C                                    i2l2271 002A  
                                  i2l2263 000A                                    i2l2265 001A  
                                  i2l2267 001C                                    i2l2269 0026  
                                  _RG6PPS 000E88                                    i2l1997 1B58  
                                  i2l1999 1B68                                 ??_HighISR 0009  
                __end_of_color_click_init 1AAA                                    _RX4PPS 000E15  
                                  _TX4REG 000EE4  Color_Interrupts_threshold@lowerThreshold 0007  
            __end_of_persistence_register 1C68                              _CCPTMRS0bits 000FAD  
                            vfprintf@cfmt 0070                                 ??___aodiv 0019  
                               ??___aomod 0019                                    clear_0 1A44  
                                  clear_1 1A5E                                    isa$std 000001  
                                  pad@buf 001B                                    dtoa@fp 0024  
                                  fputc@c 0009                    _Color_Interrupts_clear 1AAA  
                                  fputs@c 0016                                    fputs@i 0017  
                                  fputs@s 0012                              __mediumconst 0000  
                                  tblptrh 000FF7                                    tblptrl 000FF6  
                                  tblptru 000FF8                          ?_sendCharSerial4 0001  
                                  putch@c 0001                          __end_of_vfprintf 1938  
Color_Interrupts_threshold@upperThreshold 0005                                 ??_sprintf 004F  
              i2color_writetoaddr@address 0004                    ?_Color_Interrupts_init 0001  
                              __accesstop 0060                   __end_of__initialization 1A64  
                __end_of_color_read_Clear 1898                  __end_of_color_read_Green 1848  
                  ?_I2C_2_Master_RepStart 0001                             ___rparam_used 000001  
                        ?_color_read_RGBC 0014                          ?_color_read_Blue 000D  
                          __pcstackCOMRAM 0001                             __end_of_fputc 1594  
                           __end_of_fputs 197C                             __end_of_putch 1CA8  
                            ?_tricolorLED 0001                                   ??_fputc 000D  
                                 ??_fputs 0016                                   ??_putch 0009  
                              __pbssBANK0 0091                                __pbssBANK1 0100  
                       _color_writetoaddr 1BC8                              _T2CLKCONbits 000FBF  
                      ?_color_writetoaddr 000B                       ??_color_writetoaddr 000C  
                                 _SP4BRGH 000EE6                                   _SP4BRGL 000EE5  
                                 _SSP2ADD 000ED6                                   _SSP2BUF 000ED5  
                    _persistence_register 1C5C                    color_writetoaddr@value 000B  
                        ??_color_read_Red 000F                                   _HighISR 0008  
               __end_of_color_writetoaddr 1BE8                        _I2C_2_Master_Start 1C88  
                              _initUSART4 1BA6                       i2_I2C_2_Master_Idle 1B58  
                      _I2C_2_Master_Write 1C50                                   __Hparam 0000  
                     i2_I2C_2_Master_Stop 1C92                                   __Lparam 0000  
                       color_read_Red@tmp 0012                   sendStringSerial4@string 000A  
                                 ___aodiv 1090                                   ___aomod 1218  
                     ?_I2C_2_Master_Start 0001                       ?_I2C_2_Master_Write 0001  
                               ?_vfprintf 006A                              __psmallconst 0E00  
                                 __pcinit 1A3E                                   __ramtop 0E00  
                                 __ptext0 1594                                   __ptext1 1C3A  
                                 __ptext2 1BA6                                   __ptext3 16F8  
                                 __ptext4 17A8                                   __ptext5 17F8  
                                 __ptext6 1848                                   __ptext7 1898  
                                 __ptext8 1C74                                   __ptext9 197C  
                    ?i2_I2C_2_Master_Idle 0001                                 _T2CONbits 000FBD  
                    ?i2_I2C_2_Master_Stop 0001                                 _T2HLTbits 000FBE  
                           _RxBufWriteCnt 0055                     ?_persistence_register 0001  
                                 main@buf 0170                                   _sprintf 1756  
                    ??_I2C_2_Master_Start 000A                      ??_I2C_2_Master_Write 000A  
                    end_of_initialization 1A64               __end_ofi2_color_writetoaddr 1C08  
                                 fputc@fp 000B                                   fputs@fp 0014  
                       ?_color_click_init 0001                        ??_color_click_init 000D  
                       __end_of_vfpfcnvrt 14CA                                   postdec2 000FDD  
                                 postinc0 000FEE                                   postinc1 000FE6  
                                 postinc2 000FDE                          vfpfcnvrt@convarg 0060  
                              ??_vfprintf 004F                             _interrupt_ctr 0093  
                 ?_Color_Interrupts_clear 0001                       color_read_RGBC@temp 0014  
                   ??i2_I2C_2_Master_Idle 0001                     ??i2_I2C_2_Master_Stop 0002  
                 ??_Color_Interrupts_init 0005                                 _TRISAbits 000F81  
                               _TRISBbits 000F82                                 _TRISDbits 000F84  
                               _TRISEbits 000F85                                 _TRISFbits 000F86  
                               _TRISGbits 000F87                                 _TRISHbits 000F88  
                color_writetoaddr@address 000C                   ??_I2C_2_Master_RepStart 000A  
                      sendStringSerial4@i 000C                               _CCP1CONbits 000FAB  
                       ?_color_read_Clear 000D                              _EUSART4RXbuf 013C  
                            _EUSART4TXbuf 0100                               _CCP2CONbits 000FA7  
                       ?_color_read_Green 000D                               _CCP3CONbits 000F26  
                             ?_initUSART4 0001                               _CCP4CONbits 000F22  
               sendCharSerial4@charToSend 0009                        ??_color_read_Clear 000F  
                      ??_color_read_Green 000F            __end_of_Color_Interrupts_clear 1ADC  
                             vfpfcnvrt@ap 004B                               vfpfcnvrt@cp 0068  
                             vfpfcnvrt@fp 0047                       color_read_Clear@tmp 0012  
                     start_initialization 1A3E                    ??_persistence_register 0005  
                             __end_of_abs 19FE                               __end_of_pad 1694  
                           _TxBufWriteCnt 0053                             ??_RGBC2Serial 0010  
                       ??_colorVal2String 004F                       color_read_Green@tmp 0012  
                             vfprintf@fmt 006C             i2I2C_2_Master_Write@data_byte 0002  
            __end_ofi2_I2C_2_Master_Start 1CA6              __end_ofi2_I2C_2_Master_Write 1C74  
                             __pbssCOMRAM 004F                             __pcstackBANK0 0060  
                           __pcstackBANK1 0170                          ___aodiv@dividend 0009  
                                ?_HighISR 0001                       __end_of_RGBC2Serial 1BA6  
                               _dtoa$2398 0036                                 __pintcode 0008  
                                ?___aodiv 0009                                  ?___aomod 0009  
                        ___aodiv@quotient 001B              ??_Color_Interrupts_threshold 0009  
                    I2C_2_Master_Read@ack 000B                      I2C_2_Master_Read@tmp 000C  
                             __smallconst 0E00                         _I2C_2_Master_Idle 1B30  
                       _I2C_2_Master_Init 1ADC                         _I2C_2_Master_Read 197C  
                       _I2C_2_Master_Stop 1C7E                              _RxBufReadCnt 0054  
                      ?_I2C_2_Master_Idle 0001                        ?_I2C_2_Master_Init 0001  
                      ?_I2C_2_Master_Read 0001                        ?_I2C_2_Master_Stop 0001  
                                ?_sprintf 0072                         _sendStringSerial4 19FE  
                     ??_I2C_2_Master_Idle 0009                       ??_I2C_2_Master_Init 0009  
                     ??_I2C_2_Master_Read 000A                                  _LATAbits 000F79  
                     ??_I2C_2_Master_Stop 000A                                  _LATDbits 000F7C  
                                _LATEbits 000F7D                                  _LATFbits 000F7E  
                                _LATGbits 000F7F                                  _LATHbits 000F80  
                                _IPR0bits 000E1F                                  _PIE0bits 000E29  
                      ?_sendStringSerial4 000A                                  _PIE4bits 000E2D  
                                i2u102_40 1B68                                  i2u102_41 1B64  
                                i2u103_40 1B7E                                  i2u103_41 1B7A  
                                i2u121_40 001A                                  i2u121_41 0016  
                                _PIR0bits 000E33                                  i2u168_47 1C18  
                                _PIR4bits 000E37                         ??_sendCharSerial4 0009  
                                _SSP2CON2 000EDA                       ??_sendStringSerial4 000C  
                                _SSP2STAT 000ED8                                 _vfpfcnvrt 137C  
               __end_of_I2C_2_Master_Idle 1B58                 __end_of_I2C_2_Master_Init 1B06  
               __end_of_I2C_2_Master_Read 19BE                 __end_of_I2C_2_Master_Stop 1C88  
             I2C_2_Master_Write@data_byte 000A                         ??_color_read_RGBC 0016  
                       ??_color_read_Blue 000F                              _TxBufReadCnt 0052  
                i2color_writetoaddr@value 0003             __end_of_Color_Interrupts_init 1C22  
               __end_of_sendStringSerial4 1A3E                               _RGBC2Serial 1B80  
           __end_of_I2C_2_Master_RepStart 1C7E                        color_read_Blue@tmp 0012  
                            ??_initUSART4 0009                      i2_I2C_2_Master_Start 1C9C  
                     colorVal2String@temp 008D                      i2_I2C_2_Master_Write 1C68  
                                __Hrparam 0000                                vfprintf@ap 006E  
                                __Lrparam 0000                                vfprintf@fp 006A  
                            __Lsmallconst 0E00               __end_ofi2_I2C_2_Master_Idle 1B80  
             __end_ofi2_I2C_2_Master_Stop 1C9C                                ?_vfpfcnvrt 0047  
                         ___aodiv@divisor 0011                           ___aodiv@counter 0019  
                              _ANSELBbits 000E9A                                _ANSELDbits 000EA7  
                           ??_tricolorLED 0009                                sprintf@fmt 0074  
                         _colorVal2String 1694                                _T0CON0bits 000FD5  
                              _T0CON1bits 000FD6                        __end_of_initUSART4 1BC8  
                                __ptext10 1A76                                  __ptext11 1BC8  
                                __ptext20 137C                                  __ptext12 1C50  
                                __ptext21 0E14                                  __ptext13 1C7E  
                                __ptext30 19FE                                  __ptext22 161A  
                                __ptext14 1C88                                  __ptext31 1C22  
                                __ptext23 1938                                  __ptext15 1B30  
                                __ptext40 1C9C                                  __ptext24 14CA  
                                __ptext16 1ADC                                  __ptext41 1B58  
                                __ptext33 1AAA                                  __ptext25 1CA6  
                                __ptext17 1694                                  __ptext34 1C5C  
                                __ptext26 19BE                                  __ptext18 1756  
                                __ptext35 1B06                                  __ptext27 1218  
                                __ptext19 18E8                                  __ptext36 1C08  
                                __ptext28 1090                                  __ptext37 1BE8  
                                __ptext29 1B80                                  __ptext38 1C68  
                                __ptext39 1C92                              _SSP2CON1bits 000ED9  
                            _SSP2CON2bits 000EDA                     ?i2_I2C_2_Master_Start 0001  
                   ?i2_I2C_2_Master_Write 0001                                  isa$xinst 000000  
                              _RC4STAbits 000EE7                                  main@RGBC 01D4  
                                int$flags 0056                                  _vfprintf 18E8  
      __end_of_Color_Interrupts_threshold 1B30                _Color_Interrupts_threshold 1B06  
                        ___aomod@dividend 0009                                _INTCONbits 000FF2  
                      colorVal2String@buf 008B                       __end_of_tricolorLED 1C50  
                                intlevel2 0000                                 sprintf@ap 007E  
                         ___aomod@divisor 0011                   __end_of_colorVal2String 16F8  
                             ??_vfpfcnvrt 004D                           ___aomod@counter 0019  
                        _color_click_init 1A76                                  sprintf@f 0080  
                                sprintf@s 0072                                _SSP2DATPPS 000E1D  
                              _SSP2CLKPPS 000E1C                            _interrupt_flag 0095  
                              _TX4STAbits 000EE8                              ___aodiv@sign 001A  
                         _sendCharSerial4 1C22                    ??i2_I2C_2_Master_Start 0002  
                  ??i2_I2C_2_Master_Write 0002                  ??_Color_Interrupts_clear 0009  
                          RGBC2Serial@str 000E                              ___aomod@sign 001A  
